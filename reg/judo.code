Code for 1237 routines
--------------------------------------------------
LocRoutine 022276:
  MakeRoutineFrame 0;
  Jump: 022277
LocOp 022277:
  TraceOperation 022277 (Store (Con 215) (Var (Global 26)));
  Let b1 = M[007258];
  Let b2 = M[007259];
  SetByte 007604 b1;
  SetByte 007605 b2;
  TraceOperation 022280 Rfalse;
  PopFrame;
  PopReturnAddress return_address_3;
  SetResult 0;
  JumpIndirect: (return) return_address_3
--------------------------------------------------
LocRoutine 022762:
  MakeRoutineFrame 0;
  Jump: 022763
LocOp 022763:
  TraceOperation 022763 (Jin (Var (Global 131)) (Con 48) (Branch T (Dloc 016002)));
  Let b1 = M[007468];
  Let b2 = M[007469];
  Let b3 = M[Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),6)];
  Let b4 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),6),1)];
  if (Equal(48,MakeHiLo(b3,b4))) {
    Jump: 016002
  } else {
    TraceOperation 022768 (Inc (Var (Global 177)));
    Let b5 = M[007560];
    Let b6 = M[007561];
    if (IsZeroByte(b6)) {
      PopStack popped7;
      PushStack Add(popped7,1);
    } else {
      if (LessThanByte(b6,16)) {
        SetLocal b6 Add(GetLocal(b6),1);
      } else {
        Let b8 = M[Offset(007206,Mul(2,Widen(MinusByte(b6,16))))];
        Let b9 = M[Offset(Offset(007206,Mul(2,Widen(MinusByte(b6,16)))),1)];
        SetByte Offset(007206,Mul(2,Widen(MinusByte(b6,16)))) HiByte(Add(MakeHiLo(b8,b9),1));
        SetByte Offset(Offset(007206,Mul(2,Widen(MinusByte(b6,16)))),1) LoByte(Add(MakeHiLo(b8,b9),1));
      }
    }
    TraceOperation 022770 (Print_ret "       ");
    GamePrint "       \n";
    PopFrame;
    PopReturnAddress return_address_10;
    SetResult 1;
    JumpIndirect: (return) return_address_10
  }
--------------------------------------------------
LocRoutine 022960:
  MakeRoutineFrame 0;
  Jump: 022961
LocOp 022961:
  TraceOperation 022961 (Insert_obj (Var (Global 135)) (Con 101));
  Let b1 = M[007476];
  Let b2 = M[007477];
  Let b3 = M[Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),6)];
  Let b4 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),6),1)];
  if (IsZero(MakeHiLo(b3,b4))) {} else {
    Let b5 = M[Offset(Offset(000378,Mul(MakeHiLo(b3,b4),14)),10)];
    Let b6 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b3,b4),14)),10),1)];
    if (Equal(MakeHiLo(b5,b6),MakeHiLo(b1,b2))) {
      Let b7 = M[Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),8)];
      Let b8 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),8),1)];
      SetByte Offset(Offset(000378,Mul(MakeHiLo(b3,b4),14)),10) b7;
      SetByte Offset(Offset(Offset(000378,Mul(MakeHiLo(b3,b4),14)),10),1) b8;
    } else {
      Let loop_var9 = MakeHiLo(b5,b6);
      Label 10: {
        Let b11 = M[Offset(Offset(000378,Mul(loop_var9,14)),8)];
        Let b12 = M[Offset(Offset(Offset(000378,Mul(loop_var9,14)),8),1)];
        if (Equal(MakeHiLo(b11,b12),MakeHiLo(b1,b2))) {
          Let b13 = M[Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),8)];
          Let b14 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),8),1)];
          SetByte Offset(Offset(000378,Mul(loop_var9,14)),8) b13;
          SetByte Offset(Offset(Offset(000378,Mul(loop_var9,14)),8),1) b14;
        } else {
          Assign loop_var9 = MakeHiLo(b11,b12);
          Goto: Label 10
        }
      }
    }
  }
  SetByte Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),6) 0;
  SetByte Offset(Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),6),1) 101;
  Let b15 = M[001802];
  Let b16 = M[001803];
  SetByte Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),8) b15;
  SetByte Offset(Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),8),1) b16;
  SetByte 001802 b1;
  SetByte 001803 b2;
  TraceOperation 022964 Show_status;
  Note "Show_status";
  TraceOperation 022965 (Ret (Var (Global 9)));
  Let b17 = M[007224];
  Let b18 = M[007225];
  PopFrame;
  PopReturnAddress return_address_19;
  SetResult MakeHiLo(b17,b18);
  JumpIndirect: (return) return_address_19
--------------------------------------------------
LocRoutine 022978:
  MakeRoutineFrame 0;
  Jump: 022979
LocOp 022979:
  TraceOperation 022979 (Insert_obj (Var (Global 138)) (Con 79));
  Let b1 = M[007482];
  Let b2 = M[007483];
  Let b3 = M[Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),6)];
  Let b4 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),6),1)];
  if (IsZero(MakeHiLo(b3,b4))) {} else {
    Let b5 = M[Offset(Offset(000378,Mul(MakeHiLo(b3,b4),14)),10)];
    Let b6 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b3,b4),14)),10),1)];
    if (Equal(MakeHiLo(b5,b6),MakeHiLo(b1,b2))) {
      Let b7 = M[Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),8)];
      Let b8 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),8),1)];
      SetByte Offset(Offset(000378,Mul(MakeHiLo(b3,b4),14)),10) b7;
      SetByte Offset(Offset(Offset(000378,Mul(MakeHiLo(b3,b4),14)),10),1) b8;
    } else {
      Let loop_var9 = MakeHiLo(b5,b6);
      Label 10: {
        Let b11 = M[Offset(Offset(000378,Mul(loop_var9,14)),8)];
        Let b12 = M[Offset(Offset(Offset(000378,Mul(loop_var9,14)),8),1)];
        if (Equal(MakeHiLo(b11,b12),MakeHiLo(b1,b2))) {
          Let b13 = M[Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),8)];
          Let b14 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),8),1)];
          SetByte Offset(Offset(000378,Mul(loop_var9,14)),8) b13;
          SetByte Offset(Offset(Offset(000378,Mul(loop_var9,14)),8),1) b14;
        } else {
          Assign loop_var9 = MakeHiLo(b11,b12);
          Goto: Label 10
        }
      }
    }
  }
  SetByte Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),6) 0;
  SetByte Offset(Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),6),1) 79;
  Let b15 = M[001494];
  Let b16 = M[001495];
  SetByte Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),8) b15;
  SetByte Offset(Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),8),1) b16;
  SetByte 001494 b1;
  SetByte 001495 b2;
  TraceOperation 022982 (Inc_chk (Con 148) (Con 165) (Branch F Dtrue));
  Let b17 = M[007470];
  Let b18 = M[007471];
  SetByte 007470 HiByte(Add(MakeHiLo(b17,b18),1));
  SetByte 007471 LoByte(Add(MakeHiLo(b17,b18),1));
  if (GreaterThanEqual(MakeHiLo(b17,b18),165)) {} else {
    PopFrame;
    PopReturnAddress return_address_19;
  }
  TraceOperation 022986 Rtrue;
  PopFrame;
  PopReturnAddress return_address_20;
  SetResult 1;
  JumpIndirect: (return) return_address_20
--------------------------------------------------
LocRoutine 023464:
  MakeRoutineFrame 0;
  Jump: 023465
LocOp 023465:
  TraceOperation 023465 (Je [Var (Global 7),Var (Global 42)] (Branch T (Dloc 021824)));
  Let b1 = M[007220];
  Let b2 = M[007221];
  Let b3 = M[007290];
  Let b4 = M[007291];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    Jump: 021824
  } else {
    TraceOperation 023470 (Inc (Var (Global 49)));
    Let b5 = M[007304];
    Let b6 = M[007305];
    if (IsZeroByte(b6)) {
      PopStack popped7;
      PushStack Add(popped7,1);
    } else {
      if (LessThanByte(b6,16)) {
        SetLocal b6 Add(GetLocal(b6),1);
      } else {
        Let b8 = M[Offset(007206,Mul(2,Widen(MinusByte(b6,16))))];
        Let b9 = M[Offset(Offset(007206,Mul(2,Widen(MinusByte(b6,16)))),1)];
        SetByte Offset(007206,Mul(2,Widen(MinusByte(b6,16)))) HiByte(Add(MakeHiLo(b8,b9),1));
        SetByte Offset(Offset(007206,Mul(2,Widen(MinusByte(b6,16)))),1) LoByte(Add(MakeHiLo(b8,b9),1));
      }
    }
    TraceOperation 023472 Ret_popped;
    PopStack popped10;
    PopFrame;
    PopReturnAddress return_address_11;
    SetResult popped10;
    JumpIndirect: (return) return_address_11
  }
--------------------------------------------------
LocRoutine 024564:
  MakeRoutineFrame 0;
  Jump: 024565
LocOp 024565:
  TraceOperation 024565 (Print_paddr (Con 28418));
  Note "<static Gettext address>";
  GamePrint "Standard Rules version 2/080430 by Graham Nelson\n";
  TraceOperation 024568 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 024572:
  MakeRoutineFrame 0;
  Jump: 024573
LocOp 024573:
  TraceOperation 024573 (Print_paddr (Con 28429));
  Note "<static Gettext address>";
  GamePrint "Standard Rules version 2/080430 by Graham Nelson\n";
  TraceOperation 024576 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 024580:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 024581
LocOp 024581:
  TraceOperation 024581 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 024584:
  MakeRoutineFrame 0;
  Jump: 024585
LocOp 024585:
  TraceOperation 024585 (Loadw (Con 50) (Con 0) (Global 19));
  SetByte 007244 0;
  SetByte 007245 0;
  TraceOperation 024589 (Loadw (Con 16) (Con 0) Sp);
  PushStack 80;
  TraceOperation 024593 (And (Var Sp) (Con 1) (Global 119));
  PopStack popped1;
  SetByte 007444 HiByte(And(popped1,1));
  SetByte 007445 LoByte(And(popped1,1));
  TraceOperation 024597 (Loadw (Con 8) (Con 0) (Global 120));
  SetByte 007446 83;
  SetByte 007447 194;
  TraceOperation 024601 (Loadb (Var (Global 120)) (Con 0) Sp);
  Let b2 = M[007446];
  Let b3 = M[007447];
  Let b4 = M[Offset(Address(MakeHiLo(b2,b3)),0)];
  PushStack Widen(b4);
  TraceOperation 024605 (Add (Var Sp) (Con 1) Sp);
  PopStack popped5;
  PushStack Add(popped5,1);
  TraceOperation 024609 (Loadb (Var (Global 120)) (Var Sp) (Global 121));
  Let b6 = M[007446];
  Let b7 = M[007447];
  PopStack popped8;
  Let b9 = M[Offset(Address(MakeHiLo(b6,b7)),popped8)];
  SetByte 007448 HiByte(Widen(b9));
  SetByte 007449 LoByte(Widen(b9));
  TraceOperation 024613 (Loadb (Var (Global 120)) (Con 0) Sp);
  Let b10 = M[007446];
  Let b11 = M[007447];
  Let b12 = M[Offset(Address(MakeHiLo(b10,b11)),0)];
  PushStack Widen(b12);
  TraceOperation 024617 (Add (Var (Global 120)) (Var Sp) Sp);
  Let b13 = M[007446];
  Let b14 = M[007447];
  PopStack popped15;
  PushStack Add(MakeHiLo(b13,b14),popped15);
  TraceOperation 024621 (Add (Var Sp) (Con 4) (Global 120));
  PopStack popped16;
  SetByte 007446 HiByte(Add(popped16,4));
  SetByte 007447 LoByte(Add(popped16,4));
  TraceOperation 024625 (Sub (Var (Global 120)) (Con 2) Sp);
  Let b17 = M[007446];
  Let b18 = M[007447];
  PushStack Sub(MakeHiLo(b17,b18),2);
  TraceOperation 024629 (Loadw (Var Sp) (Con 0) Sp);
  PopStack popped19;
  Let b20 = M[Offset(Address(popped19),0)];
  Let b21 = M[Offset(Offset(Address(popped19),0),1)];
  PushStack MakeHiLo(b20,b21);
  TraceOperation 024633 (Mul (Var Sp) (Var (Global 121)) Sp);
  PopStack popped22;
  Let b23 = M[007448];
  Let b24 = M[007449];
  PushStack Mul(popped22,MakeHiLo(b23,b24));
  TraceOperation 024637 (Add (Var (Global 120)) (Var Sp) (Global 122));
  Let b25 = M[007446];
  Let b26 = M[007447];
  PopStack popped27;
  SetByte 007450 HiByte(Add(MakeHiLo(b25,b26),popped27));
  SetByte 007451 LoByte(Add(MakeHiLo(b25,b26),popped27));
  TraceOperation 024641 (Storeb (Con 8498) (Con 0) (Con 120));
  SetByte 008498 120;
  TraceOperation 024647 (Storeb (Con 8621) (Con 0) (Con 120));
  SetByte 008621 120;
  TraceOperation 024653 (Storeb (Con 8744) (Con 0) (Con 120));
  SetByte 008744 120;
  TraceOperation 024659 (Storeb (Con 8867) (Con 0) (Con 15));
  SetByte 008867 15;
  TraceOperation 024665 (Storeb (Con 8932) (Con 0) (Con 15));
  SetByte 008932 15;
  TraceOperation 024671 (Sub (Con 327) (Con 255) (Global 117));
  SetByte 007440 0;
  SetByte 007441 72;
  TraceOperation 024677 Rtrue;
  PopFrame;
  PopReturnAddress return_address_28;
  SetResult 1;
  JumpIndirect: (return) return_address_28
--------------------------------------------------
LocRoutine 024680:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 024681
LocOp 024681:
  TraceOperation 024681 (Print "Release ");
  GamePrint "Release ";
  TraceOperation 024688 (Loadw (Con 2) (Con 0) Sp);
  PushStack 1;
  TraceOperation 024692 (And (Var Sp) (Con 1023) Sp);
  PopStack popped1;
  PushStack And(popped1,1023);
  TraceOperation 024698 (Print_num (Var Sp));
  PopStack popped2;
  GamePrint ShowNumber(popped2);
  TraceOperation 024701 (Print " / Serial number ");
  GamePrint " / Serial number ";
  TraceOperation 024716 (Store (Con 1) (Con 0));
  SetLocal 1 0;
  Jump: 024719
LocOp 024719:
  TraceOperation 024719 (Jl (Var (Local 1)) (Con 6) (Branch F (Dloc 024735)));
  if (LessThan(GetLocal(1),6)) {
    TraceOperation 024723 (Loadb (Con 18) (Var (Local 1)) Sp);
    Let b1 = M[Offset(000018,GetLocal(1))];
    PushStack Widen(b1);
    TraceOperation 024727 (Print_char (Var Sp));
    PopStack popped2;
    GamePrint SingleChar(popped2);
    TraceOperation 024730 (Inc (Con 1));
    SetLocal 1 Add(GetLocal(1),1);
    TraceOperation 024732 (Jump 024719);
    Jump: 024719
  } else {
    Jump: 024735
  }
LocOp 024735:
  TraceOperation 024735 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 024736:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 024737
LocOp 024737:
  TraceOperation 024737 (Jz (Var (Local 1)) (Branch T (Dloc 024743)));
  if (IsZero(GetLocal(1))) {
    Jump: 024743
  } else {
    TraceOperation 024740 (Set_window (Var (Local 1)));
    Note "(Set_window (Var (Local 1)),\"-->\",GetLocal(1))";
    Jump: 024743
  }
LocOp 024743:
  TraceOperation 024743 (Read_char (Con 1) (Local 2));
  Note "Read_char (Con 1) (Local 2)";
  TraceOperation 024747 (Ret (Var (Local 2)));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult GetLocal(2);
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 024764:
  MakeRoutineFrame 0;
  Jump: 024765
LocOp 024765:
  TraceOperation 024765 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 024768:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 024769
LocOp 024769:
  TraceOperation 024769 (Store (Con 252) (Var (Local 1)));
  SetByte 007678 HiByte(GetLocal(1));
  SetByte 007679 LoByte(GetLocal(1));
  TraceOperation 024772 (Storeb (Var (Global 236)) (Con 1) (Con 0));
  Let b1 = M[007678];
  Let b2 = M[007679];
  SetByte Offset(Address(MakeHiLo(b1,b2)),1) 0;
  TraceOperation 024777 (Aread (Var (Global 236)) (Var (Local 2)) (Global 239));
  ReadInputFromUser Nothing user_command_line_3;
  Let b4 = M[007678];
  Let b5 = M[007679];
  Tokenize user_command_line_3 (num_tokens_6,positions7,words8);
  StringBytes user_command_line_3 string_bytes_9;
  Let loop_var10 = 0;
  Label 11: {
    if (Equal(loop_var10,Widen(StringLength(user_command_line_3)))) {
      SetByte Offset(Address(GetLocal(2)),1) num_tokens_6;
      Let loop_var12 = 0;
      Label 13: {
        if (Equal(loop_var12,Widen(num_tokens_6))) {
          TraceOperation 024782 (Store (Con 3) (Con 0));
          SetLocal 3 0;
          TraceOperation 024785 Rtrue;
          PopFrame;
          PopReturnAddress return_address_14;
          SetResult 1;
          JumpIndirect: (return) return_address_14
        } else {
          Let lookee15 = LookupInDict(IndexList(words8,loop_var12));
          SetByte Offset(Offset(Offset(Address(GetLocal(2)),2),Mul(4,loop_var12)),0) HiByte(DeAddress(lookee15));
          SetByte Offset(Offset(Offset(Address(GetLocal(2)),2),Mul(4,loop_var12)),1) LoByte(DeAddress(lookee15));
          SetByte Offset(Offset(Offset(Address(GetLocal(2)),2),Mul(4,loop_var12)),2) StringLength(IndexList(words8,loop_var12));
          SetByte Offset(Offset(Offset(Address(GetLocal(2)),2),Mul(4,loop_var12)),3) IndexList(positions7,loop_var12);
          Assign loop_var12 = Add(loop_var12,1);
          Goto: Label 13
        }
      }
    } else {
      SetByte Offset(Offset(Address(MakeHiLo(b4,b5)),1),loop_var10) IndexList(string_bytes_9,loop_var10);
      Assign loop_var10 = Add(loop_var10,1);
      Goto: Label 11
    }
  }
--------------------------------------------------
LocRoutine 024788:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 024789
LocOp 024789:
  TraceOperation 024789 (Store (Con 3) (Con 0));
  SetLocal 3 0;
  Jump: 024792
LocOp 024792:
  TraceOperation 024792 (Jl (Var (Local 3)) (Con 120) (Branch F (Dloc 024810)));
  if (LessThan(GetLocal(3),120)) {
    TraceOperation 024796 (Loadb (Var (Local 2)) (Var (Local 3)) Sp);
    Let b1 = M[Offset(Address(GetLocal(2)),GetLocal(3))];
    PushStack Widen(b1);
    TraceOperation 024800 (Storeb (Var (Local 1)) (Var (Local 3)) (Var Sp));
    PopStack popped2;
    SetByte Offset(Address(GetLocal(1)),GetLocal(3)) LoByte(popped2);
    TraceOperation 024805 (Inc (Con 3));
    SetLocal 3 Add(GetLocal(3),1);
    TraceOperation 024807 (Jump 024792);
    Jump: 024792
  } else {
    Jump: 024810
  }
LocOp 024810:
  TraceOperation 024810 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 024812:
  MakeRoutineFrame 5;
  if (LessThanByte(num_actuals,5)) {
    SetLocal 5 0;
    if (LessThanByte(num_actuals,4)) {
      SetLocal 4 0;
      if (LessThanByte(num_actuals,3)) {
        SetLocal 3 0;
        if (LessThanByte(num_actuals,2)) {
          SetLocal 2 0;
          if (LessThanByte(num_actuals,1)) {
            SetLocal 1 0;
          }
        }
      }
    }
  }
  Jump: 024813
LocOp 024813:
  TraceOperation 024813 (Output_stream (Con 3) (Just (Var (Local 1))));
  Note "Output_stream (Con 3) (Just (Var (Local 1)))";
  TraceOperation 024817 (Call (Floc 112940) [Var (Local 3)] Sp);
  PushFrame;
  PushReturnAddress 024817;
  SetLocal 1 GetLocal(3);
  MakeRoutineFrame 1;
  Jump: 112941
LocReturn 024817:
  PushStack call_result;
  TraceOperation 024823 (Pull (Con 255));
  PopStack popped1;
  SetByte 007684 HiByte(popped1);
  SetByte 007685 LoByte(popped1);
  TraceOperation 024826 (Je [Var (Global 239),Con 4] (Branch F (Dloc 024835)));
  Let b2 = M[007684];
  Let b3 = M[007685];
  if (Equal(MakeHiLo(b2,b3),4)) {
    TraceOperation 024830 (Print_paddr (Var (Local 3)));
    GamePrint GetText(PackedAddress Z5(GetLocal(3)));
    TraceOperation 024832 (Jump 024871);
    Jump: 024871
  } else {
    Jump: 024835
  }
LocOp 024835:
  TraceOperation 024835 (Je [Var (Global 239),Con 3] (Branch F (Dloc 024847)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),3)) {
    TraceOperation 024839 (CallN (Fvar (Local 3)) [Var (Local 4),Var (Local 5)]);
    if (IsZeroAddress(PackedAddress Z5(GetLocal(3)))) {
      Jump: 024844
    } else {
      PushFrame;
      PushReturnAddress 024839;
      SetLocal 1 GetLocal(4);
      SetLocal 2 GetLocal(5);
      SetNumberActuals 2;
      JumpIndirect: (routine) PackedAddress Z5(GetLocal(3))
    }
  } else {
    Jump: 024847
  }
LocReturn 024839:
  Jump: 024844
LocOp 024844:
  TraceOperation 024844 (Jump 024871);
  Jump: 024871
LocOp 024847:
  TraceOperation 024847 (Je [Var (Global 239),Con 2,Con 1] (Branch F (Dloc 024871)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (LogOr(Equal(MakeHiLo(b1,b2),2),Equal(MakeHiLo(b1,b2),1))) {
    TraceOperation 024853 (Jz (Var (Local 4)) (Branch T (Dloc 024866)));
    if (IsZero(GetLocal(4))) {
      Jump: 024866
    } else {
      TraceOperation 024856 (CallN (Floc 080988) [Var (Local 3),Var (Local 4),Con 1]);
      PushFrame;
      PushReturnAddress 024856;
      SetLocal 1 GetLocal(3);
      SetLocal 2 GetLocal(4);
      SetLocal 3 1;
      MakeRoutineFrame 4;
      SetLocal 4 0;
      Jump: 080989
    }
  } else {
    Jump: 024871
  }
LocReturn 024856:
  TraceOperation 024863 (Jump 024871);
  Jump: 024871
LocOp 024866:
  TraceOperation 024866 (CallN (Floc 082048) [Var (Local 3)]);
  PushFrame;
  PushReturnAddress 024866;
  SetLocal 1 GetLocal(3);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 082049
LocReturn 024866:
  Jump: 024871
LocOp 024871:
  TraceOperation 024871 (Output_stream (Con -3) Nothing);
  Note "Output_stream (Con -3) Nothing";
  TraceOperation 024875 (Loadw (Var (Local 1)) (Con 0) Sp);
  Let b1 = M[Offset(Address(GetLocal(1)),0)];
  Let b2 = M[Offset(Offset(Address(GetLocal(1)),0),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 024879 (Jg (Var Sp) (Var (Local 2)) (Branch F (Dloc 024886)));
  PopStack popped3;
  if (GreaterThan(popped3,GetLocal(2))) {
    TraceOperation 024883 (Print_paddr (Con 28442));
    Note "<static Gettext address>";
    GamePrint "Error: Overflow in VM_PrintToBuffer.\n";
    Jump: 024886
  } else {
    Jump: 024886
  }
LocOp 024886:
  TraceOperation 024886 (Loadw (Var (Local 1)) (Con 0) Sp);
  Let b1 = M[Offset(Address(GetLocal(1)),0)];
  Let b2 = M[Offset(Offset(Address(GetLocal(1)),0),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 024890 Ret_popped;
  PopStack popped3;
  PopFrame;
  PopReturnAddress return_address_4;
  SetResult popped3;
  JumpIndirect: (return) return_address_4
--------------------------------------------------
LocRoutine 024892:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 024893
LocOp 024893:
  TraceOperation 024893 (Loadb (Var (Local 1)) (Con 1) Sp);
  Let b1 = M[Offset(Address(GetLocal(1)),1)];
  PushStack Widen(b1);
  TraceOperation 024897 (Add (Con 2) (Var Sp) Sp);
  PopStack popped2;
  PushStack Add(2,popped2);
  TraceOperation 024901 (Storeb (Var (Local 1)) (Var Sp) (Con 0));
  PopStack popped3;
  SetByte Offset(Address(GetLocal(1)),popped3) 0;
  TraceOperation 024906 (Tokenize (Var (Local 1)) (Var (Local 2)));
  Note "(024906,Tokenize (Var (Local 1)) (Var (Local 2)),\"-->\",GetLocal(1),GetLocal(2))";
  TraceOperation 024910 Rtrue;
  PopFrame;
  PopReturnAddress return_address_4;
  SetResult 1;
  JumpIndirect: (return) return_address_4
--------------------------------------------------
LocRoutine 024912:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 024913
LocOp 024913:
  TraceOperation 024913 (Store (Con 3) (Con 8498));
  SetLocal 3 8498;
  TraceOperation 024918 (Loadb (Var (Local 3)) (Con 1) (Local 4));
  Let b1 = M[Offset(Address(GetLocal(3)),1)];
  SetLocal 4 Widen(b1);
  TraceOperation 024922 (Loadb (Var (Local 3)) (Con 0) Sp);
  Let b2 = M[Offset(Address(GetLocal(3)),0)];
  PushStack Widen(b2);
  TraceOperation 024926 (Jg (Var (Local 4)) (Var Sp) (Branch F (Dloc 024934)));
  PopStack popped3;
  if (GreaterThan(GetLocal(4),popped3)) {
    TraceOperation 024930 (Loadb (Var (Local 3)) (Con 0) (Local 4));
    Let b4 = M[Offset(Address(GetLocal(3)),0)];
    SetLocal 4 Widen(b4);
    Jump: 024934
  } else {
    Jump: 024934
  }
LocOp 024934:
  TraceOperation 024934 (Add (Var (Local 4)) (Con 2) (Local 4));
  SetLocal 4 Add(GetLocal(4),2);
  Jump: 024938
LocOp 024938:
  TraceOperation 024938 (Jg (Var (Local 4)) (Var (Local 1)) (Branch F (Dloc 024960)));
  if (GreaterThan(GetLocal(4),GetLocal(1))) {
    TraceOperation 024942 (Sub (Var (Local 4)) (Con 1) Sp);
    PushStack Sub(GetLocal(4),1);
    TraceOperation 024946 (Loadb (Var (Local 3)) (Var Sp) Sp);
    PopStack popped1;
    Let b2 = M[Offset(Address(GetLocal(3)),popped1)];
    PushStack Widen(b2);
    TraceOperation 024950 (Storeb (Var (Local 3)) (Var (Local 4)) (Var Sp));
    PopStack popped3;
    SetByte Offset(Address(GetLocal(3)),GetLocal(4)) LoByte(popped3);
    TraceOperation 024955 (Dec (Con 4));
    SetLocal 4 Sub(GetLocal(4),1);
    TraceOperation 024957 (Jump 024938);
    Jump: 024938
  } else {
    Jump: 024960
  }
LocOp 024960:
  TraceOperation 024960 (Storeb (Var (Local 3)) (Var (Local 1)) (Var (Local 2)));
  SetByte Offset(Address(GetLocal(3)),GetLocal(1)) LoByte(GetLocal(2));
  TraceOperation 024965 (Loadb (Var (Local 3)) (Con 0) Sp);
  Let b1 = M[Offset(Address(GetLocal(3)),0)];
  PushStack Widen(b1);
  TraceOperation 024969 (Loadb (Var (Local 3)) (Con 1) Sp);
  Let b2 = M[Offset(Address(GetLocal(3)),1)];
  PushStack Widen(b2);
  TraceOperation 024973 (Jl (Var Sp) (Var Sp) (Branch F (Dloc 024994)));
  PopStack popped3;
  PopStack popped4;
  if (LessThan(popped3,popped4)) {
    TraceOperation 024977 (Store (Con 255) (Var (Local 3)));
    SetByte 007684 HiByte(GetLocal(3));
    SetByte 007685 LoByte(GetLocal(3));
    TraceOperation 024980 (Store (Con 254) (Con 1));
    SetByte 007682 0;
    SetByte 007683 1;
    TraceOperation 024983 (Loadb (Var (Global 239)) (Var (Global 238)) (Global 237));
    Let b5 = M[007684];
    Let b6 = M[007685];
    Let b7 = M[007682];
    Let b8 = M[007683];
    Let b9 = M[Offset(Address(MakeHiLo(b5,b6)),MakeHiLo(b7,b8))];
    SetByte 007680 HiByte(Widen(b9));
    SetByte 007681 LoByte(Widen(b9));
    TraceOperation 024987 (Inc (Con 253));
    Let b10 = M[007680];
    Let b11 = M[007681];
    SetByte 007680 HiByte(Add(MakeHiLo(b10,b11),1));
    SetByte 007681 LoByte(Add(MakeHiLo(b10,b11),1));
    TraceOperation 024989 (Storeb (Var (Global 239)) (Var (Global 238)) (Var (Global 237)));
    Let b12 = M[007684];
    Let b13 = M[007685];
    Let b14 = M[007682];
    Let b15 = M[007683];
    Let b16 = M[007680];
    Let b17 = M[007681];
    SetByte Offset(Address(MakeHiLo(b12,b13)),MakeHiLo(b14,b15)) b17;
    Jump: 024994
  } else {
    Jump: 024994
  }
LocOp 024994:
  TraceOperation 024994 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 024996:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 024997
LocOp 024997:
  TraceOperation 024997 (Call (Floc 040956) [Var (Local 1),Var (Global 120)] Sp);
  Let b1 = M[007446];
  Let b2 = M[007447];
  PushFrame;
  PushReturnAddress 024997;
  SetLocal 1 GetLocal(1);
  SetLocal 2 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 040957
LocReturn 024997:
  PushStack call_result;
  TraceOperation 025004 (Jl (Var Sp) (Con 0) (Branch T Dtrue));
  PopStack popped1;
  if (LessThan(popped1,0)) {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  } else {
    TraceOperation 025008 (Call (Floc 040956) [Var (Local 1),Var (Global 122)] Sp);
    Let b3 = M[007450];
    Let b4 = M[007451];
    PushFrame;
    PushReturnAddress 025008;
    SetLocal 1 GetLocal(1);
    SetLocal 2 MakeHiLo(b3,b4);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 040957
  }
LocReturn 025008:
  PushStack call_result;
  TraceOperation 025015 (Jl (Var Sp) (Con 0) (Branch F Dtrue));
  PopStack popped1;
  if (LessThan(popped1,0)) {
    TraceOperation 025019 (Sub (Var (Local 1)) (Var (Global 120)) Sp);
    Let b2 = M[007446];
    Let b3 = M[007447];
    PushStack Sub(GetLocal(1),MakeHiLo(b2,b3));
    TraceOperation 025023 (Mod (Var Sp) (Var (Global 121)) Sp);
    PopStack popped4;
    Let b5 = M[007448];
    Let b6 = M[007449];
    PushStack Mod(popped4,MakeHiLo(b5,b6));
    TraceOperation 025027 (Jz (Var Sp) (Branch F Dtrue));
    PopStack popped7;
    if (IsZero(popped7)) {
      TraceOperation 025030 Rfalse;
      PopFrame;
      PopReturnAddress return_address_8;
      SetResult 0;
      JumpIndirect: (return) return_address_8
    } else {
      PopFrame;
      PopReturnAddress return_address_9;
      SetResult 1;
      JumpIndirect: (return) return_address_9
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_10;
    SetResult 1;
    JumpIndirect: (return) return_address_10
  }
--------------------------------------------------
LocRoutine 025032:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 025033
LocOp 025033:
  TraceOperation 025033 (Loadw (Con 8) (Con 0) Sp);
  PushStack 21442;
  TraceOperation 025037 (Add (Var Sp) (Con 7) Sp);
  PopStack popped1;
  PushStack Add(popped1,7);
  TraceOperation 025041 (Sub (Var (Local 1)) (Var Sp) Sp);
  PopStack popped2;
  PushStack Sub(GetLocal(1),popped2);
  TraceOperation 025045 (Div (Var Sp) (Con 9) Sp);
  PopStack popped3;
  PushStack Div(popped3,9);
  TraceOperation 025049 Ret_popped;
  PopStack popped4;
  PopFrame;
  PopReturnAddress return_address_5;
  SetResult popped4;
  JumpIndirect: (return) return_address_5
--------------------------------------------------
LocRoutine 025052:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 025053
LocOp 025053:
  TraceOperation 025053 (Mul (Con 9) (Var (Local 1)) Sp);
  PushStack Mul(9,GetLocal(1));
  TraceOperation 025057 (Loadw (Con 8) (Con 0) Sp);
  PushStack 21442;
  TraceOperation 025061 (Add (Var Sp) (Con 7) Sp);
  PopStack popped1;
  PushStack Add(popped1,7);
  TraceOperation 025065 (Add (Var Sp) (Var Sp) Sp);
  PopStack popped2;
  PopStack popped3;
  PushStack Add(popped2,popped3);
  TraceOperation 025069 Ret_popped;
  PopStack popped4;
  PopFrame;
  PopReturnAddress return_address_5;
  SetResult popped4;
  JumpIndirect: (return) return_address_5
--------------------------------------------------
LocRoutine 025072:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 025073
LocOp 025073:
  TraceOperation 025073 (Loadw (Con 14) (Con 0) Sp);
  PushStack 19869;
  TraceOperation 025077 (Loadw (Var Sp) (Var (Local 1)) Sp);
  PopStack popped1;
  Let b2 = M[Offset(Address(popped1),Mul(2,GetLocal(1)))];
  Let b3 = M[Offset(Offset(Address(popped1),Mul(2,GetLocal(1))),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 025081 Ret_popped;
  PopStack popped4;
  PopFrame;
  PopReturnAddress return_address_5;
  SetResult popped4;
  JumpIndirect: (return) return_address_5
--------------------------------------------------
LocRoutine 025084:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 025085
LocOp 025085:
  TraceOperation 025085 (Loadw (Con 8) (Con 0) (Local 2));
  SetLocal 2 21442;
  TraceOperation 025089 (Store (Con 3) (Con 0));
  SetLocal 3 0;
  Jump: 025092
LocOp 025092:
  TraceOperation 025092 (Add (Var (Local 2)) (Con 5) Sp);
  PushStack Add(GetLocal(2),5);
  TraceOperation 025096 (Loadw (Var Sp) (Con 0) Sp);
  PopStack popped1;
  Let b2 = M[Offset(Address(popped1),0)];
  Let b3 = M[Offset(Offset(Address(popped1),0),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 025100 (Jl (Var (Local 3)) (Var Sp) (Branch F (Dloc 025143)));
  PopStack popped4;
  if (LessThan(GetLocal(3),popped4)) {
    TraceOperation 025104 (Sub (Con 255) (Var (Local 1)) Sp);
    PushStack Sub(255,GetLocal(1));
    TraceOperation 025108 (Mul (Var (Local 3)) (Con 9) Sp);
    PushStack Mul(GetLocal(3),9);
    TraceOperation 025112 (Add (Var Sp) (Con 14) Sp);
    PopStack popped5;
    PushStack Add(popped5,14);
    TraceOperation 025116 (Loadb (Var (Local 2)) (Var Sp) Sp);
    PopStack popped6;
    Let b7 = M[Offset(Address(GetLocal(2)),popped6)];
    PushStack Widen(b7);
    TraceOperation 025120 (Je [Var Sp,Var Sp] (Branch F (Dloc 025138)));
    PopStack popped8;
    PopStack popped9;
    if (Equal(popped8,popped9)) {
      TraceOperation 025124 (Print "'");
      GamePrint "'";
      TraceOperation 025127 (Call (Floc 025052) [Var (Local 3)] Sp);
      PushFrame;
      PushReturnAddress 025127;
      SetLocal 1 GetLocal(3);
      MakeRoutineFrame 1;
      Jump: 025053
    } else {
      Jump: 025138
    }
  } else {
    Jump: 025143
  }
LocReturn 025127:
  PushStack call_result;
  TraceOperation 025133 (Print_addr (Var Sp));
  PopStack popped1;
  GamePrint GetText(Address(popped1));
  TraceOperation 025135 (Print "' ");
  GamePrint "' ";
  Jump: 025138
LocOp 025138:
  TraceOperation 025138 (Inc (Con 3));
  SetLocal 3 Add(GetLocal(3),1);
  TraceOperation 025140 (Jump 025092);
  Jump: 025092
LocOp 025143:
  TraceOperation 025143 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 025144:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 025145
LocOp 025145:
  TraceOperation 025145 (Jg (Var (Local 1)) (Con 0) (Branch F (Dloc 025153)));
  if (GreaterThan(GetLocal(1),0)) {
    TraceOperation 025149 (Sub (Con 0) (Var (Local 1)) (Local 1));
    SetLocal 1 Sub(0,GetLocal(1));
    Jump: 025153
  } else {
    Jump: 025153
  }
LocOp 025153:
  TraceOperation 025153 (Random (Var (Local 1)) (Local 1));
  LetRandom random1 GetLocal(1);
  SetLocal 1 random1;
  TraceOperation 025157 Rtrue;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult 1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 025160:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 025161
LocOp 025161:
  TraceOperation 025161 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 025164:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 025165
LocOp 025165:
  TraceOperation 025165 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 025168:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 025169
LocOp 025169:
  TraceOperation 025169 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 025172:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 025173
LocOp 025173:
  TraceOperation 025173 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 025176:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 025177
LocOp 025177:
  TraceOperation 025177 (Store (Con 255) (Var (Local 1)));
  SetByte 007684 HiByte(GetLocal(1));
  SetByte 007685 LoByte(GetLocal(1));
  TraceOperation 025180 (Je [Var (Global 239),Con 0,Con 6] (Branch F (Dloc 025192)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (LogOr(Equal(MakeHiLo(b1,b2),0),Equal(MakeHiLo(b1,b2),6))) {
    TraceOperation 025186 (Set_text_style (Con 0));
    Note "(\"TextStyle\",(Reverse,False))";
    Note "(\"TextStyle\",(Bold,False))";
    Note "(\"TextStyle\",(Italic,False))";
    Note "(\"TextStyle\",(Fixed,False))";
    TraceOperation 025189 (Jump 025202);
    Jump: 025202
  } else {
    Jump: 025192
  }
LocOp 025192:
  TraceOperation 025192 (Je [Var (Global 239),Con 3,Con 4,Con 5] (Branch F (Dloc 025202)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),3),Equal(MakeHiLo(b1,b2),4)),Equal(MakeHiLo(b1,b2),5))) {
    TraceOperation 025199 (Set_text_style (Con 2));
    Note "(\"TextStyle\",(Reverse,True))";
    Note "(\"TextStyle\",(Bold,False))";
    Note "(\"TextStyle\",(Italic,False))";
    Note "(\"TextStyle\",(Fixed,False))";
    Jump: 025202
  } else {
    Jump: 025202
  }
LocOp 025202:
  TraceOperation 025202 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 025204:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 025205
LocOp 025205:
  TraceOperation 025205 (Store (Con 255) (Var (Local 1)));
  SetByte 007684 HiByte(GetLocal(1));
  SetByte 007685 LoByte(GetLocal(1));
  TraceOperation 025208 (Jl (Var (Global 239)) (Con 65) (Branch T (Dloc 025223)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (LessThan(MakeHiLo(b1,b2),65)) {
    Jump: 025223
  } else {
    TraceOperation 025212 (Jg (Var (Global 239)) (Con 90) (Branch T (Dloc 025223)));
    Let b3 = M[007684];
    Let b4 = M[007685];
    if (GreaterThan(MakeHiLo(b3,b4),90)) {
      Jump: 025223
    } else {
      TraceOperation 025216 (Add (Var (Local 1)) (Con 32) (Local 1));
      SetLocal 1 Add(GetLocal(1),32);
      TraceOperation 025220 (Jump 025320);
      Jump: 025320
    }
  }
LocOp 025223:
  TraceOperation 025223 (Je [Var (Global 239),Con 202,Con 204,Con 212] (Branch T (Dloc 025236)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),202),Equal(MakeHiLo(b1,b2),204)),Equal(MakeHiLo(b1,b2),212))) {
    Jump: 025236
  } else {
    TraceOperation 025230 (Je [Var (Global 239),Con 214,Con 221] (Branch F (Dloc 025241)));
    Let b3 = M[007684];
    Let b4 = M[007685];
    if (LogOr(Equal(MakeHiLo(b3,b4),214),Equal(MakeHiLo(b3,b4),221))) {
      Jump: 025236
    } else {
      Jump: 025241
    }
  }
LocOp 025236:
  TraceOperation 025236 (Dec (Con 1));
  SetLocal 1 Sub(GetLocal(1),1);
  TraceOperation 025238 (Jump 025320);
  Jump: 025320
LocOp 025241:
  TraceOperation 025241 (Je [Var (Global 239),Con 217,Con 218] (Branch F (Dloc 025254)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (LogOr(Equal(MakeHiLo(b1,b2),217),Equal(MakeHiLo(b1,b2),218))) {
    TraceOperation 025247 (Sub (Var (Local 1)) (Con 2) (Local 1));
    SetLocal 1 Sub(GetLocal(1),2);
    TraceOperation 025251 (Jump 025320);
    Jump: 025320
  } else {
    Jump: 025254
  }
LocOp 025254:
  TraceOperation 025254 (Jl (Var (Global 239)) (Con 158) (Branch T (Dloc 025262)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (LessThan(MakeHiLo(b1,b2),158)) {
    Jump: 025262
  } else {
    TraceOperation 025258 (Jg (Var (Global 239)) (Con 160) (Branch F (Dloc 025278)));
    Let b3 = M[007684];
    Let b4 = M[007685];
    if (GreaterThan(MakeHiLo(b3,b4),160)) {
      Jump: 025262
    } else {
      Jump: 025278
    }
  }
LocOp 025262:
  TraceOperation 025262 (Jl (Var (Global 239)) (Con 167) (Branch T (Dloc 025270)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (LessThan(MakeHiLo(b1,b2),167)) {
    Jump: 025270
  } else {
    TraceOperation 025266 (Jg (Var (Global 239)) (Con 169) (Branch F (Dloc 025278)));
    Let b3 = M[007684];
    Let b4 = M[007685];
    if (GreaterThan(MakeHiLo(b3,b4),169)) {
      Jump: 025270
    } else {
      Jump: 025278
    }
  }
LocOp 025270:
  TraceOperation 025270 (Jl (Var (Global 239)) (Con 208) (Branch T (Dloc 025285)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (LessThan(MakeHiLo(b1,b2),208)) {
    Jump: 025285
  } else {
    TraceOperation 025274 (Jg (Var (Global 239)) (Con 210) (Branch T (Dloc 025285)));
    Let b3 = M[007684];
    Let b4 = M[007685];
    if (GreaterThan(MakeHiLo(b3,b4),210)) {
      Jump: 025285
    } else {
      Jump: 025278
    }
  }
LocOp 025278:
  TraceOperation 025278 (Sub (Var (Local 1)) (Con 3) (Local 1));
  SetLocal 1 Sub(GetLocal(1),3);
  TraceOperation 025282 (Jump 025320);
  Jump: 025320
LocOp 025285:
  TraceOperation 025285 (Jl (Var (Global 239)) (Con 186) (Branch T (Dloc 025293)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (LessThan(MakeHiLo(b1,b2),186)) {
    Jump: 025293
  } else {
    TraceOperation 025289 (Jg (Var (Global 239)) (Con 190) (Branch F (Dloc 025301)));
    Let b3 = M[007684];
    Let b4 = M[007685];
    if (GreaterThan(MakeHiLo(b3,b4),190)) {
      Jump: 025293
    } else {
      Jump: 025301
    }
  }
LocOp 025293:
  TraceOperation 025293 (Jl (Var (Global 239)) (Con 196) (Branch T (Dloc 025308)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (LessThan(MakeHiLo(b1,b2),196)) {
    Jump: 025308
  } else {
    TraceOperation 025297 (Jg (Var (Global 239)) (Con 200) (Branch T (Dloc 025308)));
    Let b3 = M[007684];
    Let b4 = M[007685];
    if (GreaterThan(MakeHiLo(b3,b4),200)) {
      Jump: 025308
    } else {
      Jump: 025301
    }
  }
LocOp 025301:
  TraceOperation 025301 (Sub (Var (Local 1)) (Con 5) (Local 1));
  SetLocal 1 Sub(GetLocal(1),5);
  TraceOperation 025305 (Jump 025320);
  Jump: 025320
LocOp 025308:
  TraceOperation 025308 (Jl (Var (Global 239)) (Con 175) (Branch T (Dloc 025320)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (LessThan(MakeHiLo(b1,b2),175)) {
    Jump: 025320
  } else {
    TraceOperation 025312 (Jg (Var (Global 239)) (Con 180) (Branch T (Dloc 025320)));
    Let b3 = M[007684];
    Let b4 = M[007685];
    if (GreaterThan(MakeHiLo(b3,b4),180)) {
      Jump: 025320
    } else {
      TraceOperation 025316 (Sub (Var (Local 1)) (Con 6) (Local 1));
      SetLocal 1 Sub(GetLocal(1),6);
      Jump: 025320
    }
  }
LocOp 025320:
  TraceOperation 025320 (Ret (Var (Local 1)));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult GetLocal(1);
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 025324:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 025325
LocOp 025325:
  TraceOperation 025325 (Store (Con 255) (Var (Local 1)));
  SetByte 007684 HiByte(GetLocal(1));
  SetByte 007685 LoByte(GetLocal(1));
  TraceOperation 025328 (Jl (Var (Global 239)) (Con 97) (Branch T (Dloc 025343)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (LessThan(MakeHiLo(b1,b2),97)) {
    Jump: 025343
  } else {
    TraceOperation 025332 (Jg (Var (Global 239)) (Con 122) (Branch T (Dloc 025343)));
    Let b3 = M[007684];
    Let b4 = M[007685];
    if (GreaterThan(MakeHiLo(b3,b4),122)) {
      Jump: 025343
    } else {
      TraceOperation 025336 (Sub (Var (Local 1)) (Con 32) (Local 1));
      SetLocal 1 Sub(GetLocal(1),32);
      TraceOperation 025340 (Jump 025440);
      Jump: 025440
    }
  }
LocOp 025343:
  TraceOperation 025343 (Je [Var (Global 239),Con 201,Con 203,Con 211] (Branch T (Dloc 025356)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),201),Equal(MakeHiLo(b1,b2),203)),Equal(MakeHiLo(b1,b2),211))) {
    Jump: 025356
  } else {
    TraceOperation 025350 (Je [Var (Global 239),Con 213,Con 220] (Branch F (Dloc 025361)));
    Let b3 = M[007684];
    Let b4 = M[007685];
    if (LogOr(Equal(MakeHiLo(b3,b4),213),Equal(MakeHiLo(b3,b4),220))) {
      Jump: 025356
    } else {
      Jump: 025361
    }
  }
LocOp 025356:
  TraceOperation 025356 (Inc (Con 1));
  SetLocal 1 Add(GetLocal(1),1);
  TraceOperation 025358 (Jump 025440);
  Jump: 025440
LocOp 025361:
  TraceOperation 025361 (Je [Var (Global 239),Con 215,Con 216] (Branch F (Dloc 025374)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (LogOr(Equal(MakeHiLo(b1,b2),215),Equal(MakeHiLo(b1,b2),216))) {
    TraceOperation 025367 (Add (Var (Local 1)) (Con 2) (Local 1));
    SetLocal 1 Add(GetLocal(1),2);
    TraceOperation 025371 (Jump 025440);
    Jump: 025440
  } else {
    Jump: 025374
  }
LocOp 025374:
  TraceOperation 025374 (Jl (Var (Global 239)) (Con 155) (Branch T (Dloc 025382)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (LessThan(MakeHiLo(b1,b2),155)) {
    Jump: 025382
  } else {
    TraceOperation 025378 (Jg (Var (Global 239)) (Con 157) (Branch F (Dloc 025398)));
    Let b3 = M[007684];
    Let b4 = M[007685];
    if (GreaterThan(MakeHiLo(b3,b4),157)) {
      Jump: 025382
    } else {
      Jump: 025398
    }
  }
LocOp 025382:
  TraceOperation 025382 (Jl (Var (Global 239)) (Con 164) (Branch T (Dloc 025390)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (LessThan(MakeHiLo(b1,b2),164)) {
    Jump: 025390
  } else {
    TraceOperation 025386 (Jg (Var (Global 239)) (Con 166) (Branch F (Dloc 025398)));
    Let b3 = M[007684];
    Let b4 = M[007685];
    if (GreaterThan(MakeHiLo(b3,b4),166)) {
      Jump: 025390
    } else {
      Jump: 025398
    }
  }
LocOp 025390:
  TraceOperation 025390 (Jl (Var (Global 239)) (Con 205) (Branch T (Dloc 025405)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (LessThan(MakeHiLo(b1,b2),205)) {
    Jump: 025405
  } else {
    TraceOperation 025394 (Jg (Var (Global 239)) (Con 207) (Branch T (Dloc 025405)));
    Let b3 = M[007684];
    Let b4 = M[007685];
    if (GreaterThan(MakeHiLo(b3,b4),207)) {
      Jump: 025405
    } else {
      Jump: 025398
    }
  }
LocOp 025398:
  TraceOperation 025398 (Add (Var (Local 1)) (Con 3) (Local 1));
  SetLocal 1 Add(GetLocal(1),3);
  TraceOperation 025402 (Jump 025440);
  Jump: 025440
LocOp 025405:
  TraceOperation 025405 (Jl (Var (Global 239)) (Con 181) (Branch T (Dloc 025413)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (LessThan(MakeHiLo(b1,b2),181)) {
    Jump: 025413
  } else {
    TraceOperation 025409 (Jg (Var (Global 239)) (Con 185) (Branch F (Dloc 025421)));
    Let b3 = M[007684];
    Let b4 = M[007685];
    if (GreaterThan(MakeHiLo(b3,b4),185)) {
      Jump: 025413
    } else {
      Jump: 025421
    }
  }
LocOp 025413:
  TraceOperation 025413 (Jl (Var (Global 239)) (Con 191) (Branch T (Dloc 025428)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (LessThan(MakeHiLo(b1,b2),191)) {
    Jump: 025428
  } else {
    TraceOperation 025417 (Jg (Var (Global 239)) (Con 195) (Branch T (Dloc 025428)));
    Let b3 = M[007684];
    Let b4 = M[007685];
    if (GreaterThan(MakeHiLo(b3,b4),195)) {
      Jump: 025428
    } else {
      Jump: 025421
    }
  }
LocOp 025421:
  TraceOperation 025421 (Add (Var (Local 1)) (Con 5) (Local 1));
  SetLocal 1 Add(GetLocal(1),5);
  TraceOperation 025425 (Jump 025440);
  Jump: 025440
LocOp 025428:
  TraceOperation 025428 (Jl (Var (Global 239)) (Con 169) (Branch T (Dloc 025440)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (LessThan(MakeHiLo(b1,b2),169)) {
    Jump: 025440
  } else {
    TraceOperation 025432 (Jg (Var (Global 239)) (Con 174) (Branch T (Dloc 025440)));
    Let b3 = M[007684];
    Let b4 = M[007685];
    if (GreaterThan(MakeHiLo(b3,b4),174)) {
      Jump: 025440
    } else {
      TraceOperation 025436 (Add (Var (Local 1)) (Con 6) (Local 1));
      SetLocal 1 Add(GetLocal(1),6);
      Jump: 025440
    }
  }
LocOp 025440:
  TraceOperation 025440 (Ret (Var (Local 1)));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult GetLocal(1);
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 025444:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 025445
LocOp 025445:
  TraceOperation 025445 (Store (Con 255) (Var (Local 1)));
  SetByte 007684 HiByte(GetLocal(1));
  SetByte 007685 LoByte(GetLocal(1));
  TraceOperation 025448 (Je [Var (Global 239),Con 0] (Branch F (Dloc 025459)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),0)) {
    TraceOperation 025452 (Erase_window (Con -1));
    Note "Erase_window (Con -1)";
    TraceOperation 025456 (Jump 025476);
    Jump: 025476
  } else {
    Jump: 025459
  }
LocOp 025459:
  TraceOperation 025459 (Je [Var (Global 239),Con 1] (Branch F (Dloc 025469)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),1)) {
    TraceOperation 025463 (Erase_window (Con 1));
    Note "Erase_window (Con 1)";
    TraceOperation 025466 (Jump 025476);
    Jump: 025476
  } else {
    Jump: 025469
  }
LocOp 025469:
  TraceOperation 025469 (Je [Var (Global 239),Con 2] (Branch F (Dloc 025476)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),2)) {
    TraceOperation 025473 (Erase_window (Con 0));
    Note "Erase_window (Con 0)";
    Jump: 025476
  } else {
    Jump: 025476
  }
LocOp 025476:
  TraceOperation 025476 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 025480:
  MakeRoutineFrame 0;
  Jump: 025481
LocOp 025481:
  TraceOperation 025481 (Loadb (Con 33) (Con 0) Sp);
  PushStack 0;
  TraceOperation 025485 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 025488:
  MakeRoutineFrame 0;
  Jump: 025489
LocOp 025489:
  TraceOperation 025489 (Loadb (Con 32) (Con 0) Sp);
  PushStack 0;
  TraceOperation 025493 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 025496:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 025497
LocOp 025497:
  TraceOperation 025497 (Jz (Var (Global 105)) (Branch T (Dloc 025549)));
  Let b1 = M[007416];
  Let b2 = M[007417];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 025549
  } else {
    TraceOperation 025500 (Jz (Var (Local 1)) (Branch T (Dloc 025549)));
    if (IsZero(GetLocal(1))) {
      Jump: 025549
    } else {
      TraceOperation 025503 (Jz (Var (Local 2)) (Branch T (Dloc 025549)));
      if (IsZero(GetLocal(2))) {
        Jump: 025549
      } else {
        TraceOperation 025506 (Jz (Var (Local 3)) (Branch F (Dloc 025515)));
        if (IsZero(GetLocal(3))) {
          TraceOperation 025509 (Store (Con 119) (Var (Local 2)));
          SetByte 007412 HiByte(GetLocal(2));
          SetByte 007413 LoByte(GetLocal(2));
          TraceOperation 025512 (Store (Con 120) (Var (Local 1)));
          SetByte 007414 HiByte(GetLocal(1));
          SetByte 007415 LoByte(GetLocal(1));
          Jump: 025515
        } else {
          Jump: 025515
        }
      }
    }
  }
LocOp 025515:
  TraceOperation 025515 (Je [Var (Local 3),Con 1] (Branch F (Dloc 025525)));
  if (Equal(GetLocal(3),1)) {
    TraceOperation 025519 (Store (Con 119) (Var (Local 1)));
    SetByte 007412 HiByte(GetLocal(1));
    SetByte 007413 LoByte(GetLocal(1));
    TraceOperation 025522 (Store (Con 120) (Var (Local 2)));
    SetByte 007414 HiByte(GetLocal(2));
    SetByte 007415 LoByte(GetLocal(2));
    Jump: 025525
  } else {
    Jump: 025525
  }
LocOp 025525:
  TraceOperation 025525 (Je [Var (Local 3),Con 0,Con 2] (Branch F (Dloc 025537)));
  if (LogOr(Equal(GetLocal(3),0),Equal(GetLocal(3),2))) {
    TraceOperation 025531 (Store (Con 117) (Var (Local 1)));
    SetByte 007408 HiByte(GetLocal(1));
    SetByte 007409 LoByte(GetLocal(1));
    TraceOperation 025534 (Store (Con 118) (Var (Local 2)));
    SetByte 007410 HiByte(GetLocal(2));
    SetByte 007411 LoByte(GetLocal(2));
    Jump: 025537
  } else {
    Jump: 025537
  }
LocOp 025537:
  TraceOperation 025537 (Jz (Var (Global 106)) (Branch T (Dloc 025546)));
  Let b1 = M[007418];
  Let b2 = M[007419];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 025546
  } else {
    TraceOperation 025540 (Set_colour (Var (Global 103)) (Var (Global 104)));
    Let b3 = M[007412];
    Let b4 = M[007413];
    Let b5 = M[007414];
    Let b6 = M[007415];
    Note "(Set_colour (Var (Global 103)) (Var (Global 104)),\"-->\",MakeHiLo(b3,b4),MakeHiLo(b5,b6))";
    TraceOperation 025543 (Jump 025549);
    Jump: 025549
  }
LocOp 025546:
  TraceOperation 025546 (Set_colour (Var (Global 101)) (Var (Global 102)));
  Let b1 = M[007408];
  Let b2 = M[007409];
  Let b3 = M[007410];
  Let b4 = M[007411];
  Note "(Set_colour (Var (Global 101)) (Var (Global 102)),\"-->\",MakeHiLo(b1,b2),MakeHiLo(b3,b4))";
  Jump: 025549
LocOp 025549:
  TraceOperation 025549 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 025552:
  MakeRoutineFrame 0;
  Jump: 025553
LocOp 025553:
  TraceOperation 025553 (Jz (Var (Global 105)) (Branch T (Dloc 025575)));
  Let b1 = M[007416];
  Let b2 = M[007417];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 025575
  } else {
    TraceOperation 025556 (CallN (Floc 025496) [Var (Global 101),Var (Global 102),Con 2]);
    Let b3 = M[007408];
    Let b4 = M[007409];
    Let b5 = M[007410];
    Let b6 = M[007411];
    PushFrame;
    PushReturnAddress 025556;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 MakeHiLo(b5,b6);
    SetLocal 3 2;
    MakeRoutineFrame 3;
    Jump: 025497
  }
LocReturn 025556:
  TraceOperation 025563 (CallN (Floc 025496) [Var (Global 103),Var (Global 104),Con 1,Con 1]);
  Let b1 = M[007412];
  Let b2 = M[007413];
  Let b3 = M[007414];
  Let b4 = M[007415];
  PushFrame;
  PushReturnAddress 025563;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 MakeHiLo(b3,b4);
  SetLocal 3 1;
  SetLocal 4 1;
  MakeRoutineFrame 3;
  Jump: 025497
LocReturn 025563:
  TraceOperation 025572 (CallN (Floc 025444) []);
  PushFrame;
  PushReturnAddress 025572;
  MakeRoutineFrame 1;
  SetLocal 1 0;
  Jump: 025445
LocReturn 025572:
  Jump: 025575
LocOp 025575:
  TraceOperation 025575 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 025576:
  MakeRoutineFrame 0;
  Jump: 025577
LocOp 025577:
  TraceOperation 025577 (Jz (Var (Global 106)) (Branch T (Dloc 025599)));
  Let b1 = M[007418];
  Let b2 = M[007419];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 025599
  } else {
    TraceOperation 025580 (Jz (Var (Global 105)) (Branch T (Dloc 025593)));
    Let b3 = M[007416];
    Let b4 = M[007417];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 025593
    } else {
      TraceOperation 025583 (Jg (Var (Global 104)) (Con 1) (Branch F (Dloc 025593)));
      Let b5 = M[007414];
      Let b6 = M[007415];
      if (GreaterThan(MakeHiLo(b5,b6),1)) {
        TraceOperation 025587 (Set_colour (Var (Global 101)) (Var (Global 102)));
        Let b7 = M[007408];
        Let b8 = M[007409];
        Let b9 = M[007410];
        Let b10 = M[007411];
        Note "(Set_colour (Var (Global 101)) (Var (Global 102)),\"-->\",MakeHiLo(b7,b8),MakeHiLo(b9,b10))";
        TraceOperation 025590 (Jump 025596);
        Jump: 025596
      } else {
        Jump: 025593
      }
    }
  }
LocOp 025593:
  TraceOperation 025593 (Set_text_style (Con 0));
  Note "(\"TextStyle\",(Reverse,False))";
  Note "(\"TextStyle\",(Bold,False))";
  Note "(\"TextStyle\",(Italic,False))";
  Note "(\"TextStyle\",(Fixed,False))";
  Jump: 025596
LocOp 025596:
  TraceOperation 025596 (Set_window (Con 0));
  Note "(Set_window (Con 0),\"-->\",0)";
  Jump: 025599
LocOp 025599:
  TraceOperation 025599 (Store (Con 122) (Con 0));
  SetByte 007418 0;
  SetByte 007419 0;
  TraceOperation 025602 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 025604:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 025605
LocOp 025605:
  TraceOperation 025605 (Jz (Var (Global 106)) (Branch F (Dloc 025627)));
  Let b1 = M[007418];
  Let b2 = M[007419];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 025608 (Set_window (Con 1));
    Note "(Set_window (Con 1),\"-->\",1)";
    TraceOperation 025611 (Jz (Var (Global 105)) (Branch T (Dloc 025624)));
    Let b3 = M[007416];
    Let b4 = M[007417];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 025624
    } else {
      TraceOperation 025614 (Jg (Var (Global 104)) (Con 1) (Branch F (Dloc 025624)));
      Let b5 = M[007414];
      Let b6 = M[007415];
      if (GreaterThan(MakeHiLo(b5,b6),1)) {
        TraceOperation 025618 (Set_colour (Var (Global 103)) (Var (Global 104)));
        Let b7 = M[007412];
        Let b8 = M[007413];
        Let b9 = M[007414];
        Let b10 = M[007415];
        Note "(Set_colour (Var (Global 103)) (Var (Global 104)),\"-->\",MakeHiLo(b7,b8),MakeHiLo(b9,b10))";
        TraceOperation 025621 (Jump 025627);
        Jump: 025627
      } else {
        Jump: 025624
      }
    }
  } else {
    Jump: 025627
  }
LocOp 025624:
  TraceOperation 025624 (Set_text_style (Con 1));
  Note "(\"TextStyle\",(Reverse,False))";
  Note "(\"TextStyle\",(Bold,False))";
  Note "(\"TextStyle\",(Italic,False))";
  Note "(\"TextStyle\",(Fixed,False))";
  Jump: 025627
LocOp 025627:
  TraceOperation 025627 (Jz (Var (Local 1)) (Branch F (Dloc 025636)));
  if (IsZero(GetLocal(1))) {
    TraceOperation 025630 (Store (Con 1) (Con 1));
    SetLocal 1 1;
    TraceOperation 025633 (Store (Con 2) (Con 1));
    SetLocal 2 1;
    Jump: 025636
  } else {
    Jump: 025636
  }
LocOp 025636:
  TraceOperation 025636 (Set_cursor (Var (Local 1)) (Var (Local 2)));
  Note "(Set_cursor (Var (Local 1)) (Var (Local 2)),\"-->\",GetLocal(1),GetLocal(2))";
  TraceOperation 025640 (Store (Con 122) (Con 1));
  SetByte 007418 0;
  SetByte 007419 1;
  TraceOperation 025643 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 025644:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 025645
LocOp 025645:
  TraceOperation 025645 (Je [Var (Global 107),Var (Local 1)] (Branch T (Dloc 025652)));
  Let b1 = M[007420];
  Let b2 = M[007421];
  if (Equal(MakeHiLo(b1,b2),GetLocal(1))) {
    Jump: 025652
  } else {
    TraceOperation 025649 (Split_window (Var (Local 1)));
    Note "(Split_window (Var (Local 1)),\"-->\",GetLocal(1))";
    Jump: 025652
  }
LocOp 025652:
  TraceOperation 025652 (Store (Con 123) (Var (Local 1)));
  SetByte 007420 HiByte(GetLocal(1));
  SetByte 007421 LoByte(GetLocal(1));
  TraceOperation 025655 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 025660:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 025661
LocOp 025661:
  TraceOperation 025661 (Ret (Var (Local 1)));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult GetLocal(1);
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 025664:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 025665
LocOp 025665:
  TraceOperation 025665 (Save_undo (Global 239));
  SetByte 007684 255;
  SetByte 007685 255;
  TraceOperation 025668 (Je [Con 171,Con 1] (Branch F Dfalse));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
LocReturn 025677:
  TraceOperation 025683 (Call (Floc 051876) [] Sp);
  PushFrame;
  PushReturnAddress 025683;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  SetLocal 1 0;
  Jump: 051877
LocReturn 025683:
  PushStack call_result;
  TraceOperation 025687 (Jz (Var Sp) (Branch T (Dloc 025691)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 025691
  } else {
    TraceOperation 025690 Quit;
    Quit
  }
LocOp 025691:
  TraceOperation 025691 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 025692:
  MakeRoutineFrame 0;
  Jump: 025693
LocOp 025693:
  TraceOperation 025693 (Je [Var (Global 37),Var (Global 31)] (Branch F Dfalse));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 025697 (CallN (Floc 041040) [Con 1,Con 1]);
    PushFrame;
    PushReturnAddress 025697;
    SetLocal 1 1;
    SetLocal 2 1;
    MakeRoutineFrame 4;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 041041
  } else {
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult 0;
    JumpIndirect: (return) return_address_5
  }
LocReturn 025697:
  TraceOperation 025703 (Call (Floc 051876) [] Sp);
  PushFrame;
  PushReturnAddress 025703;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  SetLocal 1 0;
  Jump: 051877
LocReturn 025703:
  PushStack call_result;
  TraceOperation 025707 (Jz (Var Sp) (Branch T (Dloc 025717)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 025717
  } else {
    TraceOperation 025710 Restart;
    Jump: 024557
  }
LocReturn 025711:
  Jump: 025717
LocOp 025717:
  TraceOperation 025717 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 025746:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 025747
LocOp 025747:
  TraceOperation 025747 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 025756:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 025757
LocOp 025757:
  TraceOperation 025757 (Store (Con 255) (Var (Local 1)));
  SetByte 007684 HiByte(GetLocal(1));
  SetByte 007685 LoByte(GetLocal(1));
  TraceOperation 025760 (Je [Var (Global 239),Con 0] (Branch F (Dloc 025773)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),0)) {
    TraceOperation 025764 (CallN (Floc 041040) [Con 3,Con 1]);
    PushFrame;
    PushReturnAddress 025764;
    SetLocal 1 3;
    SetLocal 2 1;
    MakeRoutineFrame 4;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 041041
  } else {
    Jump: 025773
  }
LocReturn 025764:
  TraceOperation 025770 (Jump 025796);
  Jump: 025796
LocOp 025773:
  TraceOperation 025773 (Je [Var (Global 239),Con 1] (Branch F (Dloc 025786)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),1)) {
    TraceOperation 025777 (CallN (Floc 041040) [Con 3,Con 2]);
    PushFrame;
    PushReturnAddress 025777;
    SetLocal 1 3;
    SetLocal 2 2;
    MakeRoutineFrame 4;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 041041
  } else {
    Jump: 025786
  }
LocReturn 025777:
  Jump: 025783
LocOp 025783:
  TraceOperation 025783 (Jump 025796);
  Jump: 025796
LocOp 025786:
  TraceOperation 025786 (Je [Var (Global 239),Con 2] (Branch F (Dloc 025796)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),2)) {
    TraceOperation 025790 (CallN (Floc 041040) [Con 2,Con 2]);
    PushFrame;
    PushReturnAddress 025790;
    SetLocal 1 2;
    SetLocal 2 2;
    MakeRoutineFrame 4;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 041041
  } else {
    Jump: 025796
  }
LocReturn 025790:
  Jump: 025796
LocOp 025796:
  TraceOperation 025796 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 025800:
  MakeRoutineFrame 0;
  Jump: 025801
LocOp 025801:
  TraceOperation 025801 (Je [Var (Global 37),Var (Global 31)] (Branch F Dfalse));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 025805 (Verify (Branch T (Dloc 025810)));
    Note "Verify (Branch T (Dloc 025810))";
    TraceOperation 025807 (Jump 025818);
    Jump: 025818
  } else {
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult 0;
    JumpIndirect: (return) return_address_5
  }
LocOp 025810:
  TraceOperation 025810 (Call (Floc 041040) [Con 4,Con 1] Sp);
  PushFrame;
  PushReturnAddress 025810;
  SetLocal 1 4;
  SetLocal 2 1;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 041041
LocReturn 025810:
  PushStack call_result;
  TraceOperation 025817 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 025818:
  TraceOperation 025818 (CallN (Floc 041040) [Con 4,Con 2]);
  PushFrame;
  PushReturnAddress 025818;
  SetLocal 1 4;
  SetLocal 2 2;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 041041
LocReturn 025818:
  TraceOperation 025824 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 025828:
  MakeRoutineFrame 0;
  Jump: 025829
LocOp 025829:
  TraceOperation 025829 (Je [Var (Global 37),Var (Global 31)] (Branch F Dfalse));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 025833 (Loadw (Con 0) (Con 8) Sp);
    PushStack 80;
    TraceOperation 025837 (And (Var Sp) (Con 1) (Global 119));
    PopStack popped5;
    SetByte 007444 HiByte(And(popped5,1));
    SetByte 007445 LoByte(And(popped5,1));
    TraceOperation 025841 (Jz (Var (Global 119)) (Branch T (Dloc 025852)));
    Let b6 = M[007444];
    Let b7 = M[007445];
    if (IsZero(MakeHiLo(b6,b7))) {
      Jump: 025852
    } else {
      TraceOperation 025844 (Call (Floc 041040) [Con 5,Con 1] Sp);
      PushFrame;
      PushReturnAddress 025844;
      SetLocal 1 5;
      SetLocal 2 1;
      MakeRoutineFrame 4;
      SetLocal 4 0;
      SetLocal 3 0;
      Jump: 041041
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_8;
    SetResult 0;
    JumpIndirect: (return) return_address_8
  }
LocReturn 025844:
  PushStack call_result;
  TraceOperation 025851 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 025852:
  TraceOperation 025852 (Output_stream (Con 2) Nothing);
  Note "Output_stream (Con 2) Nothing";
  TraceOperation 025855 (Loadw (Con 0) (Con 8) Sp);
  PushStack 80;
  TraceOperation 025859 (And (Var Sp) (Con 1) Sp);
  PopStack popped1;
  PushStack And(popped1,1);
  TraceOperation 025863 (Jz (Var Sp) (Branch F (Dloc 025874)));
  PopStack popped2;
  if (IsZero(popped2)) {
    TraceOperation 025866 (Call (Floc 041040) [Con 5,Con 3] Sp);
    PushFrame;
    PushReturnAddress 025866;
    SetLocal 1 5;
    SetLocal 2 3;
    MakeRoutineFrame 4;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 041041
  } else {
    Jump: 025874
  }
LocReturn 025866:
  PushStack call_result;
  TraceOperation 025873 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 025874:
  TraceOperation 025874 (CallN (Floc 041040) [Con 5,Con 2]);
  PushFrame;
  PushReturnAddress 025874;
  SetLocal 1 5;
  SetLocal 2 2;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 041041
LocReturn 025874:
  TraceOperation 025880 (CallN (Floc 056272) []);
  PushFrame;
  PushReturnAddress 025880;
  MakeRoutineFrame 0;
  Jump: 056273
LocReturn 025880:
  TraceOperation 025883 (Store (Con 135) (Con 1));
  SetByte 007444 0;
  SetByte 007445 1;
  TraceOperation 025886 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 025888:
  MakeRoutineFrame 0;
  Jump: 025889
LocOp 025889:
  TraceOperation 025889 (Je [Var (Global 37),Var (Global 31)] (Branch F Dfalse));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 025893 (Loadw (Con 0) (Con 8) Sp);
    PushStack 80;
    TraceOperation 025897 (And (Var Sp) (Con 1) (Global 119));
    PopStack popped5;
    SetByte 007444 HiByte(And(popped5,1));
    SetByte 007445 LoByte(And(popped5,1));
    TraceOperation 025901 (Jz (Var (Global 119)) (Branch F (Dloc 025912)));
    Let b6 = M[007444];
    Let b7 = M[007445];
    if (IsZero(MakeHiLo(b6,b7))) {
      TraceOperation 025904 (Call (Floc 041040) [Con 6,Con 1] Sp);
      PushFrame;
      PushReturnAddress 025904;
      SetLocal 1 6;
      SetLocal 2 1;
      MakeRoutineFrame 4;
      SetLocal 4 0;
      SetLocal 3 0;
      Jump: 041041
    } else {
      Jump: 025912
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_8;
    SetResult 0;
    JumpIndirect: (return) return_address_8
  }
LocReturn 025904:
  PushStack call_result;
  TraceOperation 025911 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 025912:
  TraceOperation 025912 (CallN (Floc 041040) [Con 6,Con 2]);
  PushFrame;
  PushReturnAddress 025912;
  SetLocal 1 6;
  SetLocal 2 2;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 041041
LocReturn 025912:
  TraceOperation 025918 (Output_stream (Con -2) Nothing);
  Note "Output_stream (Con -2) Nothing";
  TraceOperation 025922 (Loadw (Con 0) (Con 8) Sp);
  PushStack 80;
  TraceOperation 025926 (And (Var Sp) (Con 1) Sp);
  PopStack popped1;
  PushStack And(popped1,1);
  TraceOperation 025930 (Jz (Var Sp) (Branch T (Dloc 025941)));
  PopStack popped2;
  if (IsZero(popped2)) {
    Jump: 025941
  } else {
    TraceOperation 025933 (Call (Floc 041040) [Con 6,Con 3] Sp);
    PushFrame;
    PushReturnAddress 025933;
    SetLocal 1 6;
    SetLocal 2 3;
    MakeRoutineFrame 4;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 041041
  }
LocReturn 025933:
  PushStack call_result;
  TraceOperation 025940 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 025941:
  TraceOperation 025941 (Store (Con 135) (Con 0));
  SetByte 007444 0;
  SetByte 007445 0;
  TraceOperation 025944 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 025948:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 025949
LocOp 025949:
  TraceOperation 025949 (Je [Var (Global 37),Var (Global 31)] (Branch F Dfalse));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 025953 (CallN (Floc 080816) []);
    PushFrame;
    PushReturnAddress 025953;
    MakeRoutineFrame 0;
    Jump: 080817
  } else {
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult 0;
    JumpIndirect: (return) return_address_5
  }
LocReturn 025953:
  TraceOperation 025956 (Print "Identification number: ");
  GamePrint "Identification number: ";
  TraceOperation 025975 (Store (Con 1) (Con 6));
  SetLocal 1 6;
  Jump: 025978
LocOp 025978:
  TraceOperation 025978 (Loadb (Con 7686) (Con 0) Sp);
  Let b1 = M[007686];
  PushStack Widen(b1);
  TraceOperation 025984 (Jg (Var (Local 1)) (Var Sp) (Branch T (Dloc 026002)));
  PopStack popped2;
  if (GreaterThan(GetLocal(1),popped2)) {
    Jump: 026002
  } else {
    TraceOperation 025988 (Loadb (Con 7686) (Var (Local 1)) Sp);
    Let b3 = M[Offset(007686,GetLocal(1))];
    PushStack Widen(b3);
    TraceOperation 025994 (Print_char (Var Sp));
    PopStack popped4;
    GamePrint SingleChar(popped4);
    TraceOperation 025997 (Inc (Con 1));
    SetLocal 1 Add(GetLocal(1),1);
    TraceOperation 025999 (Jump 025978);
    Jump: 025978
  }
LocOp 026002:
  TraceOperation 026002 (Print "\n");
  GamePrint "\n";
  TraceOperation 026005 (Store (Con 1) (Con 0));
  SetLocal 1 0;
  TraceOperation 026008 (Jg (Var (Global 19)) (Con 0) (Branch F (Dloc 026076)));
  Let b1 = M[007244];
  Let b2 = M[007245];
  if (GreaterThan(MakeHiLo(b1,b2),0)) {
    TraceOperation 026013 (Print "Standard interpreter ");
    GamePrint "Standard interpreter ";
    TraceOperation 026030 (Div (Var (Global 19)) (Con 256) Sp);
    Let b3 = M[007244];
    Let b4 = M[007245];
    PushStack Div(MakeHiLo(b3,b4),256);
    TraceOperation 026036 (Print_num (Var Sp));
    PopStack popped5;
    GamePrint ShowNumber(popped5);
    TraceOperation 026039 (Print ".");
    GamePrint ".";
    TraceOperation 026042 (Mod (Var (Global 19)) (Con 256) Sp);
    Let b6 = M[007244];
    Let b7 = M[007245];
    PushStack Mod(MakeHiLo(b6,b7),256);
    TraceOperation 026048 (Print_num (Var Sp));
    PopStack popped8;
    GamePrint ShowNumber(popped8);
    TraceOperation 026051 (Print " (");
    GamePrint " (";
    TraceOperation 026054 (Loadb (Con 30) (Con 0) Sp);
    PushStack 0;
    TraceOperation 026058 (Print_num (Var Sp));
    PopStack popped9;
    GamePrint ShowNumber(popped9);
    TraceOperation 026061 (Loadb (Con 31) (Con 0) Sp);
    PushStack 0;
    TraceOperation 026065 (Print_char (Var Sp));
    PopStack popped10;
    GamePrint SingleChar(popped10);
    TraceOperation 026068 (Print ") / ");
    GamePrint ") / ";
    TraceOperation 026073 (Jump 026115);
    Jump: 026115
  } else {
    Jump: 026076
  }
LocOp 026076:
  TraceOperation 026076 (Print "Interpreter ");
  GamePrint "Interpreter ";
  TraceOperation 026087 (Loadb (Con 30) (Con 0) Sp);
  PushStack 0;
  TraceOperation 026091 (Print_num (Var Sp));
  PopStack popped1;
  GamePrint ShowNumber(popped1);
  TraceOperation 026094 (Print " Version ");
  GamePrint " Version ";
  TraceOperation 026103 (Loadb (Con 31) (Con 0) Sp);
  PushStack 0;
  TraceOperation 026107 (Print_char (Var Sp));
  PopStack popped2;
  GamePrint SingleChar(popped2);
  TraceOperation 026110 (Print " / ");
  GamePrint " / ";
  Jump: 026115
LocOp 026115:
  TraceOperation 026115 (Print "Library serial number ");
  GamePrint "Library serial number ";
  TraceOperation 026132 (Print_paddr (Con 28409));
  Note "<static Gettext address>";
  GamePrint "080126";
  TraceOperation 026135 (Print "\n");
  GamePrint "\n";
  TraceOperation 026138 (CallN (Floc 024564) []);
  PushFrame;
  PushReturnAddress 026138;
  MakeRoutineFrame 0;
  Jump: 024565
LocReturn 026138:
  TraceOperation 026141 (Store (Con 20) (Con 1));
  SetByte 007214 0;
  SetByte 007215 1;
  TraceOperation 026144 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 026148:
  MakeRoutineFrame 0;
  Jump: 026149
LocOp 026149:
  TraceOperation 026149 (Loadw (Con 21270) (Var (Global 40)) Sp);
  Let b1 = M[007286];
  Let b2 = M[007287];
  Let b3 = M[Offset(021270,Mul(2,MakeHiLo(b1,b2)))];
  Let b4 = M[Offset(Offset(021270,Mul(2,MakeHiLo(b1,b2))),1)];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 026155 (CallN (Fvar Sp) []);
  PopStack popped5;
  if (IsZeroAddress(PackedAddress Z5(popped5))) {
    Jump: 026157
  } else {
    PushFrame;
    PushReturnAddress 026155;
    SetNumberActuals 0;
    JumpIndirect: (routine) PackedAddress Z5(popped5)
  }
LocReturn 026155:
  Jump: 026157
LocOp 026157:
  TraceOperation 026157 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 026160:
  MakeRoutineFrame 0;
  Jump: 026161
LocOp 026161:
  TraceOperation 026161 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 026164:
  MakeRoutineFrame 0;
  Jump: 026165
LocOp 026165:
  TraceOperation 026165 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 026168:
  MakeRoutineFrame 0;
  Jump: 026169
LocOp 026169:
  TraceOperation 026169 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 026172:
  MakeRoutineFrame 6;
  if (LessThanByte(num_actuals,6)) {
    SetLocal 6 0;
    if (LessThanByte(num_actuals,5)) {
      SetLocal 5 0;
      if (LessThanByte(num_actuals,4)) {
        SetLocal 4 0;
        if (LessThanByte(num_actuals,3)) {
          SetLocal 3 0;
          if (LessThanByte(num_actuals,2)) {
            SetLocal 2 0;
            if (LessThanByte(num_actuals,1)) {
              SetLocal 1 0;
            }
          }
        }
      }
    }
  }
  Jump: 026173
LocOp 026173:
  TraceOperation 026173 (Jl (Var (Local 1)) (Con 1) (Branch T (Dloc 026205)));
  if (LessThan(GetLocal(1),1)) {
    Jump: 026205
  } else {
    TraceOperation 026177 (Jg (Var (Local 1)) (Var (Global 0)) (Branch T (Dloc 026205)));
    Let b1 = M[007206];
    Let b2 = M[007207];
    if (GreaterThan(GetLocal(1),MakeHiLo(b1,b2))) {
      Jump: 026205
    } else {
      TraceOperation 026181 (Inc (Con 6));
      SetLocal 6 Add(GetLocal(6),1);
      TraceOperation 026183 (Je [Var (Local 2),Con 13] (Branch F (Dloc 026194)));
      if (Equal(GetLocal(2),13)) {
        TraceOperation 026189 (Test_attr (Var (Local 1)) (Con 32) (Branch T Dtrue));
        Let b3 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),4)];
        if (TestBit(b3,7)) {
          PopFrame;
          PopReturnAddress return_address_4;
          SetResult 1;
          JumpIndirect: (return) return_address_4
        } else {
          TraceOperation 026193 Rfalse;
          PopFrame;
          PopReturnAddress return_address_5;
          SetResult 0;
          JumpIndirect: (return) return_address_5
        }
      } else {
        Jump: 026194
      }
    }
  }
LocOp 026194:
  TraceOperation 026194 (Je [Var (Local 2),Con 14] (Branch F (Dloc 026205)));
  if (Equal(GetLocal(2),14)) {
    TraceOperation 026200 (Test_attr (Var (Local 1)) (Con 33) (Branch T Dtrue));
    Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),4)];
    if (TestBit(b1,6)) {
      PopFrame;
      PopReturnAddress return_address_2;
      SetResult 1;
      JumpIndirect: (return) return_address_2
    } else {
      TraceOperation 026204 Rfalse;
      PopFrame;
      PopReturnAddress return_address_3;
      SetResult 0;
      JumpIndirect: (return) return_address_3
    }
  } else {
    Jump: 026205
  }
LocOp 026205:
  TraceOperation 026205 (Je [Var (Local 2),Con 2,Con 1] (Branch T (Dloc 026256)));
  if (LogOr(Equal(GetLocal(2),2),Equal(GetLocal(2),1))) {
    Jump: 026256
  } else {
    TraceOperation 026211 (Je [Var (Local 2),Con 3,Con 4] (Branch T (Dloc 026281)));
    if (LogOr(Equal(GetLocal(2),3),Equal(GetLocal(2),4))) {
      Jump: 026281
    } else {
      TraceOperation 026218 (Jin (Var (Local 2)) (Con 1) (Branch F (Dloc 026297)));
      Let b1 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),6)];
      Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(2),14)),6),1)];
      if (Equal(1,MakeHiLo(b1,b2))) {
        TraceOperation 026223 (Jz (Var (Local 6)) (Branch T Dfalse));
        if (IsZero(GetLocal(6))) {
          PopFrame;
          PopReturnAddress return_address_3;
          SetResult 0;
          JumpIndirect: (return) return_address_3
        } else {
          TraceOperation 026226 (Get_prop_addr (Var (Local 1)) (Con 2) (Local 4));
          Let b4 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),12)];
          Let b5 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),12),1)];
          Let b6 = M[Address(MakeHiLo(b4,b5))];
          Let loop_var7 = DeAddress(Offset(Address(MakeHiLo(b4,b5)),Add(Mul(2,Widen(b6)),1)));
          Label 8: {
            Let b9 = M[Address(loop_var7)];
            if (IsZeroByte(b9)) {
              SetLocal 4 0;
            } else {
              if (TestBit(b9,7)) {
                Let b10 = M[Offset(Address(loop_var7),1)];
                if (Equal(2,Widen(BwAnd(b9,63)))) {
                  SetLocal 4 DeAddress(Offset(Address(loop_var7),2));
                } else {
                  Assign loop_var7 = DeAddress(Offset(Offset(Address(loop_var7),2),Widen(BwAnd(b10,63))));
                  Goto: Label 8
                }
              } else {
                if (TestBit(b9,6)) {
                  if (Equal(2,Widen(BwAnd(b9,63)))) {
                    SetLocal 4 DeAddress(Offset(Address(loop_var7),1));
                  } else {
                    Assign loop_var7 = DeAddress(Offset(Offset(Address(loop_var7),1),2));
                    Goto: Label 8
                  }
                } else {
                  if (Equal(2,Widen(BwAnd(b9,63)))) {
                    SetLocal 4 DeAddress(Offset(Address(loop_var7),1));
                  } else {
                    Assign loop_var7 = DeAddress(Offset(Offset(Address(loop_var7),1),1));
                    Goto: Label 8
                  }
                }
              }
            }
          }
          TraceOperation 026230 (Jz (Var (Local 4)) (Branch T Dfalse));
          if (IsZero(GetLocal(4))) {
            PopFrame;
            PopReturnAddress return_address_11;
            SetResult 0;
            JumpIndirect: (return) return_address_11
          } else {
            TraceOperation 026233 (Get_prop_len (Var (Local 4)) (Local 5));
            if (IsZero(GetLocal(4))) {
              SetLocal 5 0;
            } else {
              Let b12 = M[Offset(Address(GetLocal(4)),-1)];
              if (TestBit(b12,7)) {
                Let b13 = M[Offset(Address(GetLocal(4)),-2)];
                if (TestBit(b13,7)) {
                  Let b14 = M[Offset(Offset(Address(GetLocal(4)),-2),1)];
                  SetLocal 5 Widen(BwAnd(b14,63));
                } else {
                  if (TestBit(b13,6)) {
                    SetLocal 5 2;
                  } else {
                    SetLocal 5 1;
                  }
                }
              } else {
                Let b15 = M[Offset(Address(GetLocal(4)),-1)];
                if (TestBit(b15,7)) {
                  Let b16 = M[Offset(Offset(Address(GetLocal(4)),-1),1)];
                  SetLocal 5 Widen(BwAnd(b16,63));
                } else {
                  if (TestBit(b15,6)) {
                    SetLocal 5 2;
                  } else {
                    SetLocal 5 1;
                  }
                }
              }
            }
            TraceOperation 026236 (Div (Var (Local 5)) (Con 2) (Local 5));
            SetLocal 5 Div(GetLocal(5),2);
            Jump: 026240
          }
        }
      } else {
        Jump: 026297
      }
    }
  }
LocOp 026240:
  TraceOperation 026240 (Loadw (Var (Local 4)) (Var (Local 3)) Sp);
  Let b1 = M[Offset(Address(GetLocal(4)),Mul(2,GetLocal(3)))];
  Let b2 = M[Offset(Offset(Address(GetLocal(4)),Mul(2,GetLocal(3))),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 026244 (Je [Var Sp,Var (Local 2)] (Branch T Dtrue));
  PopStack popped3;
  if (Equal(popped3,GetLocal(2))) {
    PopFrame;
    PopReturnAddress return_address_4;
    SetResult 1;
    JumpIndirect: (return) return_address_4
  } else {
    TraceOperation 026248 (Inc (Con 3));
    SetLocal 3 Add(GetLocal(3),1);
    TraceOperation 026250 (Jl (Var (Local 3)) (Var (Local 5)) (Branch T (Dloc 026240)));
    if (LessThan(GetLocal(3),GetLocal(5))) {
      Jump: 026240
    } else {
      TraceOperation 026255 Rfalse;
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 0;
      JumpIndirect: (return) return_address_5
    }
  }
LocOp 026256:
  TraceOperation 026256 (Jz (Var (Local 6)) (Branch T Dfalse));
  if (IsZero(GetLocal(6))) {
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 0;
    JumpIndirect: (return) return_address_1
  } else {
    TraceOperation 026259 (Je [Var (Local 2),Con 2] (Branch T (Dloc 026272)));
    if (Equal(GetLocal(2),2)) {
      Jump: 026272
    } else {
      TraceOperation 026263 (Jg (Var (Local 1)) (Con 4) (Branch F Dtrue));
      if (GreaterThan(GetLocal(1),4)) {
        TraceOperation 026267 (Jin (Var (Local 1)) (Con 1) (Branch T Dtrue));
        Let b2 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),6)];
        Let b3 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),6),1)];
        if (Equal(1,MakeHiLo(b2,b3))) {
          PopFrame;
          PopReturnAddress return_address_4;
          SetResult 1;
          JumpIndirect: (return) return_address_4
        } else {
          TraceOperation 026271 Rfalse;
          PopFrame;
          PopReturnAddress return_address_5;
          SetResult 0;
          JumpIndirect: (return) return_address_5
        }
      } else {
        PopFrame;
        PopReturnAddress return_address_6;
        SetResult 1;
        JumpIndirect: (return) return_address_6
      }
    }
  }
LocOp 026272:
  TraceOperation 026272 (Jg (Var (Local 1)) (Con 4) (Branch F Dfalse));
  if (GreaterThan(GetLocal(1),4)) {
    TraceOperation 026276 (Jin (Var (Local 1)) (Con 1) (Branch T Dfalse));
    Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),6)];
    Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),6),1)];
    if (Equal(1,MakeHiLo(b1,b2))) {
      PopFrame;
      PopReturnAddress return_address_3;
      SetResult 0;
      JumpIndirect: (return) return_address_3
    } else {
      TraceOperation 026280 Rtrue;
      PopFrame;
      PopReturnAddress return_address_4;
      SetResult 1;
      JumpIndirect: (return) return_address_4
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult 0;
    JumpIndirect: (return) return_address_5
  }
LocOp 026281:
  TraceOperation 026281 (Jz (Var (Local 6)) (Branch F Dfalse));
  if (IsZero(GetLocal(6))) {
    TraceOperation 026284 (Call (Floc 112868) [Var (Local 1)] Sp);
    PushFrame;
    PushReturnAddress 026284;
    SetLocal 1 GetLocal(1);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 112869
  } else {
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 0;
    JumpIndirect: (return) return_address_1
  }
LocReturn 026284:
  PushStack call_result;
  TraceOperation 026290 (Inc (Con 0));
  PopStack popped1;
  PushStack Add(popped1,1);
  TraceOperation 026292 (Je [Var Sp,Var (Local 2)] (Branch T Dtrue));
  PopStack popped2;
  if (Equal(popped2,GetLocal(2))) {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    TraceOperation 026296 Rfalse;
    PopFrame;
    PopReturnAddress return_address_4;
    SetResult 0;
    JumpIndirect: (return) return_address_4
  }
LocOp 026297:
  TraceOperation 026297 (CallN (Floc 111668) [Con 28450,Var (Local 2),Con -1]);
  PushFrame;
  PushReturnAddress 026297;
  SetLocal 1 28450;
  SetLocal 2 GetLocal(2);
  SetLocal 3 -1;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 111669
LocReturn 026297:
  TraceOperation 026306 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 026308:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 026309
LocOp 026309:
  TraceOperation 026309 (Je [Var (Local 1),Var (Local 2)] (Branch T Dfalse));
  if (Equal(GetLocal(1),GetLocal(2))) {
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 0;
    JumpIndirect: (return) return_address_1
  } else {
    TraceOperation 026313 (Jl (Var (Local 1)) (Con 0) (Branch T (Dloc 026331)));
    if (LessThan(GetLocal(1),0)) {
      Jump: 026331
    } else {
      TraceOperation 026317 (Jl (Var (Local 2)) (Con 0) (Branch T (Dloc 026328)));
      if (LessThan(GetLocal(2),0)) {
        Jump: 026328
      } else {
        TraceOperation 026321 (Jg (Var (Local 1)) (Var (Local 2)) (Branch T Dtrue));
        if (GreaterThan(GetLocal(1),GetLocal(2))) {
          PopFrame;
          PopReturnAddress return_address_2;
          SetResult 1;
          JumpIndirect: (return) return_address_2
        } else {
          TraceOperation 026325 (Ret (Con -1));
          PopFrame;
          PopReturnAddress return_address_3;
          SetResult -1;
          JumpIndirect: (return) return_address_3
        }
      }
    }
  }
LocOp 026328:
  TraceOperation 026328 (Ret (Con -1));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult -1;
  JumpIndirect: (return) return_address_1
LocOp 026331:
  TraceOperation 026331 (Jl (Var (Local 2)) (Con 0) (Branch F Dtrue));
  if (LessThan(GetLocal(2),0)) {
    TraceOperation 026335 (Jg (Var (Local 1)) (Var (Local 2)) (Branch T Dtrue));
    if (GreaterThan(GetLocal(1),GetLocal(2))) {
      PopFrame;
      PopReturnAddress return_address_1;
      SetResult 1;
      JumpIndirect: (return) return_address_1
    } else {
      TraceOperation 026339 (Ret (Con -1));
      PopFrame;
      PopReturnAddress return_address_2;
      SetResult -1;
      JumpIndirect: (return) return_address_2
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  }
--------------------------------------------------
LocRoutine 026344:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 026345
LocOp 026345:
  TraceOperation 026345 (Loadw (Var (Local 1)) (Var (Local 2)) Sp);
  Let b1 = M[Offset(Address(GetLocal(1)),Mul(2,GetLocal(2)))];
  Let b2 = M[Offset(Offset(Address(GetLocal(1)),Mul(2,GetLocal(2))),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 026349 (Ret (Var Sp));
  PopStack popped3;
  PopFrame;
  PopReturnAddress return_address_4;
  SetResult popped3;
  JumpIndirect: (return) return_address_4
--------------------------------------------------
LocRoutine 026352:
  MakeRoutineFrame 0;
  Jump: 026353
LocOp 026353:
  TraceOperation 026353 (CallN (Floc 036596) [Con 7,Con 7,Var (Global 235)]);
  Let b1 = M[007676];
  Let b2 = M[007677];
  PushFrame;
  PushReturnAddress 026353;
  SetLocal 1 7;
  SetLocal 2 7;
  SetLocal 3 MakeHiLo(b1,b2);
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 036597
LocReturn 026353:
  TraceOperation 026360 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 026364:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 026365
LocOp 026365:
  TraceOperation 026365 (Jz (Var (Local 1)) (Branch F (Dloc 026374)));
  if (IsZero(GetLocal(1))) {
    TraceOperation 026368 (Print "zero");
    GamePrint "zero";
    TraceOperation 026373 Rfalse;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 0;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 026374
  }
LocOp 026374:
  TraceOperation 026374 (Jl (Var (Local 1)) (Con 0) (Branch F (Dloc 026387)));
  if (LessThan(GetLocal(1),0)) {
    TraceOperation 026378 (Print "minus ");
    GamePrint "minus ";
    TraceOperation 026383 (Sub (Con 0) (Var (Local 1)) (Local 1));
    SetLocal 1 Sub(0,GetLocal(1));
    Jump: 026387
  } else {
    Jump: 026387
  }
LocOp 026387:
  TraceOperation 026387 (Jl (Var (Local 1)) (Con 1000) (Branch T (Dloc 026420)));
  if (LessThan(GetLocal(1),1000)) {
    Jump: 026420
  } else {
    TraceOperation 026393 (Div (Var (Local 1)) (Con 1000) Sp);
    PushStack Div(GetLocal(1),1000);
    TraceOperation 026399 (CallN (Floc 026364) [Var Sp]);
    PopStack popped1;
    PushFrame;
    PushReturnAddress 026399;
    SetLocal 1 popped1;
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 026365
  }
LocReturn 026399:
  TraceOperation 026404 (Print " thousand");
  GamePrint " thousand";
  TraceOperation 026411 (Mod (Var (Local 1)) (Con 1000) (Local 1));
  SetLocal 1 Mod(GetLocal(1),1000);
  TraceOperation 026417 (Store (Con 2) (Con 1));
  SetLocal 2 1;
  Jump: 026420
LocOp 026420:
  TraceOperation 026420 (Jl (Var (Local 1)) (Con 100) (Branch T (Dloc 026454)));
  if (LessThan(GetLocal(1),100)) {
    Jump: 026454
  } else {
    TraceOperation 026424 (Je [Var (Local 2),Con 1] (Branch F (Dloc 026431)));
    if (Equal(GetLocal(2),1)) {
      TraceOperation 026428 (Print ", ");
      GamePrint ", ";
      Jump: 026431
    } else {
      Jump: 026431
    }
  }
LocOp 026431:
  TraceOperation 026431 (Div (Var (Local 1)) (Con 100) Sp);
  PushStack Div(GetLocal(1),100);
  TraceOperation 026435 (CallN (Floc 026364) [Var Sp]);
  PopStack popped1;
  PushFrame;
  PushReturnAddress 026435;
  SetLocal 1 popped1;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 026365
LocReturn 026435:
  TraceOperation 026440 (Print " hundred");
  GamePrint " hundred";
  TraceOperation 026447 (Mod (Var (Local 1)) (Con 100) (Local 1));
  SetLocal 1 Mod(GetLocal(1),100);
  TraceOperation 026451 (Store (Con 2) (Con 1));
  SetLocal 2 1;
  Jump: 026454
LocOp 026454:
  TraceOperation 026454 (Jz (Var (Local 1)) (Branch T Dfalse));
  if (IsZero(GetLocal(1))) {
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 0;
    JumpIndirect: (return) return_address_1
  } else {
    TraceOperation 026457 (Je [Var (Local 2),Con 1] (Branch F (Dloc 026466)));
    if (Equal(GetLocal(2),1)) {
      TraceOperation 026461 (Print " and ");
      GamePrint " and ";
      Jump: 026466
    } else {
      Jump: 026466
    }
  }
LocOp 026466:
  TraceOperation 026466 (Store (Con 255) (Var (Local 1)));
  SetByte 007684 HiByte(GetLocal(1));
  SetByte 007685 LoByte(GetLocal(1));
  TraceOperation 026469 (Je [Var (Global 239),Con 1] (Branch F (Dloc 026479)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),1)) {
    TraceOperation 026473 (Print "one");
    GamePrint "one";
    TraceOperation 026476 (Jump 026834);
    Jump: 026834
  } else {
    Jump: 026479
  }
LocOp 026479:
  TraceOperation 026479 (Je [Var (Global 239),Con 2] (Branch F (Dloc 026489)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),2)) {
    TraceOperation 026483 (Print "two");
    GamePrint "two";
    TraceOperation 026486 (Jump 026834);
    Jump: 026834
  } else {
    Jump: 026489
  }
LocOp 026489:
  TraceOperation 026489 (Je [Var (Global 239),Con 3] (Branch F (Dloc 026501)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),3)) {
    TraceOperation 026493 (Print "three");
    GamePrint "three";
    TraceOperation 026498 (Jump 026834);
    Jump: 026834
  } else {
    Jump: 026501
  }
LocOp 026501:
  TraceOperation 026501 (Je [Var (Global 239),Con 4] (Branch F (Dloc 026513)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),4)) {
    TraceOperation 026505 (Print "four");
    GamePrint "four";
    TraceOperation 026510 (Jump 026834);
    Jump: 026834
  } else {
    Jump: 026513
  }
LocOp 026513:
  TraceOperation 026513 (Je [Var (Global 239),Con 5] (Branch F (Dloc 026525)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),5)) {
    TraceOperation 026517 (Print "five");
    GamePrint "five";
    TraceOperation 026522 (Jump 026834);
    Jump: 026834
  } else {
    Jump: 026525
  }
LocOp 026525:
  TraceOperation 026525 (Je [Var (Global 239),Con 6] (Branch F (Dloc 026535)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),6)) {
    TraceOperation 026529 (Print "six");
    GamePrint "six";
    TraceOperation 026532 (Jump 026834);
    Jump: 026834
  } else {
    Jump: 026535
  }
LocOp 026535:
  TraceOperation 026535 (Je [Var (Global 239),Con 7] (Branch F (Dloc 026547)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),7)) {
    TraceOperation 026539 (Print "seven");
    GamePrint "seven";
    TraceOperation 026544 (Jump 026834);
    Jump: 026834
  } else {
    Jump: 026547
  }
LocOp 026547:
  TraceOperation 026547 (Je [Var (Global 239),Con 8] (Branch F (Dloc 026559)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),8)) {
    TraceOperation 026551 (Print "eight");
    GamePrint "eight";
    TraceOperation 026556 (Jump 026834);
    Jump: 026834
  } else {
    Jump: 026559
  }
LocOp 026559:
  TraceOperation 026559 (Je [Var (Global 239),Con 9] (Branch F (Dloc 026571)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),9)) {
    TraceOperation 026563 (Print "nine");
    GamePrint "nine";
    TraceOperation 026568 (Jump 026834);
    Jump: 026834
  } else {
    Jump: 026571
  }
LocOp 026571:
  TraceOperation 026571 (Je [Var (Global 239),Con 10] (Branch F (Dloc 026581)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),10)) {
    TraceOperation 026575 (Print "ten");
    GamePrint "ten";
    TraceOperation 026578 (Jump 026834);
    Jump: 026834
  } else {
    Jump: 026581
  }
LocOp 026581:
  TraceOperation 026581 (Je [Var (Global 239),Con 11] (Branch F (Dloc 026593)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),11)) {
    TraceOperation 026585 (Print "eleven");
    GamePrint "eleven";
    TraceOperation 026590 (Jump 026834);
    Jump: 026834
  } else {
    Jump: 026593
  }
LocOp 026593:
  TraceOperation 026593 (Je [Var (Global 239),Con 12] (Branch F (Dloc 026605)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),12)) {
    TraceOperation 026597 (Print "twelve");
    GamePrint "twelve";
    TraceOperation 026602 (Jump 026834);
    Jump: 026834
  } else {
    Jump: 026605
  }
LocOp 026605:
  TraceOperation 026605 (Je [Var (Global 239),Con 13] (Branch F (Dloc 026619)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),13)) {
    TraceOperation 026609 (Print "thirteen");
    GamePrint "thirteen";
    TraceOperation 026616 (Jump 026834);
    Jump: 026834
  } else {
    Jump: 026619
  }
LocOp 026619:
  TraceOperation 026619 (Je [Var (Global 239),Con 14] (Branch F (Dloc 026633)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),14)) {
    TraceOperation 026623 (Print "fourteen");
    GamePrint "fourteen";
    TraceOperation 026630 (Jump 026834);
    Jump: 026834
  } else {
    Jump: 026633
  }
LocOp 026633:
  TraceOperation 026633 (Je [Var (Global 239),Con 15] (Branch F (Dloc 026647)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),15)) {
    TraceOperation 026637 (Print "fifteen");
    GamePrint "fifteen";
    TraceOperation 026644 (Jump 026834);
    Jump: 026834
  } else {
    Jump: 026647
  }
LocOp 026647:
  TraceOperation 026647 (Je [Var (Global 239),Con 16] (Branch F (Dloc 026661)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),16)) {
    TraceOperation 026651 (Print "sixteen");
    GamePrint "sixteen";
    TraceOperation 026658 (Jump 026834);
    Jump: 026834
  } else {
    Jump: 026661
  }
LocOp 026661:
  TraceOperation 026661 (Je [Var (Global 239),Con 17] (Branch F (Dloc 026675)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),17)) {
    TraceOperation 026665 (Print "seventeen");
    GamePrint "seventeen";
    TraceOperation 026672 (Jump 026834);
    Jump: 026834
  } else {
    Jump: 026675
  }
LocOp 026675:
  TraceOperation 026675 (Je [Var (Global 239),Con 18] (Branch F (Dloc 026689)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),18)) {
    TraceOperation 026679 (Print "eighteen");
    GamePrint "eighteen";
    TraceOperation 026686 (Jump 026834);
    Jump: 026834
  } else {
    Jump: 026689
  }
LocOp 026689:
  TraceOperation 026689 (Je [Var (Global 239),Con 19] (Branch F (Dloc 026703)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),19)) {
    TraceOperation 026693 (Print "nineteen");
    GamePrint "nineteen";
    TraceOperation 026700 (Jump 026834);
    Jump: 026834
  } else {
    Jump: 026703
  }
LocOp 026703:
  TraceOperation 026703 (Jl (Var (Global 239)) (Con 20) (Branch T (Dloc 026834)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (LessThan(MakeHiLo(b1,b2),20)) {
    Jump: 026834
  } else {
    TraceOperation 026708 (Jg (Var (Global 239)) (Con 99) (Branch T (Dloc 026834)));
    Let b3 = M[007684];
    Let b4 = M[007685];
    if (GreaterThan(MakeHiLo(b3,b4),99)) {
      Jump: 026834
    } else {
      TraceOperation 026713 (Div (Var (Local 1)) (Con 10) Sp);
      PushStack Div(GetLocal(1),10);
      TraceOperation 026717 (Pull (Con 255));
      PopStack popped5;
      SetByte 007684 HiByte(popped5);
      SetByte 007685 LoByte(popped5);
      TraceOperation 026720 (Je [Var (Global 239),Con 2] (Branch F (Dloc 026732)));
      Let b6 = M[007684];
      Let b7 = M[007685];
      if (Equal(MakeHiLo(b6,b7),2)) {
        TraceOperation 026724 (Print "twenty");
        GamePrint "twenty";
        TraceOperation 026729 (Jump 026815);
        Jump: 026815
      } else {
        Jump: 026732
      }
    }
  }
LocOp 026732:
  TraceOperation 026732 (Je [Var (Global 239),Con 3] (Branch F (Dloc 026744)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),3)) {
    TraceOperation 026736 (Print "thirty");
    GamePrint "thirty";
    TraceOperation 026741 (Jump 026815);
    Jump: 026815
  } else {
    Jump: 026744
  }
LocOp 026744:
  TraceOperation 026744 (Je [Var (Global 239),Con 4] (Branch F (Dloc 026756)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),4)) {
    TraceOperation 026748 (Print "forty");
    GamePrint "forty";
    TraceOperation 026753 (Jump 026815);
    Jump: 026815
  } else {
    Jump: 026756
  }
LocOp 026756:
  TraceOperation 026756 (Je [Var (Global 239),Con 5] (Branch F (Dloc 026768)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),5)) {
    TraceOperation 026760 (Print "fifty");
    GamePrint "fifty";
    TraceOperation 026765 (Jump 026815);
    Jump: 026815
  } else {
    Jump: 026768
  }
LocOp 026768:
  TraceOperation 026768 (Je [Var (Global 239),Con 6] (Branch F (Dloc 026780)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),6)) {
    TraceOperation 026772 (Print "sixty");
    GamePrint "sixty";
    TraceOperation 026777 (Jump 026815);
    Jump: 026815
  } else {
    Jump: 026780
  }
LocOp 026780:
  TraceOperation 026780 (Je [Var (Global 239),Con 7] (Branch F (Dloc 026794)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),7)) {
    TraceOperation 026784 (Print "seventy");
    GamePrint "seventy";
    TraceOperation 026791 (Jump 026815);
    Jump: 026815
  } else {
    Jump: 026794
  }
LocOp 026794:
  TraceOperation 026794 (Je [Var (Global 239),Con 8] (Branch F (Dloc 026806)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),8)) {
    TraceOperation 026798 (Print "eighty");
    GamePrint "eighty";
    TraceOperation 026803 (Jump 026815);
    Jump: 026815
  } else {
    Jump: 026806
  }
LocOp 026806:
  TraceOperation 026806 (Je [Var (Global 239),Con 9] (Branch F (Dloc 026815)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),9)) {
    TraceOperation 026810 (Print "ninety");
    GamePrint "ninety";
    Jump: 026815
  } else {
    Jump: 026815
  }
LocOp 026815:
  TraceOperation 026815 (Mod (Var (Local 1)) (Con 10) Sp);
  PushStack Mod(GetLocal(1),10);
  TraceOperation 026819 (Jz (Var Sp) (Branch T (Dloc 026834)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 026834
  } else {
    TraceOperation 026822 (Print "-");
    GamePrint "-";
    TraceOperation 026825 (Mod (Var (Local 1)) (Con 10) Sp);
    PushStack Mod(GetLocal(1),10);
    TraceOperation 026829 (CallN (Floc 026364) [Var Sp]);
    PopStack popped2;
    PushFrame;
    PushReturnAddress 026829;
    SetLocal 1 popped2;
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 026365
  }
LocReturn 026829:
  Jump: 026834
LocOp 026834:
  TraceOperation 026834 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 026836:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 026837
LocOp 026837:
  TraceOperation 026837 (Mod (Var (Local 1)) (Con 12) (Local 3));
  SetLocal 3 Mod(GetLocal(1),12);
  TraceOperation 026841 (Jz (Var (Local 3)) (Branch F (Dloc 026847)));
  if (IsZero(GetLocal(3))) {
    TraceOperation 026844 (Store (Con 3) (Con 12));
    SetLocal 3 12;
    Jump: 026847
  } else {
    Jump: 026847
  }
LocOp 026847:
  TraceOperation 026847 (Jl (Var (Local 3)) (Con 10) (Branch F (Dloc 026854)));
  if (LessThan(GetLocal(3),10)) {
    TraceOperation 026851 (Print " ");
    GamePrint " ";
    Jump: 026854
  } else {
    Jump: 026854
  }
LocOp 026854:
  TraceOperation 026854 (Print_num (Var (Local 3)));
  GamePrint ShowNumber(GetLocal(3));
  TraceOperation 026857 (Print ":");
  GamePrint ":";
  TraceOperation 026860 (Div (Var (Local 2)) (Con 10) Sp);
  PushStack Div(GetLocal(2),10);
  TraceOperation 026864 (Print_num (Var Sp));
  PopStack popped1;
  GamePrint ShowNumber(popped1);
  TraceOperation 026867 (Mod (Var (Local 2)) (Con 10) Sp);
  PushStack Mod(GetLocal(2),10);
  TraceOperation 026871 (Print_num (Var Sp));
  PopStack popped2;
  GamePrint ShowNumber(popped2);
  TraceOperation 026874 (Div (Var (Local 1)) (Con 12) Sp);
  PushStack Div(GetLocal(1),12);
  TraceOperation 026878 (Jg (Var Sp) (Con 0) (Branch F (Dloc 026888)));
  PopStack popped3;
  if (GreaterThan(popped3,0)) {
    TraceOperation 026882 (Print " pm");
    GamePrint " pm";
    TraceOperation 026885 (Jump 026891);
    Jump: 026891
  } else {
    Jump: 026888
  }
LocOp 026888:
  TraceOperation 026888 (Print " am");
  GamePrint " am";
  Jump: 026891
LocOp 026891:
  TraceOperation 026891 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 026892:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 026893
LocOp 026893:
  TraceOperation 026893 (Store (Con 255) (Var (Local 1)));
  SetByte 007684 HiByte(GetLocal(1));
  SetByte 007685 LoByte(GetLocal(1));
  TraceOperation 026896 (Je [Var (Global 239),Con 4] (Branch F (Dloc 026908)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),4)) {
    TraceOperation 026900 (Print "north");
    GamePrint "north";
    TraceOperation 026905 (Jump 027050);
    Jump: 027050
  } else {
    Jump: 026908
  }
LocOp 026908:
  TraceOperation 026908 (Je [Var (Global 239),Con 5] (Branch F (Dloc 026920)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),5)) {
    TraceOperation 026912 (Print "south");
    GamePrint "south";
    TraceOperation 026917 (Jump 027050);
    Jump: 027050
  } else {
    Jump: 026920
  }
LocOp 026920:
  TraceOperation 026920 (Je [Var (Global 239),Con 6] (Branch F (Dloc 026932)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),6)) {
    TraceOperation 026924 (Print "east");
    GamePrint "east";
    TraceOperation 026929 (Jump 027050);
    Jump: 027050
  } else {
    Jump: 026932
  }
LocOp 026932:
  TraceOperation 026932 (Je [Var (Global 239),Con 7] (Branch F (Dloc 026944)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),7)) {
    TraceOperation 026936 (Print "west");
    GamePrint "west";
    TraceOperation 026941 (Jump 027050);
    Jump: 027050
  } else {
    Jump: 026944
  }
LocOp 026944:
  TraceOperation 026944 (Je [Var (Global 239),Con 8] (Branch F (Dloc 026958)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),8)) {
    TraceOperation 026948 (Print "northeast");
    GamePrint "northeast";
    TraceOperation 026955 (Jump 027050);
    Jump: 027050
  } else {
    Jump: 026958
  }
LocOp 026958:
  TraceOperation 026958 (Je [Var (Global 239),Con 9] (Branch F (Dloc 026972)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),9)) {
    TraceOperation 026962 (Print "northwest");
    GamePrint "northwest";
    TraceOperation 026969 (Jump 027050);
    Jump: 027050
  } else {
    Jump: 026972
  }
LocOp 026972:
  TraceOperation 026972 (Je [Var (Global 239),Con 10] (Branch F (Dloc 026986)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),10)) {
    TraceOperation 026976 (Print "southeast");
    GamePrint "southeast";
    TraceOperation 026983 (Jump 027050);
    Jump: 027050
  } else {
    Jump: 026986
  }
LocOp 026986:
  TraceOperation 026986 (Je [Var (Global 239),Con 11] (Branch F (Dloc 027000)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),11)) {
    TraceOperation 026990 (Print "southwest");
    GamePrint "southwest";
    TraceOperation 026997 (Jump 027050);
    Jump: 027050
  } else {
    Jump: 027000
  }
LocOp 027000:
  TraceOperation 027000 (Je [Var (Global 239),Con 12] (Branch F (Dloc 027010)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),12)) {
    TraceOperation 027004 (Print "up");
    GamePrint "up";
    TraceOperation 027007 (Jump 027050);
    Jump: 027050
  } else {
    Jump: 027010
  }
LocOp 027010:
  TraceOperation 027010 (Je [Var (Global 239),Con 13] (Branch F (Dloc 027022)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),13)) {
    TraceOperation 027014 (Print "down");
    GamePrint "down";
    TraceOperation 027019 (Jump 027050);
    Jump: 027050
  } else {
    Jump: 027022
  }
LocOp 027022:
  TraceOperation 027022 (Je [Var (Global 239),Con 14] (Branch F (Dloc 027032)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),14)) {
    TraceOperation 027026 (Print "in");
    GamePrint "in";
    TraceOperation 027029 (Jump 027050);
    Jump: 027050
  } else {
    Jump: 027032
  }
LocOp 027032:
  TraceOperation 027032 (Je [Var (Global 239),Con 15] (Branch F (Dloc 027042)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),15)) {
    TraceOperation 027036 (Print "out");
    GamePrint "out";
    TraceOperation 027039 (Jump 027050);
    Jump: 027050
  } else {
    Jump: 027042
  }
LocOp 027042:
  TraceOperation 027042 (Call (Floc 087960) [Con 9,Var (Local 1)] Sp);
  PushFrame;
  PushReturnAddress 027042;
  SetLocal 1 9;
  SetLocal 2 GetLocal(1);
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 087961
LocReturn 027042:
  PushStack call_result;
  TraceOperation 027049 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 027050:
  TraceOperation 027050 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 027052:
  MakeRoutineFrame 0;
  Jump: 027053
LocOp 027053:
  TraceOperation 027053 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 027056:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 027057
LocOp 027057:
  TraceOperation 027057 (Loadb (Var (Local 1)) (Con 0) Sp);
  Let b1 = M[Offset(Address(GetLocal(1)),0)];
  PushStack Widen(b1);
  TraceOperation 027061 (Pull (Con 255));
  PopStack popped2;
  SetByte 007684 HiByte(popped2);
  SetByte 007685 LoByte(popped2);
  TraceOperation 027064 (Je [Var (Global 239),Con 97,Con 101,Con 105] (Branch T (Dloc 027089)));
  Let b3 = M[007684];
  Let b4 = M[007685];
  if (LogOr(LogOr(Equal(MakeHiLo(b3,b4),97),Equal(MakeHiLo(b3,b4),101)),Equal(MakeHiLo(b3,b4),105))) {
    Jump: 027089
  } else {
    TraceOperation 027071 (Je [Var (Global 239),Con 111,Con 117,Con 65] (Branch T (Dloc 027089)));
    Let b5 = M[007684];
    Let b6 = M[007685];
    if (LogOr(LogOr(Equal(MakeHiLo(b5,b6),111),Equal(MakeHiLo(b5,b6),117)),Equal(MakeHiLo(b5,b6),65))) {
      Jump: 027089
    } else {
      TraceOperation 027078 (Je [Var (Global 239),Con 69,Con 73,Con 79] (Branch T (Dloc 027089)));
      Let b7 = M[007684];
      Let b8 = M[007685];
      if (LogOr(LogOr(Equal(MakeHiLo(b7,b8),69),Equal(MakeHiLo(b7,b8),73)),Equal(MakeHiLo(b7,b8),79))) {
        Jump: 027089
      } else {
        TraceOperation 027085 (Je [Var (Global 239),Con 85] (Branch F (Dloc 027090)));
        Let b9 = M[007684];
        Let b10 = M[007685];
        if (Equal(MakeHiLo(b9,b10),85)) {
          Jump: 027089
        } else {
          Jump: 027090
        }
      }
    }
  }
LocOp 027089:
  TraceOperation 027089 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 027090:
  TraceOperation 027090 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 027092:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 027093
LocOp 027093:
  TraceOperation 027093 (Store (Con 255) (Var (Local 1)));
  SetByte 007684 HiByte(GetLocal(1));
  SetByte 007685 LoByte(GetLocal(1));
  TraceOperation 027096 (Je [Var (Global 239),Con 22520,Con 22565,Con 22574] (Branch F (Dloc 027120)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),22520),Equal(MakeHiLo(b1,b2),22565)),Equal(MakeHiLo(b1,b2),22574))) {
    TraceOperation 027106 (Print "take inventory");
    GamePrint "take inventory";
    TraceOperation 027117 (Jump 027165);
    Jump: 027165
  } else {
    Jump: 027120
  }
LocOp 027120:
  TraceOperation 027120 (Je [Var (Global 239),Con 22664] (Branch F (Dloc 027134)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),22664)) {
    TraceOperation 027126 (Print "look");
    GamePrint "look";
    TraceOperation 027131 (Jump 027165);
    Jump: 027165
  } else {
    Jump: 027134
  }
LocOp 027134:
  TraceOperation 027134 (Je [Var (Global 239),Con 24509] (Branch F (Dloc 027150)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),24509)) {
    TraceOperation 027140 (Print "examine");
    GamePrint "examine";
    TraceOperation 027147 (Jump 027165);
    Jump: 027165
  } else {
    Jump: 027150
  }
LocOp 027150:
  TraceOperation 027150 (Je [Var (Global 239),Con 24545] (Branch F (Dloc 027164)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),24545)) {
    TraceOperation 027156 (Print "wait");
    GamePrint "wait";
    TraceOperation 027161 (Jump 027165);
    Jump: 027165
  } else {
    Jump: 027164
  }
LocOp 027164:
  TraceOperation 027164 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
LocOp 027165:
  TraceOperation 027165 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 027168:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 027169
LocOp 027169:
  TraceOperation 027169 (Je [Var (Local 1),Con 22772,Con 22430,Con 23285] (Branch T Dtrue));
  if (LogOr(LogOr(Equal(GetLocal(1),22772),Equal(GetLocal(1),22430)),Equal(GetLocal(1),23285))) {
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    TraceOperation 027179 (Je [Var (Local 1),Con 24392] (Branch T Dtrue));
    if (Equal(GetLocal(1),24392)) {
      PopFrame;
      PopReturnAddress return_address_2;
      SetResult 1;
      JumpIndirect: (return) return_address_2
    } else {
      TraceOperation 027185 Rfalse;
      PopFrame;
      PopReturnAddress return_address_3;
      SetResult 0;
      JumpIndirect: (return) return_address_3
    }
  }
--------------------------------------------------
LocRoutine 027188:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 027189
LocOp 027189:
  TraceOperation 027189 (Je [Var (Local 1),Con 22763,Con 23573,Con 22934] (Branch T Dtrue));
  if (LogOr(LogOr(Equal(GetLocal(1),22763),Equal(GetLocal(1),23573)),Equal(GetLocal(1),22934))) {
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    TraceOperation 027199 (Je [Var (Local 1),Con 21701,Con 22358,Con 24338] (Branch T Dtrue));
    if (LogOr(LogOr(Equal(GetLocal(1),21701),Equal(GetLocal(1),22358)),Equal(GetLocal(1),24338))) {
      PopFrame;
      PopReturnAddress return_address_2;
      SetResult 1;
      JumpIndirect: (return) return_address_2
    } else {
      TraceOperation 027209 Rfalse;
      PopFrame;
      PopReturnAddress return_address_3;
      SetResult 0;
      JumpIndirect: (return) return_address_3
    }
  }
--------------------------------------------------
LocRoutine 027212:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 027213
LocOp 027213:
  TraceOperation 027213 (Je [Var (Local 1),Var (Global 31)] (Branch F (Dloc 027221)));
  Let b1 = M[007268];
  Let b2 = M[007269];
  if (Equal(GetLocal(1),MakeHiLo(b1,b2))) {
    TraceOperation 027217 (Print "you");
    GamePrint "you";
    TraceOperation 027220 Rtrue;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 027221
  }
LocOp 027221:
  TraceOperation 027221 (Test_attr (Var (Local 1)) (Con 26) (Branch F (Dloc 027231)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),3)];
  if (TestBit(b1,5)) {
    TraceOperation 027225 (Print "those");
    GamePrint "those";
    TraceOperation 027230 Rtrue;
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  } else {
    Jump: 027231
  }
LocOp 027231:
  TraceOperation 027231 (Test_attr (Var (Local 1)) (Con 1) (Branch F (Dloc 027251)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),0)];
  if (TestBit(b1,6)) {
    TraceOperation 027235 (Test_attr (Var (Local 1)) (Con 24) (Branch F (Dloc 027243)));
    Let b2 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),3)];
    if (TestBit(b2,7)) {
      TraceOperation 027239 (Print "her");
      GamePrint "her";
      TraceOperation 027242 Rtrue;
      PopFrame;
      PopReturnAddress return_address_3;
      SetResult 1;
      JumpIndirect: (return) return_address_3
    } else {
      Jump: 027243
    }
  } else {
    Jump: 027251
  }
LocOp 027243:
  TraceOperation 027243 (Test_attr (Var (Local 1)) (Con 25) (Branch T (Dloc 027251)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),3)];
  if (TestBit(b1,6)) {
    Jump: 027251
  } else {
    TraceOperation 027247 (Print "him");
    GamePrint "him";
    TraceOperation 027250 Rtrue;
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  }
LocOp 027251:
  TraceOperation 027251 (Print "that");
  GamePrint "that";
  TraceOperation 027256 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 027260:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 027261
LocOp 027261:
  TraceOperation 027261 (Je [Var (Local 1),Var (Global 31)] (Branch F (Dloc 027273)));
  Let b1 = M[007268];
  Let b2 = M[007269];
  if (Equal(GetLocal(1),MakeHiLo(b1,b2))) {
    TraceOperation 027265 (Print "yourself");
    GamePrint "yourself";
    TraceOperation 027272 Rtrue;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 027273
  }
LocOp 027273:
  TraceOperation 027273 (Test_attr (Var (Local 1)) (Con 26) (Branch F (Dloc 027283)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),3)];
  if (TestBit(b1,5)) {
    TraceOperation 027277 (Print "them");
    GamePrint "them";
    TraceOperation 027282 Rtrue;
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  } else {
    Jump: 027283
  }
LocOp 027283:
  TraceOperation 027283 (Test_attr (Var (Local 1)) (Con 1) (Branch F (Dloc 027303)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),0)];
  if (TestBit(b1,6)) {
    TraceOperation 027287 (Test_attr (Var (Local 1)) (Con 24) (Branch F (Dloc 027295)));
    Let b2 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),3)];
    if (TestBit(b2,7)) {
      TraceOperation 027291 (Print "her");
      GamePrint "her";
      TraceOperation 027294 Rtrue;
      PopFrame;
      PopReturnAddress return_address_3;
      SetResult 1;
      JumpIndirect: (return) return_address_3
    } else {
      Jump: 027295
    }
  } else {
    Jump: 027303
  }
LocOp 027295:
  TraceOperation 027295 (Test_attr (Var (Local 1)) (Con 25) (Branch T (Dloc 027303)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),3)];
  if (TestBit(b1,6)) {
    Jump: 027303
  } else {
    TraceOperation 027299 (Print "him");
    GamePrint "him";
    TraceOperation 027302 Rtrue;
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  }
LocOp 027303:
  TraceOperation 027303 (Print "it");
  GamePrint "it";
  TraceOperation 027306 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 027308:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 027309
LocOp 027309:
  TraceOperation 027309 (Test_attr (Var (Local 1)) (Con 26) (Branch T (Dloc 027317)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),3)];
  if (TestBit(b1,5)) {
    Jump: 027317
  } else {
    TraceOperation 027313 (Je [Var (Local 1),Var (Global 31)] (Branch F (Dloc 027323)));
    Let b2 = M[007268];
    Let b3 = M[007269];
    if (Equal(GetLocal(1),MakeHiLo(b2,b3))) {
      Jump: 027317
    } else {
      Jump: 027323
    }
  }
LocOp 027317:
  TraceOperation 027317 (Print "are");
  GamePrint "are";
  TraceOperation 027320 (Jump 027326);
  Jump: 027326
LocOp 027323:
  TraceOperation 027323 (Print "is");
  GamePrint "is";
  Jump: 027326
LocOp 027326:
  TraceOperation 027326 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 027328:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 027329
LocOp 027329:
  TraceOperation 027329 (Test_attr (Var (Local 1)) (Con 26) (Branch T (Dloc 027337)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),3)];
  if (TestBit(b1,5)) {
    Jump: 027337
  } else {
    TraceOperation 027333 (Je [Var (Local 1),Var (Global 31)] (Branch F (Dloc 027345)));
    Let b2 = M[007268];
    Let b3 = M[007269];
    if (Equal(GetLocal(1),MakeHiLo(b2,b3))) {
      Jump: 027337
    } else {
      Jump: 027345
    }
  }
LocOp 027337:
  TraceOperation 027337 (Print "have");
  GamePrint "have";
  TraceOperation 027342 (Jump 027348);
  Jump: 027348
LocOp 027345:
  TraceOperation 027345 (Print "has");
  GamePrint "has";
  Jump: 027348
LocOp 027348:
  TraceOperation 027348 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 027352:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 027353
LocOp 027353:
  TraceOperation 027353 (Je [Var (Local 1),Var (Global 31)] (Branch F (Dloc 027363)));
  Let b1 = M[007268];
  Let b2 = M[007269];
  if (Equal(GetLocal(1),MakeHiLo(b1,b2))) {
    TraceOperation 027357 (Print "You");
    GamePrint "You";
    TraceOperation 027362 Rtrue;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 027363
  }
LocOp 027363:
  TraceOperation 027363 (Test_attr (Var (Local 1)) (Con 26) (Branch F (Dloc 027373)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),3)];
  if (TestBit(b1,5)) {
    TraceOperation 027367 (Print "Those");
    GamePrint "Those";
    TraceOperation 027372 Rtrue;
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  } else {
    Jump: 027373
  }
LocOp 027373:
  TraceOperation 027373 (Test_attr (Var (Local 1)) (Con 1) (Branch F (Dloc 027395)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),0)];
  if (TestBit(b1,6)) {
    TraceOperation 027377 (Test_attr (Var (Local 1)) (Con 24) (Branch F (Dloc 027387)));
    Let b2 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),3)];
    if (TestBit(b2,7)) {
      TraceOperation 027381 (Print "She");
      GamePrint "She";
      TraceOperation 027386 Rtrue;
      PopFrame;
      PopReturnAddress return_address_3;
      SetResult 1;
      JumpIndirect: (return) return_address_3
    } else {
      Jump: 027387
    }
  } else {
    Jump: 027395
  }
LocOp 027387:
  TraceOperation 027387 (Test_attr (Var (Local 1)) (Con 25) (Branch T (Dloc 027395)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),3)];
  if (TestBit(b1,6)) {
    Jump: 027395
  } else {
    TraceOperation 027391 (Print "He");
    GamePrint "He";
    TraceOperation 027394 Rtrue;
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  }
LocOp 027395:
  TraceOperation 027395 (Print "That");
  GamePrint "That";
  TraceOperation 027400 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 027404:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 027405
LocOp 027405:
  TraceOperation 027405 (Je [Var (Local 1),Var (Global 31)] (Branch F (Dloc 027417)));
  Let b1 = M[007268];
  Let b2 = M[007269];
  if (Equal(GetLocal(1),MakeHiLo(b1,b2))) {
    TraceOperation 027409 (Print "You're");
    GamePrint "You're";
    TraceOperation 027416 Rtrue;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 027417
  }
LocOp 027417:
  TraceOperation 027417 (Test_attr (Var (Local 1)) (Con 26) (Branch F (Dloc 027429)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),3)];
  if (TestBit(b1,5)) {
    TraceOperation 027421 (Print "They're");
    GamePrint "They're";
    TraceOperation 027428 Rtrue;
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  } else {
    Jump: 027429
  }
LocOp 027429:
  TraceOperation 027429 (Test_attr (Var (Local 1)) (Con 1) (Branch F (Dloc 027455)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),0)];
  if (TestBit(b1,6)) {
    TraceOperation 027433 (Test_attr (Var (Local 1)) (Con 24) (Branch F (Dloc 027445)));
    Let b2 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),3)];
    if (TestBit(b2,7)) {
      TraceOperation 027437 (Print "She's");
      GamePrint "She's";
      TraceOperation 027444 Rtrue;
      PopFrame;
      PopReturnAddress return_address_3;
      SetResult 1;
      JumpIndirect: (return) return_address_3
    } else {
      Jump: 027445
    }
  } else {
    Jump: 027455
  }
LocOp 027445:
  TraceOperation 027445 (Test_attr (Var (Local 1)) (Con 25) (Branch T (Dloc 027455)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),3)];
  if (TestBit(b1,6)) {
    Jump: 027455
  } else {
    TraceOperation 027449 (Print "He's");
    GamePrint "He's";
    TraceOperation 027454 Rtrue;
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  }
LocOp 027455:
  TraceOperation 027455 (Print "That's");
  GamePrint "That's";
  TraceOperation 027462 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 027464:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 027465
LocOp 027465:
  TraceOperation 027465 (Test_attr (Var (Local 1)) (Con 26) (Branch F (Dloc 027475)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),3)];
  if (TestBit(b1,5)) {
    TraceOperation 027469 (Print "their");
    GamePrint "their";
    TraceOperation 027474 Rtrue;
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  } else {
    Jump: 027475
  }
LocOp 027475:
  TraceOperation 027475 (Test_attr (Var (Local 1)) (Con 24) (Branch F (Dloc 027483)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),3)];
  if (TestBit(b1,7)) {
    TraceOperation 027479 (Print "her");
    GamePrint "her";
    TraceOperation 027482 Rtrue;
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  } else {
    Jump: 027483
  }
LocOp 027483:
  TraceOperation 027483 (Test_attr (Var (Local 1)) (Con 25) (Branch F (Dloc 027491)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),3)];
  if (TestBit(b1,6)) {
    TraceOperation 027487 (Print "its");
    GamePrint "its";
    TraceOperation 027490 Rtrue;
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  } else {
    Jump: 027491
  }
LocOp 027491:
  TraceOperation 027491 (Print "his");
  GamePrint "his";
  TraceOperation 027494 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 027496:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 027497
LocOp 027497:
  TraceOperation 027497 (Test_attr (Var (Local 1)) (Con 26) (Branch F (Dloc 027511)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),3)];
  if (TestBit(b1,5)) {
    TraceOperation 027501 (Print "theirselves");
    GamePrint "theirselves";
    TraceOperation 027510 Rtrue;
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  } else {
    Jump: 027511
  }
LocOp 027511:
  TraceOperation 027511 (Test_attr (Var (Local 1)) (Con 24) (Branch F (Dloc 027523)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),3)];
  if (TestBit(b1,7)) {
    TraceOperation 027515 (Print "herself");
    GamePrint "herself";
    TraceOperation 027522 Rtrue;
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  } else {
    Jump: 027523
  }
LocOp 027523:
  TraceOperation 027523 (Test_attr (Var (Local 1)) (Con 25) (Branch F (Dloc 027533)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),3)];
  if (TestBit(b1,6)) {
    TraceOperation 027527 (Print "itself");
    GamePrint "itself";
    TraceOperation 027532 Rtrue;
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  } else {
    Jump: 027533
  }
LocOp 027533:
  TraceOperation 027533 (Print "himself");
  GamePrint "himself";
  TraceOperation 027540 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 027544:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 027545
LocOp 027545:
  TraceOperation 027545 (Store (Con 20) (Con 1));
  SetByte 007214 0;
  SetByte 007215 1;
  TraceOperation 027548 (Je [Var (Global 233),Con 8,Con 9] (Branch F (Dloc 027569)));
  Let b1 = M[007672];
  Let b2 = M[007673];
  if (LogOr(Equal(MakeHiLo(b1,b2),8),Equal(MakeHiLo(b1,b2),9))) {
    TraceOperation 027554 (Print_ret "There is no reply.");
    GamePrint "There is no reply.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 027569
  }
LocOp 027569:
  TraceOperation 027569 (Je [Var (Global 233),Con 10] (Branch F (Dloc 027578)));
  Let b1 = M[007672];
  Let b2 = M[007673];
  if (Equal(MakeHiLo(b1,b2),10)) {
    TraceOperation 027573 (Print_paddr (Con 28524));
    Note "<static Gettext address>";
    GamePrint "Violence isn't the answer to this one.";
    TraceOperation 027576 New_line;
    GamePrint "\n";
    TraceOperation 027577 Rtrue;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 027578
  }
LocOp 027578:
  TraceOperation 027578 (Je [Var (Global 233),Con 11] (Branch F (Dloc 027587)));
  Let b1 = M[007672];
  Let b2 = M[007673];
  if (Equal(MakeHiLo(b1,b2),11)) {
    TraceOperation 027582 (Print_paddr (Con 28531));
    Note "<static Gettext address>";
    GamePrint "This dangerous act would achieve little.";
    TraceOperation 027585 New_line;
    GamePrint "\n";
    TraceOperation 027586 Rtrue;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 027587
  }
LocOp 027587:
  TraceOperation 027587 (Je [Var (Global 233),Con 12] (Branch F (Dloc 027606)));
  Let b1 = M[007672];
  Let b2 = M[007673];
  if (Equal(MakeHiLo(b1,b2),12)) {
    TraceOperation 027591 (Print_ret "Nothing is on sale.");
    GamePrint "Nothing is on sale.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 027606
  }
LocOp 027606:
  TraceOperation 027606 (Je [Var (Global 233),Con 13] (Branch F (Dloc 027615)));
  Let b1 = M[007672];
  Let b2 = M[007673];
  if (Equal(MakeHiLo(b1,b2),13)) {
    TraceOperation 027610 (Print_paddr (Con 28538));
    Note "<static Gettext address>";
    GamePrint "I don't think much is to be achieved by that.";
    TraceOperation 027613 New_line;
    GamePrint "\n";
    TraceOperation 027614 Rtrue;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 027615
  }
LocOp 027615:
  TraceOperation 027615 (Je [Var (Global 233),Con 14] (Branch F (Dloc 027752)));
  Let b1 = M[007672];
  Let b2 = M[007673];
  if (Equal(MakeHiLo(b1,b2),14)) {
    TraceOperation 027620 (Store (Con 255) (Var (Local 1)));
    SetByte 007684 HiByte(GetLocal(1));
    SetByte 007685 LoByte(GetLocal(1));
    TraceOperation 027623 (Je [Var (Global 239),Con 1] (Branch F (Dloc 027653)));
    Let b3 = M[007684];
    Let b4 = M[007685];
    if (Equal(MakeHiLo(b3,b4),1)) {
      TraceOperation 027627 (CallN (Floc 027404) [Var (Local 2)]);
      PushFrame;
      PushReturnAddress 027627;
      SetLocal 1 GetLocal(2);
      MakeRoutineFrame 1;
      Jump: 027405
    } else {
      Jump: 027653
    }
  } else {
    Jump: 027752
  }
LocReturn 027627:
  TraceOperation 027632 (Print_ret " not something you can close.");
  GamePrint " not something you can close.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 027653:
  TraceOperation 027653 (Je [Var (Global 239),Con 2] (Branch F (Dloc 027675)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),2)) {
    TraceOperation 027657 (CallN (Floc 027404) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 027657;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 1;
    Jump: 027405
  } else {
    Jump: 027675
  }
LocReturn 027657:
  TraceOperation 027662 (Print_ret " already closed.");
  GamePrint " already closed.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 027675:
  TraceOperation 027675 (Je [Var (Global 239),Con 3] (Branch F (Dloc 027696)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),3)) {
    TraceOperation 027679 (Print "You close ");
    GamePrint "You close ";
    TraceOperation 027688 (CallN (Floc 081916) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 027688;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 081917
  } else {
    Jump: 027696
  }
LocReturn 027688:
  TraceOperation 027693 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 027696:
  TraceOperation 027696 (Je [Var (Global 239),Con 4] (Branch F (Dloc 027725)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),4)) {
    TraceOperation 027700 (CallN (Floc 081964) [Var (Global 37)]);
    Let b3 = M[007280];
    Let b4 = M[007281];
    PushFrame;
    PushReturnAddress 027700;
    SetLocal 1 MakeHiLo(b3,b4);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 081965
  } else {
    Jump: 027725
  }
LocReturn 027700:
  TraceOperation 027705 (Print " closes ");
  GamePrint " closes ";
  TraceOperation 027712 (CallN (Floc 081916) [Var (Local 2)]);
  PushFrame;
  PushReturnAddress 027712;
  SetLocal 1 GetLocal(2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 081917
LocReturn 027712:
  TraceOperation 027717 (Print ".\n");
  GamePrint ".\n";
  TraceOperation 027722 (Jump 027751);
  Jump: 027751
LocOp 027725:
  TraceOperation 027725 (Je [Var (Global 239),Con 5] (Branch F (Dloc 027751)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),5)) {
    TraceOperation 027729 (CallN (Floc 081964) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 027729;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 081965
  } else {
    Jump: 027751
  }
LocReturn 027729:
  TraceOperation 027734 (Print " close");
  GamePrint " close";
  TraceOperation 027739 (Test_attr (Var (Local 2)) (Con 26) (Branch T (Dloc 027746)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),3)];
  if (TestBit(b1,5)) {
    Jump: 027746
  } else {
    TraceOperation 027743 (Print "s");
    GamePrint "s";
    Jump: 027746
  }
LocOp 027746:
  TraceOperation 027746 (Print ".\n");
  GamePrint ".\n";
  Jump: 027751
LocOp 027751:
  TraceOperation 027751 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 027752:
  TraceOperation 027752 (Je [Var (Global 233),Con 15] (Branch F (Dloc 027803)));
  Let b1 = M[007672];
  Let b2 = M[007673];
  if (Equal(MakeHiLo(b1,b2),15)) {
    TraceOperation 027756 (Store (Con 255) (Var (Local 1)));
    SetByte 007684 HiByte(GetLocal(1));
    SetByte 007685 LoByte(GetLocal(1));
    TraceOperation 027759 (Je [Var (Global 239),Con 1] (Branch F (Dloc 027774)));
    Let b3 = M[007684];
    Let b4 = M[007685];
    if (Equal(MakeHiLo(b3,b4),1)) {
      TraceOperation 027763 (Print_paddr (Con 28546));
      Note "<static Gettext address>";
      GamePrint "You discover nothing of interest in ";
      TraceOperation 027766 (CallN (Floc 081916) [Var (Local 2)]);
      PushFrame;
      PushReturnAddress 027766;
      SetLocal 1 GetLocal(2);
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 081917
    } else {
      Jump: 027774
    }
  } else {
    Jump: 027803
  }
LocReturn 027766:
  TraceOperation 027771 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 027774:
  TraceOperation 027774 (Je [Var (Global 239),Con 2] (Branch F (Dloc 027802)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),2)) {
    TraceOperation 027778 (CallN (Floc 081964) [Var (Global 37)]);
    Let b3 = M[007280];
    Let b4 = M[007281];
    PushFrame;
    PushReturnAddress 027778;
    SetLocal 1 MakeHiLo(b3,b4);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 081965
  } else {
    Jump: 027802
  }
LocReturn 027778:
  TraceOperation 027783 (Print " looks at ");
  GamePrint " looks at ";
  TraceOperation 027792 (CallN (Floc 081916) [Var (Local 2)]);
  PushFrame;
  PushReturnAddress 027792;
  SetLocal 1 GetLocal(2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 081917
LocReturn 027792:
  TraceOperation 027797 (Print ".\n");
  GamePrint ".\n";
  Jump: 027802
LocOp 027802:
  TraceOperation 027802 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 027803:
  TraceOperation 027803 (Je [Var (Global 233),Con 16] (Branch F (Dloc 027838)));
  Let b1 = M[007672];
  Let b2 = M[007673];
  if (Equal(MakeHiLo(b1,b2),16)) {
    TraceOperation 027807 (Print "Cutting ");
    GamePrint "Cutting ";
    TraceOperation 027814 (CallN (Floc 027212) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 027814;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 1;
    Jump: 027213
  } else {
    Jump: 027838
  }
LocReturn 027814:
  TraceOperation 027819 (Print_ret " up would achieve little.");
  GamePrint " up would achieve little.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 027838:
  TraceOperation 027838 (Je [Var (Global 233),Con 17] (Branch F (Dloc 027925)));
  Let b1 = M[007672];
  Let b2 = M[007673];
  if (Equal(MakeHiLo(b1,b2),17)) {
    TraceOperation 027843 (Store (Con 255) (Var (Local 1)));
    SetByte 007684 HiByte(GetLocal(1));
    SetByte 007685 LoByte(GetLocal(1));
    TraceOperation 027846 (Je [Var (Global 239),Con 1] (Branch F (Dloc 027873)));
    Let b3 = M[007684];
    Let b4 = M[007685];
    if (Equal(MakeHiLo(b3,b4),1)) {
      TraceOperation 027850 (Print "You're not wearing ");
      GamePrint "You're not wearing ";
      TraceOperation 027865 (CallN (Floc 027212) [Var (Local 2)]);
      PushFrame;
      PushReturnAddress 027865;
      SetLocal 1 GetLocal(2);
      MakeRoutineFrame 1;
      Jump: 027213
    } else {
      Jump: 027873
    }
  } else {
    Jump: 027925
  }
LocReturn 027865:
  TraceOperation 027870 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 027873:
  TraceOperation 027873 (Je [Var (Global 239),Con 2] (Branch F (Dloc 027896)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),2)) {
    TraceOperation 027877 (Print "You take off ");
    GamePrint "You take off ";
    TraceOperation 027888 (CallN (Floc 081916) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 027888;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 081917
  } else {
    Jump: 027896
  }
LocReturn 027888:
  TraceOperation 027893 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 027896:
  TraceOperation 027896 (Je [Var (Global 239),Con 3] (Branch F (Dloc 027924)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),3)) {
    TraceOperation 027900 (CallN (Floc 081964) [Var (Global 37)]);
    Let b3 = M[007280];
    Let b4 = M[007281];
    PushFrame;
    PushReturnAddress 027900;
    SetLocal 1 MakeHiLo(b3,b4);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 081965
  } else {
    Jump: 027924
  }
LocReturn 027900:
  TraceOperation 027905 (Print " takes off ");
  GamePrint " takes off ";
  TraceOperation 027914 (CallN (Floc 081916) [Var (Local 2)]);
  PushFrame;
  PushReturnAddress 027914;
  SetLocal 1 GetLocal(2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 081917
LocReturn 027914:
  TraceOperation 027919 (Print ".\n");
  GamePrint ".\n";
  Jump: 027924
LocOp 027924:
  TraceOperation 027924 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 027925:
  TraceOperation 027925 (Je [Var (Global 233),Con 18] (Branch F (Dloc 027934)));
  Let b1 = M[007672];
  Let b2 = M[007673];
  if (Equal(MakeHiLo(b1,b2),18)) {
    TraceOperation 027929 (Print_paddr (Con 28553));
    Note "<static Gettext address>";
    GamePrint "There's nothing suitable to drink here.";
    TraceOperation 027932 New_line;
    GamePrint "\n";
    TraceOperation 027933 Rtrue;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 027934
  }
LocOp 027934:
  TraceOperation 027934 (Je [Var (Global 233),Con 19] (Branch F (Dloc 028144)));
  Let b1 = M[007672];
  Let b2 = M[007673];
  if (Equal(MakeHiLo(b1,b2),19)) {
    TraceOperation 027939 (Store (Con 255) (Var (Local 1)));
    SetByte 007684 HiByte(GetLocal(1));
    SetByte 007685 LoByte(GetLocal(1));
    TraceOperation 027942 (Je [Var (Global 239),Con 1] (Branch F (Dloc 027984)));
    Let b3 = M[007684];
    Let b4 = M[007685];
    if (Equal(MakeHiLo(b3,b4),1)) {
      TraceOperation 027946 (Test_attr (Var (Local 2)) (Con 26) (Branch F (Dloc 027963)));
      Let b5 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),3)];
      if (TestBit(b5,5)) {
        TraceOperation 027950 (CallN (Floc 081964) [Var (Local 2)]);
        PushFrame;
        PushReturnAddress 027950;
        SetLocal 1 GetLocal(2);
        MakeRoutineFrame 2;
        SetLocal 2 0;
        Jump: 081965
      } else {
        Jump: 027963
      }
    } else {
      Jump: 027984
    }
  } else {
    Jump: 028144
  }
LocReturn 027950:
  TraceOperation 027955 (Print " are ");
  GamePrint " are ";
  TraceOperation 027960 (Jump 027973);
  Jump: 027973
LocOp 027963:
  TraceOperation 027963 (CallN (Floc 081964) [Var (Local 2)]);
  PushFrame;
  PushReturnAddress 027963;
  SetLocal 1 GetLocal(2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 081965
LocReturn 027963:
  TraceOperation 027968 (Print " is ");
  GamePrint " is ";
  Jump: 027973
LocOp 027973:
  TraceOperation 027973 (Print_ret "already here.");
  GamePrint "already here.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 027984:
  TraceOperation 027984 (Je [Var (Global 239),Con 2] (Branch F (Dloc 028009)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),2)) {
    TraceOperation 027988 (Print "You haven't got ");
    GamePrint "You haven't got ";
    TraceOperation 028001 (CallN (Floc 027212) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 028001;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 1;
    Jump: 027213
  } else {
    Jump: 028009
  }
LocReturn 028001:
  TraceOperation 028006 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 028009:
  TraceOperation 028009 (Je [Var (Global 239),Con 3] (Branch F (Dloc 028040)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),3)) {
    TraceOperation 028013 (Print "(first taking ");
    GamePrint "(first taking ";
    TraceOperation 028024 (CallN (Floc 081916) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 028024;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 081917
  } else {
    Jump: 028040
  }
LocReturn 028024:
  TraceOperation 028029 (Print " off)\n");
  GamePrint " off)\n";
  TraceOperation 028036 (Store (Con 20) (Con 0));
  SetByte 007214 0;
  SetByte 007215 0;
  TraceOperation 028039 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 028040:
  TraceOperation 028040 (Je [Var (Global 239),Con 4] (Branch F (Dloc 028053)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),4)) {
    TraceOperation 028044 (Print_ret "Dropped.");
    GamePrint "Dropped.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 028053
  }
LocOp 028053:
  TraceOperation 028053 (Je [Var (Global 239),Con 5] (Branch F (Dloc 028084)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),5)) {
    TraceOperation 028057 (Print "There is no more room on ");
    GamePrint "There is no more room on ";
    TraceOperation 028076 (CallN (Floc 081916) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 028076;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 081917
  } else {
    Jump: 028084
  }
LocReturn 028076:
  TraceOperation 028081 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 028084:
  TraceOperation 028084 (Je [Var (Global 239),Con 6] (Branch F (Dloc 028115)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),6)) {
    TraceOperation 028088 (Print "There is no more room in ");
    GamePrint "There is no more room in ";
    TraceOperation 028107 (CallN (Floc 081916) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 028107;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 081917
  } else {
    Jump: 028115
  }
LocReturn 028107:
  TraceOperation 028112 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 028115:
  TraceOperation 028115 (Je [Var (Global 239),Con 7] (Branch F (Dloc 028143)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),7)) {
    TraceOperation 028119 (CallN (Floc 081964) [Var (Global 37)]);
    Let b3 = M[007280];
    Let b4 = M[007281];
    PushFrame;
    PushReturnAddress 028119;
    SetLocal 1 MakeHiLo(b3,b4);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 081965
  } else {
    Jump: 028143
  }
LocReturn 028119:
  TraceOperation 028124 (Print " puts down ");
  GamePrint " puts down ";
  TraceOperation 028133 (CallN (Floc 081916) [Var (Local 2)]);
  PushFrame;
  PushReturnAddress 028133;
  SetLocal 1 GetLocal(2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 081917
LocReturn 028133:
  TraceOperation 028138 (Print ".\n");
  GamePrint ".\n";
  Jump: 028143
LocOp 028143:
  TraceOperation 028143 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 028144:
  TraceOperation 028144 (Je [Var (Global 233),Con 20] (Branch F (Dloc 028228)));
  Let b1 = M[007672];
  Let b2 = M[007673];
  if (Equal(MakeHiLo(b1,b2),20)) {
    TraceOperation 028149 (Store (Con 255) (Var (Local 1)));
    SetByte 007684 HiByte(GetLocal(1));
    SetByte 007685 LoByte(GetLocal(1));
    TraceOperation 028152 (Je [Var (Global 239),Con 1] (Branch F (Dloc 028176)));
    Let b3 = M[007684];
    Let b4 = M[007685];
    if (Equal(MakeHiLo(b3,b4),1)) {
      TraceOperation 028156 (CallN (Floc 027404) [Var (Local 2)]);
      PushFrame;
      PushReturnAddress 028156;
      SetLocal 1 GetLocal(2);
      MakeRoutineFrame 1;
      Jump: 027405
    } else {
      Jump: 028176
    }
  } else {
    Jump: 028228
  }
LocReturn 028156:
  TraceOperation 028161 (Print_ret " plainly inedible.");
  GamePrint " plainly inedible.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 028176:
  TraceOperation 028176 (Je [Var (Global 239),Con 2] (Branch F (Dloc 028203)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),2)) {
    TraceOperation 028180 (Print "You eat ");
    GamePrint "You eat ";
    TraceOperation 028187 (CallN (Floc 081916) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 028187;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 081917
  } else {
    Jump: 028203
  }
LocReturn 028187:
  TraceOperation 028192 (Print_ret ". Not bad.");
  GamePrint ". Not bad.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 028203:
  TraceOperation 028203 (Je [Var (Global 239),Con 3] (Branch F (Dloc 028227)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),3)) {
    TraceOperation 028207 (CallN (Floc 081964) [Var (Global 37)]);
    Let b3 = M[007280];
    Let b4 = M[007281];
    PushFrame;
    PushReturnAddress 028207;
    SetLocal 1 MakeHiLo(b3,b4);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 081965
  } else {
    Jump: 028227
  }
LocReturn 028207:
  TraceOperation 028212 (Print " eats ");
  GamePrint " eats ";
  TraceOperation 028217 (CallN (Floc 081916) [Var (Local 2)]);
  PushFrame;
  PushReturnAddress 028217;
  SetLocal 1 GetLocal(2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 081917
LocReturn 028217:
  TraceOperation 028222 (Print ".\n");
  GamePrint ".\n";
  Jump: 028227
LocOp 028227:
  TraceOperation 028227 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 028228:
  TraceOperation 028228 (Je [Var (Global 233),Con 21] (Branch F (Dloc 028635)));
  Let b1 = M[007672];
  Let b2 = M[007673];
  if (Equal(MakeHiLo(b1,b2),21)) {
    TraceOperation 028233 (Store (Con 255) (Var (Local 1)));
    SetByte 007684 HiByte(GetLocal(1));
    SetByte 007685 LoByte(GetLocal(1));
    TraceOperation 028236 (Je [Var (Global 239),Con 1] (Branch F (Dloc 028276)));
    Let b3 = M[007684];
    Let b4 = M[007685];
    if (Equal(MakeHiLo(b3,b4),1)) {
      TraceOperation 028240 (Print "But you're already ");
      GamePrint "But you're already ";
      TraceOperation 028255 (Test_attr (Var (Local 2)) (Con 17) (Branch F (Dloc 028265)));
      Let b5 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),2)];
      if (TestBit(b5,6)) {
        TraceOperation 028259 (Print "on ");
        GamePrint "on ";
        TraceOperation 028262 (Jump 028268);
        Jump: 028268
      } else {
        Jump: 028265
      }
    } else {
      Jump: 028276
    }
  } else {
    Jump: 028635
  }
LocOp 028265:
  TraceOperation 028265 (Print "in ");
  GamePrint "in ";
  Jump: 028268
LocOp 028268:
  TraceOperation 028268 (CallN (Floc 081916) [Var (Local 2)]);
  PushFrame;
  PushReturnAddress 028268;
  SetLocal 1 GetLocal(2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 081917
LocReturn 028268:
  TraceOperation 028273 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 028276:
  TraceOperation 028276 (Je [Var (Global 239),Con 2] (Branch F (Dloc 028381)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),2)) {
    TraceOperation 028281 (Test_attr (Var (Local 2)) (Con 26) (Branch F (Dloc 028295)));
    Let b3 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),3)];
    if (TestBit(b3,5)) {
      TraceOperation 028285 (Print "They're");
      GamePrint "They're";
      TraceOperation 028292 (Jump 028302);
      Jump: 028302
    } else {
      Jump: 028295
    }
  } else {
    Jump: 028381
  }
LocOp 028295:
  TraceOperation 028295 (Print "That's");
  GamePrint "That's";
  Jump: 028302
LocOp 028302:
  TraceOperation 028302 (Print " not something you can ");
  GamePrint " not something you can ";
  TraceOperation 028319 (Store (Con 255) (Var (Global 77)));
  Let b1 = M[007360];
  Let b2 = M[007361];
  SetByte 007684 b1;
  SetByte 007685 b2;
  TraceOperation 028322 (Je [Var (Global 239),Con 23807] (Branch F (Dloc 028337)));
  Let b3 = M[007684];
  Let b4 = M[007685];
  if (Equal(MakeHiLo(b3,b4),23807)) {
    TraceOperation 028328 (Print_ret "stand on.");
    GamePrint "stand on.\n";
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult 1;
    JumpIndirect: (return) return_address_5
  } else {
    Jump: 028337
  }
LocOp 028337:
  TraceOperation 028337 (Je [Var (Global 239),Con 23627] (Branch F (Dloc 028354)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),23627)) {
    TraceOperation 028343 (Print_ret "sit down on.");
    GamePrint "sit down on.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 028354
  }
LocOp 028354:
  TraceOperation 028354 (Je [Var (Global 239),Con 22700] (Branch F (Dloc 028371)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),22700)) {
    TraceOperation 028360 (Print_ret "lie down on.");
    GamePrint "lie down on.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 028371
  }
LocOp 028371:
  TraceOperation 028371 (Print_ret "enter.");
  GamePrint "enter.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 028412:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 028413
LocOp 028413:
  TraceOperation 028413 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 028554:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 028555
LocOp 028555:
  TraceOperation 028555 (Print_ret ")");
  GamePrint ")\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 028628:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 028629
LocOp 028629:
  TraceOperation 028629 (Print ".\n");
  GamePrint ".\n";
  TraceOperation 028634 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 028638:
  MakeRoutineFrame 0;
  Jump: 028639
LocOp 028639:
  TraceOperation 028639 (CallN (Floc 047100) []);
  PushFrame;
  PushReturnAddress 028639;
  Error: setDefaults: BadRoutineHeader, n>15
LocReturn 028639:
  TraceOperation 028642 (Je [Con 65,Con 255] (Branch F (Dloc 028972)));
  Jump: 028972
--------------------------------------------------
LocRoutine 028720:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 028721
LocOp 028721:
  TraceOperation 028721 (Clear_attr (Con 71) (Con 179));
  Let b1 = M[001394];
  SetByte 001394 ClearBit(b1,4);
  TraceOperation 028724 (Get_prop_addr (Var (Global 85)) (Con 200) (Global 149));
  Let b2 = M[007376];
  Let b3 = M[007377];
  Let b4 = M[Offset(Offset(000378,Mul(MakeHiLo(b2,b3),14)),12)];
  Let b5 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b2,b3),14)),12),1)];
  Let b6 = M[Address(MakeHiLo(b4,b5))];
  Let loop_var7 = DeAddress(Offset(Address(MakeHiLo(b4,b5)),Add(Mul(2,Widen(b6)),1)));
  Label 8: {
    Let b9 = M[Address(loop_var7)];
    if (IsZeroByte(b9)) {
      SetByte 007504 0;
      SetByte 007505 0;
    } else {
      if (TestBit(b9,7)) {
        Let b10 = M[Offset(Address(loop_var7),1)];
        if (Equal(200,Widen(BwAnd(b9,63)))) {
          SetByte 007504 HiByte(DeAddress(Offset(Address(loop_var7),2)));
          SetByte 007505 LoByte(DeAddress(Offset(Address(loop_var7),2)));
        } else {
          Assign loop_var7 = DeAddress(Offset(Offset(Address(loop_var7),2),Widen(BwAnd(b10,63))));
          Goto: Label 8
        }
      } else {
        if (TestBit(b9,6)) {
          if (Equal(200,Widen(BwAnd(b9,63)))) {
            SetByte 007504 HiByte(DeAddress(Offset(Address(loop_var7),1)));
            SetByte 007505 LoByte(DeAddress(Offset(Address(loop_var7),1)));
          } else {
            Assign loop_var7 = DeAddress(Offset(Offset(Address(loop_var7),1),2));
            Goto: Label 8
          }
        } else {
          if (Equal(200,Widen(BwAnd(b9,63)))) {
            SetByte 007504 HiByte(DeAddress(Offset(Address(loop_var7),1)));
            SetByte 007505 LoByte(DeAddress(Offset(Address(loop_var7),1)));
          } else {
            Assign loop_var7 = DeAddress(Offset(Offset(Address(loop_var7),1),1));
            Goto: Label 8
          }
        }
      }
    }
  }
  TraceOperation 028728 (Print_ret "off.");
  GamePrint "off.\n";
  PopFrame;
  PopReturnAddress return_address_11;
  SetResult 1;
  JumpIndirect: (return) return_address_11
--------------------------------------------------
LocRoutine 028762:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 028763
LocOp 028763:
  TraceOperation 028763 (Print ".\n");
  GamePrint ".\n";
  TraceOperation 028768 (Jump 028780);
  Jump: 028780
--------------------------------------------------
LocRoutine 028784:
  MakeRoutineFrame 0;
  Jump: 028785
LocOp 028785:
  TraceOperation 028785 (Verify (Branch F (Dloc 024177)));
  Note "Verify (Branch F (Dloc 024177))";
  TraceOperation 028788 (Je [Con 65,Con 255] (Branch F (Dloc 029118)));
  Jump: 029118
--------------------------------------------------
LocRoutine 028958:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 028959
LocOp 028959:
  TraceOperation 028959 (Ret (Con -32603));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult -32603;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 028966:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 028967
LocOp 028967:
  TraceOperation 028967 (Print ".\n");
  GamePrint ".\n";
  Jump: 028972
LocOp 028972:
  TraceOperation 028972 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 028996:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 028997
LocOp 028997:
  TraceOperation 028997 (Print_ret " at the moment.");
  GamePrint " at the moment.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 029062:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 029063
LocOp 029063:
  TraceOperation 029063 (Print_paddr (Con 28594));
  Note "<static Gettext address>";
  GamePrint " for a while, but don't achieve much.";
  TraceOperation 029066 New_line;
  GamePrint "\n";
  TraceOperation 029067 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 029076:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 029077
LocOp 029077:
  TraceOperation 029077 (Test_attr (Var (Local 2)) (Con 26) (Branch F (Dloc 029091)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),3)];
  if (TestBit(b1,5)) {
    TraceOperation 029081 (Print " don't");
    GamePrint " don't";
    TraceOperation 029088 (Jump 029098);
    Jump: 029098
  } else {
    Jump: 029091
  }
LocOp 029091:
  TraceOperation 029091 (Print " doesn't");
  GamePrint " doesn't";
  Jump: 029098
LocOp 029098:
  TraceOperation 029098 (Print_ret " seem interested.");
  GamePrint " seem interested.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 029244:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 029245
LocOp 029245:
  TraceOperation 029245 (Print " to ");
  GamePrint " to ";
  TraceOperation 029250 (CallN (Floc 081916) [Var (Global 48)]);
  Let b1 = M[007302];
  Let b2 = M[007303];
  PushFrame;
  PushReturnAddress 029250;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 081917
LocReturn 029250:
  TraceOperation 029255 (Print ".\n");
  GamePrint ".\n";
  TraceOperation 029260 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 029342:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 029343
LocOp 029343:
  TraceOperation 029343 (Add (Con 1) (Var (Global 1)) (Global 42));
  Let b1 = M[007208];
  Let b2 = M[007209];
  SetByte 007290 HiByte(Add(1,MakeHiLo(b1,b2)));
  SetByte 007291 LoByte(Add(1,MakeHiLo(b1,b2)));
  TraceOperation 029347 (Test (Var (Global 112)) (Con 165) (Branch T (Dloc 029375)));
  Let b3 = M[007430];
  Let b4 = M[007431];
  if (Equal(And(MakeHiLo(b3,b4),165),165)) {
    Jump: 029375
  } else {
    TraceOperation 029351 (Loadw (Con 79) (Var (Global 239)) (Local 2));
    Let b5 = M[007684];
    Let b6 = M[007685];
    Let b7 = M[Offset(000079,Mul(2,MakeHiLo(b5,b6)))];
    Let b8 = M[Offset(Offset(000079,Mul(2,MakeHiLo(b5,b6))),1)];
    SetLocal 2 MakeHiLo(b7,b8);
    TraceOperation 029355 (Print_ret ".");
    GamePrint ".\n";
    PopFrame;
    PopReturnAddress return_address_9;
    SetResult 1;
    JumpIndirect: (return) return_address_9
  }
--------------------------------------------------
LocRoutine 029414:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 029415
LocOp 029415:
  TraceOperation 029415 (Print " ");
  GamePrint " ";
  TraceOperation 029418 (CallN (Floc 027308) [Var (Local 2)]);
  PushFrame;
  PushReturnAddress 029418;
  SetLocal 1 GetLocal(2);
  MakeRoutineFrame 1;
  Jump: 027309
LocReturn 029418:
  TraceOperation 029423 (Print_ret " in the way.");
  GamePrint " in the way.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 029556:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 029557
LocOp 029557:
  TraceOperation 029557 (Jump 029998);
  Jump: 029998
--------------------------------------------------
LocRoutine 029570:
  MakeRoutineFrame 0;
  Jump: 029571
LocOp 029571:
  TraceOperation 029571 (Div (Con 219) (Con 43) Sp);
  PushStack 5;
  TraceOperation 029576 (Insert_obj (Con 244) (Var (Global 56)));
  Let b1 = M[007318];
  Let b2 = M[007319];
  Let b3 = M[003800];
  Let b4 = M[003801];
  if (IsZero(MakeHiLo(b3,b4))) {} else {
    Let b5 = M[Offset(Offset(000378,Mul(MakeHiLo(b3,b4),14)),10)];
    Let b6 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b3,b4),14)),10),1)];
    if (Equal(MakeHiLo(b5,b6),244)) {
      Let b7 = M[003802];
      Let b8 = M[003803];
      SetByte Offset(Offset(000378,Mul(MakeHiLo(b3,b4),14)),10) b7;
      SetByte Offset(Offset(Offset(000378,Mul(MakeHiLo(b3,b4),14)),10),1) b8;
    } else {
      Let loop_var9 = MakeHiLo(b5,b6);
      Label 10: {
        Let b11 = M[Offset(Offset(000378,Mul(loop_var9,14)),8)];
        Let b12 = M[Offset(Offset(Offset(000378,Mul(loop_var9,14)),8),1)];
        if (Equal(MakeHiLo(b11,b12),244)) {
          Let b13 = M[003802];
          Let b14 = M[003803];
          SetByte Offset(Offset(000378,Mul(loop_var9,14)),8) b13;
          SetByte Offset(Offset(Offset(000378,Mul(loop_var9,14)),8),1) b14;
        } else {
          Assign loop_var9 = MakeHiLo(b11,b12);
          Goto: Label 10
        }
      }
    }
  }
  SetByte 003800 b1;
  SetByte 003801 b2;
  Let b15 = M[Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),10)];
  Let b16 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),10),1)];
  SetByte 003802 b15;
  SetByte 003803 b16;
  SetByte Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),10) 0;
  SetByte Offset(Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),10),1) 244;
  TraceOperation 029579 (Jin (Con 30) (Con 155) (Branch T (Dloc 023603)));
  Let b17 = M[000804];
  Let b18 = M[000805];
  if (Equal(155,MakeHiLo(b17,b18))) {
    Jump: 023603
  } else {
    TraceOperation 029584 (Jump 029998);
    Jump: 029998
  }
--------------------------------------------------
LocRoutine 029640:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 029641
LocOp 029641:
  TraceOperation 029641 (Jump 029998);
  Jump: 029998
--------------------------------------------------
LocRoutine 029678:
  MakeRoutineFrame 0;
  Jump: 029679
LocOp 029679:
  TraceOperation 029679 (Ret (Con 32));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 32;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 029708:
  MakeRoutineFrame 0;
  Jump: 029709
LocOp 029709:
  TraceOperation 029709 (Div (Con 219) (Con 43) Sp);
  PushStack 5;
  TraceOperation 029714 (Ret (Con 32));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 32;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 029720:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 029721
LocOp 029721:
  TraceOperation 029721 (Print " from below");
  GamePrint " from below";
  TraceOperation 029730 (Jump 029998);
  Jump: 029998
--------------------------------------------------
LocRoutine 029748:
  MakeRoutineFrame 0;
  Jump: 029749
LocOp 029749:
  TraceOperation 029749 (Ret (Con 32));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 32;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 029840:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 029841
LocOp 029841:
  TraceOperation 029841 (Jump 029998);
  Jump: 029998
--------------------------------------------------
LocRoutine 029876:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 029877
LocOp 029877:
  TraceOperation 029877 (Print " in front, and you along too");
  GamePrint " in front, and you along too";
  TraceOperation 029898 (Jump 029998);
  Jump: 029998
--------------------------------------------------
LocRoutine 029918:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 029919
LocOp 029919:
  TraceOperation 029919 (Print " in front");
  GamePrint " in front";
  TraceOperation 029926 (Jump 029998);
  Jump: 029998
--------------------------------------------------
LocRoutine 029946:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 029947
LocOp 029947:
  TraceOperation 029947 (Print " away");
  GamePrint " away";
  TraceOperation 029952 (Jump 029998);
  Jump: 029998
--------------------------------------------------
LocRoutine 029972:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 029973
LocOp 029973:
  TraceOperation 029973 (Print " in");
  GamePrint " in";
  TraceOperation 029976 (Jump 029998);
  Jump: 029998
--------------------------------------------------
LocRoutine 030018:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 030019
LocOp 030019:
  TraceOperation 030019 (Add (Con 0) (Var (Global 218)) (Local 1));
  Let b1 = M[007642];
  Let b2 = M[007643];
  SetLocal 1 Add(0,MakeHiLo(b1,b2));
  TraceOperation 030023 Nop;
  Note "(030023,Nop)";
  TraceOperation 030024 (Inc_chk (Var (Global 30)) (Con 205) (Branch T (Dloc 030245)));
  Let b3 = M[007266];
  Let b4 = M[007267];
  if (IsZeroByte(b4)) {
    PopStack popped5;
    PushStack Add(popped5,1);
    if (GreaterThanEqual(popped5,205)) {
    }
  } else {
    if (LessThanByte(b4,16)) {
      SetLocal b4 Add(GetLocal(b4),1);
      if (GreaterThanEqual(GetLocal(b4),205)) {
      }
    } else {
      Let b6 = M[Offset(007206,Mul(2,Widen(MinusByte(b4,16))))];
      Let b7 = M[Offset(Offset(007206,Mul(2,Widen(MinusByte(b4,16)))),1)];
      SetByte Offset(007206,Mul(2,Widen(MinusByte(b4,16)))) HiByte(Add(MakeHiLo(b6,b7),1));
      SetByte Offset(Offset(007206,Mul(2,Widen(MinusByte(b4,16)))),1) LoByte(Add(MakeHiLo(b6,b7),1));
      if (GreaterThanEqual(MakeHiLo(b6,b7),205)) {
      }
    }
  }
  TraceOperation 030029 (Loadw (Con 79) (Var (Global 239)) (Local 2));
  Let b8 = M[007684];
  Let b9 = M[007685];
  Let b10 = M[Offset(000079,Mul(2,MakeHiLo(b8,b9)))];
  Let b11 = M[Offset(Offset(000079,Mul(2,MakeHiLo(b8,b9))),1)];
  SetLocal 2 MakeHiLo(b10,b11);
  TraceOperation 030033 (Print " before you can put ");
  GamePrint " before you can put ";
  TraceOperation 030048 (CallN (Floc 027260) [Var (Local 2)]);
  PushFrame;
  PushReturnAddress 030048;
  SetLocal 1 GetLocal(2);
  MakeRoutineFrame 1;
  Jump: 027261
LocReturn 030048:
  TraceOperation 030053 (Print_ret " into something else.");
  GamePrint " into something else.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 030078:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 030079
LocOp 030079:
  TraceOperation 030079 (Print_ret " can't contain things.");
  GamePrint " can't contain things.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 030098:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 030099
LocOp 030099:
  TraceOperation 030099 (Mul (Var (Global 202)) (Con 47) (Global 64));
  Let b1 = M[007610];
  Let b2 = M[007611];
  SetByte 007334 HiByte(Mul(MakeHiLo(b1,b2),47));
  SetByte 007335 LoByte(Mul(MakeHiLo(b1,b2),47));
  TraceOperation 030103 (Set_attr (Con 2) (Con 178));
  Let b3 = M[000428];
  SetByte 000428 SetBit(b3,5);
  TraceOperation 030106 (Jz (Con -23078) (Branch F (Dloc 025783)));
  Jump: 025783
--------------------------------------------------
LocRoutine 030222:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 030223
LocOp 030223:
  TraceOperation 030223 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 030252:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 030253
LocOp 030253:
  TraceOperation 030253 (Print " into ");
  GamePrint " into ";
  TraceOperation 030258 (CallN (Floc 081916) [Var (Global 48)]);
  Let b1 = M[007302];
  Let b2 = M[007303];
  PushFrame;
  PushReturnAddress 030258;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 081917
LocReturn 030258:
  TraceOperation 030263 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 030284:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 030285
LocOp 030285:
  TraceOperation 030285 (Print " into ");
  GamePrint " into ";
  TraceOperation 030290 (CallN (Floc 081916) [Var (Global 48)]);
  Let b1 = M[007302];
  Let b2 = M[007303];
  PushFrame;
  PushReturnAddress 030290;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 081917
LocReturn 030290:
  TraceOperation 030295 (Print ".\n");
  GamePrint ".\n";
  TraceOperation 030300 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 030384:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 030385
LocOp 030385:
  TraceOperation 030385 (Print " looks through ");
  GamePrint " looks through ";
  TraceOperation 030396 (CallN (Floc 027464) [Var (Local 2)]);
  PushFrame;
  PushReturnAddress 030396;
  SetLocal 1 GetLocal(2);
  MakeRoutineFrame 1;
  Jump: 027465
LocReturn 030396:
  TraceOperation 030401 (Print " possessions.\n");
  GamePrint " possessions.\n";
  TraceOperation 030414 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 030478:
  MakeRoutineFrame 0;
  Jump: 030479
LocOp 030479:
  TraceOperation 030479 (Je [Con 137,Con 45] (Branch T (Dloc 030544)));
  TraceOperation 030483 (Je [Con 65,Con 255] (Branch F (Dloc 030826)));
  Jump: 030826
--------------------------------------------------
LocRoutine 030694:
  MakeRoutineFrame 0;
  Jump: 030695
LocOp 030695:
  TraceOperation 030695 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 030716:
  MakeRoutineFrame 0;
  Jump: 030717
LocOp 030717:
  TraceOperation 030717 (Ret (Con 65));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 65;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 030734:
  MakeRoutineFrame 0;
  Jump: 030735
LocOp 030735:
  TraceOperation 030735 (Remove_obj (Con 16895));
  SetByte 18446744073709526386 0;
  SetByte 18446744073709526387 0;
  TraceOperation 030738 (Insert_obj (Con 74) (Con 178));
  Let b1 = M[001420];
  Let b2 = M[001421];
  if (IsZero(MakeHiLo(b1,b2))) {} else {
    Let b3 = M[Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),10)];
    Let b4 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),10),1)];
    if (Equal(MakeHiLo(b3,b4),74)) {
      Let b5 = M[001422];
      Let b6 = M[001423];
      SetByte Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),10) b5;
      SetByte Offset(Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),10),1) b6;
    } else {
      Let loop_var7 = MakeHiLo(b3,b4);
      Label 8: {
        Let b9 = M[Offset(Offset(000378,Mul(loop_var7,14)),8)];
        Let b10 = M[Offset(Offset(Offset(000378,Mul(loop_var7,14)),8),1)];
        if (Equal(MakeHiLo(b9,b10),74)) {
          Let b11 = M[001422];
          Let b12 = M[001423];
          SetByte Offset(Offset(000378,Mul(loop_var7,14)),8) b11;
          SetByte Offset(Offset(Offset(000378,Mul(loop_var7,14)),8),1) b12;
        } else {
          Assign loop_var7 = MakeHiLo(b9,b10);
          Goto: Label 8
        }
      }
    }
  }
  SetByte 001420 0;
  SetByte 001421 178;
  Let b13 = M[002880];
  Let b14 = M[002881];
  SetByte 001422 b13;
  SetByte 001423 b14;
  SetByte 002880 0;
  SetByte 002881 74;
  TraceOperation 030741 (Jl (Con 52) (Var (Global 209)) (Branch F (Dloc 030752)));
  Let b15 = M[007624];
  Let b16 = M[007625];
  if (LessThan(52,MakeHiLo(b15,b16))) {
    TraceOperation 030745 (Jump 030871);
    Jump: 030871
  } else {
    Jump: 030752
  }
--------------------------------------------------
LocRoutine 030798:
  MakeRoutineFrame 0;
  Jump: 030799
LocOp 030799:
  TraceOperation 030799 (And (Var (Global 49)) (Con 255) (Global 2));
  Let b1 = M[007304];
  Let b2 = M[007305];
  SetByte 007210 HiByte(And(MakeHiLo(b1,b2),255));
  SetByte 007211 LoByte(And(MakeHiLo(b1,b2),255));
  TraceOperation 030803 (Insert_obj (Var (Global 162)) (Con 1));
  Let b3 = M[007530];
  Let b4 = M[007531];
  Let b5 = M[Offset(Offset(000378,Mul(MakeHiLo(b3,b4),14)),6)];
  Let b6 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b3,b4),14)),6),1)];
  if (IsZero(MakeHiLo(b5,b6))) {} else {
    Let b7 = M[Offset(Offset(000378,Mul(MakeHiLo(b5,b6),14)),10)];
    Let b8 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b5,b6),14)),10),1)];
    if (Equal(MakeHiLo(b7,b8),MakeHiLo(b3,b4))) {
      Let b9 = M[Offset(Offset(000378,Mul(MakeHiLo(b3,b4),14)),8)];
      Let b10 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b3,b4),14)),8),1)];
      SetByte Offset(Offset(000378,Mul(MakeHiLo(b5,b6),14)),10) b9;
      SetByte Offset(Offset(Offset(000378,Mul(MakeHiLo(b5,b6),14)),10),1) b10;
    } else {
      Let loop_var11 = MakeHiLo(b7,b8);
      Label 12: {
        Let b13 = M[Offset(Offset(000378,Mul(loop_var11,14)),8)];
        Let b14 = M[Offset(Offset(Offset(000378,Mul(loop_var11,14)),8),1)];
        if (Equal(MakeHiLo(b13,b14),MakeHiLo(b3,b4))) {
          Let b15 = M[Offset(Offset(000378,Mul(MakeHiLo(b3,b4),14)),8)];
          Let b16 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b3,b4),14)),8),1)];
          SetByte Offset(Offset(000378,Mul(loop_var11,14)),8) b15;
          SetByte Offset(Offset(Offset(000378,Mul(loop_var11,14)),8),1) b16;
        } else {
          Assign loop_var11 = MakeHiLo(b13,b14);
          Goto: Label 12
        }
      }
    }
  }
  SetByte Offset(Offset(000378,Mul(MakeHiLo(b3,b4),14)),6) 0;
  SetByte Offset(Offset(Offset(000378,Mul(MakeHiLo(b3,b4),14)),6),1) 1;
  Let b17 = M[000402];
  Let b18 = M[000403];
  SetByte Offset(Offset(000378,Mul(MakeHiLo(b3,b4),14)),8) b17;
  SetByte Offset(Offset(Offset(000378,Mul(MakeHiLo(b3,b4),14)),8),1) b18;
  SetByte 000402 b3;
  SetByte 000403 b4;
  TraceOperation 030806 (Add (Con 79) (Con 38) (Global 42));
  SetByte 007290 0;
  SetByte 007291 117;
  TraceOperation 030810 (Insert_obj (Var (Global 189)) (Var (Global 112)));
  Let b19 = M[007584];
  Let b20 = M[007585];
  Let b21 = M[007430];
  Let b22 = M[007431];
  Let b23 = M[Offset(Offset(000378,Mul(MakeHiLo(b19,b20),14)),6)];
  Let b24 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b19,b20),14)),6),1)];
  if (IsZero(MakeHiLo(b23,b24))) {} else {
    Let b25 = M[Offset(Offset(000378,Mul(MakeHiLo(b23,b24),14)),10)];
    Let b26 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b23,b24),14)),10),1)];
    if (Equal(MakeHiLo(b25,b26),MakeHiLo(b19,b20))) {
      Let b27 = M[Offset(Offset(000378,Mul(MakeHiLo(b19,b20),14)),8)];
      Let b28 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b19,b20),14)),8),1)];
      SetByte Offset(Offset(000378,Mul(MakeHiLo(b23,b24),14)),10) b27;
      SetByte Offset(Offset(Offset(000378,Mul(MakeHiLo(b23,b24),14)),10),1) b28;
    } else {
      Let loop_var29 = MakeHiLo(b25,b26);
      Label 30: {
        Let b31 = M[Offset(Offset(000378,Mul(loop_var29,14)),8)];
        Let b32 = M[Offset(Offset(Offset(000378,Mul(loop_var29,14)),8),1)];
        if (Equal(MakeHiLo(b31,b32),MakeHiLo(b19,b20))) {
          Let b33 = M[Offset(Offset(000378,Mul(MakeHiLo(b19,b20),14)),8)];
          Let b34 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b19,b20),14)),8),1)];
          SetByte Offset(Offset(000378,Mul(loop_var29,14)),8) b33;
          SetByte Offset(Offset(Offset(000378,Mul(loop_var29,14)),8),1) b34;
        } else {
          Assign loop_var29 = MakeHiLo(b31,b32);
          Goto: Label 30
        }
      }
    }
  }
  SetByte Offset(Offset(000378,Mul(MakeHiLo(b19,b20),14)),6) b21;
  SetByte Offset(Offset(Offset(000378,Mul(MakeHiLo(b19,b20),14)),6),1) b22;
  Let b35 = M[Offset(Offset(000378,Mul(MakeHiLo(b21,b22),14)),10)];
  Let b36 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b21,b22),14)),10),1)];
  SetByte Offset(Offset(000378,Mul(MakeHiLo(b19,b20),14)),8) b35;
  SetByte Offset(Offset(Offset(000378,Mul(MakeHiLo(b19,b20),14)),8),1) b36;
  SetByte Offset(Offset(000378,Mul(MakeHiLo(b21,b22),14)),10) b19;
  SetByte Offset(Offset(Offset(000378,Mul(MakeHiLo(b21,b22),14)),10),1) b20;
  TraceOperation 030813 (Jump 030871);
  Jump: 030871
--------------------------------------------------
LocRoutine 030902:
  MakeRoutineFrame 0;
  Jump: 030903
LocOp 030903:
  TraceOperation 030903 (Or (Con -255) (Var (Global 49)) (Global 239));
  Let b1 = M[007304];
  Let b2 = M[007305];
  SetByte 007684 HiByte(Or(-255,MakeHiLo(b1,b2)));
  SetByte 007685 LoByte(Or(-255,MakeHiLo(b1,b2)));
  TraceOperation 030909 (Je [Con 100,Con 74] (Branch F (Dloc 031450)));
  Jump: 031450
LocOp 030940:
  TraceOperation 030940 (Print_paddr (Con 28699));
  Note "<static Gettext address>";
  GamePrint "seem to be something you can lock.";
  TraceOperation 030943 New_line;
  GamePrint "\n";
  TraceOperation 030944 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 031000:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 031001
LocOp 031001:
  TraceOperation 031001 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 031160:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 031161
LocOp 031161:
  TraceOperation 031161 (Print ")");
  GamePrint ")";
  TraceOperation 031164 (Jump 031354);
  Jump: 031354
--------------------------------------------------
LocRoutine 031180:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 031181
LocOp 031181:
  TraceOperation 031181 (Print " ");
  GamePrint " ";
  TraceOperation 031184 (Get_child (Var (Local 2)) Sp (Branch F (Dloc 031188)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),10)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(2),14)),10),1)];
  PushStack MakeHiLo(b1,b2);
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 031188
  } else {
    Jump: 031188
  }
LocOp 031188:
  TraceOperation 031188 (CallN (Floc 038496) [Var Sp,Con 3288]);
  PopStack popped1;
  PushFrame;
  PushReturnAddress 031188;
  SetLocal 1 popped1;
  SetLocal 2 3288;
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 038497
LocReturn 031188:
  TraceOperation 031195 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 031206:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 031207
LocOp 031207:
  TraceOperation 031207 (Get_prop (Con 224) (Con 74) (Local 2));
  Let b1 = M[003526];
  Let b2 = M[003527];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let loop_var4 = DeAddress(Offset(Address(MakeHiLo(b1,b2)),Add(Mul(2,Widen(b3)),1)));
  Label 5: {
    Let b6 = M[Address(loop_var4)];
    if (IsZeroByte(b6)) {
      Let b7 = M[000412];
      Let b8 = M[000413];
      SetLocal 2 MakeHiLo(b7,b8);
    } else {
      if (TestBit(b6,7)) {
        Let b9 = M[Offset(Address(loop_var4),1)];
        if (Equal(74,Widen(BwAnd(b6,63)))) {
          if (Equal(Widen(BwAnd(b9,63)),2)) {
            Let b10 = M[Offset(Address(loop_var4),2)];
            Let b11 = M[Offset(Offset(Address(loop_var4),2),1)];
            SetLocal 2 MakeHiLo(b10,b11);
          } else {
            Let b12 = M[Offset(Address(loop_var4),2)];
            SetLocal 2 Widen(b12);
          }
        } else {
          Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),2),Widen(BwAnd(b9,63))));
          Goto: Label 5
        }
      } else {
        if (TestBit(b6,6)) {
          if (Equal(74,Widen(BwAnd(b6,63)))) {
            Let b13 = M[Offset(Address(loop_var4),1)];
            Let b14 = M[Offset(Offset(Address(loop_var4),1),1)];
            SetLocal 2 MakeHiLo(b13,b14);
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),2));
            Goto: Label 5
          }
        } else {
          if (Equal(74,Widen(BwAnd(b6,63)))) {
            Let b15 = M[Offset(Address(loop_var4),1)];
            SetLocal 2 Widen(b15);
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),1));
            Goto: Label 5
          }
        }
      }
    }
  }
  TraceOperation 031211 (Get_prop (Con 74) (Con 178) (Global 2));
  Let b16 = M[001426];
  Let b17 = M[001427];
  Let b18 = M[Address(MakeHiLo(b16,b17))];
  Let loop_var19 = DeAddress(Offset(Address(MakeHiLo(b16,b17)),Add(Mul(2,Widen(b18)),1)));
  Label 20: {
    Let b21 = M[Address(loop_var19)];
    if (IsZeroByte(b21)) {
      Let b22 = M[000620];
      Let b23 = M[000621];
      SetByte 007210 b22;
      SetByte 007211 b23;
    } else {
      if (TestBit(b21,7)) {
        Let b24 = M[Offset(Address(loop_var19),1)];
        if (Equal(178,Widen(BwAnd(b21,63)))) {
          if (Equal(Widen(BwAnd(b24,63)),2)) {
            Let b25 = M[Offset(Address(loop_var19),2)];
            Let b26 = M[Offset(Offset(Address(loop_var19),2),1)];
            SetByte 007210 b25;
            SetByte 007211 b26;
          } else {
            Let b27 = M[Offset(Address(loop_var19),2)];
            SetByte 007210 HiByte(Widen(b27));
            SetByte 007211 LoByte(Widen(b27));
          }
        } else {
          Assign loop_var19 = DeAddress(Offset(Offset(Address(loop_var19),2),Widen(BwAnd(b24,63))));
          Goto: Label 20
        }
      } else {
        if (TestBit(b21,6)) {
          if (Equal(178,Widen(BwAnd(b21,63)))) {
            Let b28 = M[Offset(Address(loop_var19),1)];
            Let b29 = M[Offset(Offset(Address(loop_var19),1),1)];
            SetByte 007210 b28;
            SetByte 007211 b29;
          } else {
            Assign loop_var19 = DeAddress(Offset(Offset(Address(loop_var19),1),2));
            Goto: Label 20
          }
        } else {
          if (Equal(178,Widen(BwAnd(b21,63)))) {
            Let b30 = M[Offset(Address(loop_var19),1)];
            SetByte 007210 HiByte(Widen(b30));
            SetByte 007211 LoByte(Widen(b30));
          } else {
            Assign loop_var19 = DeAddress(Offset(Offset(Address(loop_var19),1),1));
            Goto: Label 20
          }
        }
      }
    }
  }
  TraceOperation 031215 (Get_parent (Con 128) (Global 149));
  Let b31 = M[002176];
  Let b32 = M[002177];
  SetByte 007504 b31;
  SetByte 007505 b32;
  TraceOperation 031218 (Jump 031226);
  Jump: 031226
--------------------------------------------------
LocRoutine 031230:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 031231
LocOp 031231:
  TraceOperation 031231 (Print " you");
  GamePrint " you";
  TraceOperation 031236 (Jump 031244);
  Jump: 031244
--------------------------------------------------
LocRoutine 031282:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 031283
LocOp 031283:
  TraceOperation 031283 (Print_obj (Var (Global 77)));
  Let b1 = M[007360];
  Let b2 = M[007361];
  Let b3 = M[Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),12)];
  Let b4 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),12),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  Let ite_res6 = Ite((IsZeroByte(b5),"",GetText(Offset(Address(MakeHiLo(b3,b4)),1))));
  GamePrint ite_res6;
  TraceOperation 031285 (Inc_chk (Var (Global 184)) (Con 165) (Branch T (Dloc 034360)));
  Let b7 = M[007574];
  Let b8 = M[007575];
  if (IsZeroByte(b8)) {
    PopStack popped9;
    PushStack Add(popped9,1);
    if (GreaterThanEqual(popped9,165)) {
    }
  } else {
    if (LessThanByte(b8,16)) {
      SetLocal b8 Add(GetLocal(b8),1);
      if (GreaterThanEqual(GetLocal(b8),165)) {
      }
    } else {
      Let b10 = M[Offset(007206,Mul(2,Widen(MinusByte(b8,16))))];
      Let b11 = M[Offset(Offset(007206,Mul(2,Widen(MinusByte(b8,16)))),1)];
      SetByte Offset(007206,Mul(2,Widen(MinusByte(b8,16)))) HiByte(Add(MakeHiLo(b10,b11),1));
      SetByte Offset(Offset(007206,Mul(2,Widen(MinusByte(b8,16)))),1) LoByte(Add(MakeHiLo(b10,b11),1));
      if (GreaterThanEqual(MakeHiLo(b10,b11),165)) {
      }
    }
  }
  TraceOperation 031290 (Je [Var (Global 49),Con 255] (Branch F (Dloc 033156)));
  Let b12 = M[007304];
  Let b13 = M[007305];
  if (Equal(MakeHiLo(b12,b13),255)) {
    TraceOperation 031295 (Print_paddr (Con 28705));
    Note "<static Gettext address>";
    GamePrint "You see nothing unexpected in that direction.";
    TraceOperation 031298 New_line;
    GamePrint "\n";
    TraceOperation 031299 Rtrue;
    PopFrame;
    PopReturnAddress return_address_14;
    SetResult 1;
    JumpIndirect: (return) return_address_14
  } else {
    Jump: 033156
  }
--------------------------------------------------
LocRoutine 031962:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 031963
LocOp 031963:
  TraceOperation 031963 (Store (Con 58) (Var (Global 92)));
  Let b1 = M[007390];
  Let b2 = M[007391];
  SetByte 007290 b1;
  SetByte 007291 b2;
  TraceOperation 031966 (Dec (Con 69));
  Let b3 = M[007312];
  Let b4 = M[007313];
  SetByte 007312 HiByte(Sub(MakeHiLo(b3,b4),1));
  SetByte 007313 LoByte(Sub(MakeHiLo(b3,b4),1));
  TraceOperation 031968 (Je [Var (Global 239),Con 31] (Branch F (Dloc 031977)));
  Let b5 = M[007684];
  Let b6 = M[007685];
  if (Equal(MakeHiLo(b5,b6),31)) {
    TraceOperation 031972 (Print_paddr (Con 28846));
    Note "<static Gettext address>";
    GamePrint "You seem to have said too little!";
    TraceOperation 031975 New_line;
    GamePrint "\n";
    TraceOperation 031976 Rtrue;
    PopFrame;
    PopReturnAddress return_address_7;
    SetResult 1;
    JumpIndirect: (return) return_address_7
  } else {
    Jump: 031977
  }
LocOp 031977:
  TraceOperation 031977 (Je [Var (Global 239),Con 32] (Branch F (Dloc 032000)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),32)) {
    TraceOperation 031981 (Print_ret "You aren't holding that!");
    GamePrint "You aren't holding that!\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 032000
  }
LocOp 032000:
  TraceOperation 032000 (Je [Var (Global 239),Con 33] (Branch F (Dloc 032009)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),33)) {
    TraceOperation 032004 (Print_paddr (Con 28852));
    Note "<static Gettext address>";
    GamePrint "You can't use multiple objects with that verb.";
    TraceOperation 032007 New_line;
    GamePrint "\n";
    TraceOperation 032008 Rtrue;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 032009
  }
LocOp 032009:
  TraceOperation 032009 (Je [Var (Global 239),Con 34] (Branch F (Dloc 032018)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),34)) {
    TraceOperation 032013 (Print_paddr (Con 28861));
    Note "<static Gettext address>";
    GamePrint "You can only use multiple objects once on a line.";
    TraceOperation 032016 New_line;
    GamePrint "\n";
    TraceOperation 032017 Rtrue;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 032018
  }
LocOp 032018:
  TraceOperation 032018 (Je [Var (Global 239),Con 35] (Branch F (Dloc 032052)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),35)) {
    TraceOperation 032022 (Print "I'm not sure what \"");
    GamePrint "I'm not sure what \"";
    TraceOperation 032039 (Print_addr (Var (Global 62)));
    Let b3 = M[007330];
    Let b4 = M[007331];
    GamePrint GetText(Address(MakeHiLo(b3,b4)));
    TraceOperation 032041 (Print_ret "\" refers to.");
    GamePrint "\" refers to.\n";
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult 1;
    JumpIndirect: (return) return_address_5
  } else {
    Jump: 032052
  }
LocOp 032052:
  TraceOperation 032052 (Je [Var (Global 239),Con 36] (Branch F (Dloc 032061)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),36)) {
    TraceOperation 032056 (Print_paddr (Con 28870));
    Note "<static Gettext address>";
    GamePrint "You excepted something not included anyway!";
    TraceOperation 032059 New_line;
    GamePrint "\n";
    TraceOperation 032060 Rtrue;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 032061
  }
LocOp 032061:
  TraceOperation 032061 (Je [Var (Global 239),Con 37] (Branch F (Dloc 032070)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),37)) {
    TraceOperation 032065 (Print_paddr (Con 28878));
    Note "<static Gettext address>";
    GamePrint "You can only do that to something animate.";
    TraceOperation 032068 New_line;
    GamePrint "\n";
    TraceOperation 032069 Rtrue;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 032070
  }
LocOp 032070:
  TraceOperation 032070 (Je [Var (Global 239),Con 38] (Branch F (Dloc 032099)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),38)) {
    TraceOperation 032074 (Print_ret "That's not a verb I recognise.");
    GamePrint "That's not a verb I recognise.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 032099
  }
LocOp 032099:
  TraceOperation 032099 (Je [Var (Global 239),Con 39] (Branch F (Dloc 032108)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),39)) {
    TraceOperation 032103 (Print_paddr (Con 28886));
    Note "<static Gettext address>";
    GamePrint "That's not something you need to refer to in the course of this game.";
    TraceOperation 032106 New_line;
    GamePrint "\n";
    TraceOperation 032107 Rtrue;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 032108
  }
LocOp 032108:
  TraceOperation 032108 (Je [Var (Global 239),Con 40] (Branch F (Dloc 032150)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),40)) {
    TraceOperation 032112 (Print "You can't see \"");
    GamePrint "You can't see \"";
    TraceOperation 032125 (Print_addr (Var (Global 62)));
    Let b3 = M[007330];
    Let b4 = M[007331];
    GamePrint GetText(Address(MakeHiLo(b3,b4)));
    TraceOperation 032127 (Print "\" (");
    GamePrint "\" (";
    TraceOperation 032132 (CallN (Floc 081916) [Var (Global 63)]);
    Let b5 = M[007332];
    Let b6 = M[007333];
    PushFrame;
    PushReturnAddress 032132;
    SetLocal 1 MakeHiLo(b5,b6);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 081917
  } else {
    Jump: 032150
  }
LocReturn 032132:
  TraceOperation 032137 (Print_ret ") at the moment.");
  GamePrint ") at the moment.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 032150:
  TraceOperation 032150 (Je [Var (Global 239),Con 41] (Branch F (Dloc 032159)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),41)) {
    TraceOperation 032154 (Print_paddr (Con 28898));
    Note "<static Gettext address>";
    GamePrint "I didn't understand the way that finished.";
    TraceOperation 032157 New_line;
    GamePrint "\n";
    TraceOperation 032158 Rtrue;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 032159
  }
LocOp 032159:
  TraceOperation 032159 (Je [Var (Global 239),Con 42] (Branch F (Dloc 032215)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),42)) {
    TraceOperation 032163 (Jz (Var (Local 2)) (Branch F (Dloc 032174)));
    if (IsZero(GetLocal(2))) {
      TraceOperation 032166 (Print "None");
      GamePrint "None";
      TraceOperation 032171 (Jump 032184);
      Jump: 032184
    } else {
      Jump: 032174
    }
  } else {
    Jump: 032215
  }
LocOp 032174:
  TraceOperation 032174 (Print "Only ");
  GamePrint "Only ";
  TraceOperation 032179 (CallN (Floc 080944) [Var (Local 2)]);
  PushFrame;
  PushReturnAddress 032179;
  SetLocal 1 GetLocal(2);
  MakeRoutineFrame 1;
  Jump: 080945
LocReturn 032179:
  Jump: 032184
LocOp 032184:
  TraceOperation 032184 (Print " of those ");
  GamePrint " of those ";
  TraceOperation 032193 (Je [Var (Local 2),Con 1] (Branch F (Dloc 032203)));
  if (Equal(GetLocal(2),1)) {
    TraceOperation 032197 (Print "is");
    GamePrint "is";
    TraceOperation 032200 (Jump 032206);
    Jump: 032206
  } else {
    Jump: 032203
  }
LocOp 032203:
  TraceOperation 032203 (Print "are");
  GamePrint "are";
  Jump: 032206
LocOp 032206:
  TraceOperation 032206 (Print_ret " available.");
  GamePrint " available.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 032215:
  TraceOperation 032215 (Je [Var (Global 239),Con 43] (Branch F (Dloc 032232)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),43)) {
    TraceOperation 032219 (Print_ret "Nothing to do!");
    GamePrint "Nothing to do!\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 032232
  }
LocOp 032232:
  TraceOperation 032232 (Je [Var (Global 239),Con 44] (Branch F (Dloc 032261)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),44)) {
    TraceOperation 032236 (Print_ret "There are none at all available!");
    GamePrint "There are none at all available!\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 032261
  }
LocOp 032261:
  TraceOperation 032261 (Je [Var (Global 239),Con 45] (Branch F (Dloc 032283)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),45)) {
    TraceOperation 032265 (Print "Who do you mean, ");
    GamePrint "Who do you mean, ";
    TraceOperation 032280 (Jump 032987);
    Jump: 032987
  } else {
    Jump: 032283
  }
LocOp 032283:
  TraceOperation 032283 (Je [Var (Global 239),Con 46] (Branch F (Dloc 032305)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),46)) {
    TraceOperation 032287 (Print "Which do you mean, ");
    GamePrint "Which do you mean, ";
    TraceOperation 032302 (Jump 032987);
    Jump: 032987
  } else {
    Jump: 032305
  }
LocOp 032305:
  TraceOperation 032305 (Je [Var (Global 239),Con 47] (Branch F (Dloc 032314)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),47)) {
    TraceOperation 032309 (Print_paddr (Con 28906));
    Note "<static Gettext address>";
    GamePrint "Sorry, you can only have one item here. Which exactly?";
    TraceOperation 032312 New_line;
    GamePrint "\n";
    TraceOperation 032313 Rtrue;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 032314
  }
LocOp 032314:
  TraceOperation 032314 (Je [Var (Global 239),Con 48] (Branch F (Dloc 032359)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),48)) {
    TraceOperation 032318 (Print "Whom do you want");
    GamePrint "Whom do you want";
    TraceOperation 032331 (Je [Var (Global 37),Var (Global 31)] (Branch T (Dloc 032343)));
    Let b3 = M[007280];
    Let b4 = M[007281];
    Let b5 = M[007268];
    Let b6 = M[007269];
    if (Equal(MakeHiLo(b3,b4),MakeHiLo(b5,b6))) {
      Jump: 032343
    } else {
      TraceOperation 032335 (Print " ");
      GamePrint " ";
      TraceOperation 032338 (CallN (Floc 081916) [Var (Global 37)]);
      Let b7 = M[007280];
      Let b8 = M[007281];
      PushFrame;
      PushReturnAddress 032338;
      SetLocal 1 MakeHiLo(b7,b8);
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 081917
    }
  } else {
    Jump: 032359
  }
LocReturn 032338:
  Jump: 032343
LocOp 032343:
  TraceOperation 032343 (Print " to ");
  GamePrint " to ";
  TraceOperation 032348 (CallN (Floc 049532) []);
  PushFrame;
  PushReturnAddress 032348;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  SetLocal 1 0;
  Jump: 049533
LocReturn 032348:
  TraceOperation 032351 (Print "?\n");
  GamePrint "?\n";
  TraceOperation 032356 (Jump 032987);
  Jump: 032987
LocOp 032359:
  TraceOperation 032359 (Je [Var (Global 239),Con 49] (Branch F (Dloc 032404)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),49)) {
    TraceOperation 032363 (Print "What do you want");
    GamePrint "What do you want";
    TraceOperation 032376 (Je [Var (Global 37),Var (Global 31)] (Branch T (Dloc 032388)));
    Let b3 = M[007280];
    Let b4 = M[007281];
    Let b5 = M[007268];
    Let b6 = M[007269];
    if (Equal(MakeHiLo(b3,b4),MakeHiLo(b5,b6))) {
      Jump: 032388
    } else {
      TraceOperation 032380 (Print " ");
      GamePrint " ";
      TraceOperation 032383 (CallN (Floc 081916) [Var (Global 37)]);
      Let b7 = M[007280];
      Let b8 = M[007281];
      PushFrame;
      PushReturnAddress 032383;
      SetLocal 1 MakeHiLo(b7,b8);
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 081917
    }
  } else {
    Jump: 032404
  }
LocReturn 032383:
  Jump: 032388
LocOp 032388:
  TraceOperation 032388 (Print " to ");
  GamePrint " to ";
  TraceOperation 032393 (CallN (Floc 049532) []);
  PushFrame;
  PushReturnAddress 032393;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  SetLocal 1 0;
  Jump: 049533
LocReturn 032393:
  TraceOperation 032396 (Print "?\n");
  GamePrint "?\n";
  TraceOperation 032401 (Jump 032987);
  Jump: 032987
LocOp 032404:
  TraceOperation 032404 (Je [Var (Global 239),Con 50] (Branch F (Dloc 032472)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),50)) {
    TraceOperation 032409 (Print "Your score has just gone ");
    GamePrint "Your score has just gone ";
    TraceOperation 032428 (Jg (Var (Local 2)) (Con 0) (Branch F (Dloc 032438)));
    if (GreaterThan(GetLocal(2),0)) {
      TraceOperation 032432 (Print "up");
      GamePrint "up";
      TraceOperation 032435 (Jump 032447);
      Jump: 032447
    } else {
      Jump: 032438
    }
  } else {
    Jump: 032472
  }
LocOp 032438:
  TraceOperation 032438 (Sub (Con 0) (Var (Local 2)) (Local 2));
  SetLocal 2 Sub(0,GetLocal(2));
  TraceOperation 032442 (Print "down");
  GamePrint "down";
  Jump: 032447
LocOp 032447:
  TraceOperation 032447 (Print " by ");
  GamePrint " by ";
  TraceOperation 032452 (CallN (Floc 080944) [Var (Local 2)]);
  PushFrame;
  PushReturnAddress 032452;
  SetLocal 1 GetLocal(2);
  MakeRoutineFrame 1;
  Jump: 080945
LocReturn 032452:
  TraceOperation 032457 (Print " point");
  GamePrint " point";
  TraceOperation 032462 (Jg (Var (Local 2)) (Con 1) (Branch F (Dloc 032469)));
  if (GreaterThan(GetLocal(2),1)) {
    TraceOperation 032466 (Print "s");
    GamePrint "s";
    Jump: 032469
  } else {
    Jump: 032469
  }
LocOp 032469:
  TraceOperation 032469 (Jump 032987);
  Jump: 032987
LocOp 032472:
  TraceOperation 032472 (Je [Var (Global 239),Con 51] (Branch F (Dloc 032481)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),51)) {
    TraceOperation 032476 (Print_paddr (Con 28916));
    Note "<static Gettext address>";
    GamePrint "(Since something dramatic has happened, your list of commands has been cut short.)";
    TraceOperation 032479 New_line;
    GamePrint "\n";
    TraceOperation 032480 Rtrue;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 032481
  }
LocOp 032481:
  TraceOperation 032481 (Je [Var (Global 239),Con 52] (Branch F (Dloc 032538)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),52)) {
    TraceOperation 032485 (Print "\nType a number from 1 to ");
    GamePrint "\nType a number from 1 to ";
    TraceOperation 032506 (Print_num (Var (Local 2)));
    GamePrint ShowNumber(GetLocal(2));
    TraceOperation 032509 (Print_ret ", 0 to redisplay or press ENTER.");
    GamePrint ", 0 to redisplay or press ENTER.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 032538
  }
LocOp 032538:
  TraceOperation 032538 (Je [Var (Global 239),Con 53] (Branch F (Dloc 032567)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),53)) {
    TraceOperation 032542 (Print_ret "\n[Please press SPACE.]");
    GamePrint "\n[Please press SPACE.]\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 032567
  }
LocOp 032567:
  TraceOperation 032567 (Je [Var (Global 239),Con 54] (Branch F (Dloc 032590)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),54)) {
    TraceOperation 032571 (Print_ret "[Comment recorded.]");
    GamePrint "[Comment recorded.]\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 032590
  }
LocOp 032590:
  TraceOperation 032590 (Je [Var (Global 239),Con 55] (Branch F (Dloc 032619)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),55)) {
    TraceOperation 032594 (Print_ret "[Comment NOT recorded.]");
    GamePrint "[Comment NOT recorded.]\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 032619
  }
LocOp 032619:
  TraceOperation 032619 (Je [Var (Global 239),Con 56] (Branch F (Dloc 032631)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),56)) {
    TraceOperation 032623 (Print ".\n");
    GamePrint ".\n";
    TraceOperation 032628 (Jump 032987);
    Jump: 032987
  } else {
    Jump: 032631
  }
LocOp 032631:
  TraceOperation 032631 (Je [Var (Global 239),Con 57] (Branch F (Dloc 032643)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),57)) {
    TraceOperation 032635 (Print "?\n");
    GamePrint "?\n";
    TraceOperation 032640 (Jump 032987);
    Jump: 032987
  } else {
    Jump: 032643
  }
LocOp 032643:
  TraceOperation 032643 (Je [Var (Global 239),Con 58] (Branch F (Dloc 032680)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),58)) {
    TraceOperation 032647 (CallN (Floc 081964) [Var (Global 37)]);
    Let b3 = M[007280];
    Let b4 = M[007281];
    PushFrame;
    PushReturnAddress 032647;
    SetLocal 1 MakeHiLo(b3,b4);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 081965
  } else {
    Jump: 032680
  }
LocReturn 032647:
  TraceOperation 032652 (Print " ");
  GamePrint " ";
  TraceOperation 032655 (CallN (Floc 027308) [Var (Global 37)]);
  Let b1 = M[007280];
  Let b2 = M[007281];
  PushFrame;
  PushReturnAddress 032655;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 1;
  Jump: 027309
LocReturn 032655:
  TraceOperation 032660 (Print " unable to do that.\n");
  GamePrint " unable to do that.\n";
  TraceOperation 032677 (Jump 032987);
  Jump: 032987
LocOp 032680:
  TraceOperation 032680 (Je [Var (Global 239),Con 59] (Branch F (Dloc 032703)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),59)) {
    TraceOperation 032684 (Print_ret "You must supply a noun.");
    GamePrint "You must supply a noun.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 032703
  }
LocOp 032703:
  TraceOperation 032703 (Je [Var (Global 239),Con 60] (Branch F (Dloc 032728)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),60)) {
    TraceOperation 032707 (Print_ret "You may not supply a noun.");
    GamePrint "You may not supply a noun.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 032728
  }
LocOp 032728:
  TraceOperation 032728 (Je [Var (Global 239),Con 61] (Branch F (Dloc 032751)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 032732 (Print_ret "You must name an object.");
    GamePrint "You must name an object.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 032751
  }
LocOp 032751:
  TraceOperation 032751 (Je [Var (Global 239),Con 62] (Branch F (Dloc 032776)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),62)) {
    TraceOperation 032755 (Print_ret "You may not name an object.");
    GamePrint "You may not name an object.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 032776
  }
LocOp 032776:
  TraceOperation 032776 (Je [Var (Global 239),Con 63] (Branch F (Dloc 032803)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),63)) {
    TraceOperation 032780 (Print_ret "You must name a second object.");
    GamePrint "You must name a second object.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 032803
  }
LocOp 032803:
  TraceOperation 032803 (Je [Var (Global 239),Con 64] (Branch F (Dloc 032812)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),64)) {
    TraceOperation 032807 (Print_paddr (Con 28931));
    Note "<static Gettext address>";
    GamePrint "You may not name a second object.";
    TraceOperation 032810 New_line;
    GamePrint "\n";
    TraceOperation 032811 Rtrue;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 032812
  }
LocOp 032812:
  TraceOperation 032812 (Je [Var (Global 239),Con 65] (Branch F (Dloc 032839)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),65)) {
    TraceOperation 032816 (Print_ret "You must supply a second noun.");
    GamePrint "You must supply a second noun.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 032839
  }
LocOp 032839:
  TraceOperation 032839 (Je [Var (Global 239),Con 66] (Branch F (Dloc 032848)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),66)) {
    TraceOperation 032843 (Print_paddr (Con 28937));
    Note "<static Gettext address>";
    GamePrint "You may not supply a second noun.";
    TraceOperation 032846 New_line;
    GamePrint "\n";
    TraceOperation 032847 Rtrue;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 032848
  }
LocOp 032848:
  TraceOperation 032848 (Je [Var (Global 239),Con 67] (Branch F (Dloc 032857)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),67)) {
    TraceOperation 032852 (Print_paddr (Con 28943));
    Note "<static Gettext address>";
    GamePrint "You must name something more substantial.";
    TraceOperation 032855 New_line;
    GamePrint "\n";
    TraceOperation 032856 Rtrue;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 032857
  }
LocOp 032857:
  TraceOperation 032857 (Je [Var (Global 239),Con 68] (Branch F (Dloc 032893)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),68)) {
    TraceOperation 032861 (Print "(");
    GamePrint "(";
    TraceOperation 032864 (CallN (Floc 081964) [Var (Global 37)]);
    Let b3 = M[007280];
    Let b4 = M[007281];
    PushFrame;
    PushReturnAddress 032864;
    SetLocal 1 MakeHiLo(b3,b4);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 081965
  } else {
    Jump: 032893
  }
LocReturn 032864:
  TraceOperation 032869 (Print " first taking ");
  GamePrint " first taking ";
  TraceOperation 032880 (CallN (Floc 081916) [Var (Local 2)]);
  PushFrame;
  PushReturnAddress 032880;
  SetLocal 1 GetLocal(2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 081917
LocReturn 032880:
  TraceOperation 032885 (Print ")\n");
  GamePrint ")\n";
  TraceOperation 032890 (Jump 032987);
  Jump: 032987
LocOp 032893:
  TraceOperation 032893 (Je [Var (Global 239),Con 69] (Branch F (Dloc 032916)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),69)) {
    TraceOperation 032897 (Print "(first taking ");
    GamePrint "(first taking ";
    TraceOperation 032908 (CallN (Floc 081916) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 032908;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 081917
  } else {
    Jump: 032916
  }
LocReturn 032908:
  TraceOperation 032913 (Print_ret ")");
  GamePrint ")\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 032916:
  TraceOperation 032916 (Je [Var (Global 239),Con 70] (Branch F (Dloc 032925)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),70)) {
    TraceOperation 032920 (Print_paddr (Con 28951));
    Note "<static Gettext address>";
    GamePrint "The use of UNDO is forbidden in this game.";
    TraceOperation 032923 New_line;
    GamePrint "\n";
    TraceOperation 032924 Rtrue;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 032925
  }
LocOp 032925:
  TraceOperation 032925 (Je [Var (Global 239),Con 71] (Branch F (Dloc 032935)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),71)) {
    TraceOperation 032929 (Print_paddr (Con 28504));
    Note "<static Gettext address>";
    GamePrint "Darkness";
    TraceOperation 032932 (Jump 032987);
    Jump: 032987
  } else {
    Jump: 032935
  }
LocOp 032935:
  TraceOperation 032935 (Je [Var (Global 239),Con 72] (Branch F (Dloc 032978)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),72)) {
    TraceOperation 032939 (CallN (Floc 081964) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 032939;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 081965
  } else {
    Jump: 032978
  }
LocReturn 032939:
  TraceOperation 032944 (Test_attr (Var (Local 2)) (Con 26) (Branch F (Dloc 032956)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),3)];
  if (TestBit(b1,5)) {
    TraceOperation 032948 (Print " have");
    GamePrint " have";
    TraceOperation 032953 (Jump 032961);
    Jump: 032961
  } else {
    Jump: 032956
  }
LocOp 032956:
  TraceOperation 032956 (Print " has");
  GamePrint " has";
  Jump: 032961
LocOp 032961:
  TraceOperation 032961 (Print_ret " better things to do.");
  GamePrint " better things to do.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 032978:
  TraceOperation 032978 (Je [Var (Global 239),Con 73] (Branch F (Dloc 032987)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),73)) {
    TraceOperation 032982 (Print_paddr (Con 28959));
    Note "<static Gettext address>";
    GamePrint "That noun did not make sense in this context.";
    TraceOperation 032985 New_line;
    GamePrint "\n";
    TraceOperation 032986 Rtrue;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 032987
  }
LocOp 032987:
  TraceOperation 032987 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 033176:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 033177
LocOp 033177:
  TraceOperation 033177 (Print ", revealing ");
  GamePrint ", revealing ";
  TraceOperation 033188 (Get_child (Var (Local 2)) Sp (Branch F (Dloc 033192)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),10)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(2),14)),10),1)];
  PushStack MakeHiLo(b1,b2);
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 033192
  } else {
    Jump: 033192
  }
LocOp 033192:
  TraceOperation 033192 (Call (Floc 038496) [Var Sp,Con 2120] Sp);
  PopStack popped1;
  PushFrame;
  PushReturnAddress 033192;
  SetLocal 1 popped1;
  SetLocal 2 2120;
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 038497
LocReturn 033192:
  PushStack call_result;
  TraceOperation 033200 (Jz (Var Sp) (Branch F (Dloc 033210)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 033203 (Print_ret "nothing.");
    GamePrint "nothing.\n";
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  } else {
    Jump: 033210
  }
LocOp 033210:
  TraceOperation 033210 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 033230:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 033231
LocOp 033231:
  TraceOperation 033231 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 033244:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 033245
LocOp 033245:
  TraceOperation 033245 (Inc (Con 42));
  Let b1 = M[007258];
  Let b2 = M[007259];
  SetByte 007258 HiByte(Add(MakeHiLo(b1,b2),1));
  SetByte 007259 LoByte(Add(MakeHiLo(b1,b2),1));
  TraceOperation 033247 (Mod (Var (Global 112)) (Var (Global 149)) (Global 202));
  Let b3 = M[007430];
  Let b4 = M[007431];
  Let b5 = M[007504];
  Let b6 = M[007505];
  SetByte 007610 HiByte(Mod(MakeHiLo(b3,b4),MakeHiLo(b5,b6)));
  SetByte 007611 LoByte(Mod(MakeHiLo(b3,b4),MakeHiLo(b5,b6)));
  TraceOperation 033251 (Loadw (Con 79) (Var (Global 239)) (Local 2));
  Let b7 = M[007684];
  Let b8 = M[007685];
  Let b9 = M[Offset(000079,Mul(2,MakeHiLo(b7,b8)))];
  Let b10 = M[Offset(Offset(000079,Mul(2,MakeHiLo(b7,b8))),1)];
  SetLocal 2 MakeHiLo(b9,b10);
  TraceOperation 033255 (Print ".\n");
  GamePrint ".\n";
  TraceOperation 033260 (Jump 033289);
  Jump: 033289
--------------------------------------------------
LocRoutine 033326:
  MakeRoutineFrame 0;
  Jump: 033327
LocOp 033327:
  TraceOperation 033327 (Jump 033360);
  Jump: 033360
--------------------------------------------------
LocRoutine 033502:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 033503
LocOp 033503:
  TraceOperation 033503 Quit;
  Quit
--------------------------------------------------
LocRoutine 033564:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 033565
LocOp 033565:
  TraceOperation 033565 (Print_paddr (Con 28979));
  Note "<static Gettext address>";
  GamePrint " cannot be pushed from place to place.\n";
  TraceOperation 033568 (Jump 033617);
  Jump: 033617
--------------------------------------------------
LocRoutine 033702:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 033703
LocOp 033703:
  TraceOperation 033703 (Test (Var (Global 162)) (Var (Global 2)) (Branch T (Dloc 032273)));
  Let b1 = M[007530];
  Let b2 = M[007531];
  Let b3 = M[007210];
  Let b4 = M[007211];
  if (Equal(And(MakeHiLo(b1,b2),MakeHiLo(b3,b4)),MakeHiLo(b3,b4))) {
    Jump: 032273
  } else {
    TraceOperation 033708 (Insert_obj (Con 77) (Var (Global 112)));
    Let b5 = M[007430];
    Let b6 = M[007431];
    Let b7 = M[001462];
    Let b8 = M[001463];
    if (IsZero(MakeHiLo(b7,b8))) {} else {
      Let b9 = M[Offset(Offset(000378,Mul(MakeHiLo(b7,b8),14)),10)];
      Let b10 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b7,b8),14)),10),1)];
      if (Equal(MakeHiLo(b9,b10),77)) {
        Let b11 = M[001464];
        Let b12 = M[001465];
        SetByte Offset(Offset(000378,Mul(MakeHiLo(b7,b8),14)),10) b11;
        SetByte Offset(Offset(Offset(000378,Mul(MakeHiLo(b7,b8),14)),10),1) b12;
      } else {
        Let loop_var13 = MakeHiLo(b9,b10);
        Label 14: {
          Let b15 = M[Offset(Offset(000378,Mul(loop_var13,14)),8)];
          Let b16 = M[Offset(Offset(Offset(000378,Mul(loop_var13,14)),8),1)];
          if (Equal(MakeHiLo(b15,b16),77)) {
            Let b17 = M[001464];
            Let b18 = M[001465];
            SetByte Offset(Offset(000378,Mul(loop_var13,14)),8) b17;
            SetByte Offset(Offset(Offset(000378,Mul(loop_var13,14)),8),1) b18;
          } else {
            Assign loop_var13 = MakeHiLo(b15,b16);
            Goto: Label 14
          }
        }
      }
    }
    SetByte 001462 b5;
    SetByte 001463 b6;
    Let b19 = M[Offset(Offset(000378,Mul(MakeHiLo(b5,b6),14)),10)];
    Let b20 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b5,b6),14)),10),1)];
    SetByte 001464 b19;
    SetByte 001465 b20;
    SetByte Offset(Offset(000378,Mul(MakeHiLo(b5,b6),14)),10) 0;
    SetByte Offset(Offset(Offset(000378,Mul(MakeHiLo(b5,b6),14)),10),1) 77;
    TraceOperation 033711 (Inc_chk (Var (Global 158)) (Var (Global 61)) (Branch T (Dloc 039860)));
    Let b21 = M[007522];
    Let b22 = M[007523];
    if (IsZeroByte(b22)) {
      PopStack popped23;
      Let b24 = M[007328];
      Let b25 = M[007329];
      PushStack Add(popped23,1);
      if (GreaterThanEqual(popped23,MakeHiLo(b24,b25))) {
      }
    } else {
      if (LessThanByte(b22,16)) {
        Let b26 = M[007328];
        Let b27 = M[007329];
        SetLocal b22 Add(GetLocal(b22),1);
        if (GreaterThanEqual(GetLocal(b22),MakeHiLo(b26,b27))) {
        }
      } else {
        Let b28 = M[Offset(007206,Mul(2,Widen(MinusByte(b22,16))))];
        Let b29 = M[Offset(Offset(007206,Mul(2,Widen(MinusByte(b22,16)))),1)];
        Let b30 = M[007328];
        Let b31 = M[007329];
        SetByte Offset(007206,Mul(2,Widen(MinusByte(b22,16)))) HiByte(Add(MakeHiLo(b28,b29),1));
        SetByte Offset(Offset(007206,Mul(2,Widen(MinusByte(b22,16)))),1) LoByte(Add(MakeHiLo(b28,b29),1));
        if (GreaterThanEqual(MakeHiLo(b28,b29),MakeHiLo(b30,b31))) {
        }
      }
    }
    TraceOperation 033716 (Get_parent (Con 128) (Global 149));
    Let b32 = M[002176];
    Let b33 = M[002177];
    SetByte 007504 b32;
    SetByte 007505 b33;
    TraceOperation 033719 (CallN (Floc 081916) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 033719;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 081917
  }
LocReturn 033719:
  TraceOperation 033724 (Print_ret " would achieve nothing.");
  GamePrint " would achieve nothing.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 033822:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 033823
LocOp 033823:
  TraceOperation 033823 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 033852:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 033853
LocOp 033853:
  TraceOperation 033853 (Print " on ");
  GamePrint " on ";
  TraceOperation 033858 (CallN (Floc 081916) [Var (Global 48)]);
  Let b1 = M[007302];
  Let b2 = M[007303];
  PushFrame;
  PushReturnAddress 033858;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 081917
LocReturn 033858:
  TraceOperation 033863 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 033884:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 033885
LocOp 033885:
  TraceOperation 033885 (Print " on ");
  GamePrint " on ";
  TraceOperation 033890 (CallN (Floc 081916) [Var (Global 48)]);
  Let b1 = M[007302];
  Let b2 = M[007303];
  PushFrame;
  PushReturnAddress 033890;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 081917
LocReturn 033890:
  TraceOperation 033895 (Print ".\n");
  GamePrint ".\n";
  TraceOperation 033900 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 034012:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 034013
LocOp 034013:
  TraceOperation 034013 (Test_attr (Var (Global 58)) (Var (Local 2)) (Branch F (Dloc 040754)));
  Let b1 = M[007322];
  Let b2 = M[007323];
  Let b3 = M[Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),Div8(GetLocal(2)))];
  if (TestBit(b3,SevenMinus(LoByte(Mod(GetLocal(2),8))))) {
    TraceOperation 034018 (Print "But they aren't");
    GamePrint "But they aren't";
    TraceOperation 034031 (Jump 034045);
    Jump: 034045
  } else {
    Jump: 040754
  }
--------------------------------------------------
LocRoutine 034070:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 034071
LocOp 034071:
  TraceOperation 034071 (Set_colour (Var (Global 29)) (Con 255));
  Let b1 = M[007264];
  Let b2 = M[007265];
  Note "(Set_colour (Var (Global 29)) (Con 255),\"-->\",MakeHiLo(b1,b2),255)";
  TraceOperation 034074 (Je [Con 65,Con 255] (Branch F (Dloc 034405)));
  Jump: 034405
--------------------------------------------------
LocRoutine 034144:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 034145
LocOp 034145:
  TraceOperation 034145 (Add (Var (Global 85)) (Var (Global 158)) (Global 61));
  Let b1 = M[007376];
  Let b2 = M[007377];
  Let b3 = M[007522];
  Let b4 = M[007523];
  SetByte 007328 HiByte(Add(MakeHiLo(b1,b2),MakeHiLo(b3,b4)));
  SetByte 007329 LoByte(Add(MakeHiLo(b1,b2),MakeHiLo(b3,b4)));
  TraceOperation 034149 (Jz (Con 8128) (Branch F (Dloc 034188)));
  Jump: 034188
LocOp 034178:
  TraceOperation 034178 (Je [Var (Global 239),Con 2] (Branch F (Dloc 034187)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),2)) {
    TraceOperation 034182 (Print_ret "Ok.");
    GamePrint "Ok.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 034187
  }
LocOp 034187:
  TraceOperation 034187 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 034188:
  TraceOperation 034188 (Je [Var (Global 233),Con 51] (Branch F (Dloc 034338)));
  Let b1 = M[007672];
  Let b2 = M[007673];
  if (Equal(MakeHiLo(b1,b2),51)) {
    TraceOperation 034193 (Store (Con 255) (Var (Local 1)));
    SetByte 007684 HiByte(GetLocal(1));
    SetByte 007685 LoByte(GetLocal(1));
    TraceOperation 034196 (Je [Var (Global 239),Con 1] (Branch F (Dloc 034285)));
    Let b3 = M[007684];
    Let b4 = M[007685];
    if (Equal(MakeHiLo(b3,b4),1)) {
      TraceOperation 034201 (Jz (Var (Global 21)) (Branch T (Dloc 034226)));
      Let b5 = M[007248];
      Let b6 = M[007249];
      if (IsZero(MakeHiLo(b5,b6))) {
        Jump: 034226
      } else {
        TraceOperation 034204 (Print "In that game you scored ");
        GamePrint "In that game you scored ";
        TraceOperation 034223 (Jump 034243);
        Jump: 034243
      }
    } else {
      Jump: 034285
    }
  } else {
    Jump: 034338
  }
LocOp 034226:
  TraceOperation 034226 (Print "You have so far scored ");
  GamePrint "You have so far scored ";
  Jump: 034243
LocOp 034243:
  TraceOperation 034243 (Print_num (Var (Global 26)));
  Let b1 = M[007258];
  Let b2 = M[007259];
  GamePrint ShowNumber(MakeHiLo(b1,b2));
  TraceOperation 034246 (Print " out of a possible ");
  GamePrint " out of a possible ";
  TraceOperation 034261 (Print_num (Con 0));
  GamePrint "0";
  TraceOperation 034264 (Print ", in ");
  GamePrint ", in ";
  TraceOperation 034269 (Print_num (Var (Global 23)));
  Let b3 = M[007252];
  Let b4 = M[007253];
  GamePrint ShowNumber(MakeHiLo(b3,b4));
  TraceOperation 034272 (Print " turn");
  GamePrint " turn";
  TraceOperation 034277 (Je [Var (Global 23),Con 1] (Branch T (Dloc 034284)));
  Let b5 = M[007252];
  Let b6 = M[007253];
  if (Equal(MakeHiLo(b5,b6),1)) {
    Jump: 034284
  } else {
    TraceOperation 034281 (Print "s");
    GamePrint "s";
    Jump: 034284
  }
LocOp 034284:
  TraceOperation 034284 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 034285:
  TraceOperation 034285 (Je [Var (Global 239),Con 2] (Branch F (Dloc 034314)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),2)) {
    TraceOperation 034289 (Print_ret "There is no score in this story.");
    GamePrint "There is no score in this story.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 034314
  }
LocOp 034314:
  TraceOperation 034314 (Je [Var (Global 239),Con 3] (Branch F (Dloc 034337)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),3)) {
    TraceOperation 034318 (Print ", earning you the rank of ");
    GamePrint ", earning you the rank of ";
    Jump: 034337
  } else {
    Jump: 034337
  }
LocOp 034337:
  TraceOperation 034337 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 034338:
  TraceOperation 034338 (Je [Var (Global 233),Con 6] (Branch F (Dloc 034404)));
  Let b1 = M[007672];
  Let b2 = M[007673];
  if (Equal(MakeHiLo(b1,b2),6)) {
    TraceOperation 034343 (Store (Con 255) (Var (Local 1)));
    SetByte 007684 HiByte(GetLocal(1));
    SetByte 007685 LoByte(GetLocal(1));
    TraceOperation 034346 (Je [Var (Global 239),Con 1] (Branch F (Dloc 034373)));
    Let b3 = M[007684];
    Let b4 = M[007685];
    if (Equal(MakeHiLo(b3,b4),1)) {
      TraceOperation 034350 (Print_ret "Transcripting is already off.");
      GamePrint "Transcripting is already off.\n";
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 1;
      JumpIndirect: (return) return_address_5
    } else {
      Jump: 034373
    }
  } else {
    Jump: 034404
  }
LocOp 034373:
  TraceOperation 034373 (Je [Var (Global 239),Con 2] (Branch F (Dloc 034394)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),2)) {
    TraceOperation 034377 (Print_ret "\nEnd of transcript.");
    GamePrint "\nEnd of transcript.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 034394
  }
LocOp 034394:
  TraceOperation 034394 (Je [Var (Global 239),Con 3] (Branch F (Dloc 034403)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),3)) {
    TraceOperation 034398 (Print_paddr (Con 29000));
    Note "<static Gettext address>";
    GamePrint "Attempt to end transcript failed.";
    TraceOperation 034401 New_line;
    GamePrint "\n";
    TraceOperation 034402 Rtrue;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 034403
  }
LocOp 034403:
  TraceOperation 034403 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 034404:
  TraceOperation 034404 (Je [Var (Global 233),Con 5] (Branch F (Dloc 034470)));
  Let b1 = M[007672];
  Let b2 = M[007673];
  if (Equal(MakeHiLo(b1,b2),5)) {
    TraceOperation 034409 (Store (Con 255) (Var (Local 1)));
    SetByte 007684 HiByte(GetLocal(1));
    SetByte 007685 LoByte(GetLocal(1));
    TraceOperation 034412 (Je [Var (Global 239),Con 1] (Branch F (Dloc 034437)));
    Let b3 = M[007684];
    Let b4 = M[007685];
    if (Equal(MakeHiLo(b3,b4),1)) {
      TraceOperation 034416 (Print_ret "Transcripting is already on.");
      GamePrint "Transcripting is already on.\n";
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 1;
      JumpIndirect: (return) return_address_5
    } else {
      Jump: 034437
    }
  } else {
    Jump: 034470
  }
LocOp 034437:
  TraceOperation 034437 (Je [Var (Global 239),Con 2] (Branch F (Dloc 034460)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),2)) {
    TraceOperation 034441 (Print_ret "Start of a transcript of");
    GamePrint "Start of a transcript of\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 034460
  }
LocOp 034460:
  TraceOperation 034460 (Je [Var (Global 239),Con 3] (Branch F (Dloc 034469)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),3)) {
    TraceOperation 034464 (Print_paddr (Con 29006));
    Note "<static Gettext address>";
    GamePrint "Attempt to begin transcript failed.";
    TraceOperation 034467 New_line;
    GamePrint "\n";
    TraceOperation 034468 Rtrue;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 034469
  }
LocOp 034469:
  TraceOperation 034469 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 034470:
  TraceOperation 034470 (Je [Var (Global 233),Con 52] (Branch F (Dloc 034711)));
  Let b1 = M[007672];
  Let b2 = M[007673];
  if (Equal(MakeHiLo(b1,b2),52)) {
    TraceOperation 034475 (Store (Con 255) (Var (Local 1)));
    SetByte 007684 HiByte(GetLocal(1));
    SetByte 007685 LoByte(GetLocal(1));
    TraceOperation 034478 (Je [Var (Global 239),Con 1] (Branch F (Dloc 034495)));
    Let b3 = M[007684];
    Let b4 = M[007685];
    if (Equal(MakeHiLo(b3,b4),1)) {
      TraceOperation 034482 (Print_ret "But it's dark.");
      GamePrint "But it's dark.\n";
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 1;
      JumpIndirect: (return) return_address_5
    } else {
      Jump: 034495
    }
  } else {
    Jump: 034711
  }
LocOp 034495:
  TraceOperation 034495 (Je [Var (Global 239),Con 2] (Branch F (Dloc 034522)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),2)) {
    TraceOperation 034499 (Print "There is nothing on ");
    GamePrint "There is nothing on ";
    TraceOperation 034514 (CallN (Floc 081916) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 034514;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 081917
  } else {
    Jump: 034522
  }
LocReturn 034514:
  TraceOperation 034519 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 034522:
  TraceOperation 034522 (Je [Var (Global 239),Con 3] (Branch F (Dloc 034553)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),3)) {
    TraceOperation 034526 (Print "On ");
    GamePrint "On ";
    TraceOperation 034531 (CallN (Floc 081916) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 034531;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 081917
  } else {
    Jump: 034553
  }
LocReturn 034531:
  TraceOperation 034536 (Print " ");
  GamePrint " ";
  TraceOperation 034539 (Get_child (Var (Local 2)) Sp (Branch F (Dloc 034543)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),10)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(2),14)),10),1)];
  PushStack MakeHiLo(b1,b2);
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 034543
  } else {
    Jump: 034543
  }
LocOp 034543:
  TraceOperation 034543 (CallN (Floc 038496) [Var Sp,Con 3144]);
  PopStack popped1;
  PushFrame;
  PushReturnAddress 034543;
  SetLocal 1 popped1;
  SetLocal 2 3144;
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 038497
LocReturn 034543:
  TraceOperation 034550 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 034553:
  TraceOperation 034553 (Je [Var (Global 239),Con 4] (Branch F (Dloc 034580)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),4)) {
    TraceOperation 034557 (Print_ret "You find nothing of interest.");
    GamePrint "You find nothing of interest.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 034580
  }
LocOp 034580:
  TraceOperation 034580 (Je [Var (Global 239),Con 5] (Branch F (Dloc 034627)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),5)) {
    TraceOperation 034584 (Print "You can't see inside, since ");
    GamePrint "You can't see inside, since ";
    TraceOperation 034607 (CallN (Floc 081916) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 034607;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 081917
  } else {
    Jump: 034627
  }
LocReturn 034607:
  TraceOperation 034612 (Print " ");
  GamePrint " ";
  TraceOperation 034615 (CallN (Floc 027308) [Var (Local 2)]);
  PushFrame;
  PushReturnAddress 034615;
  SetLocal 1 GetLocal(2);
  MakeRoutineFrame 1;
  Jump: 027309
LocReturn 034615:
  TraceOperation 034620 (Print_ret " closed.");
  GamePrint " closed.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 034627:
  TraceOperation 034627 (Je [Var (Global 239),Con 6] (Branch F (Dloc 034651)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),6)) {
    TraceOperation 034631 (CallN (Floc 081964) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 034631;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 081965
  } else {
    Jump: 034651
  }
LocReturn 034631:
  TraceOperation 034636 (Print " ");
  GamePrint " ";
  TraceOperation 034639 (CallN (Floc 027308) [Var (Local 2)]);
  PushFrame;
  PushReturnAddress 034639;
  SetLocal 1 GetLocal(2);
  MakeRoutineFrame 1;
  Jump: 027309
LocReturn 034639:
  TraceOperation 034644 (Print_ret " empty.");
  GamePrint " empty.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 034651:
  TraceOperation 034651 (Je [Var (Global 239),Con 7] (Branch F (Dloc 034682)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),7)) {
    TraceOperation 034655 (Print "In ");
    GamePrint "In ";
    TraceOperation 034660 (CallN (Floc 081916) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 034660;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 081917
  } else {
    Jump: 034682
  }
LocReturn 034660:
  TraceOperation 034665 (Print " ");
  GamePrint " ";
  TraceOperation 034668 (Get_child (Var (Local 2)) Sp (Branch F (Dloc 034672)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),10)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(2),14)),10),1)];
  PushStack MakeHiLo(b1,b2);
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 034672
  } else {
    Jump: 034672
  }
LocOp 034672:
  TraceOperation 034672 (CallN (Floc 038496) [Var Sp,Con 3144]);
  PopStack popped1;
  PushFrame;
  PushReturnAddress 034672;
  SetLocal 1 popped1;
  SetLocal 2 3144;
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 038497
LocReturn 034672:
  TraceOperation 034679 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 034682:
  TraceOperation 034682 (Je [Var (Global 239),Con 8] (Branch F (Dloc 034710)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),8)) {
    TraceOperation 034686 (CallN (Floc 081964) [Var (Global 37)]);
    Let b3 = M[007280];
    Let b4 = M[007281];
    PushFrame;
    PushReturnAddress 034686;
    SetLocal 1 MakeHiLo(b3,b4);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 081965
  } else {
    Jump: 034710
  }
LocReturn 034686:
  TraceOperation 034691 (Print " searches ");
  GamePrint " searches ";
  TraceOperation 034700 (CallN (Floc 081916) [Var (Local 2)]);
  PushFrame;
  PushReturnAddress 034700;
  SetLocal 1 GetLocal(2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 081917
LocReturn 034700:
  TraceOperation 034705 (Print ".\n");
  GamePrint ".\n";
  Jump: 034710
LocOp 034710:
  TraceOperation 034710 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 034711:
  TraceOperation 034711 (Je [Var (Global 233),Con 53] (Branch F (Dloc 034746)));
  Let b1 = M[007672];
  Let b2 = M[007673];
  if (Equal(MakeHiLo(b1,b2),53)) {
    TraceOperation 034715 (Print "No, you can't set ");
    GamePrint "No, you can't set ";
    TraceOperation 034730 (CallN (Floc 027212) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 034730;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 1;
    Jump: 027213
  } else {
    Jump: 034746
  }
LocReturn 034730:
  TraceOperation 034735 (Print_ret " to anything.");
  GamePrint " to anything.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 034746:
  TraceOperation 034746 (Je [Var (Global 233),Con 54] (Branch F (Dloc 034809)));
  Let b1 = M[007672];
  Let b2 = M[007673];
  if (Equal(MakeHiLo(b1,b2),54)) {
    TraceOperation 034750 (Store (Con 255) (Var (Local 1)));
    SetByte 007684 HiByte(GetLocal(1));
    SetByte 007685 LoByte(GetLocal(1));
    TraceOperation 034753 (Je [Var (Global 239),Con 1] (Branch F (Dloc 034780)));
    Let b3 = M[007684];
    Let b4 = M[007685];
    if (Equal(MakeHiLo(b3,b4),1)) {
      TraceOperation 034757 (Print "You aren't holding ");
      GamePrint "You aren't holding ";
      TraceOperation 034772 (CallN (Floc 081916) [Var (Local 2)]);
      PushFrame;
      PushReturnAddress 034772;
      SetLocal 1 GetLocal(2);
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 081917
    } else {
      Jump: 034780
    }
  } else {
    Jump: 034809
  }
LocReturn 034772:
  TraceOperation 034777 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 034780:
  TraceOperation 034780 (Je [Var (Global 239),Con 2] (Branch F (Dloc 034808)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),2)) {
    TraceOperation 034784 (CallN (Floc 081964) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 034784;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 081965
  } else {
    Jump: 034808
  }
LocReturn 034784:
  TraceOperation 034789 (Print " ");
  GamePrint " ";
  TraceOperation 034792 (CallN (Floc 027308) [Var (Local 2)]);
  PushFrame;
  PushReturnAddress 034792;
  SetLocal 1 GetLocal(2);
  MakeRoutineFrame 1;
  Jump: 027309
LocReturn 034792:
  TraceOperation 034797 (Print_ret " unimpressed.");
  GamePrint " unimpressed.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 034808:
  TraceOperation 034808 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 034809:
  TraceOperation 034809 (Je [Var (Global 233),Con 55] (Branch F (Dloc 034834)));
  Let b1 = M[007672];
  Let b2 = M[007673];
  if (Equal(MakeHiLo(b1,b2),55)) {
    TraceOperation 034813 (Print_ret "Your singing is abominable.");
    GamePrint "Your singing is abominable.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 034834
  }
LocOp 034834:
  TraceOperation 034834 (Je [Var (Global 233),Con 56] (Branch F (Dloc 034843)));
  Let b1 = M[007672];
  Let b2 = M[007673];
  if (Equal(MakeHiLo(b1,b2),56)) {
    TraceOperation 034838 (Print_paddr (Con 29013));
    Note "<static Gettext address>";
    GamePrint "You aren't feeling especially drowsy.";
    TraceOperation 034841 New_line;
    GamePrint "\n";
    TraceOperation 034842 Rtrue;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 034843
  }
LocOp 034843:
  TraceOperation 034843 (Je [Var (Global 233),Con 57] (Branch F (Dloc 034870)));
  Let b1 = M[007672];
  Let b2 = M[007673];
  if (Equal(MakeHiLo(b1,b2),57)) {
    TraceOperation 034847 (Print_ret "You smell nothing unexpected.");
    GamePrint "You smell nothing unexpected.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 034870
  }
LocOp 034870:
  TraceOperation 034870 (Je [Var (Global 233),Con 58] (Branch F (Dloc 034891)));
  Let b1 = M[007672];
  Let b2 = M[007673];
  if (Equal(MakeHiLo(b1,b2),58)) {
    TraceOperation 034874 (Print_ret "Oh, don't apologise.");
    GamePrint "Oh, don't apologise.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 034891
  }
LocOp 034891:
  TraceOperation 034891 (Je [Var (Global 233),Con 59] (Branch F (Dloc 034978)));
  Let b1 = M[007672];
  Let b2 = M[007673];
  if (Equal(MakeHiLo(b1,b2),59)) {
    TraceOperation 034896 (Store (Con 255) (Var (Local 1)));
    SetByte 007684 HiByte(GetLocal(1));
    SetByte 007685 LoByte(GetLocal(1));
    TraceOperation 034899 (Je [Var (Global 239),Con 1] (Branch F (Dloc 034924)));
    Let b3 = M[007684];
    Let b4 = M[007685];
    if (Equal(MakeHiLo(b3,b4),1)) {
      TraceOperation 034903 (Print_ret "Keep your hands to yourself.");
      GamePrint "Keep your hands to yourself.\n";
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 1;
      JumpIndirect: (return) return_address_5
    } else {
      Jump: 034924
    }
  } else {
    Jump: 034978
  }
LocOp 034924:
  TraceOperation 034924 (Je [Var (Global 239),Con 2] (Branch F (Dloc 034949)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),2)) {
    TraceOperation 034928 (Print_ret "You achieve nothing by this.");
    GamePrint "You achieve nothing by this.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 034949
  }
LocOp 034949:
  TraceOperation 034949 (Je [Var (Global 239),Con 3] (Branch F (Dloc 034977)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),3)) {
    TraceOperation 034953 (CallN (Floc 081964) [Var (Global 37)]);
    Let b3 = M[007280];
    Let b4 = M[007281];
    PushFrame;
    PushReturnAddress 034953;
    SetLocal 1 MakeHiLo(b3,b4);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 081965
  } else {
    Jump: 034977
  }
LocReturn 034953:
  TraceOperation 034958 (Print " squeezes ");
  GamePrint " squeezes ";
  TraceOperation 034967 (CallN (Floc 081916) [Var (Local 2)]);
  PushFrame;
  PushReturnAddress 034967;
  SetLocal 1 GetLocal(2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 081917
LocReturn 034967:
  TraceOperation 034972 (Print ".\n");
  GamePrint ".\n";
  Jump: 034977
LocOp 034977:
  TraceOperation 034977 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 034978:
  TraceOperation 034978 (Je [Var (Global 233),Con 60] (Branch F (Dloc 034987)));
  Let b1 = M[007672];
  Let b2 = M[007673];
  if (Equal(MakeHiLo(b1,b2),60)) {
    TraceOperation 034982 (Print_paddr (Con 29020));
    Note "<static Gettext address>";
    GamePrint "Real adventurers do not use such language.";
    TraceOperation 034985 New_line;
    GamePrint "\n";
    TraceOperation 034986 Rtrue;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 034987
  }
LocOp 034987:
  TraceOperation 034987 (Je [Var (Global 233),Con 61] (Branch F (Dloc 034996)));
  Let b1 = M[007672];
  Let b2 = M[007673];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 034991 (Print_paddr (Con 29028));
    Note "<static Gettext address>";
    GamePrint "There's nothing sensible to swing here.";
    TraceOperation 034994 New_line;
    GamePrint "\n";
    TraceOperation 034995 Rtrue;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 034996
  }
LocOp 034996:
  TraceOperation 034996 (Je [Var (Global 233),Con 62] (Branch F (Dloc 035110)));
  Let b1 = M[007672];
  Let b2 = M[007673];
  if (Equal(MakeHiLo(b1,b2),62)) {
    TraceOperation 035001 (Store (Con 255) (Var (Local 1)));
    SetByte 007684 HiByte(GetLocal(1));
    SetByte 007685 LoByte(GetLocal(1));
    TraceOperation 035004 (Je [Var (Global 239),Con 1] (Branch F (Dloc 035036)));
    Let b3 = M[007684];
    Let b4 = M[007685];
    if (Equal(MakeHiLo(b3,b4),1)) {
      TraceOperation 035008 (CallN (Floc 027404) [Var (Local 2)]);
      PushFrame;
      PushReturnAddress 035008;
      SetLocal 1 GetLocal(2);
      MakeRoutineFrame 1;
      Jump: 027405
    } else {
      Jump: 035036
    }
  } else {
    Jump: 035110
  }
LocReturn 035008:
  TraceOperation 035013 (Print_ret " not something you can switch.");
  GamePrint " not something you can switch.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 035036:
  TraceOperation 035036 (Je [Var (Global 239),Con 2] (Branch F (Dloc 035056)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),2)) {
    TraceOperation 035040 (CallN (Floc 027404) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 035040;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 1;
    Jump: 027405
  } else {
    Jump: 035056
  }
LocReturn 035040:
  TraceOperation 035045 (Print_ret " already off.");
  GamePrint " already off.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 035056:
  TraceOperation 035056 (Je [Var (Global 239),Con 3] (Branch F (Dloc 035079)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),3)) {
    TraceOperation 035060 (Print "You switch ");
    GamePrint "You switch ";
    TraceOperation 035069 (CallN (Floc 081916) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 035069;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 081917
  } else {
    Jump: 035079
  }
LocReturn 035069:
  TraceOperation 035074 (Print_ret " off.");
  GamePrint " off.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 035079:
  TraceOperation 035079 (Je [Var (Global 239),Con 4] (Branch F (Dloc 035109)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),4)) {
    TraceOperation 035083 (CallN (Floc 081964) [Var (Global 37)]);
    Let b3 = M[007280];
    Let b4 = M[007281];
    PushFrame;
    PushReturnAddress 035083;
    SetLocal 1 MakeHiLo(b3,b4);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 081965
  } else {
    Jump: 035109
  }
LocReturn 035083:
  TraceOperation 035088 (Print " switches ");
  GamePrint " switches ";
  TraceOperation 035097 (CallN (Floc 081916) [Var (Local 2)]);
  PushFrame;
  PushReturnAddress 035097;
  SetLocal 1 GetLocal(2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 081917
LocReturn 035097:
  TraceOperation 035102 (Print " off.\n");
  GamePrint " off.\n";
  Jump: 035109
LocOp 035109:
  TraceOperation 035109 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 035110:
  TraceOperation 035110 (Je [Var (Global 233),Con 63] (Branch F (Dloc 035224)));
  Let b1 = M[007672];
  Let b2 = M[007673];
  if (Equal(MakeHiLo(b1,b2),63)) {
    TraceOperation 035115 (Store (Con 255) (Var (Local 1)));
    SetByte 007684 HiByte(GetLocal(1));
    SetByte 007685 LoByte(GetLocal(1));
    TraceOperation 035118 (Je [Var (Global 239),Con 1] (Branch F (Dloc 035150)));
    Let b3 = M[007684];
    Let b4 = M[007685];
    if (Equal(MakeHiLo(b3,b4),1)) {
      TraceOperation 035122 (CallN (Floc 027404) [Var (Local 2)]);
      PushFrame;
      PushReturnAddress 035122;
      SetLocal 1 GetLocal(2);
      MakeRoutineFrame 1;
      Jump: 027405
    } else {
      Jump: 035150
    }
  } else {
    Jump: 035224
  }
LocReturn 035122:
  TraceOperation 035127 (Print_ret " not something you can switch.");
  GamePrint " not something you can switch.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 035150:
  TraceOperation 035150 (Je [Var (Global 239),Con 2] (Branch F (Dloc 035170)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),2)) {
    TraceOperation 035154 (CallN (Floc 027404) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 035154;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 1;
    Jump: 027405
  } else {
    Jump: 035170
  }
LocReturn 035154:
  TraceOperation 035159 (Print_ret " already on.");
  GamePrint " already on.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 035170:
  TraceOperation 035170 (Je [Var (Global 239),Con 3] (Branch F (Dloc 035193)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),3)) {
    TraceOperation 035174 (Print "You switch ");
    GamePrint "You switch ";
    TraceOperation 035183 (CallN (Floc 081916) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 035183;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 081917
  } else {
    Jump: 035193
  }
LocReturn 035183:
  TraceOperation 035188 (Print_ret " on.");
  GamePrint " on.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 035193:
  TraceOperation 035193 (Je [Var (Global 239),Con 4] (Branch F (Dloc 035223)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),4)) {
    TraceOperation 035197 (CallN (Floc 081964) [Var (Global 37)]);
    Let b3 = M[007280];
    Let b4 = M[007281];
    PushFrame;
    PushReturnAddress 035197;
    SetLocal 1 MakeHiLo(b3,b4);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 081965
  } else {
    Jump: 035223
  }
LocReturn 035197:
  TraceOperation 035202 (Print " switches ");
  GamePrint " switches ";
  TraceOperation 035211 (CallN (Floc 081916) [Var (Local 2)]);
  PushFrame;
  PushReturnAddress 035211;
  SetLocal 1 GetLocal(2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 081917
LocReturn 035211:
  TraceOperation 035216 (Print " on.\n");
  GamePrint " on.\n";
  Jump: 035223
LocOp 035223:
  TraceOperation 035223 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 035224:
  TraceOperation 035224 (Je [Var (Global 233),Con 64] (Branch F (Dloc 035755)));
  Let b1 = M[007672];
  Let b2 = M[007673];
  if (Equal(MakeHiLo(b1,b2),64)) {
    TraceOperation 035229 (Store (Con 255) (Var (Local 1)));
    SetByte 007684 HiByte(GetLocal(1));
    SetByte 007685 LoByte(GetLocal(1));
    TraceOperation 035232 (Je [Var (Global 239),Con 1] (Branch F (Dloc 035243)));
    Let b3 = M[007684];
    Let b4 = M[007685];
    if (Equal(MakeHiLo(b3,b4),1)) {
      TraceOperation 035236 (Print_ret "Taken.");
      GamePrint "Taken.\n";
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 1;
      JumpIndirect: (return) return_address_5
    } else {
      Jump: 035243
    }
  } else {
    Jump: 035755
  }
LocOp 035243:
  TraceOperation 035243 (Je [Var (Global 239),Con 2] (Branch F (Dloc 035270)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),2)) {
    TraceOperation 035247 (Print_ret "You are always self-possessed.");
    GamePrint "You are always self-possessed.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 035270
  }
LocOp 035270:
  TraceOperation 035270 (Je [Var (Global 239),Con 3] (Branch F (Dloc 035309)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),3)) {
    TraceOperation 035274 (Print "I don't suppose ");
    GamePrint "I don't suppose ";
    TraceOperation 035287 (CallN (Floc 081916) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 035287;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 081917
  } else {
    Jump: 035309
  }
LocReturn 035287:
  TraceOperation 035292 (Print_ret " would care for that.");
  GamePrint " would care for that.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 035309:
  TraceOperation 035309 (Je [Var (Global 239),Con 4] (Branch F (Dloc 035359)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),4)) {
    TraceOperation 035313 (Print "You'd have to get ");
    GamePrint "You'd have to get ";
    TraceOperation 035328 (Test_attr (Var (Local 2)) (Con 17) (Branch F (Dloc 035340)));
    Let b3 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),2)];
    if (TestBit(b3,6)) {
      TraceOperation 035332 (Print "off ");
      GamePrint "off ";
      TraceOperation 035337 (Jump 035347);
      Jump: 035347
    } else {
      Jump: 035340
    }
  } else {
    Jump: 035359
  }
LocOp 035340:
  TraceOperation 035340 (Print "out of ");
  GamePrint "out of ";
  Jump: 035347
LocOp 035347:
  TraceOperation 035347 (CallN (Floc 081916) [Var (Local 2)]);
  PushFrame;
  PushReturnAddress 035347;
  SetLocal 1 GetLocal(2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 081917
LocReturn 035347:
  TraceOperation 035352 (Print_ret " first.");
  GamePrint " first.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 035359:
  TraceOperation 035359 (Je [Var (Global 239),Con 5] (Branch F (Dloc 035384)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),5)) {
    TraceOperation 035363 (Print "You already have ");
    GamePrint "You already have ";
    TraceOperation 035376 (CallN (Floc 027212) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 035376;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 1;
    Jump: 027213
  } else {
    Jump: 035384
  }
LocReturn 035376:
  TraceOperation 035381 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 035384:
  TraceOperation 035384 (Je [Var (Global 239),Con 6] (Branch F (Dloc 035432)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),6)) {
    TraceOperation 035388 (Test_attr (Var (Global 47)) (Con 26) (Branch F (Dloc 035404)));
    Let b3 = M[007300];
    Let b4 = M[007301];
    Let b5 = M[Offset(Offset(000378,Mul(MakeHiLo(b3,b4),14)),3)];
    if (TestBit(b5,5)) {
      TraceOperation 035392 (Print "Those seem ");
      GamePrint "Those seem ";
      TraceOperation 035401 (Jump 035413);
      Jump: 035413
    } else {
      Jump: 035404
    }
  } else {
    Jump: 035432
  }
LocOp 035404:
  TraceOperation 035404 (Print "That seems ");
  GamePrint "That seems ";
  Jump: 035413
LocOp 035413:
  TraceOperation 035413 (Print "to belong to ");
  GamePrint "to belong to ";
  TraceOperation 035424 (CallN (Floc 081916) [Var (Local 2)]);
  PushFrame;
  PushReturnAddress 035424;
  SetLocal 1 GetLocal(2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 081917
LocReturn 035424:
  TraceOperation 035429 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 035432:
  TraceOperation 035432 (Je [Var (Global 239),Con 7] (Branch F (Dloc 035482)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),7)) {
    TraceOperation 035436 (Test_attr (Var (Global 47)) (Con 26) (Branch F (Dloc 035452)));
    Let b3 = M[007300];
    Let b4 = M[007301];
    Let b5 = M[Offset(Offset(000378,Mul(MakeHiLo(b3,b4),14)),3)];
    if (TestBit(b5,5)) {
      TraceOperation 035440 (Print "Those seem ");
      GamePrint "Those seem ";
      TraceOperation 035449 (Jump 035461);
      Jump: 035461
    } else {
      Jump: 035452
    }
  } else {
    Jump: 035482
  }
LocOp 035452:
  TraceOperation 035452 (Print "That seems ");
  GamePrint "That seems ";
  Jump: 035461
LocOp 035461:
  TraceOperation 035461 (Print "to be a part of ");
  GamePrint "to be a part of ";
  TraceOperation 035474 (CallN (Floc 081916) [Var (Local 2)]);
  PushFrame;
  PushReturnAddress 035474;
  SetLocal 1 GetLocal(2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 081917
LocReturn 035474:
  TraceOperation 035479 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 035482:
  TraceOperation 035482 (Je [Var (Global 239),Con 8] (Branch F (Dloc 035512)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),8)) {
    TraceOperation 035486 (CallN (Floc 027352) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 035486;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 1;
    Jump: 027353
  } else {
    Jump: 035512
  }
LocReturn 035486:
  TraceOperation 035491 (Print " ");
  GamePrint " ";
  TraceOperation 035494 (CallN (Floc 027308) [Var (Local 2)]);
  PushFrame;
  PushReturnAddress 035494;
  SetLocal 1 GetLocal(2);
  MakeRoutineFrame 1;
  Jump: 027309
LocReturn 035494:
  TraceOperation 035499 (Print_ret "n't available.");
  GamePrint "n't available.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 035512:
  TraceOperation 035512 (Je [Var (Global 239),Con 9] (Branch F (Dloc 035538)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),9)) {
    TraceOperation 035516 (CallN (Floc 081964) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 035516;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 081965
  } else {
    Jump: 035538
  }
LocReturn 035516:
  TraceOperation 035521 (Print " ");
  GamePrint " ";
  TraceOperation 035524 (CallN (Floc 027308) [Var (Local 2)]);
  PushFrame;
  PushReturnAddress 035524;
  SetLocal 1 GetLocal(2);
  MakeRoutineFrame 1;
  Jump: 027309
LocReturn 035524:
  TraceOperation 035529 (Print_ret "n't open.");
  GamePrint "n't open.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 035538:
  TraceOperation 035538 (Je [Var (Global 239),Con 10] (Branch F (Dloc 035578)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),10)) {
    TraceOperation 035542 (Test_attr (Var (Local 2)) (Con 26) (Branch F (Dloc 035558)));
    Let b3 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),3)];
    if (TestBit(b3,5)) {
      TraceOperation 035546 (Print "They're ");
      GamePrint "They're ";
      TraceOperation 035555 (Jump 035565);
      Jump: 035565
    } else {
      Jump: 035558
    }
  } else {
    Jump: 035578
  }
LocOp 035558:
  TraceOperation 035558 (Print "That's ");
  GamePrint "That's ";
  Jump: 035565
LocOp 035565:
  TraceOperation 035565 (Print_ret "hardly portable.");
  GamePrint "hardly portable.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 035578:
  TraceOperation 035578 (Je [Var (Global 239),Con 11] (Branch F (Dloc 035618)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),11)) {
    TraceOperation 035582 (Test_attr (Var (Local 2)) (Con 26) (Branch F (Dloc 035598)));
    Let b3 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),3)];
    if (TestBit(b3,5)) {
      TraceOperation 035586 (Print "They're ");
      GamePrint "They're ";
      TraceOperation 035595 (Jump 035605);
      Jump: 035605
    } else {
      Jump: 035598
    }
  } else {
    Jump: 035618
  }
LocOp 035598:
  TraceOperation 035598 (Print "That's ");
  GamePrint "That's ";
  Jump: 035605
LocOp 035605:
  TraceOperation 035605 (Print_ret "fixed in place.");
  GamePrint "fixed in place.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 035618:
  TraceOperation 035618 (Je [Var (Global 239),Con 12] (Branch F (Dloc 035627)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),12)) {
    TraceOperation 035622 (Print_paddr (Con 29035));
    Note "<static Gettext address>";
    GamePrint "You're carrying too many things already.";
    TraceOperation 035625 New_line;
    GamePrint "\n";
    TraceOperation 035626 Rtrue;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 035627
  }
LocOp 035627:
  TraceOperation 035627 (Je [Var (Global 239),Con 13] (Branch F (Dloc 035672)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),13)) {
    TraceOperation 035631 (Print "(putting ");
    GamePrint "(putting ";
    TraceOperation 035640 (CallN (Floc 081916) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 035640;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 081917
  } else {
    Jump: 035672
  }
LocReturn 035640:
  TraceOperation 035645 (Print " into ");
  GamePrint " into ";
  TraceOperation 035650 (CallN (Floc 081916) [Var (Global 35)]);
  Let b1 = M[007276];
  Let b2 = M[007277];
  PushFrame;
  PushReturnAddress 035650;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 081917
LocReturn 035650:
  TraceOperation 035655 (Print " to make room)\n");
  GamePrint " to make room)\n";
  TraceOperation 035668 (Store (Con 20) (Con 0));
  SetByte 007214 0;
  SetByte 007215 0;
  TraceOperation 035671 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 035672:
  TraceOperation 035672 (Je [Var (Global 239),Con 14] (Branch F (Dloc 035701)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),14)) {
    TraceOperation 035676 (Print "You can't reach into ");
    GamePrint "You can't reach into ";
    TraceOperation 035693 (CallN (Floc 081916) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 035693;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 081917
  } else {
    Jump: 035701
  }
LocReturn 035693:
  TraceOperation 035698 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 035701:
  TraceOperation 035701 (Je [Var (Global 239),Con 15] (Branch F (Dloc 035726)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),15)) {
    TraceOperation 035705 (Print "You cannot carry ");
    GamePrint "You cannot carry ";
    TraceOperation 035718 (CallN (Floc 081916) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 035718;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 081917
  } else {
    Jump: 035726
  }
LocReturn 035718:
  TraceOperation 035723 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 035726:
  TraceOperation 035726 (Je [Var (Global 239),Con 16] (Branch F (Dloc 035754)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),16)) {
    TraceOperation 035730 (CallN (Floc 081964) [Var (Global 37)]);
    Let b3 = M[007280];
    Let b4 = M[007281];
    PushFrame;
    PushReturnAddress 035730;
    SetLocal 1 MakeHiLo(b3,b4);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 081965
  } else {
    Jump: 035754
  }
LocReturn 035730:
  TraceOperation 035735 (Print " picks up ");
  GamePrint " picks up ";
  TraceOperation 035744 (CallN (Floc 081916) [Var (Local 2)]);
  PushFrame;
  PushReturnAddress 035744;
  SetLocal 1 GetLocal(2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 081917
LocReturn 035744:
  TraceOperation 035749 (Print ".\n");
  GamePrint ".\n";
  Jump: 035754
LocOp 035754:
  TraceOperation 035754 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 035755:
  TraceOperation 035755 (Je [Var (Global 233),Con 65] (Branch F (Dloc 035782)));
  Let b1 = M[007672];
  Let b2 = M[007673];
  if (Equal(MakeHiLo(b1,b2),65)) {
    TraceOperation 035759 (Print_ret "You taste nothing unexpected.");
    GamePrint "You taste nothing unexpected.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 035782
  }
LocOp 035782:
  TraceOperation 035782 (Je [Var (Global 233),Con 66] (Branch F (Dloc 035842)));
  Let b1 = M[007672];
  Let b2 = M[007673];
  if (Equal(MakeHiLo(b1,b2),66)) {
    TraceOperation 035786 (Store (Con 255) (Var (Local 1)));
    SetByte 007684 HiByte(GetLocal(1));
    SetByte 007685 LoByte(GetLocal(1));
    TraceOperation 035789 (Je [Var (Global 239),Con 1] (Branch F (Dloc 035816)));
    Let b3 = M[007684];
    Let b4 = M[007685];
    if (Equal(MakeHiLo(b3,b4),1)) {
      TraceOperation 035793 (Print_ret "You talk to yourself a while.");
      GamePrint "You talk to yourself a while.\n";
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 1;
      JumpIndirect: (return) return_address_5
    } else {
      Jump: 035816
    }
  } else {
    Jump: 035842
  }
LocOp 035816:
  TraceOperation 035816 (Je [Var (Global 239),Con 2] (Branch F (Dloc 035841)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),2)) {
    TraceOperation 035820 (Print_ret "This provokes no reaction.");
    GamePrint "This provokes no reaction.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 035841
  }
LocOp 035841:
  TraceOperation 035841 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 035842:
  TraceOperation 035842 (Je [Var (Global 233),Con 67] (Branch F (Dloc 035861)));
  Let b1 = M[007672];
  Let b2 = M[007673];
  if (Equal(MakeHiLo(b1,b2),67)) {
    TraceOperation 035846 (Print_ret "What a good idea.");
    GamePrint "What a good idea.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 035861
  }
LocOp 035861:
  TraceOperation 035861 (Je [Var (Global 233),Con 68] (Branch F (Dloc 035889)));
  Let b1 = M[007672];
  Let b2 = M[007673];
  if (Equal(MakeHiLo(b1,b2),68)) {
    TraceOperation 035865 (Store (Con 255) (Var (Local 1)));
    SetByte 007684 HiByte(GetLocal(1));
    SetByte 007685 LoByte(GetLocal(1));
    TraceOperation 035868 (Je [Var (Global 239),Con 1] (Branch F (Dloc 035879)));
    Let b3 = M[007684];
    Let b4 = M[007685];
    if (Equal(MakeHiLo(b3,b4),1)) {
      TraceOperation 035872 (Print_ret "Futile.");
      GamePrint "Futile.\n";
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 1;
      JumpIndirect: (return) return_address_5
    } else {
      Jump: 035879
    }
  } else {
    Jump: 035889
  }
LocOp 035879:
  TraceOperation 035879 (Je [Var (Global 239),Con 2] (Branch F (Dloc 035888)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),2)) {
    TraceOperation 035883 (Print_paddr (Con 29043));
    Note "<static Gettext address>";
    GamePrint "You lack the nerve when it comes to the crucial moment.";
    TraceOperation 035886 New_line;
    GamePrint "\n";
    TraceOperation 035887 Rtrue;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 035888
  }
LocOp 035888:
  TraceOperation 035888 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 035889:
  TraceOperation 035889 (Je [Var (Global 233),Con 69] (Branch F (Dloc 035898)));
  Let b1 = M[007672];
  Let b2 = M[007673];
  if (Equal(MakeHiLo(b1,b2),69)) {
    TraceOperation 035893 (Print_paddr (Con 29053));
    Note "<static Gettext address>";
    GamePrint "You would achieve nothing by this.";
    TraceOperation 035896 New_line;
    GamePrint "\n";
    TraceOperation 035897 Rtrue;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 035898
  }
LocOp 035898:
  TraceOperation 035898 (Je [Var (Global 233),Con 70] (Branch F (Dloc 036062)));
  Let b1 = M[007672];
  Let b2 = M[007673];
  if (Equal(MakeHiLo(b1,b2),70)) {
    TraceOperation 035903 (Store (Con 255) (Var (Local 1)));
    SetByte 007684 HiByte(GetLocal(1));
    SetByte 007685 LoByte(GetLocal(1));
    TraceOperation 035906 (Je [Var (Global 239),Con 1] (Branch F (Dloc 035931)));
    Let b3 = M[007684];
    Let b4 = M[007685];
    if (Equal(MakeHiLo(b3,b4),1)) {
      TraceOperation 035910 (Print_ret "Keep your hands to yourself!");
      GamePrint "Keep your hands to yourself!\n";
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 1;
      JumpIndirect: (return) return_address_5
    } else {
      Jump: 035931
    }
  } else {
    Jump: 036062
  }
LocOp 035931:
  TraceOperation 035931 (Je [Var (Global 239),Con 2] (Branch F (Dloc 035956)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),2)) {
    TraceOperation 035935 (Print_ret "You feel nothing unexpected.");
    GamePrint "You feel nothing unexpected.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 035956
  }
LocOp 035956:
  TraceOperation 035956 (Je [Var (Global 239),Con 3] (Branch F (Dloc 035981)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),3)) {
    TraceOperation 035960 (Print_ret "If you think that'll help.");
    GamePrint "If you think that'll help.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 035981
  }
LocOp 035981:
  TraceOperation 035981 (Je [Var (Global 239),Con 4] (Branch F (Dloc 036010)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),4)) {
    TraceOperation 035985 (CallN (Floc 081964) [Var (Global 37)]);
    Let b3 = M[007280];
    Let b4 = M[007281];
    PushFrame;
    PushReturnAddress 035985;
    SetLocal 1 MakeHiLo(b3,b4);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 081965
  } else {
    Jump: 036010
  }
LocReturn 035985:
  TraceOperation 035990 (Print " touches ");
  GamePrint " touches ";
  TraceOperation 035997 (CallN (Floc 027496) [Var (Local 2)]);
  PushFrame;
  PushReturnAddress 035997;
  SetLocal 1 GetLocal(2);
  MakeRoutineFrame 1;
  Jump: 027497
LocReturn 035997:
  TraceOperation 036002 (Print ".\n");
  GamePrint ".\n";
  TraceOperation 036007 (Jump 036061);
  Jump: 036061
LocOp 036010:
  TraceOperation 036010 (Je [Var (Global 239),Con 5] (Branch F (Dloc 036035)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),5)) {
    TraceOperation 036014 (CallN (Floc 081964) [Var (Global 37)]);
    Let b3 = M[007280];
    Let b4 = M[007281];
    PushFrame;
    PushReturnAddress 036014;
    SetLocal 1 MakeHiLo(b3,b4);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 081965
  } else {
    Jump: 036035
  }
LocReturn 036014:
  TraceOperation 036019 (Print " touches you.\n");
  GamePrint " touches you.\n";
  TraceOperation 036032 (Jump 036061);
  Jump: 036061
LocOp 036035:
  TraceOperation 036035 (Je [Var (Global 239),Con 6] (Branch F (Dloc 036061)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),6)) {
    TraceOperation 036039 (CallN (Floc 081964) [Var (Global 37)]);
    Let b3 = M[007280];
    Let b4 = M[007281];
    PushFrame;
    PushReturnAddress 036039;
    SetLocal 1 MakeHiLo(b3,b4);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 081965
  } else {
    Jump: 036061
  }
LocReturn 036039:
  TraceOperation 036044 (Print " touches ");
  GamePrint " touches ";
  TraceOperation 036051 (CallN (Floc 081916) [Var (Local 2)]);
  PushFrame;
  PushReturnAddress 036051;
  SetLocal 1 GetLocal(2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 081917
LocReturn 036051:
  TraceOperation 036056 (Print ".\n");
  GamePrint ".\n";
  Jump: 036061
LocOp 036061:
  TraceOperation 036061 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 036062:
  TraceOperation 036062 (Je [Var (Global 233),Con 71] (Branch F (Dloc 036234)));
  Let b1 = M[007672];
  Let b2 = M[007673];
  if (Equal(MakeHiLo(b1,b2),71)) {
    TraceOperation 036067 (Store (Con 255) (Var (Local 1)));
    SetByte 007684 HiByte(GetLocal(1));
    SetByte 007685 LoByte(GetLocal(1));
    TraceOperation 036070 (Je [Var (Global 239),Con 1] (Branch F (Dloc 036108)));
    Let b3 = M[007684];
    Let b4 = M[007685];
    if (Equal(MakeHiLo(b3,b4),1)) {
      TraceOperation 036074 (Test_attr (Var (Local 2)) (Con 26) (Branch F (Dloc 036092)));
      Let b5 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),3)];
      if (TestBit(b5,5)) {
        TraceOperation 036078 (Print "They don't ");
        GamePrint "They don't ";
        TraceOperation 036089 (Jump 036103);
        Jump: 036103
      } else {
        Jump: 036092
      }
    } else {
      Jump: 036108
    }
  } else {
    Jump: 036234
  }
LocOp 036092:
  TraceOperation 036092 (Print "That doesn't ");
  GamePrint "That doesn't ";
  Jump: 036103
LocOp 036103:
  TraceOperation 036103 (Print_paddr (Con 29059));
  Note "<static Gettext address>";
  GamePrint "seem to be something you can unlock.";
  TraceOperation 036106 New_line;
  GamePrint "\n";
  TraceOperation 036107 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 036108:
  TraceOperation 036108 (Je [Var (Global 239),Con 2] (Branch F (Dloc 036136)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),2)) {
    TraceOperation 036112 (CallN (Floc 027404) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 036112;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 1;
    Jump: 027405
  } else {
    Jump: 036136
  }
LocReturn 036112:
  TraceOperation 036117 (Print_ret " unlocked at the moment.");
  GamePrint " unlocked at the moment.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 036136:
  TraceOperation 036136 (Je [Var (Global 239),Con 3] (Branch F (Dloc 036186)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),3)) {
    TraceOperation 036140 (Test_attr (Var (Local 2)) (Con 26) (Branch F (Dloc 036158)));
    Let b3 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),3)];
    if (TestBit(b3,5)) {
      TraceOperation 036144 (Print "Those don't ");
      GamePrint "Those don't ";
      TraceOperation 036155 (Jump 036169);
      Jump: 036169
    } else {
      Jump: 036158
    }
  } else {
    Jump: 036186
  }
LocOp 036158:
  TraceOperation 036158 (Print "That doesn't ");
  GamePrint "That doesn't ";
  Jump: 036169
LocOp 036169:
  TraceOperation 036169 (Print_ret "seem to fit the lock.");
  GamePrint "seem to fit the lock.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 036186:
  TraceOperation 036186 (Je [Var (Global 239),Con 4] (Branch F (Dloc 036207)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),4)) {
    TraceOperation 036190 (Print "You unlock ");
    GamePrint "You unlock ";
    TraceOperation 036199 (CallN (Floc 081916) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 036199;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 081917
  } else {
    Jump: 036207
  }
LocReturn 036199:
  TraceOperation 036204 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 036207:
  TraceOperation 036207 (Je [Var (Global 239),Con 5] (Branch F (Dloc 036233)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),5)) {
    TraceOperation 036211 (CallN (Floc 081964) [Var (Global 37)]);
    Let b3 = M[007280];
    Let b4 = M[007281];
    PushFrame;
    PushReturnAddress 036211;
    SetLocal 1 MakeHiLo(b3,b4);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 081965
  } else {
    Jump: 036233
  }
LocReturn 036211:
  TraceOperation 036216 (Print " unlocks ");
  GamePrint " unlocks ";
  TraceOperation 036223 (CallN (Floc 081916) [Var (Local 2)]);
  PushFrame;
  PushReturnAddress 036223;
  SetLocal 1 GetLocal(2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 081917
LocReturn 036223:
  TraceOperation 036228 (Print ".\n");
  GamePrint ".\n";
  Jump: 036233
LocOp 036233:
  TraceOperation 036233 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 036234:
  TraceOperation 036234 (Je [Var (Global 233),Con 4] (Branch F (Dloc 036260)));
  Let b1 = M[007672];
  Let b2 = M[007673];
  if (Equal(MakeHiLo(b1,b2),4)) {
    TraceOperation 036238 (Store (Con 255) (Var (Local 1)));
    SetByte 007684 HiByte(GetLocal(1));
    SetByte 007685 LoByte(GetLocal(1));
    TraceOperation 036241 (Je [Var (Global 239),Con 1] (Branch F (Dloc 036250)));
    Let b3 = M[007684];
    Let b4 = M[007685];
    if (Equal(MakeHiLo(b3,b4),1)) {
      TraceOperation 036245 (Print_paddr (Con 29066));
      Note "<static Gettext address>";
      GamePrint "The game file has verified as intact.";
      TraceOperation 036248 New_line;
      GamePrint "\n";
      TraceOperation 036249 Rtrue;
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 1;
      JumpIndirect: (return) return_address_5
    } else {
      Jump: 036250
    }
  } else {
    Jump: 036260
  }
LocOp 036250:
  TraceOperation 036250 (Je [Var (Global 239),Con 2] (Branch F (Dloc 036259)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),2)) {
    TraceOperation 036254 (Print_paddr (Con 29073));
    Note "<static Gettext address>";
    GamePrint "The game file did not verify as intact, and may be corrupt.";
    TraceOperation 036257 New_line;
    GamePrint "\n";
    TraceOperation 036258 Rtrue;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 036259
  }
LocOp 036259:
  TraceOperation 036259 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 036260:
  TraceOperation 036260 (Je [Var (Global 233),Con 72] (Branch F (Dloc 036301)));
  Let b1 = M[007672];
  Let b2 = M[007673];
  if (Equal(MakeHiLo(b1,b2),72)) {
    TraceOperation 036264 (Store (Con 255) (Var (Local 1)));
    SetByte 007684 HiByte(GetLocal(1));
    SetByte 007685 LoByte(GetLocal(1));
    TraceOperation 036267 (Je [Var (Global 239),Con 1] (Branch F (Dloc 036282)));
    Let b3 = M[007684];
    Let b4 = M[007685];
    if (Equal(MakeHiLo(b3,b4),1)) {
      TraceOperation 036271 (Print_ret "Time passes.");
      GamePrint "Time passes.\n";
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 1;
      JumpIndirect: (return) return_address_5
    } else {
      Jump: 036282
    }
  } else {
    Jump: 036301
  }
LocOp 036282:
  TraceOperation 036282 (Je [Var (Global 239),Con 2] (Branch F (Dloc 036300)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),2)) {
    TraceOperation 036286 (CallN (Floc 081964) [Var (Global 37)]);
    Let b3 = M[007280];
    Let b4 = M[007281];
    PushFrame;
    PushReturnAddress 036286;
    SetLocal 1 MakeHiLo(b3,b4);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 081965
  } else {
    Jump: 036300
  }
LocReturn 036286:
  TraceOperation 036291 (Print " waits.\n");
  GamePrint " waits.\n";
  Jump: 036300
LocOp 036300:
  TraceOperation 036300 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 036301:
  TraceOperation 036301 (Je [Var (Global 233),Con 73] (Branch F (Dloc 036310)));
  Let b1 = M[007672];
  Let b2 = M[007673];
  if (Equal(MakeHiLo(b1,b2),73)) {
    TraceOperation 036305 (Print_paddr (Con 29084));
    Note "<static Gettext address>";
    GamePrint "The dreadful truth is, this is not a dream.";
    TraceOperation 036308 New_line;
    GamePrint "\n";
    TraceOperation 036309 Rtrue;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 036310
  }
LocOp 036310:
  TraceOperation 036310 (Je [Var (Global 233),Con 74] (Branch F (Dloc 036333)));
  Let b1 = M[007672];
  Let b2 = M[007673];
  if (Equal(MakeHiLo(b1,b2),74)) {
    TraceOperation 036314 (Print_ret "That seems unnecessary.");
    GamePrint "That seems unnecessary.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 036333
  }
LocOp 036333:
  TraceOperation 036333 (Je [Var (Global 233),Con 75] (Branch F (Dloc 036432)));
  Let b1 = M[007672];
  Let b2 = M[007673];
  if (Equal(MakeHiLo(b1,b2),75)) {
    TraceOperation 036338 (Store (Con 255) (Var (Local 1)));
    SetByte 007684 HiByte(GetLocal(1));
    SetByte 007685 LoByte(GetLocal(1));
    TraceOperation 036341 (Je [Var (Global 239),Con 1] (Branch F (Dloc 036372)));
    Let b3 = M[007684];
    Let b4 = M[007685];
    if (Equal(MakeHiLo(b3,b4),1)) {
      TraceOperation 036345 (Print "But you aren't holding ");
      GamePrint "But you aren't holding ";
      TraceOperation 036364 (CallN (Floc 027212) [Var (Local 2)]);
      PushFrame;
      PushReturnAddress 036364;
      SetLocal 1 GetLocal(2);
      MakeRoutineFrame 1;
      Jump: 027213
    } else {
      Jump: 036372
    }
  } else {
    Jump: 036432
  }
LocReturn 036364:
  TraceOperation 036369 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 036372:
  TraceOperation 036372 (Je [Var (Global 239),Con 2] (Branch F (Dloc 036405)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),2)) {
    TraceOperation 036376 (Print "You look ridiculous waving ");
    GamePrint "You look ridiculous waving ";
    TraceOperation 036397 (CallN (Floc 081916) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 036397;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 081917
  } else {
    Jump: 036405
  }
LocReturn 036397:
  TraceOperation 036402 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 036405:
  TraceOperation 036405 (Je [Var (Global 239),Con 3] (Branch F (Dloc 036431)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),3)) {
    TraceOperation 036409 (CallN (Floc 081964) [Var (Global 37)]);
    Let b3 = M[007280];
    Let b4 = M[007281];
    PushFrame;
    PushReturnAddress 036409;
    SetLocal 1 MakeHiLo(b3,b4);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 081965
  } else {
    Jump: 036431
  }
LocReturn 036409:
  TraceOperation 036414 (Print " waves ");
  GamePrint " waves ";
  TraceOperation 036421 (CallN (Floc 081916) [Var (Local 2)]);
  PushFrame;
  PushReturnAddress 036421;
  SetLocal 1 GetLocal(2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 081917
LocReturn 036421:
  TraceOperation 036426 (Print ".\n");
  GamePrint ".\n";
  Jump: 036431
LocOp 036431:
  TraceOperation 036431 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 036432:
  TraceOperation 036432 (Je [Var (Global 233),Con 76] (Branch F (Dloc 036457)));
  Let b1 = M[007672];
  Let b2 = M[007673];
  if (Equal(MakeHiLo(b1,b2),76)) {
    TraceOperation 036436 (Print_ret "You wave, feeling foolish.");
    GamePrint "You wave, feeling foolish.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 036457
  }
LocOp 036457:
  TraceOperation 036457 (Je [Var (Global 233),Con 77] (Branch F (Dloc 036595)));
  Let b1 = M[007672];
  Let b2 = M[007673];
  if (Equal(MakeHiLo(b1,b2),77)) {
    TraceOperation 036462 (Store (Con 255) (Var (Local 1)));
    SetByte 007684 HiByte(GetLocal(1));
    SetByte 007685 LoByte(GetLocal(1));
    TraceOperation 036465 (Je [Var (Global 239),Con 1] (Branch F (Dloc 036490)));
    Let b3 = M[007684];
    Let b4 = M[007685];
    if (Equal(MakeHiLo(b3,b4),1)) {
      TraceOperation 036469 (Print "You can't wear ");
      GamePrint "You can't wear ";
      TraceOperation 036482 (CallN (Floc 027212) [Var (Local 2)]);
      PushFrame;
      PushReturnAddress 036482;
      SetLocal 1 GetLocal(2);
      MakeRoutineFrame 1;
      Jump: 027213
    } else {
      Jump: 036490
    }
  } else {
    Jump: 036595
  }
LocReturn 036482:
  TraceOperation 036487 (Print_ret "!");
  GamePrint "!\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 036490:
  TraceOperation 036490 (Je [Var (Global 239),Con 2] (Branch F (Dloc 036517)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),2)) {
    TraceOperation 036494 (Print "You're not holding ");
    GamePrint "You're not holding ";
    TraceOperation 036509 (CallN (Floc 027212) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 036509;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 1;
    Jump: 027213
  } else {
    Jump: 036517
  }
LocReturn 036509:
  TraceOperation 036514 (Print_ret "!");
  GamePrint "!\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 036517:
  TraceOperation 036517 (Je [Var (Global 239),Con 3] (Branch F (Dloc 036548)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),3)) {
    TraceOperation 036521 (Print "You're already wearing ");
    GamePrint "You're already wearing ";
    TraceOperation 036540 (CallN (Floc 027212) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 036540;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 1;
    Jump: 027213
  } else {
    Jump: 036548
  }
LocReturn 036540:
  TraceOperation 036545 (Print_ret "!");
  GamePrint "!\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 036548:
  TraceOperation 036548 (Je [Var (Global 239),Con 4] (Branch F (Dloc 036569)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),4)) {
    TraceOperation 036552 (Print "You put on ");
    GamePrint "You put on ";
    TraceOperation 036561 (CallN (Floc 081916) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 036561;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 081917
  } else {
    Jump: 036569
  }
LocReturn 036561:
  TraceOperation 036566 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 036569:
  TraceOperation 036569 (Je [Var (Global 239),Con 5] (Branch F (Dloc 036595)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),5)) {
    TraceOperation 036573 (CallN (Floc 081964) [Var (Global 37)]);
    Let b3 = M[007280];
    Let b4 = M[007281];
    PushFrame;
    PushReturnAddress 036573;
    SetLocal 1 MakeHiLo(b3,b4);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 081965
  } else {
    Jump: 036595
  }
LocReturn 036573:
  TraceOperation 036578 (Print " puts on ");
  GamePrint " puts on ";
  TraceOperation 036585 (CallN (Floc 081916) [Var (Local 2)]);
  PushFrame;
  PushReturnAddress 036585;
  SetLocal 1 GetLocal(2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 081917
LocReturn 036585:
  TraceOperation 036590 (Print ".\n");
  GamePrint ".\n";
  Jump: 036595
LocOp 036595:
  TraceOperation 036595 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 036596:
  MakeRoutineFrame 6;
  if (LessThanByte(num_actuals,6)) {
    SetLocal 6 0;
    if (LessThanByte(num_actuals,5)) {
      SetLocal 5 0;
      if (LessThanByte(num_actuals,4)) {
        SetLocal 4 0;
        if (LessThanByte(num_actuals,3)) {
          SetLocal 3 0;
          if (LessThanByte(num_actuals,2)) {
            SetLocal 2 0;
            if (LessThanByte(num_actuals,1)) {
              SetLocal 1 0;
            }
          }
        }
      }
    }
  }
  Jump: 036597
LocOp 036597:
  TraceOperation 036597 (Push (Var (Global 233)));
  Let b1 = M[007672];
  Let b2 = M[007673];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 036600 (Store (Con 249) (Var (Local 1)));
  SetByte 007672 HiByte(GetLocal(1));
  SetByte 007673 LoByte(GetLocal(1));
  TraceOperation 036603 (Jz (Var (Local 2)) (Branch F (Dloc 036609)));
  if (IsZero(GetLocal(2))) {
    TraceOperation 036606 (Store (Con 2) (Con 1));
    SetLocal 2 1;
    Jump: 036609
  } else {
    Jump: 036609
  }
LocOp 036609:
  TraceOperation 036609 (Push (Var (Global 40)));
  Let b1 = M[007286];
  Let b2 = M[007287];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 036612 (Store (Con 125) (Var (Local 1)));
  SetByte 007424 HiByte(GetLocal(1));
  SetByte 007425 LoByte(GetLocal(1));
  TraceOperation 036615 (Store (Con 126) (Var (Local 2)));
  SetByte 007426 HiByte(GetLocal(2));
  SetByte 007427 LoByte(GetLocal(2));
  TraceOperation 036618 (Store (Con 127) (Var (Local 3)));
  SetByte 007428 HiByte(GetLocal(3));
  SetByte 007429 LoByte(GetLocal(3));
  TraceOperation 036621 (Store (Con 128) (Var (Local 4)));
  SetByte 007430 HiByte(GetLocal(4));
  SetByte 007431 LoByte(GetLocal(4));
  TraceOperation 036624 (Store (Con 255) (Var (Local 1)));
  SetByte 007684 HiByte(GetLocal(1));
  SetByte 007685 LoByte(GetLocal(1));
  TraceOperation 036627 (Je [Var (Global 239),Con 4097] (Branch F (Dloc 036649)));
  Let b3 = M[007684];
  Let b4 = M[007685];
  if (Equal(MakeHiLo(b3,b4),4097)) {
    TraceOperation 036633 (Call (Floc 056640) [] Sp);
    PushFrame;
    PushReturnAddress 036633;
    MakeRoutineFrame 0;
    Jump: 056641
  } else {
    Jump: 036649
  }
LocReturn 036633:
  PushStack call_result;
  TraceOperation 036637 (Call (Floc 109856) [Var Sp,Con 29092,Con 1] (Local 5));
  PopStack popped1;
  PushFrame;
  PushReturnAddress 036637;
  SetLocal 1 popped1;
  SetLocal 2 29092;
  SetLocal 3 1;
  MakeRoutineFrame 3;
  Jump: 109857
LocReturn 036637:
  SetLocal 5 call_result;
  TraceOperation 036646 (Jump 036684);
  Jump: 036684
LocOp 036649:
  TraceOperation 036649 (Je [Var (Global 239),Con 4096] (Branch F (Dloc 036671)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),4096)) {
    TraceOperation 036655 (Call (Floc 056616) [] Sp);
    PushFrame;
    PushReturnAddress 036655;
    MakeRoutineFrame 0;
    Jump: 056617
  } else {
    Jump: 036671
  }
LocReturn 036655:
  PushStack call_result;
  TraceOperation 036659 (Call (Floc 109856) [Var Sp,Con 29093,Con 1] (Local 5));
  PopStack popped1;
  PushFrame;
  PushReturnAddress 036659;
  SetLocal 1 popped1;
  SetLocal 2 29093;
  SetLocal 3 1;
  MakeRoutineFrame 3;
  Jump: 109857
LocReturn 036659:
  SetLocal 5 call_result;
  TraceOperation 036668 (Jump 036684);
  Jump: 036684
LocOp 036671:
  TraceOperation 036671 (Call (Floc 056636) [] Sp);
  PushFrame;
  PushReturnAddress 036671;
  MakeRoutineFrame 0;
  Jump: 056637
LocReturn 036671:
  PushStack call_result;
  TraceOperation 036675 (Call (Floc 109856) [Var Sp,Con 29094,Con 1] (Local 5));
  PopStack popped1;
  PushFrame;
  PushReturnAddress 036675;
  SetLocal 1 popped1;
  SetLocal 2 29094;
  SetLocal 3 1;
  MakeRoutineFrame 3;
  Jump: 109857
LocReturn 036675:
  SetLocal 5 call_result;
  Jump: 036684
LocOp 036684:
  TraceOperation 036684 (Store (Con 56) (Var (Global 233)));
  Let b1 = M[007672];
  Let b2 = M[007673];
  SetByte 007286 b1;
  SetByte 007287 b2;
  TraceOperation 036687 (Jz (Var (Local 5)) (Branch F (Dloc 036699)));
  if (IsZero(GetLocal(5))) {
    TraceOperation 036690 (Call (Floc 040828) [Con 7,Con 76] (Local 5));
    PushFrame;
    PushReturnAddress 036690;
    SetLocal 1 7;
    SetLocal 2 76;
    MakeRoutineFrame 2;
    Jump: 040829
  } else {
    Jump: 036699
  }
LocReturn 036690:
  SetLocal 5 call_result;
  Jump: 036699
LocOp 036699:
  TraceOperation 036699 (Pull (Con 56));
  PopStack popped1;
  SetByte 007286 HiByte(popped1);
  SetByte 007287 LoByte(popped1);
  TraceOperation 036702 (Jz (Var (Local 5)) (Branch F (Dloc 036712)));
  if (IsZero(GetLocal(5))) {
    TraceOperation 036705 (CallN (Floc 027544) [Var (Local 2),Var (Local 3),Var (Local 4)]);
    PushFrame;
    PushReturnAddress 036705;
    SetLocal 1 GetLocal(2);
    SetLocal 2 GetLocal(3);
    SetLocal 3 GetLocal(4);
    MakeRoutineFrame 3;
    Jump: 027545
  } else {
    Jump: 036712
  }
LocReturn 036705:
  Jump: 036712
LocOp 036712:
  TraceOperation 036712 (Pull (Con 249));
  PopStack popped1;
  SetByte 007672 HiByte(popped1);
  SetByte 007673 LoByte(popped1);
  TraceOperation 036715 Rtrue;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult 1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 036716:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 036717
LocOp 036717:
  TraceOperation 036717 (Jz (Var (Local 1)) (Branch T (Dloc 036797)));
  if (IsZero(GetLocal(1))) {
    Jump: 036797
  } else {
    TraceOperation 036721 (Test_attr (Var (Local 1)) (Con 8) (Branch T Dtrue));
    Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),1)];
    if (TestBit(b1,7)) {
      PopFrame;
      PopReturnAddress return_address_2;
      SetResult 1;
      JumpIndirect: (return) return_address_2
    } else {
      TraceOperation 036725 (Get_child (Var (Local 1)) Sp (Branch F (Dloc 036729)));
      Let b3 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),10)];
      Let b4 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),10),1)];
      PushStack MakeHiLo(b3,b4);
      if (IsZero(MakeHiLo(b3,b4))) {
        Jump: 036729
      } else {
        Jump: 036729
      }
    }
  }
LocOp 036729:
  TraceOperation 036729 (Pull (Con 2));
  PopStack popped1;
  SetLocal 2 popped1;
  TraceOperation 036732 (Jz (Var (Local 2)) (Branch T (Dloc 036749)));
  if (IsZero(GetLocal(2))) {
    Jump: 036749
  } else {
    Jump: 036735
  }
LocOp 036735:
  TraceOperation 036735 (Call (Floc 036800) [Var (Local 2)] Sp);
  PushFrame;
  PushReturnAddress 036735;
  SetLocal 1 GetLocal(2);
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 036801
LocReturn 036735:
  PushStack call_result;
  TraceOperation 036741 (Jz (Var Sp) (Branch F Dtrue));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 036744 (Get_sibling (Var (Local 2)) (Local 2) (Branch T (Dloc 036735)));
    Let b2 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),8)];
    Let b3 = M[Offset(Offset(Offset(000378,Mul(GetLocal(2),14)),8),1)];
    SetLocal 2 MakeHiLo(b2,b3);
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 036749
    } else {
      Jump: 036735
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_4;
    SetResult 1;
    JumpIndirect: (return) return_address_4
  }
LocOp 036749:
  TraceOperation 036749 (Test_attr (Var (Local 1)) (Con 4) (Branch F (Dloc 036761)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),0)];
  if (TestBit(b1,3)) {
    TraceOperation 036753 (Test_attr (Var (Local 1)) (Con 13) (Branch T (Dloc 036761)));
    Let b2 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),1)];
    if (TestBit(b2,2)) {
      Jump: 036761
    } else {
      TraceOperation 036757 (Test_attr (Var (Local 1)) (Con 20) (Branch F Dfalse));
      Let b3 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),2)];
      if (TestBit(b3,3)) {
        Jump: 036761
      } else {
        PopFrame;
        PopReturnAddress return_address_4;
        SetResult 0;
        JumpIndirect: (return) return_address_4
      }
    }
  } else {
    Jump: 036761
  }
LocOp 036761:
  TraceOperation 036761 (Call (Floc 111316) [Var (Local 1),Con 20] Sp);
  PushFrame;
  PushReturnAddress 036761;
  SetLocal 1 GetLocal(1);
  SetLocal 2 20;
  MakeRoutineFrame 2;
  Jump: 111317
LocReturn 036761:
  PushStack call_result;
  TraceOperation 036768 (Jz (Var Sp) (Branch T (Dloc 036791)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 036791
  } else {
    TraceOperation 036771 (Get_prop (Var (Local 1)) (Con 20) (Global 239));
    Let b2 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),12)];
    Let b3 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),12),1)];
    Let b4 = M[Address(MakeHiLo(b2,b3))];
    Let loop_var5 = DeAddress(Offset(Address(MakeHiLo(b2,b3)),Add(Mul(2,Widen(b4)),1)));
    Label 6: {
      Let b7 = M[Address(loop_var5)];
      if (IsZeroByte(b7)) {
        Let b8 = M[000304];
        Let b9 = M[000305];
        SetByte 007684 b8;
        SetByte 007685 b9;
      } else {
        if (TestBit(b7,7)) {
          Let b10 = M[Offset(Address(loop_var5),1)];
          if (Equal(20,Widen(BwAnd(b7,63)))) {
            if (Equal(Widen(BwAnd(b10,63)),2)) {
              Let b11 = M[Offset(Address(loop_var5),2)];
              Let b12 = M[Offset(Offset(Address(loop_var5),2),1)];
              SetByte 007684 b11;
              SetByte 007685 b12;
            } else {
              Let b13 = M[Offset(Address(loop_var5),2)];
              SetByte 007684 HiByte(Widen(b13));
              SetByte 007685 LoByte(Widen(b13));
            }
          } else {
            Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),2),Widen(BwAnd(b10,63))));
            Goto: Label 6
          }
        } else {
          if (TestBit(b7,6)) {
            if (Equal(20,Widen(BwAnd(b7,63)))) {
              Let b14 = M[Offset(Address(loop_var5),1)];
              Let b15 = M[Offset(Offset(Address(loop_var5),1),1)];
              SetByte 007684 b14;
              SetByte 007685 b15;
            } else {
              Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),1),2));
              Goto: Label 6
            }
          } else {
            if (Equal(20,Widen(BwAnd(b7,63)))) {
              Let b16 = M[Offset(Address(loop_var5),1)];
              SetByte 007684 HiByte(Widen(b16));
              SetByte 007685 LoByte(Widen(b16));
            } else {
              Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),1),1));
              Goto: Label 6
            }
          }
        }
      }
    }
    TraceOperation 036775 (Push (Var (Global 239)));
    Let b17 = M[007684];
    Let b18 = M[007685];
    PushStack MakeHiLo(b17,b18);
    TraceOperation 036778 (Jz (Var Sp) (Branch T (Dloc 036791)));
    PopStack popped19;
    if (IsZero(popped19)) {
      Jump: 036791
    } else {
      TraceOperation 036781 (Get_prop (Var (Local 1)) (Con 20) (Global 239));
      Let b20 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),12)];
      Let b21 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),12),1)];
      Let b22 = M[Address(MakeHiLo(b20,b21))];
      Let loop_var23 = DeAddress(Offset(Address(MakeHiLo(b20,b21)),Add(Mul(2,Widen(b22)),1)));
      Label 24: {
        Let b25 = M[Address(loop_var23)];
        if (IsZeroByte(b25)) {
          Let b26 = M[000304];
          Let b27 = M[000305];
          SetByte 007684 b26;
          SetByte 007685 b27;
        } else {
          if (TestBit(b25,7)) {
            Let b28 = M[Offset(Address(loop_var23),1)];
            if (Equal(20,Widen(BwAnd(b25,63)))) {
              if (Equal(Widen(BwAnd(b28,63)),2)) {
                Let b29 = M[Offset(Address(loop_var23),2)];
                Let b30 = M[Offset(Offset(Address(loop_var23),2),1)];
                SetByte 007684 b29;
                SetByte 007685 b30;
              } else {
                Let b31 = M[Offset(Address(loop_var23),2)];
                SetByte 007684 HiByte(Widen(b31));
                SetByte 007685 LoByte(Widen(b31));
              }
            } else {
              Assign loop_var23 = DeAddress(Offset(Offset(Address(loop_var23),2),Widen(BwAnd(b28,63))));
              Goto: Label 24
            }
          } else {
            if (TestBit(b25,6)) {
              if (Equal(20,Widen(BwAnd(b25,63)))) {
                Let b32 = M[Offset(Address(loop_var23),1)];
                Let b33 = M[Offset(Offset(Address(loop_var23),1),1)];
                SetByte 007684 b32;
                SetByte 007685 b33;
              } else {
                Assign loop_var23 = DeAddress(Offset(Offset(Address(loop_var23),1),2));
                Goto: Label 24
              }
            } else {
              if (Equal(20,Widen(BwAnd(b25,63)))) {
                Let b34 = M[Offset(Address(loop_var23),1)];
                SetByte 007684 HiByte(Widen(b34));
                SetByte 007685 LoByte(Widen(b34));
              } else {
                Assign loop_var23 = DeAddress(Offset(Offset(Address(loop_var23),1),1));
                Goto: Label 24
              }
            }
          }
        }
      }
      TraceOperation 036785 (Store (Con 1) (Var (Global 239)));
      Let b35 = M[007684];
      Let b36 = M[007685];
      SetLocal 1 MakeHiLo(b35,b36);
      TraceOperation 036788 (Jump 036794);
      Jump: 036794
    }
  }
LocOp 036791:
  TraceOperation 036791 (Get_parent (Var (Local 1)) (Local 1));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),6)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),6),1)];
  SetLocal 1 MakeHiLo(b1,b2);
  Jump: 036794
LocOp 036794:
  TraceOperation 036794 (Jump 036717);
  Jump: 036717
LocOp 036797:
  TraceOperation 036797 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 036800:
  MakeRoutineFrame 5;
  if (LessThanByte(num_actuals,5)) {
    SetLocal 5 0;
    if (LessThanByte(num_actuals,4)) {
      SetLocal 4 0;
      if (LessThanByte(num_actuals,3)) {
        SetLocal 3 0;
        if (LessThanByte(num_actuals,2)) {
          SetLocal 2 0;
          if (LessThanByte(num_actuals,1)) {
            SetLocal 1 0;
          }
        }
      }
    }
  }
  Jump: 036801
LocOp 036801:
  TraceOperation 036801 (Jz (Var (Local 1)) (Branch T Dfalse));
  if (IsZero(GetLocal(1))) {
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 0;
    JumpIndirect: (return) return_address_1
  } else {
    TraceOperation 036804 (Test_attr (Var (Local 1)) (Con 8) (Branch T Dtrue));
    Let b2 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),1)];
    if (TestBit(b2,7)) {
      PopFrame;
      PopReturnAddress return_address_3;
      SetResult 1;
      JumpIndirect: (return) return_address_3
    } else {
      TraceOperation 036808 (Call (Floc 037144) [Var (Local 1)] Sp);
      PushFrame;
      PushReturnAddress 036808;
      SetLocal 1 GetLocal(1);
      MakeRoutineFrame 1;
      Jump: 037145
    }
  }
LocReturn 036808:
  PushStack call_result;
  TraceOperation 036814 (Jz (Var Sp) (Branch T (Dloc 036850)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 036850
  } else {
    TraceOperation 036817 (Call (Floc 036976) [Var (Local 1)] Sp);
    PushFrame;
    PushReturnAddress 036817;
    SetLocal 1 GetLocal(1);
    MakeRoutineFrame 1;
    Jump: 036977
  }
LocReturn 036817:
  PushStack call_result;
  TraceOperation 036823 (Jz (Var Sp) (Branch F (Dloc 036850)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 036826 (Get_child (Var (Local 1)) Sp (Branch F (Dloc 036830)));
    Let b2 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),10)];
    Let b3 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),10),1)];
    PushStack MakeHiLo(b2,b3);
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 036830
    } else {
      Jump: 036830
    }
  } else {
    Jump: 036850
  }
LocOp 036830:
  TraceOperation 036830 (Pull (Con 2));
  PopStack popped1;
  SetLocal 2 popped1;
  TraceOperation 036833 (Jz (Var (Local 2)) (Branch T (Dloc 036850)));
  if (IsZero(GetLocal(2))) {
    Jump: 036850
  } else {
    Jump: 036836
  }
LocOp 036836:
  TraceOperation 036836 (Call (Floc 036800) [Var (Local 2)] Sp);
  PushFrame;
  PushReturnAddress 036836;
  SetLocal 1 GetLocal(2);
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 036801
LocReturn 036836:
  PushStack call_result;
  TraceOperation 036842 (Jz (Var Sp) (Branch F Dtrue));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 036845 (Get_sibling (Var (Local 2)) (Local 2) (Branch T (Dloc 036836)));
    Let b2 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),8)];
    Let b3 = M[Offset(Offset(Offset(000378,Mul(GetLocal(2),14)),8),1)];
    SetLocal 2 MakeHiLo(b2,b3);
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 036850
    } else {
      Jump: 036836
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_4;
    SetResult 1;
    JumpIndirect: (return) return_address_4
  }
LocOp 036850:
  TraceOperation 036850 (Get_prop_addr (Var (Local 1)) (Con 16) (Global 239));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),12)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),12),1)];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let loop_var4 = DeAddress(Offset(Address(MakeHiLo(b1,b2)),Add(Mul(2,Widen(b3)),1)));
  Label 5: {
    Let b6 = M[Address(loop_var4)];
    if (IsZeroByte(b6)) {
      SetByte 007684 0;
      SetByte 007685 0;
    } else {
      if (TestBit(b6,7)) {
        Let b7 = M[Offset(Address(loop_var4),1)];
        if (Equal(16,Widen(BwAnd(b6,63)))) {
          SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var4),2)));
          SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var4),2)));
        } else {
          Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),2),Widen(BwAnd(b7,63))));
          Goto: Label 5
        }
      } else {
        if (TestBit(b6,6)) {
          if (Equal(16,Widen(BwAnd(b6,63)))) {
            SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var4),1)));
            SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var4),1)));
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),2));
            Goto: Label 5
          }
        } else {
          if (Equal(16,Widen(BwAnd(b6,63)))) {
            SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var4),1)));
            SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var4),1)));
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),1));
            Goto: Label 5
          }
        }
      }
    }
  }
  TraceOperation 036854 (Store (Con 3) (Var (Global 239)));
  Let b8 = M[007684];
  Let b9 = M[007685];
  SetLocal 3 MakeHiLo(b8,b9);
  TraceOperation 036857 (Get_parent (Var (Local 1)) Sp);
  Let b10 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),6)];
  Let b11 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),6),1)];
  PushStack MakeHiLo(b10,b11);
  TraceOperation 036860 (Jz (Var Sp) (Branch T (Dloc 036972)));
  PopStack popped12;
  if (IsZero(popped12)) {
    Jump: 036972
  } else {
    TraceOperation 036864 (Jz (Var (Local 3)) (Branch T (Dloc 036972)));
    if (IsZero(GetLocal(3))) {
      Jump: 036972
    } else {
      TraceOperation 036868 (Loadw (Var (Local 3)) (Con 0) Sp);
      Let b13 = M[Offset(Address(GetLocal(3)),0)];
      Let b14 = M[Offset(Offset(Address(GetLocal(3)),0),1)];
      PushStack MakeHiLo(b13,b14);
      TraceOperation 036872 (Call (Floc 112940) [Var Sp] Sp);
      PopStack popped15;
      PushFrame;
      PushReturnAddress 036872;
      SetLocal 1 popped15;
      MakeRoutineFrame 1;
      Jump: 112941
    }
  }
LocReturn 036872:
  PushStack call_result;
  TraceOperation 036878 (Je [Var Sp,Con 3] (Branch F (Dloc 036922)));
  PopStack popped1;
  if (Equal(popped1,3)) {
    TraceOperation 036882 (Store (Con 102) (Con 0));
    SetByte 007378 0;
    SetByte 007379 0;
    TraceOperation 036885 (Store (Con 101) (Con 1));
    SetByte 007376 0;
    SetByte 007377 1;
    TraceOperation 036888 (Store (Con 4) (Var (Global 79)));
    Let b2 = M[007364];
    Let b3 = M[007365];
    SetLocal 4 MakeHiLo(b2,b3);
    TraceOperation 036891 (Store (Con 5) (Var (Global 70)));
    Let b4 = M[007346];
    Let b5 = M[007347];
    SetLocal 5 MakeHiLo(b4,b5);
    TraceOperation 036894 (Store (Con 95) (Con 5));
    SetByte 007364 0;
    SetByte 007365 5;
    TraceOperation 036897 (Store (Con 86) (Con 0));
    SetByte 007346 0;
    SetByte 007347 0;
    TraceOperation 036900 (CallN (Floc 040828) [Var (Local 1),Con 16]);
    PushFrame;
    PushReturnAddress 036900;
    SetLocal 1 GetLocal(1);
    SetLocal 2 16;
    MakeRoutineFrame 2;
    Jump: 040829
  } else {
    Jump: 036922
  }
LocReturn 036900:
  TraceOperation 036906 (Store (Con 95) (Var (Local 4)));
  SetByte 007364 HiByte(GetLocal(4));
  SetByte 007365 LoByte(GetLocal(4));
  TraceOperation 036909 (Store (Con 86) (Var (Local 5)));
  SetByte 007346 HiByte(GetLocal(5));
  SetByte 007347 LoByte(GetLocal(5));
  TraceOperation 036912 (Store (Con 101) (Con 0));
  SetByte 007376 0;
  SetByte 007377 0;
  TraceOperation 036915 (Je [Var (Global 86),Con 1] (Branch T Dtrue));
  Let b1 = M[007378];
  Let b2 = M[007379];
  if (Equal(MakeHiLo(b1,b2),1)) {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    TraceOperation 036919 (Jump 036972);
    Jump: 036972
  }
LocOp 036922:
  TraceOperation 036922 (Store (Con 2) (Con 0));
  SetLocal 2 0;
  Jump: 036925
LocOp 036925:
  TraceOperation 036925 (Get_prop_addr (Var (Local 1)) (Con 16) (Global 239));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),12)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),12),1)];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let loop_var4 = DeAddress(Offset(Address(MakeHiLo(b1,b2)),Add(Mul(2,Widen(b3)),1)));
  Label 5: {
    Let b6 = M[Address(loop_var4)];
    if (IsZeroByte(b6)) {
      SetByte 007684 0;
      SetByte 007685 0;
    } else {
      if (TestBit(b6,7)) {
        Let b7 = M[Offset(Address(loop_var4),1)];
        if (Equal(16,Widen(BwAnd(b6,63)))) {
          SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var4),2)));
          SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var4),2)));
        } else {
          Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),2),Widen(BwAnd(b7,63))));
          Goto: Label 5
        }
      } else {
        if (TestBit(b6,6)) {
          if (Equal(16,Widen(BwAnd(b6,63)))) {
            SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var4),1)));
            SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var4),1)));
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),2));
            Goto: Label 5
          }
        } else {
          if (Equal(16,Widen(BwAnd(b6,63)))) {
            SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var4),1)));
            SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var4),1)));
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),1));
            Goto: Label 5
          }
        }
      }
    }
  }
  TraceOperation 036929 (Jz (Var (Global 239)) (Branch T (Dloc 036935)));
  Let b8 = M[007684];
  Let b9 = M[007685];
  if (IsZero(MakeHiLo(b8,b9))) {
    Jump: 036935
  } else {
    TraceOperation 036932 (Get_prop_len (Var (Global 239)) (Global 239));
    Let b10 = M[007684];
    Let b11 = M[007685];
    if (IsZero(MakeHiLo(b10,b11))) {
      SetByte 007684 0;
      SetByte 007685 0;
    } else {
      Let b12 = M[Offset(Address(MakeHiLo(b10,b11)),-1)];
      if (TestBit(b12,7)) {
        Let b13 = M[Offset(Address(MakeHiLo(b10,b11)),-2)];
        if (TestBit(b13,7)) {
          Let b14 = M[Offset(Offset(Address(MakeHiLo(b10,b11)),-2),1)];
          SetByte 007684 HiByte(Widen(BwAnd(b14,63)));
          SetByte 007685 LoByte(Widen(BwAnd(b14,63)));
        } else {
          if (TestBit(b13,6)) {
            SetByte 007684 0;
            SetByte 007685 2;
          } else {
            SetByte 007684 0;
            SetByte 007685 1;
          }
        }
      } else {
        Let b15 = M[Offset(Address(MakeHiLo(b10,b11)),-1)];
        if (TestBit(b15,7)) {
          Let b16 = M[Offset(Offset(Address(MakeHiLo(b10,b11)),-1),1)];
          SetByte 007684 HiByte(Widen(BwAnd(b16,63)));
          SetByte 007685 LoByte(Widen(BwAnd(b16,63)));
        } else {
          if (TestBit(b15,6)) {
            SetByte 007684 0;
            SetByte 007685 2;
          } else {
            SetByte 007684 0;
            SetByte 007685 1;
          }
        }
      }
    }
    Jump: 036935
  }
LocOp 036935:
  TraceOperation 036935 (Push (Var (Global 239)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 036938 (Mul (Con 2) (Var (Local 2)) Sp);
  PushStack Mul(2,GetLocal(2));
  TraceOperation 036942 (Jl (Var Sp) (Var Sp) (Branch F (Dloc 036972)));
  PopStack popped3;
  PopStack popped4;
  if (LessThan(popped3,popped4)) {
    TraceOperation 036946 (Loadw (Var (Local 3)) (Var (Local 2)) Sp);
    Let b5 = M[Offset(Address(GetLocal(3)),Mul(2,GetLocal(2)))];
    Let b6 = M[Offset(Offset(Address(GetLocal(3)),Mul(2,GetLocal(2))),1)];
    PushStack MakeHiLo(b5,b6);
    TraceOperation 036950 (Jz (Var Sp) (Branch T (Dloc 036967)));
    PopStack popped7;
    if (IsZero(popped7)) {
      Jump: 036967
    } else {
      TraceOperation 036953 (Loadw (Var (Local 3)) (Var (Local 2)) Sp);
      Let b8 = M[Offset(Address(GetLocal(3)),Mul(2,GetLocal(2)))];
      Let b9 = M[Offset(Offset(Address(GetLocal(3)),Mul(2,GetLocal(2))),1)];
      PushStack MakeHiLo(b8,b9);
      TraceOperation 036957 (Call (Floc 036800) [Var Sp] Sp);
      PopStack popped10;
      PushFrame;
      PushReturnAddress 036957;
      SetLocal 1 popped10;
      MakeRoutineFrame 5;
      SetLocal 5 0;
      SetLocal 4 0;
      SetLocal 3 0;
      SetLocal 2 0;
      Jump: 036801
    }
  } else {
    Jump: 036972
  }
LocReturn 036957:
  PushStack call_result;
  TraceOperation 036963 (Je [Var Sp,Con 1] (Branch T Dtrue));
  PopStack popped1;
  if (Equal(popped1,1)) {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  } else {
    Jump: 036967
  }
LocOp 036967:
  TraceOperation 036967 (Inc (Con 2));
  SetLocal 2 Add(GetLocal(2),1);
  TraceOperation 036969 (Jump 036925);
  Jump: 036925
LocOp 036972:
  TraceOperation 036972 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 036976:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 036977
LocOp 036977:
  TraceOperation 036977 (Je [Var (Local 1),Var (Global 31)] (Branch T Dfalse));
  Let b1 = M[007268];
  Let b2 = M[007269];
  if (Equal(GetLocal(1),MakeHiLo(b1,b2))) {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  } else {
    TraceOperation 036981 (Test_attr (Var (Local 1)) (Con 20) (Branch T Dfalse));
    Let b4 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),2)];
    if (TestBit(b4,3)) {
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 0;
      JumpIndirect: (return) return_address_5
    } else {
      TraceOperation 036985 (Test_attr (Var (Local 1)) (Con 17) (Branch T Dfalse));
      Let b6 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),2)];
      if (TestBit(b6,6)) {
        PopFrame;
        PopReturnAddress return_address_7;
        SetResult 0;
        JumpIndirect: (return) return_address_7
      } else {
        TraceOperation 036989 (Test_attr (Var (Local 1)) (Con 1) (Branch T Dfalse));
        Let b8 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),0)];
        if (TestBit(b8,6)) {
          PopFrame;
          PopReturnAddress return_address_9;
          SetResult 0;
          JumpIndirect: (return) return_address_9
        } else {
          TraceOperation 036993 (Test_attr (Var (Local 1)) (Con 4) (Branch F (Dloc 037011)));
          Let b10 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),0)];
          if (TestBit(b10,3)) {
            TraceOperation 036997 (Test_attr (Var (Local 1)) (Con 13) (Branch F (Dloc 037007)));
            Let b11 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),1)];
            if (TestBit(b11,2)) {
              TraceOperation 037001 (Push (Con 0));
              PushStack 0;
              TraceOperation 037004 (Jump 037010);
              Jump: 037010
            } else {
              Jump: 037007
            }
          } else {
            Jump: 037011
          }
        }
      }
    }
  }
LocOp 037007:
  TraceOperation 037007 (Push (Con 1));
  PushStack 1;
  Jump: 037010
LocOp 037010:
  TraceOperation 037010 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 037011:
  TraceOperation 037011 (Test_attr (Var (Local 1)) (Con 7) (Branch F (Dloc 037021)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),0)];
  if (TestBit(b1,0)) {
    TraceOperation 037015 (Push (Con 0));
    PushStack 0;
    TraceOperation 037018 (Jump 037024);
    Jump: 037024
  } else {
    Jump: 037021
  }
LocOp 037021:
  TraceOperation 037021 (Push (Con 1));
  PushStack 1;
  Jump: 037024
LocOp 037024:
  TraceOperation 037024 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 037028:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 037029
LocOp 037029:
  TraceOperation 037029 (Store (Con 1) (Var (Global 132)));
  Let b1 = M[007470];
  Let b2 = M[007471];
  SetLocal 1 MakeHiLo(b1,b2);
  TraceOperation 037032 (Get_parent (Var (Global 31)) Sp);
  Let b3 = M[007268];
  Let b4 = M[007269];
  Let b5 = M[Offset(Offset(000378,Mul(MakeHiLo(b3,b4),14)),6)];
  Let b6 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b3,b4),14)),6),1)];
  PushStack MakeHiLo(b5,b6);
  TraceOperation 037035 (Call (Floc 036716) [Var Sp] (Global 132));
  PopStack popped7;
  PushFrame;
  PushReturnAddress 037035;
  SetLocal 1 popped7;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 036717
LocReturn 037035:
  SetByte 007470 HiByte(call_result);
  SetByte 007471 LoByte(call_result);
  TraceOperation 037041 (Jz (Var (Local 1)) (Branch F (Dloc 037051)));
  if (IsZero(GetLocal(1))) {
    TraceOperation 037044 (Jz (Var (Global 132)) (Branch F (Dloc 037051)));
    Let b1 = M[007470];
    Let b2 = M[007471];
    if (IsZero(MakeHiLo(b1,b2))) {
      TraceOperation 037047 (Store (Con 17) (Con 8));
      SetByte 007208 0;
      SetByte 007209 8;
      TraceOperation 037050 Rfalse;
      PopFrame;
      PopReturnAddress return_address_3;
      SetResult 0;
      JumpIndirect: (return) return_address_3
    } else {
      Jump: 037051
    }
  } else {
    Jump: 037051
  }
LocOp 037051:
  TraceOperation 037051 (Jz (Var (Local 1)) (Branch F (Dloc 037067)));
  if (IsZero(GetLocal(1))) {
    TraceOperation 037054 (Je [Var (Global 132),Con 1] (Branch F (Dloc 037067)));
    Let b1 = M[007470];
    Let b2 = M[007471];
    if (Equal(MakeHiLo(b1,b2),1)) {
      TraceOperation 037058 (Store (Con 17) (Var (Global 32)));
      Let b3 = M[007270];
      Let b4 = M[007271];
      SetByte 007208 b3;
      SetByte 007209 b4;
      TraceOperation 037061 (CallN (Floc 078824) [Con 11]);
      PushFrame;
      PushReturnAddress 037061;
      SetLocal 1 11;
      MakeRoutineFrame 3;
      SetLocal 3 0;
      SetLocal 2 0;
      Jump: 078825
    } else {
      Jump: 037067
    }
  } else {
    Jump: 037067
  }
LocReturn 037061:
  TraceOperation 037066 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
LocOp 037067:
  TraceOperation 037067 (Je [Var (Local 1),Con 1] (Branch F (Dloc 037107)));
  if (Equal(GetLocal(1),1)) {
    TraceOperation 037071 (Jz (Var (Global 132)) (Branch F (Dloc 037107)));
    Let b1 = M[007470];
    Let b2 = M[007471];
    if (IsZero(MakeHiLo(b1,b2))) {
      TraceOperation 037074 (Store (Con 17) (Con 8));
      SetByte 007208 0;
      SetByte 007209 8;
      TraceOperation 037077 (CallN (Floc 080316) []);
      PushFrame;
      PushReturnAddress 037077;
      MakeRoutineFrame 0;
      Jump: 080317
    } else {
      Jump: 037107
    }
  } else {
    Jump: 037107
  }
LocReturn 037077:
  TraceOperation 037080 (CallN (Floc 078848) [Con 10]);
  PushFrame;
  PushReturnAddress 037080;
  SetLocal 1 10;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 078849
LocReturn 037080:
  TraceOperation 037085 (Call (Floc 078928) [Con 10] Sp);
  PushFrame;
  PushReturnAddress 037085;
  SetLocal 1 10;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 078929
LocReturn 037085:
  PushStack call_result;
  TraceOperation 037091 (Jz (Var Sp) (Branch F (Dloc 037101)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 037094 (CallN (Floc 036596) [Con 4097,Con 9]);
    PushFrame;
    PushReturnAddress 037094;
    SetLocal 1 4097;
    SetLocal 2 9;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 036597
  } else {
    Jump: 037101
  }
LocReturn 037094:
  Jump: 037101
LocOp 037101:
  TraceOperation 037101 (CallN (Floc 078972) [Con 10]);
  PushFrame;
  PushReturnAddress 037101;
  SetLocal 1 10;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 078973
LocReturn 037101:
  TraceOperation 037106 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
LocOp 037107:
  TraceOperation 037107 (Je [Var (Local 1),Con 1] (Branch F (Dloc 037119)));
  if (Equal(GetLocal(1),1)) {
    TraceOperation 037111 (Je [Var (Global 132),Con 1] (Branch F (Dloc 037119)));
    Let b1 = M[007470];
    Let b2 = M[007471];
    if (Equal(MakeHiLo(b1,b2),1)) {
      TraceOperation 037115 (Store (Con 17) (Var (Global 32)));
      Let b3 = M[007270];
      Let b4 = M[007271];
      SetByte 007208 b3;
      SetByte 007209 b4;
      TraceOperation 037118 Rfalse;
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 0;
      JumpIndirect: (return) return_address_5
    } else {
      Jump: 037119
    }
  } else {
    Jump: 037119
  }
LocOp 037119:
  TraceOperation 037119 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 037120:
  MakeRoutineFrame 0;
  Jump: 037121
LocOp 037121:
  TraceOperation 037121 (Get_parent (Var (Global 31)) Sp);
  Let b1 = M[007268];
  Let b2 = M[007269];
  Let b3 = M[Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),6)];
  Let b4 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),6),1)];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 037124 (Call (Floc 036716) [Var Sp] (Global 132));
  PopStack popped5;
  PushFrame;
  PushReturnAddress 037124;
  SetLocal 1 popped5;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 036717
LocReturn 037124:
  SetByte 007470 HiByte(call_result);
  SetByte 007471 LoByte(call_result);
  TraceOperation 037130 (Jz (Var (Global 132)) (Branch T (Dloc 037139)));
  Let b1 = M[007470];
  Let b2 = M[007471];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 037139
  } else {
    TraceOperation 037133 (Store (Con 17) (Var (Global 32)));
    Let b3 = M[007270];
    Let b4 = M[007271];
    SetByte 007208 b3;
    SetByte 007209 b4;
    TraceOperation 037136 (Jump 037142);
    Jump: 037142
  }
LocOp 037139:
  TraceOperation 037139 (Store (Con 17) (Con 8));
  SetByte 007208 0;
  SetByte 007209 8;
  Jump: 037142
LocOp 037142:
  TraceOperation 037142 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 037144:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 037145
LocOp 037145:
  TraceOperation 037145 (Test_attr (Var (Local 1)) (Con 17) (Branch T Dtrue));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),2)];
  if (TestBit(b1,6)) {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  } else {
    TraceOperation 037149 (Test_attr (Var (Local 1)) (Con 20) (Branch T Dtrue));
    Let b3 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),2)];
    if (TestBit(b3,3)) {
      PopFrame;
      PopReturnAddress return_address_4;
      SetResult 1;
      JumpIndirect: (return) return_address_4
    } else {
      TraceOperation 037153 (Test_attr (Var (Local 1)) (Con 1) (Branch T Dtrue));
      Let b5 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),0)];
      if (TestBit(b5,6)) {
        PopFrame;
        PopReturnAddress return_address_6;
        SetResult 1;
        JumpIndirect: (return) return_address_6
      } else {
        TraceOperation 037157 (Test_attr (Var (Local 1)) (Con 4) (Branch F (Dloc 037165)));
        Let b7 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),0)];
        if (TestBit(b7,3)) {
          TraceOperation 037161 (Test_attr (Var (Local 1)) (Con 13) (Branch T Dtrue));
          Let b8 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),1)];
          if (TestBit(b8,2)) {
            PopFrame;
            PopReturnAddress return_address_9;
            SetResult 1;
            JumpIndirect: (return) return_address_9
          } else {
            Jump: 037165
          }
        } else {
          Jump: 037165
        }
      }
    }
  }
LocOp 037165:
  TraceOperation 037165 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 037168:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 037169
LocOp 037169:
  TraceOperation 037169 (Jz (Var (Local 1)) (Branch T (Dloc 037185)));
  if (IsZero(GetLocal(1))) {
    Jump: 037185
  } else {
    TraceOperation 037172 (Test_attr (Var (Local 1)) (Con 4) (Branch F (Dloc 037185)));
    Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),0)];
    if (TestBit(b1,3)) {
      TraceOperation 037176 (Test_attr (Var (Local 1)) (Con 13) (Branch T (Dloc 037185)));
      Let b2 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),1)];
      if (TestBit(b2,2)) {
        Jump: 037185
      } else {
        TraceOperation 037180 (Test_attr (Var (Local 1)) (Con 20) (Branch T (Dloc 037185)));
        Let b3 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),2)];
        if (TestBit(b3,3)) {
          Jump: 037185
        } else {
          TraceOperation 037184 Rfalse;
          PopFrame;
          PopReturnAddress return_address_4;
          SetResult 0;
          JumpIndirect: (return) return_address_4
        }
      }
    } else {
      Jump: 037185
    }
  }
LocOp 037185:
  TraceOperation 037185 (Jz (Var (Local 1)) (Branch T (Dloc 037194)));
  if (IsZero(GetLocal(1))) {
    Jump: 037194
  } else {
    TraceOperation 037188 (Call (Floc 102468) [Var (Local 1)] (Local 1));
    PushFrame;
    PushReturnAddress 037188;
    SetLocal 1 GetLocal(1);
    MakeRoutineFrame 1;
    Jump: 102469
  }
LocReturn 037188:
  SetLocal 1 call_result;
  Jump: 037194
LocOp 037194:
  TraceOperation 037194 (Ret (Var (Local 1)));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult GetLocal(1);
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 037196:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 037197
LocOp 037197:
  TraceOperation 037197 (Je [Var (Global 1),Con 8] (Branch F (Dloc 037210)));
  Let b1 = M[007208];
  Let b2 = M[007209];
  if (Equal(MakeHiLo(b1,b2),8)) {
    TraceOperation 037201 (Store (Con 49) (Con 8));
    SetByte 007272 0;
    SetByte 007273 8;
    TraceOperation 037204 (Store (Con 50) (Con 0));
    SetByte 007274 0;
    SetByte 007275 0;
    TraceOperation 037207 (Jump 037239);
    Jump: 037239
  } else {
    Jump: 037210
  }
LocOp 037210:
  TraceOperation 037210 (Store (Con 49) (Var (Global 31)));
  Let b1 = M[007268];
  Let b2 = M[007269];
  SetByte 007272 b1;
  SetByte 007273 b2;
  Jump: 037213
LocOp 037213:
  TraceOperation 037213 (Jz (Con 1) (Branch T (Dloc 037236)));
  TraceOperation 037216 (Call (Floc 037168) [Var (Global 33)] (Local 2));
  Let b1 = M[007272];
  Let b2 = M[007273];
  PushFrame;
  PushReturnAddress 037216;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 1;
  Jump: 037169
LocReturn 037216:
  SetLocal 2 call_result;
  TraceOperation 037222 (Jz (Var (Local 2)) (Branch F (Dloc 037228)));
  if (IsZero(GetLocal(2))) {
    TraceOperation 037225 (Jump 037236);
    Jump: 037236
  } else {
    Jump: 037228
  }
LocOp 037228:
  TraceOperation 037228 (Store (Con 49) (Var (Local 2)));
  SetByte 007272 HiByte(GetLocal(2));
  SetByte 007273 LoByte(GetLocal(2));
  TraceOperation 037231 (Inc (Con 1));
  SetLocal 1 Add(GetLocal(1),1);
  TraceOperation 037233 (Jump 037213);
  Jump: 037213
LocOp 037236:
  TraceOperation 037236 (Store (Con 50) (Var (Local 1)));
  SetByte 007274 HiByte(GetLocal(1));
  SetByte 007275 LoByte(GetLocal(1));
  Jump: 037239
LocOp 037239:
  TraceOperation 037239 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 037240:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 037241
LocOp 037241:
  TraceOperation 037241 (Je [Var (Local 1),Var (Global 31)] (Branch F (Dloc 037251)));
  Let b1 = M[007268];
  Let b2 = M[007269];
  if (Equal(GetLocal(1),MakeHiLo(b1,b2))) {
    TraceOperation 037245 (Je [Var (Global 1),Con 8] (Branch F (Dloc 037251)));
    Let b3 = M[007208];
    Let b4 = M[007209];
    if (Equal(MakeHiLo(b3,b4),8)) {
      TraceOperation 037249 (Ret (Con 8));
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 8;
      JumpIndirect: (return) return_address_5
    } else {
      Jump: 037251
    }
  } else {
    Jump: 037251
  }
LocOp 037251:
  TraceOperation 037251 (Get_parent (Var (Local 1)) (Local 2));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),6)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),6),1)];
  SetLocal 2 MakeHiLo(b1,b2);
  TraceOperation 037254 (Jz (Var (Local 2)) (Branch F (Dloc 037259)));
  if (IsZero(GetLocal(2))) {
    TraceOperation 037257 (Ret (Var (Local 1)));
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult GetLocal(1);
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 037259
  }
LocOp 037259:
  TraceOperation 037259 (Call (Floc 037168) [Var (Local 2)] Sp);
  PushFrame;
  PushReturnAddress 037259;
  SetLocal 1 GetLocal(2);
  MakeRoutineFrame 1;
  Jump: 037169
LocReturn 037259:
  PushStack call_result;
  TraceOperation 037265 (Jz (Var Sp) (Branch T (Dloc 037277)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 037277
  } else {
    TraceOperation 037268 (Call (Floc 037168) [Var (Local 2)] (Local 2));
    PushFrame;
    PushReturnAddress 037268;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 1;
    Jump: 037169
  }
LocReturn 037268:
  SetLocal 2 call_result;
  TraceOperation 037274 (Jump 037259);
  Jump: 037259
LocOp 037277:
  TraceOperation 037277 (Ret (Var (Local 2)));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult GetLocal(2);
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 037280:
  MakeRoutineFrame 6;
  if (LessThanByte(num_actuals,6)) {
    SetLocal 6 0;
    if (LessThanByte(num_actuals,5)) {
      SetLocal 5 0;
      if (LessThanByte(num_actuals,4)) {
        SetLocal 4 0;
        if (LessThanByte(num_actuals,3)) {
          SetLocal 3 0;
          if (LessThanByte(num_actuals,2)) {
            SetLocal 2 0;
            if (LessThanByte(num_actuals,1)) {
              SetLocal 1 0;
            }
          }
        }
      }
    }
  }
  Jump: 037281
LocOp 037281:
  TraceOperation 037281 (Je [Var (Local 4),Var (Global 31)] (Branch T (Dloc 037313)));
  Let b1 = M[007268];
  Let b2 = M[007269];
  if (Equal(GetLocal(4),MakeHiLo(b1,b2))) {
    Jump: 037313
  } else {
    TraceOperation 037285 (Call (Floc 026172) [Var (Local 1),Con 16] Sp);
    PushFrame;
    PushReturnAddress 037285;
    SetLocal 1 GetLocal(1);
    SetLocal 2 16;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  }
LocReturn 037285:
  PushStack call_result;
  TraceOperation 037293 (Jz (Var Sp) (Branch F (Dloc 037307)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 037296 (Call (Floc 026172) [Var (Local 1),Con 19] Sp);
    PushFrame;
    PushReturnAddress 037296;
    SetLocal 1 GetLocal(1);
    SetLocal 2 19;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 037307
  }
LocReturn 037296:
  PushStack call_result;
  TraceOperation 037304 (Jz (Var Sp) (Branch T (Dloc 037313)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 037313
  } else {
    Jump: 037307
  }
LocOp 037307:
  TraceOperation 037307 (Store (Con 6) (Con 0));
  SetLocal 6 0;
  TraceOperation 037310 (Jump 037374);
  Jump: 037374
LocOp 037313:
  TraceOperation 037313 (Store (Con 68) (Var (Local 1)));
  SetByte 007310 HiByte(GetLocal(1));
  SetByte 007311 LoByte(GetLocal(1));
  TraceOperation 037316 (Store (Con 69) (Var (Local 2)));
  SetByte 007312 HiByte(GetLocal(2));
  SetByte 007313 LoByte(GetLocal(2));
  TraceOperation 037319 (Store (Con 70) (Var (Local 4)));
  SetByte 007314 HiByte(GetLocal(4));
  SetByte 007315 LoByte(GetLocal(4));
  TraceOperation 037322 (Je [Var (Local 4),Var (Global 37)] (Branch F (Dloc 037329)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  if (Equal(GetLocal(4),MakeHiLo(b1,b2))) {
    TraceOperation 037326 (Store (Con 70) (Con 0));
    SetByte 007314 0;
    SetByte 007315 0;
    Jump: 037329
  } else {
    Jump: 037329
  }
LocOp 037329:
  TraceOperation 037329 (Store (Con 5) (Var (Global 4)));
  Let b1 = M[007214];
  Let b2 = M[007215];
  SetLocal 5 MakeHiLo(b1,b2);
  TraceOperation 037332 (Store (Con 20) (Con 0));
  SetByte 007214 0;
  SetByte 007215 0;
  TraceOperation 037335 (Call (Floc 088936) [Con 12,Con 0,Con 1] Sp);
  PushFrame;
  PushReturnAddress 037335;
  SetLocal 1 12;
  SetLocal 2 0;
  SetLocal 3 1;
  MakeRoutineFrame 14;
  SetLocal 14 0;
  SetLocal 13 0;
  SetLocal 12 0;
  SetLocal 11 0;
  SetLocal 10 0;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 088937
LocReturn 037335:
  PushStack call_result;
  TraceOperation 037343 (Jz (Var Sp) (Branch T (Dloc 037365)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 037365
  } else {
    TraceOperation 037346 (Call (Floc 089832) [] Sp);
    PushFrame;
    PushReturnAddress 037346;
    MakeRoutineFrame 0;
    Jump: 089833
  }
LocReturn 037346:
  PushStack call_result;
  TraceOperation 037350 (Jz (Var Sp) (Branch T (Dloc 037359)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 037359
  } else {
    TraceOperation 037353 (Store (Con 6) (Con 0));
    SetLocal 6 0;
    TraceOperation 037356 (Jump 037362);
    Jump: 037362
  }
LocOp 037359:
  TraceOperation 037359 (Store (Con 6) (Con 1));
  SetLocal 6 1;
  Jump: 037362
LocOp 037362:
  TraceOperation 037362 (Jump 037368);
  Jump: 037368
LocOp 037365:
  TraceOperation 037365 (Store (Con 6) (Con 0));
  SetLocal 6 0;
  Jump: 037368
LocOp 037368:
  TraceOperation 037368 (Jz (Var (Global 4)) (Branch F (Dloc 037374)));
  Let b1 = M[007214];
  Let b2 = M[007215];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 037371 (Store (Con 20) (Var (Local 5)));
    SetByte 007214 HiByte(GetLocal(5));
    SetByte 007215 LoByte(GetLocal(5));
    Jump: 037374
  } else {
    Jump: 037374
  }
LocOp 037374:
  TraceOperation 037374 (Store (Con 69) (Con 0));
  SetByte 007312 0;
  SetByte 007313 0;
  TraceOperation 037377 (Ret (Var (Local 6)));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult GetLocal(6);
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 037380:
  MakeRoutineFrame 5;
  if (LessThanByte(num_actuals,5)) {
    SetLocal 5 0;
    if (LessThanByte(num_actuals,4)) {
      SetLocal 4 0;
      if (LessThanByte(num_actuals,3)) {
        SetLocal 3 0;
        if (LessThanByte(num_actuals,2)) {
          SetLocal 2 0;
          if (LessThanByte(num_actuals,1)) {
            SetLocal 1 0;
          }
        }
      }
    }
  }
  Jump: 037381
LocOp 037381:
  TraceOperation 037381 (Store (Con 5) (Var (Global 54)));
  Let b1 = M[007314];
  Let b2 = M[007315];
  SetLocal 5 MakeHiLo(b1,b2);
  TraceOperation 037384 (Jz (Var (Local 5)) (Branch F (Dloc 037390)));
  if (IsZero(GetLocal(5))) {
    TraceOperation 037387 (Store (Con 5) (Var (Global 37)));
    Let b3 = M[007280];
    Let b4 = M[007281];
    SetLocal 5 MakeHiLo(b3,b4);
    Jump: 037390
  } else {
    Jump: 037390
  }
LocOp 037390:
  TraceOperation 037390 (Call (Floc 102620) [Var (Local 5),Var (Global 52)] (Local 1));
  Let b1 = M[007310];
  Let b2 = M[007311];
  PushFrame;
  PushReturnAddress 037390;
  SetLocal 1 GetLocal(5);
  SetLocal 2 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 102621
LocReturn 037390:
  SetLocal 1 call_result;
  TraceOperation 037397 (Jz (Var (Local 1)) (Branch F (Dloc 037458)));
  if (IsZero(GetLocal(1))) {
    TraceOperation 037401 (Call (Floc 102544) [Var (Global 52)] Sp);
    Let b1 = M[007310];
    Let b2 = M[007311];
    PushFrame;
    PushReturnAddress 037401;
    SetLocal 1 MakeHiLo(b1,b2);
    MakeRoutineFrame 1;
    Jump: 102545
  } else {
    Jump: 037458
  }
LocReturn 037401:
  PushStack call_result;
  TraceOperation 037407 (Jz (Var Sp) (Branch F (Dloc 037458)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 037410 (Call (Floc 026172) [Var (Global 52),Con 16] Sp);
    Let b2 = M[007310];
    Let b3 = M[007311];
    PushFrame;
    PushReturnAddress 037410;
    SetLocal 1 MakeHiLo(b2,b3);
    SetLocal 2 16;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 037458
  }
LocReturn 037410:
  PushStack call_result;
  TraceOperation 037418 (Jz (Var Sp) (Branch F (Dloc 037438)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 037421 (Call (Floc 026172) [Var (Global 52),Con 19] Sp);
    Let b2 = M[007310];
    Let b3 = M[007311];
    PushFrame;
    PushReturnAddress 037421;
    SetLocal 1 MakeHiLo(b2,b3);
    SetLocal 2 19;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 037438
  }
LocReturn 037421:
  PushStack call_result;
  TraceOperation 037429 (Jz (Var Sp) (Branch F (Dloc 037438)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 037432 (Push (Con 0));
    PushStack 0;
    TraceOperation 037435 (Jump 037441);
    Jump: 037441
  } else {
    Jump: 037438
  }
LocOp 037438:
  TraceOperation 037438 (Push (Con 1));
  PushStack 1;
  Jump: 037441
LocOp 037441:
  TraceOperation 037441 (Jz (Var Sp) (Branch F (Dloc 037458)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 037444 (Jz (Var (Global 54)) (Branch F (Dloc 037454)));
    Let b2 = M[007314];
    Let b3 = M[007315];
    if (IsZero(MakeHiLo(b2,b3))) {
      TraceOperation 037447 (CallN (Floc 041040) [Con 64,Con 8,Var (Global 52)]);
      Let b4 = M[007310];
      Let b5 = M[007311];
      PushFrame;
      PushReturnAddress 037447;
      SetLocal 1 64;
      SetLocal 2 8;
      SetLocal 3 MakeHiLo(b4,b5);
      MakeRoutineFrame 4;
      SetLocal 4 0;
      Jump: 041041
    } else {
      Jump: 037454
    }
  } else {
    Jump: 037458
  }
LocReturn 037447:
  Jump: 037454
LocOp 037454:
  TraceOperation 037454 (CallN (Floc 089760) []);
  PushFrame;
  PushReturnAddress 037454;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  SetLocal 1 0;
  Jump: 089761
LocReturn 037454:
  TraceOperation 037457 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 037458:
  TraceOperation 037458 (Call (Floc 102432) [Var (Local 5)] Sp);
  PushFrame;
  PushReturnAddress 037458;
  SetLocal 1 GetLocal(5);
  MakeRoutineFrame 1;
  Jump: 102433
LocReturn 037458:
  PushStack call_result;
  TraceOperation 037464 (Je [Var Sp,Var (Local 1)] (Branch T (Dloc 037555)));
  PopStack popped1;
  if (Equal(popped1,GetLocal(1))) {
    Jump: 037555
  } else {
    TraceOperation 037469 (Call (Floc 102432) [Var (Local 5)] Sp);
    PushFrame;
    PushReturnAddress 037469;
    SetLocal 1 GetLocal(5);
    MakeRoutineFrame 1;
    Jump: 102433
  }
LocReturn 037469:
  PushStack call_result;
  TraceOperation 037475 (Get_parent (Var Sp) (Local 2));
  PopStack popped1;
  Let b2 = M[Offset(Offset(000378,Mul(popped1,14)),6)];
  Let b3 = M[Offset(Offset(Offset(000378,Mul(popped1,14)),6),1)];
  SetLocal 2 MakeHiLo(b2,b3);
  TraceOperation 037478 (Call (Floc 102432) [Var (Local 2)] (Local 3));
  PushFrame;
  PushReturnAddress 037478;
  SetLocal 1 GetLocal(2);
  MakeRoutineFrame 1;
  Jump: 102433
LocReturn 037478:
  SetLocal 3 call_result;
  TraceOperation 037484 (Store (Con 4) (Con 0));
  SetLocal 4 0;
  TraceOperation 037487 (Je [Var (Local 3),Var (Local 2)] (Branch T (Dloc 037497)));
  if (Equal(GetLocal(3),GetLocal(2))) {
    Jump: 037497
  } else {
    TraceOperation 037491 (Store (Con 2) (Var (Local 3)));
    SetLocal 2 GetLocal(3);
    TraceOperation 037494 (Store (Con 4) (Con 1));
    SetLocal 4 1;
    Jump: 037497
  }
LocOp 037497:
  TraceOperation 037497 (Je [Var (Local 2),Var (Local 1)] (Branch T (Dloc 037555)));
  if (Equal(GetLocal(2),GetLocal(1))) {
    Jump: 037555
  } else {
    TraceOperation 037501 (Jz (Var (Local 2)) (Branch T (Dloc 037555)));
    if (IsZero(GetLocal(2))) {
      Jump: 037555
    } else {
      TraceOperation 037504 (Jz (Var (Local 4)) (Branch F (Dloc 037524)));
      if (IsZero(GetLocal(4))) {
        TraceOperation 037507 (Call (Floc 088936) [Con 14,Var (Local 2)] Sp);
        PushFrame;
        PushReturnAddress 037507;
        SetLocal 1 14;
        SetLocal 2 GetLocal(2);
        MakeRoutineFrame 14;
        SetLocal 14 0;
        SetLocal 13 0;
        SetLocal 12 0;
        SetLocal 11 0;
        SetLocal 10 0;
        SetLocal 9 0;
        SetLocal 8 0;
        SetLocal 7 0;
        SetLocal 6 0;
        SetLocal 5 0;
        SetLocal 4 0;
        SetLocal 3 0;
        Jump: 088937
      } else {
        Jump: 037524
      }
    }
  }
LocReturn 037507:
  PushStack call_result;
  TraceOperation 037514 (Jz (Var Sp) (Branch T (Dloc 037524)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 037524
  } else {
    TraceOperation 037517 (Call (Floc 089820) [] Sp);
    PushFrame;
    PushReturnAddress 037517;
    MakeRoutineFrame 0;
    Jump: 089821
  }
LocReturn 037517:
  PushStack call_result;
  TraceOperation 037521 (Jz (Var Sp) (Branch F Dtrue));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 037524
  } else {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  }
LocOp 037524:
  TraceOperation 037524 (Call (Floc 102432) [Var (Local 2)] Sp);
  PushFrame;
  PushReturnAddress 037524;
  SetLocal 1 GetLocal(2);
  MakeRoutineFrame 1;
  Jump: 102433
LocReturn 037524:
  PushStack call_result;
  TraceOperation 037530 (Get_parent (Var Sp) (Local 2));
  PopStack popped1;
  Let b2 = M[Offset(Offset(000378,Mul(popped1,14)),6)];
  Let b3 = M[Offset(Offset(Offset(000378,Mul(popped1,14)),6),1)];
  SetLocal 2 MakeHiLo(b2,b3);
  TraceOperation 037533 (Call (Floc 102432) [Var (Local 2)] (Local 3));
  PushFrame;
  PushReturnAddress 037533;
  SetLocal 1 GetLocal(2);
  MakeRoutineFrame 1;
  Jump: 102433
LocReturn 037533:
  SetLocal 3 call_result;
  TraceOperation 037539 (Store (Con 4) (Con 0));
  SetLocal 4 0;
  TraceOperation 037542 (Je [Var (Local 3),Var (Local 2)] (Branch T (Dloc 037552)));
  if (Equal(GetLocal(3),GetLocal(2))) {
    Jump: 037552
  } else {
    TraceOperation 037546 (Store (Con 2) (Var (Local 3)));
    SetLocal 2 GetLocal(3);
    TraceOperation 037549 (Store (Con 4) (Con 1));
    SetLocal 4 1;
    Jump: 037552
  }
LocOp 037552:
  TraceOperation 037552 (Jump 037497);
  Jump: 037497
LocOp 037555:
  TraceOperation 037555 (Call (Floc 102432) [Var (Global 52)] Sp);
  Let b1 = M[007310];
  Let b2 = M[007311];
  PushFrame;
  PushReturnAddress 037555;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 1;
  Jump: 102433
LocReturn 037555:
  PushStack call_result;
  TraceOperation 037561 (Je [Var Sp,Var (Local 1)] (Branch T (Dloc 037652)));
  PopStack popped1;
  if (Equal(popped1,GetLocal(1))) {
    Jump: 037652
  } else {
    TraceOperation 037566 (Call (Floc 102432) [Var (Global 52)] Sp);
    Let b2 = M[007310];
    Let b3 = M[007311];
    PushFrame;
    PushReturnAddress 037566;
    SetLocal 1 MakeHiLo(b2,b3);
    MakeRoutineFrame 1;
    Jump: 102433
  }
LocReturn 037566:
  PushStack call_result;
  TraceOperation 037572 (Get_parent (Var Sp) (Local 2));
  PopStack popped1;
  Let b2 = M[Offset(Offset(000378,Mul(popped1,14)),6)];
  Let b3 = M[Offset(Offset(Offset(000378,Mul(popped1,14)),6),1)];
  SetLocal 2 MakeHiLo(b2,b3);
  TraceOperation 037575 (Call (Floc 102432) [Var (Local 2)] (Local 3));
  PushFrame;
  PushReturnAddress 037575;
  SetLocal 1 GetLocal(2);
  MakeRoutineFrame 1;
  Jump: 102433
LocReturn 037575:
  SetLocal 3 call_result;
  TraceOperation 037581 (Store (Con 4) (Con 0));
  SetLocal 4 0;
  TraceOperation 037584 (Je [Var (Local 3),Var (Local 2)] (Branch T (Dloc 037594)));
  if (Equal(GetLocal(3),GetLocal(2))) {
    Jump: 037594
  } else {
    TraceOperation 037588 (Store (Con 2) (Var (Local 3)));
    SetLocal 2 GetLocal(3);
    TraceOperation 037591 (Store (Con 4) (Con 1));
    SetLocal 4 1;
    Jump: 037594
  }
LocOp 037594:
  TraceOperation 037594 (Je [Var (Local 2),Var (Local 1)] (Branch T (Dloc 037652)));
  if (Equal(GetLocal(2),GetLocal(1))) {
    Jump: 037652
  } else {
    TraceOperation 037598 (Jz (Var (Local 2)) (Branch T (Dloc 037652)));
    if (IsZero(GetLocal(2))) {
      Jump: 037652
    } else {
      TraceOperation 037601 (Jz (Var (Local 4)) (Branch F (Dloc 037621)));
      if (IsZero(GetLocal(4))) {
        TraceOperation 037604 (Call (Floc 088936) [Con 13,Var (Local 2)] Sp);
        PushFrame;
        PushReturnAddress 037604;
        SetLocal 1 13;
        SetLocal 2 GetLocal(2);
        MakeRoutineFrame 14;
        SetLocal 14 0;
        SetLocal 13 0;
        SetLocal 12 0;
        SetLocal 11 0;
        SetLocal 10 0;
        SetLocal 9 0;
        SetLocal 8 0;
        SetLocal 7 0;
        SetLocal 6 0;
        SetLocal 5 0;
        SetLocal 4 0;
        SetLocal 3 0;
        Jump: 088937
      } else {
        Jump: 037621
      }
    }
  }
LocReturn 037604:
  PushStack call_result;
  TraceOperation 037611 (Jz (Var Sp) (Branch T (Dloc 037621)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 037621
  } else {
    TraceOperation 037614 (Call (Floc 089820) [] Sp);
    PushFrame;
    PushReturnAddress 037614;
    MakeRoutineFrame 0;
    Jump: 089821
  }
LocReturn 037614:
  PushStack call_result;
  TraceOperation 037618 (Jz (Var Sp) (Branch F Dtrue));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 037621
  } else {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  }
LocOp 037621:
  TraceOperation 037621 (Call (Floc 102432) [Var (Local 2)] Sp);
  PushFrame;
  PushReturnAddress 037621;
  SetLocal 1 GetLocal(2);
  MakeRoutineFrame 1;
  Jump: 102433
LocReturn 037621:
  PushStack call_result;
  TraceOperation 037627 (Get_parent (Var Sp) (Local 2));
  PopStack popped1;
  Let b2 = M[Offset(Offset(000378,Mul(popped1,14)),6)];
  Let b3 = M[Offset(Offset(Offset(000378,Mul(popped1,14)),6),1)];
  SetLocal 2 MakeHiLo(b2,b3);
  TraceOperation 037630 (Call (Floc 102432) [Var (Local 2)] (Local 3));
  PushFrame;
  PushReturnAddress 037630;
  SetLocal 1 GetLocal(2);
  MakeRoutineFrame 1;
  Jump: 102433
LocReturn 037630:
  SetLocal 3 call_result;
  TraceOperation 037636 (Store (Con 4) (Con 0));
  SetLocal 4 0;
  TraceOperation 037639 (Je [Var (Local 3),Var (Local 2)] (Branch T (Dloc 037649)));
  if (Equal(GetLocal(3),GetLocal(2))) {
    Jump: 037649
  } else {
    TraceOperation 037643 (Store (Con 2) (Var (Local 3)));
    SetLocal 2 GetLocal(3);
    TraceOperation 037646 (Store (Con 4) (Con 1));
    SetLocal 4 1;
    Jump: 037649
  }
LocOp 037649:
  TraceOperation 037649 (Jump 037594);
  Jump: 037594
LocOp 037652:
  TraceOperation 037652 (CallN (Floc 089744) []);
  PushFrame;
  PushReturnAddress 037652;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  SetLocal 1 0;
  Jump: 089745
LocReturn 037652:
  TraceOperation 037655 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 037656:
  MakeRoutineFrame 0;
  Jump: 037657
LocOp 037657:
  TraceOperation 037657 (Test_attr (Var (Global 11)) (Con 4) (Branch F (Dloc 037679)));
  Let b1 = M[007228];
  Let b2 = M[007229];
  Let b3 = M[Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),0)];
  if (TestBit(b3,3)) {
    TraceOperation 037661 (Test_attr (Var (Global 11)) (Con 13) (Branch T (Dloc 037679)));
    Let b4 = M[007228];
    Let b5 = M[007229];
    Let b6 = M[Offset(Offset(000378,Mul(MakeHiLo(b4,b5),14)),1)];
    if (TestBit(b6,2)) {
      Jump: 037679
    } else {
      TraceOperation 037665 (Jz (Var (Global 54)) (Branch F (Dloc 037675)));
      Let b7 = M[007314];
      Let b8 = M[007315];
      if (IsZero(MakeHiLo(b7,b8))) {
        TraceOperation 037668 (CallN (Floc 041040) [Con 64,Con 9,Var (Global 11)]);
        Let b9 = M[007228];
        Let b10 = M[007229];
        PushFrame;
        PushReturnAddress 037668;
        SetLocal 1 64;
        SetLocal 2 9;
        SetLocal 3 MakeHiLo(b9,b10);
        MakeRoutineFrame 4;
        SetLocal 4 0;
        Jump: 041041
      } else {
        Jump: 037675
      }
    }
  } else {
    Jump: 037679
  }
LocReturn 037668:
  Jump: 037675
LocOp 037675:
  TraceOperation 037675 (CallN (Floc 089760) []);
  PushFrame;
  PushReturnAddress 037675;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  SetLocal 1 0;
  Jump: 089761
LocReturn 037675:
  TraceOperation 037678 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 037679:
  TraceOperation 037679 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 037680:
  MakeRoutineFrame 0;
  Jump: 037681
LocOp 037681:
  TraceOperation 037681 (Test_attr (Var (Global 11)) (Con 4) (Branch F (Dloc 037703)));
  Let b1 = M[007228];
  Let b2 = M[007229];
  Let b3 = M[Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),0)];
  if (TestBit(b3,3)) {
    TraceOperation 037685 (Test_attr (Var (Global 11)) (Con 13) (Branch T (Dloc 037703)));
    Let b4 = M[007228];
    Let b5 = M[007229];
    Let b6 = M[Offset(Offset(000378,Mul(MakeHiLo(b4,b5),14)),1)];
    if (TestBit(b6,2)) {
      Jump: 037703
    } else {
      TraceOperation 037689 (Jz (Var (Global 54)) (Branch F (Dloc 037699)));
      Let b7 = M[007314];
      Let b8 = M[007315];
      if (IsZero(MakeHiLo(b7,b8))) {
        TraceOperation 037692 (CallN (Floc 041040) [Con 64,Con 9,Var (Global 11)]);
        Let b9 = M[007228];
        Let b10 = M[007229];
        PushFrame;
        PushReturnAddress 037692;
        SetLocal 1 64;
        SetLocal 2 9;
        SetLocal 3 MakeHiLo(b9,b10);
        MakeRoutineFrame 4;
        SetLocal 4 0;
        Jump: 041041
      } else {
        Jump: 037699
      }
    }
  } else {
    Jump: 037703
  }
LocReturn 037692:
  Jump: 037699
LocOp 037699:
  TraceOperation 037699 (CallN (Floc 089760) []);
  PushFrame;
  PushReturnAddress 037699;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  SetLocal 1 0;
  Jump: 089761
LocReturn 037699:
  TraceOperation 037702 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 037703:
  TraceOperation 037703 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 037704:
  MakeRoutineFrame 0;
  Jump: 037705
LocOp 037705:
  TraceOperation 037705 (Jz (Var (Global 11)) (Branch T (Dloc 037733)));
  Let b1 = M[007228];
  Let b2 = M[007229];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 037733
  } else {
    TraceOperation 037708 (Call (Floc 026172) [Var (Global 11),Con 13] Sp);
    Let b3 = M[007228];
    Let b4 = M[007229];
    PushFrame;
    PushReturnAddress 037708;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 13;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  }
LocReturn 037708:
  PushStack call_result;
  TraceOperation 037716 (Jz (Var Sp) (Branch T (Dloc 037733)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 037733
  } else {
    TraceOperation 037719 (Jz (Var (Global 54)) (Branch F (Dloc 037729)));
    Let b2 = M[007314];
    Let b3 = M[007315];
    if (IsZero(MakeHiLo(b2,b3))) {
      TraceOperation 037722 (CallN (Floc 041040) [Con 64,Con 14,Var (Global 11)]);
      Let b4 = M[007228];
      Let b5 = M[007229];
      PushFrame;
      PushReturnAddress 037722;
      SetLocal 1 64;
      SetLocal 2 14;
      SetLocal 3 MakeHiLo(b4,b5);
      MakeRoutineFrame 4;
      SetLocal 4 0;
      Jump: 041041
    } else {
      Jump: 037729
    }
  }
LocReturn 037722:
  Jump: 037729
LocOp 037729:
  TraceOperation 037729 (CallN (Floc 089760) []);
  PushFrame;
  PushReturnAddress 037729;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  SetLocal 1 0;
  Jump: 089761
LocReturn 037729:
  TraceOperation 037732 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 037733:
  TraceOperation 037733 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 037736:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 037737
LocOp 037737:
  TraceOperation 037737 (Add (Var (Global 133)) (Var (Local 1)) (Local 2));
  Let b1 = M[007472];
  Let b2 = M[007473];
  SetLocal 2 Add(MakeHiLo(b1,b2),GetLocal(1));
  TraceOperation 037741 (Jg (Var (Local 2)) (Con 180) (Branch F (Dloc 037746)));
  if (GreaterThan(GetLocal(2),180)) {
    TraceOperation 037745 Rfalse;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 037746
  }
LocOp 037746:
  TraceOperation 037746 (Mul (Var (Global 133)) (Con 2) Sp);
  Let b1 = M[007472];
  Let b2 = M[007473];
  PushStack Mul(MakeHiLo(b1,b2),2);
  TraceOperation 037750 (Add (Con 9323) (Var Sp) (Local 3));
  PopStack popped3;
  SetLocal 3 Add(9323,popped3);
  TraceOperation 037756 (Store (Con 149) (Var (Local 2)));
  SetByte 007472 HiByte(GetLocal(2));
  SetByte 007473 LoByte(GetLocal(2));
  TraceOperation 037759 (Ret (Var (Local 3)));
  PopFrame;
  PopReturnAddress return_address_4;
  SetResult GetLocal(3);
  JumpIndirect: (return) return_address_4
--------------------------------------------------
LocRoutine 037764:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 037765
LocOp 037765:
  TraceOperation 037765 (Jz (Var (Local 1)) (Branch F (Dloc 037769)));
  if (IsZero(GetLocal(1))) {
    TraceOperation 037768 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 037769
  }
LocOp 037769:
  TraceOperation 037769 (Sub (Var (Local 1)) (Con 9323) Sp);
  PushStack Sub(GetLocal(1),9323);
  TraceOperation 037775 (Div (Var Sp) (Con 2) (Global 133));
  PopStack popped1;
  SetByte 007472 HiByte(Div(popped1,2));
  SetByte 007473 LoByte(Div(popped1,2));
  TraceOperation 037779 Rtrue;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult 1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 037780:
  MakeRoutineFrame 6;
  if (LessThanByte(num_actuals,6)) {
    SetLocal 6 0;
    if (LessThanByte(num_actuals,5)) {
      SetLocal 5 0;
      if (LessThanByte(num_actuals,4)) {
        SetLocal 4 0;
        if (LessThanByte(num_actuals,3)) {
          SetLocal 3 0;
          if (LessThanByte(num_actuals,2)) {
            SetLocal 2 0;
            if (LessThanByte(num_actuals,1)) {
              SetLocal 1 0;
            }
          }
        }
      }
    }
  }
  Jump: 037781
LocOp 037781:
  TraceOperation 037781 (Store (Con 2) (Con 1));
  SetLocal 2 1;
  Jump: 037784
LocOp 037784:
  TraceOperation 037784 (Call (Floc 026172) [Var (Local 2),Con 2] Sp);
  PushFrame;
  PushReturnAddress 037784;
  SetLocal 1 GetLocal(2);
  SetLocal 2 2;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 037784:
  PushStack call_result;
  TraceOperation 037791 (Jz (Var Sp) (Branch T (Dloc 037822)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 037822
  } else {
    TraceOperation 037794 (Test_attr (Var (Local 2)) (Con 35) (Branch F (Dloc 037822)));
    Let b2 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),4)];
    if (TestBit(b2,4)) {
      TraceOperation 037798 (Inc (Con 6));
      SetLocal 6 Add(GetLocal(6),1);
      TraceOperation 037800 (Jz (Var (Local 4)) (Branch F (Dloc 037812)));
      if (IsZero(GetLocal(4))) {
        TraceOperation 037803 (Store (Con 4) (Var (Local 2)));
        SetLocal 4 GetLocal(2);
        TraceOperation 037806 (Get_parent (Var (Local 2)) (Local 3));
        Let b3 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),6)];
        Let b4 = M[Offset(Offset(Offset(000378,Mul(GetLocal(2),14)),6),1)];
        SetLocal 3 MakeHiLo(b3,b4);
        TraceOperation 037809 (Jump 037822);
        Jump: 037822
      } else {
        Jump: 037812
      }
    } else {
      Jump: 037822
    }
  }
LocOp 037812:
  TraceOperation 037812 (Get_parent (Var (Local 2)) Sp);
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),6)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(2),14)),6),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 037815 (Je [Var Sp,Var (Local 3)] (Branch T (Dloc 037822)));
  PopStack popped3;
  if (Equal(popped3,GetLocal(3))) {
    Jump: 037822
  } else {
    TraceOperation 037819 (Store (Con 5) (Con 1));
    SetLocal 5 1;
    Jump: 037822
  }
LocOp 037822:
  TraceOperation 037822 (Inc (Con 2));
  SetLocal 2 Add(GetLocal(2),1);
  TraceOperation 037824 (Jg (Var (Local 2)) (Con 72) (Branch T (Dloc 037833)));
  if (GreaterThan(GetLocal(2),72)) {
    Jump: 037833
  } else {
    TraceOperation 037830 (Jump 037784);
    Jump: 037784
  }
LocOp 037833:
  TraceOperation 037833 (Jz (Var (Local 5)) (Branch T (Dloc 037839)));
  if (IsZero(GetLocal(5))) {
    Jump: 037839
  } else {
    TraceOperation 037836 (Store (Con 3) (Con 0));
    SetLocal 3 0;
    Jump: 037839
  }
LocOp 037839:
  TraceOperation 037839 (Jz (Var (Local 6)) (Branch F (Dloc 037848)));
  if (IsZero(GetLocal(6))) {
    TraceOperation 037842 (Print_paddr (Con 28510));
    Note "<static Gettext address>";
    GamePrint "nothing";
    TraceOperation 037845 (Jump 037983);
    Jump: 037983
  } else {
    Jump: 037848
  }
LocOp 037848:
  TraceOperation 037848 (Push (Var (Global 134)));
  Let b1 = M[007474];
  Let b2 = M[007475];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 037851 (Push (Var (Global 135)));
  Let b3 = M[007476];
  Let b4 = M[007477];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 037854 (Call (Floc 037736) [Var (Local 6)] (Global 134));
  PushFrame;
  PushReturnAddress 037854;
  SetLocal 1 GetLocal(6);
  MakeRoutineFrame 3;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 037737
LocReturn 037854:
  SetByte 007474 HiByte(call_result);
  SetByte 007475 LoByte(call_result);
  TraceOperation 037860 (Store (Con 151) (Var (Local 6)));
  SetByte 007476 HiByte(GetLocal(6));
  SetByte 007477 LoByte(GetLocal(6));
  TraceOperation 037863 (Jz (Var (Global 134)) (Branch F (Dloc 037873)));
  Let b1 = M[007474];
  Let b2 = M[007475];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 037866 (Call (Floc 086692) [Con 42] Sp);
    PushFrame;
    PushReturnAddress 037866;
    SetLocal 1 42;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 086693
  } else {
    Jump: 037873
  }
LocReturn 037866:
  PushStack call_result;
  TraceOperation 037872 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 037873:
  TraceOperation 037873 (Jz (Var (Local 3)) (Branch T (Dloc 037920)));
  if (IsZero(GetLocal(3))) {
    Jump: 037920
  } else {
    TraceOperation 037876 (Get_child (Var (Local 3)) Sp (Branch F (Dloc 037880)));
    Let b1 = M[Offset(Offset(000378,Mul(GetLocal(3),14)),10)];
    Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(3),14)),10),1)];
    PushStack MakeHiLo(b1,b2);
    if (IsZero(MakeHiLo(b1,b2))) {
      Jump: 037880
    } else {
      Jump: 037880
    }
  }
LocOp 037880:
  TraceOperation 037880 (CallN (Floc 038388) [Var Sp]);
  PopStack popped1;
  PushFrame;
  PushReturnAddress 037880;
  SetLocal 1 popped1;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 038389
LocReturn 037880:
  TraceOperation 037885 (Store (Con 6) (Con 0));
  SetLocal 6 0;
  TraceOperation 037888 (Get_child (Var (Local 3)) Sp (Branch F (Dloc 037892)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(3),14)),10)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(3),14)),10),1)];
  PushStack MakeHiLo(b1,b2);
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 037892
  } else {
    Jump: 037892
  }
LocOp 037892:
  TraceOperation 037892 (Pull (Con 2));
  PopStack popped1;
  SetLocal 2 popped1;
  TraceOperation 037895 (Jz (Var (Local 2)) (Branch T (Dloc 037917)));
  if (IsZero(GetLocal(2))) {
    Jump: 037917
  } else {
    Jump: 037898
  }
LocOp 037898:
  TraceOperation 037898 (Test_attr (Var (Local 2)) (Con 35) (Branch F (Dloc 037912)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),4)];
  if (TestBit(b1,4)) {
    TraceOperation 037902 (Push (Var (Local 6)));
    PushStack GetLocal(6);
    TraceOperation 037905 (Inc (Con 6));
    SetLocal 6 Add(GetLocal(6),1);
    TraceOperation 037907 (Storew (Var (Global 134)) (Var Sp) (Var (Local 2)));
    Let b2 = M[007474];
    Let b3 = M[007475];
    PopStack popped4;
    SetByte Offset(Address(MakeHiLo(b2,b3)),Mul(2,popped4)) HiByte(GetLocal(2));
    SetByte Offset(Offset(Address(MakeHiLo(b2,b3)),Mul(2,popped4)),1) LoByte(GetLocal(2));
    Jump: 037912
  } else {
    Jump: 037912
  }
LocOp 037912:
  TraceOperation 037912 (Get_sibling (Var (Local 2)) (Local 2) (Branch T (Dloc 037898)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),8)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(2),14)),8),1)];
  SetLocal 2 MakeHiLo(b1,b2);
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 037917
  } else {
    Jump: 037898
  }
LocOp 037917:
  TraceOperation 037917 (Jump 037961);
  Jump: 037961
LocOp 037920:
  TraceOperation 037920 (Store (Con 6) (Con 0));
  SetLocal 6 0;
  TraceOperation 037923 (Store (Con 2) (Con 1));
  SetLocal 2 1;
  Jump: 037926
LocOp 037926:
  TraceOperation 037926 (Call (Floc 026172) [Var (Local 2),Con 2] Sp);
  PushFrame;
  PushReturnAddress 037926;
  SetLocal 1 GetLocal(2);
  SetLocal 2 2;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 037926:
  PushStack call_result;
  TraceOperation 037933 (Jz (Var Sp) (Branch T (Dloc 037950)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 037950
  } else {
    TraceOperation 037936 (Test_attr (Var (Local 2)) (Con 35) (Branch F (Dloc 037950)));
    Let b2 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),4)];
    if (TestBit(b2,4)) {
      TraceOperation 037940 (Push (Var (Local 6)));
      PushStack GetLocal(6);
      TraceOperation 037943 (Inc (Con 6));
      SetLocal 6 Add(GetLocal(6),1);
      TraceOperation 037945 (Storew (Var (Global 134)) (Var Sp) (Var (Local 2)));
      Let b3 = M[007474];
      Let b4 = M[007475];
      PopStack popped5;
      SetByte Offset(Address(MakeHiLo(b3,b4)),Mul(2,popped5)) HiByte(GetLocal(2));
      SetByte Offset(Offset(Address(MakeHiLo(b3,b4)),Mul(2,popped5)),1) LoByte(GetLocal(2));
      Jump: 037950
    } else {
      Jump: 037950
    }
  }
LocOp 037950:
  TraceOperation 037950 (Inc (Con 2));
  SetLocal 2 Add(GetLocal(2),1);
  TraceOperation 037952 (Jg (Var (Local 2)) (Con 72) (Branch T (Dloc 037961)));
  if (GreaterThan(GetLocal(2),72)) {
    Jump: 037961
  } else {
    TraceOperation 037958 (Jump 037926);
    Jump: 037926
  }
LocOp 037961:
  TraceOperation 037961 (CallN (Floc 038496) [Var (Local 4),Var (Local 1),Con 0,Con 0,Con 9496]);
  PushFrame;
  PushReturnAddress 037961;
  SetLocal 1 GetLocal(4);
  SetLocal 2 GetLocal(1);
  SetLocal 3 0;
  SetLocal 4 0;
  SetLocal 5 9496;
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  Jump: 038497
LocReturn 037961:
  TraceOperation 037972 (CallN (Floc 037764) [Var (Global 134)]);
  Let b1 = M[007474];
  Let b2 = M[007475];
  PushFrame;
  PushReturnAddress 037972;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 1;
  Jump: 037765
LocReturn 037972:
  TraceOperation 037977 (Pull (Con 151));
  PopStack popped1;
  SetByte 007476 HiByte(popped1);
  SetByte 007477 LoByte(popped1);
  TraceOperation 037980 (Pull (Con 150));
  PopStack popped2;
  SetByte 007474 HiByte(popped2);
  SetByte 007475 LoByte(popped2);
  Jump: 037983
LocOp 037983:
  TraceOperation 037983 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 037984:
  MakeRoutineFrame 5;
  if (LessThanByte(num_actuals,5)) {
    SetLocal 5 0;
    if (LessThanByte(num_actuals,4)) {
      SetLocal 4 0;
      if (LessThanByte(num_actuals,3)) {
        SetLocal 3 0;
        if (LessThanByte(num_actuals,2)) {
          SetLocal 2 0;
          if (LessThanByte(num_actuals,1)) {
            SetLocal 1 0;
          }
        }
      }
    }
  }
  Jump: 037985
LocOp 037985:
  TraceOperation 037985 (Jz (Var (Local 1)) (Branch F (Dloc 037989)));
  if (IsZero(GetLocal(1))) {
    TraceOperation 037988 Rfalse;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 0;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 037989
  }
LocOp 037989:
  TraceOperation 037989 (Store (Con 255) (Var (Local 4)));
  SetByte 007684 HiByte(GetLocal(4));
  SetByte 007685 LoByte(GetLocal(4));
  TraceOperation 037992 (Je [Var (Global 239),Con 3] (Branch F (Dloc 038001)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),3)) {
    TraceOperation 037996 (Loadw (Var (Global 134)) (Con 0) Sp);
    Let b3 = M[007474];
    Let b4 = M[007475];
    Let b5 = M[Offset(Address(MakeHiLo(b3,b4)),0)];
    Let b6 = M[Offset(Offset(Address(MakeHiLo(b3,b4)),0),1)];
    PushStack MakeHiLo(b5,b6);
    TraceOperation 038000 Ret_popped;
    PopStack popped7;
    PopFrame;
    PopReturnAddress return_address_8;
    SetResult popped7;
    JumpIndirect: (return) return_address_8
  } else {
    Jump: 038001
  }
LocOp 038001:
  TraceOperation 038001 (Je [Var (Global 239),Con 2] (Branch F (Dloc 038010)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),2)) {
    TraceOperation 038005 (Call (Floc 038120) [] Sp);
    PushFrame;
    PushReturnAddress 038005;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    SetLocal 2 0;
    SetLocal 1 0;
    Jump: 038121
  } else {
    Jump: 038010
  }
LocReturn 038005:
  PushStack call_result;
  TraceOperation 038009 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 038010:
  TraceOperation 038010 (Je [Var (Global 239),Con 0,Con 1] (Branch F (Dloc 038118)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (LogOr(Equal(MakeHiLo(b1,b2),0),Equal(MakeHiLo(b1,b2),1))) {
    TraceOperation 038017 (Store (Con 5) (Con 0));
    SetLocal 5 0;
    Jump: 038020
  } else {
    Jump: 038118
  }
LocOp 038020:
  TraceOperation 038020 (Jl (Var (Local 5)) (Var (Global 135)) (Branch F (Dloc 038118)));
  Let b1 = M[007476];
  Let b2 = M[007477];
  if (LessThan(GetLocal(5),MakeHiLo(b1,b2))) {
    TraceOperation 038025 (Loadw (Var (Global 134)) (Var (Local 5)) Sp);
    Let b3 = M[007474];
    Let b4 = M[007475];
    Let b5 = M[Offset(Address(MakeHiLo(b3,b4)),Mul(2,GetLocal(5)))];
    Let b6 = M[Offset(Offset(Address(MakeHiLo(b3,b4)),Mul(2,GetLocal(5))),1)];
    PushStack MakeHiLo(b5,b6);
    TraceOperation 038029 (Je [Var Sp,Var (Local 1)] (Branch F (Dloc 038113)));
    PopStack popped7;
    if (Equal(popped7,GetLocal(1))) {
      TraceOperation 038034 (Je [Var (Local 4),Con 1] (Branch F (Dloc 038040)));
      if (Equal(GetLocal(4),1)) {
        TraceOperation 038038 (Inc (Con 5));
        SetLocal 5 Add(GetLocal(5),1);
        Jump: 038040
      } else {
        Jump: 038040
      }
    } else {
      Jump: 038113
    }
  } else {
    Jump: 038118
  }
LocOp 038040:
  TraceOperation 038040 (Jl (Var (Local 5)) (Var (Global 135)) (Branch F (Dloc 038112)));
  Let b1 = M[007476];
  Let b2 = M[007477];
  if (LessThan(GetLocal(5),MakeHiLo(b1,b2))) {
    TraceOperation 038045 (Loadw (Var (Global 134)) (Var (Local 5)) (Local 1));
    Let b3 = M[007474];
    Let b4 = M[007475];
    Let b5 = M[Offset(Address(MakeHiLo(b3,b4)),Mul(2,GetLocal(5)))];
    Let b6 = M[Offset(Offset(Address(MakeHiLo(b3,b4)),Mul(2,GetLocal(5))),1)];
    SetLocal 1 MakeHiLo(b5,b6);
    TraceOperation 038049 (Jz (Var (Local 3)) (Branch T (Dloc 038066)));
    if (IsZero(GetLocal(3))) {
      Jump: 038066
    } else {
      TraceOperation 038052 (Get_prop (Var (Local 1)) (Con 28) (Global 239));
      Let b7 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),12)];
      Let b8 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),12),1)];
      Let b9 = M[Address(MakeHiLo(b7,b8))];
      Let loop_var10 = DeAddress(Offset(Address(MakeHiLo(b7,b8)),Add(Mul(2,Widen(b9)),1)));
      Label 11: {
        Let b12 = M[Address(loop_var10)];
        if (IsZeroByte(b12)) {
          Let b13 = M[000320];
          Let b14 = M[000321];
          SetByte 007684 b13;
          SetByte 007685 b14;
        } else {
          if (TestBit(b12,7)) {
            Let b15 = M[Offset(Address(loop_var10),1)];
            if (Equal(28,Widen(BwAnd(b12,63)))) {
              if (Equal(Widen(BwAnd(b15,63)),2)) {
                Let b16 = M[Offset(Address(loop_var10),2)];
                Let b17 = M[Offset(Offset(Address(loop_var10),2),1)];
                SetByte 007684 b16;
                SetByte 007685 b17;
              } else {
                Let b18 = M[Offset(Address(loop_var10),2)];
                SetByte 007684 HiByte(Widen(b18));
                SetByte 007685 LoByte(Widen(b18));
              }
            } else {
              Assign loop_var10 = DeAddress(Offset(Offset(Address(loop_var10),2),Widen(BwAnd(b15,63))));
              Goto: Label 11
            }
          } else {
            if (TestBit(b12,6)) {
              if (Equal(28,Widen(BwAnd(b12,63)))) {
                Let b19 = M[Offset(Address(loop_var10),1)];
                Let b20 = M[Offset(Offset(Address(loop_var10),1),1)];
                SetByte 007684 b19;
                SetByte 007685 b20;
              } else {
                Assign loop_var10 = DeAddress(Offset(Offset(Address(loop_var10),1),2));
                Goto: Label 11
              }
            } else {
              if (Equal(28,Widen(BwAnd(b12,63)))) {
                Let b21 = M[Offset(Address(loop_var10),1)];
                SetByte 007684 HiByte(Widen(b21));
                SetByte 007685 LoByte(Widen(b21));
              } else {
                Assign loop_var10 = DeAddress(Offset(Offset(Address(loop_var10),1),1));
                Goto: Label 11
              }
            }
          }
        }
      }
      TraceOperation 038056 (Push (Var (Global 239)));
      Let b22 = M[007684];
      Let b23 = M[007685];
      PushStack MakeHiLo(b22,b23);
      TraceOperation 038059 (Je [Var Sp,Var (Local 3)] (Branch T (Dloc 038066)));
      PopStack popped24;
      if (Equal(popped24,GetLocal(3))) {
        Jump: 038066
      } else {
        TraceOperation 038063 (Jump 038107);
        Jump: 038107
      }
    }
  } else {
    Jump: 038112
  }
LocOp 038066:
  TraceOperation 038066 (And (Var (Global 93)) (Con 512) Sp);
  Let b1 = M[007392];
  Let b2 = M[007393];
  PushStack And(MakeHiLo(b1,b2),512);
  TraceOperation 038072 (Jz (Var Sp) (Branch T (Dloc 038085)));
  PopStack popped3;
  if (IsZero(popped3)) {
    Jump: 038085
  } else {
    TraceOperation 038075 (Jz (Var (Local 2)) (Branch F (Dloc 038085)));
    if (IsZero(GetLocal(2))) {
      TraceOperation 038078 (Test_attr (Var (Local 1)) (Con 34) (Branch T (Dloc 038085)));
      Let b4 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),4)];
      if (TestBit(b4,5)) {
        Jump: 038085
      } else {
        TraceOperation 038082 (Jump 038107);
        Jump: 038107
      }
    } else {
      Jump: 038085
    }
  }
LocOp 038085:
  TraceOperation 038085 (And (Var (Global 93)) (Con 2048) Sp);
  Let b1 = M[007392];
  Let b2 = M[007393];
  PushStack And(MakeHiLo(b1,b2),2048);
  TraceOperation 038091 (Jz (Var Sp) (Branch T (Dloc 038105)));
  PopStack popped3;
  if (IsZero(popped3)) {
    Jump: 038105
  } else {
    TraceOperation 038094 (Test_attr (Var (Local 1)) (Con 3) (Branch T (Dloc 038102)));
    Let b4 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),0)];
    if (TestBit(b4,4)) {
      Jump: 038102
    } else {
      TraceOperation 038098 (Test_attr (Var (Local 1)) (Con 15) (Branch F (Dloc 038105)));
      Let b5 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),1)];
      if (TestBit(b5,0)) {
        Jump: 038102
      } else {
        Jump: 038105
      }
    }
  }
LocOp 038102:
  TraceOperation 038102 (Jump 038107);
  Jump: 038107
LocOp 038105:
  TraceOperation 038105 (Ret (Var (Local 1)));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult GetLocal(1);
  JumpIndirect: (return) return_address_1
LocOp 038107:
  TraceOperation 038107 (Inc (Con 5));
  SetLocal 5 Add(GetLocal(5),1);
  TraceOperation 038109 (Jump 038040);
  Jump: 038040
LocOp 038112:
  TraceOperation 038112 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
LocOp 038113:
  TraceOperation 038113 (Inc (Con 5));
  SetLocal 5 Add(GetLocal(5),1);
  TraceOperation 038115 (Jump 038020);
  Jump: 038020
LocOp 038118:
  TraceOperation 038118 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 038120:
  MakeRoutineFrame 6;
  if (LessThanByte(num_actuals,6)) {
    SetLocal 6 0;
    if (LessThanByte(num_actuals,5)) {
      SetLocal 5 0;
      if (LessThanByte(num_actuals,4)) {
        SetLocal 4 0;
        if (LessThanByte(num_actuals,3)) {
          SetLocal 3 0;
          if (LessThanByte(num_actuals,2)) {
            SetLocal 2 0;
            if (LessThanByte(num_actuals,1)) {
              SetLocal 1 0;
            }
          }
        }
      }
    }
  }
  Jump: 038121
LocOp 038121:
  TraceOperation 038121 (Store (Con 2) (Con 0));
  SetLocal 2 0;
  Jump: 038124
LocOp 038124:
  TraceOperation 038124 (Jl (Var (Local 2)) (Var (Global 135)) (Branch F (Dloc 038260)));
  Let b1 = M[007476];
  Let b2 = M[007477];
  if (LessThan(GetLocal(2),MakeHiLo(b1,b2))) {
    TraceOperation 038129 (Loadw (Var (Global 134)) (Var (Local 2)) Sp);
    Let b3 = M[007474];
    Let b4 = M[007475];
    Let b5 = M[Offset(Address(MakeHiLo(b3,b4)),Mul(2,GetLocal(2)))];
    Let b6 = M[Offset(Offset(Address(MakeHiLo(b3,b4)),Mul(2,GetLocal(2))),1)];
    PushStack MakeHiLo(b5,b6);
    TraceOperation 038133 (Get_prop (Var Sp) (Con 28) (Global 239));
    PopStack popped7;
    Let b8 = M[Offset(Offset(000378,Mul(popped7,14)),12)];
    Let b9 = M[Offset(Offset(Offset(000378,Mul(popped7,14)),12),1)];
    Let b10 = M[Address(MakeHiLo(b8,b9))];
    Let loop_var11 = DeAddress(Offset(Address(MakeHiLo(b8,b9)),Add(Mul(2,Widen(b10)),1)));
    Label 12: {
      Let b13 = M[Address(loop_var11)];
      if (IsZeroByte(b13)) {
        Let b14 = M[000320];
        Let b15 = M[000321];
        SetByte 007684 b14;
        SetByte 007685 b15;
      } else {
        if (TestBit(b13,7)) {
          Let b16 = M[Offset(Address(loop_var11),1)];
          if (Equal(28,Widen(BwAnd(b13,63)))) {
            if (Equal(Widen(BwAnd(b16,63)),2)) {
              Let b17 = M[Offset(Address(loop_var11),2)];
              Let b18 = M[Offset(Offset(Address(loop_var11),2),1)];
              SetByte 007684 b17;
              SetByte 007685 b18;
            } else {
              Let b19 = M[Offset(Address(loop_var11),2)];
              SetByte 007684 HiByte(Widen(b19));
              SetByte 007685 LoByte(Widen(b19));
            }
          } else {
            Assign loop_var11 = DeAddress(Offset(Offset(Address(loop_var11),2),Widen(BwAnd(b16,63))));
            Goto: Label 12
          }
        } else {
          if (TestBit(b13,6)) {
            if (Equal(28,Widen(BwAnd(b13,63)))) {
              Let b20 = M[Offset(Address(loop_var11),1)];
              Let b21 = M[Offset(Offset(Address(loop_var11),1),1)];
              SetByte 007684 b20;
              SetByte 007685 b21;
            } else {
              Assign loop_var11 = DeAddress(Offset(Offset(Address(loop_var11),1),2));
              Goto: Label 12
            }
          } else {
            if (Equal(28,Widen(BwAnd(b13,63)))) {
              Let b22 = M[Offset(Address(loop_var11),1)];
              SetByte 007684 HiByte(Widen(b22));
              SetByte 007685 LoByte(Widen(b22));
            } else {
              Assign loop_var11 = DeAddress(Offset(Offset(Address(loop_var11),1),1));
              Goto: Label 12
            }
          }
        }
      }
    }
    TraceOperation 038137 (Store (Con 3) (Var (Global 239)));
    Let b23 = M[007684];
    Let b24 = M[007685];
    SetLocal 3 MakeHiLo(b23,b24);
    TraceOperation 038140 (Jz (Var (Local 3)) (Branch T (Dloc 038255)));
    if (IsZero(GetLocal(3))) {
      Jump: 038255
    } else {
      TraceOperation 038144 (Inc (Con 2));
      SetLocal 2 Add(GetLocal(2),1);
      Jump: 038146
    }
  } else {
    Jump: 038260
  }
LocOp 038146:
  TraceOperation 038146 (Jl (Var (Local 2)) (Var (Global 135)) (Branch F (Dloc 038170)));
  Let b1 = M[007476];
  Let b2 = M[007477];
  if (LessThan(GetLocal(2),MakeHiLo(b1,b2))) {
    TraceOperation 038150 (Loadw (Var (Global 134)) (Var (Local 2)) Sp);
    Let b3 = M[007474];
    Let b4 = M[007475];
    Let b5 = M[Offset(Address(MakeHiLo(b3,b4)),Mul(2,GetLocal(2)))];
    Let b6 = M[Offset(Offset(Address(MakeHiLo(b3,b4)),Mul(2,GetLocal(2))),1)];
    PushStack MakeHiLo(b5,b6);
    TraceOperation 038154 (Get_prop (Var Sp) (Con 28) (Global 239));
    PopStack popped7;
    Let b8 = M[Offset(Offset(000378,Mul(popped7,14)),12)];
    Let b9 = M[Offset(Offset(Offset(000378,Mul(popped7,14)),12),1)];
    Let b10 = M[Address(MakeHiLo(b8,b9))];
    Let loop_var11 = DeAddress(Offset(Address(MakeHiLo(b8,b9)),Add(Mul(2,Widen(b10)),1)));
    Label 12: {
      Let b13 = M[Address(loop_var11)];
      if (IsZeroByte(b13)) {
        Let b14 = M[000320];
        Let b15 = M[000321];
        SetByte 007684 b14;
        SetByte 007685 b15;
      } else {
        if (TestBit(b13,7)) {
          Let b16 = M[Offset(Address(loop_var11),1)];
          if (Equal(28,Widen(BwAnd(b13,63)))) {
            if (Equal(Widen(BwAnd(b16,63)),2)) {
              Let b17 = M[Offset(Address(loop_var11),2)];
              Let b18 = M[Offset(Offset(Address(loop_var11),2),1)];
              SetByte 007684 b17;
              SetByte 007685 b18;
            } else {
              Let b19 = M[Offset(Address(loop_var11),2)];
              SetByte 007684 HiByte(Widen(b19));
              SetByte 007685 LoByte(Widen(b19));
            }
          } else {
            Assign loop_var11 = DeAddress(Offset(Offset(Address(loop_var11),2),Widen(BwAnd(b16,63))));
            Goto: Label 12
          }
        } else {
          if (TestBit(b13,6)) {
            if (Equal(28,Widen(BwAnd(b13,63)))) {
              Let b20 = M[Offset(Address(loop_var11),1)];
              Let b21 = M[Offset(Offset(Address(loop_var11),1),1)];
              SetByte 007684 b20;
              SetByte 007685 b21;
            } else {
              Assign loop_var11 = DeAddress(Offset(Offset(Address(loop_var11),1),2));
              Goto: Label 12
            }
          } else {
            if (Equal(28,Widen(BwAnd(b13,63)))) {
              Let b22 = M[Offset(Address(loop_var11),1)];
              SetByte 007684 HiByte(Widen(b22));
              SetByte 007685 LoByte(Widen(b22));
            } else {
              Assign loop_var11 = DeAddress(Offset(Offset(Address(loop_var11),1),1));
              Goto: Label 12
            }
          }
        }
      }
    }
    TraceOperation 038158 (Push (Var (Global 239)));
    Let b23 = M[007684];
    Let b24 = M[007685];
    PushStack MakeHiLo(b23,b24);
    TraceOperation 038161 (Je [Var Sp,Var (Local 3)] (Branch F (Dloc 038170)));
    PopStack popped25;
    if (Equal(popped25,GetLocal(3))) {
      TraceOperation 038165 (Inc (Con 2));
      SetLocal 2 Add(GetLocal(2),1);
      TraceOperation 038167 (Jump 038146);
      Jump: 038146
    } else {
      Jump: 038170
    }
  } else {
    Jump: 038170
  }
LocOp 038170:
  TraceOperation 038170 (Je [Var (Local 2),Var (Global 135)] (Branch F (Dloc 038179)));
  Let b1 = M[007476];
  Let b2 = M[007477];
  if (Equal(GetLocal(2),MakeHiLo(b1,b2))) {
    TraceOperation 038174 (Loadw (Var (Global 134)) (Con 0) Sp);
    Let b3 = M[007474];
    Let b4 = M[007475];
    Let b5 = M[Offset(Address(MakeHiLo(b3,b4)),0)];
    Let b6 = M[Offset(Offset(Address(MakeHiLo(b3,b4)),0),1)];
    PushStack MakeHiLo(b5,b6);
    TraceOperation 038178 Ret_popped;
    PopStack popped7;
    PopFrame;
    PopReturnAddress return_address_8;
    SetResult popped7;
    JumpIndirect: (return) return_address_8
  } else {
    Jump: 038179
  }
LocOp 038179:
  TraceOperation 038179 (Add (Var (Local 2)) (Con 1) (Local 4));
  SetLocal 4 Add(GetLocal(2),1);
  Jump: 038183
LocOp 038183:
  TraceOperation 038183 (Jl (Var (Local 4)) (Var (Global 135)) (Branch F (Dloc 038253)));
  Let b1 = M[007476];
  Let b2 = M[007477];
  if (LessThan(GetLocal(4),MakeHiLo(b1,b2))) {
    TraceOperation 038188 (Loadw (Var (Global 134)) (Var (Local 4)) Sp);
    Let b3 = M[007474];
    Let b4 = M[007475];
    Let b5 = M[Offset(Address(MakeHiLo(b3,b4)),Mul(2,GetLocal(4)))];
    Let b6 = M[Offset(Offset(Address(MakeHiLo(b3,b4)),Mul(2,GetLocal(4))),1)];
    PushStack MakeHiLo(b5,b6);
    TraceOperation 038192 (Get_prop (Var Sp) (Con 28) (Global 239));
    PopStack popped7;
    Let b8 = M[Offset(Offset(000378,Mul(popped7,14)),12)];
    Let b9 = M[Offset(Offset(Offset(000378,Mul(popped7,14)),12),1)];
    Let b10 = M[Address(MakeHiLo(b8,b9))];
    Let loop_var11 = DeAddress(Offset(Address(MakeHiLo(b8,b9)),Add(Mul(2,Widen(b10)),1)));
    Label 12: {
      Let b13 = M[Address(loop_var11)];
      if (IsZeroByte(b13)) {
        Let b14 = M[000320];
        Let b15 = M[000321];
        SetByte 007684 b14;
        SetByte 007685 b15;
      } else {
        if (TestBit(b13,7)) {
          Let b16 = M[Offset(Address(loop_var11),1)];
          if (Equal(28,Widen(BwAnd(b13,63)))) {
            if (Equal(Widen(BwAnd(b16,63)),2)) {
              Let b17 = M[Offset(Address(loop_var11),2)];
              Let b18 = M[Offset(Offset(Address(loop_var11),2),1)];
              SetByte 007684 b17;
              SetByte 007685 b18;
            } else {
              Let b19 = M[Offset(Address(loop_var11),2)];
              SetByte 007684 HiByte(Widen(b19));
              SetByte 007685 LoByte(Widen(b19));
            }
          } else {
            Assign loop_var11 = DeAddress(Offset(Offset(Address(loop_var11),2),Widen(BwAnd(b16,63))));
            Goto: Label 12
          }
        } else {
          if (TestBit(b13,6)) {
            if (Equal(28,Widen(BwAnd(b13,63)))) {
              Let b20 = M[Offset(Address(loop_var11),1)];
              Let b21 = M[Offset(Offset(Address(loop_var11),1),1)];
              SetByte 007684 b20;
              SetByte 007685 b21;
            } else {
              Assign loop_var11 = DeAddress(Offset(Offset(Address(loop_var11),1),2));
              Goto: Label 12
            }
          } else {
            if (Equal(28,Widen(BwAnd(b13,63)))) {
              Let b22 = M[Offset(Address(loop_var11),1)];
              SetByte 007684 HiByte(Widen(b22));
              SetByte 007685 LoByte(Widen(b22));
            } else {
              Assign loop_var11 = DeAddress(Offset(Offset(Address(loop_var11),1),1));
              Goto: Label 12
            }
          }
        }
      }
    }
    TraceOperation 038196 (Push (Var (Global 239)));
    Let b23 = M[007684];
    Let b24 = M[007685];
    PushStack MakeHiLo(b23,b24);
    TraceOperation 038199 (Je [Var Sp,Var (Local 3)] (Branch F (Dloc 038248)));
    PopStack popped25;
    if (Equal(popped25,GetLocal(3))) {
      TraceOperation 038203 (Loadw (Var (Global 134)) (Var (Local 4)) (Local 5));
      Let b26 = M[007474];
      Let b27 = M[007475];
      Let b28 = M[Offset(Address(MakeHiLo(b26,b27)),Mul(2,GetLocal(4)))];
      Let b29 = M[Offset(Offset(Address(MakeHiLo(b26,b27)),Mul(2,GetLocal(4))),1)];
      SetLocal 5 MakeHiLo(b28,b29);
      TraceOperation 038207 (Store (Con 6) (Var (Local 4)));
      SetLocal 6 GetLocal(4);
      Jump: 038210
    } else {
      Jump: 038248
    }
  } else {
    Jump: 038253
  }
LocOp 038210:
  TraceOperation 038210 (Jg (Var (Local 6)) (Var (Local 2)) (Branch F (Dloc 038232)));
  if (GreaterThan(GetLocal(6),GetLocal(2))) {
    TraceOperation 038214 (Sub (Var (Local 6)) (Con 1) Sp);
    PushStack Sub(GetLocal(6),1);
    TraceOperation 038218 (Loadw (Var (Global 134)) (Var Sp) Sp);
    Let b1 = M[007474];
    Let b2 = M[007475];
    PopStack popped3;
    Let b4 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,popped3))];
    Let b5 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,popped3)),1)];
    PushStack MakeHiLo(b4,b5);
    TraceOperation 038222 (Storew (Var (Global 134)) (Var (Local 6)) (Var Sp));
    Let b6 = M[007474];
    Let b7 = M[007475];
    PopStack popped8;
    SetByte Offset(Address(MakeHiLo(b6,b7)),Mul(2,GetLocal(6))) HiByte(popped8);
    SetByte Offset(Offset(Address(MakeHiLo(b6,b7)),Mul(2,GetLocal(6))),1) LoByte(popped8);
    TraceOperation 038227 (Dec (Con 6));
    SetLocal 6 Sub(GetLocal(6),1);
    TraceOperation 038229 (Jump 038210);
    Jump: 038210
  } else {
    Jump: 038232
  }
LocOp 038232:
  TraceOperation 038232 (Storew (Var (Global 134)) (Var (Local 2)) (Var (Local 5)));
  Let b1 = M[007474];
  Let b2 = M[007475];
  SetByte Offset(Address(MakeHiLo(b1,b2)),Mul(2,GetLocal(2))) HiByte(GetLocal(5));
  SetByte Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,GetLocal(2))),1) LoByte(GetLocal(5));
  TraceOperation 038237 (Inc (Con 2));
  SetLocal 2 Add(GetLocal(2),1);
  TraceOperation 038239 (Je [Var (Local 2),Var (Global 135)] (Branch F (Dloc 038248)));
  Let b3 = M[007476];
  Let b4 = M[007477];
  if (Equal(GetLocal(2),MakeHiLo(b3,b4))) {
    TraceOperation 038243 (Loadw (Var (Global 134)) (Con 0) Sp);
    Let b5 = M[007474];
    Let b6 = M[007475];
    Let b7 = M[Offset(Address(MakeHiLo(b5,b6)),0)];
    Let b8 = M[Offset(Offset(Address(MakeHiLo(b5,b6)),0),1)];
    PushStack MakeHiLo(b7,b8);
    TraceOperation 038247 Ret_popped;
    PopStack popped9;
    PopFrame;
    PopReturnAddress return_address_10;
    SetResult popped9;
    JumpIndirect: (return) return_address_10
  } else {
    Jump: 038248
  }
LocOp 038248:
  TraceOperation 038248 (Inc (Con 4));
  SetLocal 4 Add(GetLocal(4),1);
  TraceOperation 038250 (Jump 038183);
  Jump: 038183
LocOp 038253:
  TraceOperation 038253 (Dec (Con 2));
  SetLocal 2 Sub(GetLocal(2),1);
  Jump: 038255
LocOp 038255:
  TraceOperation 038255 (Inc (Con 2));
  SetLocal 2 Add(GetLocal(2),1);
  TraceOperation 038257 (Jump 038124);
  Jump: 038124
LocOp 038260:
  TraceOperation 038260 (Loadw (Var (Global 134)) (Con 0) Sp);
  Let b1 = M[007474];
  Let b2 = M[007475];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),0)];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),0),1)];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 038264 Ret_popped;
  PopStack popped5;
  PopFrame;
  PopReturnAddress return_address_6;
  SetResult popped5;
  JumpIndirect: (return) return_address_6
--------------------------------------------------
LocRoutine 038268:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 038269
LocOp 038269:
  TraceOperation 038269 (Jz (Var (Local 1)) (Branch T (Dloc 038278)));
  if (IsZero(GetLocal(1))) {
    Jump: 038278
  } else {
    TraceOperation 038272 (Get_parent (Var (Local 1)) Sp);
    Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),6)];
    Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),6),1)];
    PushStack MakeHiLo(b1,b2);
    TraceOperation 038275 (Jz (Var Sp) (Branch F (Dloc 038279)));
    PopStack popped3;
    if (IsZero(popped3)) {
      Jump: 038278
    } else {
      Jump: 038279
    }
  }
LocOp 038278:
  TraceOperation 038278 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
LocOp 038279:
  TraceOperation 038279 (Je [Var (Local 4),Con 3] (Branch F (Dloc 038291)));
  if (Equal(GetLocal(4),3)) {
    TraceOperation 038283 (Get_parent (Var (Local 1)) Sp);
    Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),6)];
    Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),6),1)];
    PushStack MakeHiLo(b1,b2);
    TraceOperation 038286 (Get_child (Var Sp) Sp (Branch F (Dloc 038290)));
    PopStack popped3;
    Let b4 = M[Offset(Offset(000378,Mul(popped3,14)),10)];
    Let b5 = M[Offset(Offset(Offset(000378,Mul(popped3,14)),10),1)];
    PushStack MakeHiLo(b4,b5);
    if (IsZero(MakeHiLo(b4,b5))) {
      Jump: 038290
    } else {
      Jump: 038290
    }
  } else {
    Jump: 038291
  }
LocOp 038290:
  TraceOperation 038290 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 038291:
  TraceOperation 038291 (Je [Var (Local 4),Con 2] (Branch F (Dloc 038302)));
  if (Equal(GetLocal(4),2)) {
    TraceOperation 038295 (Call (Floc 038388) [Var (Local 1)] Sp);
    PushFrame;
    PushReturnAddress 038295;
    SetLocal 1 GetLocal(1);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 038389
  } else {
    Jump: 038302
  }
LocReturn 038295:
  PushStack call_result;
  TraceOperation 038301 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 038302:
  TraceOperation 038302 (Je [Var (Local 4),Con 1] (Branch F (Dloc 038310)));
  if (Equal(GetLocal(4),1)) {
    TraceOperation 038306 (Get_sibling (Var (Local 1)) (Local 1) (Branch F (Dloc 038310)));
    Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),8)];
    Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),8),1)];
    SetLocal 1 MakeHiLo(b1,b2);
    if (IsZero(MakeHiLo(b1,b2))) {
      Jump: 038310
    } else {
      Jump: 038310
    }
  } else {
    Jump: 038310
  }
LocOp 038310:
  TraceOperation 038310 (Jump 038317);
  Jump: 038317
--------------------------------------------------
LocRoutine 038314:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 038315
LocOp 038315:
  TraceOperation 038315 (Je [Con 66,Con 160] (Branch F (Dloc 038641)));
  Jump: 038641
--------------------------------------------------
LocRoutine 038378:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 038379
LocOp 038379:
  TraceOperation 038379 (Loadw (Con 69) (Con 140) (Global 239));
  Let b1 = M[000349];
  Let b2 = M[000350];
  SetByte 007684 b1;
  SetByte 007685 b2;
  TraceOperation 038383 New_line;
  GamePrint "\n";
  TraceOperation 038384 (Ret (Var (Local 1)));
  PopFrame;
  PopReturnAddress return_address_3;
  SetResult GetLocal(1);
  JumpIndirect: (return) return_address_3
--------------------------------------------------
LocRoutine 038420:
  MakeRoutineFrame 6;
  if (LessThanByte(num_actuals,6)) {
    SetLocal 6 0;
    if (LessThanByte(num_actuals,5)) {
      SetLocal 5 0;
      if (LessThanByte(num_actuals,4)) {
        SetLocal 4 0;
        if (LessThanByte(num_actuals,3)) {
          SetLocal 3 0;
          if (LessThanByte(num_actuals,2)) {
            SetLocal 2 0;
            if (LessThanByte(num_actuals,1)) {
              SetLocal 1 0;
            }
          }
        }
      }
    }
  }
  Jump: 038421
LocOp 038421:
  TraceOperation 038421 (Get_sibling (Var (Local 2)) (Local 2) (Branch F (Dloc 038425)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),8)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(2),14)),8),1)];
  SetLocal 2 MakeHiLo(b1,b2);
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 038425
  } else {
    Jump: 038425
  }
LocOp 038425:
  TraceOperation 038425 (Jz (Var (Local 2)) (Branch T (Dloc 038442)));
  if (IsZero(GetLocal(2))) {
    Jump: 038442
  } else {
    TraceOperation 038428 (Get_prop (Var (Local 2)) (Con 28) (Global 239));
    Let b1 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),12)];
    Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(2),14)),12),1)];
    Let b3 = M[Address(MakeHiLo(b1,b2))];
    Let loop_var4 = DeAddress(Offset(Address(MakeHiLo(b1,b2)),Add(Mul(2,Widen(b3)),1)));
    Label 5: {
      Let b6 = M[Address(loop_var4)];
      if (IsZeroByte(b6)) {
        Let b7 = M[000320];
        Let b8 = M[000321];
        SetByte 007684 b7;
        SetByte 007685 b8;
      } else {
        if (TestBit(b6,7)) {
          Let b9 = M[Offset(Address(loop_var4),1)];
          if (Equal(28,Widen(BwAnd(b6,63)))) {
            if (Equal(Widen(BwAnd(b9,63)),2)) {
              Let b10 = M[Offset(Address(loop_var4),2)];
              Let b11 = M[Offset(Offset(Address(loop_var4),2),1)];
              SetByte 007684 b10;
              SetByte 007685 b11;
            } else {
              Let b12 = M[Offset(Address(loop_var4),2)];
              SetByte 007684 HiByte(Widen(b12));
              SetByte 007685 LoByte(Widen(b12));
            }
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),2),Widen(BwAnd(b9,63))));
            Goto: Label 5
          }
        } else {
          if (TestBit(b6,6)) {
            if (Equal(28,Widen(BwAnd(b6,63)))) {
              Let b13 = M[Offset(Address(loop_var4),1)];
              Let b14 = M[Offset(Offset(Address(loop_var4),1),1)];
              SetByte 007684 b13;
              SetByte 007685 b14;
            } else {
              Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),2));
              Goto: Label 5
            }
          } else {
            if (Equal(28,Widen(BwAnd(b6,63)))) {
              Let b15 = M[Offset(Address(loop_var4),1)];
              SetByte 007684 HiByte(Widen(b15));
              SetByte 007685 LoByte(Widen(b15));
            } else {
              Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),1));
              Goto: Label 5
            }
          }
        }
      }
    }
    TraceOperation 038432 (Push (Var (Global 239)));
    Let b16 = M[007684];
    Let b17 = M[007685];
    PushStack MakeHiLo(b16,b17);
    TraceOperation 038435 (Je [Var Sp,Var (Local 3)] (Branch F (Dloc 038442)));
    PopStack popped18;
    if (Equal(popped18,GetLocal(3))) {
      TraceOperation 038439 (Jump 038421);
      Jump: 038421
    } else {
      Jump: 038442
    }
  }
LocOp 038442:
  TraceOperation 038442 (Jz (Var (Local 2)) (Branch F (Dloc 038447)));
  if (IsZero(GetLocal(2))) {
    TraceOperation 038445 (Ret (Var (Local 1)));
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult GetLocal(1);
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 038447
  }
LocOp 038447:
  TraceOperation 038447 (Get_sibling (Var (Local 2)) (Local 4) (Branch F (Dloc 038451)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),8)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(2),14)),8),1)];
  SetLocal 4 MakeHiLo(b1,b2);
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 038451
  } else {
    Jump: 038451
  }
LocOp 038451:
  TraceOperation 038451 (Jump 038458);
  Jump: 038458
--------------------------------------------------
LocRoutine 038456:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 038457
LocOp 038457:
  TraceOperation 038457 (Jl (Var (Global 144)) (Con 4) (Branch T (Dloc 038489)));
  Let b1 = M[007494];
  Let b2 = M[007495];
  if (LessThan(MakeHiLo(b1,b2),4)) {
    Jump: 038489
  } else {
    TraceOperation 038461 (Get_prop (Var (Local 4)) (Con 28) (Global 239));
    Let b3 = M[Offset(Offset(000378,Mul(GetLocal(4),14)),12)];
    Let b4 = M[Offset(Offset(Offset(000378,Mul(GetLocal(4),14)),12),1)];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    Let loop_var6 = DeAddress(Offset(Address(MakeHiLo(b3,b4)),Add(Mul(2,Widen(b5)),1)));
    Label 7: {
      Let b8 = M[Address(loop_var6)];
      if (IsZeroByte(b8)) {
        Let b9 = M[000320];
        Let b10 = M[000321];
        SetByte 007684 b9;
        SetByte 007685 b10;
      } else {
        if (TestBit(b8,7)) {
          Let b11 = M[Offset(Address(loop_var6),1)];
          if (Equal(28,Widen(BwAnd(b8,63)))) {
            if (Equal(Widen(BwAnd(b11,63)),2)) {
              Let b12 = M[Offset(Address(loop_var6),2)];
              Let b13 = M[Offset(Offset(Address(loop_var6),2),1)];
              SetByte 007684 b12;
              SetByte 007685 b13;
            } else {
              Let b14 = M[Offset(Address(loop_var6),2)];
              SetByte 007684 HiByte(Widen(b14));
              SetByte 007685 LoByte(Widen(b14));
            }
          } else {
            Assign loop_var6 = DeAddress(Offset(Offset(Address(loop_var6),2),Widen(BwAnd(b11,63))));
            Goto: Label 7
          }
        } else {
          if (TestBit(b8,6)) {
            if (Equal(28,Widen(BwAnd(b8,63)))) {
              Let b15 = M[Offset(Address(loop_var6),1)];
              Let b16 = M[Offset(Offset(Address(loop_var6),1),1)];
              SetByte 007684 b15;
              SetByte 007685 b16;
            } else {
              Assign loop_var6 = DeAddress(Offset(Offset(Address(loop_var6),1),2));
              Goto: Label 7
            }
          } else {
            if (Equal(28,Widen(BwAnd(b8,63)))) {
              Let b17 = M[Offset(Address(loop_var6),1)];
              SetByte 007684 HiByte(Widen(b17));
              SetByte 007685 LoByte(Widen(b17));
            } else {
              Assign loop_var6 = DeAddress(Offset(Offset(Address(loop_var6),1),1));
              Goto: Label 7
            }
          }
        }
      }
    }
    TraceOperation 038465 (Push (Var (Global 239)));
    Let b18 = M[007684];
    Let b19 = M[007685];
    PushStack MakeHiLo(b18,b19);
    TraceOperation 038468 (Je [Var Sp,Var (Local 3)] (Branch F (Dloc 038486)));
    PopStack popped20;
    if (Equal(popped20,GetLocal(3))) {
      TraceOperation 038472 (Get_parent (Var (Local 1)) Sp);
      Let b21 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),6)];
      Let b22 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),6),1)];
      PushStack MakeHiLo(b21,b22);
      TraceOperation 038475 (Call (Floc 040720) [Var Sp,Con 28,Var (Local 3)] (Local 1));
      PopStack popped23;
      PushFrame;
      PushReturnAddress 038475;
      SetLocal 1 popped23;
      SetLocal 2 28;
      SetLocal 3 GetLocal(3);
      MakeRoutineFrame 3;
      Jump: 040721
    } else {
      Jump: 038486
    }
  }
LocReturn 038475:
  SetLocal 1 call_result;
  TraceOperation 038483 (Jump 038389);
  Jump: 038389
LocOp 038486:
  TraceOperation 038486 (Jump 038454);
  Jump: 038454
LocOp 038489:
  TraceOperation 038489 (Jump 038395);
  Jump: 038395
--------------------------------------------------
LocRoutine 038496:
  MakeRoutineFrame 7;
  if (LessThanByte(num_actuals,7)) {
    SetLocal 7 0;
    if (LessThanByte(num_actuals,6)) {
      SetLocal 6 0;
      if (LessThanByte(num_actuals,5)) {
        SetLocal 5 0;
        if (LessThanByte(num_actuals,4)) {
          SetLocal 4 0;
          if (LessThanByte(num_actuals,3)) {
            SetLocal 3 0;
            if (LessThanByte(num_actuals,2)) {
              SetLocal 2 0;
              if (LessThanByte(num_actuals,1)) {
                SetLocal 1 0;
              }
            }
          }
        }
      }
    }
  }
  Jump: 038497
LocOp 038497:
  TraceOperation 038497 (Push (Var (Global 95)));
  Let b1 = M[007396];
  Let b2 = M[007397];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 038500 (Push (Var (Global 93)));
  Let b3 = M[007392];
  Let b4 = M[007393];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 038503 (Push (Var (Global 94)));
  Let b5 = M[007394];
  Let b6 = M[007395];
  PushStack MakeHiLo(b5,b6);
  TraceOperation 038506 (Push (Var (Global 99)));
  Let b7 = M[007404];
  Let b8 = M[007405];
  PushStack MakeHiLo(b7,b8);
  TraceOperation 038509 (Jz (Var (Local 5)) (Branch T (Dloc 038518)));
  if (IsZero(GetLocal(5))) {
    Jump: 038518
  } else {
    TraceOperation 038512 (Store (Con 111) (Var (Local 5)));
    SetByte 007396 HiByte(GetLocal(5));
    SetByte 007397 LoByte(GetLocal(5));
    TraceOperation 038515 (Jump 038523);
    Jump: 038523
  }
LocOp 038518:
  TraceOperation 038518 (Store (Con 111) (Con 9567));
  SetByte 007396 37;
  SetByte 007397 95;
  Jump: 038523
LocOp 038523:
  TraceOperation 038523 (Store (Con 109) (Var (Local 2)));
  SetByte 007392 HiByte(GetLocal(2));
  SetByte 007393 LoByte(GetLocal(2));
  TraceOperation 038526 (Store (Con 110) (Var (Local 3)));
  SetByte 007394 HiByte(GetLocal(3));
  SetByte 007395 LoByte(GetLocal(3));
  TraceOperation 038529 (Store (Con 115) (Con 0));
  SetByte 007404 0;
  SetByte 007405 0;
  TraceOperation 038532 (And (Var (Local 2)) (Con 8192) Sp);
  PushStack And(GetLocal(2),8192);
  TraceOperation 038538 (Jz (Var Sp) (Branch T (Dloc 038544)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 038544
  } else {
    TraceOperation 038541 (Store (Con 115) (Con 1));
    SetByte 007404 0;
    SetByte 007405 1;
    Jump: 038544
  }
LocOp 038544:
  TraceOperation 038544 (Store (Con 6) (Con 1));
  SetLocal 6 1;
  Jump: 038547
LocOp 038547:
  TraceOperation 038547 (Call (Floc 026172) [Var (Local 6),Con 2] Sp);
  PushFrame;
  PushReturnAddress 038547;
  SetLocal 1 GetLocal(6);
  SetLocal 2 2;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 038547:
  PushStack call_result;
  TraceOperation 038554 (Jz (Var Sp) (Branch T (Dloc 038573)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 038573
  } else {
    TraceOperation 038557 (Set_attr (Var (Local 6)) (Con 29));
    Let b2 = M[Offset(Offset(000378,Mul(GetLocal(6),14)),3)];
    SetByte Offset(Offset(000378,Mul(GetLocal(6),14)),3) SetBit(b2,2);
    TraceOperation 038560 (Jz (Var (Global 136)) (Branch T (Dloc 038573)));
    Let b3 = M[007478];
    Let b4 = M[007479];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 038573
    } else {
      TraceOperation 038563 (Call (Fvar (Global 136)) [Var (Local 6)] Sp);
      Let b5 = M[007478];
      Let b6 = M[007479];
      if (IsZeroAddress(PackedAddress Z5(MakeHiLo(b5,b6)))) {
        PushStack 0;
        Jump: 038567
      } else {
        PushFrame;
        PushReturnAddress 038563;
        SetLocal 1 GetLocal(6);
        SetNumberActuals 1;
        JumpIndirect: (routine) PackedAddress Z5(MakeHiLo(b5,b6))
      }
    }
  }
LocReturn 038563:
  PushStack call_result;
  Jump: 038567
LocOp 038567:
  TraceOperation 038567 (Jz (Var Sp) (Branch F (Dloc 038573)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 038570 (Clear_attr (Var (Local 6)) (Con 29));
    Let b2 = M[Offset(Offset(000378,Mul(GetLocal(6),14)),3)];
    SetByte Offset(Offset(000378,Mul(GetLocal(6),14)),3) ClearBit(b2,2);
    Jump: 038573
  } else {
    Jump: 038573
  }
LocOp 038573:
  TraceOperation 038573 (Inc (Con 6));
  SetLocal 6 Add(GetLocal(6),1);
  TraceOperation 038575 (Jg (Var (Local 6)) (Con 72) (Branch T (Dloc 038584)));
  if (GreaterThan(GetLocal(6),72)) {
    Jump: 038584
  } else {
    TraceOperation 038581 (Jump 038547);
    Jump: 038547
  }
LocOp 038584:
  TraceOperation 038584 (Call (Fvar (Global 95)) [Var (Local 1),Var (Local 3),Con 0,Con 3] (Local 1));
  Let b1 = M[007396];
  Let b2 = M[007397];
  if (IsZeroAddress(PackedAddress Z5(MakeHiLo(b1,b2)))) {
    SetLocal 1 0;
    Jump: 038593
  } else {
    PushFrame;
    PushReturnAddress 038584;
    SetLocal 1 GetLocal(1);
    SetLocal 2 GetLocal(3);
    SetLocal 3 0;
    SetLocal 4 3;
    SetNumberActuals 4;
    JumpIndirect: (routine) PackedAddress Z5(MakeHiLo(b1,b2))
  }
LocReturn 038584:
  SetLocal 1 call_result;
  Jump: 038593
LocOp 038593:
  TraceOperation 038593 (Jz (Var (Local 1)) (Branch F (Dloc 038610)));
  if (IsZero(GetLocal(1))) {
    TraceOperation 038596 (Print_paddr (Con 28510));
    Note "<static Gettext address>";
    GamePrint "nothing";
    TraceOperation 038599 (And (Var (Local 2)) (Con 1) Sp);
    PushStack And(GetLocal(2),1);
    TraceOperation 038603 (Jz (Var Sp) (Branch T (Dloc 038607)));
    PopStack popped1;
    if (IsZero(popped1)) {
      Jump: 038607
    } else {
      TraceOperation 038606 New_line;
      GamePrint "\n";
      Jump: 038607
    }
  } else {
    Jump: 038610
  }
LocOp 038607:
  TraceOperation 038607 (Jump 038667);
  Jump: 038667
LocOp 038610:
  TraceOperation 038610 (Jz (Var (Local 4)) (Branch F (Dloc 038616)));
  if (IsZero(GetLocal(4))) {
    TraceOperation 038613 (Jz (Var (Local 5)) (Branch T (Dloc 038629)));
    if (IsZero(GetLocal(5))) {
      Jump: 038629
    } else {
      Jump: 038616
    }
  } else {
    Jump: 038616
  }
LocOp 038616:
  TraceOperation 038616 (CallN (Floc 039116) [Var (Local 1),Var (Global 94),Con 1]);
  Let b1 = M[007394];
  Let b2 = M[007395];
  PushFrame;
  PushReturnAddress 038616;
  SetLocal 1 GetLocal(1);
  SetLocal 2 MakeHiLo(b1,b2);
  SetLocal 3 1;
  MakeRoutineFrame 15;
  SetLocal 15 0;
  SetLocal 14 0;
  SetLocal 13 0;
  SetLocal 12 0;
  SetLocal 11 0;
  SetLocal 10 0;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 039117
LocReturn 038616:
  TraceOperation 038623 (Store (Con 20) (Con 1));
  SetByte 007214 0;
  SetByte 007215 1;
  TraceOperation 038626 (Jump 038667);
  Jump: 038667
LocOp 038629:
  TraceOperation 038629 (Store (Con 7) (Con 1));
  SetLocal 7 1;
  Jump: 038632
LocOp 038632:
  TraceOperation 038632 (Call (Floc 111316) [Var (Local 7),Con 28] Sp);
  PushFrame;
  PushReturnAddress 038632;
  SetLocal 1 GetLocal(7);
  SetLocal 2 28;
  MakeRoutineFrame 2;
  Jump: 111317
LocReturn 038632:
  PushStack call_result;
  TraceOperation 038639 (Jz (Var Sp) (Branch T (Dloc 038647)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 038647
  } else {
    TraceOperation 038642 (Put_prop (Var (Local 7)) (Con 28) (Con 0));
    Let b2 = M[Offset(Offset(000378,Mul(GetLocal(7),14)),12)];
    Let b3 = M[Offset(Offset(Offset(000378,Mul(GetLocal(7),14)),12),1)];
    Let b4 = M[Address(MakeHiLo(b2,b3))];
    Let loop_var5 = DeAddress(Offset(Address(MakeHiLo(b2,b3)),Add(Mul(2,Widen(b4)),1)));
    Label 6: {
      Let b7 = M[Address(loop_var5)];
      if (IsZeroByte(b7)) {
        Error: ("putProp",28)
      } else {
        if (TestBit(b7,7)) {
          Let b8 = M[Offset(Address(loop_var5),1)];
          if (Equal(28,Widen(BwAnd(b7,63)))) {
            if (Equal(Widen(BwAnd(b8,63)),2)) {
              SetByte Offset(Address(loop_var5),2) 0;
              SetByte Offset(Offset(Address(loop_var5),2),1) 0;
            } else {
              SetByte Offset(Address(loop_var5),2) 0;
            }
          } else {
            Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),2),Widen(BwAnd(b8,63))));
            Goto: Label 6
          }
        } else {
          if (TestBit(b7,6)) {
            if (Equal(28,Widen(BwAnd(b7,63)))) {
              SetByte Offset(Address(loop_var5),1) 0;
              SetByte Offset(Offset(Address(loop_var5),1),1) 0;
            } else {
              Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),1),2));
              Goto: Label 6
            }
          } else {
            if (Equal(28,Widen(BwAnd(b7,63)))) {
              SetByte Offset(Address(loop_var5),1) 0;
            } else {
              Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),1),1));
              Goto: Label 6
            }
          }
        }
      }
    }
    Jump: 038647
  }
LocOp 038647:
  TraceOperation 038647 (Inc (Con 7));
  SetLocal 7 Add(GetLocal(7),1);
  TraceOperation 038649 (Jg (Var (Local 7)) (Con 72) (Branch T (Dloc 038658)));
  if (GreaterThan(GetLocal(7),72)) {
    Jump: 038658
  } else {
    TraceOperation 038655 (Jump 038632);
    Jump: 038632
  }
LocOp 038658:
  TraceOperation 038658 (Get_parent (Var (Local 1)) Sp);
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),6)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),6),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 038661 (CallN (Floc 078824) [Con 4,Var Sp]);
  PopStack popped3;
  PushFrame;
  PushReturnAddress 038661;
  SetLocal 1 4;
  SetLocal 2 popped3;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 078825
LocReturn 038661:
  Jump: 038667
LocOp 038667:
  TraceOperation 038667 (Pull (Con 115));
  PopStack popped1;
  SetByte 007404 HiByte(popped1);
  SetByte 007405 LoByte(popped1);
  TraceOperation 038670 (Pull (Con 110));
  PopStack popped2;
  SetByte 007394 HiByte(popped2);
  SetByte 007395 LoByte(popped2);
  TraceOperation 038673 (Pull (Con 109));
  PopStack popped3;
  SetByte 007392 HiByte(popped3);
  SetByte 007393 LoByte(popped3);
  TraceOperation 038676 (Pull (Con 111));
  PopStack popped4;
  SetByte 007396 HiByte(popped4);
  SetByte 007397 LoByte(popped4);
  TraceOperation 038679 Rtrue;
  PopFrame;
  PopReturnAddress return_address_5;
  SetResult 1;
  JumpIndirect: (return) return_address_5
--------------------------------------------------
LocRoutine 038680:
  MakeRoutineFrame 0;
  Jump: 038681
LocOp 038681:
  TraceOperation 038681 (Get_child (Var (Global 11)) Sp (Branch F (Dloc 038685)));
  Let b1 = M[007228];
  Let b2 = M[007229];
  Let b3 = M[Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),10)];
  Let b4 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),10),1)];
  PushStack MakeHiLo(b3,b4);
  if (IsZero(MakeHiLo(b3,b4))) {
    Jump: 038685
  } else {
    Jump: 038685
  }
LocOp 038685:
  TraceOperation 038685 (CallN (Floc 038496) [Var Sp,Var (Global 93),Var (Global 94),Con 1]);
  PopStack popped1;
  Let b2 = M[007392];
  Let b3 = M[007393];
  Let b4 = M[007394];
  Let b5 = M[007395];
  PushFrame;
  PushReturnAddress 038685;
  SetLocal 1 popped1;
  SetLocal 2 MakeHiLo(b2,b3);
  SetLocal 3 MakeHiLo(b4,b5);
  SetLocal 4 1;
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  Jump: 038497
LocReturn 038685:
  TraceOperation 038694 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 038702:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 038703
LocOp 038703:
  TraceOperation 038703 (Clear_attr (Var (Global 210)) (Con 167));
  Let b1 = M[007626];
  Let b2 = M[007627];
  Let b3 = M[Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),20)];
  SetByte Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),20) ClearBit(b3,0);
  TraceOperation 038706 (Dec_chk (Con 6) (Con 0) (Branch T (Dloc 044091)));
  if (LessThanEqual(GetLocal(6),0)) {
    SetLocal 6 Sub(GetLocal(6),1);
  } else {
    SetLocal 6 Sub(GetLocal(6),1);
  }
  TraceOperation 038711 (Jump 038700);
  Jump: 038700
--------------------------------------------------
LocRoutine 038716:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 038717
LocOp 038717:
  TraceOperation 038717 (Store (Con 6) (Var (Local 1)));
  SetLocal 6 GetLocal(1);
  TraceOperation 038720 (Store (Con 7) (Con 0));
  SetLocal 7 0;
  TraceOperation 038723 (Jump 038737);
  Jump: 038737
--------------------------------------------------
LocRoutine 038860:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 038861
LocOp 038861:
  TraceOperation 038861 (Get_prop (Var (Local 1)) (Con 31) (Global 239));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),12)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),12),1)];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let loop_var4 = DeAddress(Offset(Address(MakeHiLo(b1,b2)),Add(Mul(2,Widen(b3)),1)));
  Label 5: {
    Let b6 = M[Address(loop_var4)];
    if (IsZeroByte(b6)) {
      Let b7 = M[000326];
      Let b8 = M[000327];
      SetByte 007684 b7;
      SetByte 007685 b8;
    } else {
      if (TestBit(b6,7)) {
        Let b9 = M[Offset(Address(loop_var4),1)];
        if (Equal(31,Widen(BwAnd(b6,63)))) {
          if (Equal(Widen(BwAnd(b9,63)),2)) {
            Let b10 = M[Offset(Address(loop_var4),2)];
            Let b11 = M[Offset(Offset(Address(loop_var4),2),1)];
            SetByte 007684 b10;
            SetByte 007685 b11;
          } else {
            Let b12 = M[Offset(Address(loop_var4),2)];
            SetByte 007684 HiByte(Widen(b12));
            SetByte 007685 LoByte(Widen(b12));
          }
        } else {
          Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),2),Widen(BwAnd(b9,63))));
          Goto: Label 5
        }
      } else {
        if (TestBit(b6,6)) {
          if (Equal(31,Widen(BwAnd(b6,63)))) {
            Let b13 = M[Offset(Address(loop_var4),1)];
            Let b14 = M[Offset(Offset(Address(loop_var4),1),1)];
            SetByte 007684 b13;
            SetByte 007685 b14;
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),2));
            Goto: Label 5
          }
        } else {
          if (Equal(31,Widen(BwAnd(b6,63)))) {
            Let b15 = M[Offset(Address(loop_var4),1)];
            SetByte 007684 HiByte(Widen(b15));
            SetByte 007685 LoByte(Widen(b15));
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),1));
            Goto: Label 5
          }
        }
      }
    }
  }
  TraceOperation 038865 (Push (Var (Global 239)));
  Let b16 = M[007684];
  Let b17 = M[007685];
  PushStack MakeHiLo(b16,b17);
  TraceOperation 038868 (Jz (Var Sp) (Branch T Dfalse));
  PopStack popped18;
  if (IsZero(popped18)) {
    PopFrame;
    PopReturnAddress return_address_19;
    SetResult 0;
    JumpIndirect: (return) return_address_19
  } else {
    TraceOperation 038871 (Get_prop (Var (Local 2)) (Con 31) (Global 239));
    Let b20 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),12)];
    Let b21 = M[Offset(Offset(Offset(000378,Mul(GetLocal(2),14)),12),1)];
    Let b22 = M[Address(MakeHiLo(b20,b21))];
    Let loop_var23 = DeAddress(Offset(Address(MakeHiLo(b20,b21)),Add(Mul(2,Widen(b22)),1)));
    Label 24: {
      Let b25 = M[Address(loop_var23)];
      if (IsZeroByte(b25)) {
        Let b26 = M[000326];
        Let b27 = M[000327];
        SetByte 007684 b26;
        SetByte 007685 b27;
      } else {
        if (TestBit(b25,7)) {
          Let b28 = M[Offset(Address(loop_var23),1)];
          if (Equal(31,Widen(BwAnd(b25,63)))) {
            if (Equal(Widen(BwAnd(b28,63)),2)) {
              Let b29 = M[Offset(Address(loop_var23),2)];
              Let b30 = M[Offset(Offset(Address(loop_var23),2),1)];
              SetByte 007684 b29;
              SetByte 007685 b30;
            } else {
              Let b31 = M[Offset(Address(loop_var23),2)];
              SetByte 007684 HiByte(Widen(b31));
              SetByte 007685 LoByte(Widen(b31));
            }
          } else {
            Assign loop_var23 = DeAddress(Offset(Offset(Address(loop_var23),2),Widen(BwAnd(b28,63))));
            Goto: Label 24
          }
        } else {
          if (TestBit(b25,6)) {
            if (Equal(31,Widen(BwAnd(b25,63)))) {
              Let b32 = M[Offset(Address(loop_var23),1)];
              Let b33 = M[Offset(Offset(Address(loop_var23),1),1)];
              SetByte 007684 b32;
              SetByte 007685 b33;
            } else {
              Assign loop_var23 = DeAddress(Offset(Offset(Address(loop_var23),1),2));
              Goto: Label 24
            }
          } else {
            if (Equal(31,Widen(BwAnd(b25,63)))) {
              Let b34 = M[Offset(Address(loop_var23),1)];
              SetByte 007684 HiByte(Widen(b34));
              SetByte 007685 LoByte(Widen(b34));
            } else {
              Assign loop_var23 = DeAddress(Offset(Offset(Address(loop_var23),1),1));
              Goto: Label 24
            }
          }
        }
      }
    }
    TraceOperation 038875 (Push (Var (Global 239)));
    Let b35 = M[007684];
    Let b36 = M[007685];
    PushStack MakeHiLo(b35,b36);
    TraceOperation 038878 (Jz (Var Sp) (Branch T Dfalse));
    PopStack popped37;
    if (IsZero(popped37)) {
      PopFrame;
      PopReturnAddress return_address_38;
      SetResult 0;
      JumpIndirect: (return) return_address_38
    } else {
      TraceOperation 038881 (Get_child (Var (Local 1)) Sp (Branch F (Dloc 038885)));
      Let b39 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),10)];
      Let b40 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),10),1)];
      PushStack MakeHiLo(b39,b40);
      if (IsZero(MakeHiLo(b39,b40))) {
        Jump: 038885
      } else {
        Jump: 038885
      }
    }
  }
LocOp 038885:
  TraceOperation 038885 (Jz (Var Sp) (Branch T (Dloc 038897)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 038897
  } else {
    TraceOperation 038888 (Call (Floc 038992) [Var (Local 1)] Sp);
    PushFrame;
    PushReturnAddress 038888;
    SetLocal 1 GetLocal(1);
    MakeRoutineFrame 1;
    Jump: 038993
  }
LocReturn 038888:
  PushStack call_result;
  TraceOperation 038894 (Jz (Var Sp) (Branch F Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 038897
  } else {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  }
LocOp 038897:
  TraceOperation 038897 (Get_child (Var (Local 2)) Sp (Branch F (Dloc 038901)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),10)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(2),14)),10),1)];
  PushStack MakeHiLo(b1,b2);
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 038901
  } else {
    Jump: 038901
  }
LocOp 038901:
  TraceOperation 038901 (Jz (Var Sp) (Branch T (Dloc 038913)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 038913
  } else {
    TraceOperation 038904 (Call (Floc 038992) [Var (Local 2)] Sp);
    PushFrame;
    PushReturnAddress 038904;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 1;
    Jump: 038993
  }
LocReturn 038904:
  PushStack call_result;
  TraceOperation 038910 (Jz (Var Sp) (Branch F Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 038913
  } else {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  }
LocOp 038913:
  TraceOperation 038913 (And (Var (Global 93)) (Con 132) Sp);
  Let b1 = M[007392];
  Let b2 = M[007393];
  PushStack And(MakeHiLo(b1,b2),132);
  TraceOperation 038917 (Jz (Var Sp) (Branch T (Dloc 038984)));
  PopStack popped3;
  if (IsZero(popped3)) {
    Jump: 038984
  } else {
    TraceOperation 038921 (Test_attr (Var (Local 1)) (Con 22) (Branch T (Dloc 038929)));
    Let b4 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),2)];
    if (TestBit(b4,1)) {
      Jump: 038929
    } else {
      TraceOperation 038925 (Test_attr (Var (Local 2)) (Con 22) (Branch T Dfalse));
      Let b5 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),2)];
      if (TestBit(b5,1)) {
        PopFrame;
        PopReturnAddress return_address_6;
        SetResult 0;
        JumpIndirect: (return) return_address_6
      } else {
        Jump: 038929
      }
    }
  }
LocOp 038929:
  TraceOperation 038929 (Test_attr (Var (Local 2)) (Con 22) (Branch T (Dloc 038937)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),2)];
  if (TestBit(b1,1)) {
    Jump: 038937
  } else {
    TraceOperation 038933 (Test_attr (Var (Local 1)) (Con 22) (Branch T Dfalse));
    Let b2 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),2)];
    if (TestBit(b2,1)) {
      PopFrame;
      PopReturnAddress return_address_3;
      SetResult 0;
      JumpIndirect: (return) return_address_3
    } else {
      Jump: 038937
    }
  }
LocOp 038937:
  TraceOperation 038937 (Test_attr (Var (Local 1)) (Con 8) (Branch T (Dloc 038945)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),1)];
  if (TestBit(b1,7)) {
    Jump: 038945
  } else {
    TraceOperation 038941 (Test_attr (Var (Local 2)) (Con 8) (Branch T Dfalse));
    Let b2 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),1)];
    if (TestBit(b2,7)) {
      PopFrame;
      PopReturnAddress return_address_3;
      SetResult 0;
      JumpIndirect: (return) return_address_3
    } else {
      Jump: 038945
    }
  }
LocOp 038945:
  TraceOperation 038945 (Test_attr (Var (Local 2)) (Con 8) (Branch T (Dloc 038953)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),1)];
  if (TestBit(b1,7)) {
    Jump: 038953
  } else {
    TraceOperation 038949 (Test_attr (Var (Local 1)) (Con 8) (Branch T Dfalse));
    Let b2 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),1)];
    if (TestBit(b2,7)) {
      PopFrame;
      PopReturnAddress return_address_3;
      SetResult 0;
      JumpIndirect: (return) return_address_3
    } else {
      Jump: 038953
    }
  }
LocOp 038953:
  TraceOperation 038953 (Test_attr (Var (Local 1)) (Con 4) (Branch F (Dloc 038980)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),0)];
  if (TestBit(b1,3)) {
    TraceOperation 038957 (Test_attr (Var (Local 2)) (Con 4) (Branch F Dfalse));
    Let b2 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),0)];
    if (TestBit(b2,3)) {
      TraceOperation 038961 (Test_attr (Var (Local 1)) (Con 13) (Branch F (Dloc 038969)));
      Let b3 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),1)];
      if (TestBit(b3,2)) {
        TraceOperation 038965 (Test_attr (Var (Local 2)) (Con 13) (Branch F Dfalse));
        Let b4 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),1)];
        if (TestBit(b4,2)) {
          Jump: 038969
        } else {
          PopFrame;
          PopReturnAddress return_address_5;
          SetResult 0;
          JumpIndirect: (return) return_address_5
        }
      } else {
        Jump: 038969
      }
    } else {
      PopFrame;
      PopReturnAddress return_address_6;
      SetResult 0;
      JumpIndirect: (return) return_address_6
    }
  } else {
    Jump: 038980
  }
LocOp 038969:
  TraceOperation 038969 (Test_attr (Var (Local 2)) (Con 13) (Branch F (Dloc 038977)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),1)];
  if (TestBit(b1,2)) {
    TraceOperation 038973 (Test_attr (Var (Local 1)) (Con 13) (Branch F Dfalse));
    Let b2 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),1)];
    if (TestBit(b2,2)) {
      Jump: 038977
    } else {
      PopFrame;
      PopReturnAddress return_address_3;
      SetResult 0;
      JumpIndirect: (return) return_address_3
    }
  } else {
    Jump: 038977
  }
LocOp 038977:
  TraceOperation 038977 (Jump 038984);
  Jump: 038984
LocOp 038980:
  TraceOperation 038980 (Test_attr (Var (Local 2)) (Con 4) (Branch T Dfalse));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),0)];
  if (TestBit(b1,3)) {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  } else {
    Jump: 038984
  }
LocOp 038984:
  TraceOperation 038984 (Call (Floc 049176) [Var (Local 1),Var (Local 2)] Sp);
  PushFrame;
  PushReturnAddress 038984;
  SetLocal 1 GetLocal(1);
  SetLocal 2 GetLocal(2);
  MakeRoutineFrame 9;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 049177
LocReturn 038984:
  PushStack call_result;
  TraceOperation 038991 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 038992:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 038993
LocOp 038993:
  TraceOperation 038993 (And (Var (Global 93)) (Con 32) Sp);
  Let b1 = M[007392];
  Let b2 = M[007393];
  PushStack And(MakeHiLo(b1,b2),32);
  TraceOperation 038997 (Jz (Var Sp) (Branch F Dtrue));
  PopStack popped3;
  if (IsZero(popped3)) {
    TraceOperation 039000 (And (Var (Global 93)) (Con 16) Sp);
    Let b4 = M[007392];
    Let b5 = M[007393];
    PushStack And(MakeHiLo(b4,b5),16);
    TraceOperation 039004 (Jz (Var Sp) (Branch T Dfalse));
    PopStack popped6;
    if (IsZero(popped6)) {
      PopFrame;
      PopReturnAddress return_address_7;
      SetResult 0;
      JumpIndirect: (return) return_address_7
    } else {
      TraceOperation 039007 (Test_attr (Var (Local 1)) (Con 17) (Branch T Dtrue));
      Let b8 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),2)];
      if (TestBit(b8,6)) {
        PopFrame;
        PopReturnAddress return_address_9;
        SetResult 1;
        JumpIndirect: (return) return_address_9
      } else {
        TraceOperation 039011 (Test_attr (Var (Local 1)) (Con 4) (Branch F (Dloc 039023)));
        Let b10 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),0)];
        if (TestBit(b10,3)) {
          TraceOperation 039015 (Test_attr (Var (Local 1)) (Con 13) (Branch T Dtrue));
          Let b11 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),1)];
          if (TestBit(b11,2)) {
            PopFrame;
            PopReturnAddress return_address_12;
            SetResult 1;
            JumpIndirect: (return) return_address_12
          } else {
            TraceOperation 039019 (Test_attr (Var (Local 1)) (Con 20) (Branch T Dtrue));
            Let b13 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),2)];
            if (TestBit(b13,3)) {
              PopFrame;
              PopReturnAddress return_address_14;
              SetResult 1;
              JumpIndirect: (return) return_address_14
            } else {
              Jump: 039023
            }
          }
        } else {
          Jump: 039023
        }
      }
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_15;
    SetResult 1;
    JumpIndirect: (return) return_address_15
  }
LocOp 039023:
  TraceOperation 039023 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 039024:
  MakeRoutineFrame 11;
  if (LessThanByte(num_actuals,11)) {
    SetLocal 11 0;
    if (LessThanByte(num_actuals,10)) {
      SetLocal 10 0;
      if (LessThanByte(num_actuals,9)) {
        SetLocal 9 0;
        if (LessThanByte(num_actuals,8)) {
          SetLocal 8 0;
          if (LessThanByte(num_actuals,7)) {
            SetLocal 7 0;
            if (LessThanByte(num_actuals,6)) {
              SetLocal 6 0;
              if (LessThanByte(num_actuals,5)) {
                SetLocal 5 0;
                if (LessThanByte(num_actuals,4)) {
                  SetLocal 4 0;
                  if (LessThanByte(num_actuals,3)) {
                    SetLocal 3 0;
                    if (LessThanByte(num_actuals,2)) {
                      SetLocal 2 0;
                      if (LessThanByte(num_actuals,1)) {
                        SetLocal 1 0;
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  Jump: 039025
LocOp 039025:
  TraceOperation 039025 (Store (Con 6) (Var (Local 2)));
  SetLocal 6 GetLocal(2);
  TraceOperation 039028 (Store (Con 7) (Con 1));
  SetLocal 7 1;
  TraceOperation 039031 (Store (Con 8) (Var (Local 1)));
  SetLocal 8 GetLocal(1);
  TraceOperation 039034 (Store (Con 9) (Con 0));
  SetLocal 9 0;
  Jump: 039037
LocOp 039037:
  TraceOperation 039037 (Jg (Var (Local 7)) (Var (Local 2)) (Branch T (Dloc 039112)));
  if (GreaterThan(GetLocal(7),GetLocal(2))) {
    Jump: 039112
  } else {
    Jump: 039042
  }
LocOp 039042:
  TraceOperation 039042 (Loadb (Var (Local 4)) (Var (Local 9)) Sp);
  Let b1 = M[Offset(Address(GetLocal(4)),GetLocal(9))];
  PushStack Widen(b1);
  TraceOperation 039046 (Je [Var Sp,Var (Local 7)] (Branch T (Dloc 039064)));
  PopStack popped2;
  if (Equal(popped2,GetLocal(7))) {
    Jump: 039064
  } else {
    TraceOperation 039050 (Inc (Con 9));
    SetLocal 9 Add(GetLocal(9),1);
    TraceOperation 039052 (Call (Fvar (Global 95)) [Var (Local 8),Var (Local 3),Var (Global 96),Con 1] (Local 8));
    Let b3 = M[007396];
    Let b4 = M[007397];
    if (IsZeroAddress(PackedAddress Z5(MakeHiLo(b3,b4)))) {
      SetLocal 8 0;
      Jump: 039061
    } else {
      Let b5 = M[007398];
      Let b6 = M[007399];
      PushFrame;
      PushReturnAddress 039052;
      SetLocal 1 GetLocal(8);
      SetLocal 2 GetLocal(3);
      SetLocal 3 MakeHiLo(b5,b6);
      SetLocal 4 1;
      SetNumberActuals 4;
      JumpIndirect: (routine) PackedAddress Z5(MakeHiLo(b3,b4))
    }
  }
LocReturn 039052:
  SetLocal 8 call_result;
  Jump: 039061
LocOp 039061:
  TraceOperation 039061 (Jump 039042);
  Jump: 039042
LocOp 039064:
  TraceOperation 039064 (Jz (Var (Local 8)) (Branch T (Dloc 039107)));
  if (IsZero(GetLocal(8))) {
    Jump: 039107
  } else {
    TraceOperation 039067 (Get_prop (Var (Local 8)) (Con 28) (Global 239));
    Let b1 = M[Offset(Offset(000378,Mul(GetLocal(8),14)),12)];
    Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(8),14)),12),1)];
    Let b3 = M[Address(MakeHiLo(b1,b2))];
    Let loop_var4 = DeAddress(Offset(Address(MakeHiLo(b1,b2)),Add(Mul(2,Widen(b3)),1)));
    Label 5: {
      Let b6 = M[Address(loop_var4)];
      if (IsZeroByte(b6)) {
        Let b7 = M[000320];
        Let b8 = M[000321];
        SetByte 007684 b7;
        SetByte 007685 b8;
      } else {
        if (TestBit(b6,7)) {
          Let b9 = M[Offset(Address(loop_var4),1)];
          if (Equal(28,Widen(BwAnd(b6,63)))) {
            if (Equal(Widen(BwAnd(b9,63)),2)) {
              Let b10 = M[Offset(Address(loop_var4),2)];
              Let b11 = M[Offset(Offset(Address(loop_var4),2),1)];
              SetByte 007684 b10;
              SetByte 007685 b11;
            } else {
              Let b12 = M[Offset(Address(loop_var4),2)];
              SetByte 007684 HiByte(Widen(b12));
              SetByte 007685 LoByte(Widen(b12));
            }
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),2),Widen(BwAnd(b9,63))));
            Goto: Label 5
          }
        } else {
          if (TestBit(b6,6)) {
            if (Equal(28,Widen(BwAnd(b6,63)))) {
              Let b13 = M[Offset(Address(loop_var4),1)];
              Let b14 = M[Offset(Offset(Address(loop_var4),1),1)];
              SetByte 007684 b13;
              SetByte 007685 b14;
            } else {
              Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),2));
              Goto: Label 5
            }
          } else {
            if (Equal(28,Widen(BwAnd(b6,63)))) {
              Let b15 = M[Offset(Address(loop_var4),1)];
              SetByte 007684 HiByte(Widen(b15));
              SetByte 007685 LoByte(Widen(b15));
            } else {
              Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),1));
              Goto: Label 5
            }
          }
        }
      }
    }
    TraceOperation 039071 (Store (Con 11) (Var (Global 239)));
    Let b16 = M[007684];
    Let b17 = M[007685];
    SetLocal 11 MakeHiLo(b16,b17);
    TraceOperation 039074 (Je [Var (Local 11),Var (Global 96)] (Branch T (Dloc 039104)));
    Let b18 = M[007398];
    Let b19 = M[007399];
    if (Equal(GetLocal(11),MakeHiLo(b18,b19))) {
      Jump: 039104
    } else {
      TraceOperation 039078 (Call (Floc 026172) [Var (Local 11),Con 3] Sp);
      PushFrame;
      PushReturnAddress 039078;
      SetLocal 1 GetLocal(11);
      SetLocal 2 3;
      MakeRoutineFrame 6;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      SetLocal 3 0;
      Jump: 026173
    }
  }
LocReturn 039078:
  PushStack call_result;
  TraceOperation 039085 (Jz (Var Sp) (Branch F (Dloc 039098)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 039088 (Call (Floc 026172) [Var (Local 11),Con 4] Sp);
    PushFrame;
    PushReturnAddress 039088;
    SetLocal 1 GetLocal(11);
    SetLocal 2 4;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 039098
  }
LocReturn 039088:
  PushStack call_result;
  TraceOperation 039095 (Jz (Var Sp) (Branch T (Dloc 039104)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 039104
  } else {
    Jump: 039098
  }
LocOp 039098:
  TraceOperation 039098 (Je [Var (Local 11),Var (Local 10)] (Branch F (Dloc 039104)));
  if (Equal(GetLocal(11),GetLocal(10))) {
    TraceOperation 039102 (Dec (Con 6));
    SetLocal 6 Sub(GetLocal(6),1);
    Jump: 039104
  } else {
    Jump: 039104
  }
LocOp 039104:
  TraceOperation 039104 (Store (Con 10) (Var (Local 11)));
  SetLocal 10 GetLocal(11);
  Jump: 039107
LocOp 039107:
  TraceOperation 039107 (Inc (Con 7));
  SetLocal 7 Add(GetLocal(7),1);
  TraceOperation 039109 (Jump 039037);
  Jump: 039037
LocOp 039112:
  TraceOperation 039112 (Ret (Var (Local 6)));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult GetLocal(6);
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 039148:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 039149
LocOp 039149:
  TraceOperation 039149 (Store (Con 8) (Con 0));
  SetLocal 8 0;
  TraceOperation 039152 (Jump 039164);
  Jump: 039164
--------------------------------------------------
LocRoutine 039406:
  MakeRoutineFrame 0;
  Jump: 039407
LocOp 039407:
  TraceOperation 039407 (Jump 039538);
  Jump: 039538
--------------------------------------------------
LocRoutine 039520:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 039521
LocOp 039521:
  TraceOperation 039521 (Inc_chk (Con 81) (Con 7) (Branch F (Dloc 046947)));
  Let b1 = M[007336];
  Let b2 = M[007337];
  SetByte 007336 HiByte(Add(MakeHiLo(b1,b2),1));
  SetByte 007337 LoByte(Add(MakeHiLo(b1,b2),1));
  if (GreaterThanEqual(MakeHiLo(b1,b2),7)) {
  }
  TraceOperation 039526 (Store (Con 15) (Var (Global 239)));
  Let b3 = M[007684];
  Let b4 = M[007685];
  SetLocal 15 MakeHiLo(b3,b4);
  TraceOperation 039529 (Jump 039551);
  Jump: 039551
--------------------------------------------------
LocRoutine 039600:
  MakeRoutineFrame 7;
  if (LessThanByte(num_actuals,7)) {
    SetLocal 7 0;
    if (LessThanByte(num_actuals,6)) {
      SetLocal 6 0;
      if (LessThanByte(num_actuals,5)) {
        SetLocal 5 0;
        if (LessThanByte(num_actuals,4)) {
          SetLocal 4 0;
          if (LessThanByte(num_actuals,3)) {
            SetLocal 3 0;
            if (LessThanByte(num_actuals,2)) {
              SetLocal 2 0;
              if (LessThanByte(num_actuals,1)) {
                SetLocal 1 0;
              }
            }
          }
        }
      }
    }
  }
  Jump: 039601
LocOp 039601:
  TraceOperation 039601 (Store (Con 5) (Var (Global 93)));
  Let b1 = M[007392];
  Let b2 = M[007393];
  SetLocal 5 MakeHiLo(b1,b2);
  TraceOperation 039604 (And (Var (Global 93)) (Con 2) Sp);
  Let b3 = M[007392];
  Let b4 = M[007393];
  PushStack And(MakeHiLo(b3,b4),2);
  TraceOperation 039608 (Jz (Var Sp) (Branch T (Dloc 039624)));
  PopStack popped5;
  if (IsZero(popped5)) {
    Jump: 039624
  } else {
    TraceOperation 039611 (Add (Var (Local 3)) (Var (Global 99)) Sp);
    Let b6 = M[007404];
    Let b7 = M[007405];
    PushStack Add(GetLocal(3),MakeHiLo(b6,b7));
    TraceOperation 039615 (Mul (Con 2) (Var Sp) Sp);
    PopStack popped8;
    PushStack Mul(2,popped8);
    TraceOperation 039619 (CallN (Floc 040812) [Var Sp]);
    PopStack popped9;
    PushFrame;
    PushReturnAddress 039619;
    SetLocal 1 popped9;
    MakeRoutineFrame 1;
    Jump: 040813
  }
LocReturn 039619:
  Jump: 039624
LocOp 039624:
  TraceOperation 039624 (CallN (Floc 078848) [Con 5,Var (Local 2)]);
  PushFrame;
  PushReturnAddress 039624;
  SetLocal 1 5;
  SetLocal 2 GetLocal(2);
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 078849
LocReturn 039624:
  TraceOperation 039630 (Call (Floc 078928) [Con 5,Var (Local 2)] Sp);
  PushFrame;
  PushReturnAddress 039630;
  SetLocal 1 5;
  SetLocal 2 GetLocal(2);
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 078929
LocReturn 039630:
  PushStack call_result;
  TraceOperation 039637 (Jz (Var Sp) (Branch T (Dloc 039649)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 039649
  } else {
    TraceOperation 039640 (And (Var (Global 93)) (Con -2) (Global 93));
    Let b2 = M[007392];
    Let b3 = M[007393];
    SetByte 007392 HiByte(And(MakeHiLo(b2,b3),-2));
    SetByte 007393 LoByte(And(MakeHiLo(b2,b3),-2));
    TraceOperation 039646 (Jump 039845);
    Jump: 039845
  }
LocOp 039649:
  TraceOperation 039649 (Get_prop (Var (Local 2)) (Con 28) (Global 239));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),12)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(2),14)),12),1)];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let loop_var4 = DeAddress(Offset(Address(MakeHiLo(b1,b2)),Add(Mul(2,Widen(b3)),1)));
  Label 5: {
    Let b6 = M[Address(loop_var4)];
    if (IsZeroByte(b6)) {
      Let b7 = M[000320];
      Let b8 = M[000321];
      SetByte 007684 b7;
      SetByte 007685 b8;
    } else {
      if (TestBit(b6,7)) {
        Let b9 = M[Offset(Address(loop_var4),1)];
        if (Equal(28,Widen(BwAnd(b6,63)))) {
          if (Equal(Widen(BwAnd(b9,63)),2)) {
            Let b10 = M[Offset(Address(loop_var4),2)];
            Let b11 = M[Offset(Offset(Address(loop_var4),2),1)];
            SetByte 007684 b10;
            SetByte 007685 b11;
          } else {
            Let b12 = M[Offset(Address(loop_var4),2)];
            SetByte 007684 HiByte(Widen(b12));
            SetByte 007685 LoByte(Widen(b12));
          }
        } else {
          Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),2),Widen(BwAnd(b9,63))));
          Goto: Label 5
        }
      } else {
        if (TestBit(b6,6)) {
          if (Equal(28,Widen(BwAnd(b6,63)))) {
            Let b13 = M[Offset(Address(loop_var4),1)];
            Let b14 = M[Offset(Offset(Address(loop_var4),1),1)];
            SetByte 007684 b13;
            SetByte 007685 b14;
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),2));
            Goto: Label 5
          }
        } else {
          if (Equal(28,Widen(BwAnd(b6,63)))) {
            Let b15 = M[Offset(Address(loop_var4),1)];
            SetByte 007684 HiByte(Widen(b15));
            SetByte 007685 LoByte(Widen(b15));
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),1));
            Goto: Label 5
          }
        }
      }
    }
  }
  TraceOperation 039653 (Push (Var (Global 239)));
  Let b16 = M[007684];
  Let b17 = M[007685];
  PushStack MakeHiLo(b16,b17);
  TraceOperation 039656 (Call (Floc 026172) [Var Sp,Con 4] Sp);
  PopStack popped18;
  PushFrame;
  PushReturnAddress 039656;
  SetLocal 1 popped18;
  SetLocal 2 4;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 039656:
  PushStack call_result;
  TraceOperation 039663 (Jz (Var Sp) (Branch T (Dloc 039736)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 039736
  } else {
    TraceOperation 039667 (Store (Con 6) (Con 0));
    SetLocal 6 0;
    TraceOperation 039670 (Store (Con 7) (Con 0));
    SetLocal 7 0;
    Jump: 039673
  }
LocOp 039673:
  TraceOperation 039673 (Jl (Var (Local 7)) (Var (Global 98)) (Branch F (Dloc 039694)));
  Let b1 = M[007402];
  Let b2 = M[007403];
  if (LessThan(GetLocal(7),MakeHiLo(b1,b2))) {
    TraceOperation 039677 (Add (Var (Local 7)) (Var (Local 1)) Sp);
    PushStack Add(GetLocal(7),GetLocal(1));
    TraceOperation 039681 (Loadb (Var (Local 4)) (Var Sp) Sp);
    PopStack popped3;
    Let b4 = M[Offset(Address(GetLocal(4)),popped3)];
    PushStack Widen(b4);
    TraceOperation 039685 (Add (Var (Local 6)) (Var Sp) (Local 6));
    PopStack popped5;
    SetLocal 6 Add(GetLocal(6),popped5);
    TraceOperation 039689 (Inc (Con 7));
    SetLocal 7 Add(GetLocal(7),1);
    TraceOperation 039691 (Jump 039673);
    Jump: 039673
  } else {
    Jump: 039694
  }
LocOp 039694:
  TraceOperation 039694 (CallN (Floc 080944) [Var (Local 6)]);
  PushFrame;
  PushReturnAddress 039694;
  SetLocal 1 GetLocal(6);
  MakeRoutineFrame 1;
  Jump: 080945
LocReturn 039694:
  TraceOperation 039699 (Print " ");
  GamePrint " ";
  TraceOperation 039702 (Get_prop (Var (Local 2)) (Con 28) (Global 239));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),12)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(2),14)),12),1)];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let loop_var4 = DeAddress(Offset(Address(MakeHiLo(b1,b2)),Add(Mul(2,Widen(b3)),1)));
  Label 5: {
    Let b6 = M[Address(loop_var4)];
    if (IsZeroByte(b6)) {
      Let b7 = M[000320];
      Let b8 = M[000321];
      SetByte 007684 b7;
      SetByte 007685 b8;
    } else {
      if (TestBit(b6,7)) {
        Let b9 = M[Offset(Address(loop_var4),1)];
        if (Equal(28,Widen(BwAnd(b6,63)))) {
          if (Equal(Widen(BwAnd(b9,63)),2)) {
            Let b10 = M[Offset(Address(loop_var4),2)];
            Let b11 = M[Offset(Offset(Address(loop_var4),2),1)];
            SetByte 007684 b10;
            SetByte 007685 b11;
          } else {
            Let b12 = M[Offset(Address(loop_var4),2)];
            SetByte 007684 HiByte(Widen(b12));
            SetByte 007685 LoByte(Widen(b12));
          }
        } else {
          Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),2),Widen(BwAnd(b9,63))));
          Goto: Label 5
        }
      } else {
        if (TestBit(b6,6)) {
          if (Equal(28,Widen(BwAnd(b6,63)))) {
            Let b13 = M[Offset(Address(loop_var4),1)];
            Let b14 = M[Offset(Offset(Address(loop_var4),1),1)];
            SetByte 007684 b13;
            SetByte 007685 b14;
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),2));
            Goto: Label 5
          }
        } else {
          if (Equal(28,Widen(BwAnd(b6,63)))) {
            Let b15 = M[Offset(Address(loop_var4),1)];
            SetByte 007684 HiByte(Widen(b15));
            SetByte 007685 LoByte(Widen(b15));
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),1));
            Goto: Label 5
          }
        }
      }
    }
  }
  TraceOperation 039706 (Push (Var (Global 239)));
  Let b16 = M[007684];
  Let b17 = M[007685];
  PushStack MakeHiLo(b16,b17);
  TraceOperation 039709 (Print_paddr (Var Sp));
  PopStack popped18;
  GamePrint GetText(PackedAddress Z5(popped18));
  TraceOperation 039711 (And (Var (Global 93)) (Con 8) Sp);
  Let b19 = M[007392];
  Let b20 = M[007393];
  PushStack And(MakeHiLo(b19,b20),8);
  TraceOperation 039715 (Jz (Var Sp) (Branch T (Dloc 039721)));
  PopStack popped21;
  if (IsZero(popped21)) {
    Jump: 039721
  } else {
    TraceOperation 039718 (Print " (");
    GamePrint " (";
    Jump: 039721
  }
LocOp 039721:
  TraceOperation 039721 (And (Var (Global 93)) (Con 2) Sp);
  Let b1 = M[007392];
  Let b2 = M[007393];
  PushStack And(MakeHiLo(b1,b2),2);
  TraceOperation 039725 (Jz (Var Sp) (Branch T (Dloc 039733)));
  PopStack popped3;
  if (IsZero(popped3)) {
    Jump: 039733
  } else {
    TraceOperation 039728 (Print ":\n");
    GamePrint ":\n";
    Jump: 039733
  }
LocOp 039733:
  TraceOperation 039733 (Jump 039760);
  Jump: 039760
LocOp 039736:
  TraceOperation 039736 (Store (Con 116) (Con 1));
  SetByte 007406 0;
  SetByte 007407 1;
  TraceOperation 039739 (Store (Con 86) (Var (Local 2)));
  SetByte 007346 HiByte(GetLocal(2));
  SetByte 007347 LoByte(GetLocal(2));
  TraceOperation 039742 (Add (Var (Local 3)) (Var (Global 99)) (Global 71));
  Let b1 = M[007404];
  Let b2 = M[007405];
  SetByte 007348 HiByte(Add(GetLocal(3),MakeHiLo(b1,b2)));
  SetByte 007349 LoByte(Add(GetLocal(3),MakeHiLo(b1,b2)));
  TraceOperation 039746 (Call (Floc 040828) [Var (Local 2),Con 28] Sp);
  PushFrame;
  PushReturnAddress 039746;
  SetLocal 1 GetLocal(2);
  SetLocal 2 28;
  MakeRoutineFrame 2;
  Jump: 040829
LocReturn 039746:
  PushStack call_result;
  TraceOperation 039753 (Je [Var Sp,Con 1] (Branch F (Dloc 039760)));
  PopStack popped1;
  if (Equal(popped1,1)) {
    TraceOperation 039757 (Jump 039845);
    Jump: 039845
  } else {
    Jump: 039760
  }
LocOp 039760:
  TraceOperation 039760 (Inc (Con 115));
  Let b1 = M[007404];
  Let b2 = M[007405];
  SetByte 007404 HiByte(Add(MakeHiLo(b1,b2),1));
  SetByte 007405 LoByte(Add(MakeHiLo(b1,b2),1));
  TraceOperation 039762 (Push (Var (Global 96)));
  Let b3 = M[007398];
  Let b4 = M[007399];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 039765 (Push (Var (Global 97)));
  Let b5 = M[007400];
  Let b6 = M[007401];
  PushStack MakeHiLo(b5,b6);
  TraceOperation 039768 (Push (Var (Global 98)));
  Let b7 = M[007402];
  Let b8 = M[007403];
  PushStack MakeHiLo(b7,b8);
  TraceOperation 039771 (Get_prop (Var (Local 2)) (Con 28) (Global 239));
  Let b9 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),12)];
  Let b10 = M[Offset(Offset(Offset(000378,Mul(GetLocal(2),14)),12),1)];
  Let b11 = M[Address(MakeHiLo(b9,b10))];
  Let loop_var12 = DeAddress(Offset(Address(MakeHiLo(b9,b10)),Add(Mul(2,Widen(b11)),1)));
  Label 13: {
    Let b14 = M[Address(loop_var12)];
    if (IsZeroByte(b14)) {
      Let b15 = M[000320];
      Let b16 = M[000321];
      SetByte 007684 b15;
      SetByte 007685 b16;
    } else {
      if (TestBit(b14,7)) {
        Let b17 = M[Offset(Address(loop_var12),1)];
        if (Equal(28,Widen(BwAnd(b14,63)))) {
          if (Equal(Widen(BwAnd(b17,63)),2)) {
            Let b18 = M[Offset(Address(loop_var12),2)];
            Let b19 = M[Offset(Offset(Address(loop_var12),2),1)];
            SetByte 007684 b18;
            SetByte 007685 b19;
          } else {
            Let b20 = M[Offset(Address(loop_var12),2)];
            SetByte 007684 HiByte(Widen(b20));
            SetByte 007685 LoByte(Widen(b20));
          }
        } else {
          Assign loop_var12 = DeAddress(Offset(Offset(Address(loop_var12),2),Widen(BwAnd(b17,63))));
          Goto: Label 13
        }
      } else {
        if (TestBit(b14,6)) {
          if (Equal(28,Widen(BwAnd(b14,63)))) {
            Let b21 = M[Offset(Address(loop_var12),1)];
            Let b22 = M[Offset(Offset(Address(loop_var12),1),1)];
            SetByte 007684 b21;
            SetByte 007685 b22;
          } else {
            Assign loop_var12 = DeAddress(Offset(Offset(Address(loop_var12),1),2));
            Goto: Label 13
          }
        } else {
          if (Equal(28,Widen(BwAnd(b14,63)))) {
            Let b23 = M[Offset(Address(loop_var12),1)];
            SetByte 007684 HiByte(Widen(b23));
            SetByte 007685 LoByte(Widen(b23));
          } else {
            Assign loop_var12 = DeAddress(Offset(Offset(Address(loop_var12),1),1));
            Goto: Label 13
          }
        }
      }
    }
  }
  TraceOperation 039775 (Store (Con 112) (Var (Global 239)));
  Let b24 = M[007684];
  Let b25 = M[007685];
  SetByte 007398 b24;
  SetByte 007399 b25;
  TraceOperation 039778 (Store (Con 113) (Var (Local 2)));
  SetByte 007400 HiByte(GetLocal(2));
  SetByte 007401 LoByte(GetLocal(2));
  TraceOperation 039781 (CallN (Floc 039116) [Var (Local 2),Var (Local 3),Con 0]);
  PushFrame;
  PushReturnAddress 039781;
  SetLocal 1 GetLocal(2);
  SetLocal 2 GetLocal(3);
  SetLocal 3 0;
  MakeRoutineFrame 15;
  SetLocal 15 0;
  SetLocal 14 0;
  SetLocal 13 0;
  SetLocal 12 0;
  SetLocal 11 0;
  SetLocal 10 0;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 039117
LocReturn 039781:
  TraceOperation 039788 (Pull (Con 114));
  PopStack popped1;
  SetByte 007402 HiByte(popped1);
  SetByte 007403 LoByte(popped1);
  TraceOperation 039791 (Pull (Con 113));
  PopStack popped2;
  SetByte 007400 HiByte(popped2);
  SetByte 007401 LoByte(popped2);
  TraceOperation 039794 (Pull (Con 112));
  PopStack popped3;
  SetByte 007398 HiByte(popped3);
  SetByte 007399 LoByte(popped3);
  TraceOperation 039797 (Dec (Con 115));
  Let b4 = M[007404];
  Let b5 = M[007405];
  SetByte 007404 HiByte(Sub(MakeHiLo(b4,b5),1));
  SetByte 007405 LoByte(Sub(MakeHiLo(b4,b5),1));
  TraceOperation 039799 (Get_prop (Var (Local 2)) (Con 28) (Global 239));
  Let b6 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),12)];
  Let b7 = M[Offset(Offset(Offset(000378,Mul(GetLocal(2),14)),12),1)];
  Let b8 = M[Address(MakeHiLo(b6,b7))];
  Let loop_var9 = DeAddress(Offset(Address(MakeHiLo(b6,b7)),Add(Mul(2,Widen(b8)),1)));
  Label 10: {
    Let b11 = M[Address(loop_var9)];
    if (IsZeroByte(b11)) {
      Let b12 = M[000320];
      Let b13 = M[000321];
      SetByte 007684 b12;
      SetByte 007685 b13;
    } else {
      if (TestBit(b11,7)) {
        Let b14 = M[Offset(Address(loop_var9),1)];
        if (Equal(28,Widen(BwAnd(b11,63)))) {
          if (Equal(Widen(BwAnd(b14,63)),2)) {
            Let b15 = M[Offset(Address(loop_var9),2)];
            Let b16 = M[Offset(Offset(Address(loop_var9),2),1)];
            SetByte 007684 b15;
            SetByte 007685 b16;
          } else {
            Let b17 = M[Offset(Address(loop_var9),2)];
            SetByte 007684 HiByte(Widen(b17));
            SetByte 007685 LoByte(Widen(b17));
          }
        } else {
          Assign loop_var9 = DeAddress(Offset(Offset(Address(loop_var9),2),Widen(BwAnd(b14,63))));
          Goto: Label 10
        }
      } else {
        if (TestBit(b11,6)) {
          if (Equal(28,Widen(BwAnd(b11,63)))) {
            Let b18 = M[Offset(Address(loop_var9),1)];
            Let b19 = M[Offset(Offset(Address(loop_var9),1),1)];
            SetByte 007684 b18;
            SetByte 007685 b19;
          } else {
            Assign loop_var9 = DeAddress(Offset(Offset(Address(loop_var9),1),2));
            Goto: Label 10
          }
        } else {
          if (Equal(28,Widen(BwAnd(b11,63)))) {
            Let b20 = M[Offset(Address(loop_var9),1)];
            SetByte 007684 HiByte(Widen(b20));
            SetByte 007685 LoByte(Widen(b20));
          } else {
            Assign loop_var9 = DeAddress(Offset(Offset(Address(loop_var9),1),1));
            Goto: Label 10
          }
        }
      }
    }
  }
  TraceOperation 039803 (Push (Var (Global 239)));
  Let b21 = M[007684];
  Let b22 = M[007685];
  PushStack MakeHiLo(b21,b22);
  TraceOperation 039806 (Call (Floc 026172) [Var Sp,Con 4] Sp);
  PopStack popped23;
  PushFrame;
  PushReturnAddress 039806;
  SetLocal 1 popped23;
  SetLocal 2 4;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 039806:
  PushStack call_result;
  TraceOperation 039813 (Jz (Var Sp) (Branch T (Dloc 039829)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 039829
  } else {
    TraceOperation 039816 (And (Var (Local 5)) (Con 8) Sp);
    PushStack And(GetLocal(5),8);
    TraceOperation 039820 (Jz (Var Sp) (Branch T (Dloc 039826)));
    PopStack popped2;
    if (IsZero(popped2)) {
      Jump: 039826
    } else {
      TraceOperation 039823 (Print ")");
      GamePrint ")";
      Jump: 039826
    }
  }
LocOp 039826:
  TraceOperation 039826 (Jump 039845);
  Jump: 039845
LocOp 039829:
  TraceOperation 039829 (Store (Con 116) (Con 2));
  SetByte 007406 0;
  SetByte 007407 2;
  TraceOperation 039832 (Store (Con 86) (Var (Local 2)));
  SetByte 007346 HiByte(GetLocal(2));
  SetByte 007347 LoByte(GetLocal(2));
  TraceOperation 039835 (Add (Var (Local 3)) (Var (Global 99)) (Global 71));
  Let b1 = M[007404];
  Let b2 = M[007405];
  SetByte 007348 HiByte(Add(GetLocal(3),MakeHiLo(b1,b2)));
  SetByte 007349 LoByte(Add(GetLocal(3),MakeHiLo(b1,b2)));
  TraceOperation 039839 (CallN (Floc 040828) [Var (Local 2),Con 28]);
  PushFrame;
  PushReturnAddress 039839;
  SetLocal 1 GetLocal(2);
  SetLocal 2 28;
  MakeRoutineFrame 2;
  Jump: 040829
LocReturn 039839:
  Jump: 039845
LocOp 039845:
  TraceOperation 039845 (CallN (Floc 078972) [Con 5,Var (Local 2)]);
  PushFrame;
  PushReturnAddress 039845;
  SetLocal 1 5;
  SetLocal 2 GetLocal(2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 078973
LocReturn 039845:
  TraceOperation 039851 (And (Var (Local 5)) (Con 1) Sp);
  PushStack And(GetLocal(5),1);
  TraceOperation 039855 (Jz (Var Sp) (Branch T (Dloc 039866)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 039866
  } else {
    TraceOperation 039858 (And (Var (Global 93)) (Con 1) Sp);
    Let b2 = M[007392];
    Let b3 = M[007393];
    PushStack And(MakeHiLo(b2,b3),1);
    TraceOperation 039862 (Jz (Var Sp) (Branch F (Dloc 039866)));
    PopStack popped4;
    if (IsZero(popped4)) {
      TraceOperation 039865 New_line;
      GamePrint "\n";
      Jump: 039866
    } else {
      Jump: 039866
    }
  }
LocOp 039866:
  TraceOperation 039866 (Store (Con 109) (Var (Local 5)));
  SetByte 007392 HiByte(GetLocal(5));
  SetByte 007393 LoByte(GetLocal(5));
  TraceOperation 039869 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 039872:
  MakeRoutineFrame 5;
  if (LessThanByte(num_actuals,5)) {
    SetLocal 5 0;
    if (LessThanByte(num_actuals,4)) {
      SetLocal 4 0;
      if (LessThanByte(num_actuals,3)) {
        SetLocal 3 0;
        if (LessThanByte(num_actuals,2)) {
          SetLocal 2 0;
          if (LessThanByte(num_actuals,1)) {
            SetLocal 1 0;
          }
        }
      }
    }
  }
  Jump: 039873
LocOp 039873:
  TraceOperation 039873 (Store (Con 5) (Var (Global 93)));
  Let b1 = M[007392];
  Let b2 = M[007393];
  SetLocal 5 MakeHiLo(b1,b2);
  TraceOperation 039876 (And (Var (Global 93)) (Con 2) Sp);
  Let b3 = M[007392];
  Let b4 = M[007393];
  PushStack And(MakeHiLo(b3,b4),2);
  TraceOperation 039880 (Jz (Var Sp) (Branch T (Dloc 039896)));
  PopStack popped5;
  if (IsZero(popped5)) {
    Jump: 039896
  } else {
    TraceOperation 039883 (Add (Var (Local 3)) (Var (Global 99)) Sp);
    Let b6 = M[007404];
    Let b7 = M[007405];
    PushStack Add(GetLocal(3),MakeHiLo(b6,b7));
    TraceOperation 039887 (Mul (Con 2) (Var Sp) Sp);
    PopStack popped8;
    PushStack Mul(2,popped8);
    TraceOperation 039891 (CallN (Floc 040812) [Var Sp]);
    PopStack popped9;
    PushFrame;
    PushReturnAddress 039891;
    SetLocal 1 popped9;
    MakeRoutineFrame 1;
    Jump: 040813
  }
LocReturn 039891:
  Jump: 039896
LocOp 039896:
  TraceOperation 039896 (Je [Var (Local 4),Con 1] (Branch F (Dloc 039985)));
  if (Equal(GetLocal(4),1)) {
    TraceOperation 039901 (And (Var (Global 93)) (Con 4096) Sp);
    Let b1 = M[007392];
    Let b2 = M[007393];
    PushStack And(MakeHiLo(b1,b2),4096);
    TraceOperation 039907 (Jz (Var Sp) (Branch T (Dloc 039918)));
    PopStack popped3;
    if (IsZero(popped3)) {
      Jump: 039918
    } else {
      TraceOperation 039910 (CallN (Floc 082048) [Var (Local 2)]);
      PushFrame;
      PushReturnAddress 039910;
      SetLocal 1 GetLocal(2);
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 082049
    }
  } else {
    Jump: 039985
  }
LocReturn 039910:
  TraceOperation 039915 (Jump 039982);
  Jump: 039982
LocOp 039918:
  TraceOperation 039918 (And (Var (Global 93)) (Con 256) Sp);
  Let b1 = M[007392];
  Let b2 = M[007393];
  PushStack And(MakeHiLo(b1,b2),256);
  TraceOperation 039924 (Jz (Var Sp) (Branch T (Dloc 039956)));
  PopStack popped3;
  if (IsZero(popped3)) {
    Jump: 039956
  } else {
    TraceOperation 039927 (Je [Var (Local 1),Con 1] (Branch F (Dloc 039948)));
    if (Equal(GetLocal(1),1)) {
      TraceOperation 039931 (And (Var (Global 93)) (Con 16384) Sp);
      Let b4 = M[007392];
      Let b5 = M[007393];
      PushStack And(MakeHiLo(b4,b5),16384);
      TraceOperation 039937 (Jz (Var Sp) (Branch T (Dloc 039948)));
      PopStack popped6;
      if (IsZero(popped6)) {
        Jump: 039948
      } else {
        TraceOperation 039940 (CallN (Floc 081964) [Var (Local 2)]);
        PushFrame;
        PushReturnAddress 039940;
        SetLocal 1 GetLocal(2);
        MakeRoutineFrame 2;
        SetLocal 2 0;
        Jump: 081965
      }
    } else {
      Jump: 039948
    }
  }
LocReturn 039940:
  TraceOperation 039945 (Jump 039953);
  Jump: 039953
LocOp 039948:
  TraceOperation 039948 (CallN (Floc 081916) [Var (Local 2)]);
  PushFrame;
  PushReturnAddress 039948;
  SetLocal 1 GetLocal(2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 081917
LocReturn 039948:
  Jump: 039953
LocOp 039953:
  TraceOperation 039953 (Jump 039982);
  Jump: 039982
LocOp 039956:
  TraceOperation 039956 (Je [Var (Local 1),Con 1] (Branch F (Dloc 039977)));
  if (Equal(GetLocal(1),1)) {
    TraceOperation 039960 (And (Var (Global 93)) (Con 16384) Sp);
    Let b1 = M[007392];
    Let b2 = M[007393];
    PushStack And(MakeHiLo(b1,b2),16384);
    TraceOperation 039966 (Jz (Var Sp) (Branch T (Dloc 039977)));
    PopStack popped3;
    if (IsZero(popped3)) {
      Jump: 039977
    } else {
      TraceOperation 039969 (CallN (Floc 081832) [Var (Local 2)]);
      PushFrame;
      PushReturnAddress 039969;
      SetLocal 1 GetLocal(2);
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 081833
    }
  } else {
    Jump: 039977
  }
LocReturn 039969:
  TraceOperation 039974 (Jump 039982);
  Jump: 039982
LocOp 039977:
  TraceOperation 039977 (CallN (Floc 081760) [Var (Local 2)]);
  PushFrame;
  PushReturnAddress 039977;
  SetLocal 1 GetLocal(2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 081761
LocReturn 039977:
  Jump: 039982
LocOp 039982:
  TraceOperation 039982 (Jump 040039);
  Jump: 040039
LocOp 039985:
  TraceOperation 039985 (And (Var (Global 93)) (Con 256) Sp);
  Let b1 = M[007392];
  Let b2 = M[007393];
  PushStack And(MakeHiLo(b1,b2),256);
  TraceOperation 039991 (Jz (Var Sp) (Branch T (Dloc 040024)));
  PopStack popped3;
  if (IsZero(popped3)) {
    Jump: 040024
  } else {
    TraceOperation 039994 (Je [Var (Local 1),Con 1] (Branch F (Dloc 040017)));
    if (Equal(GetLocal(1),1)) {
      TraceOperation 039998 (And (Var (Global 93)) (Con 16384) Sp);
      Let b4 = M[007392];
      Let b5 = M[007393];
      PushStack And(MakeHiLo(b4,b5),16384);
      TraceOperation 040004 (Jz (Var Sp) (Branch T (Dloc 040017)));
      PopStack popped6;
      if (IsZero(popped6)) {
        Jump: 040017
      } else {
        TraceOperation 040007 (CallN (Floc 081544) [Var (Local 2),Con 0,Var (Local 4)]);
        PushFrame;
        PushReturnAddress 040007;
        SetLocal 1 GetLocal(2);
        SetLocal 2 0;
        SetLocal 3 GetLocal(4);
        MakeRoutineFrame 8;
        SetLocal 8 0;
        SetLocal 7 0;
        SetLocal 6 0;
        SetLocal 5 0;
        SetLocal 4 0;
        Jump: 081545
      }
    } else {
      Jump: 040017
    }
  }
LocReturn 040007:
  TraceOperation 040014 (Jump 040024);
  Jump: 040024
LocOp 040017:
  TraceOperation 040017 (CallN (Floc 081544) [Var (Local 2),Con 1,Var (Local 4)]);
  PushFrame;
  PushReturnAddress 040017;
  SetLocal 1 GetLocal(2);
  SetLocal 2 1;
  SetLocal 3 GetLocal(4);
  MakeRoutineFrame 8;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 081545
LocReturn 040017:
  Jump: 040024
LocOp 040024:
  TraceOperation 040024 (Push (Var (Global 98)));
  Let b1 = M[007402];
  Let b2 = M[007403];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 040027 (Store (Con 114) (Var (Local 4)));
  SetByte 007402 HiByte(GetLocal(4));
  SetByte 007403 LoByte(GetLocal(4));
  TraceOperation 040030 (CallN (Floc 078824) [Con 2,Var (Local 2)]);
  PushFrame;
  PushReturnAddress 040030;
  SetLocal 1 2;
  SetLocal 2 GetLocal(2);
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 078825
LocReturn 040030:
  TraceOperation 040036 (Pull (Con 114));
  PopStack popped1;
  SetByte 007402 HiByte(popped1);
  SetByte 007403 LoByte(popped1);
  Jump: 040039
LocOp 040039:
  TraceOperation 040039 (Jg (Var (Local 4)) (Con 1) (Branch F (Dloc 040062)));
  if (GreaterThan(GetLocal(4),1)) {
    TraceOperation 040043 (Test_attr (Var (Local 2)) (Con 26) (Branch T (Dloc 040062)));
    Let b1 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),3)];
    if (TestBit(b1,5)) {
      Jump: 040062
    } else {
      TraceOperation 040047 (Set_attr (Var (Local 2)) (Con 26));
      Let b2 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),3)];
      SetByte Offset(Offset(000378,Mul(GetLocal(2),14)),3) SetBit(b2,5);
      TraceOperation 040050 (CallN (Floc 040072) [Var (Local 2),Var (Local 3)]);
      PushFrame;
      PushReturnAddress 040050;
      SetLocal 1 GetLocal(2);
      SetLocal 2 GetLocal(3);
      MakeRoutineFrame 8;
      SetLocal 8 0;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      SetLocal 3 0;
      Jump: 040073
    }
  } else {
    Jump: 040062
  }
LocReturn 040050:
  TraceOperation 040056 (Clear_attr (Var (Local 2)) (Con 26));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),3)];
  SetByte Offset(Offset(000378,Mul(GetLocal(2),14)),3) ClearBit(b1,5);
  TraceOperation 040059 (Jump 040068);
  Jump: 040068
LocOp 040062:
  TraceOperation 040062 (CallN (Floc 040072) [Var (Local 2),Var (Local 3)]);
  PushFrame;
  PushReturnAddress 040062;
  SetLocal 1 GetLocal(2);
  SetLocal 2 GetLocal(3);
  MakeRoutineFrame 8;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 040073
LocReturn 040062:
  Jump: 040068
LocOp 040068:
  TraceOperation 040068 (Store (Con 109) (Var (Local 5)));
  SetByte 007392 HiByte(GetLocal(5));
  SetByte 007393 LoByte(GetLocal(5));
  TraceOperation 040071 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 040072:
  MakeRoutineFrame 8;
  if (LessThanByte(num_actuals,8)) {
    SetLocal 8 0;
    if (LessThanByte(num_actuals,7)) {
      SetLocal 7 0;
      if (LessThanByte(num_actuals,6)) {
        SetLocal 6 0;
        if (LessThanByte(num_actuals,5)) {
          SetLocal 5 0;
          if (LessThanByte(num_actuals,4)) {
            SetLocal 4 0;
            if (LessThanByte(num_actuals,3)) {
              SetLocal 3 0;
              if (LessThanByte(num_actuals,2)) {
                SetLocal 2 0;
                if (LessThanByte(num_actuals,1)) {
                  SetLocal 1 0;
                }
              }
            }
          }
        }
      }
    }
  }
  Jump: 040073
LocOp 040073:
  TraceOperation 040073 (Store (Con 116) (Con 2));
  SetByte 007406 0;
  SetByte 007407 2;
  TraceOperation 040076 (And (Var (Global 93)) (Con 128) Sp);
  Let b1 = M[007392];
  Let b2 = M[007393];
  PushStack And(MakeHiLo(b1,b2),128);
  TraceOperation 040080 (Jz (Var Sp) (Branch T (Dloc 040165)));
  PopStack popped3;
  if (IsZero(popped3)) {
    Jump: 040165
  } else {
    TraceOperation 040084 (CallN (Floc 078848) [Con 3]);
    PushFrame;
    PushReturnAddress 040084;
    SetLocal 1 3;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 078849
  }
LocReturn 040084:
  TraceOperation 040089 (Call (Floc 078928) [Con 3] Sp);
  PushFrame;
  PushReturnAddress 040089;
  SetLocal 1 3;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 078929
LocReturn 040089:
  PushStack call_result;
  TraceOperation 040095 (Jz (Var Sp) (Branch F (Dloc 040160)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 040099 (Store (Con 8) (Con 0));
    SetLocal 8 0;
    TraceOperation 040102 (Test_attr (Var (Local 1)) (Con 8) (Branch F (Dloc 040114)));
    Let b2 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),1)];
    if (TestBit(b2,7)) {
      TraceOperation 040106 (Test_attr (Var (Global 1)) (Con 8) (Branch T (Dloc 040114)));
      Let b3 = M[007208];
      Let b4 = M[007209];
      Let b5 = M[Offset(Offset(000378,Mul(MakeHiLo(b3,b4),14)),1)];
      if (TestBit(b5,7)) {
        Jump: 040114
      } else {
        TraceOperation 040110 (Add (Var (Local 8)) (Con 1) (Local 8));
        SetLocal 8 Add(GetLocal(8),1);
        Jump: 040114
      }
    } else {
      Jump: 040114
    }
  } else {
    Jump: 040160
  }
LocOp 040114:
  TraceOperation 040114 (Test_attr (Var (Local 1)) (Con 4) (Branch F (Dloc 040126)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),0)];
  if (TestBit(b1,3)) {
    TraceOperation 040118 (Test_attr (Var (Local 1)) (Con 13) (Branch T (Dloc 040126)));
    Let b2 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),1)];
    if (TestBit(b2,2)) {
      Jump: 040126
    } else {
      TraceOperation 040122 (Add (Var (Local 8)) (Con 2) (Local 8));
      SetLocal 8 Add(GetLocal(8),2);
      Jump: 040126
    }
  } else {
    Jump: 040126
  }
LocOp 040126:
  TraceOperation 040126 (Test_attr (Var (Local 1)) (Con 4) (Branch F (Dloc 040149)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),0)];
  if (TestBit(b1,3)) {
    TraceOperation 040130 (Test_attr (Var (Local 1)) (Con 13) (Branch T (Dloc 040138)));
    Let b2 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),1)];
    if (TestBit(b2,2)) {
      Jump: 040138
    } else {
      TraceOperation 040134 (Test_attr (Var (Local 1)) (Con 20) (Branch F (Dloc 040149)));
      Let b3 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),2)];
      if (TestBit(b3,3)) {
        Jump: 040138
      } else {
        Jump: 040149
      }
    }
  } else {
    Jump: 040149
  }
LocOp 040138:
  TraceOperation 040138 (Get_child (Var (Local 1)) Sp (Branch F (Dloc 040142)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),10)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),10),1)];
  PushStack MakeHiLo(b1,b2);
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 040142
  } else {
    Jump: 040142
  }
LocOp 040142:
  TraceOperation 040142 (Jz (Var Sp) (Branch F (Dloc 040149)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 040145 (Add (Var (Local 8)) (Con 4) (Local 8));
    SetLocal 8 Add(GetLocal(8),4);
    Jump: 040149
  } else {
    Jump: 040149
  }
LocOp 040149:
  TraceOperation 040149 (Jz (Var (Local 8)) (Branch T (Dloc 040160)));
  if (IsZero(GetLocal(8))) {
    Jump: 040160
  } else {
    TraceOperation 040152 (CallN (Floc 036596) [Con 4096,Var (Local 8),Var (Local 1)]);
    PushFrame;
    PushReturnAddress 040152;
    SetLocal 1 4096;
    SetLocal 2 GetLocal(8);
    SetLocal 3 GetLocal(1);
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    Jump: 036597
  }
LocReturn 040152:
  Jump: 040160
LocOp 040160:
  TraceOperation 040160 (CallN (Floc 078972) [Con 3]);
  PushFrame;
  PushReturnAddress 040160;
  SetLocal 1 3;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 078973
LocReturn 040160:
  Jump: 040165
LocOp 040165:
  TraceOperation 040165 (And (Var (Global 93)) (Con 4) Sp);
  Let b1 = M[007392];
  Let b2 = M[007393];
  PushStack And(MakeHiLo(b1,b2),4);
  TraceOperation 040169 (Jz (Var Sp) (Branch T (Dloc 040356)));
  PopStack popped3;
  if (IsZero(popped3)) {
    Jump: 040356
  } else {
    TraceOperation 040173 (Test_attr (Var (Local 1)) (Con 8) (Branch F (Dloc 040194)));
    Let b4 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),1)];
    if (TestBit(b4,7)) {
      TraceOperation 040177 (Test_attr (Var (Local 1)) (Con 22) (Branch F (Dloc 040194)));
      Let b5 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),2)];
      if (TestBit(b5,1)) {
        TraceOperation 040181 (CallN (Floc 036596) [Con 4096,Con 8]);
        PushFrame;
        PushReturnAddress 040181;
        SetLocal 1 4096;
        SetLocal 2 8;
        MakeRoutineFrame 6;
        SetLocal 6 0;
        SetLocal 5 0;
        SetLocal 4 0;
        SetLocal 3 0;
        Jump: 036597
      } else {
        Jump: 040194
      }
    } else {
      Jump: 040194
    }
  }
LocReturn 040181:
  TraceOperation 040188 (Store (Con 5) (Con 1));
  SetLocal 5 1;
  TraceOperation 040191 (Jump 040224);
  Jump: 040224
LocOp 040194:
  TraceOperation 040194 (Test_attr (Var (Local 1)) (Con 8) (Branch F (Dloc 040209)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),1)];
  if (TestBit(b1,7)) {
    TraceOperation 040198 (CallN (Floc 036596) [Con 4096,Con 9,Var (Local 1)]);
    PushFrame;
    PushReturnAddress 040198;
    SetLocal 1 4096;
    SetLocal 2 9;
    SetLocal 3 GetLocal(1);
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    Jump: 036597
  } else {
    Jump: 040209
  }
LocReturn 040198:
  TraceOperation 040206 (Store (Con 5) (Con 1));
  SetLocal 5 1;
  Jump: 040209
LocOp 040209:
  TraceOperation 040209 (Test_attr (Var (Local 1)) (Con 22) (Branch F (Dloc 040224)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),2)];
  if (TestBit(b1,1)) {
    TraceOperation 040213 (CallN (Floc 036596) [Con 4096,Con 10,Var (Local 1)]);
    PushFrame;
    PushReturnAddress 040213;
    SetLocal 1 4096;
    SetLocal 2 10;
    SetLocal 3 GetLocal(1);
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    Jump: 036597
  } else {
    Jump: 040224
  }
LocReturn 040213:
  TraceOperation 040221 (Store (Con 5) (Con 1));
  SetLocal 5 1;
  Jump: 040224
LocOp 040224:
  TraceOperation 040224 (Test_attr (Var (Local 1)) (Con 4) (Branch F (Dloc 040350)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),0)];
  if (TestBit(b1,3)) {
    TraceOperation 040229 (Test_attr (Var (Local 1)) (Con 14) (Branch F (Dloc 040317)));
    Let b2 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),1)];
    if (TestBit(b2,1)) {
      TraceOperation 040234 (Jz (Var (Local 5)) (Branch T (Dloc 040243)));
      if (IsZero(GetLocal(5))) {
        Jump: 040243
      } else {
        TraceOperation 040237 (Print_paddr (Con 28518));
        Note "<static Gettext address>";
        GamePrint " and ";
        TraceOperation 040240 (Jump 040251);
        Jump: 040251
      }
    } else {
      Jump: 040317
    }
  } else {
    Jump: 040350
  }
LocOp 040243:
  TraceOperation 040243 (CallN (Floc 036596) [Con 4096,Con 11,Var (Local 1)]);
  PushFrame;
  PushReturnAddress 040243;
  SetLocal 1 4096;
  SetLocal 2 11;
  SetLocal 3 GetLocal(1);
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 036597
LocReturn 040243:
  Jump: 040251
LocOp 040251:
  TraceOperation 040251 (Test_attr (Var (Local 1)) (Con 13) (Branch F (Dloc 040284)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),1)];
  if (TestBit(b1,2)) {
    TraceOperation 040255 (Get_child (Var (Local 1)) Sp (Branch F (Dloc 040259)));
    Let b2 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),10)];
    Let b3 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),10),1)];
    PushStack MakeHiLo(b2,b3);
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 040259
    } else {
      Jump: 040259
    }
  } else {
    Jump: 040284
  }
LocOp 040259:
  TraceOperation 040259 (Jz (Var Sp) (Branch T (Dloc 040273)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 040273
  } else {
    TraceOperation 040262 (CallN (Floc 036596) [Con 4096,Con 12,Var (Local 1)]);
    PushFrame;
    PushReturnAddress 040262;
    SetLocal 1 4096;
    SetLocal 2 12;
    SetLocal 3 GetLocal(1);
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    Jump: 036597
  }
LocReturn 040262:
  TraceOperation 040270 (Jump 040281);
  Jump: 040281
LocOp 040273:
  TraceOperation 040273 (CallN (Floc 036596) [Con 4096,Con 13,Var (Local 1)]);
  PushFrame;
  PushReturnAddress 040273;
  SetLocal 1 4096;
  SetLocal 2 13;
  SetLocal 3 GetLocal(1);
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 036597
LocReturn 040273:
  Jump: 040281
LocOp 040281:
  TraceOperation 040281 (Jump 040311);
  Jump: 040311
LocOp 040284:
  TraceOperation 040284 (Test_attr (Var (Local 1)) (Con 9) (Branch F (Dloc 040303)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),1)];
  if (TestBit(b1,6)) {
    TraceOperation 040288 (Test_attr (Var (Local 1)) (Con 10) (Branch F (Dloc 040303)));
    Let b2 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),1)];
    if (TestBit(b2,5)) {
      TraceOperation 040292 (CallN (Floc 036596) [Con 4096,Con 15,Var (Local 1)]);
      PushFrame;
      PushReturnAddress 040292;
      SetLocal 1 4096;
      SetLocal 2 15;
      SetLocal 3 GetLocal(1);
      MakeRoutineFrame 6;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      Jump: 036597
    } else {
      Jump: 040303
    }
  } else {
    Jump: 040303
  }
LocReturn 040292:
  TraceOperation 040300 (Jump 040311);
  Jump: 040311
LocOp 040303:
  TraceOperation 040303 (CallN (Floc 036596) [Con 4096,Con 14,Var (Local 1)]);
  PushFrame;
  PushReturnAddress 040303;
  SetLocal 1 4096;
  SetLocal 2 14;
  SetLocal 3 GetLocal(1);
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 036597
LocReturn 040303:
  Jump: 040311
LocOp 040311:
  TraceOperation 040311 (Store (Con 5) (Con 1));
  SetLocal 5 1;
  TraceOperation 040314 (Jump 040350);
  Jump: 040350
LocOp 040317:
  TraceOperation 040317 (Get_child (Var (Local 1)) Sp (Branch F (Dloc 040321)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),10)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),10),1)];
  PushStack MakeHiLo(b1,b2);
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 040321
  } else {
    Jump: 040321
  }
LocOp 040321:
  TraceOperation 040321 (Jz (Var Sp) (Branch F (Dloc 040350)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 040324 (Test_attr (Var (Local 1)) (Con 20) (Branch F (Dloc 040350)));
    Let b2 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),2)];
    if (TestBit(b2,3)) {
      TraceOperation 040328 (Jz (Var (Local 5)) (Branch T (Dloc 040342)));
      if (IsZero(GetLocal(5))) {
        Jump: 040342
      } else {
        TraceOperation 040331 (CallN (Floc 036596) [Con 4096,Con 16,Var (Local 1)]);
        PushFrame;
        PushReturnAddress 040331;
        SetLocal 1 4096;
        SetLocal 2 16;
        SetLocal 3 GetLocal(1);
        MakeRoutineFrame 6;
        SetLocal 6 0;
        SetLocal 5 0;
        SetLocal 4 0;
        Jump: 036597
      }
    } else {
      Jump: 040350
    }
  } else {
    Jump: 040350
  }
LocReturn 040331:
  TraceOperation 040339 (Jump 040350);
  Jump: 040350
LocOp 040342:
  TraceOperation 040342 (CallN (Floc 036596) [Con 4096,Con 17,Var (Local 1)]);
  PushFrame;
  PushReturnAddress 040342;
  SetLocal 1 4096;
  SetLocal 2 17;
  SetLocal 3 GetLocal(1);
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 036597
LocReturn 040342:
  Jump: 040350
LocOp 040350:
  TraceOperation 040350 (Jz (Var (Local 5)) (Branch T (Dloc 040356)));
  if (IsZero(GetLocal(5))) {
    Jump: 040356
  } else {
    TraceOperation 040353 (Print ")");
    GamePrint ")";
    Jump: 040356
  }
LocOp 040356:
  TraceOperation 040356 (Store (Con 7) (Con 0));
  SetLocal 7 0;
  TraceOperation 040359 (Store (Con 6) (Con 0));
  SetLocal 6 0;
  TraceOperation 040362 (Get_child (Var (Local 1)) Sp (Branch F (Dloc 040366)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),10)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),10),1)];
  PushStack MakeHiLo(b1,b2);
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 040366
  } else {
    Jump: 040366
  }
LocOp 040366:
  TraceOperation 040366 (Pull (Con 3));
  PopStack popped1;
  SetLocal 3 popped1;
  TraceOperation 040369 (Jz (Var (Local 3)) (Branch T (Dloc 040406)));
  if (IsZero(GetLocal(3))) {
    Jump: 040406
  } else {
    Jump: 040372
  }
LocOp 040372:
  TraceOperation 040372 (And (Var (Global 93)) (Con 2048) Sp);
  Let b1 = M[007392];
  Let b2 = M[007393];
  PushStack And(MakeHiLo(b1,b2),2048);
  TraceOperation 040378 (Jz (Var Sp) (Branch T (Dloc 040389)));
  PopStack popped3;
  if (IsZero(popped3)) {
    Jump: 040389
  } else {
    TraceOperation 040381 (Test_attr (Var (Local 3)) (Con 3) (Branch T (Dloc 040401)));
    Let b4 = M[Offset(Offset(000378,Mul(GetLocal(3),14)),0)];
    if (TestBit(b4,4)) {
      Jump: 040401
    } else {
      TraceOperation 040385 (Test_attr (Var (Local 3)) (Con 15) (Branch T (Dloc 040401)));
      Let b5 = M[Offset(Offset(000378,Mul(GetLocal(3),14)),1)];
      if (TestBit(b5,0)) {
        Jump: 040401
      } else {
        Jump: 040389
      }
    }
  }
LocOp 040389:
  TraceOperation 040389 (Test_attr (Var (Local 3)) (Con 29) (Branch F (Dloc 040401)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(3),14)),3)];
  if (TestBit(b1,2)) {
    TraceOperation 040393 (Inc (Con 7));
    SetLocal 7 Add(GetLocal(7),1);
    TraceOperation 040395 (Jz (Var (Local 6)) (Branch F (Dloc 040401)));
    if (IsZero(GetLocal(6))) {
      TraceOperation 040398 (Store (Con 6) (Var (Local 3)));
      SetLocal 6 GetLocal(3);
      Jump: 040401
    } else {
      Jump: 040401
    }
  } else {
    Jump: 040401
  }
LocOp 040401:
  TraceOperation 040401 (Get_sibling (Var (Local 3)) (Local 3) (Branch T (Dloc 040372)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(3),14)),8)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(3),14)),8),1)];
  SetLocal 3 MakeHiLo(b1,b2);
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 040406
  } else {
    Jump: 040372
  }
LocOp 040406:
  TraceOperation 040406 (Jz (Var (Local 7)) (Branch T (Dloc 040434)));
  if (IsZero(GetLocal(7))) {
    Jump: 040434
  } else {
    TraceOperation 040409 (And (Var (Global 93)) (Con 32) Sp);
    Let b1 = M[007392];
    Let b2 = M[007393];
    PushStack And(MakeHiLo(b1,b2),32);
    TraceOperation 040413 (Jz (Var Sp) (Branch T (Dloc 040434)));
    PopStack popped3;
    if (IsZero(popped3)) {
      Jump: 040434
    } else {
      TraceOperation 040416 (And (Var (Global 93)) (Con 8) Sp);
      Let b4 = M[007392];
      Let b5 = M[007393];
      PushStack And(MakeHiLo(b4,b5),8);
      TraceOperation 040420 (Jz (Var Sp) (Branch T (Dloc 040431)));
      PopStack popped6;
      if (IsZero(popped6)) {
        Jump: 040431
      } else {
        TraceOperation 040423 (CallN (Floc 036596) [Con 4096,Con 18,Var (Local 1)]);
        PushFrame;
        PushReturnAddress 040423;
        SetLocal 1 4096;
        SetLocal 2 18;
        SetLocal 3 GetLocal(1);
        MakeRoutineFrame 6;
        SetLocal 6 0;
        SetLocal 5 0;
        SetLocal 4 0;
        Jump: 036597
      }
    }
  }
LocReturn 040423:
  Jump: 040431
LocOp 040431:
  TraceOperation 040431 (Store (Con 4) (Con 1));
  SetLocal 4 1;
  Jump: 040434
LocOp 040434:
  TraceOperation 040434 (Jz (Var (Local 7)) (Branch T (Dloc 040561)));
  if (IsZero(GetLocal(7))) {
    Jump: 040561
  } else {
    TraceOperation 040438 (And (Var (Global 93)) (Con 16) Sp);
    Let b1 = M[007392];
    Let b2 = M[007393];
    PushStack And(MakeHiLo(b1,b2),16);
    TraceOperation 040442 (Jz (Var Sp) (Branch T (Dloc 040561)));
    PopStack popped3;
    if (IsZero(popped3)) {
      Jump: 040561
    } else {
      TraceOperation 040446 (Test_attr (Var (Local 1)) (Con 17) (Branch F (Dloc 040499)));
      Let b4 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),2)];
      if (TestBit(b4,6)) {
        TraceOperation 040450 (And (Var (Global 93)) (Con 8) Sp);
        Let b5 = M[007392];
        Let b6 = M[007393];
        PushStack And(MakeHiLo(b5,b6),8);
        TraceOperation 040454 (Jz (Var Sp) (Branch T (Dloc 040496)));
        PopStack popped7;
        if (IsZero(popped7)) {
          Jump: 040496
        } else {
          TraceOperation 040457 (And (Var (Global 93)) (Con 64) Sp);
          Let b8 = M[007392];
          Let b9 = M[007393];
          PushStack And(MakeHiLo(b8,b9),64);
          TraceOperation 040461 (Jz (Var Sp) (Branch T (Dloc 040475)));
          PopStack popped10;
          if (IsZero(popped10)) {
            Jump: 040475
          } else {
            TraceOperation 040464 (CallN (Floc 036596) [Con 4096,Con 19,Var (Local 1)]);
            PushFrame;
            PushReturnAddress 040464;
            SetLocal 1 4096;
            SetLocal 2 19;
            SetLocal 3 GetLocal(1);
            MakeRoutineFrame 6;
            SetLocal 6 0;
            SetLocal 5 0;
            SetLocal 4 0;
            Jump: 036597
          }
        }
      } else {
        Jump: 040499
      }
    }
  }
LocReturn 040464:
  TraceOperation 040472 (Jump 040483);
  Jump: 040483
LocOp 040475:
  TraceOperation 040475 (CallN (Floc 036596) [Con 4096,Con 20,Var (Local 1)]);
  PushFrame;
  PushReturnAddress 040475;
  SetLocal 1 4096;
  SetLocal 2 20;
  SetLocal 3 GetLocal(1);
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 036597
LocReturn 040475:
  Jump: 040483
LocOp 040483:
  TraceOperation 040483 (Test_attr (Var (Local 1)) (Con 1) (Branch F (Dloc 040493)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),0)];
  if (TestBit(b1,6)) {
    TraceOperation 040487 (Print_paddr (Con 28521));
    Note "<static Gettext address>";
    GamePrint "whom ";
    TraceOperation 040490 (Jump 040496);
    Jump: 040496
  } else {
    Jump: 040493
  }
LocOp 040493:
  TraceOperation 040493 (Print_paddr (Con 28522));
  Note "<static Gettext address>";
  GamePrint "which ";
  Jump: 040496
LocOp 040496:
  TraceOperation 040496 (Store (Con 4) (Con 1));
  SetLocal 4 1;
  Jump: 040499
LocOp 040499:
  TraceOperation 040499 (Test_attr (Var (Local 1)) (Con 4) (Branch F (Dloc 040561)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),0)];
  if (TestBit(b1,3)) {
    TraceOperation 040504 (Test_attr (Var (Local 1)) (Con 13) (Branch T (Dloc 040512)));
    Let b2 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),1)];
    if (TestBit(b2,2)) {
      Jump: 040512
    } else {
      TraceOperation 040508 (Test_attr (Var (Local 1)) (Con 20) (Branch F (Dloc 040561)));
      Let b3 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),2)];
      if (TestBit(b3,3)) {
        Jump: 040512
      } else {
        Jump: 040561
      }
    }
  } else {
    Jump: 040561
  }
LocOp 040512:
  TraceOperation 040512 (And (Var (Global 93)) (Con 8) Sp);
  Let b1 = M[007392];
  Let b2 = M[007393];
  PushStack And(MakeHiLo(b1,b2),8);
  TraceOperation 040516 (Jz (Var Sp) (Branch T (Dloc 040558)));
  PopStack popped3;
  if (IsZero(popped3)) {
    Jump: 040558
  } else {
    TraceOperation 040519 (And (Var (Global 93)) (Con 64) Sp);
    Let b4 = M[007392];
    Let b5 = M[007393];
    PushStack And(MakeHiLo(b4,b5),64);
    TraceOperation 040523 (Jz (Var Sp) (Branch T (Dloc 040537)));
    PopStack popped6;
    if (IsZero(popped6)) {
      Jump: 040537
    } else {
      TraceOperation 040526 (CallN (Floc 036596) [Con 4096,Con 21,Var (Local 1)]);
      PushFrame;
      PushReturnAddress 040526;
      SetLocal 1 4096;
      SetLocal 2 21;
      SetLocal 3 GetLocal(1);
      MakeRoutineFrame 6;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      Jump: 036597
    }
  }
LocReturn 040526:
  TraceOperation 040534 (Jump 040545);
  Jump: 040545
LocOp 040537:
  TraceOperation 040537 (CallN (Floc 036596) [Con 4096,Con 22,Var (Local 1)]);
  PushFrame;
  PushReturnAddress 040537;
  SetLocal 1 4096;
  SetLocal 2 22;
  SetLocal 3 GetLocal(1);
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 036597
LocReturn 040537:
  Jump: 040545
LocOp 040545:
  TraceOperation 040545 (Test_attr (Var (Local 1)) (Con 1) (Branch F (Dloc 040555)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),0)];
  if (TestBit(b1,6)) {
    TraceOperation 040549 (Print_paddr (Con 28521));
    Note "<static Gettext address>";
    GamePrint "whom ";
    TraceOperation 040552 (Jump 040558);
    Jump: 040558
  } else {
    Jump: 040555
  }
LocOp 040555:
  TraceOperation 040555 (Print_paddr (Con 28522));
  Note "<static Gettext address>";
  GamePrint "which ";
  Jump: 040558
LocOp 040558:
  TraceOperation 040558 (Store (Con 4) (Con 1));
  SetLocal 4 1;
  Jump: 040561
LocOp 040561:
  TraceOperation 040561 (Jz (Var (Local 4)) (Branch T (Dloc 040586)));
  if (IsZero(GetLocal(4))) {
    Jump: 040586
  } else {
    TraceOperation 040564 (And (Var (Global 93)) (Con 8) Sp);
    Let b1 = M[007392];
    Let b2 = M[007393];
    PushStack And(MakeHiLo(b1,b2),8);
    TraceOperation 040568 (Jz (Var Sp) (Branch T (Dloc 040586)));
    PopStack popped3;
    if (IsZero(popped3)) {
      Jump: 040586
    } else {
      TraceOperation 040571 (Jg (Var (Local 7)) (Con 1) (Branch T (Dloc 040579)));
      if (GreaterThan(GetLocal(7),1)) {
        Jump: 040579
      } else {
        TraceOperation 040575 (Test_attr (Var (Local 6)) (Con 26) (Branch F (Dloc 040584)));
        Let b4 = M[Offset(Offset(000378,Mul(GetLocal(6),14)),3)];
        if (TestBit(b4,5)) {
          Jump: 040579
        } else {
          Jump: 040584
        }
      }
    }
  }
LocOp 040579:
  TraceOperation 040579 (Print_paddr (Var (Global 129)));
  Let b1 = M[007464];
  Let b2 = M[007465];
  GamePrint GetText(PackedAddress Z5(MakeHiLo(b1,b2)));
  TraceOperation 040581 (Jump 040586);
  Jump: 040586
LocOp 040584:
  TraceOperation 040584 (Print_paddr (Var (Global 128)));
  Let b1 = M[007462];
  Let b2 = M[007463];
  GamePrint GetText(PackedAddress Z5(MakeHiLo(b1,b2)));
  Jump: 040586
LocOp 040586:
  TraceOperation 040586 (And (Var (Global 93)) (Con 1) Sp);
  Let b1 = M[007392];
  Let b2 = M[007393];
  PushStack And(MakeHiLo(b1,b2),1);
  TraceOperation 040590 (Jz (Var Sp) (Branch T (Dloc 040594)));
  PopStack popped3;
  if (IsZero(popped3)) {
    Jump: 040594
  } else {
    TraceOperation 040593 New_line;
    GamePrint "\n";
    Jump: 040594
  }
LocOp 040594:
  TraceOperation 040594 (Jz (Var (Local 4)) (Branch T (Dloc 040661)));
  if (IsZero(GetLocal(4))) {
    Jump: 040661
  } else {
    TraceOperation 040598 (Get_child (Var (Local 1)) (Local 1) (Branch F (Dloc 040602)));
    Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),10)];
    Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),10),1)];
    SetLocal 1 MakeHiLo(b1,b2);
    if (IsZero(MakeHiLo(b1,b2))) {
      Jump: 040602
    } else {
      Jump: 040602
    }
  }
LocOp 040602:
  TraceOperation 040602 (Push (Var (Global 96)));
  Let b1 = M[007398];
  Let b2 = M[007399];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 040605 (Push (Var (Global 97)));
  Let b3 = M[007400];
  Let b4 = M[007401];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 040608 (Push (Var (Global 98)));
  Let b5 = M[007402];
  Let b6 = M[007403];
  PushStack MakeHiLo(b5,b6);
  TraceOperation 040611 (Push (Var (Global 95)));
  Let b7 = M[007396];
  Let b8 = M[007397];
  PushStack MakeHiLo(b7,b8);
  TraceOperation 040614 (Store (Con 111) (Con 9567));
  SetByte 007396 37;
  SetByte 007397 95;
  TraceOperation 040619 (Store (Con 112) (Con 0));
  SetByte 007398 0;
  SetByte 007399 0;
  TraceOperation 040622 (Store (Con 113) (Con 0));
  SetByte 007400 0;
  SetByte 007401 0;
  TraceOperation 040625 (Store (Con 114) (Con 0));
  SetByte 007402 0;
  SetByte 007403 0;
  TraceOperation 040628 (Add (Var (Local 2)) (Con 1) Sp);
  PushStack Add(GetLocal(2),1);
  TraceOperation 040632 (CallN (Floc 039116) [Var (Local 1),Var Sp,Con 1]);
  PopStack popped9;
  PushFrame;
  PushReturnAddress 040632;
  SetLocal 1 GetLocal(1);
  SetLocal 2 popped9;
  SetLocal 3 1;
  MakeRoutineFrame 15;
  SetLocal 15 0;
  SetLocal 14 0;
  SetLocal 13 0;
  SetLocal 12 0;
  SetLocal 11 0;
  SetLocal 10 0;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 039117
LocReturn 040632:
  TraceOperation 040639 (Pull (Con 111));
  PopStack popped1;
  SetByte 007396 HiByte(popped1);
  SetByte 007397 LoByte(popped1);
  TraceOperation 040642 (Pull (Con 114));
  PopStack popped2;
  SetByte 007402 HiByte(popped2);
  SetByte 007403 LoByte(popped2);
  TraceOperation 040645 (Pull (Con 113));
  PopStack popped3;
  SetByte 007400 HiByte(popped3);
  SetByte 007401 LoByte(popped3);
  TraceOperation 040648 (Pull (Con 112));
  PopStack popped4;
  SetByte 007398 HiByte(popped4);
  SetByte 007399 LoByte(popped4);
  TraceOperation 040651 (And (Var (Global 93)) (Con 64) Sp);
  Let b5 = M[007392];
  Let b6 = M[007393];
  PushStack And(MakeHiLo(b5,b6),64);
  TraceOperation 040655 (Jz (Var Sp) (Branch T (Dloc 040661)));
  PopStack popped7;
  if (IsZero(popped7)) {
    Jump: 040661
  } else {
    TraceOperation 040658 (Print ")");
    GamePrint ")";
    Jump: 040661
  }
LocOp 040661:
  TraceOperation 040661 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 040664:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 040665
LocOp 040665:
  TraceOperation 040665 (Sub (Var (Local 1)) (Con 48) (Local 2));
  SetLocal 2 Sub(GetLocal(1),48);
  TraceOperation 040669 (Jl (Var (Local 2)) (Con 0) (Branch T (Dloc 040677)));
  if (LessThan(GetLocal(2),0)) {
    Jump: 040677
  } else {
    TraceOperation 040673 (Jg (Var (Local 2)) (Con 9) (Branch F (Dloc 040680)));
    if (GreaterThan(GetLocal(2),9)) {
      Jump: 040677
    } else {
      Jump: 040680
    }
  }
LocOp 040677:
  TraceOperation 040677 (Ret (Con -1));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult -1;
  JumpIndirect: (return) return_address_1
LocOp 040680:
  TraceOperation 040680 (Ret (Var (Local 2)));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult GetLocal(2);
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 040684:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 040685
LocOp 040685:
  TraceOperation 040685 (Je [Var (Local 1),Var (Local 2)] (Branch F (Dloc 040691)));
  if (Equal(GetLocal(1),GetLocal(2))) {
    TraceOperation 040689 (Ret (Var (Local 1)));
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult GetLocal(1);
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 040691
  }
LocOp 040691:
  TraceOperation 040691 (Jg (Var (Local 1)) (Var (Local 2)) (Branch F (Dloc 040704)));
  if (GreaterThan(GetLocal(1),GetLocal(2))) {
    TraceOperation 040695 (Store (Con 3) (Var (Local 1)));
    SetLocal 3 GetLocal(1);
    TraceOperation 040698 (Store (Con 1) (Var (Local 2)));
    SetLocal 1 GetLocal(2);
    TraceOperation 040701 (Store (Con 2) (Var (Local 3)));
    SetLocal 2 GetLocal(3);
    Jump: 040704
  } else {
    Jump: 040704
  }
LocOp 040704:
  TraceOperation 040704 (Dec (Con 1));
  SetLocal 1 Sub(GetLocal(1),1);
  TraceOperation 040706 (Sub (Var (Local 2)) (Var (Local 1)) Sp);
  PushStack Sub(GetLocal(2),GetLocal(1));
  TraceOperation 040710 (Random (Var Sp) Sp);
  PopStack popped1;
  LetRandom random2 popped1;
  PushStack random2;
  TraceOperation 040714 (Add (Var Sp) (Var (Local 1)) Sp);
  PopStack popped3;
  PushStack Add(popped3,GetLocal(1));
  TraceOperation 040718 Ret_popped;
  PopStack popped4;
  PopFrame;
  PopReturnAddress return_address_5;
  SetResult popped4;
  JumpIndirect: (return) return_address_5
--------------------------------------------------
LocRoutine 040720:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 040721
LocOp 040721:
  TraceOperation 040721 (Get_child (Var (Local 1)) Sp (Branch F (Dloc 040725)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),10)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),10),1)];
  PushStack MakeHiLo(b1,b2);
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 040725
  } else {
    Jump: 040725
  }
LocOp 040725:
  TraceOperation 040725 (Jz (Var Sp) (Branch T (Dloc 040767)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 040767
  } else {
    TraceOperation 040728 (Get_child (Var (Local 1)) Sp (Branch F (Dloc 040732)));
    Let b2 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),10)];
    Let b3 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),10),1)];
    PushStack MakeHiLo(b2,b3);
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 040732
    } else {
      Jump: 040732
    }
  }
LocOp 040732:
  TraceOperation 040732 (Call (Floc 110116) [Var Sp,Var (Local 2)] Sp);
  PopStack popped1;
  PushFrame;
  PushReturnAddress 040732;
  SetLocal 1 popped1;
  SetLocal 2 GetLocal(2);
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 110117
LocReturn 040732:
  PushStack call_result;
  TraceOperation 040739 (Je [Var Sp,Var (Local 3)] (Branch T (Dloc 040755)));
  PopStack popped1;
  if (Equal(popped1,GetLocal(3))) {
    Jump: 040755
  } else {
    TraceOperation 040743 (Get_child (Var (Local 1)) Sp (Branch F (Dloc 040747)));
    Let b2 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),10)];
    Let b3 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),10),1)];
    PushStack MakeHiLo(b2,b3);
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 040747
    } else {
      Jump: 040747
    }
  }
LocOp 040747:
  TraceOperation 040747 (Insert_obj (Var Sp) (Con 40));
  PopStack popped1;
  Let b2 = M[Offset(Offset(000378,Mul(popped1,14)),6)];
  Let b3 = M[Offset(Offset(Offset(000378,Mul(popped1,14)),6),1)];
  if (IsZero(MakeHiLo(b2,b3))) {} else {
    Let b4 = M[Offset(Offset(000378,Mul(MakeHiLo(b2,b3),14)),10)];
    Let b5 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b2,b3),14)),10),1)];
    if (Equal(MakeHiLo(b4,b5),popped1)) {
      Let b6 = M[Offset(Offset(000378,Mul(popped1,14)),8)];
      Let b7 = M[Offset(Offset(Offset(000378,Mul(popped1,14)),8),1)];
      SetByte Offset(Offset(000378,Mul(MakeHiLo(b2,b3),14)),10) b6;
      SetByte Offset(Offset(Offset(000378,Mul(MakeHiLo(b2,b3),14)),10),1) b7;
    } else {
      Let loop_var8 = MakeHiLo(b4,b5);
      Label 9: {
        Let b10 = M[Offset(Offset(000378,Mul(loop_var8,14)),8)];
        Let b11 = M[Offset(Offset(Offset(000378,Mul(loop_var8,14)),8),1)];
        if (Equal(MakeHiLo(b10,b11),popped1)) {
          Let b12 = M[Offset(Offset(000378,Mul(popped1,14)),8)];
          Let b13 = M[Offset(Offset(Offset(000378,Mul(popped1,14)),8),1)];
          SetByte Offset(Offset(000378,Mul(loop_var8,14)),8) b12;
          SetByte Offset(Offset(Offset(000378,Mul(loop_var8,14)),8),1) b13;
        } else {
          Assign loop_var8 = MakeHiLo(b10,b11);
          Goto: Label 9
        }
      }
    }
  }
  SetByte Offset(Offset(000378,Mul(popped1,14)),6) 0;
  SetByte Offset(Offset(Offset(000378,Mul(popped1,14)),6),1) 40;
  Let b14 = M[000948];
  Let b15 = M[000949];
  SetByte Offset(Offset(000378,Mul(popped1,14)),8) b14;
  SetByte Offset(Offset(Offset(000378,Mul(popped1,14)),8),1) b15;
  SetByte 000948 HiByte(popped1);
  SetByte 000949 LoByte(popped1);
  TraceOperation 040752 (Jump 040764);
  Jump: 040764
LocOp 040755:
  TraceOperation 040755 (Get_child (Var (Local 1)) Sp (Branch F (Dloc 040759)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),10)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),10),1)];
  PushStack MakeHiLo(b1,b2);
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 040759
  } else {
    Jump: 040759
  }
LocOp 040759:
  TraceOperation 040759 (Insert_obj (Var Sp) (Con 39));
  PopStack popped1;
  Let b2 = M[Offset(Offset(000378,Mul(popped1,14)),6)];
  Let b3 = M[Offset(Offset(Offset(000378,Mul(popped1,14)),6),1)];
  if (IsZero(MakeHiLo(b2,b3))) {} else {
    Let b4 = M[Offset(Offset(000378,Mul(MakeHiLo(b2,b3),14)),10)];
    Let b5 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b2,b3),14)),10),1)];
    if (Equal(MakeHiLo(b4,b5),popped1)) {
      Let b6 = M[Offset(Offset(000378,Mul(popped1,14)),8)];
      Let b7 = M[Offset(Offset(Offset(000378,Mul(popped1,14)),8),1)];
      SetByte Offset(Offset(000378,Mul(MakeHiLo(b2,b3),14)),10) b6;
      SetByte Offset(Offset(Offset(000378,Mul(MakeHiLo(b2,b3),14)),10),1) b7;
    } else {
      Let loop_var8 = MakeHiLo(b4,b5);
      Label 9: {
        Let b10 = M[Offset(Offset(000378,Mul(loop_var8,14)),8)];
        Let b11 = M[Offset(Offset(Offset(000378,Mul(loop_var8,14)),8),1)];
        if (Equal(MakeHiLo(b10,b11),popped1)) {
          Let b12 = M[Offset(Offset(000378,Mul(popped1,14)),8)];
          Let b13 = M[Offset(Offset(Offset(000378,Mul(popped1,14)),8),1)];
          SetByte Offset(Offset(000378,Mul(loop_var8,14)),8) b12;
          SetByte Offset(Offset(Offset(000378,Mul(loop_var8,14)),8),1) b13;
        } else {
          Assign loop_var8 = MakeHiLo(b10,b11);
          Goto: Label 9
        }
      }
    }
  }
  SetByte Offset(Offset(000378,Mul(popped1,14)),6) 0;
  SetByte Offset(Offset(Offset(000378,Mul(popped1,14)),6),1) 39;
  Let b14 = M[000934];
  Let b15 = M[000935];
  SetByte Offset(Offset(000378,Mul(popped1,14)),8) b14;
  SetByte Offset(Offset(Offset(000378,Mul(popped1,14)),8),1) b15;
  SetByte 000934 HiByte(popped1);
  SetByte 000935 LoByte(popped1);
  Jump: 040764
LocOp 040764:
  TraceOperation 040764 (Jump 040721);
  Jump: 040721
LocOp 040767:
  TraceOperation 040767 (Get_child (Con 39) Sp (Branch F (Dloc 040772)));
  Let b1 = M[000934];
  Let b2 = M[000935];
  PushStack MakeHiLo(b1,b2);
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 040772
  } else {
    Jump: 040772
  }
LocOp 040772:
  TraceOperation 040772 (Jz (Var Sp) (Branch T (Dloc 040786)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 040786
  } else {
    TraceOperation 040775 (Get_child (Con 39) Sp (Branch F (Dloc 040780)));
    Let b2 = M[000934];
    Let b3 = M[000935];
    PushStack MakeHiLo(b2,b3);
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 040780
    } else {
      Jump: 040780
    }
  }
LocOp 040780:
  TraceOperation 040780 (Insert_obj (Var Sp) (Var (Local 1)));
  PopStack popped1;
  Let b2 = M[Offset(Offset(000378,Mul(popped1,14)),6)];
  Let b3 = M[Offset(Offset(Offset(000378,Mul(popped1,14)),6),1)];
  if (IsZero(MakeHiLo(b2,b3))) {} else {
    Let b4 = M[Offset(Offset(000378,Mul(MakeHiLo(b2,b3),14)),10)];
    Let b5 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b2,b3),14)),10),1)];
    if (Equal(MakeHiLo(b4,b5),popped1)) {
      Let b6 = M[Offset(Offset(000378,Mul(popped1,14)),8)];
      Let b7 = M[Offset(Offset(Offset(000378,Mul(popped1,14)),8),1)];
      SetByte Offset(Offset(000378,Mul(MakeHiLo(b2,b3),14)),10) b6;
      SetByte Offset(Offset(Offset(000378,Mul(MakeHiLo(b2,b3),14)),10),1) b7;
    } else {
      Let loop_var8 = MakeHiLo(b4,b5);
      Label 9: {
        Let b10 = M[Offset(Offset(000378,Mul(loop_var8,14)),8)];
        Let b11 = M[Offset(Offset(Offset(000378,Mul(loop_var8,14)),8),1)];
        if (Equal(MakeHiLo(b10,b11),popped1)) {
          Let b12 = M[Offset(Offset(000378,Mul(popped1,14)),8)];
          Let b13 = M[Offset(Offset(Offset(000378,Mul(popped1,14)),8),1)];
          SetByte Offset(Offset(000378,Mul(loop_var8,14)),8) b12;
          SetByte Offset(Offset(Offset(000378,Mul(loop_var8,14)),8),1) b13;
        } else {
          Assign loop_var8 = MakeHiLo(b10,b11);
          Goto: Label 9
        }
      }
    }
  }
  SetByte Offset(Offset(000378,Mul(popped1,14)),6) HiByte(GetLocal(1));
  SetByte Offset(Offset(Offset(000378,Mul(popped1,14)),6),1) LoByte(GetLocal(1));
  Let b14 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),10)];
  Let b15 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),10),1)];
  SetByte Offset(Offset(000378,Mul(popped1,14)),8) b14;
  SetByte Offset(Offset(Offset(000378,Mul(popped1,14)),8),1) b15;
  SetByte Offset(Offset(000378,Mul(GetLocal(1),14)),10) HiByte(popped1);
  SetByte Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),10),1) LoByte(popped1);
  TraceOperation 040783 (Jump 040767);
  Jump: 040767
LocOp 040786:
  TraceOperation 040786 (Get_child (Con 40) Sp (Branch F (Dloc 040791)));
  Let b1 = M[000948];
  Let b2 = M[000949];
  PushStack MakeHiLo(b1,b2);
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 040791
  } else {
    Jump: 040791
  }
LocOp 040791:
  TraceOperation 040791 (Jz (Var Sp) (Branch T (Dloc 040805)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 040805
  } else {
    TraceOperation 040794 (Get_child (Con 40) Sp (Branch F (Dloc 040799)));
    Let b2 = M[000948];
    Let b3 = M[000949];
    PushStack MakeHiLo(b2,b3);
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 040799
    } else {
      Jump: 040799
    }
  }
LocOp 040799:
  TraceOperation 040799 (Insert_obj (Var Sp) (Var (Local 1)));
  PopStack popped1;
  Let b2 = M[Offset(Offset(000378,Mul(popped1,14)),6)];
  Let b3 = M[Offset(Offset(Offset(000378,Mul(popped1,14)),6),1)];
  if (IsZero(MakeHiLo(b2,b3))) {} else {
    Let b4 = M[Offset(Offset(000378,Mul(MakeHiLo(b2,b3),14)),10)];
    Let b5 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b2,b3),14)),10),1)];
    if (Equal(MakeHiLo(b4,b5),popped1)) {
      Let b6 = M[Offset(Offset(000378,Mul(popped1,14)),8)];
      Let b7 = M[Offset(Offset(Offset(000378,Mul(popped1,14)),8),1)];
      SetByte Offset(Offset(000378,Mul(MakeHiLo(b2,b3),14)),10) b6;
      SetByte Offset(Offset(Offset(000378,Mul(MakeHiLo(b2,b3),14)),10),1) b7;
    } else {
      Let loop_var8 = MakeHiLo(b4,b5);
      Label 9: {
        Let b10 = M[Offset(Offset(000378,Mul(loop_var8,14)),8)];
        Let b11 = M[Offset(Offset(Offset(000378,Mul(loop_var8,14)),8),1)];
        if (Equal(MakeHiLo(b10,b11),popped1)) {
          Let b12 = M[Offset(Offset(000378,Mul(popped1,14)),8)];
          Let b13 = M[Offset(Offset(Offset(000378,Mul(popped1,14)),8),1)];
          SetByte Offset(Offset(000378,Mul(loop_var8,14)),8) b12;
          SetByte Offset(Offset(Offset(000378,Mul(loop_var8,14)),8),1) b13;
        } else {
          Assign loop_var8 = MakeHiLo(b10,b11);
          Goto: Label 9
        }
      }
    }
  }
  SetByte Offset(Offset(000378,Mul(popped1,14)),6) HiByte(GetLocal(1));
  SetByte Offset(Offset(Offset(000378,Mul(popped1,14)),6),1) LoByte(GetLocal(1));
  Let b14 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),10)];
  Let b15 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),10),1)];
  SetByte Offset(Offset(000378,Mul(popped1,14)),8) b14;
  SetByte Offset(Offset(Offset(000378,Mul(popped1,14)),8),1) b15;
  SetByte Offset(Offset(000378,Mul(GetLocal(1),14)),10) HiByte(popped1);
  SetByte Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),10),1) LoByte(popped1);
  TraceOperation 040802 (Jump 040786);
  Jump: 040786
LocOp 040805:
  TraceOperation 040805 (Get_child (Var (Local 1)) Sp (Branch F (Dloc 040809)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),10)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),10),1)];
  PushStack MakeHiLo(b1,b2);
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 040809
  } else {
    Jump: 040809
  }
LocOp 040809:
  TraceOperation 040809 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 040812:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 040813
LocOp 040813:
  TraceOperation 040813 (Jg (Var (Local 1)) (Con 0) (Branch F (Dloc 040827)));
  if (GreaterThan(GetLocal(1),0)) {
    TraceOperation 040817 (Print " ");
    GamePrint " ";
    TraceOperation 040820 (Sub (Var (Local 1)) (Con 1) (Local 1));
    SetLocal 1 Sub(GetLocal(1),1);
    TraceOperation 040824 (Jump 040813);
    Jump: 040813
  } else {
    Jump: 040827
  }
LocOp 040827:
  TraceOperation 040827 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 040828:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 040829
LocOp 040829:
  TraceOperation 040829 (Je [Var (Local 1),Con 8] (Branch F (Dloc 040836)));
  if (Equal(GetLocal(1),8)) {
    TraceOperation 040833 (Store (Con 1) (Var (Global 32)));
    Let b1 = M[007270];
    Let b2 = M[007271];
    SetLocal 1 MakeHiLo(b1,b2);
    Jump: 040836
  } else {
    Jump: 040836
  }
LocOp 040836:
  TraceOperation 040836 (Call (Floc 110912) [Var (Local 1),Var (Local 2)] Sp);
  PushFrame;
  PushReturnAddress 040836;
  SetLocal 1 GetLocal(1);
  SetLocal 2 GetLocal(2);
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 110913
LocReturn 040836:
  PushStack call_result;
  TraceOperation 040843 (Jz (Var Sp) (Branch F (Dloc 040850)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 040846 (Jl (Var (Local 2)) (Con 64) (Branch F Dfalse));
    if (LessThan(GetLocal(2),64)) {
      Jump: 040850
    } else {
      PopFrame;
      PopReturnAddress return_address_2;
      SetResult 0;
      JumpIndirect: (return) return_address_2
    }
  } else {
    Jump: 040850
  }
LocOp 040850:
  TraceOperation 040850 (Call (Floc 110196) [Var (Local 1),Var (Local 2)] Sp);
  PushFrame;
  PushReturnAddress 040850;
  SetLocal 1 GetLocal(1);
  SetLocal 2 GetLocal(2);
  MakeRoutineFrame 15;
  SetLocal 15 0;
  SetLocal 14 0;
  SetLocal 13 0;
  SetLocal 12 0;
  SetLocal 11 0;
  SetLocal 10 0;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 110197
LocReturn 040850:
  PushStack call_result;
  TraceOperation 040857 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 040860:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 040861
LocOp 040861:
  TraceOperation 040861 (Store (Con 1) (Con 1));
  SetLocal 1 1;
  Jump: 040864
LocOp 040864:
  TraceOperation 040864 (Call (Floc 026172) [Var (Local 1),Con 2] Sp);
  PushFrame;
  PushReturnAddress 040864;
  SetLocal 1 GetLocal(1);
  SetLocal 2 2;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 040864:
  PushStack call_result;
  TraceOperation 040871 (Jz (Var Sp) (Branch T (Dloc 040903)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 040903
  } else {
    TraceOperation 040874 (Store (Con 2) (Con 0));
    SetLocal 2 0;
    TraceOperation 040877 (Test_attr (Var (Local 1)) (Con 35) (Branch F (Dloc 040884)));
    Let b2 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),4)];
    if (TestBit(b2,4)) {
      TraceOperation 040881 (Store (Con 2) (Con 1));
      SetLocal 2 1;
      Jump: 040884
    } else {
      Jump: 040884
    }
  }
LocOp 040884:
  TraceOperation 040884 (Clear_attr (Var (Local 1)) (Con 35));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),4)];
  SetByte Offset(Offset(000378,Mul(GetLocal(1),14)),4) ClearBit(b1,4);
  TraceOperation 040887 (Test_attr (Var (Local 1)) (Con 34) (Branch F (Dloc 040894)));
  Let b2 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),4)];
  if (TestBit(b2,5)) {
    TraceOperation 040891 (Set_attr (Var (Local 1)) (Con 35));
    Let b3 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),4)];
    SetByte Offset(Offset(000378,Mul(GetLocal(1),14)),4) SetBit(b3,4);
    Jump: 040894
  } else {
    Jump: 040894
  }
LocOp 040894:
  TraceOperation 040894 (Clear_attr (Var (Local 1)) (Con 34));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),4)];
  SetByte Offset(Offset(000378,Mul(GetLocal(1),14)),4) ClearBit(b1,5);
  TraceOperation 040897 (Jz (Var (Local 2)) (Branch T (Dloc 040903)));
  if (IsZero(GetLocal(2))) {
    Jump: 040903
  } else {
    TraceOperation 040900 (Set_attr (Var (Local 1)) (Con 34));
    Let b2 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),4)];
    SetByte Offset(Offset(000378,Mul(GetLocal(1),14)),4) SetBit(b2,5);
    Jump: 040903
  }
LocOp 040903:
  TraceOperation 040903 (Inc (Con 1));
  SetLocal 1 Add(GetLocal(1),1);
  TraceOperation 040905 (Jg (Var (Local 1)) (Con 72) (Branch T (Dloc 040914)));
  if (GreaterThan(GetLocal(1),72)) {
    Jump: 040914
  } else {
    TraceOperation 040911 (Jump 040864);
    Jump: 040864
  }
LocOp 040914:
  TraceOperation 040914 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 040916:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 040917
LocOp 040917:
  TraceOperation 040917 (Jz (Var (Local 1)) (Branch T Dtrue));
  if (IsZero(GetLocal(1))) {
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    TraceOperation 040920 Rfalse;
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  }
--------------------------------------------------
LocRoutine 040924:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 040925
LocOp 040925:
  TraceOperation 040925 (Jz (Var (Local 2)) (Branch F (Dloc 040934)));
  if (IsZero(GetLocal(2))) {
    TraceOperation 040928 (CallN (Floc 086692) [Con 17]);
    PushFrame;
    PushReturnAddress 040928;
    SetLocal 1 17;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 086693
  } else {
    Jump: 040934
  }
LocReturn 040928:
  TraceOperation 040933 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
LocOp 040934:
  TraceOperation 040934 (Div (Var (Local 1)) (Var (Local 2)) Sp);
  PushStack Div(GetLocal(1),GetLocal(2));
  TraceOperation 040938 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 040940:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 040941
LocOp 040941:
  TraceOperation 040941 (Jz (Var (Local 2)) (Branch F (Dloc 040950)));
  if (IsZero(GetLocal(2))) {
    TraceOperation 040944 (CallN (Floc 086692) [Con 17]);
    PushFrame;
    PushReturnAddress 040944;
    SetLocal 1 17;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 086693
  } else {
    Jump: 040950
  }
LocReturn 040944:
  TraceOperation 040949 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
LocOp 040950:
  TraceOperation 040950 (Mod (Var (Local 1)) (Var (Local 2)) Sp);
  PushStack Mod(GetLocal(1),GetLocal(2));
  TraceOperation 040954 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 040956:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 040957
LocOp 040957:
  TraceOperation 040957 (Je [Var (Local 1),Var (Local 2)] (Branch F (Dloc 040962)));
  if (Equal(GetLocal(1),GetLocal(2))) {
    TraceOperation 040961 Rfalse;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 0;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 040962
  }
LocOp 040962:
  TraceOperation 040962 (Jl (Var (Local 1)) (Con 0) (Branch F (Dloc 040971)));
  if (LessThan(GetLocal(1),0)) {
    TraceOperation 040966 (Jl (Var (Local 2)) (Con 0) (Branch T (Dloc 040971)));
    if (LessThan(GetLocal(2),0)) {
      Jump: 040971
    } else {
      TraceOperation 040970 Rtrue;
      PopFrame;
      PopReturnAddress return_address_1;
      SetResult 1;
      JumpIndirect: (return) return_address_1
    }
  } else {
    Jump: 040971
  }
LocOp 040971:
  TraceOperation 040971 (Jl (Var (Local 1)) (Con 0) (Branch T (Dloc 040982)));
  if (LessThan(GetLocal(1),0)) {
    Jump: 040982
  } else {
    TraceOperation 040975 (Jl (Var (Local 2)) (Con 0) (Branch F (Dloc 040982)));
    if (LessThan(GetLocal(2),0)) {
      TraceOperation 040979 (Ret (Con -1));
      PopFrame;
      PopReturnAddress return_address_1;
      SetResult -1;
      JumpIndirect: (return) return_address_1
    } else {
      Jump: 040982
    }
  }
LocOp 040982:
  TraceOperation 040982 (And (Var (Local 1)) (Con 32767) (Local 3));
  SetLocal 3 And(GetLocal(1),32767);
  TraceOperation 040988 (And (Var (Local 2)) (Con 32767) (Local 4));
  SetLocal 4 And(GetLocal(2),32767);
  TraceOperation 040994 (Jg (Var (Local 3)) (Var (Local 4)) (Branch F (Dloc 040999)));
  if (GreaterThan(GetLocal(3),GetLocal(4))) {
    TraceOperation 040998 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 040999
  }
LocOp 040999:
  TraceOperation 040999 (Ret (Con -1));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult -1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 041004:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 041005
LocOp 041005:
  TraceOperation 041005 (Call (Floc 112940) [Var (Local 1)] Sp);
  PushFrame;
  PushReturnAddress 041005;
  SetLocal 1 GetLocal(1);
  MakeRoutineFrame 1;
  Jump: 112941
LocReturn 041005:
  PushStack call_result;
  TraceOperation 041011 (Pull (Con 255));
  PopStack popped1;
  SetByte 007684 HiByte(popped1);
  SetByte 007685 LoByte(popped1);
  TraceOperation 041014 (Je [Var (Global 239),Con 0] (Branch F (Dloc 041019)));
  Let b2 = M[007684];
  Let b3 = M[007685];
  if (Equal(MakeHiLo(b2,b3),0)) {
    TraceOperation 041018 Rfalse;
    PopFrame;
    PopReturnAddress return_address_4;
    SetResult 0;
    JumpIndirect: (return) return_address_4
  } else {
    Jump: 041019
  }
LocOp 041019:
  TraceOperation 041019 (Je [Var (Global 239),Con 2,Con 1] (Branch F (Dloc 041026)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (LogOr(Equal(MakeHiLo(b1,b2),2),Equal(MakeHiLo(b1,b2),1))) {
    TraceOperation 041025 Rtrue;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 041026
  }
LocOp 041026:
  TraceOperation 041026 (Je [Var (Global 239),Con 3] (Branch F (Dloc 041032)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),3)) {
    TraceOperation 041030 (Ret (Con 2));
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 2;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 041032
  }
LocOp 041032:
  TraceOperation 041032 (Je [Var (Global 239),Con 4] (Branch F (Dloc 041038)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),4)) {
    TraceOperation 041036 (Ret (Con 3));
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 3;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 041038
  }
LocOp 041038:
  TraceOperation 041038 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 041040:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 041041
LocOp 041041:
  TraceOperation 041041 (Je [Var (Global 37),Var (Global 31)] (Branch F Dtrue));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 041045 (Jz (Var (Global 53)) (Branch F Dtrue));
    Let b5 = M[007312];
    Let b6 = M[007313];
    if (IsZero(MakeHiLo(b5,b6))) {
      TraceOperation 041048 (Call (Floc 036596) [Var (Local 1),Var (Local 2),Var (Local 3),Var (Local 4)] Sp);
      PushFrame;
      PushReturnAddress 041048;
      SetLocal 1 GetLocal(1);
      SetLocal 2 GetLocal(2);
      SetLocal 3 GetLocal(3);
      SetLocal 4 GetLocal(4);
      MakeRoutineFrame 6;
      SetLocal 6 0;
      SetLocal 5 0;
      Jump: 036597
    } else {
      PopFrame;
      PopReturnAddress return_address_7;
      SetResult 1;
      JumpIndirect: (return) return_address_7
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_8;
    SetResult 1;
    JumpIndirect: (return) return_address_8
  }
LocReturn 041048:
  PushStack call_result;
  TraceOperation 041058 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 041060:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 041061
LocOp 041061:
  TraceOperation 041061 (Jz (Var (Global 53)) (Branch F Dtrue));
  Let b1 = M[007312];
  Let b2 = M[007313];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 041064 (Call (Floc 036596) [Var (Local 1),Var (Local 2),Var (Local 3),Var (Local 4)] Sp);
    PushFrame;
    PushReturnAddress 041064;
    SetLocal 1 GetLocal(1);
    SetLocal 2 GetLocal(2);
    SetLocal 3 GetLocal(3);
    SetLocal 4 GetLocal(4);
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    Jump: 036597
  } else {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  }
LocReturn 041064:
  PushStack call_result;
  TraceOperation 041074 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 041076:
  MakeRoutineFrame 0;
  Jump: 041077
LocOp 041077:
  TraceOperation 041077 (Loadb (Con 8867) (Con 1) Sp);
  Let b1 = M[008868];
  PushStack Widen(b1);
  TraceOperation 041083 Ret_popped;
  PopStack popped2;
  PopFrame;
  PopReturnAddress return_address_3;
  SetResult popped2;
  JumpIndirect: (return) return_address_3
--------------------------------------------------
LocRoutine 041084:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 041085
LocOp 041085:
  TraceOperation 041085 (Mul (Var (Local 1)) (Con 4) Sp);
  PushStack Mul(GetLocal(1),4);
  TraceOperation 041089 (Add (Var Sp) (Con 1) Sp);
  PopStack popped1;
  PushStack Add(popped1,1);
  TraceOperation 041093 (Loadb (Con 8867) (Var Sp) Sp);
  PopStack popped2;
  Let b3 = M[Offset(008867,popped2)];
  PushStack Widen(b3);
  TraceOperation 041099 (Add (Con 8498) (Var Sp) Sp);
  PopStack popped4;
  PushStack Add(8498,popped4);
  TraceOperation 041105 Ret_popped;
  PopStack popped5;
  PopFrame;
  PopReturnAddress return_address_6;
  SetResult popped5;
  JumpIndirect: (return) return_address_6
--------------------------------------------------
LocRoutine 041108:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 041109
LocOp 041109:
  TraceOperation 041109 (Mul (Var (Local 1)) (Con 4) Sp);
  PushStack Mul(GetLocal(1),4);
  TraceOperation 041113 (Loadb (Con 8867) (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(008867,popped1)];
  PushStack Widen(b2);
  TraceOperation 041119 Ret_popped;
  PopStack popped3;
  PopFrame;
  PopReturnAddress return_address_4;
  SetResult popped3;
  JumpIndirect: (return) return_address_4
--------------------------------------------------
LocRoutine 041120:
  MakeRoutineFrame 5;
  if (LessThanByte(num_actuals,5)) {
    SetLocal 5 0;
    if (LessThanByte(num_actuals,4)) {
      SetLocal 4 0;
      if (LessThanByte(num_actuals,3)) {
        SetLocal 3 0;
        if (LessThanByte(num_actuals,2)) {
          SetLocal 2 0;
          if (LessThanByte(num_actuals,1)) {
            SetLocal 1 0;
          }
        }
      }
    }
  }
  Jump: 041121
LocOp 041121:
  TraceOperation 041121 (Mul (Var (Local 1)) (Con 2) Sp);
  PushStack Mul(GetLocal(1),2);
  TraceOperation 041125 (Sub (Var Sp) (Con 1) (Local 4));
  PopStack popped1;
  SetLocal 4 Sub(popped1,1);
  TraceOperation 041129 (Mul (Var (Local 3)) (Con 2) Sp);
  PushStack Mul(GetLocal(3),2);
  TraceOperation 041133 (Sub (Var Sp) (Con 1) (Local 5));
  PopStack popped2;
  SetLocal 5 Sub(popped2,1);
  TraceOperation 041137 (Push (Var (Local 5)));
  PushStack GetLocal(5);
  TraceOperation 041140 (Inc (Con 5));
  SetLocal 5 Add(GetLocal(5),1);
  TraceOperation 041142 (Loadw (Var (Local 2)) (Var Sp) Sp);
  PopStack popped3;
  Let b4 = M[Offset(Address(GetLocal(2)),Mul(2,popped3))];
  Let b5 = M[Offset(Offset(Address(GetLocal(2)),Mul(2,popped3)),1)];
  PushStack MakeHiLo(b4,b5);
  TraceOperation 041146 (Push (Var (Local 4)));
  PushStack GetLocal(4);
  TraceOperation 041149 (Inc (Con 4));
  SetLocal 4 Add(GetLocal(4),1);
  TraceOperation 041151 (Storew (Con 8867) (Var Sp) (Var Sp));
  PopStack popped6;
  PopStack popped7;
  SetByte Offset(008867,Mul(2,popped6)) HiByte(popped7);
  SetByte Offset(Offset(008867,Mul(2,popped6)),1) LoByte(popped7);
  TraceOperation 041157 (Loadw (Var (Local 2)) (Var (Local 5)) Sp);
  Let b8 = M[Offset(Address(GetLocal(2)),Mul(2,GetLocal(5)))];
  Let b9 = M[Offset(Offset(Address(GetLocal(2)),Mul(2,GetLocal(5))),1)];
  PushStack MakeHiLo(b8,b9);
  TraceOperation 041161 (Storew (Con 8867) (Var (Local 4)) (Var Sp));
  PopStack popped10;
  SetByte Offset(008867,Mul(2,GetLocal(4))) HiByte(popped10);
  SetByte Offset(Offset(008867,Mul(2,GetLocal(4))),1) LoByte(popped10);
  TraceOperation 041167 Rtrue;
  PopFrame;
  PopReturnAddress return_address_11;
  SetResult 1;
  JumpIndirect: (return) return_address_11
--------------------------------------------------
LocRoutine 041168:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 041169
LocOp 041169:
  TraceOperation 041169 (Loadb (Con 8867) (Con 1) (Local 3));
  Let b1 = M[008868];
  SetLocal 3 Widen(b1);
  TraceOperation 041175 (Mul (Var (Global 75)) (Con 2) Sp);
  Let b2 = M[007356];
  Let b3 = M[007357];
  PushStack Mul(MakeHiLo(b2,b3),2);
  TraceOperation 041179 (Sub (Var Sp) (Con 1) (Local 1));
  PopStack popped4;
  SetLocal 1 Sub(popped4,1);
  TraceOperation 041183 (Inc (Con 91));
  Let b5 = M[007356];
  Let b6 = M[007357];
  SetByte 007356 HiByte(Add(MakeHiLo(b5,b6),1));
  SetByte 007357 LoByte(Add(MakeHiLo(b5,b6),1));
  TraceOperation 041185 (Jl (Var (Global 75)) (Con 2) (Branch T (Dloc 041197)));
  Let b7 = M[007356];
  Let b8 = M[007357];
  if (LessThan(MakeHiLo(b7,b8),2)) {
    Jump: 041197
  } else {
    TraceOperation 041189 (Add (Var (Local 3)) (Con 1) Sp);
    PushStack Add(GetLocal(3),1);
    TraceOperation 041193 (Jg (Var (Global 75)) (Var Sp) (Branch F (Dloc 041198)));
    Let b9 = M[007356];
    Let b10 = M[007357];
    PopStack popped11;
    if (GreaterThan(MakeHiLo(b9,b10),popped11)) {
      Jump: 041197
    } else {
      Jump: 041198
    }
  }
LocOp 041197:
  TraceOperation 041197 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
LocOp 041198:
  TraceOperation 041198 (Loadw (Con 8867) (Var (Local 1)) (Local 2));
  Let b1 = M[Offset(008867,Mul(2,GetLocal(1)))];
  Let b2 = M[Offset(Offset(008867,Mul(2,GetLocal(1))),1)];
  SetLocal 2 MakeHiLo(b1,b2);
  TraceOperation 041204 (Je [Var (Local 2),Con 21458] (Branch F (Dloc 041215)));
  if (Equal(GetLocal(2),21458)) {
    TraceOperation 041210 (Store (Con 2) (Con 21836));
    SetLocal 2 21836;
    Jump: 041215
  } else {
    Jump: 041215
  }
LocOp 041215:
  TraceOperation 041215 (Je [Var (Local 2),Con 21449] (Branch F (Dloc 041226)));
  if (Equal(GetLocal(2),21449)) {
    TraceOperation 041221 (Store (Con 2) (Con 23996));
    SetLocal 2 23996;
    Jump: 041226
  } else {
    Jump: 041226
  }
LocOp 041226:
  TraceOperation 041226 (Ret (Var (Local 2)));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult GetLocal(2);
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 041228:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 041229
LocOp 041229:
  TraceOperation 041229 (Loadb (Con 8867) (Con 1) (Local 1));
  Let b1 = M[008868];
  SetLocal 1 Widen(b1);
  TraceOperation 041235 (Jl (Var (Global 75)) (Con 1) (Branch T (Dloc 041243)));
  Let b2 = M[007356];
  Let b3 = M[007357];
  if (LessThan(MakeHiLo(b2,b3),1)) {
    Jump: 041243
  } else {
    TraceOperation 041239 (Jg (Var (Global 75)) (Var (Local 1)) (Branch F (Dloc 041248)));
    Let b4 = M[007356];
    Let b5 = M[007357];
    if (GreaterThan(MakeHiLo(b4,b5),GetLocal(1))) {
      Jump: 041243
    } else {
      Jump: 041248
    }
  }
LocOp 041243:
  TraceOperation 041243 (Inc (Con 91));
  Let b1 = M[007356];
  Let b2 = M[007357];
  SetByte 007356 HiByte(Add(MakeHiLo(b1,b2),1));
  SetByte 007357 LoByte(Add(MakeHiLo(b1,b2),1));
  TraceOperation 041245 (Ret (Con -1));
  PopFrame;
  PopReturnAddress return_address_3;
  SetResult -1;
  JumpIndirect: (return) return_address_3
LocOp 041248:
  TraceOperation 041248 (Call (Floc 041168) [] Sp);
  PushFrame;
  PushReturnAddress 041248;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  SetLocal 2 0;
  SetLocal 1 0;
  Jump: 041169
LocReturn 041248:
  PushStack call_result;
  TraceOperation 041252 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 041256:
  MakeRoutineFrame 6;
  if (LessThanByte(num_actuals,6)) {
    SetLocal 6 0;
    if (LessThanByte(num_actuals,5)) {
      SetLocal 5 0;
      if (LessThanByte(num_actuals,4)) {
        SetLocal 4 0;
        if (LessThanByte(num_actuals,3)) {
          SetLocal 3 0;
          if (LessThanByte(num_actuals,2)) {
            SetLocal 2 0;
            if (LessThanByte(num_actuals,1)) {
              SetLocal 1 0;
            }
          }
        }
      }
    }
  }
  Jump: 041257
LocOp 041257:
  TraceOperation 041257 (Div (Var (Local 1)) (Con 100) (Local 5));
  SetLocal 5 Div(GetLocal(1),100);
  TraceOperation 041261 (Mod (Var (Local 1)) (Con 100) Sp);
  PushStack Mod(GetLocal(1),100);
  TraceOperation 041265 (Add (Var (Local 5)) (Var Sp) Sp);
  PopStack popped1;
  PushStack Add(GetLocal(5),popped1);
  TraceOperation 041269 (Sub (Var Sp) (Con 1) (Local 6));
  PopStack popped2;
  SetLocal 6 Sub(popped2,1);
  TraceOperation 041273 (Jl (Var (Local 6)) (Var (Local 5)) (Branch T (Dloc 041289)));
  if (LessThan(GetLocal(6),GetLocal(5))) {
    Jump: 041289
  } else {
    TraceOperation 041277 (Jl (Var (Local 5)) (Con 1) (Branch T (Dloc 041289)));
    if (LessThan(GetLocal(5),1)) {
      Jump: 041289
    } else {
      TraceOperation 041281 (Call (Floc 041076) [] Sp);
      PushFrame;
      PushReturnAddress 041281;
      MakeRoutineFrame 0;
      Jump: 041077
    }
  }
LocReturn 041281:
  PushStack call_result;
  TraceOperation 041285 (Jg (Var (Local 6)) (Var Sp) (Branch F (Dloc 041298)));
  PopStack popped1;
  if (GreaterThan(GetLocal(6),popped1)) {
    Jump: 041289
  } else {
    Jump: 041298
  }
LocOp 041289:
  TraceOperation 041289 (Call (Floc 086692) [Con 39,Var (Local 5),Var (Local 6)] Sp);
  PushFrame;
  PushReturnAddress 041289;
  SetLocal 1 39;
  SetLocal 2 GetLocal(5);
  SetLocal 3 GetLocal(6);
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 086693
LocReturn 041289:
  PushStack call_result;
  TraceOperation 041297 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 041298:
  TraceOperation 041298 (Call (Floc 041084) [Var (Local 5)] (Local 2));
  PushFrame;
  PushReturnAddress 041298;
  SetLocal 1 GetLocal(5);
  MakeRoutineFrame 1;
  Jump: 041085
LocReturn 041298:
  SetLocal 2 call_result;
  TraceOperation 041304 (Call (Floc 041108) [Var (Local 6)] Sp);
  PushFrame;
  PushReturnAddress 041304;
  SetLocal 1 GetLocal(6);
  MakeRoutineFrame 1;
  Jump: 041109
LocReturn 041304:
  PushStack call_result;
  TraceOperation 041310 (Call (Floc 041084) [Var (Local 6)] Sp);
  PushFrame;
  PushReturnAddress 041310;
  SetLocal 1 GetLocal(6);
  MakeRoutineFrame 1;
  Jump: 041085
LocReturn 041310:
  PushStack call_result;
  TraceOperation 041316 (Add (Var Sp) (Var Sp) Sp);
  PopStack popped1;
  PopStack popped2;
  PushStack Add(popped1,popped2);
  TraceOperation 041320 (Sub (Var Sp) (Con 1) (Local 3));
  PopStack popped3;
  SetLocal 3 Sub(popped3,1);
  TraceOperation 041324 (Store (Con 4) (Var (Local 2)));
  SetLocal 4 GetLocal(2);
  Jump: 041327
LocOp 041327:
  TraceOperation 041327 (Jg (Var (Local 4)) (Var (Local 3)) (Branch T (Dloc 041343)));
  if (GreaterThan(GetLocal(4),GetLocal(3))) {
    Jump: 041343
  } else {
    TraceOperation 041331 (Loadb (Var (Local 4)) (Con 0) Sp);
    Let b1 = M[Offset(Address(GetLocal(4)),0)];
    PushStack Widen(b1);
    TraceOperation 041335 (Print_char (Var Sp));
    PopStack popped2;
    GamePrint SingleChar(popped2);
    TraceOperation 041338 (Inc (Con 4));
    SetLocal 4 Add(GetLocal(4),1);
    TraceOperation 041340 (Jump 041327);
    Jump: 041327
  }
LocOp 041343:
  TraceOperation 041343 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 041344:
  MakeRoutineFrame 9;
  if (LessThanByte(num_actuals,9)) {
    SetLocal 9 0;
    if (LessThanByte(num_actuals,8)) {
      SetLocal 8 0;
      if (LessThanByte(num_actuals,7)) {
        SetLocal 7 0;
        if (LessThanByte(num_actuals,6)) {
          SetLocal 6 0;
          if (LessThanByte(num_actuals,5)) {
            SetLocal 5 0;
            if (LessThanByte(num_actuals,4)) {
              SetLocal 4 0;
              if (LessThanByte(num_actuals,3)) {
                SetLocal 3 0;
                if (LessThanByte(num_actuals,2)) {
                  SetLocal 2 0;
                  if (LessThanByte(num_actuals,1)) {
                    SetLocal 1 0;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  Jump: 041345
LocOp 041345:
  TraceOperation 041345 (Div (Var (Local 1)) (Con 100) (Local 4));
  SetLocal 4 Div(GetLocal(1),100);
  TraceOperation 041349 (Mod (Var (Local 1)) (Con 100) Sp);
  PushStack Mod(GetLocal(1),100);
  TraceOperation 041353 (Add (Var (Local 4)) (Var Sp) Sp);
  PopStack popped1;
  PushStack Add(GetLocal(4),popped1);
  TraceOperation 041357 (Sub (Var Sp) (Con 1) (Local 5));
  PopStack popped2;
  SetLocal 5 Sub(popped2,1);
  TraceOperation 041361 (Jl (Var (Local 5)) (Var (Local 4)) (Branch T (Dloc 041377)));
  if (LessThan(GetLocal(5),GetLocal(4))) {
    Jump: 041377
  } else {
    TraceOperation 041365 (Jl (Var (Local 4)) (Con 1) (Branch T (Dloc 041377)));
    if (LessThan(GetLocal(4),1)) {
      Jump: 041377
    } else {
      TraceOperation 041369 (Call (Floc 041076) [] Sp);
      PushFrame;
      PushReturnAddress 041369;
      MakeRoutineFrame 0;
      Jump: 041077
    }
  }
LocReturn 041369:
  PushStack call_result;
  TraceOperation 041373 (Jg (Var (Local 5)) (Var Sp) (Branch F (Dloc 041386)));
  PopStack popped1;
  if (GreaterThan(GetLocal(5),popped1)) {
    Jump: 041377
  } else {
    Jump: 041386
  }
LocOp 041377:
  TraceOperation 041377 (Call (Floc 086692) [Con 40,Var (Local 4),Var (Local 5)] Sp);
  PushFrame;
  PushReturnAddress 041377;
  SetLocal 1 40;
  SetLocal 2 GetLocal(4);
  SetLocal 3 GetLocal(5);
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 086693
LocReturn 041377:
  PushStack call_result;
  TraceOperation 041385 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 041386:
  TraceOperation 041386 (Push (Var (Global 4)));
  Let b1 = M[007214];
  Let b2 = M[007215];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 041389 (Push (Var (Global 5)));
  Let b3 = M[007216];
  Let b4 = M[007217];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 041392 (Add (Var (Local 5)) (Con 1) (Local 6));
  SetLocal 6 Add(GetLocal(5),1);
  TraceOperation 041396 (Call (Floc 041084) [Var (Local 4)] Sp);
  PushFrame;
  PushReturnAddress 041396;
  SetLocal 1 GetLocal(4);
  MakeRoutineFrame 1;
  Jump: 041085
LocReturn 041396:
  PushStack call_result;
  TraceOperation 041402 (Sub (Var Sp) (Con 8498) (Local 7));
  PopStack popped1;
  SetLocal 7 Sub(popped1,8498);
  TraceOperation 041408 (Call (Floc 041076) [] Sp);
  PushFrame;
  PushReturnAddress 041408;
  MakeRoutineFrame 0;
  Jump: 041077
LocReturn 041408:
  PushStack call_result;
  TraceOperation 041412 (Jg (Var (Local 6)) (Var Sp) (Branch T (Dloc 041436)));
  PopStack popped1;
  if (GreaterThan(GetLocal(6),popped1)) {
    Jump: 041436
  } else {
    TraceOperation 041416 (Call (Floc 041076) [] Sp);
    PushFrame;
    PushReturnAddress 041416;
    MakeRoutineFrame 0;
    Jump: 041077
  }
LocReturn 041416:
  PushStack call_result;
  TraceOperation 041420 (Sub (Var Sp) (Var (Local 6)) Sp);
  PopStack popped1;
  PushStack Sub(popped1,GetLocal(6));
  TraceOperation 041424 (Add (Var Sp) (Con 1) Sp);
  PopStack popped2;
  PushStack Add(popped2,1);
  TraceOperation 041428 (Mul (Con 100) (Var (Local 6)) Sp);
  PushStack Mul(100,GetLocal(6));
  TraceOperation 041432 (Add (Var Sp) (Var Sp) (Local 8));
  PopStack popped3;
  PopStack popped4;
  SetLocal 8 Add(popped3,popped4);
  Jump: 041436
LocOp 041436:
  TraceOperation 041436 (Storew (Con 8621) (Con 0) (Con 120));
  SetByte 008621 0;
  SetByte 008622 120;
  TraceOperation 041442 (Call (Floc 024812) [Con 8621,Con 120,Con 10388,Var (Local 2),Var (Local 8)] (Local 9));
  PushFrame;
  PushReturnAddress 041442;
  SetLocal 1 8621;
  SetLocal 2 120;
  SetLocal 3 10388;
  SetLocal 4 GetLocal(2);
  SetLocal 5 GetLocal(8);
  MakeRoutineFrame 5;
  Jump: 024813
LocReturn 041442:
  SetLocal 9 call_result;
  TraceOperation 041455 (Store (Con 3) (Con 0));
  SetLocal 3 0;
  Jump: 041458
LocOp 041458:
  TraceOperation 041458 (Jl (Var (Local 3)) (Var (Local 9)) (Branch F (Dloc 041495)));
  if (LessThan(GetLocal(3),GetLocal(9))) {
    TraceOperation 041462 (Add (Var (Local 7)) (Var (Local 3)) Sp);
    PushStack Add(GetLocal(7),GetLocal(3));
    TraceOperation 041466 (Jl (Var Sp) (Con 120) (Branch F (Dloc 041495)));
    PopStack popped1;
    if (LessThan(popped1,120)) {
      TraceOperation 041470 (Add (Con 2) (Var (Local 3)) Sp);
      PushStack Add(2,GetLocal(3));
      TraceOperation 041474 (Loadb (Con 8621) (Var Sp) Sp);
      PopStack popped2;
      Let b3 = M[Offset(008621,popped2)];
      PushStack Widen(b3);
      TraceOperation 041480 (Add (Var (Local 7)) (Var (Local 3)) Sp);
      PushStack Add(GetLocal(7),GetLocal(3));
      TraceOperation 041484 (Storeb (Con 8498) (Var Sp) (Var Sp));
      PopStack popped4;
      PopStack popped5;
      SetByte Offset(008498,popped4) LoByte(popped5);
      TraceOperation 041490 (Inc (Con 3));
      SetLocal 3 Add(GetLocal(3),1);
      TraceOperation 041492 (Jump 041458);
      Jump: 041458
    } else {
      Jump: 041495
    }
  } else {
    Jump: 041495
  }
LocOp 041495:
  TraceOperation 041495 (Add (Var (Local 7)) (Var (Local 3)) Sp);
  PushStack Add(GetLocal(7),GetLocal(3));
  TraceOperation 041499 (Storeb (Con 8498) (Con 1) (Var Sp));
  PopStack popped1;
  SetByte 008499 LoByte(popped1);
  Jump: 041505
LocOp 041505:
  TraceOperation 041505 (Add (Var (Local 7)) (Var (Local 3)) Sp);
  PushStack Add(GetLocal(7),GetLocal(3));
  TraceOperation 041509 (Jl (Var Sp) (Con 120) (Branch F (Dloc 041528)));
  PopStack popped1;
  if (LessThan(popped1,120)) {
    TraceOperation 041513 (Add (Var (Local 7)) (Var (Local 3)) Sp);
    PushStack Add(GetLocal(7),GetLocal(3));
    TraceOperation 041517 (Storeb (Con 8498) (Var Sp) (Con 32));
    PopStack popped2;
    SetByte Offset(008498,popped2) 32;
    TraceOperation 041523 (Inc (Con 3));
    SetLocal 3 Add(GetLocal(3),1);
    TraceOperation 041525 (Jump 041505);
    Jump: 041505
  } else {
    Jump: 041528
  }
LocOp 041528:
  TraceOperation 041528 (CallN (Floc 024892) [Con 8498,Con 8867]);
  PushFrame;
  PushReturnAddress 041528;
  SetLocal 1 8498;
  SetLocal 2 8867;
  MakeRoutineFrame 2;
  Jump: 024893
LocReturn 041528:
  TraceOperation 041536 (Call (Floc 041076) [] Sp);
  PushFrame;
  PushReturnAddress 041536;
  MakeRoutineFrame 0;
  Jump: 041077
LocReturn 041536:
  PushStack call_result;
  TraceOperation 041540 (Add (Con 100) (Var Sp) (Global 64));
  PopStack popped1;
  SetByte 007334 HiByte(Add(100,popped1));
  SetByte 007335 LoByte(Add(100,popped1));
  TraceOperation 041544 (Pull (Con 21));
  PopStack popped2;
  SetByte 007216 HiByte(popped2);
  SetByte 007217 LoByte(popped2);
  TraceOperation 041547 (Pull (Con 20));
  PopStack popped3;
  SetByte 007214 HiByte(popped3);
  SetByte 007215 LoByte(popped3);
  TraceOperation 041550 Rtrue;
  PopFrame;
  PopReturnAddress return_address_4;
  SetResult 1;
  JumpIndirect: (return) return_address_4
--------------------------------------------------
LocRoutine 041552:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 041553
LocOp 041553:
  TraceOperation 041553 (CallN (Floc 080952) [Var (Local 1)]);
  PushFrame;
  PushReturnAddress 041553;
  SetLocal 1 GetLocal(1);
  MakeRoutineFrame 1;
  Jump: 080953
LocReturn 041553:
  TraceOperation 041558 (Jz (Var (Local 2)) (Branch T (Dloc 041569)));
  if (IsZero(GetLocal(2))) {
    Jump: 041569
  } else {
    TraceOperation 041561 (Print " ");
    GamePrint " ";
    TraceOperation 041564 (CallN (Floc 041256) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 041564;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 041257
  }
LocReturn 041564:
  Jump: 041569
LocOp 041569:
  TraceOperation 041569 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 041572:
  MakeRoutineFrame 7;
  if (LessThanByte(num_actuals,7)) {
    SetLocal 7 0;
    if (LessThanByte(num_actuals,6)) {
      SetLocal 6 0;
      if (LessThanByte(num_actuals,5)) {
        SetLocal 5 0;
        if (LessThanByte(num_actuals,4)) {
          SetLocal 4 0;
          if (LessThanByte(num_actuals,3)) {
            SetLocal 3 0;
            if (LessThanByte(num_actuals,2)) {
              SetLocal 2 0;
              if (LessThanByte(num_actuals,1)) {
                SetLocal 1 0;
              }
            }
          }
        }
      }
    }
  }
  Jump: 041573
LocOp 041573:
  TraceOperation 041573 (Div (Var (Local 2)) (Con 100) (Local 3));
  SetLocal 3 Div(GetLocal(2),100);
  TraceOperation 041577 (Mod (Var (Local 2)) (Con 100) Sp);
  PushStack Mod(GetLocal(2),100);
  TraceOperation 041581 (Add (Var (Local 3)) (Var Sp) Sp);
  PopStack popped1;
  PushStack Add(GetLocal(3),popped1);
  TraceOperation 041585 (Sub (Var Sp) (Con 1) (Local 4));
  PopStack popped2;
  SetLocal 4 Sub(popped2,1);
  TraceOperation 041589 (Jl (Var (Local 4)) (Var (Local 3)) (Branch T (Dloc 041597)));
  if (LessThan(GetLocal(4),GetLocal(3))) {
    Jump: 041597
  } else {
    TraceOperation 041593 (Jl (Var (Local 3)) (Con 1) (Branch F (Dloc 041606)));
    if (LessThan(GetLocal(3),1)) {
      Jump: 041597
    } else {
      Jump: 041606
    }
  }
LocOp 041597:
  TraceOperation 041597 (Call (Floc 086692) [Con 41,Var (Local 3),Var (Local 4)] Sp);
  PushFrame;
  PushReturnAddress 041597;
  SetLocal 1 41;
  SetLocal 2 GetLocal(3);
  SetLocal 3 GetLocal(4);
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 086693
LocReturn 041597:
  PushStack call_result;
  TraceOperation 041605 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 041606:
  TraceOperation 041606 (Call (Floc 112940) [Var (Local 1)] Sp);
  PushFrame;
  PushReturnAddress 041606;
  SetLocal 1 GetLocal(1);
  MakeRoutineFrame 1;
  Jump: 112941
LocReturn 041606:
  PushStack call_result;
  TraceOperation 041612 (Je [Var Sp,Con 3] (Branch F (Dloc 041665)));
  PopStack popped1;
  if (Equal(popped1,3)) {
    TraceOperation 041616 (Mod (Var (Local 2)) (Con 100) (Local 5));
    SetLocal 5 Mod(GetLocal(2),100);
    TraceOperation 041620 (Store (Con 6) (Var (Local 3)));
    SetLocal 6 GetLocal(3);
    TraceOperation 041623 (Store (Con 7) (Var (Local 5)));
    SetLocal 7 GetLocal(5);
    TraceOperation 041626 (Jump 041633);
    Jump: 041633
  } else {
    Jump: 041665
  }
--------------------------------------------------
LocRoutine 041660:
  MakeRoutineFrame 0;
  Jump: 041661
LocOp 041661:
  TraceOperation 041661 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 041668:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 041669
LocOp 041669:
  TraceOperation 041669 (Store (Con 91) (Con 1));
  SetByte 007356 0;
  SetByte 007357 1;
  TraceOperation 041672 (Jz (Var (Local 2)) (Branch T Dfalse));
  if (IsZero(GetLocal(2))) {
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 0;
    JumpIndirect: (return) return_address_1
  } else {
    TraceOperation 041675 (Call (Floc 112940) [Var (Local 2)] Sp);
    PushFrame;
    PushReturnAddress 041675;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 1;
    Jump: 112941
  }
LocReturn 041675:
  PushStack call_result;
  TraceOperation 041681 (Je [Var Sp,Con 3] (Branch F (Dloc 041706)));
  PopStack popped1;
  if (Equal(popped1,3)) {
    TraceOperation 041685 (Mod (Var (Local 1)) (Con 100) Sp);
    PushStack Mod(GetLocal(1),100);
    TraceOperation 041689 (Div (Var (Local 1)) (Con 100) Sp);
    PushStack Div(GetLocal(1),100);
    TraceOperation 041693 (Call (Fvar (Local 2)) [Var Sp,Var Sp] (Local 3));
    if (IsZeroAddress(PackedAddress Z5(GetLocal(2)))) {
      SetLocal 3 0;
      Jump: 041699
    } else {
      PopStack popped2;
      PopStack popped3;
      PushFrame;
      PushReturnAddress 041693;
      SetLocal 1 popped2;
      SetLocal 2 popped3;
      SetNumberActuals 2;
      JumpIndirect: (routine) PackedAddress Z5(GetLocal(2))
    }
  } else {
    Jump: 041706
  }
LocReturn 041693:
  SetLocal 3 call_result;
  Jump: 041699
LocOp 041699:
  TraceOperation 041699 (Je [Var (Local 3),Con -1] (Branch F Dtrue));
  if (Equal(GetLocal(3),-1)) {
    TraceOperation 041705 Rfalse;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 0;
    JumpIndirect: (return) return_address_1
  } else {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  }
LocOp 041706:
  TraceOperation 041706 (CallN (Floc 086692) [Con 29]);
  PushFrame;
  PushReturnAddress 041706;
  SetLocal 1 29;
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 086693
LocReturn 041706:
  TraceOperation 041711 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 041712:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 041713
LocOp 041713:
  TraceOperation 041713 (Store (Con 2) (Con 0));
  SetLocal 2 0;
  Jump: 041716
LocOp 041716:
  TraceOperation 041716 (Jl (Var (Local 2)) (Con 32) (Branch F (Dloc 041743)));
  if (LessThan(GetLocal(2),32)) {
    TraceOperation 041720 (Storew (Con 9939) (Var (Local 2)) (Con 15));
    SetByte Offset(009939,Mul(2,GetLocal(2))) 0;
    SetByte Offset(Offset(009939,Mul(2,GetLocal(2))),1) 15;
    TraceOperation 041726 (Storew (Con 9811) (Var (Local 2)) (Con 1));
    SetByte Offset(009811,Mul(2,GetLocal(2))) 0;
    SetByte Offset(Offset(009811,Mul(2,GetLocal(2))),1) 1;
    TraceOperation 041732 (Storew (Con 9875) (Var (Local 2)) (Con 15));
    SetByte Offset(009875,Mul(2,GetLocal(2))) 0;
    SetByte Offset(Offset(009875,Mul(2,GetLocal(2))),1) 15;
    TraceOperation 041738 (Inc (Con 2));
    SetLocal 2 Add(GetLocal(2),1);
    TraceOperation 041740 (Jump 041716);
    Jump: 041716
  } else {
    Jump: 041743
  }
LocOp 041743:
  TraceOperation 041743 (Loadb (Var (Local 1)) (Con 1) Sp);
  Let b1 = M[Offset(Address(GetLocal(1)),1)];
  PushStack Widen(b1);
  TraceOperation 041747 (Loadb (Var (Local 1)) (Con 0) Sp);
  Let b2 = M[Offset(Address(GetLocal(1)),0)];
  PushStack Widen(b2);
  TraceOperation 041751 (Mul (Con 256) (Var Sp) Sp);
  PopStack popped3;
  PushStack Mul(256,popped3);
  TraceOperation 041757 (Add (Var Sp) (Var Sp) (Global 73));
  PopStack popped4;
  PopStack popped5;
  SetByte 007352 HiByte(Add(popped4,popped5));
  SetByte 007353 LoByte(Add(popped4,popped5));
  TraceOperation 041761 (And (Var (Global 73)) (Con 1024) Sp);
  Let b6 = M[007352];
  Let b7 = M[007353];
  PushStack And(MakeHiLo(b6,b7),1024);
  TraceOperation 041767 (Jz (Var Sp) (Branch F (Dloc 041776)));
  PopStack popped8;
  if (IsZero(popped8)) {
    TraceOperation 041770 (Push (Con 0));
    PushStack 0;
    TraceOperation 041773 (Jump 041779);
    Jump: 041779
  } else {
    Jump: 041776
  }
LocOp 041776:
  TraceOperation 041776 (Push (Con 1));
  PushStack 1;
  Jump: 041779
LocOp 041779:
  TraceOperation 041779 (Pull (Con 90));
  PopStack popped1;
  SetByte 007354 HiByte(popped1);
  SetByte 007355 LoByte(popped1);
  TraceOperation 041782 (And (Var (Global 73)) (Con 1023) (Global 73));
  Let b2 = M[007352];
  Let b3 = M[007353];
  SetByte 007352 HiByte(And(MakeHiLo(b2,b3),1023));
  SetByte 007353 LoByte(And(MakeHiLo(b2,b3),1023));
  TraceOperation 041788 (Dec (Con 1));
  SetLocal 1 Sub(GetLocal(1),1);
  TraceOperation 041790 (Store (Con 3) (Con 3));
  SetLocal 3 3;
  TraceOperation 041793 (Store (Con 159) (Con 0));
  SetByte 007492 0;
  SetByte 007493 0;
  TraceOperation 041796 (Store (Con 2) (Con 0));
  SetLocal 2 0;
  Jump: 041799
LocOp 041799:
  TraceOperation 041799 (Add (Var (Local 1)) (Var (Local 3)) (Local 1));
  SetLocal 1 Add(GetLocal(1),GetLocal(3));
  TraceOperation 041803 (Loadb (Var (Local 1)) (Con 0) Sp);
  Let b1 = M[Offset(Address(GetLocal(1)),0)];
  PushStack Widen(b1);
  TraceOperation 041807 (Je [Var Sp,Con 15] (Branch F (Dloc 041814)));
  PopStack popped2;
  if (Equal(popped2,15)) {
    TraceOperation 041811 (Jump 041848);
    Jump: 041848
  } else {
    Jump: 041814
  }
LocOp 041814:
  TraceOperation 041814 (Storew (Con 9939) (Var (Local 2)) (Var (Local 1)));
  SetByte Offset(009939,Mul(2,GetLocal(2))) HiByte(GetLocal(1));
  SetByte Offset(Offset(009939,Mul(2,GetLocal(2))),1) LoByte(GetLocal(1));
  TraceOperation 041820 (CallN (Floc 041856) [Var (Local 1)]);
  PushFrame;
  PushReturnAddress 041820;
  SetLocal 1 GetLocal(1);
  MakeRoutineFrame 1;
  Jump: 041857
LocReturn 041820:
  TraceOperation 041825 (Je [Var (Global 153),Con 2] (Branch T (Dloc 041831)));
  Let b1 = M[007512];
  Let b2 = M[007513];
  if (Equal(MakeHiLo(b1,b2),2)) {
    Jump: 041831
  } else {
    TraceOperation 041829 (Inc (Con 159));
    Let b3 = M[007492];
    Let b4 = M[007493];
    SetByte 007492 HiByte(Add(MakeHiLo(b3,b4),1));
    SetByte 007493 LoByte(Add(MakeHiLo(b3,b4),1));
    Jump: 041831
  }
LocOp 041831:
  TraceOperation 041831 (Storew (Con 9811) (Var (Local 2)) (Var (Global 153)));
  Let b1 = M[007512];
  Let b2 = M[007513];
  SetByte Offset(009811,Mul(2,GetLocal(2))) b1;
  SetByte Offset(Offset(009811,Mul(2,GetLocal(2))),1) b2;
  TraceOperation 041837 (Storew (Con 9875) (Var (Local 2)) (Var (Global 154)));
  Let b3 = M[007514];
  Let b4 = M[007515];
  SetByte Offset(009875,Mul(2,GetLocal(2))) b3;
  SetByte Offset(Offset(009875,Mul(2,GetLocal(2))),1) b4;
  TraceOperation 041843 (Inc (Con 2));
  SetLocal 2 Add(GetLocal(2),1);
  TraceOperation 041845 (Jump 041799);
  Jump: 041799
LocOp 041848:
  TraceOperation 041848 (Add (Var (Local 1)) (Con 1) Sp);
  PushStack Add(GetLocal(1),1);
  TraceOperation 041852 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 041856:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 041857
LocOp 041857:
  TraceOperation 041857 (Je [Var (Local 1),Con 15] (Branch F (Dloc 041868)));
  if (Equal(GetLocal(1),15)) {
    TraceOperation 041861 (Store (Con 169) (Con 1));
    SetByte 007512 0;
    SetByte 007513 1;
    TraceOperation 041864 (Store (Con 170) (Con 15));
    SetByte 007514 0;
    SetByte 007515 15;
    TraceOperation 041867 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 041868
  }
LocOp 041868:
  TraceOperation 041868 (Loadb (Var (Local 1)) (Con 0) Sp);
  Let b1 = M[Offset(Address(GetLocal(1)),0)];
  PushStack Widen(b1);
  TraceOperation 041872 (And (Var Sp) (Con 15) (Global 153));
  PopStack popped2;
  SetByte 007512 HiByte(And(popped2,15));
  SetByte 007513 LoByte(And(popped2,15));
  TraceOperation 041876 (Add (Var (Local 1)) (Con 1) Sp);
  PushStack Add(GetLocal(1),1);
  TraceOperation 041880 (Loadw (Var Sp) (Con 0) (Global 154));
  PopStack popped3;
  Let b4 = M[Offset(Address(popped3),0)];
  Let b5 = M[Offset(Offset(Address(popped3),0),1)];
  SetByte 007514 b4;
  SetByte 007515 b5;
  TraceOperation 041884 Rtrue;
  PopFrame;
  PopReturnAddress return_address_6;
  SetResult 1;
  JumpIndirect: (return) return_address_6
--------------------------------------------------
LocRoutine 041888:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 041889
LocOp 041889:
  TraceOperation 041889 (Call (Floc 024768) [Var (Local 1),Var (Local 2)] Sp);
  PushFrame;
  PushReturnAddress 041889;
  SetLocal 1 GetLocal(1);
  SetLocal 2 GetLocal(2);
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 024769
LocReturn 041889:
  PushStack call_result;
  TraceOperation 041896 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 041900:
  MakeRoutineFrame 8;
  if (LessThanByte(num_actuals,8)) {
    SetLocal 8 0;
    if (LessThanByte(num_actuals,7)) {
      SetLocal 7 0;
      if (LessThanByte(num_actuals,6)) {
        SetLocal 6 0;
        if (LessThanByte(num_actuals,5)) {
          SetLocal 5 0;
          if (LessThanByte(num_actuals,4)) {
            SetLocal 4 0;
            if (LessThanByte(num_actuals,3)) {
              SetLocal 3 0;
              if (LessThanByte(num_actuals,2)) {
                SetLocal 2 0;
                if (LessThanByte(num_actuals,1)) {
                  SetLocal 1 0;
                }
              }
            }
          }
        }
      }
    }
  }
  Jump: 041901
LocOp 041901:
  TraceOperation 041901 (Store (Con 18) (Var (Global 26)));
  Let b1 = M[007258];
  Let b2 = M[007259];
  SetByte 007210 b1;
  SetByte 007211 b2;
  TraceOperation 041904 (Store (Con 19) (Var (Global 23)));
  Let b3 = M[007252];
  Let b4 = M[007253];
  SetByte 007212 b3;
  SetByte 007213 b4;
  Jump: 041907
LocOp 041907:
  TraceOperation 041907 (Jz (Con 1) (Branch T (Dloc 042338)));
  TraceOperation 041911 (Store (Con 4) (Con 0));
  SetLocal 4 0;
  Jump: 041914
LocOp 041914:
  TraceOperation 041914 (Jl (Var (Local 4)) (Con 64) (Branch F (Dloc 041933)));
  if (LessThan(GetLocal(4),64)) {
    TraceOperation 041918 (Loadb (Var (Local 1)) (Var (Local 4)) Sp);
    Let b1 = M[Offset(Address(GetLocal(1)),GetLocal(4))];
    PushStack Widen(b1);
    TraceOperation 041922 (Storeb (Con 10003) (Var (Local 4)) (Var Sp));
    PopStack popped2;
    SetByte Offset(010003,GetLocal(4)) LoByte(popped2);
    TraceOperation 041928 (Inc (Con 4));
    SetLocal 4 Add(GetLocal(4),1);
    TraceOperation 041930 (Jump 041914);
    Jump: 041914
  } else {
    Jump: 041933
  }
LocOp 041933:
  TraceOperation 041933 (Storeb (Var (Local 1)) (Con 0) (Con 120));
  SetByte Offset(Address(GetLocal(1)),0) 120;
  TraceOperation 041938 (Storeb (Var (Local 2)) (Con 0) (Con 15));
  SetByte Offset(Address(GetLocal(2)),0) 15;
  TraceOperation 041943 (CallN (Floc 080460) []);
  PushFrame;
  PushReturnAddress 041943;
  MakeRoutineFrame 1;
  SetLocal 1 0;
  Jump: 080461
LocReturn 041943:
  TraceOperation 041946 (CallN (Floc 080596) []);
  PushFrame;
  PushReturnAddress 041946;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  SetLocal 1 0;
  Jump: 080597
LocReturn 041946:
  TraceOperation 041949 (CallN (Floc 041888) [Var (Local 1),Var (Local 2)]);
  PushFrame;
  PushReturnAddress 041949;
  SetLocal 1 GetLocal(1);
  SetLocal 2 GetLocal(2);
  MakeRoutineFrame 2;
  Jump: 041889
LocReturn 041949:
  TraceOperation 041955 (Loadb (Var (Local 2)) (Con 1) (Local 3));
  Let b1 = M[Offset(Address(GetLocal(2)),1)];
  SetLocal 3 Widen(b1);
  TraceOperation 041959 (Jz (Var (Local 3)) (Branch F (Dloc 042003)));
  if (IsZero(GetLocal(3))) {
    TraceOperation 041962 (Push (Var (Global 50)));
    Let b2 = M[007306];
    Let b3 = M[007307];
    PushStack MakeHiLo(b2,b3);
    TraceOperation 041965 (Store (Con 66) (Con 20));
    SetByte 007306 0;
    SetByte 007307 20;
    TraceOperation 041968 (Store (Con 80) (Con 100));
    SetByte 007334 0;
    SetByte 007335 100;
    TraceOperation 041971 (CallN (Floc 078848) [Con 21]);
    PushFrame;
    PushReturnAddress 041971;
    SetLocal 1 21;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 078849
  } else {
    Jump: 042003
  }
LocReturn 041971:
  TraceOperation 041976 (Call (Floc 078928) [Con 21] Sp);
  PushFrame;
  PushReturnAddress 041976;
  SetLocal 1 21;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 078929
LocReturn 041976:
  PushStack call_result;
  TraceOperation 041982 (Jz (Var Sp) (Branch F (Dloc 041992)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 041985 (CallN (Floc 036596) [Con 4097,Con 10]);
    PushFrame;
    PushReturnAddress 041985;
    SetLocal 1 4097;
    SetLocal 2 10;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 036597
  } else {
    Jump: 041992
  }
LocReturn 041985:
  Jump: 041992
LocOp 041992:
  TraceOperation 041992 (CallN (Floc 078972) [Con 21]);
  PushFrame;
  PushReturnAddress 041992;
  SetLocal 1 21;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 078973
LocReturn 041992:
  TraceOperation 041997 (Pull (Con 66));
  PopStack popped1;
  SetByte 007306 HiByte(popped1);
  SetByte 007307 LoByte(popped1);
  TraceOperation 042000 (Jump 041907);
  Jump: 041907
LocOp 042003:
  TraceOperation 042003 (Loadw (Var (Local 2)) (Con 1) (Local 5));
  Let b1 = M[Offset(Address(GetLocal(2)),2)];
  Let b2 = M[Offset(Offset(Address(GetLocal(2)),2),1)];
  SetLocal 5 MakeHiLo(b1,b2);
  TraceOperation 042007 (Je [Var (Local 5),Con 23078,Con 22997,Con 23078] (Branch F (Dloc 042256)));
  if (LogOr(LogOr(Equal(GetLocal(5),23078),Equal(GetLocal(5),22997)),Equal(GetLocal(5),23078))) {
    TraceOperation 042018 (Jz (Var (Global 148)) (Branch F (Dloc 042031)));
    Let b3 = M[007502];
    Let b4 = M[007503];
    if (IsZero(MakeHiLo(b3,b4))) {
      TraceOperation 042021 (CallN (Floc 036596) [Con 4097,Con 14]);
      PushFrame;
      PushReturnAddress 042021;
      SetLocal 1 4097;
      SetLocal 2 14;
      MakeRoutineFrame 6;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      SetLocal 3 0;
      Jump: 036597
    } else {
      Jump: 042031
    }
  } else {
    Jump: 042256
  }
LocReturn 042021:
  TraceOperation 042028 (Jump 041907);
  Jump: 041907
LocOp 042031:
  TraceOperation 042031 (Je [Var (Local 3),Con 1] (Branch F (Dloc 042045)));
  if (Equal(GetLocal(3),1)) {
    TraceOperation 042035 (CallN (Floc 036596) [Con 4097,Con 15]);
    PushFrame;
    PushReturnAddress 042035;
    SetLocal 1 4097;
    SetLocal 2 15;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 036597
  } else {
    Jump: 042045
  }
LocReturn 042035:
  TraceOperation 042042 (Jump 041907);
  Jump: 041907
LocOp 042045:
  TraceOperation 042045 (Jg (Var (Local 3)) (Con 2) (Branch F (Dloc 042059)));
  if (GreaterThan(GetLocal(3),2)) {
    TraceOperation 042049 (CallN (Floc 036596) [Con 4097,Con 16]);
    PushFrame;
    PushReturnAddress 042049;
    SetLocal 1 4097;
    SetLocal 2 16;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 036597
  } else {
    Jump: 042059
  }
LocReturn 042049:
  TraceOperation 042056 (Jump 041907);
  Jump: 041907
LocOp 042059:
  TraceOperation 042059 (Store (Con 4) (Con 0));
  SetLocal 4 0;
  Jump: 042062
LocOp 042062:
  TraceOperation 042062 (Jl (Var (Local 4)) (Con 120) (Branch F (Dloc 042081)));
  if (LessThan(GetLocal(4),120)) {
    TraceOperation 042066 (Loadb (Var (Local 1)) (Var (Local 4)) Sp);
    Let b1 = M[Offset(Address(GetLocal(1)),GetLocal(4))];
    PushStack Widen(b1);
    TraceOperation 042070 (Storeb (Con 8621) (Var (Local 4)) (Var Sp));
    PopStack popped2;
    SetByte Offset(008621,GetLocal(4)) LoByte(popped2);
    TraceOperation 042076 (Inc (Con 4));
    SetLocal 4 Add(GetLocal(4),1);
    TraceOperation 042078 (Jump 042062);
    Jump: 042062
  } else {
    Jump: 042081
  }
LocOp 042081:
  TraceOperation 042081 (Loadb (Var (Local 2)) (Con 9) (Local 7));
  Let b1 = M[Offset(Address(GetLocal(2)),9)];
  SetLocal 7 Widen(b1);
  TraceOperation 042085 (Loadb (Var (Local 2)) (Con 8) (Local 8));
  Let b2 = M[Offset(Address(GetLocal(2)),8)];
  SetLocal 8 Widen(b2);
  TraceOperation 042089 (Store (Con 4) (Con 0));
  SetLocal 4 0;
  Jump: 042092
LocOp 042092:
  TraceOperation 042092 (Jl (Var (Local 4)) (Con 64) (Branch F (Dloc 042112)));
  if (LessThan(GetLocal(4),64)) {
    TraceOperation 042096 (Loadb (Con 10003) (Var (Local 4)) Sp);
    Let b1 = M[Offset(010003,GetLocal(4))];
    PushStack Widen(b1);
    TraceOperation 042102 (Storeb (Var (Local 1)) (Var (Local 4)) (Var Sp));
    PopStack popped2;
    SetByte Offset(Address(GetLocal(1)),GetLocal(4)) LoByte(popped2);
    TraceOperation 042107 (Inc (Con 4));
    SetLocal 4 Add(GetLocal(4),1);
    TraceOperation 042109 (Jump 042092);
    Jump: 042092
  } else {
    Jump: 042112
  }
LocOp 042112:
  TraceOperation 042112 (CallN (Floc 024892) [Var (Local 1),Var (Local 2)]);
  PushFrame;
  PushReturnAddress 042112;
  SetLocal 1 GetLocal(1);
  SetLocal 2 GetLocal(2);
  MakeRoutineFrame 2;
  Jump: 024893
LocReturn 042112:
  TraceOperation 042118 (Mul (Con 4) (Var (Global 148)) Sp);
  Let b1 = M[007502];
  Let b2 = M[007503];
  PushStack Mul(4,MakeHiLo(b1,b2));
  TraceOperation 042122 (Add (Var Sp) (Con 1) Sp);
  PopStack popped3;
  PushStack Add(popped3,1);
  TraceOperation 042126 (Loadb (Var (Local 2)) (Var Sp) (Local 5));
  PopStack popped4;
  Let b5 = M[Offset(Address(GetLocal(2)),popped4)];
  SetLocal 5 Widen(b5);
  TraceOperation 042130 (Mul (Con 4) (Var (Global 148)) Sp);
  Let b6 = M[007502];
  Let b7 = M[007503];
  PushStack Mul(4,MakeHiLo(b6,b7));
  TraceOperation 042134 (Loadb (Var (Local 2)) (Var Sp) (Local 6));
  PopStack popped8;
  Let b9 = M[Offset(Address(GetLocal(2)),popped8)];
  SetLocal 6 Widen(b9);
  TraceOperation 042138 (Store (Con 4) (Con 0));
  SetLocal 4 0;
  Jump: 042141
LocOp 042141:
  TraceOperation 042141 (Jl (Var (Local 4)) (Var (Local 6)) (Branch F (Dloc 042159)));
  if (LessThan(GetLocal(4),GetLocal(6))) {
    TraceOperation 042145 (Add (Var (Local 4)) (Var (Local 5)) Sp);
    PushStack Add(GetLocal(4),GetLocal(5));
    TraceOperation 042149 (Storeb (Var (Local 1)) (Var Sp) (Con 32));
    PopStack popped1;
    SetByte Offset(Address(GetLocal(1)),popped1) 32;
    TraceOperation 042154 (Inc (Con 4));
    SetLocal 4 Add(GetLocal(4),1);
    TraceOperation 042156 (Jump 042141);
    Jump: 042141
  } else {
    Jump: 042159
  }
LocOp 042159:
  TraceOperation 042159 (Jl (Var (Local 6)) (Var (Local 8)) (Branch F (Dloc 042213)));
  if (LessThan(GetLocal(6),GetLocal(8))) {
    TraceOperation 042163 (Store (Con 4) (Con 119));
    SetLocal 4 119;
    Jump: 042166
  } else {
    Jump: 042213
  }
LocOp 042166:
  TraceOperation 042166 (Add (Var (Local 5)) (Var (Local 8)) Sp);
  PushStack Add(GetLocal(5),GetLocal(8));
  TraceOperation 042170 (Jl (Var (Local 4)) (Var Sp) (Branch T (Dloc 042196)));
  PopStack popped1;
  if (LessThan(GetLocal(4),popped1)) {
    Jump: 042196
  } else {
    TraceOperation 042174 (Sub (Var (Local 4)) (Var (Local 8)) Sp);
    PushStack Sub(GetLocal(4),GetLocal(8));
    TraceOperation 042178 (Add (Var Sp) (Var (Local 6)) Sp);
    PopStack popped2;
    PushStack Add(popped2,GetLocal(6));
    TraceOperation 042182 (Loadb (Var (Local 1)) (Var Sp) Sp);
    PopStack popped3;
    Let b4 = M[Offset(Address(GetLocal(1)),popped3)];
    PushStack Widen(b4);
    TraceOperation 042186 (Storeb (Var (Local 1)) (Var (Local 4)) (Var Sp));
    PopStack popped5;
    SetByte Offset(Address(GetLocal(1)),GetLocal(4)) LoByte(popped5);
    TraceOperation 042191 (Dec (Con 4));
    SetLocal 4 Sub(GetLocal(4),1);
    TraceOperation 042193 (Jump 042166);
    Jump: 042166
  }
LocOp 042196:
  TraceOperation 042196 (Sub (Var (Local 8)) (Var (Local 6)) Sp);
  PushStack Sub(GetLocal(8),GetLocal(6));
  TraceOperation 042200 (Loadb (Var (Local 1)) (Con 1) Sp);
  Let b1 = M[Offset(Address(GetLocal(1)),1)];
  PushStack Widen(b1);
  TraceOperation 042204 (Add (Var Sp) (Var Sp) Sp);
  PopStack popped2;
  PopStack popped3;
  PushStack Add(popped2,popped3);
  TraceOperation 042208 (Storeb (Var (Local 1)) (Con 1) (Var Sp));
  PopStack popped4;
  SetByte Offset(Address(GetLocal(1)),1) LoByte(popped4);
  Jump: 042213
LocOp 042213:
  TraceOperation 042213 (Store (Con 4) (Con 0));
  SetLocal 4 0;
  Jump: 042216
LocOp 042216:
  TraceOperation 042216 (Jl (Var (Local 4)) (Var (Local 8)) (Branch F (Dloc 042244)));
  if (LessThan(GetLocal(4),GetLocal(8))) {
    TraceOperation 042220 (Add (Var (Local 4)) (Var (Local 7)) Sp);
    PushStack Add(GetLocal(4),GetLocal(7));
    TraceOperation 042224 (Loadb (Con 8621) (Var Sp) Sp);
    PopStack popped1;
    Let b2 = M[Offset(008621,popped1)];
    PushStack Widen(b2);
    TraceOperation 042230 (Add (Var (Local 4)) (Var (Local 5)) Sp);
    PushStack Add(GetLocal(4),GetLocal(5));
    TraceOperation 042234 (Storeb (Var (Local 1)) (Var Sp) (Var Sp));
    PopStack popped3;
    PopStack popped4;
    SetByte Offset(Address(GetLocal(1)),popped3) LoByte(popped4);
    TraceOperation 042239 (Inc (Con 4));
    SetLocal 4 Add(GetLocal(4),1);
    TraceOperation 042241 (Jump 042216);
    Jump: 042216
  } else {
    Jump: 042244
  }
LocOp 042244:
  TraceOperation 042244 (CallN (Floc 024892) [Var (Local 1),Var (Local 2)]);
  PushFrame;
  PushReturnAddress 042244;
  SetLocal 1 GetLocal(1);
  SetLocal 2 GetLocal(2);
  MakeRoutineFrame 2;
  Jump: 024893
LocReturn 042244:
  TraceOperation 042250 (Loadb (Var (Local 2)) (Con 1) (Local 3));
  Let b1 = M[Offset(Address(GetLocal(2)),1)];
  SetLocal 3 Widen(b1);
  TraceOperation 042254 (Ret (Var (Local 3)));
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult GetLocal(3);
  JumpIndirect: (return) return_address_2
LocOp 042256:
  TraceOperation 042256 (Je [Var (Local 5),Con 24284,Con 24284,Con 24284] (Branch F (Dloc 042276)));
  if (LogOr(LogOr(Equal(GetLocal(5),24284),Equal(GetLocal(5),24284)),Equal(GetLocal(5),24284))) {
    TraceOperation 042266 (Je [Var (Local 3),Con 1] (Branch F (Dloc 042276)));
    if (Equal(GetLocal(3),1)) {
      TraceOperation 042270 (CallN (Floc 079972) []);
      PushFrame;
      PushReturnAddress 042270;
      MakeRoutineFrame 0;
      Jump: 079973
    } else {
      Jump: 042276
    }
  } else {
    Jump: 042276
  }
LocReturn 042270:
  TraceOperation 042273 (Jump 041907);
  Jump: 041907
LocOp 042276:
  TraceOperation 042276 (Call (Floc 025664) [] (Local 4));
  PushFrame;
  PushReturnAddress 042276;
  MakeRoutineFrame 1;
  SetLocal 1 0;
  Jump: 025665
LocReturn 042276:
  SetLocal 4 call_result;
  TraceOperation 042280 (Store (Con 36) (Con 2));
  SetByte 007246 0;
  SetByte 007247 2;
  TraceOperation 042283 (Je [Var (Local 4),Con -1] (Branch F (Dloc 042292)));
  if (Equal(GetLocal(4),-1)) {
    TraceOperation 042289 (Store (Con 36) (Con 0));
    SetByte 007246 0;
    SetByte 007247 0;
    Jump: 042292
  } else {
    Jump: 042292
  }
LocOp 042292:
  TraceOperation 042292 (Jz (Var (Local 4)) (Branch F (Dloc 042298)));
  if (IsZero(GetLocal(4))) {
    TraceOperation 042295 (Store (Con 36) (Con 1));
    SetByte 007246 0;
    SetByte 007247 1;
    Jump: 042298
  } else {
    Jump: 042298
  }
LocOp 042298:
  TraceOperation 042298 (Je [Var (Local 4),Con 2] (Branch F (Dloc 042333)));
  if (Equal(GetLocal(4),2)) {
    TraceOperation 042302 (CallN (Floc 025552) []);
    PushFrame;
    PushReturnAddress 042302;
    MakeRoutineFrame 0;
    Jump: 025553
  } else {
    Jump: 042333
  }
LocReturn 042302:
  TraceOperation 042305 (CallN (Floc 025176) [Con 4]);
  PushFrame;
  PushReturnAddress 042305;
  SetLocal 1 4;
  MakeRoutineFrame 1;
  Jump: 025177
LocReturn 042305:
  TraceOperation 042310 (CallN (Floc 082048) [Var (Global 1)]);
  Let b1 = M[007208];
  Let b2 = M[007209];
  PushFrame;
  PushReturnAddress 042310;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 082049
LocReturn 042310:
  TraceOperation 042315 (Print "\n");
  GamePrint "\n";
  TraceOperation 042318 (CallN (Floc 025176) [Con 0]);
  PushFrame;
  PushReturnAddress 042318;
  SetLocal 1 0;
  MakeRoutineFrame 1;
  Jump: 025177
LocReturn 042318:
  TraceOperation 042323 (CallN (Floc 036596) [Con 4097,Con 13]);
  PushFrame;
  PushReturnAddress 042323;
  SetLocal 1 4097;
  SetLocal 2 13;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 036597
LocReturn 042323:
  TraceOperation 042330 (Jump 041907);
  Jump: 041907
LocOp 042333:
  TraceOperation 042333 (Ret (Var (Local 3)));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult GetLocal(3);
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 042340:
  MakeRoutineFrame 11;
  if (LessThanByte(num_actuals,11)) {
    SetLocal 11 0;
    if (LessThanByte(num_actuals,10)) {
      SetLocal 10 0;
      if (LessThanByte(num_actuals,9)) {
        SetLocal 9 0;
        if (LessThanByte(num_actuals,8)) {
          SetLocal 8 0;
          if (LessThanByte(num_actuals,7)) {
            SetLocal 7 0;
            if (LessThanByte(num_actuals,6)) {
              SetLocal 6 0;
              if (LessThanByte(num_actuals,5)) {
                SetLocal 5 0;
                if (LessThanByte(num_actuals,4)) {
                  SetLocal 4 0;
                  if (LessThanByte(num_actuals,3)) {
                    SetLocal 3 0;
                    if (LessThanByte(num_actuals,2)) {
                      SetLocal 2 0;
                      if (LessThanByte(num_actuals,1)) {
                        SetLocal 1 0;
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  Jump: 042341
LocOp 042341:
  TraceOperation 042341 (Store (Con 163) (Con 0));
  SetByte 007500 0;
  SetByte 007501 0;
  TraceOperation 042344 (Storew (Var (Local 1)) (Con 0) (Con 0));
  SetByte Offset(Address(GetLocal(1)),0) 0;
  SetByte Offset(Offset(Address(GetLocal(1)),0),1) 0;
  TraceOperation 042349 (Storew (Var (Local 1)) (Con 1) (Con 0));
  SetByte Offset(Address(GetLocal(1)),2) 0;
  SetByte Offset(Offset(Address(GetLocal(1)),2),1) 0;
  TraceOperation 042354 (Storew (Var (Local 1)) (Con 2) (Con 0));
  SetByte Offset(Address(GetLocal(1)),4) 0;
  SetByte Offset(Offset(Address(GetLocal(1)),4),1) 0;
  TraceOperation 042359 (Storew (Var (Local 1)) (Con 3) (Con 0));
  SetByte Offset(Address(GetLocal(1)),6) 0;
  SetByte Offset(Offset(Address(GetLocal(1)),6),1) 0;
  TraceOperation 042364 (Store (Con 57) (Con 0));
  SetByte 007288 0;
  SetByte 007289 0;
  TraceOperation 042367 (Je [Var (Global 150),Con 1] (Branch F (Dloc 042385)));
  Let b1 = M[007506];
  Let b2 = M[007507];
  if (Equal(MakeHiLo(b1,b2),1)) {
    TraceOperation 042371 (Store (Con 166) (Con 0));
    SetByte 007506 0;
    SetByte 007507 0;
    TraceOperation 042374 (CallN (Floc 024892) [Con 8498,Con 8867]);
    PushFrame;
    PushReturnAddress 042374;
    SetLocal 1 8498;
    SetLocal 2 8867;
    MakeRoutineFrame 2;
    Jump: 024893
  } else {
    Jump: 042385
  }
LocReturn 042374:
  TraceOperation 042382 (Jump 042434);
  Jump: 042434
LocOp 042385:
  TraceOperation 042385 (Store (Con 163) (Con 0));
  SetByte 007500 0;
  SetByte 007501 0;
  TraceOperation 042388 (CallN (Floc 078848) [Con 15]);
  PushFrame;
  PushReturnAddress 042388;
  SetLocal 1 15;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 078849
LocReturn 042388:
  TraceOperation 042393 (Call (Floc 078928) [Con 15] Sp);
  PushFrame;
  PushReturnAddress 042393;
  SetLocal 1 15;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 078929
LocReturn 042393:
  PushStack call_result;
  TraceOperation 042399 (Jz (Var Sp) (Branch F (Dloc 042422)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 042402 (CallN (Floc 041900) [Con 8498,Con 8867]);
    PushFrame;
    PushReturnAddress 042402;
    SetLocal 1 8498;
    SetLocal 2 8867;
    MakeRoutineFrame 8;
    SetLocal 8 0;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 041901
  } else {
    Jump: 042422
  }
LocReturn 042402:
  TraceOperation 042410 (Call (Floc 041076) [] Sp);
  PushFrame;
  PushReturnAddress 042410;
  MakeRoutineFrame 0;
  Jump: 041077
LocReturn 042410:
  PushStack call_result;
  TraceOperation 042414 (Add (Con 100) (Var Sp) (Global 64));
  PopStack popped1;
  SetByte 007334 HiByte(Add(100,popped1));
  SetByte 007335 LoByte(Add(100,popped1));
  TraceOperation 042418 (Call (Floc 041076) [] (Global 76));
  PushFrame;
  PushReturnAddress 042418;
  MakeRoutineFrame 0;
  Jump: 041077
LocReturn 042418:
  SetByte 007358 HiByte(call_result);
  SetByte 007359 LoByte(call_result);
  Jump: 042422
LocOp 042422:
  TraceOperation 042422 (Call (Floc 078972) [Con 15] Sp);
  PushFrame;
  PushReturnAddress 042422;
  SetLocal 1 15;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 078973
LocReturn 042422:
  PushStack call_result;
  TraceOperation 042428 (Jz (Var Sp) (Branch T (Dloc 042434)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 042434
  } else {
    TraceOperation 042431 (Jump 042385);
    Jump: 042385
  }
LocOp 042434:
  TraceOperation 042434 (Store (Con 155) (Con 1));
  SetByte 007484 0;
  SetByte 007485 1;
  TraceOperation 042437 (Call (Floc 041076) [] (Global 76));
  PushFrame;
  PushReturnAddress 042437;
  MakeRoutineFrame 0;
  Jump: 041077
LocReturn 042437:
  SetByte 007358 HiByte(call_result);
  SetByte 007359 LoByte(call_result);
  TraceOperation 042441 (Store (Con 91) (Con 1));
  SetByte 007356 0;
  SetByte 007357 1;
  TraceOperation 042444 (CallN (Floc 027052) []);
  PushFrame;
  PushReturnAddress 042444;
  MakeRoutineFrame 0;
  Jump: 027053
LocReturn 042444:
  TraceOperation 042447 (CallN (Floc 024892) [Con 8498,Con 8867]);
  PushFrame;
  PushReturnAddress 042447;
  SetLocal 1 8498;
  SetLocal 2 8867;
  MakeRoutineFrame 2;
  Jump: 024893
LocReturn 042447:
  TraceOperation 042455 (Call (Floc 041076) [] (Global 76));
  PushFrame;
  PushReturnAddress 042455;
  MakeRoutineFrame 0;
  Jump: 041077
LocReturn 042455:
  SetByte 007358 HiByte(call_result);
  SetByte 007359 LoByte(call_result);
  TraceOperation 042459 (Store (Con 8) (Con 0));
  SetLocal 8 0;
  TraceOperation 042462 (Store (Con 94) (Con 1));
  SetByte 007362 0;
  SetByte 007363 1;
  TraceOperation 042465 (Store (Con 53) (Var (Global 31)));
  Let b1 = M[007268];
  Let b2 = M[007269];
  SetByte 007280 b1;
  SetByte 007281 b2;
  TraceOperation 042468 (Call (Floc 037240) [Var (Global 31)] (Global 38));
  Let b3 = M[007268];
  Let b4 = M[007269];
  PushFrame;
  PushReturnAddress 042468;
  SetLocal 1 MakeHiLo(b3,b4);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 037241
LocReturn 042468:
  SetByte 007282 HiByte(call_result);
  SetByte 007283 LoByte(call_result);
  TraceOperation 042474 (Store (Con 168) (Con 0));
  SetByte 007510 0;
  SetByte 007511 0;
  Jump: 042477
LocOp 042477:
  TraceOperation 042477 (Store (Con 96) (Con 0));
  SetByte 007366 0;
  SetByte 007367 0;
  TraceOperation 042480 (Store (Con 89) (Con -1));
  SetByte 007352 255;
  SetByte 007353 255;
  Jump: 042485
LocOp 042485:
  TraceOperation 042485 (Store (Con 91) (Var (Global 78)));
  Let b1 = M[007362];
  Let b2 = M[007363];
  SetByte 007356 b1;
  SetByte 007357 b2;
  TraceOperation 042488 (Call (Floc 041228) [] (Global 77));
  PushFrame;
  PushReturnAddress 042488;
  MakeRoutineFrame 1;
  SetLocal 1 0;
  Jump: 041229
LocReturn 042488:
  SetByte 007360 HiByte(call_result);
  SetByte 007361 LoByte(call_result);
  TraceOperation 042492 (Je [Var (Global 77),Con -1] (Branch F (Dloc 042504)));
  Let b1 = M[007360];
  Let b2 = M[007361];
  if (Equal(MakeHiLo(b1,b2),-1)) {
    TraceOperation 042498 (Store (Con 153) (Con 1));
    SetByte 007480 0;
    SetByte 007481 1;
    TraceOperation 042501 (Jump 043964);
    Jump: 043964
  } else {
    Jump: 042504
  }
LocOp 042504:
  TraceOperation 042504 (Je [Var (Global 77),Con 22376,Con 21494] (Branch F (Dloc 042517)));
  Let b1 = M[007360];
  Let b2 = M[007361];
  if (LogOr(Equal(MakeHiLo(b1,b2),22376),Equal(MakeHiLo(b1,b2),21494))) {
    TraceOperation 042512 (Store (Con 93) (Con 21494));
    SetByte 007360 83;
    SetByte 007361 246;
    Jump: 042517
  } else {
    Jump: 042517
  }
LocOp 042517:
  TraceOperation 042517 (Je [Var (Global 77),Con 21494] (Branch F (Dloc 042604)));
  Let b1 = M[007360];
  Let b2 = M[007361];
  if (Equal(MakeHiLo(b1,b2),21494)) {
    TraceOperation 042524 (Je [Var (Global 37),Var (Global 31)] (Branch T (Dloc 042538)));
    Let b3 = M[007280];
    Let b4 = M[007281];
    Let b5 = M[007268];
    Let b6 = M[007269];
    if (Equal(MakeHiLo(b3,b4),MakeHiLo(b5,b6))) {
      Jump: 042538
    } else {
      TraceOperation 042528 (CallN (Floc 036596) [Con 4097,Con 20]);
      PushFrame;
      PushReturnAddress 042528;
      SetLocal 1 4097;
      SetLocal 2 20;
      MakeRoutineFrame 6;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      SetLocal 3 0;
      Jump: 036597
    }
  } else {
    Jump: 042604
  }
LocReturn 042528:
  TraceOperation 042535 (Jump 042385);
  Jump: 042385
LocOp 042538:
  TraceOperation 042538 (Loadb (Con 8744) (Con 1) Sp);
  Let b1 = M[008745];
  PushStack Widen(b1);
  TraceOperation 042544 (Jz (Var Sp) (Branch F (Dloc 042557)));
  PopStack popped2;
  if (IsZero(popped2)) {
    TraceOperation 042547 (CallN (Floc 036596) [Con 4097,Con 21]);
    PushFrame;
    PushReturnAddress 042547;
    SetLocal 1 4097;
    SetLocal 2 21;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 036597
  } else {
    Jump: 042557
  }
LocReturn 042547:
  TraceOperation 042554 (Jump 042385);
  Jump: 042385
LocOp 042557:
  TraceOperation 042557 (Store (Con 6) (Con 0));
  SetLocal 6 0;
  Jump: 042560
LocOp 042560:
  TraceOperation 042560 (Jl (Var (Local 6)) (Con 120) (Branch F (Dloc 042581)));
  if (LessThan(GetLocal(6),120)) {
    TraceOperation 042564 (Loadb (Con 8744) (Var (Local 6)) Sp);
    Let b1 = M[Offset(008744,GetLocal(6))];
    PushStack Widen(b1);
    TraceOperation 042570 (Storeb (Con 8498) (Var (Local 6)) (Var Sp));
    PopStack popped2;
    SetByte Offset(008498,GetLocal(6)) LoByte(popped2);
    TraceOperation 042576 (Inc (Con 6));
    SetLocal 6 Add(GetLocal(6),1);
    TraceOperation 042578 (Jump 042560);
    Jump: 042560
  } else {
    Jump: 042581
  }
LocOp 042581:
  TraceOperation 042581 (CallN (Floc 024892) [Con 8498,Con 8867]);
  PushFrame;
  PushReturnAddress 042581;
  SetLocal 1 8498;
  SetLocal 2 8867;
  MakeRoutineFrame 2;
  Jump: 024893
LocReturn 042581:
  TraceOperation 042589 (Call (Floc 041076) [] (Global 76));
  PushFrame;
  PushReturnAddress 042589;
  MakeRoutineFrame 0;
  Jump: 041077
LocReturn 042589:
  SetByte 007358 HiByte(call_result);
  SetByte 007359 LoByte(call_result);
  TraceOperation 042593 (Call (Floc 041076) [] Sp);
  PushFrame;
  PushReturnAddress 042593;
  MakeRoutineFrame 0;
  Jump: 041077
LocReturn 042593:
  PushStack call_result;
  TraceOperation 042597 (Add (Con 100) (Var Sp) (Global 64));
  PopStack popped1;
  SetByte 007334 HiByte(Add(100,popped1));
  SetByte 007335 LoByte(Add(100,popped1));
  TraceOperation 042601 (Jump 042434);
  Jump: 042434
LocOp 042604:
  TraceOperation 042604 (Je [Var (Global 77),Con 21494] (Branch T (Dloc 042634)));
  Let b1 = M[007360];
  Let b2 = M[007361];
  if (Equal(MakeHiLo(b1,b2),21494)) {
    Jump: 042634
  } else {
    TraceOperation 042610 (Store (Con 6) (Con 0));
    SetLocal 6 0;
    Jump: 042613
  }
LocOp 042613:
  TraceOperation 042613 (Jl (Var (Local 6)) (Con 120) (Branch F (Dloc 042634)));
  if (LessThan(GetLocal(6),120)) {
    TraceOperation 042617 (Loadb (Con 8498) (Var (Local 6)) Sp);
    Let b1 = M[Offset(008498,GetLocal(6))];
    PushStack Widen(b1);
    TraceOperation 042623 (Storeb (Con 8744) (Var (Local 6)) (Var Sp));
    PopStack popped2;
    SetByte Offset(008744,GetLocal(6)) LoByte(popped2);
    TraceOperation 042629 (Inc (Con 6));
    SetLocal 6 Add(GetLocal(6),1);
    TraceOperation 042631 (Jump 042613);
    Jump: 042613
  } else {
    Jump: 042634
  }
LocOp 042634:
  TraceOperation 042634 (Jz (Var (Global 152)) (Branch F (Dloc 042713)));
  Let b1 = M[007510];
  Let b2 = M[007511];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 042638 (Store (Con 7) (Var (Global 78)));
    Let b3 = M[007362];
    Let b4 = M[007363];
    SetLocal 7 MakeHiLo(b3,b4);
    TraceOperation 042641 (Call (Floc 040828) [Var (Global 37),Con 38] (Local 6));
    Let b5 = M[007280];
    Let b6 = M[007281];
    PushFrame;
    PushReturnAddress 042641;
    SetLocal 1 MakeHiLo(b5,b6);
    SetLocal 2 38;
    MakeRoutineFrame 2;
    Jump: 040829
  } else {
    Jump: 042713
  }
LocReturn 042641:
  SetLocal 6 call_result;
  TraceOperation 042648 (Je [Var (Local 6),Con 0,Con 1] (Branch T (Dloc 042670)));
  if (LogOr(Equal(GetLocal(6),0),Equal(GetLocal(6),1))) {
    Jump: 042670
  } else {
    TraceOperation 042654 (Call (Floc 024996) [Var (Local 6)] Sp);
    PushFrame;
    PushReturnAddress 042654;
    SetLocal 1 GetLocal(6);
    MakeRoutineFrame 1;
    Jump: 024997
  }
LocReturn 042654:
  PushStack call_result;
  TraceOperation 042660 (Jz (Var Sp) (Branch T (Dloc 042670)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 042670
  } else {
    TraceOperation 042663 (Store (Con 168) (Var (Global 78)));
    Let b2 = M[007362];
    Let b3 = M[007363];
    SetByte 007510 b2;
    SetByte 007511 b3;
    TraceOperation 042666 (Sub (Con 0) (Var (Local 6)) (Local 6));
    SetLocal 6 Sub(0,GetLocal(6));
    Jump: 042670
  }
LocOp 042670:
  TraceOperation 042670 (Je [Var (Local 6),Con 1] (Branch F (Dloc 042690)));
  if (Equal(GetLocal(6),1)) {
    TraceOperation 042674 (Storew (Var (Local 1)) (Con 0) (Var (Global 40)));
    Let b1 = M[007286];
    Let b2 = M[007287];
    SetByte Offset(Address(GetLocal(1)),0) b1;
    SetByte Offset(Offset(Address(GetLocal(1)),0),1) b2;
    TraceOperation 042679 (Storew (Var (Local 1)) (Con 1) (Var (Global 47)));
    Let b3 = M[007300];
    Let b4 = M[007301];
    SetByte Offset(Address(GetLocal(1)),2) b3;
    SetByte Offset(Offset(Address(GetLocal(1)),2),1) b4;
    TraceOperation 042684 (Storew (Var (Local 1)) (Con 2) (Var (Global 48)));
    Let b5 = M[007302];
    Let b6 = M[007303];
    SetByte Offset(Address(GetLocal(1)),4) b5;
    SetByte Offset(Offset(Address(GetLocal(1)),4),1) b6;
    TraceOperation 042689 Rtrue;
    PopFrame;
    PopReturnAddress return_address_7;
    SetResult 1;
    JumpIndirect: (return) return_address_7
  } else {
    Jump: 042690
  }
LocOp 042690:
  TraceOperation 042690 (Jz (Var (Local 6)) (Branch T (Dloc 042703)));
  if (IsZero(GetLocal(6))) {
    Jump: 042703
  } else {
    TraceOperation 042693 (Store (Con 93) (Var (Local 6)));
    SetByte 007360 HiByte(GetLocal(6));
    SetByte 007361 LoByte(GetLocal(6));
    TraceOperation 042696 (Dec (Con 91));
    Let b1 = M[007356];
    Let b2 = M[007357];
    SetByte 007356 HiByte(Sub(MakeHiLo(b1,b2),1));
    SetByte 007357 LoByte(Sub(MakeHiLo(b1,b2),1));
    TraceOperation 042698 (Dec (Con 94));
    Let b3 = M[007362];
    Let b4 = M[007363];
    SetByte 007362 HiByte(Sub(MakeHiLo(b3,b4),1));
    SetByte 007363 LoByte(Sub(MakeHiLo(b3,b4),1));
    TraceOperation 042700 (Jump 042710);
    Jump: 042710
  }
LocOp 042703:
  TraceOperation 042703 (Store (Con 91) (Var (Global 78)));
  Let b1 = M[007362];
  Let b2 = M[007363];
  SetByte 007356 b1;
  SetByte 007357 b2;
  TraceOperation 042706 (Call (Floc 041168) [] (Global 77));
  PushFrame;
  PushReturnAddress 042706;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  SetLocal 2 0;
  SetLocal 1 0;
  Jump: 041169
LocReturn 042706:
  SetByte 007360 HiByte(call_result);
  SetByte 007361 LoByte(call_result);
  Jump: 042710
LocOp 042710:
  TraceOperation 042710 (Jump 042716);
  Jump: 042716
LocOp 042713:
  TraceOperation 042713 (Store (Con 168) (Con 0));
  SetByte 007510 0;
  SetByte 007511 0;
  Jump: 042716
LocOp 042716:
  TraceOperation 042716 (Jz (Var (Global 77)) (Branch T (Dloc 042731)));
  Let b1 = M[007360];
  Let b2 = M[007361];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 042731
  } else {
    TraceOperation 042719 (Loadb (Var (Global 77)) (Con 6) Sp);
    Let b3 = M[007360];
    Let b4 = M[007361];
    Let b5 = M[Offset(Address(MakeHiLo(b3,b4)),6)];
    PushStack Widen(b5);
    TraceOperation 042723 (And (Var Sp) (Con 1) Sp);
    PopStack popped6;
    PushStack And(popped6,1);
    TraceOperation 042727 (Jz (Var Sp) (Branch F (Dloc 042974)));
    PopStack popped7;
    if (IsZero(popped7)) {
      Jump: 042731
    } else {
      Jump: 042974
    }
  }
LocOp 042731:
  TraceOperation 042731 (Store (Con 91) (Var (Global 78)));
  Let b1 = M[007362];
  Let b2 = M[007363];
  SetByte 007356 b1;
  SetByte 007357 b2;
  TraceOperation 042734 (Store (Con 178) (Con 0));
  SetByte 007530 0;
  SetByte 007531 0;
  TraceOperation 042737 (Store (Con 171) (Con 0));
  SetByte 007516 0;
  SetByte 007517 0;
  TraceOperation 042740 (Call (Floc 046488) [Con 6,Con 0,Con 0] (Local 10));
  PushFrame;
  PushReturnAddress 042740;
  SetLocal 1 6;
  SetLocal 2 0;
  SetLocal 3 0;
  MakeRoutineFrame 10;
  SetLocal 10 0;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 046489
LocReturn 042740:
  SetLocal 10 call_result;
  TraceOperation 042748 (Je [Var (Local 10),Con 10000] (Branch F (Dloc 042757)));
  if (Equal(GetLocal(10),10000)) {
    TraceOperation 042754 (Jump 042434);
    Jump: 042434
  } else {
    Jump: 042757
  }
LocOp 042757:
  TraceOperation 042757 (Jz (Var (Local 10)) (Branch T (Dloc 042782)));
  if (IsZero(GetLocal(10))) {
    Jump: 042782
  } else {
    TraceOperation 042760 (Jin (Var (Local 10)) (Con 6) (Branch F (Dloc 042782)));
    Let b1 = M[Offset(Offset(000378,Mul(GetLocal(10),14)),6)];
    Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(10),14)),6),1)];
    if (Equal(6,MakeHiLo(b1,b2))) {
      TraceOperation 042764 (Storew (Var (Local 1)) (Con 0) (Con 26));
      SetByte Offset(Address(GetLocal(1)),0) 0;
      SetByte Offset(Offset(Address(GetLocal(1)),0),1) 26;
      TraceOperation 042769 (Storew (Var (Local 1)) (Con 1) (Con 1));
      SetByte Offset(Address(GetLocal(1)),2) 0;
      SetByte Offset(Offset(Address(GetLocal(1)),2),1) 1;
      TraceOperation 042774 (Storew (Var (Local 1)) (Con 2) (Var (Local 10)));
      SetByte Offset(Address(GetLocal(1)),4) HiByte(GetLocal(10));
      SetByte Offset(Offset(Address(GetLocal(1)),4),1) LoByte(GetLocal(10));
      TraceOperation 042779 (Jump 044572);
      Jump: 044572
    } else {
      Jump: 042782
    }
  }
LocOp 042782:
  TraceOperation 042782 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 042823)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 042786 (Store (Con 7) (Con 2));
    SetLocal 7 2;
    Jump: 042789
  } else {
    Jump: 042823
  }
LocOp 042789:
  TraceOperation 042789 (Jg (Var (Local 7)) (Var (Global 76)) (Branch T (Dloc 042811)));
  Let b1 = M[007358];
  Let b2 = M[007359];
  if (GreaterThan(GetLocal(7),MakeHiLo(b1,b2))) {
    Jump: 042811
  } else {
    TraceOperation 042793 (Call (Floc 041168) [] (Local 6));
    PushFrame;
    PushReturnAddress 042793;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    SetLocal 2 0;
    SetLocal 1 0;
    Jump: 041169
  }
LocReturn 042793:
  SetLocal 6 call_result;
  TraceOperation 042797 (Je [Var (Local 6),Con 21836] (Branch F (Dloc 042806)));
  if (Equal(GetLocal(6),21836)) {
    TraceOperation 042803 (Jump 042829);
    Jump: 042829
  } else {
    Jump: 042806
  }
LocOp 042806:
  TraceOperation 042806 (Inc (Con 7));
  SetLocal 7 Add(GetLocal(7),1);
  TraceOperation 042808 (Jump 042789);
  Jump: 042789
LocOp 042811:
  TraceOperation 042811 (Call (Floc 108092) [Var (Global 77)] (Global 77));
  Let b1 = M[007360];
  Let b2 = M[007361];
  PushFrame;
  PushReturnAddress 042811;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 0;
  Jump: 108093
LocReturn 042811:
  SetByte 007360 HiByte(call_result);
  SetByte 007361 LoByte(call_result);
  TraceOperation 042817 (Jz (Var (Global 77)) (Branch T (Dloc 042823)));
  Let b1 = M[007360];
  Let b2 = M[007361];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 042823
  } else {
    TraceOperation 042820 (Jump 042974);
    Jump: 042974
  }
LocOp 042823:
  TraceOperation 042823 (Store (Con 153) (Con 12));
  SetByte 007480 0;
  SetByte 007481 12;
  TraceOperation 042826 (Jump 043964);
  Jump: 043964
LocOp 042829:
  TraceOperation 042829 (Sub (Var (Global 75)) (Con 1) (Local 7));
  Let b1 = M[007356];
  Let b2 = M[007357];
  SetLocal 7 Sub(MakeHiLo(b1,b2),1);
  TraceOperation 042833 (Je [Var (Local 7),Con 1] (Branch F (Dloc 042847)));
  if (Equal(GetLocal(7),1)) {
    TraceOperation 042837 (CallN (Floc 036596) [Con 4097,Con 22]);
    PushFrame;
    PushReturnAddress 042837;
    SetLocal 1 4097;
    SetLocal 2 22;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 036597
  } else {
    Jump: 042847
  }
LocReturn 042837:
  TraceOperation 042844 (Jump 042385);
  Jump: 042385
LocOp 042847:
  TraceOperation 042847 (Store (Con 91) (Con 1));
  SetByte 007356 0;
  SetByte 007357 1;
  TraceOperation 042850 (Store (Con 173) (Con 1));
  SetByte 007520 0;
  SetByte 007521 1;
  TraceOperation 042853 (Store (Con 95) (Con 1));
  SetByte 007364 0;
  SetByte 007365 1;
  TraceOperation 042856 (Call (Floc 046488) [Var (Global 31),Var (Global 38),Con 6] (Local 10));
  Let b1 = M[007268];
  Let b2 = M[007269];
  Let b3 = M[007282];
  Let b4 = M[007283];
  PushFrame;
  PushReturnAddress 042856;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 MakeHiLo(b3,b4);
  SetLocal 3 6;
  MakeRoutineFrame 10;
  SetLocal 10 0;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 046489
LocReturn 042856:
  SetLocal 10 call_result;
  TraceOperation 042864 (Store (Con 95) (Con 0));
  SetByte 007364 0;
  SetByte 007365 0;
  TraceOperation 042867 (Je [Var (Local 10),Con 10000] (Branch F (Dloc 042876)));
  if (Equal(GetLocal(10),10000)) {
    TraceOperation 042873 (Jump 042434);
    Jump: 042434
  } else {
    Jump: 042876
  }
LocOp 042876:
  TraceOperation 042876 (Jz (Var (Local 10)) (Branch F (Dloc 042889)));
  if (IsZero(GetLocal(10))) {
    TraceOperation 042879 (CallN (Floc 036596) [Con 4097,Con 23]);
    PushFrame;
    PushReturnAddress 042879;
    SetLocal 1 4097;
    SetLocal 2 23;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 036597
  } else {
    Jump: 042889
  }
LocReturn 042879:
  TraceOperation 042886 (Jump 042385);
  Jump: 042385
LocOp 042889:
  TraceOperation 042889 (Test_attr (Var (Local 10)) (Con 1) (Branch T (Dloc 042908)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(10),14)),0)];
  if (TestBit(b1,6)) {
    Jump: 042908
  } else {
    TraceOperation 042893 (Test_attr (Var (Local 10)) (Con 19) (Branch T (Dloc 042908)));
    Let b2 = M[Offset(Offset(000378,Mul(GetLocal(10),14)),2)];
    if (TestBit(b2,4)) {
      Jump: 042908
    } else {
      TraceOperation 042897 (CallN (Floc 036596) [Con 4097,Con 24,Var (Local 10)]);
      PushFrame;
      PushReturnAddress 042897;
      SetLocal 1 4097;
      SetLocal 2 24;
      SetLocal 3 GetLocal(10);
      MakeRoutineFrame 6;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      Jump: 036597
    }
  }
LocReturn 042897:
  TraceOperation 042905 (Jump 042385);
  Jump: 042385
LocOp 042908:
  TraceOperation 042908 (Je [Var (Global 75),Var (Local 7)] (Branch T (Dloc 042922)));
  Let b1 = M[007356];
  Let b2 = M[007357];
  if (Equal(MakeHiLo(b1,b2),GetLocal(7))) {
    Jump: 042922
  } else {
    TraceOperation 042912 (CallN (Floc 036596) [Con 4097,Con 25]);
    PushFrame;
    PushReturnAddress 042912;
    SetLocal 1 4097;
    SetLocal 2 25;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 036597
  }
LocReturn 042912:
  TraceOperation 042919 (Jump 042385);
  Jump: 042385
LocOp 042922:
  TraceOperation 042922 (CallN (Floc 051776) [Var (Local 10)]);
  PushFrame;
  PushReturnAddress 042922;
  SetLocal 1 GetLocal(10);
  MakeRoutineFrame 3;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 051777
LocReturn 042922:
  TraceOperation 042927 (Add (Var (Local 7)) (Con 1) (Global 78));
  SetByte 007362 HiByte(Add(GetLocal(7),1));
  SetByte 007363 LoByte(Add(GetLocal(7),1));
  TraceOperation 042931 (Je [Var (Local 10),Var (Global 31)] (Branch F (Dloc 042962)));
  Let b1 = M[007268];
  Let b2 = M[007269];
  if (Equal(GetLocal(10),MakeHiLo(b1,b2))) {
    TraceOperation 042935 (Store (Con 91) (Var (Global 78)));
    Let b3 = M[007362];
    Let b4 = M[007363];
    SetByte 007356 b3;
    SetByte 007357 b4;
    TraceOperation 042938 (Call (Floc 041228) [] Sp);
    PushFrame;
    PushReturnAddress 042938;
    MakeRoutineFrame 1;
    SetLocal 1 0;
    Jump: 041229
  } else {
    Jump: 042962
  }
LocReturn 042938:
  PushStack call_result;
  TraceOperation 042942 (Je [Var Sp,Con 21494,Con 22376,Con 21494] (Branch F (Dloc 042962)));
  PopStack popped1;
  if (LogOr(LogOr(Equal(popped1,21494),Equal(popped1,22376)),Equal(popped1,21494))) {
    TraceOperation 042952 (CallN (Floc 036596) [Con 4097,Con 20]);
    PushFrame;
    PushReturnAddress 042952;
    SetLocal 1 4097;
    SetLocal 2 20;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 036597
  } else {
    Jump: 042962
  }
LocReturn 042952:
  TraceOperation 042959 (Jump 042385);
  Jump: 042385
LocOp 042962:
  TraceOperation 042962 (Store (Con 53) (Var (Local 10)));
  SetByte 007280 HiByte(GetLocal(10));
  SetByte 007281 LoByte(GetLocal(10));
  TraceOperation 042965 (Call (Floc 037240) [Var (Local 10)] (Global 38));
  PushFrame;
  PushReturnAddress 042965;
  SetLocal 1 GetLocal(10);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 037241
LocReturn 042965:
  SetByte 007282 HiByte(call_result);
  SetByte 007283 LoByte(call_result);
  TraceOperation 042971 (Jump 042485);
  Jump: 042485
LocOp 042974:
  TraceOperation 042974 (Loadb (Var (Global 77)) (Con 6) Sp);
  Let b1 = M[007360];
  Let b2 = M[007361];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),6)];
  PushStack Widen(b3);
  TraceOperation 042978 (And (Var Sp) (Con 2) Sp);
  PopStack popped4;
  PushStack And(popped4,2);
  TraceOperation 042982 (Div (Var Sp) (Con 2) (Global 41));
  PopStack popped5;
  SetByte 007288 HiByte(Div(popped5,2));
  SetByte 007289 LoByte(Div(popped5,2));
  TraceOperation 042986 (Je [Var (Global 41),Con 1] (Branch F (Dloc 043003)));
  Let b6 = M[007288];
  Let b7 = M[007289];
  if (Equal(MakeHiLo(b6,b7),1)) {
    TraceOperation 042990 (Je [Var (Global 37),Var (Global 31)] (Branch T (Dloc 043003)));
    Let b8 = M[007280];
    Let b9 = M[007281];
    Let b10 = M[007268];
    Let b11 = M[007269];
    if (Equal(MakeHiLo(b8,b9),MakeHiLo(b10,b11))) {
      Jump: 043003
    } else {
      TraceOperation 042994 (Store (Con 153) (Con 12));
      SetByte 007480 0;
      SetByte 007481 12;
      TraceOperation 042997 (Store (Con 57) (Con 0));
      SetByte 007288 0;
      SetByte 007289 0;
      TraceOperation 043000 (Jump 043964);
      Jump: 043964
    }
  } else {
    Jump: 043003
  }
LocOp 043003:
  TraceOperation 043003 (Loadb (Var (Global 77)) (Con 7) Sp);
  Let b1 = M[007360];
  Let b2 = M[007361];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),7)];
  PushStack Widen(b3);
  TraceOperation 043007 (Sub (Con 255) (Var Sp) (Local 6));
  PopStack popped4;
  SetLocal 6 Sub(255,popped4);
  TraceOperation 043011 (Loadw (Con 14) (Con 0) Sp);
  PushStack 19869;
  TraceOperation 043015 (Loadw (Var Sp) (Var (Local 6)) (Local 2));
  PopStack popped5;
  Let b6 = M[Offset(Address(popped5),Mul(2,GetLocal(6)))];
  Let b7 = M[Offset(Offset(Address(popped5),Mul(2,GetLocal(6))),1)];
  SetLocal 2 MakeHiLo(b6,b7);
  TraceOperation 043019 (Loadb (Var (Local 2)) (Con 0) Sp);
  Let b8 = M[Offset(Address(GetLocal(2)),0)];
  PushStack Widen(b8);
  TraceOperation 043023 (Sub (Var Sp) (Con 1) (Local 4));
  PopStack popped9;
  SetLocal 4 Sub(popped9,1);
  TraceOperation 043027 (Store (Con 78) (Con -1));
  SetByte 007330 255;
  SetByte 007331 255;
  TraceOperation 043032 (Store (Con 79) (Con -1));
  SetByte 007332 255;
  SetByte 007333 255;
  TraceOperation 043037 (Store (Con 153) (Con 1));
  SetByte 007480 0;
  SetByte 007481 1;
  TraceOperation 043040 (Store (Con 154) (Con 1));
  SetByte 007482 0;
  SetByte 007483 1;
  TraceOperation 043043 (Store (Con 61) (Con 0));
  SetByte 007296 0;
  SetByte 007297 0;
  TraceOperation 043046 (Add (Var (Local 2)) (Con 1) (Local 5));
  SetLocal 5 Add(GetLocal(2),1);
  TraceOperation 043050 (Store (Con 3) (Con 0));
  SetLocal 3 0;
  Jump: 043053
LocOp 043053:
  TraceOperation 043053 (Jg (Var (Local 3)) (Var (Local 4)) (Branch T (Dloc 043964)));
  if (GreaterThan(GetLocal(3),GetLocal(4))) {
    Jump: 043964
  } else {
    TraceOperation 043058 (Store (Con 6) (Con 0));
    SetLocal 6 0;
    Jump: 043061
  }
LocOp 043061:
  TraceOperation 043061 (Jl (Var (Local 6)) (Con 32) (Branch F (Dloc 043088)));
  if (LessThan(GetLocal(6),32)) {
    TraceOperation 043065 (Storew (Con 9939) (Var (Local 6)) (Con 15));
    SetByte Offset(009939,Mul(2,GetLocal(6))) 0;
    SetByte Offset(Offset(009939,Mul(2,GetLocal(6))),1) 15;
    TraceOperation 043071 (Storew (Con 9811) (Var (Local 6)) (Con 1));
    SetByte Offset(009811,Mul(2,GetLocal(6))) 0;
    SetByte Offset(Offset(009811,Mul(2,GetLocal(6))),1) 1;
    TraceOperation 043077 (Storew (Con 9875) (Var (Local 6)) (Con 15));
    SetByte Offset(009875,Mul(2,GetLocal(6))) 0;
    SetByte Offset(Offset(009875,Mul(2,GetLocal(6))),1) 15;
    TraceOperation 043083 (Inc (Con 6));
    SetLocal 6 Add(GetLocal(6),1);
    TraceOperation 043085 (Jump 043061);
    Jump: 043061
  } else {
    Jump: 043088
  }
LocOp 043088:
  TraceOperation 043088 (Call (Floc 041712) [Var (Local 5)] (Local 5));
  PushFrame;
  PushReturnAddress 043088;
  SetLocal 1 GetLocal(5);
  MakeRoutineFrame 3;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 041713
LocReturn 043088:
  SetLocal 5 call_result;
  TraceOperation 043094 (Store (Con 160) (Con 0));
  SetByte 007494 0;
  SetByte 007495 0;
  TraceOperation 043097 (Store (Con 88) (Con 0));
  SetByte 007350 0;
  SetByte 007351 0;
  TraceOperation 043100 (Store (Con 158) (Con 0));
  SetByte 007490 0;
  SetByte 007491 0;
  TraceOperation 043103 (Store (Con 71) (Con 0));
  SetByte 007316 0;
  SetByte 007317 0;
  TraceOperation 043106 (Storew (Con 8338) (Con 0) (Con 0));
  SetByte 008338 0;
  SetByte 008339 0;
  TraceOperation 043112 (Store (Con 177) (Con 0));
  SetByte 007528 0;
  SetByte 007529 0;
  TraceOperation 043115 (Store (Con 66) (Con 1));
  SetByte 007306 0;
  SetByte 007307 1;
  TraceOperation 043118 (Add (Var (Global 78)) (Con 1) (Global 75));
  Let b1 = M[007362];
  Let b2 = M[007363];
  SetByte 007356 HiByte(Add(MakeHiLo(b1,b2),1));
  SetByte 007357 LoByte(Add(MakeHiLo(b1,b2),1));
  TraceOperation 043122 (Store (Con 99) (Con -1));
  SetByte 007372 255;
  SetByte 007373 255;
  TraceOperation 043127 (Store (Con 178) (Con 0));
  SetByte 007530 0;
  SetByte 007531 0;
  TraceOperation 043130 (Store (Con 6) (Con 0));
  SetLocal 6 0;
  TraceOperation 043133 (Store (Con 11) (Con 0));
  SetLocal 11 0;
  TraceOperation 043136 (Store (Con 156) (Con 0));
  SetByte 007486 0;
  SetByte 007487 0;
  Jump: 043139
LocOp 043139:
  TraceOperation 043139 (Loadw (Con 9939) (Var (Global 140)) Sp);
  Let b1 = M[007486];
  Let b2 = M[007487];
  Let b3 = M[Offset(009939,Mul(2,MakeHiLo(b1,b2)))];
  Let b4 = M[Offset(Offset(009939,Mul(2,MakeHiLo(b1,b2))),1)];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 043145 (Je [Var Sp,Con 15] (Branch T (Dloc 043446)));
  PopStack popped5;
  if (Equal(popped5,15)) {
    Jump: 043446
  } else {
    TraceOperation 043150 (Store (Con 96) (Con 0));
    SetByte 007366 0;
    SetByte 007367 0;
    TraceOperation 043153 (Loadw (Con 9811) (Var (Global 140)) Sp);
    Let b6 = M[007486];
    Let b7 = M[007487];
    Let b8 = M[Offset(009811,Mul(2,MakeHiLo(b6,b7)))];
    Let b9 = M[Offset(Offset(009811,Mul(2,MakeHiLo(b6,b7))),1)];
    PushStack MakeHiLo(b8,b9);
    TraceOperation 043159 (Je [Var Sp,Con 2] (Branch T (Dloc 043165)));
    PopStack popped10;
    if (Equal(popped10,2)) {
      Jump: 043165
    } else {
      TraceOperation 043163 (Inc (Con 6));
      SetLocal 6 Add(GetLocal(6),1);
      Jump: 043165
    }
  }
LocOp 043165:
  TraceOperation 043165 (Loadw (Con 9811) (Var (Global 140)) Sp);
  Let b1 = M[007486];
  Let b2 = M[007487];
  Let b3 = M[Offset(009811,Mul(2,MakeHiLo(b1,b2)))];
  Let b4 = M[Offset(Offset(009811,Mul(2,MakeHiLo(b1,b2))),1)];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 043171 (Je [Var Sp,Con 1] (Branch F (Dloc 043441)));
  PopStack popped5;
  if (Equal(popped5,1)) {
    TraceOperation 043176 (Loadw (Con 9875) (Var (Global 140)) Sp);
    Let b6 = M[007486];
    Let b7 = M[007487];
    Let b8 = M[Offset(009875,Mul(2,MakeHiLo(b6,b7)))];
    Let b9 = M[Offset(Offset(009875,Mul(2,MakeHiLo(b6,b7))),1)];
    PushStack MakeHiLo(b8,b9);
    TraceOperation 043182 (Je [Var Sp,Con 2] (Branch F (Dloc 043189)));
    PopStack popped10;
    if (Equal(popped10,2)) {
      TraceOperation 043186 (Store (Con 11) (Con 1));
      SetLocal 11 1;
      Jump: 043189
    } else {
      Jump: 043189
    }
  } else {
    Jump: 043441
  }
LocOp 043189:
  TraceOperation 043189 (Loadw (Con 9875) (Var (Global 140)) Sp);
  Let b1 = M[007486];
  Let b2 = M[007487];
  Let b3 = M[Offset(009875,Mul(2,MakeHiLo(b1,b2)))];
  Let b4 = M[Offset(Offset(009875,Mul(2,MakeHiLo(b1,b2))),1)];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 043195 (Je [Var Sp,Con 4,Con 5] (Branch F (Dloc 043441)));
  PopStack popped5;
  if (LogOr(Equal(popped5,4),Equal(popped5,5))) {
    TraceOperation 043202 (Je [Var (Local 6),Con 1] (Branch F (Dloc 043441)));
    if (Equal(GetLocal(6),1)) {
      TraceOperation 043207 (Inc (Con 156));
      Let b6 = M[007486];
      Let b7 = M[007487];
      SetByte 007486 HiByte(Add(MakeHiLo(b6,b7),1));
      SetByte 007487 LoByte(Add(MakeHiLo(b6,b7),1));
      TraceOperation 043209 (Loadw (Con 9811) (Var (Global 140)) Sp);
      Let b8 = M[007486];
      Let b9 = M[007487];
      Let b10 = M[Offset(009811,Mul(2,MakeHiLo(b8,b9)))];
      Let b11 = M[Offset(Offset(009811,Mul(2,MakeHiLo(b8,b9))),1)];
      PushStack MakeHiLo(b10,b11);
      TraceOperation 043215 (Je [Var Sp,Con 2] (Branch F (Dloc 043438)));
      PopStack popped12;
      if (Equal(popped12,2)) {
        Jump: 043220
      } else {
        Jump: 043438
      }
    } else {
      Jump: 043441
    }
  } else {
    Jump: 043441
  }
LocOp 043220:
  TraceOperation 043220 (Call (Floc 041168) [] (Local 10));
  PushFrame;
  PushReturnAddress 043220;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  SetLocal 2 0;
  SetLocal 1 0;
  Jump: 041169
LocReturn 043220:
  SetLocal 10 call_result;
  TraceOperation 043224 (Jg (Var (Global 75)) (Var (Global 76)) (Branch T (Dloc 043244)));
  Let b1 = M[007356];
  Let b2 = M[007357];
  Let b3 = M[007358];
  Let b4 = M[007359];
  if (GreaterThan(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    Jump: 043244
  } else {
    TraceOperation 043228 (Jz (Var (Local 10)) (Branch T (Dloc 043220)));
    if (IsZero(GetLocal(10))) {
      Jump: 043220
    } else {
      TraceOperation 043232 (Loadb (Var (Local 10)) (Con 6) Sp);
      Let b5 = M[Offset(Address(GetLocal(10)),6)];
      PushStack Widen(b5);
      TraceOperation 043236 (And (Var Sp) (Con 8) Sp);
      PopStack popped6;
      PushStack And(popped6,8);
      TraceOperation 043240 (Jz (Var Sp) (Branch T (Dloc 043220)));
      PopStack popped7;
      if (IsZero(popped7)) {
        Jump: 043220
      } else {
        Jump: 043244
      }
    }
  }
LocOp 043244:
  TraceOperation 043244 (Jg (Var (Global 75)) (Var (Global 76)) (Branch F (Dloc 043251)));
  Let b1 = M[007356];
  Let b2 = M[007357];
  Let b3 = M[007358];
  Let b4 = M[007359];
  if (GreaterThan(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 043248 (Jump 043930);
    Jump: 043930
  } else {
    Jump: 043251
  }
LocOp 043251:
  TraceOperation 043251 (Call (Floc 046384) [Var (Local 10),Var (Global 140)] Sp);
  Let b1 = M[007486];
  Let b2 = M[007487];
  PushFrame;
  PushReturnAddress 043251;
  SetLocal 1 GetLocal(10);
  SetLocal 2 MakeHiLo(b1,b2);
  MakeRoutineFrame 2;
  Jump: 046385
LocReturn 043251:
  PushStack call_result;
  TraceOperation 043258 (Je [Var Sp,Con -1] (Branch T (Dloc 043324)));
  PopStack popped1;
  if (Equal(popped1,-1)) {
    Jump: 043324
  } else {
    TraceOperation 043265 (Loadw (Con 9939) (Var (Global 140)) Sp);
    Let b2 = M[007486];
    Let b3 = M[007487];
    Let b4 = M[Offset(009939,Mul(2,MakeHiLo(b2,b3)))];
    Let b5 = M[Offset(Offset(009939,Mul(2,MakeHiLo(b2,b3))),1)];
    PushStack MakeHiLo(b4,b5);
    TraceOperation 043271 (Loadb (Var Sp) (Con 0) Sp);
    PopStack popped6;
    Let b7 = M[Offset(Address(popped6),0)];
    PushStack Widen(b7);
    TraceOperation 043275 (And (Var Sp) (Con 32) Sp);
    PopStack popped8;
    PushStack And(popped8,32);
    TraceOperation 043279 (Jz (Var Sp) (Branch T (Dloc 043319)));
    PopStack popped9;
    if (IsZero(popped9)) {
      Jump: 043319
    } else {
      TraceOperation 043282 (Inc (Con 156));
      Let b10 = M[007486];
      Let b11 = M[007487];
      SetByte 007486 HiByte(Add(MakeHiLo(b10,b11),1));
      SetByte 007487 LoByte(Add(MakeHiLo(b10,b11),1));
      Jump: 043284
    }
  }
LocOp 043284:
  TraceOperation 043284 (Loadw (Con 9939) (Var (Global 140)) Sp);
  Let b1 = M[007486];
  Let b2 = M[007487];
  Let b3 = M[Offset(009939,Mul(2,MakeHiLo(b1,b2)))];
  Let b4 = M[Offset(Offset(009939,Mul(2,MakeHiLo(b1,b2))),1)];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 043290 (Je [Var Sp,Con 15] (Branch T (Dloc 043316)));
  PopStack popped5;
  if (Equal(popped5,15)) {
    Jump: 043316
  } else {
    TraceOperation 043294 (Loadw (Con 9939) (Var (Global 140)) Sp);
    Let b6 = M[007486];
    Let b7 = M[007487];
    Let b8 = M[Offset(009939,Mul(2,MakeHiLo(b6,b7)))];
    Let b9 = M[Offset(Offset(009939,Mul(2,MakeHiLo(b6,b7))),1)];
    PushStack MakeHiLo(b8,b9);
    TraceOperation 043300 (Loadb (Var Sp) (Con 0) Sp);
    PopStack popped10;
    Let b11 = M[Offset(Address(popped10),0)];
    PushStack Widen(b11);
    TraceOperation 043304 (And (Var Sp) (Con 16) Sp);
    PopStack popped12;
    PushStack And(popped12,16);
    TraceOperation 043308 (Jz (Var Sp) (Branch T (Dloc 043316)));
    PopStack popped13;
    if (IsZero(popped13)) {
      Jump: 043316
    } else {
      TraceOperation 043311 (Inc (Con 156));
      Let b14 = M[007486];
      Let b15 = M[007487];
      SetByte 007486 HiByte(Add(MakeHiLo(b14,b15),1));
      SetByte 007487 LoByte(Add(MakeHiLo(b14,b15),1));
      TraceOperation 043313 (Jump 043284);
      Jump: 043284
    }
  }
LocOp 043316:
  TraceOperation 043316 (Jump 043321);
  Jump: 043321
LocOp 043319:
  TraceOperation 043319 (Inc (Con 156));
  Let b1 = M[007486];
  Let b2 = M[007487];
  SetByte 007486 HiByte(Add(MakeHiLo(b1,b2),1));
  SetByte 007487 LoByte(Add(MakeHiLo(b1,b2),1));
  Jump: 043321
LocOp 043321:
  TraceOperation 043321 (Jump 043368);
  Jump: 043368
LocOp 043324:
  TraceOperation 043324 (Call (Floc 041168) [] (Local 10));
  PushFrame;
  PushReturnAddress 043324;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  SetLocal 2 0;
  SetLocal 1 0;
  Jump: 041169
LocReturn 043324:
  SetLocal 10 call_result;
  TraceOperation 043328 (Jl (Var (Global 75)) (Var (Global 76)) (Branch F (Dloc 043348)));
  Let b1 = M[007356];
  Let b2 = M[007357];
  Let b3 = M[007358];
  Let b4 = M[007359];
  if (LessThan(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 043332 (Jz (Var (Local 10)) (Branch T (Dloc 043324)));
    if (IsZero(GetLocal(10))) {
      Jump: 043324
    } else {
      TraceOperation 043336 (Loadb (Var (Local 10)) (Con 6) Sp);
      Let b5 = M[Offset(Address(GetLocal(10)),6)];
      PushStack Widen(b5);
      TraceOperation 043340 (And (Var Sp) (Con 8) Sp);
      PopStack popped6;
      PushStack And(popped6,8);
      TraceOperation 043344 (Jz (Var Sp) (Branch T (Dloc 043324)));
      PopStack popped7;
      if (IsZero(popped7)) {
        Jump: 043324
      } else {
        Jump: 043348
      }
    }
  } else {
    Jump: 043348
  }
LocOp 043348:
  TraceOperation 043348 (Jz (Var (Local 10)) (Branch T (Dloc 043365)));
  if (IsZero(GetLocal(10))) {
    Jump: 043365
  } else {
    TraceOperation 043351 (Loadb (Var (Local 10)) (Con 6) Sp);
    Let b1 = M[Offset(Address(GetLocal(10)),6)];
    PushStack Widen(b1);
    TraceOperation 043355 (And (Var Sp) (Con 8) Sp);
    PopStack popped2;
    PushStack And(popped2,8);
    TraceOperation 043359 (Jz (Var Sp) (Branch T (Dloc 043365)));
    PopStack popped3;
    if (IsZero(popped3)) {
      Jump: 043365
    } else {
      TraceOperation 043362 (Jump 043372);
      Jump: 043372
    }
  }
LocOp 043365:
  TraceOperation 043365 (Jump 043930);
  Jump: 043930
LocOp 043368:
  TraceOperation 043368 (Call (Floc 041168) [] (Local 10));
  PushFrame;
  PushReturnAddress 043368;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  SetLocal 2 0;
  SetLocal 1 0;
  Jump: 041169
LocReturn 043368:
  SetLocal 10 call_result;
  Jump: 043372
LocOp 043372:
  TraceOperation 043372 (Loadw (Con 9811) (Var (Global 140)) Sp);
  Let b1 = M[007486];
  Let b2 = M[007487];
  Let b3 = M[Offset(009811,Mul(2,MakeHiLo(b1,b2)))];
  Let b4 = M[Offset(Offset(009811,Mul(2,MakeHiLo(b1,b2))),1)];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 043378 (Je [Var Sp,Con 2] (Branch T (Dloc 043251)));
  PopStack popped5;
  if (Equal(popped5,2)) {
    Jump: 043251
  } else {
    TraceOperation 043383 (Dec (Con 91));
    Let b6 = M[007356];
    Let b7 = M[007357];
    SetByte 007356 HiByte(Sub(MakeHiLo(b6,b7),1));
    SetByte 007357 LoByte(Sub(MakeHiLo(b6,b7),1));
    TraceOperation 043385 (Loadw (Con 9811) (Var (Global 140)) Sp);
    Let b8 = M[007486];
    Let b9 = M[007487];
    Let b10 = M[Offset(009811,Mul(2,MakeHiLo(b8,b9)))];
    Let b11 = M[Offset(Offset(009811,Mul(2,MakeHiLo(b8,b9))),1)];
    PushStack MakeHiLo(b10,b11);
    TraceOperation 043391 (Je [Var Sp,Con 1] (Branch F (Dloc 043438)));
    PopStack popped12;
    if (Equal(popped12,1)) {
      TraceOperation 043395 (Loadw (Con 9875) (Var (Global 140)) Sp);
      Let b13 = M[007486];
      Let b14 = M[007487];
      Let b15 = M[Offset(009875,Mul(2,MakeHiLo(b13,b14)))];
      Let b16 = M[Offset(Offset(009875,Mul(2,MakeHiLo(b13,b14))),1)];
      PushStack MakeHiLo(b15,b16);
      TraceOperation 043401 (Jz (Var Sp) (Branch F (Dloc 043438)));
      PopStack popped17;
      if (IsZero(popped17)) {
        TraceOperation 043404 (Call (Floc 046020) [] (Local 10));
        PushFrame;
        PushReturnAddress 043404;
        MakeRoutineFrame 6;
        SetLocal 6 0;
        SetLocal 5 0;
        SetLocal 4 0;
        SetLocal 3 0;
        SetLocal 2 0;
        SetLocal 1 0;
        Jump: 046021
      } else {
        Jump: 043438
      }
    } else {
      Jump: 043438
    }
  }
LocReturn 043404:
  SetLocal 10 call_result;
  TraceOperation 043408 (Jz (Var (Local 10)) (Branch T (Dloc 043414)));
  if (IsZero(GetLocal(10))) {
    Jump: 043414
  } else {
    TraceOperation 043411 (Store (Con 66) (Var (Local 10)));
    SetByte 007306 HiByte(GetLocal(10));
    SetByte 007307 LoByte(GetLocal(10));
    Jump: 043414
  }
LocOp 043414:
  TraceOperation 043414 (Call (Floc 046488) [Var (Global 38),Var (Global 37),Con 0] (Local 10));
  Let b1 = M[007282];
  Let b2 = M[007283];
  Let b3 = M[007280];
  Let b4 = M[007281];
  PushFrame;
  PushReturnAddress 043414;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 MakeHiLo(b3,b4);
  SetLocal 3 0;
  MakeRoutineFrame 10;
  SetLocal 10 0;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 046489
LocReturn 043414:
  SetLocal 10 call_result;
  TraceOperation 043422 (Je [Var (Local 10),Con 10000] (Branch F (Dloc 043431)));
  if (Equal(GetLocal(10),10000)) {
    TraceOperation 043428 (Jump 042434);
    Jump: 042434
  } else {
    Jump: 043431
  }
LocOp 043431:
  TraceOperation 043431 (Jl (Var (Local 10)) (Con 2) (Branch T (Dloc 043438)));
  if (LessThan(GetLocal(10),2)) {
    Jump: 043438
  } else {
    TraceOperation 043435 (Store (Con 99) (Var (Local 10)));
    SetByte 007372 HiByte(GetLocal(10));
    SetByte 007373 LoByte(GetLocal(10));
    Jump: 043438
  }
LocOp 043438:
  TraceOperation 043438 (Jump 043446);
  Jump: 043446
LocOp 043441:
  TraceOperation 043441 (Inc (Con 156));
  Let b1 = M[007486];
  Let b2 = M[007487];
  SetByte 007486 HiByte(Add(MakeHiLo(b1,b2),1));
  SetByte 007487 LoByte(Add(MakeHiLo(b1,b2),1));
  TraceOperation 043443 (Jump 043139);
  Jump: 043139
LocOp 043446:
  TraceOperation 043446 (Store (Con 187) (Con 0));
  SetByte 007548 0;
  SetByte 007549 0;
  TraceOperation 043449 (Jz (Var (Local 11)) (Branch T (Dloc 043463)));
  if (IsZero(GetLocal(11))) {
    Jump: 043463
  } else {
    TraceOperation 043452 (Je [Var (Global 143),Con 1] (Branch F (Dloc 043463)));
    Let b1 = M[007492];
    Let b2 = M[007493];
    if (Equal(MakeHiLo(b1,b2),1)) {
      TraceOperation 043456 (Je [Var (Global 73),Con 64] (Branch F (Dloc 043463)));
      Let b3 = M[007352];
      Let b4 = M[007353];
      if (Equal(MakeHiLo(b3,b4),64)) {
        TraceOperation 043460 (Store (Con 187) (Con 1));
        SetByte 007548 0;
        SetByte 007549 1;
        Jump: 043463
      } else {
        Jump: 043463
      }
    } else {
      Jump: 043463
    }
  }
LocOp 043463:
  TraceOperation 043463 (Store (Con 160) (Con 0));
  SetByte 007494 0;
  SetByte 007495 0;
  TraceOperation 043466 (Store (Con 88) (Con 0));
  SetByte 007350 0;
  SetByte 007351 0;
  TraceOperation 043469 (Store (Con 158) (Con 0));
  SetByte 007490 0;
  SetByte 007491 0;
  TraceOperation 043472 (Store (Con 71) (Con 0));
  SetByte 007316 0;
  SetByte 007317 0;
  TraceOperation 043475 (Storew (Con 8338) (Con 0) (Con 0));
  SetByte 008338 0;
  SetByte 008339 0;
  TraceOperation 043481 (Store (Con 66) (Con 1));
  SetByte 007306 0;
  SetByte 007307 1;
  TraceOperation 043484 (Add (Var (Global 78)) (Con 1) (Global 75));
  Let b1 = M[007362];
  Let b2 = M[007363];
  SetByte 007356 HiByte(Add(MakeHiLo(b1,b2),1));
  SetByte 007357 LoByte(Add(MakeHiLo(b1,b2),1));
  TraceOperation 043488 (Store (Con 156) (Con 1));
  SetByte 007486 0;
  SetByte 007487 1;
  Jump: 043491
LocOp 043491:
  TraceOperation 043491 (Storew (Con 9683) (Var (Global 140)) (Con -1));
  Let b1 = M[007486];
  Let b2 = M[007487];
  SetByte Offset(009683,Mul(2,MakeHiLo(b1,b2))) 255;
  SetByte Offset(Offset(009683,Mul(2,MakeHiLo(b1,b2))),1) 255;
  TraceOperation 043498 (Store (Con 96) (Con 0));
  SetByte 007366 0;
  SetByte 007367 0;
  TraceOperation 043501 (Sub (Var (Global 140)) (Con 1) Sp);
  Let b3 = M[007486];
  Let b4 = M[007487];
  PushStack Sub(MakeHiLo(b3,b4),1);
  TraceOperation 043505 (Loadw (Con 9939) (Var Sp) (Local 9));
  PopStack popped5;
  Let b6 = M[Offset(009939,Mul(2,popped5))];
  Let b7 = M[Offset(Offset(009939,Mul(2,popped5)),1)];
  SetLocal 9 MakeHiLo(b6,b7);
  TraceOperation 043511 (Loadw (Con 9939) (Var (Global 140)) (Global 157));
  Let b8 = M[007486];
  Let b9 = M[007487];
  Let b10 = M[Offset(009939,Mul(2,MakeHiLo(b8,b9)))];
  Let b11 = M[Offset(Offset(009939,Mul(2,MakeHiLo(b8,b9))),1)];
  SetByte 007520 b10;
  SetByte 007521 b11;
  TraceOperation 043517 (Je [Var (Local 9),Con 15] (Branch T (Dloc 043680)));
  if (Equal(GetLocal(9),15)) {
    Jump: 043680
  } else {
    TraceOperation 043522 (Store (Con 95) (Con 0));
    SetByte 007364 0;
    SetByte 007365 0;
    TraceOperation 043525 (CallN (Floc 041856) [Var (Local 9)]);
    PushFrame;
    PushReturnAddress 043525;
    SetLocal 1 GetLocal(9);
    MakeRoutineFrame 1;
    Jump: 041857
  }
LocReturn 043525:
  TraceOperation 043530 (Sub (Var (Global 140)) (Con 1) Sp);
  Let b1 = M[007486];
  Let b2 = M[007487];
  PushStack Sub(MakeHiLo(b1,b2),1);
  TraceOperation 043534 (Call (Floc 044736) [Var (Global 153),Var (Global 154),Var Sp,Var (Local 9)] (Local 10));
  Let b3 = M[007512];
  Let b4 = M[007513];
  Let b5 = M[007514];
  Let b6 = M[007515];
  PopStack popped7;
  PushFrame;
  PushReturnAddress 043534;
  SetLocal 1 MakeHiLo(b3,b4);
  SetLocal 2 MakeHiLo(b5,b6);
  SetLocal 3 popped7;
  SetLocal 4 GetLocal(9);
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  Jump: 044737
LocReturn 043534:
  SetLocal 10 call_result;
  Jump: 043544
LocOp 043544:
  TraceOperation 043544 (Jl (Var (Local 10)) (Con -256) (Branch T (Dloc 043572)));
  if (LessThan(GetLocal(10),-256)) {
    Jump: 043572
  } else {
    TraceOperation 043550 (Jl (Var (Local 10)) (Con -1) (Branch F (Dloc 043572)));
    if (LessThan(GetLocal(10),-1)) {
      TraceOperation 043556 (Add (Var (Local 10)) (Con 256) Sp);
      PushStack Add(GetLocal(10),256);
      TraceOperation 043562 (Call (Floc 044736) [Con 1,Var Sp] (Local 10));
      PopStack popped1;
      PushFrame;
      PushReturnAddress 043562;
      SetLocal 1 1;
      SetLocal 2 popped1;
      MakeRoutineFrame 7;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      SetLocal 3 0;
      Jump: 044737
    } else {
      Jump: 043572
    }
  }
LocReturn 043562:
  SetLocal 10 call_result;
  TraceOperation 043569 (Jump 043544);
  Jump: 043544
LocOp 043572:
  TraceOperation 043572 (Store (Con 95) (Con 0));
  SetByte 007364 0;
  SetByte 007365 0;
  TraceOperation 043575 (Jz (Var (Local 10)) (Branch F (Dloc 043598)));
  if (IsZero(GetLocal(10))) {
    TraceOperation 043578 (Je [Var (Global 153),Con 2] (Branch T (Dloc 043592)));
    Let b1 = M[007512];
    Let b2 = M[007513];
    if (Equal(MakeHiLo(b1,b2),2)) {
      Jump: 043592
    } else {
      TraceOperation 043582 (Je [Var (Global 153),Con 1] (Branch F (Dloc 043590)));
      Let b3 = M[007512];
      Let b4 = M[007513];
      if (Equal(MakeHiLo(b3,b4),1)) {
        TraceOperation 043586 (Je [Var (Global 154),Con 9] (Branch T (Dloc 043592)));
        Let b5 = M[007514];
        Let b6 = M[007515];
        if (Equal(MakeHiLo(b5,b6),9)) {
          Jump: 043592
        } else {
          Jump: 043590
        }
      } else {
        Jump: 043590
      }
    }
  } else {
    Jump: 043598
  }
LocOp 043590:
  TraceOperation 043590 (Dec (Con 159));
  Let b1 = M[007492];
  Let b2 = M[007493];
  SetByte 007492 HiByte(Sub(MakeHiLo(b1,b2),1));
  SetByte 007493 LoByte(Sub(MakeHiLo(b1,b2),1));
  Jump: 043592
LocOp 043592:
  TraceOperation 043592 (Store (Con 10) (Con 1));
  SetLocal 10 1;
  TraceOperation 043595 (Jump 043662);
  Jump: 043662
LocOp 043598:
  TraceOperation 043598 (Jl (Var (Local 10)) (Con 0) (Branch F (Dloc 043608)));
  if (LessThan(GetLocal(10),0)) {
    TraceOperation 043602 (Store (Con 10) (Con 0));
    SetLocal 10 0;
    TraceOperation 043605 (Jump 043662);
    Jump: 043662
  } else {
    Jump: 043608
  }
LocOp 043608:
  TraceOperation 043608 (Je [Var (Local 10),Con 10000] (Branch T (Dloc 043662)));
  if (Equal(GetLocal(10),10000)) {
    Jump: 043662
  } else {
    TraceOperation 043614 (Je [Var (Local 10),Con 1] (Branch F (Dloc 043635)));
    if (Equal(GetLocal(10),1)) {
      TraceOperation 043618 (Jz (Var (Global 142)) (Branch F (Dloc 043627)));
      Let b1 = M[007490];
      Let b2 = M[007491];
      if (IsZero(MakeHiLo(b1,b2))) {
        TraceOperation 043621 (Store (Con 75) (Var (Global 58)));
        Let b3 = M[007322];
        Let b4 = M[007323];
        SetByte 007324 b3;
        SetByte 007325 b4;
        TraceOperation 043624 (Jump 043630);
        Jump: 043630
      } else {
        Jump: 043627
      }
    } else {
      Jump: 043635
    }
  }
LocOp 043627:
  TraceOperation 043627 (Store (Con 76) (Var (Global 58)));
  Let b1 = M[007322];
  Let b2 = M[007323];
  SetByte 007326 b1;
  SetByte 007327 b2;
  Jump: 043630
LocOp 043630:
  TraceOperation 043630 (Inc (Con 158));
  Let b1 = M[007490];
  Let b2 = M[007491];
  SetByte 007490 HiByte(Add(MakeHiLo(b1,b2),1));
  SetByte 007491 LoByte(Add(MakeHiLo(b1,b2),1));
  TraceOperation 043632 (Store (Con 10) (Con 1));
  SetLocal 10 1;
  Jump: 043635
LocOp 043635:
  TraceOperation 043635 (Je [Var (Local 10),Con 2] (Branch F (Dloc 043642)));
  if (Equal(GetLocal(10),2)) {
    TraceOperation 043639 (Store (Con 10) (Con 0));
    SetLocal 10 0;
    Jump: 043642
  } else {
    Jump: 043642
  }
LocOp 043642:
  TraceOperation 043642 (Add (Var (Global 72)) (Con 2) Sp);
  Let b1 = M[007350];
  Let b2 = M[007351];
  PushStack Add(MakeHiLo(b1,b2),2);
  TraceOperation 043646 (Storew (Var (Local 1)) (Var Sp) (Var (Local 10)));
  PopStack popped3;
  SetByte Offset(Address(GetLocal(1)),Mul(2,popped3)) HiByte(GetLocal(10));
  SetByte Offset(Offset(Address(GetLocal(1)),Mul(2,popped3)),1) LoByte(GetLocal(10));
  TraceOperation 043651 (Inc (Con 88));
  Let b4 = M[007350];
  Let b5 = M[007351];
  SetByte 007350 HiByte(Add(MakeHiLo(b4,b5),1));
  SetByte 007351 LoByte(Add(MakeHiLo(b4,b5),1));
  TraceOperation 043653 (Storew (Con 9683) (Var (Global 140)) (Var (Local 10)));
  Let b6 = M[007486];
  Let b7 = M[007487];
  SetByte Offset(009683,Mul(2,MakeHiLo(b6,b7))) HiByte(GetLocal(10));
  SetByte Offset(Offset(009683,Mul(2,MakeHiLo(b6,b7))),1) LoByte(GetLocal(10));
  TraceOperation 043659 (Store (Con 10) (Con 1));
  SetLocal 10 1;
  Jump: 043662
LocOp 043662:
  TraceOperation 043662 (Je [Var (Local 10),Con 10000] (Branch F (Dloc 043671)));
  if (Equal(GetLocal(10),10000)) {
    TraceOperation 043668 (Jump 042434);
    Jump: 042434
  } else {
    Jump: 043671
  }
LocOp 043671:
  TraceOperation 043671 (Jz (Var (Local 10)) (Branch F (Dloc 043677)));
  if (IsZero(GetLocal(10))) {
    TraceOperation 043674 (Jump 043930);
    Jump: 043930
  } else {
    Jump: 043677
  }
LocOp 043677:
  TraceOperation 043677 (Jump 043925);
  Jump: 043925
LocOp 043680:
  TraceOperation 043680 (Jg (Var (Global 75)) (Var (Global 76)) (Branch T (Dloc 043748)));
  Let b1 = M[007356];
  Let b2 = M[007357];
  Let b3 = M[007358];
  Let b4 = M[007359];
  if (GreaterThan(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    Jump: 043748
  } else {
    TraceOperation 043685 (Call (Floc 041168) [] (Local 10));
    PushFrame;
    PushReturnAddress 043685;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    SetLocal 2 0;
    SetLocal 1 0;
    Jump: 041169
  }
LocReturn 043685:
  SetLocal 10 call_result;
  TraceOperation 043689 (Je [Var (Local 10),Con 23996,Con 23996,Con 23996] (Branch T (Dloc 043705)));
  if (LogOr(LogOr(Equal(GetLocal(10),23996),Equal(GetLocal(10),23996)),Equal(GetLocal(10),23996))) {
    Jump: 043705
  } else {
    TraceOperation 043699 (Je [Var (Local 10),Con 21836] (Branch F (Dloc 043715)));
    if (Equal(GetLocal(10),21836)) {
      Jump: 043705
    } else {
      Jump: 043715
    }
  }
LocOp 043705:
  TraceOperation 043705 (Store (Con 166) (Con 1));
  SetByte 007506 0;
  SetByte 007507 1;
  TraceOperation 043708 (Sub (Var (Global 75)) (Con 1) (Global 151));
  Let b1 = M[007356];
  Let b2 = M[007357];
  SetByte 007508 HiByte(Sub(MakeHiLo(b1,b2),1));
  SetByte 007509 LoByte(Sub(MakeHiLo(b1,b2),1));
  TraceOperation 043712 (Jump 043748);
  Jump: 043748
LocOp 043715:
  TraceOperation 043715 (Store (Con 11) (Con 0));
  SetLocal 11 0;
  Jump: 043718
LocOp 043718:
  TraceOperation 043718 (Jl (Var (Local 11)) (Con 32) (Branch F (Dloc 043739)));
  if (LessThan(GetLocal(11),32)) {
    TraceOperation 043722 (Loadw (Con 9683) (Var (Local 11)) Sp);
    Let b1 = M[Offset(009683,Mul(2,GetLocal(11)))];
    Let b2 = M[Offset(Offset(009683,Mul(2,GetLocal(11))),1)];
    PushStack MakeHiLo(b1,b2);
    TraceOperation 043728 (Storew (Con 9747) (Var (Local 11)) (Var Sp));
    PopStack popped3;
    SetByte Offset(009747,Mul(2,GetLocal(11))) HiByte(popped3);
    SetByte Offset(Offset(009747,Mul(2,GetLocal(11))),1) LoByte(popped3);
    TraceOperation 043734 (Inc (Con 11));
    SetLocal 11 Add(GetLocal(11),1);
    TraceOperation 043736 (Jump 043718);
    Jump: 043718
  } else {
    Jump: 043739
  }
LocOp 043739:
  TraceOperation 043739 (Store (Con 157) (Var (Global 140)));
  Let b1 = M[007486];
  Let b2 = M[007487];
  SetByte 007488 b1;
  SetByte 007489 b2;
  TraceOperation 043742 (Store (Con 66) (Con 2));
  SetByte 007306 0;
  SetByte 007307 2;
  TraceOperation 043745 (Jump 043930);
  Jump: 043930
LocOp 043748:
  TraceOperation 043748 (Jl (Var (Global 72)) (Con 1) (Branch T (Dloc 043783)));
  Let b1 = M[007350];
  Let b2 = M[007351];
  if (LessThan(MakeHiLo(b1,b2),1)) {
    Jump: 043783
  } else {
    TraceOperation 043752 (Loadw (Var (Local 1)) (Con 2) Sp);
    Let b3 = M[Offset(Address(GetLocal(1)),4)];
    Let b4 = M[Offset(Offset(Address(GetLocal(1)),4),1)];
    PushStack MakeHiLo(b3,b4);
    TraceOperation 043756 (Jz (Var Sp) (Branch F (Dloc 043783)));
    PopStack popped5;
    if (IsZero(popped5)) {
      TraceOperation 043759 (Loadw (Var (Local 1)) (Con 3) Sp);
      Let b6 = M[Offset(Address(GetLocal(1)),6)];
      Let b7 = M[Offset(Offset(Address(GetLocal(1)),6),1)];
      PushStack MakeHiLo(b6,b7);
      TraceOperation 043763 (Call (Floc 048408) [Var Sp] (Local 10));
      PopStack popped8;
      PushFrame;
      PushReturnAddress 043763;
      SetLocal 1 popped8;
      MakeRoutineFrame 3;
      SetLocal 3 0;
      SetLocal 2 0;
      Jump: 048409
    } else {
      Jump: 043783
    }
  }
LocReturn 043763:
  SetLocal 10 call_result;
  TraceOperation 043769 (Jz (Var (Local 10)) (Branch T (Dloc 043783)));
  if (IsZero(GetLocal(10))) {
    Jump: 043783
  } else {
    TraceOperation 043772 (Store (Con 66) (Var (Local 10)));
    SetByte 007306 HiByte(GetLocal(10));
    SetByte 007307 LoByte(GetLocal(10));
    TraceOperation 043775 (Storew (Var (Local 1)) (Con 0) (Var (Global 73)));
    Let b1 = M[007352];
    Let b2 = M[007353];
    SetByte Offset(Address(GetLocal(1)),0) b1;
    SetByte Offset(Offset(Address(GetLocal(1)),0),1) b2;
    TraceOperation 043780 (Jump 043930);
    Jump: 043930
  }
LocOp 043783:
  TraceOperation 043783 (Jl (Var (Global 72)) (Con 2) (Branch T (Dloc 043813)));
  Let b1 = M[007350];
  Let b2 = M[007351];
  if (LessThan(MakeHiLo(b1,b2),2)) {
    Jump: 043813
  } else {
    TraceOperation 043787 (Loadw (Var (Local 1)) (Con 3) Sp);
    Let b3 = M[Offset(Address(GetLocal(1)),6)];
    Let b4 = M[Offset(Offset(Address(GetLocal(1)),6),1)];
    PushStack MakeHiLo(b3,b4);
    TraceOperation 043791 (Jz (Var Sp) (Branch F (Dloc 043813)));
    PopStack popped5;
    if (IsZero(popped5)) {
      TraceOperation 043794 (Loadw (Var (Local 1)) (Con 2) Sp);
      Let b6 = M[Offset(Address(GetLocal(1)),4)];
      Let b7 = M[Offset(Offset(Address(GetLocal(1)),4),1)];
      PushStack MakeHiLo(b6,b7);
      TraceOperation 043798 (Call (Floc 048408) [Var Sp] (Local 10));
      PopStack popped8;
      PushFrame;
      PushReturnAddress 043798;
      SetLocal 1 popped8;
      MakeRoutineFrame 3;
      SetLocal 3 0;
      SetLocal 2 0;
      Jump: 048409
    } else {
      Jump: 043813
    }
  }
LocReturn 043798:
  SetLocal 10 call_result;
  TraceOperation 043804 (Jz (Var (Local 10)) (Branch T (Dloc 043813)));
  if (IsZero(GetLocal(10))) {
    Jump: 043813
  } else {
    TraceOperation 043807 (Store (Con 66) (Var (Local 10)));
    SetByte 007306 HiByte(GetLocal(10));
    SetByte 007307 LoByte(GetLocal(10));
    TraceOperation 043810 (Jump 043930);
    Jump: 043930
  }
LocOp 043813:
  TraceOperation 043813 (Je [Var (Global 171),Con 2] (Branch F (Dloc 043831)));
  Let b1 = M[007548];
  Let b2 = M[007549];
  if (Equal(MakeHiLo(b1,b2),2)) {
    TraceOperation 043817 (Loadw (Var (Local 1)) (Con 2) Sp);
    Let b3 = M[Offset(Address(GetLocal(1)),4)];
    Let b4 = M[Offset(Offset(Address(GetLocal(1)),4),1)];
    PushStack MakeHiLo(b3,b4);
    TraceOperation 043821 (Je [Var Sp,Var (Global 37)] (Branch F (Dloc 043831)));
    PopStack popped5;
    Let b6 = M[007280];
    Let b7 = M[007281];
    if (Equal(popped5,MakeHiLo(b6,b7))) {
      TraceOperation 043825 (Store (Con 153) (Con 17));
      SetByte 007480 0;
      SetByte 007481 17;
      TraceOperation 043828 (Jump 043964);
      Jump: 043964
    } else {
      Jump: 043831
    }
  } else {
    Jump: 043831
  }
LocOp 043831:
  TraceOperation 043831 (Store (Con 164) (Con 0));
  SetByte 007502 0;
  SetByte 007503 0;
  TraceOperation 043834 (Jz (Var (Global 144)) (Branch T (Dloc 043845)));
  Let b1 = M[007494];
  Let b2 = M[007495];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 043845
  } else {
    TraceOperation 043837 (CallN (Floc 049416) [Var (Global 144)]);
    Let b3 = M[007494];
    Let b4 = M[007495];
    PushFrame;
    PushReturnAddress 043837;
    SetLocal 1 MakeHiLo(b3,b4);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 049417
  }
LocReturn 043837:
  TraceOperation 043842 (CallN (Floc 080308) []);
  PushFrame;
  PushReturnAddress 043842;
  MakeRoutineFrame 0;
  Jump: 080309
LocReturn 043842:
  Jump: 043845
LocOp 043845:
  TraceOperation 043845 (Storew (Var (Local 1)) (Con 0) (Var (Global 73)));
  Let b1 = M[007352];
  Let b2 = M[007353];
  SetByte Offset(Address(GetLocal(1)),0) b1;
  SetByte Offset(Offset(Address(GetLocal(1)),0),1) b2;
  TraceOperation 043850 (Storew (Var (Local 1)) (Con 1) (Var (Global 72)));
  Let b3 = M[007350];
  Let b4 = M[007351];
  SetByte Offset(Address(GetLocal(1)),2) b3;
  SetByte Offset(Offset(Address(GetLocal(1)),2),1) b4;
  TraceOperation 043855 (Jz (Var (Global 74)) (Branch T (Dloc 043893)));
  Let b5 = M[007354];
  Let b6 = M[007355];
  if (IsZero(MakeHiLo(b5,b6))) {
    Jump: 043893
  } else {
    TraceOperation 043858 (Je [Var (Global 72),Con 2] (Branch F (Dloc 043893)));
    Let b7 = M[007350];
    Let b8 = M[007351];
    if (Equal(MakeHiLo(b7,b8),2)) {
      TraceOperation 043862 (Loadw (Var (Local 1)) (Con 2) (Local 6));
      Let b9 = M[Offset(Address(GetLocal(1)),4)];
      Let b10 = M[Offset(Offset(Address(GetLocal(1)),4),1)];
      SetLocal 6 MakeHiLo(b9,b10);
      TraceOperation 043866 (Loadw (Var (Local 1)) (Con 3) Sp);
      Let b11 = M[Offset(Address(GetLocal(1)),6)];
      Let b12 = M[Offset(Offset(Address(GetLocal(1)),6),1)];
      PushStack MakeHiLo(b11,b12);
      TraceOperation 043870 (Storew (Var (Local 1)) (Con 2) (Var Sp));
      PopStack popped13;
      SetByte Offset(Address(GetLocal(1)),4) HiByte(popped13);
      SetByte Offset(Offset(Address(GetLocal(1)),4),1) LoByte(popped13);
      TraceOperation 043875 (Storew (Var (Local 1)) (Con 3) (Var (Local 6)));
      SetByte Offset(Address(GetLocal(1)),6) HiByte(GetLocal(6));
      SetByte Offset(Offset(Address(GetLocal(1)),6),1) LoByte(GetLocal(6));
      TraceOperation 043880 (Je [Var (Global 142),Con 2] (Branch F (Dloc 043893)));
      Let b14 = M[007490];
      Let b15 = M[007491];
      if (Equal(MakeHiLo(b14,b15),2)) {
        TraceOperation 043884 (Store (Con 6) (Var (Global 59)));
        Let b16 = M[007324];
        Let b17 = M[007325];
        SetLocal 6 MakeHiLo(b16,b17);
        TraceOperation 043887 (Store (Con 75) (Var (Global 60)));
        Let b18 = M[007326];
        Let b19 = M[007327];
        SetByte 007324 b18;
        SetByte 007325 b19;
        TraceOperation 043890 (Store (Con 76) (Var (Local 6)));
        SetByte 007326 HiByte(GetLocal(6));
        SetByte 007327 LoByte(GetLocal(6));
        Jump: 043893
      } else {
        Jump: 043893
      }
    } else {
      Jump: 043893
    }
  }
LocOp 043893:
  TraceOperation 043893 (Jg (Var (Global 72)) (Con 0) (Branch F (Dloc 043914)));
  Let b1 = M[007350];
  Let b2 = M[007351];
  if (GreaterThan(MakeHiLo(b1,b2),0)) {
    TraceOperation 043897 (Loadw (Var (Local 1)) (Con 2) Sp);
    Let b3 = M[Offset(Address(GetLocal(1)),4)];
    Let b4 = M[Offset(Offset(Address(GetLocal(1)),4),1)];
    PushStack MakeHiLo(b3,b4);
    TraceOperation 043901 (Jl (Var Sp) (Con 2) (Branch T (Dloc 043914)));
    PopStack popped5;
    if (LessThan(popped5,2)) {
      Jump: 043914
    } else {
      TraceOperation 043905 (Loadw (Var (Local 1)) (Con 2) Sp);
      Let b6 = M[Offset(Address(GetLocal(1)),4)];
      Let b7 = M[Offset(Offset(Address(GetLocal(1)),4),1)];
      PushStack MakeHiLo(b6,b7);
      TraceOperation 043909 (CallN (Floc 051776) [Var Sp]);
      PopStack popped8;
      PushFrame;
      PushReturnAddress 043909;
      SetLocal 1 popped8;
      MakeRoutineFrame 3;
      SetLocal 3 0;
      SetLocal 2 0;
      Jump: 051777
    }
  } else {
    Jump: 043914
  }
LocReturn 043909:
  Jump: 043914
LocOp 043914:
  TraceOperation 043914 (Je [Var (Global 150),Con 1] (Branch F (Dloc 043924)));
  Let b1 = M[007506];
  Let b2 = M[007507];
  if (Equal(MakeHiLo(b1,b2),1)) {
    TraceOperation 043918 (Store (Con 91) (Var (Global 151)));
    Let b3 = M[007508];
    Let b4 = M[007509];
    SetByte 007356 b3;
    SetByte 007357 b4;
    TraceOperation 043921 (Jump 044572);
    Jump: 044572
  } else {
    Jump: 043924
  }
LocOp 043924:
  TraceOperation 043924 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 043925:
  TraceOperation 043925 (Inc (Con 156));
  Let b1 = M[007486];
  Let b2 = M[007487];
  SetByte 007486 HiByte(Add(MakeHiLo(b1,b2),1));
  SetByte 007487 LoByte(Add(MakeHiLo(b1,b2),1));
  TraceOperation 043927 (Jump 043491);
  Jump: 043491
LocOp 043930:
  TraceOperation 043930 (Jg (Var (Global 50)) (Var (Global 137)) (Branch F (Dloc 043937)));
  Let b1 = M[007306];
  Let b2 = M[007307];
  Let b3 = M[007480];
  Let b4 = M[007481];
  if (GreaterThan(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 043934 (Store (Con 153) (Var (Global 50)));
    Let b5 = M[007306];
    Let b6 = M[007307];
    SetByte 007480 b5;
    SetByte 007481 b6;
    Jump: 043937
  } else {
    Jump: 043937
  }
LocOp 043937:
  TraceOperation 043937 (Je [Var (Global 50),Con 18] (Branch T (Dloc 043948)));
  Let b1 = M[007306];
  Let b2 = M[007307];
  if (Equal(MakeHiLo(b1,b2),18)) {
    Jump: 043948
  } else {
    TraceOperation 043941 (Jg (Var (Global 50)) (Var (Global 138)) (Branch F (Dloc 043948)));
    Let b3 = M[007306];
    Let b4 = M[007307];
    Let b5 = M[007482];
    Let b6 = M[007483];
    if (GreaterThan(MakeHiLo(b3,b4),MakeHiLo(b5,b6))) {
      TraceOperation 043945 (Store (Con 154) (Var (Global 50)));
      Let b7 = M[007306];
      Let b8 = M[007307];
      SetByte 007482 b7;
      SetByte 007483 b8;
      Jump: 043948
    } else {
      Jump: 043948
    }
  }
LocOp 043948:
  TraceOperation 043948 (Je [Var (Global 171),Con 2] (Branch F (Dloc 043959)));
  Let b1 = M[007548];
  Let b2 = M[007549];
  if (Equal(MakeHiLo(b1,b2),2)) {
    TraceOperation 043952 (Je [Var (Global 50),Con 17] (Branch F (Dloc 043959)));
    Let b3 = M[007306];
    Let b4 = M[007307];
    if (Equal(MakeHiLo(b3,b4),17)) {
      TraceOperation 043956 (Jump 043964);
      Jump: 043964
    } else {
      Jump: 043959
    }
  } else {
    Jump: 043959
  }
LocOp 043959:
  TraceOperation 043959 (Inc (Con 3));
  SetLocal 3 Add(GetLocal(3),1);
  TraceOperation 043961 (Jump 043053);
  Jump: 043053
LocOp 043964:
  TraceOperation 043964 (Store (Con 66) (Var (Global 137)));
  Let b1 = M[007480];
  Let b2 = M[007481];
  SetByte 007306 b1;
  SetByte 007307 b2;
  TraceOperation 043967 (Je [Var (Global 37),Var (Global 31)] (Branch T (Dloc 044038)));
  Let b3 = M[007280];
  Let b4 = M[007281];
  Let b5 = M[007268];
  Let b6 = M[007269];
  if (Equal(MakeHiLo(b3,b4),MakeHiLo(b5,b6))) {
    Jump: 044038
  } else {
    TraceOperation 043972 (Jz (Var (Global 152)) (Branch T (Dloc 043981)));
    Let b7 = M[007510];
    Let b8 = M[007511];
    if (IsZero(MakeHiLo(b7,b8))) {
      Jump: 043981
    } else {
      TraceOperation 043975 (Store (Con 94) (Var (Global 152)));
      Let b9 = M[007510];
      Let b10 = M[007511];
      SetByte 007362 b9;
      SetByte 007363 b10;
      TraceOperation 043978 (Jump 042477);
      Jump: 042477
    }
  }
LocOp 043981:
  TraceOperation 043981 (Store (Con 91) (Var (Global 78)));
  Let b1 = M[007362];
  Let b2 = M[007363];
  SetByte 007356 b1;
  SetByte 007357 b2;
  TraceOperation 043984 (Call (Floc 041168) [] (Global 55));
  PushFrame;
  PushReturnAddress 043984;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  SetLocal 2 0;
  SetLocal 1 0;
  Jump: 041169
LocReturn 043984:
  SetByte 007316 HiByte(call_result);
  SetByte 007317 LoByte(call_result);
  TraceOperation 043988 (Je [Var (Global 55),Con 21836] (Branch F (Dloc 044000)));
  Let b1 = M[007316];
  Let b2 = M[007317];
  if (Equal(MakeHiLo(b1,b2),21836)) {
    TraceOperation 043994 (Call (Floc 041168) [] (Global 55));
    PushFrame;
    PushReturnAddress 043994;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    SetLocal 2 0;
    SetLocal 1 0;
    Jump: 041169
  } else {
    Jump: 044000
  }
LocReturn 043994:
  SetByte 007316 HiByte(call_result);
  SetByte 007317 LoByte(call_result);
  TraceOperation 043998 (Inc (Con 94));
  Let b1 = M[007362];
  Let b2 = M[007363];
  SetByte 007362 HiByte(Add(MakeHiLo(b1,b2),1));
  SetByte 007363 LoByte(Add(MakeHiLo(b1,b2),1));
  Jump: 044000
LocOp 044000:
  TraceOperation 044000 (Storew (Var (Local 1)) (Con 0) (Con 8));
  SetByte Offset(Address(GetLocal(1)),0) 0;
  SetByte Offset(Offset(Address(GetLocal(1)),0),1) 8;
  TraceOperation 044005 (Storew (Var (Local 1)) (Con 1) (Con 2));
  SetByte Offset(Address(GetLocal(1)),2) 0;
  SetByte Offset(Offset(Address(GetLocal(1)),2),1) 2;
  TraceOperation 044010 (Storew (Var (Local 1)) (Con 2) (Var (Global 37)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  SetByte Offset(Address(GetLocal(1)),4) b1;
  SetByte Offset(Offset(Address(GetLocal(1)),4),1) b2;
  TraceOperation 044015 (Storew (Var (Local 1)) (Con 3) (Con 1));
  SetByte Offset(Address(GetLocal(1)),6) 0;
  SetByte Offset(Offset(Address(GetLocal(1)),6),1) 1;
  TraceOperation 044020 (Store (Con 75) (Var (Global 55)));
  Let b3 = M[007316];
  Let b4 = M[007317];
  SetByte 007324 b3;
  SetByte 007325 b4;
  TraceOperation 044023 (Store (Con 53) (Var (Global 31)));
  Let b5 = M[007268];
  Let b6 = M[007269];
  SetByte 007280 b5;
  SetByte 007281 b6;
  TraceOperation 044026 (Store (Con 72) (Var (Global 78)));
  Let b7 = M[007362];
  Let b8 = M[007363];
  SetByte 007318 b7;
  SetByte 007319 b8;
  TraceOperation 044029 (Sub (Var (Global 76)) (Var (Global 56)) Sp);
  Let b9 = M[007358];
  Let b10 = M[007359];
  Let b11 = M[007318];
  Let b12 = M[007319];
  PushStack Sub(MakeHiLo(b9,b10),MakeHiLo(b11,b12));
  TraceOperation 044033 (Add (Var Sp) (Con 1) (Global 57));
  PopStack popped13;
  SetByte 007320 HiByte(Add(popped13,1));
  SetByte 007321 LoByte(Add(popped13,1));
  TraceOperation 044037 Rtrue;
  PopFrame;
  PopReturnAddress return_address_14;
  SetResult 1;
  JumpIndirect: (return) return_address_14
LocOp 044038:
  TraceOperation 044038 (Call (Floc 026172) [Var (Global 50),Con 3] Sp);
  Let b1 = M[007306];
  Let b2 = M[007307];
  PushFrame;
  PushReturnAddress 044038;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 3;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 044038:
  PushStack call_result;
  TraceOperation 044045 (Jz (Var Sp) (Branch F (Dloc 044058)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 044048 (Call (Floc 026172) [Var (Global 50),Con 4] Sp);
    Let b2 = M[007306];
    Let b3 = M[007307];
    PushFrame;
    PushReturnAddress 044048;
    SetLocal 1 MakeHiLo(b2,b3);
    SetLocal 2 4;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 044058
  }
LocReturn 044048:
  PushStack call_result;
  TraceOperation 044055 (Jz (Var Sp) (Branch T (Dloc 044073)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 044073
  } else {
    Jump: 044058
  }
LocOp 044058:
  TraceOperation 044058 (Call (Floc 052452) [Var (Global 50)] Sp);
  Let b1 = M[007306];
  Let b2 = M[007307];
  PushFrame;
  PushReturnAddress 044058;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 1;
  Jump: 052453
LocReturn 044058:
  PushStack call_result;
  TraceOperation 044064 (Jz (Var Sp) (Branch T (Dloc 044070)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 044070
  } else {
    TraceOperation 044067 (Jump 042385);
    Jump: 042385
  }
LocOp 044070:
  TraceOperation 044070 (Jump 044108);
  Jump: 044108
LocOp 044073:
  TraceOperation 044073 (Jz (Var (Global 78)) (Branch F (Dloc 044083)));
  Let b1 = M[007362];
  Let b2 = M[007363];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 044076 (Je [Var (Global 50),Con 5] (Branch F (Dloc 044083)));
    Let b3 = M[007306];
    Let b4 = M[007307];
    if (Equal(MakeHiLo(b3,b4),5)) {
      TraceOperation 044080 (Store (Con 66) (Con 12));
      SetByte 007306 0;
      SetByte 007307 12;
      Jump: 044083
    } else {
      Jump: 044083
    }
  } else {
    Jump: 044083
  }
LocOp 044083:
  TraceOperation 044083 (Call (Floc 041076) [] Sp);
  PushFrame;
  PushReturnAddress 044083;
  MakeRoutineFrame 0;
  Jump: 041077
LocReturn 044083:
  PushStack call_result;
  TraceOperation 044087 (Add (Con 100) (Var Sp) (Global 64));
  PopStack popped1;
  SetByte 007334 HiByte(Add(100,popped1));
  SetByte 007335 LoByte(Add(100,popped1));
  Jump: 044091
LocOp 044091:
  TraceOperation 044091 (CallN (Floc 078848) [Con 21]);
  PushFrame;
  PushReturnAddress 044091;
  SetLocal 1 21;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 078849
LocReturn 044091:
  TraceOperation 044096 (Call (Floc 078928) [Con 21] Sp);
  PushFrame;
  PushReturnAddress 044096;
  SetLocal 1 21;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 078929
LocReturn 044096:
  PushStack call_result;
  TraceOperation 044102 (Jz (Var Sp) (Branch T (Dloc 044108)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 044108
  } else {
    TraceOperation 044105 (Jump 044538);
    Jump: 044538
  }
LocOp 044108:
  TraceOperation 044108 (Store (Con 78) (Var (Global 173)));
  Let b1 = M[007552];
  Let b2 = M[007553];
  SetByte 007330 b1;
  SetByte 007331 b2;
  TraceOperation 044111 (Store (Con 79) (Var (Global 174)));
  Let b3 = M[007554];
  Let b4 = M[007555];
  SetByte 007332 b3;
  SetByte 007333 b4;
  TraceOperation 044114 (Je [Var (Global 50),Con 1] (Branch F (Dloc 044128)));
  Let b5 = M[007306];
  Let b6 = M[007307];
  if (Equal(MakeHiLo(b5,b6),1)) {
    TraceOperation 044118 (CallN (Floc 036596) [Con 4097,Con 27]);
    PushFrame;
    PushReturnAddress 044118;
    SetLocal 1 4097;
    SetLocal 2 27;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 036597
  } else {
    Jump: 044128
  }
LocReturn 044118:
  TraceOperation 044125 (Store (Con 164) (Con 1));
  SetByte 007502 0;
  SetByte 007503 1;
  Jump: 044128
LocOp 044128:
  TraceOperation 044128 (Je [Var (Global 50),Con 2] (Branch F (Dloc 044178)));
  Let b1 = M[007306];
  Let b2 = M[007307];
  if (Equal(MakeHiLo(b1,b2),2)) {
    TraceOperation 044132 (CallN (Floc 036596) [Con 4097,Con 28]);
    PushFrame;
    PushReturnAddress 044132;
    SetLocal 1 4097;
    SetLocal 2 28;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 036597
  } else {
    Jump: 044178
  }
LocReturn 044132:
  TraceOperation 044139 (Store (Con 11) (Con 0));
  SetLocal 11 0;
  Jump: 044142
LocOp 044142:
  TraceOperation 044142 (Jl (Var (Local 11)) (Con 32) (Branch F (Dloc 044163)));
  if (LessThan(GetLocal(11),32)) {
    TraceOperation 044146 (Loadw (Con 9747) (Var (Local 11)) Sp);
    Let b1 = M[Offset(009747,Mul(2,GetLocal(11)))];
    Let b2 = M[Offset(Offset(009747,Mul(2,GetLocal(11))),1)];
    PushStack MakeHiLo(b1,b2);
    TraceOperation 044152 (Storew (Con 9683) (Var (Local 11)) (Var Sp));
    PopStack popped3;
    SetByte Offset(009683,Mul(2,GetLocal(11))) HiByte(popped3);
    SetByte Offset(Offset(009683,Mul(2,GetLocal(11))),1) LoByte(popped3);
    TraceOperation 044158 (Inc (Con 11));
    SetLocal 11 Add(GetLocal(11),1);
    TraceOperation 044160 (Jump 044142);
    Jump: 044142
  } else {
    Jump: 044163
  }
LocOp 044163:
  TraceOperation 044163 (Store (Con 156) (Var (Global 141)));
  Let b1 = M[007488];
  Let b2 = M[007489];
  SetByte 007486 b1;
  SetByte 007487 b2;
  TraceOperation 044166 (CallN (Floc 049532) [Con 0]);
  PushFrame;
  PushReturnAddress 044166;
  SetLocal 1 0;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 049533
LocReturn 044166:
  TraceOperation 044171 (CallN (Floc 036596) [Con 4097,Con 56]);
  PushFrame;
  PushReturnAddress 044171;
  SetLocal 1 4097;
  SetLocal 2 56;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 036597
LocReturn 044171:
  Jump: 044178
LocOp 044178:
  TraceOperation 044178 (Je [Var (Global 50),Con 3] (Branch F (Dloc 044189)));
  Let b1 = M[007306];
  Let b2 = M[007307];
  if (Equal(MakeHiLo(b1,b2),3)) {
    TraceOperation 044182 (CallN (Floc 036596) [Con 4097,Con 29]);
    PushFrame;
    PushReturnAddress 044182;
    SetLocal 1 4097;
    SetLocal 2 29;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 036597
  } else {
    Jump: 044189
  }
LocReturn 044182:
  Jump: 044189
LocOp 044189:
  TraceOperation 044189 (Je [Var (Global 50),Con 5] (Branch F (Dloc 044203)));
  Let b1 = M[007306];
  Let b2 = M[007307];
  if (Equal(MakeHiLo(b1,b2),5)) {
    TraceOperation 044193 (CallN (Floc 036596) [Con 4097,Con 30]);
    PushFrame;
    PushReturnAddress 044193;
    SetLocal 1 4097;
    SetLocal 2 30;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 036597
  } else {
    Jump: 044203
  }
LocReturn 044193:
  TraceOperation 044200 (Store (Con 164) (Var (Global 149)));
  Let b1 = M[007504];
  Let b2 = M[007505];
  SetByte 007502 b1;
  SetByte 007503 b2;
  Jump: 044203
LocOp 044203:
  TraceOperation 044203 (Je [Var (Global 50),Con 6] (Branch F (Dloc 044214)));
  Let b1 = M[007306];
  Let b2 = M[007307];
  if (Equal(MakeHiLo(b1,b2),6)) {
    TraceOperation 044207 (CallN (Floc 036596) [Con 4097,Con 31]);
    PushFrame;
    PushReturnAddress 044207;
    SetLocal 1 4097;
    SetLocal 2 31;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 036597
  } else {
    Jump: 044214
  }
LocReturn 044207:
  Jump: 044214
LocOp 044214:
  TraceOperation 044214 (Je [Var (Global 50),Con 7] (Branch F (Dloc 044228)));
  Let b1 = M[007306];
  Let b2 = M[007307];
  if (Equal(MakeHiLo(b1,b2),7)) {
    TraceOperation 044218 (CallN (Floc 036596) [Con 4097,Con 32]);
    PushFrame;
    PushReturnAddress 044218;
    SetLocal 1 4097;
    SetLocal 2 32;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 036597
  } else {
    Jump: 044228
  }
LocReturn 044218:
  TraceOperation 044225 (Store (Con 164) (Var (Global 149)));
  Let b1 = M[007504];
  Let b2 = M[007505];
  SetByte 007502 b1;
  SetByte 007503 b2;
  Jump: 044228
LocOp 044228:
  TraceOperation 044228 (Je [Var (Global 50),Con 8] (Branch F (Dloc 044239)));
  Let b1 = M[007306];
  Let b2 = M[007307];
  if (Equal(MakeHiLo(b1,b2),8)) {
    TraceOperation 044232 (CallN (Floc 036596) [Con 4097,Con 33]);
    PushFrame;
    PushReturnAddress 044232;
    SetLocal 1 4097;
    SetLocal 2 33;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 036597
  } else {
    Jump: 044239
  }
LocReturn 044232:
  Jump: 044239
LocOp 044239:
  TraceOperation 044239 (Je [Var (Global 50),Con 9] (Branch F (Dloc 044250)));
  Let b1 = M[007306];
  Let b2 = M[007307];
  if (Equal(MakeHiLo(b1,b2),9)) {
    TraceOperation 044243 (CallN (Floc 036596) [Con 4097,Con 34]);
    PushFrame;
    PushReturnAddress 044243;
    SetLocal 1 4097;
    SetLocal 2 34;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 036597
  } else {
    Jump: 044250
  }
LocReturn 044243:
  Jump: 044250
LocOp 044250:
  TraceOperation 044250 (Je [Var (Global 50),Con 10] (Branch F (Dloc 044261)));
  Let b1 = M[007306];
  Let b2 = M[007307];
  if (Equal(MakeHiLo(b1,b2),10)) {
    TraceOperation 044254 (CallN (Floc 036596) [Con 4097,Con 35]);
    PushFrame;
    PushReturnAddress 044254;
    SetLocal 1 4097;
    SetLocal 2 35;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 036597
  } else {
    Jump: 044261
  }
LocReturn 044254:
  Jump: 044261
LocOp 044261:
  TraceOperation 044261 (Je [Var (Global 50),Con 11] (Branch F (Dloc 044272)));
  Let b1 = M[007306];
  Let b2 = M[007307];
  if (Equal(MakeHiLo(b1,b2),11)) {
    TraceOperation 044265 (CallN (Floc 036596) [Con 4097,Con 36]);
    PushFrame;
    PushReturnAddress 044265;
    SetLocal 1 4097;
    SetLocal 2 36;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 036597
  } else {
    Jump: 044272
  }
LocReturn 044265:
  Jump: 044272
LocOp 044272:
  TraceOperation 044272 (Je [Var (Global 50),Con 4] (Branch F (Dloc 044283)));
  Let b1 = M[007306];
  Let b2 = M[007307];
  if (Equal(MakeHiLo(b1,b2),4)) {
    TraceOperation 044276 (CallN (Floc 036596) [Con 4097,Con 37]);
    PushFrame;
    PushReturnAddress 044276;
    SetLocal 1 4097;
    SetLocal 2 37;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 036597
  } else {
    Jump: 044283
  }
LocReturn 044276:
  Jump: 044283
LocOp 044283:
  TraceOperation 044283 (Je [Var (Global 50),Con 12] (Branch F (Dloc 044294)));
  Let b1 = M[007306];
  Let b2 = M[007307];
  if (Equal(MakeHiLo(b1,b2),12)) {
    TraceOperation 044287 (CallN (Floc 036596) [Con 4097,Con 38]);
    PushFrame;
    PushReturnAddress 044287;
    SetLocal 1 4097;
    SetLocal 2 38;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 036597
  } else {
    Jump: 044294
  }
LocReturn 044287:
  Jump: 044294
LocOp 044294:
  TraceOperation 044294 (Je [Var (Global 50),Con 13] (Branch F (Dloc 044305)));
  Let b1 = M[007306];
  Let b2 = M[007307];
  if (Equal(MakeHiLo(b1,b2),13)) {
    TraceOperation 044298 (CallN (Floc 036596) [Con 4097,Con 39]);
    PushFrame;
    PushReturnAddress 044298;
    SetLocal 1 4097;
    SetLocal 2 39;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 036597
  } else {
    Jump: 044305
  }
LocReturn 044298:
  Jump: 044305
LocOp 044305:
  TraceOperation 044305 (Je [Var (Global 50),Con 14] (Branch F (Dloc 044332)));
  Let b1 = M[007306];
  Let b2 = M[007307];
  if (Equal(MakeHiLo(b1,b2),14)) {
    TraceOperation 044309 (Je [Var (Global 63),Con -1] (Branch F (Dloc 044325)));
    Let b3 = M[007332];
    Let b4 = M[007333];
    if (Equal(MakeHiLo(b3,b4),-1)) {
      TraceOperation 044315 (CallN (Floc 036596) [Con 4097,Con 35]);
      PushFrame;
      PushReturnAddress 044315;
      SetLocal 1 4097;
      SetLocal 2 35;
      MakeRoutineFrame 6;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      SetLocal 3 0;
      Jump: 036597
    } else {
      Jump: 044325
    }
  } else {
    Jump: 044332
  }
LocReturn 044315:
  TraceOperation 044322 (Jump 044332);
  Jump: 044332
LocOp 044325:
  TraceOperation 044325 (CallN (Floc 036596) [Con 4097,Con 40]);
  PushFrame;
  PushReturnAddress 044325;
  SetLocal 1 4097;
  SetLocal 2 40;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 036597
LocReturn 044325:
  Jump: 044332
LocOp 044332:
  TraceOperation 044332 (Je [Var (Global 50),Con 15] (Branch F (Dloc 044343)));
  Let b1 = M[007306];
  Let b2 = M[007307];
  if (Equal(MakeHiLo(b1,b2),15)) {
    TraceOperation 044336 (CallN (Floc 036596) [Con 4097,Con 41]);
    PushFrame;
    PushReturnAddress 044336;
    SetLocal 1 4097;
    SetLocal 2 41;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 036597
  } else {
    Jump: 044343
  }
LocReturn 044336:
  Jump: 044343
LocOp 044343:
  TraceOperation 044343 (Je [Var (Global 50),Con 16] (Branch F (Dloc 044355)));
  Let b1 = M[007306];
  Let b2 = M[007307];
  if (Equal(MakeHiLo(b1,b2),16)) {
    TraceOperation 044347 (CallN (Floc 036596) [Con 4097,Con 42,Var (Global 160)]);
    Let b3 = M[007526];
    Let b4 = M[007527];
    PushFrame;
    PushReturnAddress 044347;
    SetLocal 1 4097;
    SetLocal 2 42;
    SetLocal 3 MakeHiLo(b3,b4);
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    Jump: 036597
  } else {
    Jump: 044355
  }
LocReturn 044347:
  Jump: 044355
LocOp 044355:
  TraceOperation 044355 (Je [Var (Global 50),Con 17] (Branch F (Dloc 044505)));
  Let b1 = M[007306];
  Let b2 = M[007307];
  if (Equal(MakeHiLo(b1,b2),17)) {
    TraceOperation 044360 (Loadw (Var (Local 1)) (Con 0) Sp);
    Let b3 = M[Offset(Address(GetLocal(1)),0)];
    Let b4 = M[Offset(Offset(Address(GetLocal(1)),0),1)];
    PushStack MakeHiLo(b3,b4);
    TraceOperation 044364 (Je [Var Sp,Con 49] (Branch F (Dloc 044476)));
    PopStack popped5;
    if (Equal(popped5,49)) {
      TraceOperation 044369 (Loadw (Var (Local 1)) (Con 3) Sp);
      Let b6 = M[Offset(Address(GetLocal(1)),6)];
      Let b7 = M[Offset(Offset(Address(GetLocal(1)),6),1)];
      PushStack MakeHiLo(b6,b7);
      TraceOperation 044373 (Call (Floc 026172) [Var Sp,Con 2] Sp);
      PopStack popped8;
      PushFrame;
      PushReturnAddress 044373;
      SetLocal 1 popped8;
      SetLocal 2 2;
      MakeRoutineFrame 6;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      SetLocal 3 0;
      Jump: 026173
    } else {
      Jump: 044476
    }
  } else {
    Jump: 044505
  }
LocReturn 044373:
  PushStack call_result;
  TraceOperation 044380 (Jz (Var Sp) (Branch T (Dloc 044476)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 044476
  } else {
    TraceOperation 044384 (Loadw (Var (Local 1)) (Con 3) (Global 47));
    Let b2 = M[Offset(Address(GetLocal(1)),6)];
    Let b3 = M[Offset(Offset(Address(GetLocal(1)),6),1)];
    SetByte 007300 b2;
    SetByte 007301 b3;
    TraceOperation 044388 (Test_attr (Var (Global 47)) (Con 1) (Branch F (Dloc 044402)));
    Let b4 = M[007300];
    Let b5 = M[007301];
    Let b6 = M[Offset(Offset(000378,Mul(MakeHiLo(b4,b5),14)),0)];
    if (TestBit(b6,6)) {
      TraceOperation 044392 (CallN (Floc 036596) [Con 64,Con 6,Var (Global 47)]);
      Let b7 = M[007300];
      Let b8 = M[007301];
      PushFrame;
      PushReturnAddress 044392;
      SetLocal 1 64;
      SetLocal 2 6;
      SetLocal 3 MakeHiLo(b7,b8);
      MakeRoutineFrame 6;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      Jump: 036597
    } else {
      Jump: 044402
    }
  }
LocReturn 044392:
  TraceOperation 044399 (Jump 044476);
  Jump: 044476
LocOp 044402:
  TraceOperation 044402 (Test_attr (Var (Global 47)) (Con 4) (Branch T (Dloc 044420)));
  Let b1 = M[007300];
  Let b2 = M[007301];
  Let b3 = M[Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),0)];
  if (TestBit(b3,3)) {
    Jump: 044420
  } else {
    TraceOperation 044406 (Test_attr (Var (Global 47)) (Con 17) (Branch T (Dloc 044420)));
    Let b4 = M[007300];
    Let b5 = M[007301];
    Let b6 = M[Offset(Offset(000378,Mul(MakeHiLo(b4,b5),14)),2)];
    if (TestBit(b6,6)) {
      Jump: 044420
    } else {
      TraceOperation 044410 (CallN (Floc 036596) [Con 27,Con 2,Var (Global 47)]);
      Let b7 = M[007300];
      Let b8 = M[007301];
      PushFrame;
      PushReturnAddress 044410;
      SetLocal 1 27;
      SetLocal 2 2;
      SetLocal 3 MakeHiLo(b7,b8);
      MakeRoutineFrame 6;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      Jump: 036597
    }
  }
LocReturn 044410:
  TraceOperation 044417 (Jump 044476);
  Jump: 044476
LocOp 044420:
  TraceOperation 044420 (Test_attr (Var (Global 47)) (Con 4) (Branch F (Dloc 044438)));
  Let b1 = M[007300];
  Let b2 = M[007301];
  Let b3 = M[Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),0)];
  if (TestBit(b3,3)) {
    TraceOperation 044424 (Test_attr (Var (Global 47)) (Con 13) (Branch T (Dloc 044438)));
    Let b4 = M[007300];
    Let b5 = M[007301];
    Let b6 = M[Offset(Offset(000378,Mul(MakeHiLo(b4,b5),14)),1)];
    if (TestBit(b6,2)) {
      Jump: 044438
    } else {
      TraceOperation 044428 (CallN (Floc 036596) [Con 64,Con 9,Var (Global 47)]);
      Let b7 = M[007300];
      Let b8 = M[007301];
      PushFrame;
      PushReturnAddress 044428;
      SetLocal 1 64;
      SetLocal 2 9;
      SetLocal 3 MakeHiLo(b7,b8);
      MakeRoutineFrame 6;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      Jump: 036597
    }
  } else {
    Jump: 044438
  }
LocReturn 044428:
  TraceOperation 044435 (Jump 044476);
  Jump: 044476
LocOp 044438:
  TraceOperation 044438 (Store (Con 255) (Con 0));
  SetByte 007684 0;
  SetByte 007685 0;
  TraceOperation 044441 (Get_child (Var (Global 47)) Sp (Branch F (Dloc 044452)));
  Let b1 = M[007300];
  Let b2 = M[007301];
  Let b3 = M[Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),10)];
  Let b4 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),10),1)];
  PushStack MakeHiLo(b3,b4);
  if (IsZero(MakeHiLo(b3,b4))) {
    Jump: 044452
  } else {
    Jump: 044445
  }
LocOp 044445:
  TraceOperation 044445 (Inc (Con 255));
  Let b1 = M[007684];
  Let b2 = M[007685];
  SetByte 007684 HiByte(Add(MakeHiLo(b1,b2),1));
  SetByte 007685 LoByte(Add(MakeHiLo(b1,b2),1));
  TraceOperation 044447 (Get_sibling (Var Sp) Sp (Branch T (Dloc 044445)));
  PopStack popped3;
  Let b4 = M[Offset(Offset(000378,Mul(popped3,14)),8)];
  Let b5 = M[Offset(Offset(Offset(000378,Mul(popped3,14)),8),1)];
  PushStack MakeHiLo(b4,b5);
  if (IsZero(MakeHiLo(b4,b5))) {
    Jump: 044452
  } else {
    Jump: 044445
  }
LocOp 044452:
  TraceOperation 044452 (Pull (Con 254));
  PopStack popped1;
  SetByte 007682 HiByte(popped1);
  SetByte 007683 LoByte(popped1);
  TraceOperation 044455 (Push (Var (Global 239)));
  Let b2 = M[007684];
  Let b3 = M[007685];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 044458 (Jz (Var Sp) (Branch F (Dloc 044471)));
  PopStack popped4;
  if (IsZero(popped4)) {
    TraceOperation 044461 (CallN (Floc 036596) [Con 52,Con 6,Var (Global 47)]);
    Let b5 = M[007300];
    Let b6 = M[007301];
    PushFrame;
    PushReturnAddress 044461;
    SetLocal 1 52;
    SetLocal 2 6;
    SetLocal 3 MakeHiLo(b5,b6);
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    Jump: 036597
  } else {
    Jump: 044471
  }
LocReturn 044461:
  TraceOperation 044468 (Jump 044476);
  Jump: 044476
LocOp 044471:
  TraceOperation 044471 (Storew (Var (Local 1)) (Con 0) (Con 0));
  SetByte Offset(Address(GetLocal(1)),0) 0;
  SetByte Offset(Offset(Address(GetLocal(1)),0),1) 0;
  Jump: 044476
LocOp 044476:
  TraceOperation 044476 (Loadw (Var (Local 1)) (Con 0) Sp);
  Let b1 = M[Offset(Address(GetLocal(1)),0)];
  Let b2 = M[Offset(Offset(Address(GetLocal(1)),0),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 044480 (Je [Var Sp,Con 49] (Branch T (Dloc 044505)));
  PopStack popped3;
  if (Equal(popped3,49)) {
    Jump: 044505
  } else {
    TraceOperation 044484 (Je [Var (Global 159),Con 100] (Branch F (Dloc 044498)));
    Let b4 = M[007524];
    Let b5 = M[007525];
    if (Equal(MakeHiLo(b4,b5),100)) {
      TraceOperation 044488 (CallN (Floc 036596) [Con 4097,Con 43]);
      PushFrame;
      PushReturnAddress 044488;
      SetLocal 1 4097;
      SetLocal 2 43;
      MakeRoutineFrame 6;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      SetLocal 3 0;
      Jump: 036597
    } else {
      Jump: 044498
    }
  }
LocReturn 044488:
  TraceOperation 044495 (Jump 044505);
  Jump: 044505
LocOp 044498:
  TraceOperation 044498 (CallN (Floc 036596) [Con 4097,Con 44]);
  PushFrame;
  PushReturnAddress 044498;
  SetLocal 1 4097;
  SetLocal 2 44;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 036597
LocReturn 044498:
  Jump: 044505
LocOp 044505:
  TraceOperation 044505 (Je [Var (Global 50),Con 18] (Branch F (Dloc 044527)));
  Let b1 = M[007306];
  Let b2 = M[007307];
  if (Equal(MakeHiLo(b1,b2),18)) {
    TraceOperation 044509 (Store (Con 98) (Con 3));
    SetByte 007370 0;
    SetByte 007371 3;
    TraceOperation 044512 (Call (Fvar (Global 81)) [] Sp);
    Let b3 = M[007368];
    Let b4 = M[007369];
    if (IsZeroAddress(PackedAddress Z5(MakeHiLo(b3,b4)))) {
      PushStack 0;
      Jump: 044515
    } else {
      PushFrame;
      PushReturnAddress 044512;
      SetNumberActuals 0;
      JumpIndirect: (routine) PackedAddress Z5(MakeHiLo(b3,b4))
    }
  } else {
    Jump: 044527
  }
LocReturn 044512:
  PushStack call_result;
  Jump: 044515
LocOp 044515:
  TraceOperation 044515 (Je [Var Sp,Con -1] (Branch F (Dloc 044527)));
  PopStack popped1;
  if (Equal(popped1,-1)) {
    TraceOperation 044521 (Store (Con 153) (Var (Global 138)));
    Let b2 = M[007482];
    Let b3 = M[007483];
    SetByte 007480 b2;
    SetByte 007481 b3;
    TraceOperation 044524 (Jump 043964);
    Jump: 043964
  } else {
    Jump: 044527
  }
LocOp 044527:
  TraceOperation 044527 (Je [Var (Global 50),Con 19] (Branch F (Dloc 044538)));
  Let b1 = M[007306];
  Let b2 = M[007307];
  if (Equal(MakeHiLo(b1,b2),19)) {
    TraceOperation 044531 (CallN (Floc 036596) [Con 4097,Con 73]);
    PushFrame;
    PushReturnAddress 044531;
    SetLocal 1 4097;
    SetLocal 2 73;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 036597
  } else {
    Jump: 044538
  }
LocReturn 044531:
  Jump: 044538
LocOp 044538:
  TraceOperation 044538 (Call (Floc 026172) [Var (Global 50),Con 3] Sp);
  Let b1 = M[007306];
  Let b2 = M[007307];
  PushFrame;
  PushReturnAddress 044538;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 3;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 044538:
  PushStack call_result;
  TraceOperation 044545 (Jz (Var Sp) (Branch F (Dloc 044558)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 044548 (Call (Floc 026172) [Var (Global 50),Con 4] Sp);
    Let b2 = M[007306];
    Let b3 = M[007307];
    PushFrame;
    PushReturnAddress 044548;
    SetLocal 1 MakeHiLo(b2,b3);
    SetLocal 2 4;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 044558
  }
LocReturn 044548:
  PushStack call_result;
  TraceOperation 044555 (Jz (Var Sp) (Branch T (Dloc 044561)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 044561
  } else {
    Jump: 044558
  }
LocOp 044558:
  TraceOperation 044558 (Jump 042385);
  Jump: 042385
LocOp 044561:
  TraceOperation 044561 (Store (Con 20) (Con 1));
  SetByte 007214 0;
  SetByte 007215 1;
  TraceOperation 044564 (CallN (Floc 078972) [Con 21]);
  PushFrame;
  PushReturnAddress 044564;
  SetLocal 1 21;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 078973
LocReturn 044564:
  TraceOperation 044569 (Jump 042385);
  Jump: 042385
LocOp 044572:
  TraceOperation 044572 (Jg (Var (Global 75)) (Var (Global 76)) (Branch T Dtrue));
  Let b1 = M[007356];
  Let b2 = M[007357];
  Let b3 = M[007358];
  Let b4 = M[007359];
  if (GreaterThan(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult 1;
    JumpIndirect: (return) return_address_5
  } else {
    TraceOperation 044576 (Call (Floc 041168) [] (Local 6));
    PushFrame;
    PushReturnAddress 044576;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    SetLocal 2 0;
    SetLocal 1 0;
    Jump: 041169
  }
LocReturn 044576:
  SetLocal 6 call_result;
  TraceOperation 044580 (Je [Var (Local 6),Con 23996,Con 23996,Con 23996] (Branch T (Dloc 044597)));
  if (LogOr(LogOr(Equal(GetLocal(6),23996),Equal(GetLocal(6),23996)),Equal(GetLocal(6),23996))) {
    Jump: 044597
  } else {
    TraceOperation 044590 (Je [Var (Local 6),Con 21836] (Branch F (Dloc 044710)));
    if (Equal(GetLocal(6),21836)) {
      Jump: 044597
    } else {
      Jump: 044710
    }
  }
LocOp 044597:
  TraceOperation 044597 (Jg (Var (Global 75)) (Var (Global 76)) (Branch F (Dloc 044605)));
  Let b1 = M[007356];
  Let b2 = M[007357];
  Let b3 = M[007358];
  Let b4 = M[007359];
  if (GreaterThan(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 044601 (Store (Con 166) (Con 0));
    SetByte 007506 0;
    SetByte 007507 0;
    TraceOperation 044604 Rtrue;
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult 1;
    JumpIndirect: (return) return_address_5
  } else {
    Jump: 044605
  }
LocOp 044605:
  TraceOperation 044605 (Call (Floc 041084) [Var (Global 78)] (Local 6));
  Let b1 = M[007362];
  Let b2 = M[007363];
  PushFrame;
  PushReturnAddress 044605;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 1;
  Jump: 041085
LocReturn 044605:
  SetLocal 6 call_result;
  TraceOperation 044611 (Call (Floc 041084) [Var (Global 75)] (Local 7));
  Let b1 = M[007356];
  Let b2 = M[007357];
  PushFrame;
  PushReturnAddress 044611;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 1;
  Jump: 041085
LocReturn 044611:
  SetLocal 7 call_result;
  Jump: 044617
LocOp 044617:
  TraceOperation 044617 (Jl (Var (Local 6)) (Var (Local 7)) (Branch F (Dloc 044631)));
  if (LessThan(GetLocal(6),GetLocal(7))) {
    TraceOperation 044621 (Storeb (Var (Local 6)) (Con 0) (Con 32));
    SetByte Offset(Address(GetLocal(6)),0) 32;
    TraceOperation 044626 (Inc (Con 6));
    SetLocal 6 Add(GetLocal(6),1);
    TraceOperation 044628 (Jump 044617);
    Jump: 044617
  } else {
    Jump: 044631
  }
LocOp 044631:
  TraceOperation 044631 (Call (Floc 041168) [] (Local 6));
  PushFrame;
  PushReturnAddress 044631;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  SetLocal 2 0;
  SetLocal 1 0;
  Jump: 041169
LocReturn 044631:
  SetLocal 6 call_result;
  TraceOperation 044635 (Je [Var (Local 6),Con 21494,Con 22376,Con 21494] (Branch F (Dloc 044698)));
  if (LogOr(LogOr(Equal(GetLocal(6),21494),Equal(GetLocal(6),22376)),Equal(GetLocal(6),21494))) {
    TraceOperation 044645 (Sub (Var (Global 75)) (Con 2) Sp);
    Let b1 = M[007356];
    Let b2 = M[007357];
    PushStack Sub(MakeHiLo(b1,b2),2);
    TraceOperation 044649 (Call (Floc 041084) [Var Sp] Sp);
    PopStack popped3;
    PushFrame;
    PushReturnAddress 044649;
    SetLocal 1 popped3;
    MakeRoutineFrame 1;
    Jump: 041085
  } else {
    Jump: 044698
  }
LocReturn 044649:
  PushStack call_result;
  TraceOperation 044655 (Sub (Var Sp) (Con 8498) (Local 6));
  PopStack popped1;
  SetLocal 6 Sub(popped1,8498);
  TraceOperation 044661 (Jg (Var (Global 75)) (Var (Global 76)) (Branch F (Dloc 044671)));
  Let b2 = M[007356];
  Let b3 = M[007357];
  Let b4 = M[007358];
  Let b5 = M[007359];
  if (GreaterThan(MakeHiLo(b2,b3),MakeHiLo(b4,b5))) {
    TraceOperation 044665 (Store (Con 7) (Con 119));
    SetLocal 7 119;
    TraceOperation 044668 (Jump 044683);
    Jump: 044683
  } else {
    Jump: 044671
  }
LocOp 044671:
  TraceOperation 044671 (Call (Floc 041084) [Var (Global 75)] Sp);
  Let b1 = M[007356];
  Let b2 = M[007357];
  PushFrame;
  PushReturnAddress 044671;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 1;
  Jump: 041085
LocReturn 044671:
  PushStack call_result;
  TraceOperation 044677 (Sub (Var Sp) (Con 8498) (Local 7));
  PopStack popped1;
  SetLocal 7 Sub(popped1,8498);
  Jump: 044683
LocOp 044683:
  TraceOperation 044683 (Jl (Var (Local 6)) (Var (Local 7)) (Branch F (Dloc 044698)));
  if (LessThan(GetLocal(6),GetLocal(7))) {
    TraceOperation 044687 (Storeb (Con 8744) (Var (Local 6)) (Con 32));
    SetByte Offset(008744,GetLocal(6)) 32;
    TraceOperation 044693 (Inc (Con 6));
    SetLocal 6 Add(GetLocal(6),1);
    TraceOperation 044695 (Jump 044683);
    Jump: 044683
  } else {
    Jump: 044698
  }
LocOp 044698:
  TraceOperation 044698 (CallN (Floc 024892) [Con 8498,Con 8867]);
  PushFrame;
  PushReturnAddress 044698;
  SetLocal 1 8498;
  SetLocal 2 8867;
  MakeRoutineFrame 2;
  Jump: 024893
LocReturn 044698:
  TraceOperation 044706 (Store (Con 166) (Con 1));
  SetByte 007506 0;
  SetByte 007507 1;
  TraceOperation 044709 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 044710:
  TraceOperation 044710 (Store (Con 153) (Con 2));
  SetByte 007480 0;
  SetByte 007481 2;
  TraceOperation 044713 (Jump 043964);
  Jump: 043964
--------------------------------------------------
LocRoutine 044716:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 044717
LocOp 044717:
  TraceOperation 044717 (Call (Floc 041076) [] Sp);
  PushFrame;
  PushReturnAddress 044717;
  MakeRoutineFrame 0;
  Jump: 041077
LocReturn 044717:
  PushStack call_result;
  TraceOperation 044721 (Jg (Var (Global 75)) (Var Sp) (Branch F (Dloc 044728)));
  Let b1 = M[007356];
  Let b2 = M[007357];
  PopStack popped3;
  if (GreaterThan(MakeHiLo(b1,b2),popped3)) {
    TraceOperation 044725 (Ret (Con -1));
    PopFrame;
    PopReturnAddress return_address_4;
    SetResult -1;
    JumpIndirect: (return) return_address_4
  } else {
    Jump: 044728
  }
LocOp 044728:
  TraceOperation 044728 (Call (Floc 044736) [Var (Local 1),Var (Local 2)] Sp);
  PushFrame;
  PushReturnAddress 044728;
  SetLocal 1 GetLocal(1);
  SetLocal 2 GetLocal(2);
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 044737
LocReturn 044728:
  PushStack call_result;
  TraceOperation 044735 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 044736:
  MakeRoutineFrame 7;
  if (LessThanByte(num_actuals,7)) {
    SetLocal 7 0;
    if (LessThanByte(num_actuals,6)) {
      SetLocal 6 0;
      if (LessThanByte(num_actuals,5)) {
        SetLocal 5 0;
        if (LessThanByte(num_actuals,4)) {
          SetLocal 4 0;
          if (LessThanByte(num_actuals,3)) {
            SetLocal 3 0;
            if (LessThanByte(num_actuals,2)) {
              SetLocal 2 0;
              if (LessThanByte(num_actuals,1)) {
                SetLocal 1 0;
              }
            }
          }
        }
      }
    }
  }
  Jump: 044737
LocOp 044737:
  TraceOperation 044737 (Jg (Var (Global 179)) (Con 0) (Branch F (Dloc 044798)));
  Let b1 = M[007564];
  Let b2 = M[007565];
  if (GreaterThan(MakeHiLo(b1,b2),0)) {
    TraceOperation 044741 (Push (Var (Global 178)));
    Let b3 = M[007562];
    Let b4 = M[007563];
    PushStack MakeHiLo(b3,b4);
    TraceOperation 044744 (Push (Var (Global 155)));
    Let b5 = M[007516];
    Let b6 = M[007517];
    PushStack MakeHiLo(b5,b6);
    TraceOperation 044747 (Push (Var (Global 177)));
    Let b7 = M[007560];
    Let b8 = M[007561];
    PushStack MakeHiLo(b7,b8);
    TraceOperation 044750 (Push (Var (Global 176)));
    Let b9 = M[007558];
    Let b10 = M[007559];
    PushStack MakeHiLo(b9,b10);
    TraceOperation 044753 (Push (Var (Global 148)));
    Let b11 = M[007502];
    Let b12 = M[007503];
    PushStack MakeHiLo(b11,b12);
    TraceOperation 044756 (Store (Con 5) (Con 0));
    SetLocal 5 0;
    Jump: 044759
  } else {
    Jump: 044798
  }
LocOp 044759:
  TraceOperation 044759 (Jl (Var (Local 5)) (Var (Global 175)) (Branch F (Dloc 044795)));
  Let b1 = M[007556];
  Let b2 = M[007557];
  if (LessThan(GetLocal(5),MakeHiLo(b1,b2))) {
    TraceOperation 044763 (Loadw (Con 10067) (Var (Local 5)) (Local 6));
    Let b3 = M[Offset(010067,Mul(2,GetLocal(5)))];
    Let b4 = M[Offset(Offset(010067,Mul(2,GetLocal(5))),1)];
    SetLocal 6 MakeHiLo(b3,b4);
    TraceOperation 044769 (Push (Var (Local 6)));
    PushStack GetLocal(6);
    TraceOperation 044772 (Loadw (Con 10195) (Var (Local 5)) (Local 6));
    Let b5 = M[Offset(010195,Mul(2,GetLocal(5)))];
    Let b6 = M[Offset(Offset(010195,Mul(2,GetLocal(5))),1)];
    SetLocal 6 MakeHiLo(b5,b6);
    TraceOperation 044778 (Push (Var (Local 6)));
    PushStack GetLocal(6);
    TraceOperation 044781 (Loadw (Con 10323) (Var (Local 5)) (Local 6));
    Let b7 = M[Offset(010323,Mul(2,GetLocal(5)))];
    Let b8 = M[Offset(Offset(010323,Mul(2,GetLocal(5))),1)];
    SetLocal 6 MakeHiLo(b7,b8);
    TraceOperation 044787 (Push (Var (Local 6)));
    PushStack GetLocal(6);
    TraceOperation 044790 (Inc (Con 5));
    SetLocal 5 Add(GetLocal(5),1);
    TraceOperation 044792 (Jump 044759);
    Jump: 044759
  } else {
    Jump: 044795
  }
LocOp 044795:
  TraceOperation 044795 (Push (Var (Global 175)));
  Let b1 = M[007556];
  Let b2 = M[007557];
  PushStack MakeHiLo(b1,b2);
  Jump: 044798
LocOp 044798:
  TraceOperation 044798 (Inc (Con 195));
  Let b1 = M[007564];
  Let b2 = M[007565];
  SetByte 007564 HiByte(Add(MakeHiLo(b1,b2),1));
  SetByte 007565 LoByte(Add(MakeHiLo(b1,b2),1));
  TraceOperation 044800 (Call (Floc 044876) [Var (Local 1),Var (Local 2),Var (Local 3),Var (Local 4)] (Local 7));
  PushFrame;
  PushReturnAddress 044800;
  SetLocal 1 GetLocal(1);
  SetLocal 2 GetLocal(2);
  SetLocal 3 GetLocal(3);
  SetLocal 4 GetLocal(4);
  MakeRoutineFrame 15;
  SetLocal 15 0;
  SetLocal 14 0;
  SetLocal 13 0;
  SetLocal 12 0;
  SetLocal 11 0;
  SetLocal 10 0;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  Jump: 044877
LocReturn 044800:
  SetLocal 7 call_result;
  TraceOperation 044810 (Dec (Con 195));
  Let b1 = M[007564];
  Let b2 = M[007565];
  SetByte 007564 HiByte(Sub(MakeHiLo(b1,b2),1));
  SetByte 007565 LoByte(Sub(MakeHiLo(b1,b2),1));
  TraceOperation 044812 (Jg (Var (Global 179)) (Con 0) (Branch F (Dloc 044873)));
  Let b3 = M[007564];
  Let b4 = M[007565];
  if (GreaterThan(MakeHiLo(b3,b4),0)) {
    TraceOperation 044816 (Pull (Con 191));
    PopStack popped5;
    SetByte 007556 HiByte(popped5);
    SetByte 007557 LoByte(popped5);
    TraceOperation 044819 (Store (Con 5) (Con 0));
    SetLocal 5 0;
    Jump: 044822
  } else {
    Jump: 044873
  }
LocOp 044822:
  TraceOperation 044822 (Jl (Var (Local 5)) (Var (Global 175)) (Branch F (Dloc 044858)));
  Let b1 = M[007556];
  Let b2 = M[007557];
  if (LessThan(GetLocal(5),MakeHiLo(b1,b2))) {
    TraceOperation 044826 (Pull (Con 6));
    PopStack popped3;
    SetLocal 6 popped3;
    TraceOperation 044829 (Storew (Con 10323) (Var (Local 5)) (Var (Local 6)));
    SetByte Offset(010323,Mul(2,GetLocal(5))) HiByte(GetLocal(6));
    SetByte Offset(Offset(010323,Mul(2,GetLocal(5))),1) LoByte(GetLocal(6));
    TraceOperation 044835 (Pull (Con 6));
    PopStack popped4;
    SetLocal 6 popped4;
    TraceOperation 044838 (Storew (Con 10195) (Var (Local 5)) (Var (Local 6)));
    SetByte Offset(010195,Mul(2,GetLocal(5))) HiByte(GetLocal(6));
    SetByte Offset(Offset(010195,Mul(2,GetLocal(5))),1) LoByte(GetLocal(6));
    TraceOperation 044844 (Pull (Con 6));
    PopStack popped5;
    SetLocal 6 popped5;
    TraceOperation 044847 (Storew (Con 10067) (Var (Local 5)) (Var (Local 6)));
    SetByte Offset(010067,Mul(2,GetLocal(5))) HiByte(GetLocal(6));
    SetByte Offset(Offset(010067,Mul(2,GetLocal(5))),1) LoByte(GetLocal(6));
    TraceOperation 044853 (Inc (Con 5));
    SetLocal 5 Add(GetLocal(5),1);
    TraceOperation 044855 (Jump 044822);
    Jump: 044822
  } else {
    Jump: 044858
  }
LocOp 044858:
  TraceOperation 044858 (Pull (Con 164));
  PopStack popped1;
  SetByte 007502 HiByte(popped1);
  SetByte 007503 LoByte(popped1);
  TraceOperation 044861 (Pull (Con 192));
  PopStack popped2;
  SetByte 007558 HiByte(popped2);
  SetByte 007559 LoByte(popped2);
  TraceOperation 044864 (Pull (Con 193));
  PopStack popped3;
  SetByte 007560 HiByte(popped3);
  SetByte 007561 LoByte(popped3);
  TraceOperation 044867 (Pull (Con 171));
  PopStack popped4;
  SetByte 007516 HiByte(popped4);
  SetByte 007517 LoByte(popped4);
  TraceOperation 044870 (Pull (Con 194));
  PopStack popped5;
  SetByte 007562 HiByte(popped5);
  SetByte 007563 LoByte(popped5);
  Jump: 044873
LocOp 044873:
  TraceOperation 044873 (Ret (Var (Local 7)));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult GetLocal(7);
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 045084:
  MakeRoutineFrame 0;
  Jump: 045085
LocOp 045085:
  TraceOperation 045085 (Loadw (Con 9811) (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(009811,Mul(2,popped1))];
  Let b3 = M[Offset(Offset(009811,Mul(2,popped1)),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 045091 (Je [Var Sp,Con 2] (Branch F (Dloc 045098)));
  PopStack popped4;
  if (Equal(popped4,2)) {
    TraceOperation 045095 (Ret (Con -1));
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult -1;
    JumpIndirect: (return) return_address_5
  } else {
    Jump: 045098
  }
LocOp 045098:
  TraceOperation 045098 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 045212:
  MakeRoutineFrame 0;
  Jump: 045213
LocOp 045213:
  TraceOperation 045213 (Je [Var Sp,Con -1] (Branch T (Dloc 045220)));
  PopStack popped1;
  if (Equal(popped1,-1)) {
    Jump: 045220
  } else {
    TraceOperation 045219 Rfalse;
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  }
LocOp 045220:
  TraceOperation 045220 (Ret (Con -1));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult -1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 045266:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 045267
LocOp 045267:
  TraceOperation 045267 (Jl (Con 171) (Con 13) (Branch F (Dloc 045782)));
  Jump: 045782
--------------------------------------------------
LocRoutine 045548:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 045549
LocOp 045549:
  TraceOperation 045549 (Call (Floc 049680) [] (Global 50));
  PushFrame;
  PushReturnAddress 045549;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  SetLocal 2 0;
  SetLocal 1 0;
  Jump: 049681
LocReturn 045549:
  SetByte 007306 HiByte(call_result);
  SetByte 007307 LoByte(call_result);
  TraceOperation 045553 (Jump 045875);
  Jump: 045875
--------------------------------------------------
LocRoutine 045566:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 045567
LocOp 045567:
  TraceOperation 045567 (Jump 045623);
  Jump: 045623
--------------------------------------------------
LocRoutine 045598:
  MakeRoutineFrame 0;
  Jump: 045599
LocOp 045599:
  TraceOperation 045599 (CallN (Floc 049724) [Var Sp]);
  PopStack popped1;
  PushFrame;
  PushReturnAddress 045599;
  SetLocal 1 popped1;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 049725
LocReturn 045599:
  TraceOperation 045604 (Jump 045618);
  Jump: 045618
--------------------------------------------------
LocRoutine 045612:
  MakeRoutineFrame 0;
  Jump: 045613
LocOp 045613:
  TraceOperation 045613 (CallN (Floc 049776) [Var Sp]);
  PopStack popped1;
  PushFrame;
  PushReturnAddress 045613;
  SetLocal 1 popped1;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 049777
LocReturn 045613:
  Jump: 045618
LocOp 045618:
  TraceOperation 045618 (Inc (Con 8));
  SetLocal 8 Add(GetLocal(8),1);
  TraceOperation 045620 (Jump 045586);
  Jump: 045586
--------------------------------------------------
LocRoutine 045718:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 045719
LocOp 045719:
  TraceOperation 045719 (Call (Floc 049680) [] (Global 50));
  PushFrame;
  PushReturnAddress 045719;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  SetLocal 2 0;
  SetLocal 1 0;
  Jump: 049681
LocReturn 045719:
  SetByte 007306 HiByte(call_result);
  SetByte 007307 LoByte(call_result);
  TraceOperation 045723 (Jump 045875);
  Jump: 045875
--------------------------------------------------
LocRoutine 045806:
  MakeRoutineFrame 0;
  Jump: 045807
LocOp 045807:
  TraceOperation 045807 (Je [Con 225,Con 27] (Branch F (Dloc 037764)));
  Jump: 037764
--------------------------------------------------
LocRoutine 045900:
  MakeRoutineFrame 0;
  Jump: 045901
LocOp 045901:
  TraceOperation 045901 (Or (Var (Global 144)) (Con 61) (Global 53));
  Let b1 = M[007494];
  Let b2 = M[007495];
  SetByte 007312 HiByte(Or(MakeHiLo(b1,b2),61));
  SetByte 007313 LoByte(Or(MakeHiLo(b1,b2),61));
  TraceOperation 045905 (Store (Con 66) (Con 8));
  SetByte 007306 0;
  SetByte 007307 8;
  TraceOperation 045908 (Ret (Con -1));
  PopFrame;
  PopReturnAddress return_address_3;
  SetResult -1;
  JumpIndirect: (return) return_address_3
--------------------------------------------------
LocRoutine 045912:
  MakeRoutineFrame 0;
  Jump: 045913
LocOp 045913:
  TraceOperation 045913 (Store (Con 178) (Con 0));
  SetByte 007530 0;
  SetByte 007531 0;
  TraceOperation 045916 (Store (Con 179) (Con 0));
  SetByte 007532 0;
  SetByte 007533 0;
  TraceOperation 045919 (Store (Con 180) (Con 0));
  SetByte 007534 0;
  SetByte 007535 0;
  TraceOperation 045922 (Store (Con 181) (Con 0));
  SetByte 007536 0;
  SetByte 007537 0;
  TraceOperation 045925 (Store (Con 184) (Con 0));
  SetByte 007542 0;
  SetByte 007543 0;
  TraceOperation 045928 (Store (Con 182) (Con 0));
  SetByte 007538 0;
  SetByte 007539 0;
  TraceOperation 045931 (Store (Con 183) (Con 4095));
  SetByte 007540 15;
  SetByte 007541 255;
  TraceOperation 045936 (Store (Con 185) (Con 0));
  SetByte 007544 0;
  SetByte 007545 0;
  TraceOperation 045939 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 045956:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 045957
LocOp 045957:
  TraceOperation 045957 (Store (Con 3) (Con 0));
  SetLocal 3 0;
  TraceOperation 045960 (Store (Con 2) (Con 1));
  SetLocal 2 1;
  TraceOperation 045963 (Jump 045970);
  Jump: 045970
--------------------------------------------------
LocRoutine 045998:
  MakeRoutineFrame 0;
  Jump: 045999
LocOp 045999:
  TraceOperation 045999 (Inc_chk (Con 193) (Con 131) (Branch F (Dloc 047283)));
  Let b1 = M[007560];
  Let b2 = M[007561];
  SetByte 007560 HiByte(Add(MakeHiLo(b1,b2),1));
  SetByte 007561 LoByte(Add(MakeHiLo(b1,b2),1));
  if (GreaterThanEqual(MakeHiLo(b1,b2),131)) {
  }
  TraceOperation 046004 (Je [Con 1,Con 2] (Branch F (Dloc 046011)));
  Jump: 046011
LocOp 046011:
  TraceOperation 046011 (Jump 045966);
  Jump: 045966
--------------------------------------------------
LocRoutine 046030:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 046031
LocOp 046031:
  TraceOperation 046031 (Je [Con 160,Con 3] (Branch T (Dloc 046324)));
  TraceOperation 046036 (Call (Floc 041228) [] (Local 1));
  PushFrame;
  PushReturnAddress 046036;
  MakeRoutineFrame 1;
  SetLocal 1 0;
  Jump: 041229
LocReturn 046036:
  SetLocal 1 call_result;
  TraceOperation 046040 (Store (Con 3) (Con 0));
  SetLocal 3 0;
  TraceOperation 046043 (Store (Con 2) (Con 1));
  SetLocal 2 1;
  TraceOperation 046046 (Jump 046053);
  Jump: 046053
--------------------------------------------------
LocRoutine 046328:
  MakeRoutineFrame 0;
  Jump: 046329
LocOp 046329:
  TraceOperation 046329 (Push (Var (Global 162)));
  Let b1 = M[007530];
  Let b2 = M[007531];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 046332 (Push (Var (Global 163)));
  Let b3 = M[007532];
  Let b4 = M[007533];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 046335 (Push (Var (Global 164)));
  Let b5 = M[007534];
  Let b6 = M[007535];
  PushStack MakeHiLo(b5,b6);
  TraceOperation 046338 (Push (Var (Global 165)));
  Let b7 = M[007536];
  Let b8 = M[007537];
  PushStack MakeHiLo(b7,b8);
  TraceOperation 046341 (Push (Var (Global 168)));
  Let b9 = M[007542];
  Let b10 = M[007543];
  PushStack MakeHiLo(b9,b10);
  TraceOperation 046344 (Push (Var (Global 166)));
  Let b11 = M[007538];
  Let b12 = M[007539];
  PushStack MakeHiLo(b11,b12);
  TraceOperation 046347 (Push (Var (Global 167)));
  Let b13 = M[007540];
  Let b14 = M[007541];
  PushStack MakeHiLo(b13,b14);
  TraceOperation 046350 (Push (Var (Global 169)));
  Let b15 = M[007544];
  Let b16 = M[007545];
  PushStack MakeHiLo(b15,b16);
  TraceOperation 046353 (CallN (Floc 046020) []);
  PushFrame;
  PushReturnAddress 046353;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  SetLocal 1 0;
  Jump: 046021
LocReturn 046353:
  TraceOperation 046356 (Pull (Con 185));
  PopStack popped1;
  SetByte 007544 HiByte(popped1);
  SetByte 007545 LoByte(popped1);
  TraceOperation 046359 (Pull (Con 183));
  PopStack popped2;
  SetByte 007540 HiByte(popped2);
  SetByte 007541 LoByte(popped2);
  TraceOperation 046362 (Pull (Con 182));
  PopStack popped3;
  SetByte 007538 HiByte(popped3);
  SetByte 007539 LoByte(popped3);
  TraceOperation 046365 (Pull (Con 184));
  PopStack popped4;
  SetByte 007542 HiByte(popped4);
  SetByte 007543 LoByte(popped4);
  TraceOperation 046368 (Pull (Con 181));
  PopStack popped5;
  SetByte 007536 HiByte(popped5);
  SetByte 007537 LoByte(popped5);
  TraceOperation 046371 (Pull (Con 180));
  PopStack popped6;
  SetByte 007534 HiByte(popped6);
  SetByte 007535 LoByte(popped6);
  TraceOperation 046374 (Pull (Con 179));
  PopStack popped7;
  SetByte 007532 HiByte(popped7);
  SetByte 007533 LoByte(popped7);
  TraceOperation 046377 (Pull (Con 178));
  PopStack popped8;
  SetByte 007530 HiByte(popped8);
  SetByte 007531 LoByte(popped8);
  TraceOperation 046380 Rtrue;
  PopFrame;
  PopReturnAddress return_address_9;
  SetResult 1;
  JumpIndirect: (return) return_address_9
--------------------------------------------------
LocRoutine 046384:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 046385
LocOp 046385:
  TraceOperation 046385 (Loadw (Con 9875) (Var (Local 2)) Sp);
  Let b1 = M[Offset(009875,Mul(2,GetLocal(2)))];
  Let b2 = M[Offset(Offset(009875,Mul(2,GetLocal(2))),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 046391 (Je [Var Sp,Var (Local 1)] (Branch F (Dloc 046397)));
  PopStack popped3;
  if (Equal(popped3,GetLocal(1))) {
    TraceOperation 046395 (Ret (Var (Local 1)));
    PopFrame;
    PopReturnAddress return_address_4;
    SetResult GetLocal(1);
    JumpIndirect: (return) return_address_4
  } else {
    Jump: 046397
  }
LocOp 046397:
  TraceOperation 046397 (Loadw (Con 9939) (Var (Local 2)) Sp);
  Let b1 = M[Offset(009939,Mul(2,GetLocal(2)))];
  Let b2 = M[Offset(Offset(009939,Mul(2,GetLocal(2))),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 046403 (Loadb (Var Sp) (Con 0) Sp);
  PopStack popped3;
  Let b4 = M[Offset(Address(popped3),0)];
  PushStack Widen(b4);
  TraceOperation 046407 (And (Var Sp) (Con 32) Sp);
  PopStack popped5;
  PushStack And(popped5,32);
  TraceOperation 046411 (Jz (Var Sp) (Branch F (Dloc 046417)));
  PopStack popped6;
  if (IsZero(popped6)) {
    TraceOperation 046414 (Ret (Con -1));
    PopFrame;
    PopReturnAddress return_address_7;
    SetResult -1;
    JumpIndirect: (return) return_address_7
  } else {
    Jump: 046417
  }
LocOp 046417:
  TraceOperation 046417 (Loadw (Con 9875) (Var (Local 2)) Sp);
  Let b1 = M[Offset(009875,Mul(2,GetLocal(2)))];
  Let b2 = M[Offset(Offset(009875,Mul(2,GetLocal(2))),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 046423 (Je [Var Sp,Var (Local 1)] (Branch F (Dloc 046429)));
  PopStack popped3;
  if (Equal(popped3,GetLocal(1))) {
    TraceOperation 046427 (Ret (Var (Local 1)));
    PopFrame;
    PopReturnAddress return_address_4;
    SetResult GetLocal(1);
    JumpIndirect: (return) return_address_4
  } else {
    Jump: 046429
  }
LocOp 046429:
  TraceOperation 046429 (Inc (Con 2));
  SetLocal 2 Add(GetLocal(2),1);
  TraceOperation 046431 (Loadw (Con 9939) (Var (Local 2)) Sp);
  Let b1 = M[Offset(009939,Mul(2,GetLocal(2)))];
  Let b2 = M[Offset(Offset(009939,Mul(2,GetLocal(2))),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 046437 (Je [Var Sp,Con 15] (Branch T (Dloc 046459)));
  PopStack popped3;
  if (Equal(popped3,15)) {
    Jump: 046459
  } else {
    TraceOperation 046441 (Loadw (Con 9939) (Var (Local 2)) Sp);
    Let b4 = M[Offset(009939,Mul(2,GetLocal(2)))];
    Let b5 = M[Offset(Offset(009939,Mul(2,GetLocal(2))),1)];
    PushStack MakeHiLo(b4,b5);
    TraceOperation 046447 (Loadb (Var Sp) (Con 0) Sp);
    PopStack popped6;
    Let b7 = M[Offset(Address(popped6),0)];
    PushStack Widen(b7);
    TraceOperation 046451 (And (Var Sp) (Con 16) Sp);
    PopStack popped8;
    PushStack And(popped8,16);
    TraceOperation 046455 (Jz (Var Sp) (Branch F (Dloc 046417)));
    PopStack popped9;
    if (IsZero(popped9)) {
      Jump: 046459
    } else {
      Jump: 046417
    }
  }
LocOp 046459:
  TraceOperation 046459 (Ret (Con -1));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult -1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 046464:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 046465
LocOp 046465:
  TraceOperation 046465 (Test_attr (Var (Local 1)) (Con 1) (Branch T Dtrue));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),0)];
  if (TestBit(b1,6)) {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  } else {
    TraceOperation 046469 (Test_attr (Var (Local 1)) (Con 19) (Branch F Dfalse));
    Let b3 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),2)];
    if (TestBit(b3,4)) {
      TraceOperation 046473 (Je [Var (Global 73),Con 9,Con 8,Con 66] (Branch T Dtrue));
      Let b4 = M[007352];
      Let b5 = M[007353];
      if (LogOr(LogOr(Equal(MakeHiLo(b4,b5),9),Equal(MakeHiLo(b4,b5),8)),Equal(MakeHiLo(b4,b5),66))) {
        PopFrame;
        PopReturnAddress return_address_6;
        SetResult 1;
        JumpIndirect: (return) return_address_6
      } else {
        TraceOperation 046480 (Je [Var (Global 73),Con 78] (Branch T Dtrue));
        Let b7 = M[007352];
        Let b8 = M[007353];
        if (Equal(MakeHiLo(b7,b8),78)) {
          PopFrame;
          PopReturnAddress return_address_9;
          SetResult 1;
          JumpIndirect: (return) return_address_9
        } else {
          TraceOperation 046484 Rfalse;
          PopFrame;
          PopReturnAddress return_address_10;
          SetResult 0;
          JumpIndirect: (return) return_address_10
        }
      }
    } else {
      PopFrame;
      PopReturnAddress return_address_11;
      SetResult 0;
      JumpIndirect: (return) return_address_11
    }
  }
--------------------------------------------------
LocRoutine 046488:
  MakeRoutineFrame 10;
  if (LessThanByte(num_actuals,10)) {
    SetLocal 10 0;
    if (LessThanByte(num_actuals,9)) {
      SetLocal 9 0;
      if (LessThanByte(num_actuals,8)) {
        SetLocal 8 0;
        if (LessThanByte(num_actuals,7)) {
          SetLocal 7 0;
          if (LessThanByte(num_actuals,6)) {
            SetLocal 6 0;
            if (LessThanByte(num_actuals,5)) {
              SetLocal 5 0;
              if (LessThanByte(num_actuals,4)) {
                SetLocal 4 0;
                if (LessThanByte(num_actuals,3)) {
                  SetLocal 3 0;
                  if (LessThanByte(num_actuals,2)) {
                    SetLocal 2 0;
                    if (LessThanByte(num_actuals,1)) {
                      SetLocal 1 0;
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  Jump: 046489
LocOp 046489:
  TraceOperation 046489 (Store (Con 193) (Con 0));
  SetByte 007560 0;
  SetByte 007561 0;
  TraceOperation 046492 (Store (Con 191) (Con 0));
  SetByte 007556 0;
  SetByte 007557 0;
  TraceOperation 046495 (Store (Con 194) (Var (Global 75)));
  Let b1 = M[007356];
  Let b2 = M[007357];
  SetByte 007562 b1;
  SetByte 007563 b2;
  TraceOperation 046498 (CallN (Floc 050080) [Var (Local 1),Var (Local 2),Var (Local 3)]);
  PushFrame;
  PushReturnAddress 046498;
  SetLocal 1 GetLocal(1);
  SetLocal 2 GetLocal(2);
  SetLocal 3 GetLocal(3);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 050081
LocReturn 046498:
  TraceOperation 046505 (Add (Var (Global 178)) (Var (Global 177)) (Global 75));
  Let b1 = M[007562];
  Let b2 = M[007563];
  Let b3 = M[007560];
  Let b4 = M[007561];
  SetByte 007356 HiByte(Add(MakeHiLo(b1,b2),MakeHiLo(b3,b4)));
  SetByte 007357 LoByte(Add(MakeHiLo(b1,b2),MakeHiLo(b3,b4)));
  TraceOperation 046509 (Jz (Var (Global 175)) (Branch F (Dloc 046515)));
  Let b5 = M[007556];
  Let b6 = M[007557];
  if (IsZero(MakeHiLo(b5,b6))) {
    TraceOperation 046512 (Inc (Con 91));
    Let b7 = M[007356];
    Let b8 = M[007357];
    SetByte 007356 HiByte(Add(MakeHiLo(b7,b8),1));
    SetByte 007357 LoByte(Add(MakeHiLo(b7,b8),1));
    TraceOperation 046514 Rfalse;
    PopFrame;
    PopReturnAddress return_address_9;
    SetResult 0;
    JumpIndirect: (return) return_address_9
  } else {
    Jump: 046515
  }
LocOp 046515:
  TraceOperation 046515 (Jg (Var (Global 178)) (Var (Global 76)) (Branch T (Dloc 046582)));
  Let b1 = M[007562];
  Let b2 = M[007563];
  Let b3 = M[007358];
  Let b4 = M[007359];
  if (GreaterThan(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    Jump: 046582
  } else {
    TraceOperation 046520 (Je [Var (Global 175),Con 1] (Branch F (Dloc 046532)));
    Let b5 = M[007556];
    Let b6 = M[007557];
    if (Equal(MakeHiLo(b5,b6),1)) {
      TraceOperation 046524 (Loadw (Con 10067) (Con 0) (Local 5));
      Let b7 = M[010067];
      Let b8 = M[010068];
      SetLocal 5 MakeHiLo(b7,b8);
      TraceOperation 046530 (Ret (Var (Local 5)));
      PopFrame;
      PopReturnAddress return_address_9;
      SetResult GetLocal(5);
      JumpIndirect: (return) return_address_9
    } else {
      Jump: 046532
    }
  }
LocOp 046532:
  TraceOperation 046532 (Jg (Var (Global 75)) (Var (Global 76)) (Branch T (Dloc 046582)));
  Let b1 = M[007356];
  Let b2 = M[007357];
  Let b3 = M[007358];
  Let b4 = M[007359];
  if (GreaterThan(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    Jump: 046582
  } else {
    TraceOperation 046536 (Call (Floc 041168) [] (Local 5));
    PushFrame;
    PushReturnAddress 046536;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    SetLocal 2 0;
    SetLocal 1 0;
    Jump: 041169
  }
LocReturn 046536:
  SetLocal 5 call_result;
  TraceOperation 046540 (Dec (Con 91));
  Let b1 = M[007356];
  Let b2 = M[007357];
  SetByte 007356 HiByte(Sub(MakeHiLo(b1,b2),1));
  SetByte 007357 LoByte(Sub(MakeHiLo(b1,b2),1));
  TraceOperation 046542 (Je [Var (Local 5),Con 21548,Con 21548,Con 21548] (Branch T (Dloc 046582)));
  if (LogOr(LogOr(Equal(GetLocal(5),21548),Equal(GetLocal(5),21548)),Equal(GetLocal(5),21548))) {
    Jump: 046582
  } else {
    TraceOperation 046552 (Je [Var (Local 5),Con 21836,Con 23996,Con 23996] (Branch T (Dloc 046582)));
    if (LogOr(LogOr(Equal(GetLocal(5),21836),Equal(GetLocal(5),23996)),Equal(GetLocal(5),23996))) {
      Jump: 046582
    } else {
      TraceOperation 046562 (Je [Var (Local 5),Con 23996,Con 21728,Con 22196] (Branch T (Dloc 046582)));
      if (LogOr(LogOr(Equal(GetLocal(5),23996),Equal(GetLocal(5),21728)),Equal(GetLocal(5),22196))) {
        Jump: 046582
      } else {
        TraceOperation 046572 (Je [Var (Local 5),Con 21728] (Branch T (Dloc 046582)));
        if (Equal(GetLocal(5),21728)) {
          Jump: 046582
        } else {
          TraceOperation 046578 (Je [Var (Global 157),Con 15] (Branch T Dfalse));
          Let b3 = M[007520];
          Let b4 = M[007521];
          if (Equal(MakeHiLo(b3,b4),15)) {
            PopFrame;
            PopReturnAddress return_address_5;
            SetResult 0;
            JumpIndirect: (return) return_address_5
          } else {
            Jump: 046582
          }
        }
      }
    }
  }
LocOp 046582:
  TraceOperation 046582 (Store (Con 192) (Con 0));
  SetByte 007558 0;
  SetByte 007559 0;
  TraceOperation 046585 (Je [Var (Global 175),Con 1] (Branch F (Dloc 046595)));
  Let b1 = M[007556];
  Let b2 = M[007557];
  if (Equal(MakeHiLo(b1,b2),1)) {
    TraceOperation 046589 (Loadw (Con 10067) (Con 0) (Local 5));
    Let b3 = M[010067];
    Let b4 = M[010068];
    SetLocal 5 MakeHiLo(b3,b4);
    Jump: 046595
  } else {
    Jump: 046595
  }
LocOp 046595:
  TraceOperation 046595 (Jg (Var (Global 175)) (Con 1) (Branch F (Dloc 046615)));
  Let b1 = M[007556];
  Let b2 = M[007557];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 046599 (Call (Floc 047656) [Var (Local 3)] (Local 5));
    PushFrame;
    PushReturnAddress 046599;
    SetLocal 1 GetLocal(3);
    MakeRoutineFrame 10;
    SetLocal 10 0;
    SetLocal 9 0;
    SetLocal 8 0;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 047657
  } else {
    Jump: 046615
  }
LocReturn 046599:
  SetLocal 5 call_result;
  TraceOperation 046605 (Je [Var (Local 5),Con -1] (Branch T Dfalse));
  if (Equal(GetLocal(5),-1)) {
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 0;
    JumpIndirect: (return) return_address_1
  } else {
    TraceOperation 046611 (Je [Var (Local 5),Con 1] (Branch T Dtrue));
    if (Equal(GetLocal(5),1)) {
      PopFrame;
      PopReturnAddress return_address_2;
      SetResult 1;
      JumpIndirect: (return) return_address_2
    } else {
      Jump: 046615
    }
  }
LocOp 046615:
  TraceOperation 046615 (Jz (Var (Local 5)) (Branch T (Dloc 046637)));
  if (IsZero(GetLocal(5))) {
    Jump: 046637
  } else {
    TraceOperation 046618 (Jz (Var (Global 146)) (Branch T (Dloc 046623)));
    Let b1 = M[007498];
    Let b2 = M[007499];
    if (IsZero(MakeHiLo(b1,b2))) {
      Jump: 046623
    } else {
      TraceOperation 046621 (Ret (Var (Local 5)));
      PopFrame;
      PopReturnAddress return_address_3;
      SetResult GetLocal(5);
      JumpIndirect: (return) return_address_3
    }
  }
LocOp 046623:
  TraceOperation 046623 (Jz (Var (Global 144)) (Branch F (Dloc 046629)));
  Let b1 = M[007494];
  Let b2 = M[007495];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 046626 (Store (Con 160) (Var (Global 140)));
    Let b3 = M[007486];
    Let b4 = M[007487];
    SetByte 007494 b3;
    SetByte 007495 b4;
    Jump: 046629
  } else {
    Jump: 046629
  }
LocOp 046629:
  TraceOperation 046629 (Storew (Con 9683) (Var (Global 140)) (Var (Local 5)));
  Let b1 = M[007486];
  Let b2 = M[007487];
  SetByte Offset(009683,Mul(2,MakeHiLo(b1,b2))) HiByte(GetLocal(5));
  SetByte Offset(Offset(009683,Mul(2,MakeHiLo(b1,b2))),1) LoByte(GetLocal(5));
  TraceOperation 046635 (Ret (Var (Local 5)));
  PopFrame;
  PopReturnAddress return_address_3;
  SetResult GetLocal(5);
  JumpIndirect: (return) return_address_3
LocOp 046637:
  TraceOperation 046637 (Jg (Var (Global 178)) (Var (Global 76)) (Branch F (Dloc 046644)));
  Let b1 = M[007562];
  Let b2 = M[007563];
  Let b3 = M[007358];
  Let b4 = M[007359];
  if (GreaterThan(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 046641 (Jump 047167);
    Jump: 047167
  } else {
    Jump: 046644
  }
LocOp 046644:
  TraceOperation 046644 (CallN (Floc 078848) [Con 20]);
  PushFrame;
  PushReturnAddress 046644;
  SetLocal 1 20;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 078849
LocReturn 046644:
  TraceOperation 046649 (Call (Floc 078928) [Con 20] Sp);
  PushFrame;
  PushReturnAddress 046649;
  SetLocal 1 20;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 078929
LocReturn 046649:
  PushStack call_result;
  TraceOperation 046655 (Jz (Var Sp) (Branch T (Dloc 046661)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 046661
  } else {
    TraceOperation 046658 (Jump 046788);
    Jump: 046788
  }
LocOp 046661:
  TraceOperation 046661 (Je [Var (Local 3),Con 6] (Branch F (Dloc 046675)));
  if (Equal(GetLocal(3),6)) {
    TraceOperation 046665 (CallN (Floc 036596) [Con 4097,Con 45]);
    PushFrame;
    PushReturnAddress 046665;
    SetLocal 1 4097;
    SetLocal 2 45;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 036597
  } else {
    Jump: 046675
  }
LocReturn 046665:
  TraceOperation 046672 (Jump 046682);
  Jump: 046682
LocOp 046675:
  TraceOperation 046675 (CallN (Floc 036596) [Con 4097,Con 46]);
  PushFrame;
  PushReturnAddress 046675;
  SetLocal 1 4097;
  SetLocal 2 46;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 036597
LocReturn 046675:
  Jump: 046682
LocOp 046682:
  TraceOperation 046682 (Store (Con 6) (Var (Global 176)));
  Let b1 = M[007558];
  Let b2 = M[007559];
  SetLocal 6 MakeHiLo(b1,b2);
  TraceOperation 046685 (Store (Con 10) (Con 0));
  SetLocal 10 0;
  TraceOperation 046688 (Store (Con 5) (Con 1));
  SetLocal 5 1;
  Jump: 046691
LocOp 046691:
  TraceOperation 046691 (Jg (Var (Local 5)) (Var (Global 176)) (Branch T (Dloc 046781)));
  Let b1 = M[007558];
  Let b2 = M[007559];
  if (GreaterThan(GetLocal(5),MakeHiLo(b1,b2))) {
    Jump: 046781
  } else {
    Jump: 046696
  }
LocOp 046696:
  TraceOperation 046696 (Loadw (Con 10195) (Var (Local 10)) Sp);
  Let b1 = M[Offset(010195,Mul(2,GetLocal(10)))];
  Let b2 = M[Offset(Offset(010195,Mul(2,GetLocal(10))),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 046702 (Je [Var Sp,Var (Local 5)] (Branch T (Dloc 046725)));
  PopStack popped3;
  if (Equal(popped3,GetLocal(5))) {
    Jump: 046725
  } else {
    TraceOperation 046706 (Sub (Con 0) (Var (Local 5)) Sp);
    PushStack Sub(0,GetLocal(5));
    TraceOperation 046710 (Loadw (Con 10195) (Var (Local 10)) Sp);
    Let b4 = M[Offset(010195,Mul(2,GetLocal(10)))];
    Let b5 = M[Offset(Offset(010195,Mul(2,GetLocal(10))),1)];
    PushStack MakeHiLo(b4,b5);
    TraceOperation 046716 (Je [Var Sp,Var Sp] (Branch T (Dloc 046725)));
    PopStack popped6;
    PopStack popped7;
    if (Equal(popped6,popped7)) {
      Jump: 046725
    } else {
      TraceOperation 046720 (Inc (Con 10));
      SetLocal 10 Add(GetLocal(10),1);
      TraceOperation 046722 (Jump 046696);
      Jump: 046696
    }
  }
LocOp 046725:
  TraceOperation 046725 (Loadw (Con 10067) (Var (Local 10)) (Local 7));
  Let b1 = M[Offset(010067,Mul(2,GetLocal(10)))];
  Let b2 = M[Offset(Offset(010067,Mul(2,GetLocal(10))),1)];
  SetLocal 7 MakeHiLo(b1,b2);
  TraceOperation 046731 (Loadw (Con 10195) (Var (Local 10)) Sp);
  Let b3 = M[Offset(010195,Mul(2,GetLocal(10)))];
  Let b4 = M[Offset(Offset(010195,Mul(2,GetLocal(10))),1)];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 046737 (Jg (Var Sp) (Con 0) (Branch F (Dloc 046749)));
  PopStack popped5;
  if (GreaterThan(popped5,0)) {
    TraceOperation 046741 (CallN (Floc 081916) [Var (Local 7)]);
    PushFrame;
    PushReturnAddress 046741;
    SetLocal 1 GetLocal(7);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 081917
  } else {
    Jump: 046749
  }
LocReturn 046741:
  TraceOperation 046746 (Jump 046754);
  Jump: 046754
LocOp 046749:
  TraceOperation 046749 (CallN (Floc 081760) [Var (Local 7)]);
  PushFrame;
  PushReturnAddress 046749;
  SetLocal 1 GetLocal(7);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 081761
LocReturn 046749:
  Jump: 046754
LocOp 046754:
  TraceOperation 046754 (Sub (Var (Local 6)) (Con 1) Sp);
  PushStack Sub(GetLocal(6),1);
  TraceOperation 046758 (Jl (Var (Local 5)) (Var Sp) (Branch F (Dloc 046765)));
  PopStack popped1;
  if (LessThan(GetLocal(5),popped1)) {
    TraceOperation 046762 (Print_paddr (Con 28523));
    Note "<static Gettext address>";
    GamePrint ", ";
    Jump: 046765
  } else {
    Jump: 046765
  }
LocOp 046765:
  TraceOperation 046765 (Sub (Var (Local 6)) (Con 1) Sp);
  PushStack Sub(GetLocal(6),1);
  TraceOperation 046769 (Je [Var (Local 5),Var Sp] (Branch F (Dloc 046776)));
  PopStack popped1;
  if (Equal(GetLocal(5),popped1)) {
    TraceOperation 046773 (Print_paddr (Con 28509));
    Note "<static Gettext address>";
    GamePrint " or ";
    Jump: 046776
  } else {
    Jump: 046776
  }
LocOp 046776:
  TraceOperation 046776 (Inc (Con 5));
  SetLocal 5 Add(GetLocal(5),1);
  TraceOperation 046778 (Jump 046691);
  Jump: 046691
LocOp 046781:
  TraceOperation 046781 (CallN (Floc 036596) [Con 4097,Con 57]);
  PushFrame;
  PushReturnAddress 046781;
  SetLocal 1 4097;
  SetLocal 2 57;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 036597
LocReturn 046781:
  Jump: 046788
LocOp 046788:
  TraceOperation 046788 (CallN (Floc 078972) [Con 20]);
  PushFrame;
  PushReturnAddress 046788;
  SetLocal 1 20;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 078973
LocReturn 046788:
  Jump: 046793
LocOp 046793:
  TraceOperation 046793 (Store (Con 5) (Con 2));
  SetLocal 5 2;
  Jump: 046796
LocOp 046796:
  TraceOperation 046796 (Jl (Var (Local 5)) (Con 120) (Branch F (Dloc 046811)));
  if (LessThan(GetLocal(5),120)) {
    TraceOperation 046800 (Storeb (Con 8621) (Var (Local 5)) (Con 32));
    SetByte Offset(008621,GetLocal(5)) 32;
    TraceOperation 046806 (Inc (Con 5));
    SetLocal 5 Add(GetLocal(5),1);
    TraceOperation 046808 (Jump 046796);
    Jump: 046796
  } else {
    Jump: 046811
  }
LocOp 046811:
  TraceOperation 046811 (Call (Floc 041900) [Con 8621,Con 8932] (Local 9));
  PushFrame;
  PushReturnAddress 046811;
  SetLocal 1 8621;
  SetLocal 2 8932;
  MakeRoutineFrame 8;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 041901
LocReturn 046811:
  SetLocal 9 call_result;
  TraceOperation 046820 (Loadw (Con 8932) (Con 1) (Local 4));
  Let b1 = M[008934];
  Let b2 = M[008935];
  SetLocal 4 MakeHiLo(b1,b2);
  TraceOperation 046826 (Je [Var (Local 4),Con 21512,Con 22088,Con 22169] (Branch T (Dloc 046845)));
  if (LogOr(LogOr(Equal(GetLocal(4),21512),Equal(GetLocal(4),22088)),Equal(GetLocal(4),22169))) {
    Jump: 046845
  } else {
    TraceOperation 046836 (Je [Var (Local 4),Con 22178,Con 21656] (Branch F (Dloc 046923)));
    if (LogOr(Equal(GetLocal(4),22178),Equal(GetLocal(4),21656))) {
      Jump: 046845
    } else {
      Jump: 046923
    }
  }
LocOp 046845:
  TraceOperation 046845 (Je [Var (Local 3),Con 2,Con 3,Con 4] (Branch T (Dloc 046856)));
  if (LogOr(LogOr(Equal(GetLocal(3),2),Equal(GetLocal(3),3)),Equal(GetLocal(3),4))) {
    Jump: 046856
  } else {
    TraceOperation 046852 (Je [Var (Local 3),Con 5] (Branch F (Dloc 046913)));
    if (Equal(GetLocal(3),5)) {
      Jump: 046856
    } else {
      Jump: 046913
    }
  }
LocOp 046856:
  TraceOperation 046856 (Loadw (Con 8338) (Con 0) (Local 8));
  Let b1 = M[008338];
  Let b2 = M[008339];
  SetLocal 8 MakeHiLo(b1,b2);
  TraceOperation 046862 (Store (Con 5) (Con 0));
  SetLocal 5 0;
  Jump: 046865
LocOp 046865:
  TraceOperation 046865 (Jl (Var (Local 5)) (Var (Global 175)) (Branch F (Dloc 046902)));
  Let b1 = M[007556];
  Let b2 = M[007557];
  if (LessThan(GetLocal(5),MakeHiLo(b1,b2))) {
    TraceOperation 046869 (Add (Var (Local 8)) (Var (Local 5)) Sp);
    PushStack Add(GetLocal(8),GetLocal(5));
    TraceOperation 046873 (Jl (Var Sp) (Con 63) (Branch F (Dloc 046902)));
    PopStack popped3;
    if (LessThan(popped3,63)) {
      TraceOperation 046877 (Loadw (Con 10067) (Var (Local 5)) (Local 7));
      Let b4 = M[Offset(010067,Mul(2,GetLocal(5)))];
      Let b5 = M[Offset(Offset(010067,Mul(2,GetLocal(5))),1)];
      SetLocal 7 MakeHiLo(b4,b5);
      TraceOperation 046883 (Add (Var (Local 5)) (Con 1) Sp);
      PushStack Add(GetLocal(5),1);
      TraceOperation 046887 (Add (Var Sp) (Var (Local 8)) Sp);
      PopStack popped6;
      PushStack Add(popped6,GetLocal(8));
      TraceOperation 046891 (Storew (Con 8338) (Var Sp) (Var (Local 7)));
      PopStack popped7;
      SetByte Offset(008338,Mul(2,popped7)) HiByte(GetLocal(7));
      SetByte Offset(Offset(008338,Mul(2,popped7)),1) LoByte(GetLocal(7));
      TraceOperation 046897 (Inc (Con 5));
      SetLocal 5 Add(GetLocal(5),1);
      TraceOperation 046899 (Jump 046865);
      Jump: 046865
    } else {
      Jump: 046902
    }
  } else {
    Jump: 046902
  }
LocOp 046902:
  TraceOperation 046902 (Add (Var (Local 5)) (Var (Local 8)) Sp);
  PushStack Add(GetLocal(5),GetLocal(8));
  TraceOperation 046906 (Storew (Con 8338) (Con 0) (Var Sp));
  PopStack popped1;
  SetByte 008338 HiByte(popped1);
  SetByte 008339 LoByte(popped1);
  TraceOperation 046912 Rtrue;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult 1;
  JumpIndirect: (return) return_address_2
LocOp 046913:
  TraceOperation 046913 (CallN (Floc 036596) [Con 4097,Con 47]);
  PushFrame;
  PushReturnAddress 046913;
  SetLocal 1 4097;
  SetLocal 2 47;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 036597
LocReturn 046913:
  TraceOperation 046920 (Jump 046793);
  Jump: 046793
LocOp 046923:
  TraceOperation 046923 (Jz (Var (Local 4)) (Branch T (Dloc 046958)));
  if (IsZero(GetLocal(4))) {
    Jump: 046958
  } else {
    TraceOperation 046926 (Loadb (Var (Local 4)) (Con 6) (Local 6));
    Let b1 = M[Offset(Address(GetLocal(4)),6)];
    SetLocal 6 Widen(b1);
    TraceOperation 046930 (And (Var (Local 6)) (Con 1) Sp);
    PushStack And(GetLocal(6),1);
    TraceOperation 046934 (Je [Con 0,Var Sp] (Branch T (Dloc 046958)));
    PopStack popped2;
    if (Equal(0,popped2)) {
      Jump: 046958
    } else {
      TraceOperation 046938 (Call (Floc 027188) [Var (Local 4)] Sp);
      PushFrame;
      PushReturnAddress 046938;
      SetLocal 1 GetLocal(4);
      MakeRoutineFrame 1;
      Jump: 027189
    }
  }
LocReturn 046938:
  PushStack call_result;
  TraceOperation 046944 (Jz (Var Sp) (Branch F (Dloc 046958)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 046947
  } else {
    Jump: 046958
  }
LocOp 046947:
  TraceOperation 046947 (CallN (Floc 024788) [Con 8498,Con 8621]);
  PushFrame;
  PushReturnAddress 046947;
  SetLocal 1 8498;
  SetLocal 2 8621;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 024789
LocReturn 046947:
  TraceOperation 046955 (Jump 047122);
  Jump: 047122
LocOp 046958:
  TraceOperation 046958 (Call (Floc 041084) [Var (Global 178)] Sp);
  Let b1 = M[007562];
  Let b2 = M[007563];
  PushFrame;
  PushReturnAddress 046958;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 1;
  Jump: 041085
LocReturn 046958:
  PushStack call_result;
  TraceOperation 046964 (Sub (Var Sp) (Con 8498) (Local 7));
  PopStack popped1;
  SetLocal 7 Sub(popped1,8498);
  TraceOperation 046970 (Loadb (Con 8621) (Con 1) Sp);
  Let b2 = M[008622];
  PushStack Widen(b2);
  TraceOperation 046976 (Add (Var Sp) (Con 1) (Local 8));
  PopStack popped3;
  SetLocal 8 Add(popped3,1);
  TraceOperation 046980 (Loadb (Con 8498) (Con 0) Sp);
  Let b4 = M[008498];
  PushStack Widen(b4);
  TraceOperation 046986 (Add (Con 8498) (Var Sp) Sp);
  PopStack popped5;
  PushStack Add(8498,popped5);
  TraceOperation 046992 (Sub (Var Sp) (Con 1) (Local 6));
  PopStack popped6;
  SetLocal 6 Sub(popped6,1);
  Jump: 046996
LocOp 046996:
  TraceOperation 046996 (Add (Con 8498) (Var (Local 7)) Sp);
  PushStack Add(8498,GetLocal(7));
  TraceOperation 047002 (Add (Var Sp) (Var (Local 8)) Sp);
  PopStack popped1;
  PushStack Add(popped1,GetLocal(8));
  TraceOperation 047006 (Jl (Var (Local 6)) (Var Sp) (Branch T (Dloc 047028)));
  PopStack popped2;
  if (LessThan(GetLocal(6),popped2)) {
    Jump: 047028
  } else {
    TraceOperation 047010 (Sub (Var (Local 6)) (Var (Local 8)) Sp);
    PushStack Sub(GetLocal(6),GetLocal(8));
    TraceOperation 047014 (Loadb (Con 0) (Var Sp) Sp);
    PopStack popped3;
    Let b4 = M[Offset(000000,popped3)];
    PushStack Widen(b4);
    TraceOperation 047018 (Storeb (Var (Local 6)) (Con 0) (Var Sp));
    PopStack popped5;
    SetByte Offset(Address(GetLocal(6)),0) LoByte(popped5);
    TraceOperation 047023 (Dec (Con 6));
    SetLocal 6 Sub(GetLocal(6),1);
    TraceOperation 047025 (Jump 046996);
    Jump: 046996
  }
LocOp 047028:
  TraceOperation 047028 (Store (Con 5) (Con 0));
  SetLocal 5 0;
  Jump: 047031
LocOp 047031:
  TraceOperation 047031 (Jl (Var (Local 5)) (Var (Local 8)) (Branch F (Dloc 047060)));
  if (LessThan(GetLocal(5),GetLocal(8))) {
    TraceOperation 047035 (Add (Con 2) (Var (Local 5)) Sp);
    PushStack Add(2,GetLocal(5));
    TraceOperation 047039 (Loadb (Con 8621) (Var Sp) Sp);
    PopStack popped1;
    Let b2 = M[Offset(008621,popped1)];
    PushStack Widen(b2);
    TraceOperation 047045 (Add (Var (Local 7)) (Var (Local 5)) Sp);
    PushStack Add(GetLocal(7),GetLocal(5));
    TraceOperation 047049 (Storeb (Con 8498) (Var Sp) (Var Sp));
    PopStack popped3;
    PopStack popped4;
    SetByte Offset(008498,popped3) LoByte(popped4);
    TraceOperation 047055 (Inc (Con 5));
    SetLocal 5 Add(GetLocal(5),1);
    TraceOperation 047057 (Jump 047031);
    Jump: 047031
  } else {
    Jump: 047060
  }
LocOp 047060:
  TraceOperation 047060 (Add (Var (Local 7)) (Var (Local 8)) Sp);
  PushStack Add(GetLocal(7),GetLocal(8));
  TraceOperation 047064 (Sub (Var Sp) (Con 1) Sp);
  PopStack popped1;
  PushStack Sub(popped1,1);
  TraceOperation 047068 (Storeb (Con 8498) (Var Sp) (Con 32));
  PopStack popped2;
  SetByte Offset(008498,popped2) 32;
  TraceOperation 047074 (Loadb (Con 8498) (Con 1) Sp);
  Let b3 = M[008499];
  PushStack Widen(b3);
  TraceOperation 047080 (Add (Var Sp) (Var (Local 8)) Sp);
  PopStack popped4;
  PushStack Add(popped4,GetLocal(8));
  TraceOperation 047084 (Storeb (Con 8498) (Con 1) (Var Sp));
  PopStack popped5;
  SetByte 008499 LoByte(popped5);
  TraceOperation 047090 (Loadb (Con 8498) (Con 0) Sp);
  Let b6 = M[008498];
  PushStack Widen(b6);
  TraceOperation 047096 (Sub (Var Sp) (Con 1) Sp);
  PopStack popped7;
  PushStack Sub(popped7,1);
  TraceOperation 047100 (Loadb (Con 8498) (Con 1) Sp);
  Let b8 = M[008499];
  PushStack Widen(b8);
  TraceOperation 047106 (Jl (Var Sp) (Var Sp) (Branch T (Dloc 047122)));
  PopStack popped9;
  PopStack popped10;
  if (LessThan(popped9,popped10)) {
    Jump: 047122
  } else {
    TraceOperation 047110 (Loadb (Con 8498) (Con 0) Sp);
    Let b11 = M[008498];
    PushStack Widen(b11);
    TraceOperation 047116 (Storeb (Con 8498) (Con 1) (Var Sp));
    PopStack popped12;
    SetByte 008499 LoByte(popped12);
    Jump: 047122
  }
LocOp 047122:
  TraceOperation 047122 (Call (Floc 041076) [] (Global 76));
  PushFrame;
  PushReturnAddress 047122;
  MakeRoutineFrame 0;
  Jump: 041077
LocReturn 047122:
  SetByte 007358 HiByte(call_result);
  SetByte 007359 LoByte(call_result);
  TraceOperation 047126 (Store (Con 91) (Con 1));
  SetByte 007356 0;
  SetByte 007357 1;
  TraceOperation 047129 (CallN (Floc 027052) []);
  PushFrame;
  PushReturnAddress 047129;
  MakeRoutineFrame 0;
  Jump: 027053
LocReturn 047129:
  TraceOperation 047132 (CallN (Floc 024892) [Con 8498,Con 8867]);
  PushFrame;
  PushReturnAddress 047132;
  SetLocal 1 8498;
  SetLocal 2 8867;
  MakeRoutineFrame 2;
  Jump: 024893
LocReturn 047132:
  TraceOperation 047140 (Call (Floc 041076) [] (Global 76));
  PushFrame;
  PushReturnAddress 047140;
  MakeRoutineFrame 0;
  Jump: 041077
LocReturn 047140:
  SetByte 007358 HiByte(call_result);
  SetByte 007359 LoByte(call_result);
  TraceOperation 047144 (Call (Floc 041076) [] Sp);
  PushFrame;
  PushReturnAddress 047144;
  MakeRoutineFrame 0;
  Jump: 041077
LocReturn 047144:
  PushStack call_result;
  TraceOperation 047148 (Add (Con 100) (Var Sp) (Global 64));
  PopStack popped1;
  SetByte 007334 HiByte(Add(100,popped1));
  SetByte 007335 LoByte(Add(100,popped1));
  TraceOperation 047152 (Loadw (Con 11691) (Con 15) Sp);
  Let b2 = M[011721];
  Let b3 = M[011722];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 047158 (CallN (Floc 088684) [Var Sp,Con 1]);
  PopStack popped4;
  PushFrame;
  PushReturnAddress 047158;
  SetLocal 1 popped4;
  SetLocal 2 1;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 088685
LocReturn 047158:
  TraceOperation 047164 (Ret (Con 10000));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 10000;
  JumpIndirect: (return) return_address_1
LocOp 047167:
  TraceOperation 047167 (Je [Var (Local 3),Con 6] (Branch F (Dloc 047181)));
  if (Equal(GetLocal(3),6)) {
    TraceOperation 047171 (CallN (Floc 036596) [Con 4097,Con 48]);
    PushFrame;
    PushReturnAddress 047171;
    SetLocal 1 4097;
    SetLocal 2 48;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 036597
  } else {
    Jump: 047181
  }
LocReturn 047171:
  TraceOperation 047178 (Jump 047188);
  Jump: 047188
LocOp 047181:
  TraceOperation 047181 (CallN (Floc 036596) [Con 4097,Con 49]);
  PushFrame;
  PushReturnAddress 047181;
  SetLocal 1 4097;
  SetLocal 2 49;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 036597
LocReturn 047181:
  Jump: 047188
LocOp 047188:
  TraceOperation 047188 (Store (Con 5) (Con 2));
  SetLocal 5 2;
  Jump: 047191
LocOp 047191:
  TraceOperation 047191 (Jl (Var (Local 5)) (Con 120) (Branch F (Dloc 047206)));
  if (LessThan(GetLocal(5),120)) {
    TraceOperation 047195 (Storeb (Con 8621) (Var (Local 5)) (Con 32));
    SetByte Offset(008621,GetLocal(5)) 32;
    TraceOperation 047201 (Inc (Con 5));
    SetLocal 5 Add(GetLocal(5),1);
    TraceOperation 047203 (Jump 047191);
    Jump: 047191
  } else {
    Jump: 047206
  }
LocOp 047206:
  TraceOperation 047206 (Call (Floc 041900) [Con 8621,Con 8932] (Local 9));
  PushFrame;
  PushReturnAddress 047206;
  SetLocal 1 8621;
  SetLocal 2 8932;
  MakeRoutineFrame 8;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 041901
LocReturn 047206:
  SetLocal 9 call_result;
  TraceOperation 047215 (Loadw (Con 8932) (Con 1) (Local 4));
  Let b1 = M[008934];
  Let b2 = M[008935];
  SetLocal 4 MakeHiLo(b1,b2);
  TraceOperation 047221 (Jz (Var (Local 4)) (Branch T (Dloc 047247)));
  if (IsZero(GetLocal(4))) {
    Jump: 047247
  } else {
    TraceOperation 047224 (Loadb (Var (Local 4)) (Con 6) (Local 6));
    Let b3 = M[Offset(Address(GetLocal(4)),6)];
    SetLocal 6 Widen(b3);
    TraceOperation 047228 (And (Var (Local 6)) (Con 1) Sp);
    PushStack And(GetLocal(6),1);
    TraceOperation 047232 (Je [Con 0,Var Sp] (Branch T (Dloc 047247)));
    PopStack popped4;
    if (Equal(0,popped4)) {
      Jump: 047247
    } else {
      TraceOperation 047236 (CallN (Floc 024788) [Con 8498,Con 8621]);
      PushFrame;
      PushReturnAddress 047236;
      SetLocal 1 8498;
      SetLocal 2 8621;
      MakeRoutineFrame 3;
      SetLocal 3 0;
      Jump: 024789
    }
  }
LocReturn 047236:
  TraceOperation 047244 (Ret (Con 10000));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 10000;
  JumpIndirect: (return) return_address_1
LocOp 047247:
  TraceOperation 047247 (Jz (Var (Global 144)) (Branch T (Dloc 047527)));
  Let b1 = M[007494];
  Let b2 = M[007495];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 047527
  } else {
    TraceOperation 047251 (Store (Con 6) (Var (Global 144)));
    Let b3 = M[007494];
    Let b4 = M[007495];
    SetLocal 6 MakeHiLo(b3,b4);
    TraceOperation 047254 (Jl (Var (Local 6)) (Var (Global 140)) (Branch F (Dloc 047527)));
    Let b5 = M[007486];
    Let b6 = M[007487];
    if (LessThan(GetLocal(6),MakeHiLo(b5,b6))) {
      TraceOperation 047259 (Loadw (Con 9683) (Var (Local 6)) Sp);
      Let b7 = M[Offset(009683,Mul(2,GetLocal(6)))];
      Let b8 = M[Offset(Offset(009683,Mul(2,GetLocal(6))),1)];
      PushStack MakeHiLo(b7,b8);
      TraceOperation 047265 (Je [Var Sp,Con -1] (Branch F (Dloc 047274)));
      PopStack popped9;
      if (Equal(popped9,-1)) {
        TraceOperation 047271 (Jump 047522);
        Jump: 047522
      } else {
        Jump: 047274
      }
    } else {
      Jump: 047527
    }
  }
LocOp 047274:
  TraceOperation 047274 (Loadb (Con 8498) (Con 1) Sp);
  Let b1 = M[008499];
  PushStack Widen(b1);
  TraceOperation 047280 (Add (Con 2) (Var Sp) (Local 5));
  PopStack popped2;
  SetLocal 5 Add(2,popped2);
  TraceOperation 047284 (Store (Con 255) (Con 8498));
  SetByte 007684 33;
  SetByte 007685 50;
  TraceOperation 047289 (Store (Con 254) (Con 1));
  SetByte 007682 0;
  SetByte 007683 1;
  TraceOperation 047292 (Loadb (Var (Global 239)) (Var (Global 238)) (Global 237));
  Let b3 = M[007684];
  Let b4 = M[007685];
  Let b5 = M[007682];
  Let b6 = M[007683];
  Let b7 = M[Offset(Address(MakeHiLo(b3,b4)),MakeHiLo(b5,b6))];
  SetByte 007680 HiByte(Widen(b7));
  SetByte 007681 LoByte(Widen(b7));
  TraceOperation 047296 (Inc (Con 253));
  Let b8 = M[007680];
  Let b9 = M[007681];
  SetByte 007680 HiByte(Add(MakeHiLo(b8,b9),1));
  SetByte 007681 LoByte(Add(MakeHiLo(b8,b9),1));
  TraceOperation 047298 (Storeb (Var (Global 239)) (Var (Global 238)) (Var (Global 237)));
  Let b10 = M[007684];
  Let b11 = M[007685];
  Let b12 = M[007682];
  Let b13 = M[007683];
  Let b14 = M[007680];
  Let b15 = M[007681];
  SetByte Offset(Address(MakeHiLo(b10,b11)),MakeHiLo(b12,b13)) b15;
  TraceOperation 047303 (Push (Var (Local 5)));
  PushStack GetLocal(5);
  TraceOperation 047306 (Inc (Con 5));
  SetLocal 5 Add(GetLocal(5),1);
  TraceOperation 047308 (Storeb (Con 8498) (Var Sp) (Con 32));
  PopStack popped16;
  SetByte Offset(008498,popped16) 32;
  TraceOperation 047314 (Storew (Con 8932) (Con 1) (Con 0));
  SetByte 008934 0;
  SetByte 008935 0;
  TraceOperation 047320 (Loadw (Con 9683) (Var (Local 6)) Sp);
  Let b17 = M[Offset(009683,Mul(2,GetLocal(6)))];
  Let b18 = M[Offset(Offset(009683,Mul(2,GetLocal(6))),1)];
  PushStack MakeHiLo(b17,b18);
  TraceOperation 047326 (Jl (Var Sp) (Con 2) (Branch T (Dloc 047416)));
  PopStack popped19;
  if (LessThan(popped19,2)) {
    Jump: 047416
  } else {
    TraceOperation 047331 (Loadw (Con 9683) (Var (Local 6)) Sp);
    Let b20 = M[Offset(009683,Mul(2,GetLocal(6)))];
    Let b21 = M[Offset(Offset(009683,Mul(2,GetLocal(6))),1)];
    PushStack MakeHiLo(b20,b21);
    TraceOperation 047337 (Jl (Var Sp) (Con 10000) (Branch F (Dloc 047416)));
    PopStack popped22;
    if (LessThan(popped22,10000)) {
      TraceOperation 047344 (Loadw (Con 9683) (Var (Local 6)) Sp);
      Let b23 = M[Offset(009683,Mul(2,GetLocal(6)))];
      Let b24 = M[Offset(Offset(009683,Mul(2,GetLocal(6))),1)];
      PushStack MakeHiLo(b23,b24);
      TraceOperation 047350 (CallN (Floc 051776) [Var Sp]);
      PopStack popped25;
      PushFrame;
      PushReturnAddress 047350;
      SetLocal 1 popped25;
      MakeRoutineFrame 3;
      SetLocal 3 0;
      SetLocal 2 0;
      Jump: 051777
    } else {
      Jump: 047416
    }
  }
LocReturn 047350:
  TraceOperation 047355 (Store (Con 7) (Con 1));
  SetLocal 7 1;
  TraceOperation 047358 (Jump 047365);
  Jump: 047365
--------------------------------------------------
LocRoutine 047400:
  MakeRoutineFrame 0;
  Jump: 047401
LocOp 047401:
  TraceOperation 047401 (Storew (Con 8932) (Con 1) (Var Sp));
  PopStack popped1;
  SetByte 008934 HiByte(popped1);
  SetByte 008935 LoByte(popped1);
  TraceOperation 047407 (Jump 047413);
  Jump: 047413
--------------------------------------------------
LocRoutine 047502:
  MakeRoutineFrame 0;
  Jump: 047503
LocOp 047503:
  TraceOperation 047503 (Inc (Con 8));
  SetLocal 8 Add(GetLocal(8),1);
  TraceOperation 047505 (Jump 047479);
  Jump: 047479
--------------------------------------------------
LocRoutine 047656:
  MakeRoutineFrame 10;
  if (LessThanByte(num_actuals,10)) {
    SetLocal 10 0;
    if (LessThanByte(num_actuals,9)) {
      SetLocal 9 0;
      if (LessThanByte(num_actuals,8)) {
        SetLocal 8 0;
        if (LessThanByte(num_actuals,7)) {
          SetLocal 7 0;
          if (LessThanByte(num_actuals,6)) {
            SetLocal 6 0;
            if (LessThanByte(num_actuals,5)) {
              SetLocal 5 0;
              if (LessThanByte(num_actuals,4)) {
                SetLocal 4 0;
                if (LessThanByte(num_actuals,3)) {
                  SetLocal 3 0;
                  if (LessThanByte(num_actuals,2)) {
                    SetLocal 2 0;
                    if (LessThanByte(num_actuals,1)) {
                      SetLocal 1 0;
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  Jump: 047657
LocOp 047657:
  TraceOperation 047657 (Sub (Var (Global 175)) (Con 1) (Local 3));
  Let b1 = M[007556];
  Let b2 = M[007557];
  SetLocal 3 Sub(MakeHiLo(b1,b2),1);
  TraceOperation 047661 (Store (Con 5) (Con 0));
  SetLocal 5 0;
  TraceOperation 047664 (Loadw (Con 10067) (Con 0) (Local 6));
  Let b3 = M[010067];
  Let b4 = M[010068];
  SetLocal 6 MakeHiLo(b3,b4);
  TraceOperation 047670 (Store (Con 2) (Con 0));
  SetLocal 2 0;
  Jump: 047673
LocOp 047673:
  TraceOperation 047673 (Jg (Var (Local 2)) (Var (Local 3)) (Branch T (Dloc 047872)));
  if (GreaterThan(GetLocal(2),GetLocal(3))) {
    Jump: 047872
  } else {
    TraceOperation 047678 (Loadw (Con 10067) (Var (Local 2)) (Local 7));
    Let b1 = M[Offset(010067,Mul(2,GetLocal(2)))];
    Let b2 = M[Offset(Offset(010067,Mul(2,GetLocal(2))),1)];
    SetLocal 7 MakeHiLo(b1,b2);
    TraceOperation 047684 (Storew (Con 10323) (Var (Local 2)) (Var (Local 5)));
    SetByte Offset(010323,Mul(2,GetLocal(2))) HiByte(GetLocal(5));
    SetByte Offset(Offset(010323,Mul(2,GetLocal(2))),1) LoByte(GetLocal(5));
    TraceOperation 047690 (Call (Floc 037240) [Var (Local 7)] (Local 8));
    PushFrame;
    PushReturnAddress 047690;
    SetLocal 1 GetLocal(7);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 037241
  }
LocReturn 047690:
  SetLocal 8 call_result;
  TraceOperation 047696 (Je [Var (Local 1),Con 1] (Branch F (Dloc 047712)));
  if (Equal(GetLocal(1),1)) {
    TraceOperation 047700 (Get_parent (Var (Local 7)) Sp);
    Let b1 = M[Offset(Offset(000378,Mul(GetLocal(7),14)),6)];
    Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(7),14)),6),1)];
    PushStack MakeHiLo(b1,b2);
    TraceOperation 047703 (Je [Var Sp,Var (Global 37)] (Branch F (Dloc 047712)));
    PopStack popped3;
    Let b4 = M[007280];
    Let b5 = M[007281];
    if (Equal(popped3,MakeHiLo(b4,b5))) {
      TraceOperation 047707 (Inc (Con 5));
      SetLocal 5 Add(GetLocal(5),1);
      TraceOperation 047709 (Store (Con 6) (Var (Local 7)));
      SetLocal 6 GetLocal(7);
      Jump: 047712
    } else {
      Jump: 047712
    }
  } else {
    Jump: 047712
  }
LocOp 047712:
  TraceOperation 047712 (Je [Var (Local 1),Con 2] (Branch F (Dloc 047743)));
  if (Equal(GetLocal(1),2)) {
    TraceOperation 047716 (Call (Floc 037240) [Var (Global 37)] Sp);
    Let b1 = M[007280];
    Let b2 = M[007281];
    PushFrame;
    PushReturnAddress 047716;
    SetLocal 1 MakeHiLo(b1,b2);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 037241
  } else {
    Jump: 047743
  }
LocReturn 047716:
  PushStack call_result;
  TraceOperation 047722 (Je [Var (Local 8),Var Sp] (Branch F (Dloc 047743)));
  PopStack popped1;
  if (Equal(GetLocal(8),popped1)) {
    TraceOperation 047726 (Je [Var (Local 7),Var (Global 37)] (Branch T (Dloc 047743)));
    Let b2 = M[007280];
    Let b3 = M[007281];
    if (Equal(GetLocal(7),MakeHiLo(b2,b3))) {
      Jump: 047743
    } else {
      TraceOperation 047730 (Test_attr (Var (Local 7)) (Con 3) (Branch T (Dloc 047743)));
      Let b4 = M[Offset(Offset(000378,Mul(GetLocal(7),14)),0)];
      if (TestBit(b4,4)) {
        Jump: 047743
      } else {
        TraceOperation 047734 (Test_attr (Var (Local 7)) (Con 15) (Branch T (Dloc 047743)));
        Let b5 = M[Offset(Offset(000378,Mul(GetLocal(7),14)),1)];
        if (TestBit(b5,0)) {
          Jump: 047743
        } else {
          TraceOperation 047738 (Inc (Con 5));
          SetLocal 5 Add(GetLocal(5),1);
          TraceOperation 047740 (Store (Con 6) (Var (Local 7)));
          SetLocal 6 GetLocal(7);
          Jump: 047743
        }
      }
    }
  } else {
    Jump: 047743
  }
LocOp 047743:
  TraceOperation 047743 (Je [Var (Local 1),Con 3] (Branch F (Dloc 047759)));
  if (Equal(GetLocal(1),3)) {
    TraceOperation 047747 (Get_parent (Var (Local 7)) Sp);
    Let b1 = M[Offset(Offset(000378,Mul(GetLocal(7),14)),6)];
    Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(7),14)),6),1)];
    PushStack MakeHiLo(b1,b2);
    TraceOperation 047750 (Je [Var Sp,Var (Global 37)] (Branch F (Dloc 047759)));
    PopStack popped3;
    Let b4 = M[007280];
    Let b5 = M[007281];
    if (Equal(popped3,MakeHiLo(b4,b5))) {
      TraceOperation 047754 (Inc (Con 5));
      SetLocal 5 Add(GetLocal(5),1);
      TraceOperation 047756 (Store (Con 6) (Var (Local 7)));
      SetLocal 6 GetLocal(7);
      Jump: 047759
    } else {
      Jump: 047759
    }
  } else {
    Jump: 047759
  }
LocOp 047759:
  TraceOperation 047759 (Je [Var (Local 1),Con 4,Con 5] (Branch F (Dloc 047826)));
  if (LogOr(Equal(GetLocal(1),4),Equal(GetLocal(1),5))) {
    TraceOperation 047766 (Je [Var (Global 83),Con -1] (Branch F (Dloc 047800)));
    Let b1 = M[007372];
    Let b2 = M[007373];
    if (Equal(MakeHiLo(b1,b2),-1)) {
      TraceOperation 047772 (Je [Var (Local 1),Con 4] (Branch F (Dloc 047781)));
      if (Equal(GetLocal(1),4)) {
        TraceOperation 047776 (Inc (Con 5));
        SetLocal 5 Add(GetLocal(5),1);
        TraceOperation 047778 (Store (Con 6) (Var (Local 7)));
        SetLocal 6 GetLocal(7);
        Jump: 047781
      } else {
        Jump: 047781
      }
    } else {
      Jump: 047800
    }
  } else {
    Jump: 047826
  }
LocOp 047781:
  TraceOperation 047781 (Je [Var (Local 1),Con 5] (Branch F (Dloc 047797)));
  if (Equal(GetLocal(1),5)) {
    TraceOperation 047785 (Get_parent (Var (Local 7)) Sp);
    Let b1 = M[Offset(Offset(000378,Mul(GetLocal(7),14)),6)];
    Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(7),14)),6),1)];
    PushStack MakeHiLo(b1,b2);
    TraceOperation 047788 (Je [Var Sp,Var (Global 37)] (Branch T (Dloc 047797)));
    PopStack popped3;
    Let b4 = M[007280];
    Let b5 = M[007281];
    if (Equal(popped3,MakeHiLo(b4,b5))) {
      Jump: 047797
    } else {
      TraceOperation 047792 (Inc (Con 5));
      SetLocal 5 Add(GetLocal(5),1);
      TraceOperation 047794 (Store (Con 6) (Var (Local 7)));
      SetLocal 6 GetLocal(7);
      Jump: 047797
    }
  } else {
    Jump: 047797
  }
LocOp 047797:
  TraceOperation 047797 (Jump 047826);
  Jump: 047826
LocOp 047800:
  TraceOperation 047800 (Je [Var (Local 1),Con 4] (Branch F (Dloc 047813)));
  if (Equal(GetLocal(1),4)) {
    TraceOperation 047804 (Je [Var (Local 7),Var (Global 83)] (Branch T (Dloc 047813)));
    Let b1 = M[007372];
    Let b2 = M[007373];
    if (Equal(GetLocal(7),MakeHiLo(b1,b2))) {
      Jump: 047813
    } else {
      TraceOperation 047808 (Inc (Con 5));
      SetLocal 5 Add(GetLocal(5),1);
      TraceOperation 047810 (Store (Con 6) (Var (Local 7)));
      SetLocal 6 GetLocal(7);
      Jump: 047813
    }
  } else {
    Jump: 047813
  }
LocOp 047813:
  TraceOperation 047813 (Je [Var (Local 1),Con 5] (Branch F (Dloc 047826)));
  if (Equal(GetLocal(1),5)) {
    TraceOperation 047817 (Jin (Var (Local 7)) (Var (Global 83)) (Branch F (Dloc 047826)));
    Let b1 = M[007372];
    Let b2 = M[007373];
    Let b3 = M[Offset(Offset(000378,Mul(GetLocal(7),14)),6)];
    Let b4 = M[Offset(Offset(Offset(000378,Mul(GetLocal(7),14)),6),1)];
    if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
      TraceOperation 047821 (Inc (Con 5));
      SetLocal 5 Add(GetLocal(5),1);
      TraceOperation 047823 (Store (Con 6) (Var (Local 7)));
      SetLocal 6 GetLocal(7);
      Jump: 047826
    } else {
      Jump: 047826
    }
  } else {
    Jump: 047826
  }
LocOp 047826:
  TraceOperation 047826 (Je [Var (Local 1),Con 6] (Branch F (Dloc 047845)));
  if (Equal(GetLocal(1),6)) {
    TraceOperation 047830 (Call (Floc 046464) [Var (Local 7)] Sp);
    PushFrame;
    PushReturnAddress 047830;
    SetLocal 1 GetLocal(7);
    MakeRoutineFrame 1;
    Jump: 046465
  } else {
    Jump: 047845
  }
LocReturn 047830:
  PushStack call_result;
  TraceOperation 047836 (Je [Var Sp,Con 1] (Branch F (Dloc 047845)));
  PopStack popped1;
  if (Equal(popped1,1)) {
    TraceOperation 047840 (Inc (Con 5));
    SetLocal 5 Add(GetLocal(5),1);
    TraceOperation 047842 (Store (Con 6) (Var (Local 7)));
    SetLocal 6 GetLocal(7);
    Jump: 047845
  } else {
    Jump: 047845
  }
LocOp 047845:
  TraceOperation 047845 (Loadw (Con 10323) (Var (Local 2)) Sp);
  Let b1 = M[Offset(010323,Mul(2,GetLocal(2)))];
  Let b2 = M[Offset(Offset(010323,Mul(2,GetLocal(2))),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 047851 (Sub (Var (Local 5)) (Var Sp) Sp);
  PopStack popped3;
  PushStack Sub(GetLocal(5),popped3);
  TraceOperation 047855 (Mul (Con 1000) (Var Sp) Sp);
  PopStack popped4;
  PushStack Mul(1000,popped4);
  TraceOperation 047861 (Storew (Con 10323) (Var (Local 2)) (Var Sp));
  PopStack popped5;
  SetByte Offset(010323,Mul(2,GetLocal(2))) HiByte(popped5);
  SetByte Offset(Offset(010323,Mul(2,GetLocal(2))),1) LoByte(popped5);
  TraceOperation 047867 (Inc (Con 2));
  SetLocal 2 Add(GetLocal(2),1);
  TraceOperation 047869 (Jump 047673);
  Jump: 047673
LocOp 047872:
  TraceOperation 047872 (Je [Var (Local 5),Con 1] (Branch F (Dloc 047878)));
  if (Equal(GetLocal(5),1)) {
    TraceOperation 047876 (Ret (Var (Local 6)));
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult GetLocal(6);
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 047878
  }
LocOp 047878:
  TraceOperation 047878 (Je [Var (Local 1),Con 6] (Branch F (Dloc 047892)));
  if (Equal(GetLocal(1),6)) {
    TraceOperation 047882 (Jz (Var (Local 5)) (Branch F (Dloc 047892)));
    if (IsZero(GetLocal(5))) {
      TraceOperation 047885 (Loadw (Con 10067) (Con 0) Sp);
      Let b1 = M[010067];
      Let b2 = M[010068];
      PushStack MakeHiLo(b1,b2);
      TraceOperation 047891 Ret_popped;
      PopStack popped3;
      PopFrame;
      PopReturnAddress return_address_4;
      SetResult popped3;
      JumpIndirect: (return) return_address_4
    } else {
      Jump: 047892
    }
  } else {
    Jump: 047892
  }
LocOp 047892:
  TraceOperation 047892 (Jz (Var (Global 162)) (Branch F (Dloc 047898)));
  Let b1 = M[007530];
  Let b2 = M[007531];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 047895 (Store (Con 179) (Con 0));
    SetByte 007532 0;
    SetByte 007533 0;
    Jump: 047898
  } else {
    Jump: 047898
  }
LocOp 047898:
  TraceOperation 047898 (CallN (Floc 048676) [Var (Local 1)]);
  PushFrame;
  PushReturnAddress 047898;
  SetLocal 1 GetLocal(1);
  MakeRoutineFrame 10;
  SetLocal 10 0;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 048677
LocReturn 047898:
  TraceOperation 047903 (Jz (Var (Global 175)) (Branch F (Dloc 047909)));
  Let b1 = M[007556];
  Let b2 = M[007557];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 047906 (Ret (Con -1));
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult -1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 047909
  }
LocOp 047909:
  TraceOperation 047909 (Jz (Var (Global 162)) (Branch F (Dloc 047922)));
  Let b1 = M[007530];
  Let b2 = M[007531];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 047912 (Call (Floc 049120) [] (Local 2));
    PushFrame;
    PushReturnAddress 047912;
    MakeRoutineFrame 4;
    SetLocal 4 0;
    SetLocal 3 0;
    SetLocal 2 0;
    SetLocal 1 0;
    Jump: 049121
  } else {
    Jump: 047922
  }
LocReturn 047912:
  SetLocal 2 call_result;
  TraceOperation 047916 (Jl (Var (Local 2)) (Con 0) (Branch T (Dloc 047922)));
  if (LessThan(GetLocal(2),0)) {
    Jump: 047922
  } else {
    TraceOperation 047920 (Ret (Var (Local 2)));
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult GetLocal(2);
    JumpIndirect: (return) return_address_1
  }
LocOp 047922:
  TraceOperation 047922 (Je [Var (Global 162),Con 1] (Branch F (Dloc 048161)));
  Let b1 = M[007530];
  Let b2 = M[007531];
  if (Equal(MakeHiLo(b1,b2),1)) {
    TraceOperation 047927 (And (Var (Global 163)) (Con 8) Sp);
    Let b3 = M[007532];
    Let b4 = M[007533];
    PushStack And(MakeHiLo(b3,b4),8);
    TraceOperation 047931 (Jz (Var Sp) (Branch T (Dloc 048161)));
    PopStack popped5;
    if (IsZero(popped5)) {
      Jump: 048161
    } else {
      TraceOperation 047935 (Je [Var (Local 1),Con 2,Con 3,Con 4] (Branch T (Dloc 047952)));
      if (LogOr(LogOr(Equal(GetLocal(1),2),Equal(GetLocal(1),3)),Equal(GetLocal(1),4))) {
        Jump: 047952
      } else {
        TraceOperation 047942 (Je [Var (Local 1),Con 5] (Branch T (Dloc 047952)));
        if (Equal(GetLocal(1),5)) {
          Jump: 047952
        } else {
          TraceOperation 047946 (Store (Con 66) (Con 8));
          SetByte 007306 0;
          SetByte 007307 8;
          TraceOperation 047949 (Ret (Con -1));
          PopFrame;
          PopReturnAddress return_address_6;
          SetResult -1;
          JumpIndirect: (return) return_address_6
        }
      }
    }
  } else {
    Jump: 048161
  }
LocOp 047952:
  TraceOperation 047952 (Store (Con 2) (Con 0));
  SetLocal 2 0;
  TraceOperation 047955 (Loadw (Con 8338) (Con 0) (Local 10));
  Let b1 = M[008338];
  Let b2 = M[008339];
  SetLocal 10 MakeHiLo(b1,b2);
  TraceOperation 047961 (Call (Floc 049048) [] (Local 3));
  PushFrame;
  PushReturnAddress 047961;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  SetLocal 1 0;
  Jump: 049049
LocReturn 047961:
  SetLocal 3 call_result;
  TraceOperation 047965 (Jump 047972);
  Jump: 047972
--------------------------------------------------
LocRoutine 048268:
  MakeRoutineFrame 0;
  Jump: 048269
LocOp 048269:
  TraceOperation 048269 (Inc (Con 3));
  SetLocal 3 Add(GetLocal(3),1);
  TraceOperation 048271 (Jump 048218);
  Jump: 048218
--------------------------------------------------
LocRoutine 048340:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 048341
LocOp 048341:
  TraceOperation 048341 (Jg (Con 118) (Con 3) (Branch F (Dloc 049115)));
  TraceOperation 048346 (Store (Con 9) (Con 0));
  SetLocal 9 0;
  TraceOperation 048349 (Jump 048385);
  Jump: 048385
--------------------------------------------------
LocRoutine 048384:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 048385
LocOp 048385:
  TraceOperation 048385 (Inc (Con 2));
  SetLocal 2 Add(GetLocal(2),1);
  TraceOperation 048387 (Jump 048315);
  Jump: 048315
--------------------------------------------------
LocRoutine 048400:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 048401
LocOp 048401:
  TraceOperation 048401 (Call (Floc 049048) [] Sp);
  PushFrame;
  PushReturnAddress 048401;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  SetLocal 1 0;
  Jump: 049049
LocReturn 048401:
  PushStack call_result;
  TraceOperation 048405 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 048408:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 048409
LocOp 048409:
  TraceOperation 048409 (Je [Var (Global 161),Con 4,Con 5] (Branch F (Dloc 048485)));
  Let b1 = M[007528];
  Let b2 = M[007529];
  if (LogOr(Equal(MakeHiLo(b1,b2),4),Equal(MakeHiLo(b1,b2),5))) {
    TraceOperation 048416 (Store (Con 2) (Con 1));
    SetLocal 2 1;
    TraceOperation 048419 (Store (Con 3) (Con 0));
    SetLocal 3 0;
    Jump: 048422
  } else {
    Jump: 048485
  }
LocOp 048422:
  TraceOperation 048422 (Loadw (Con 8338) (Con 0) Sp);
  Let b1 = M[008338];
  Let b2 = M[008339];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 048428 (Jg (Var (Local 2)) (Var Sp) (Branch T (Dloc 048479)));
  PopStack popped3;
  if (GreaterThan(GetLocal(2),popped3)) {
    Jump: 048479
  } else {
    TraceOperation 048432 (Je [Var (Global 161),Con 4] (Branch F (Dloc 048446)));
    Let b4 = M[007528];
    Let b5 = M[007529];
    if (Equal(MakeHiLo(b4,b5),4)) {
      TraceOperation 048436 (Loadw (Con 8338) (Var (Local 2)) Sp);
      Let b6 = M[Offset(008338,Mul(2,GetLocal(2)))];
      Let b7 = M[Offset(Offset(008338,Mul(2,GetLocal(2))),1)];
      PushStack MakeHiLo(b6,b7);
      TraceOperation 048442 (Je [Var Sp,Var (Local 1)] (Branch F (Dloc 048460)));
      PopStack popped8;
      if (Equal(popped8,GetLocal(1))) {
        Jump: 048446
      } else {
        Jump: 048460
      }
    } else {
      Jump: 048446
    }
  }
LocOp 048446:
  TraceOperation 048446 (Je [Var (Global 161),Con 5] (Branch F (Dloc 048474)));
  Let b1 = M[007528];
  Let b2 = M[007529];
  if (Equal(MakeHiLo(b1,b2),5)) {
    TraceOperation 048450 (Loadw (Con 8338) (Var (Local 2)) Sp);
    Let b3 = M[Offset(008338,Mul(2,GetLocal(2)))];
    Let b4 = M[Offset(Offset(008338,Mul(2,GetLocal(2))),1)];
    PushStack MakeHiLo(b3,b4);
    TraceOperation 048456 (Jin (Var Sp) (Var (Local 1)) (Branch F (Dloc 048474)));
    PopStack popped5;
    Let b6 = M[Offset(Offset(000378,Mul(popped5,14)),6)];
    Let b7 = M[Offset(Offset(Offset(000378,Mul(popped5,14)),6),1)];
    if (Equal(GetLocal(1),MakeHiLo(b6,b7))) {
      Jump: 048460
    } else {
      Jump: 048474
    }
  } else {
    Jump: 048474
  }
LocOp 048460:
  TraceOperation 048460 (Inc (Con 3));
  SetLocal 3 Add(GetLocal(3),1);
  TraceOperation 048462 (Loadw (Con 8338) (Var (Local 2)) Sp);
  Let b1 = M[Offset(008338,Mul(2,GetLocal(2)))];
  Let b2 = M[Offset(Offset(008338,Mul(2,GetLocal(2))),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 048468 (Storew (Con 8338) (Var (Local 3)) (Var Sp));
  PopStack popped3;
  SetByte Offset(008338,Mul(2,GetLocal(3))) HiByte(popped3);
  SetByte Offset(Offset(008338,Mul(2,GetLocal(3))),1) LoByte(popped3);
  Jump: 048474
LocOp 048474:
  TraceOperation 048474 (Inc (Con 2));
  SetLocal 2 Add(GetLocal(2),1);
  TraceOperation 048476 (Jump 048422);
  Jump: 048422
LocOp 048479:
  TraceOperation 048479 (Storew (Con 8338) (Con 0) (Var (Local 3)));
  SetByte 008338 HiByte(GetLocal(3));
  SetByte 008339 LoByte(GetLocal(3));
  Jump: 048485
LocOp 048485:
  TraceOperation 048485 (Je [Var (Global 161),Con 2] (Branch F (Dloc 048563)));
  Let b1 = M[007528];
  Let b2 = M[007529];
  if (Equal(MakeHiLo(b1,b2),2)) {
    TraceOperation 048490 (Je [Var (Global 73),Con 64] (Branch F (Dloc 048563)));
    Let b3 = M[007352];
    Let b4 = M[007353];
    if (Equal(MakeHiLo(b3,b4),64)) {
      TraceOperation 048495 (Je [Var (Global 171),Con 2] (Branch F (Dloc 048563)));
      Let b5 = M[007548];
      Let b6 = M[007549];
      if (Equal(MakeHiLo(b5,b6),2)) {
        TraceOperation 048500 (Store (Con 2) (Con 1));
        SetLocal 2 1;
        TraceOperation 048503 (Store (Con 3) (Con 0));
        SetLocal 3 0;
        Jump: 048506
      } else {
        Jump: 048563
      }
    } else {
      Jump: 048563
    }
  } else {
    Jump: 048563
  }
LocOp 048506:
  TraceOperation 048506 (Loadw (Con 8338) (Con 0) Sp);
  Let b1 = M[008338];
  Let b2 = M[008339];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 048512 (Jg (Var (Local 2)) (Var Sp) (Branch T (Dloc 048557)));
  PopStack popped3;
  if (GreaterThan(GetLocal(2),popped3)) {
    Jump: 048557
  } else {
    TraceOperation 048516 (Call (Floc 037240) [Var (Global 37)] Sp);
    Let b4 = M[007280];
    Let b5 = M[007281];
    PushFrame;
    PushReturnAddress 048516;
    SetLocal 1 MakeHiLo(b4,b5);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 037241
  }
LocReturn 048516:
  PushStack call_result;
  TraceOperation 048522 (Loadw (Con 8338) (Var (Local 2)) Sp);
  Let b1 = M[Offset(008338,Mul(2,GetLocal(2)))];
  Let b2 = M[Offset(Offset(008338,Mul(2,GetLocal(2))),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 048528 (Call (Floc 037240) [Var Sp] Sp);
  PopStack popped3;
  PushFrame;
  PushReturnAddress 048528;
  SetLocal 1 popped3;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 037241
LocReturn 048528:
  PushStack call_result;
  TraceOperation 048534 (Je [Var Sp,Var Sp] (Branch F (Dloc 048552)));
  PopStack popped1;
  PopStack popped2;
  if (Equal(popped1,popped2)) {
    TraceOperation 048538 (Inc (Con 3));
    SetLocal 3 Add(GetLocal(3),1);
    TraceOperation 048540 (Loadw (Con 8338) (Var (Local 2)) Sp);
    Let b3 = M[Offset(008338,Mul(2,GetLocal(2)))];
    Let b4 = M[Offset(Offset(008338,Mul(2,GetLocal(2))),1)];
    PushStack MakeHiLo(b3,b4);
    TraceOperation 048546 (Storew (Con 8338) (Var (Local 3)) (Var Sp));
    PopStack popped5;
    SetByte Offset(008338,Mul(2,GetLocal(3))) HiByte(popped5);
    SetByte Offset(Offset(008338,Mul(2,GetLocal(3))),1) LoByte(popped5);
    Jump: 048552
  } else {
    Jump: 048552
  }
LocOp 048552:
  TraceOperation 048552 (Inc (Con 2));
  SetLocal 2 Add(GetLocal(2),1);
  TraceOperation 048554 (Jump 048506);
  Jump: 048506
LocOp 048557:
  TraceOperation 048557 (Storew (Con 8338) (Con 0) (Var (Local 3)));
  SetByte 008338 HiByte(GetLocal(3));
  SetByte 008339 LoByte(GetLocal(3));
  Jump: 048563
LocOp 048563:
  TraceOperation 048563 (Loadw (Con 8338) (Con 0) (Local 2));
  Let b1 = M[008338];
  Let b2 = M[008339];
  SetLocal 2 MakeHiLo(b1,b2);
  TraceOperation 048569 (Jz (Var (Local 2)) (Branch F (Dloc 048574)));
  if (IsZero(GetLocal(2))) {
    TraceOperation 048572 (Ret (Con 17));
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 17;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 048574
  }
LocOp 048574:
  TraceOperation 048574 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 048576:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 048577
LocOp 048577:
  TraceOperation 048577 (Jz (Var (Global 155)) (Branch T (Dloc 048590)));
  Let b1 = M[007516];
  Let b2 = M[007517];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 048590
  } else {
    TraceOperation 048580 (Call (Floc 048648) [Var (Local 1)] Sp);
    PushFrame;
    PushReturnAddress 048580;
    SetLocal 1 GetLocal(1);
    MakeRoutineFrame 1;
    Jump: 048649
  }
LocReturn 048580:
  PushStack call_result;
  TraceOperation 048586 (Jz (Var Sp) (Branch F (Dloc 048590)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 048589 Rtrue;
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  } else {
    Jump: 048590
  }
LocOp 048590:
  TraceOperation 048590 (Jl (Var (Local 2)) (Var (Global 177)) (Branch T Dtrue));
  Let b1 = M[007560];
  Let b2 = M[007561];
  if (LessThan(GetLocal(2),MakeHiLo(b1,b2))) {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    TraceOperation 048594 (Jg (Var (Local 2)) (Var (Global 177)) (Branch F (Dloc 048607)));
    Let b4 = M[007560];
    Let b5 = M[007561];
    if (GreaterThan(GetLocal(2),MakeHiLo(b4,b5))) {
      TraceOperation 048598 (Store (Con 193) (Var (Local 2)));
      SetByte 007560 HiByte(GetLocal(2));
      SetByte 007561 LoByte(GetLocal(2));
      TraceOperation 048601 (Store (Con 191) (Con 0));
      SetByte 007556 0;
      SetByte 007557 0;
      TraceOperation 048604 (Jump 048633);
      Jump: 048633
    } else {
      Jump: 048607
    }
  }
LocOp 048607:
  TraceOperation 048607 (Jl (Var (Global 175)) (Con 64) (Branch F Dtrue));
  Let b1 = M[007556];
  Let b2 = M[007557];
  if (LessThan(MakeHiLo(b1,b2),64)) {
    TraceOperation 048611 (Store (Con 3) (Con 0));
    SetLocal 3 0;
    Jump: 048614
  } else {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  }
LocOp 048614:
  TraceOperation 048614 (Jl (Var (Local 3)) (Var (Global 175)) (Branch F (Dloc 048633)));
  Let b1 = M[007556];
  Let b2 = M[007557];
  if (LessThan(GetLocal(3),MakeHiLo(b1,b2))) {
    TraceOperation 048618 (Loadw (Con 10067) (Var (Local 3)) Sp);
    Let b3 = M[Offset(010067,Mul(2,GetLocal(3)))];
    Let b4 = M[Offset(Offset(010067,Mul(2,GetLocal(3))),1)];
    PushStack MakeHiLo(b3,b4);
    TraceOperation 048624 (Je [Var Sp,Var (Local 1)] (Branch T Dtrue));
    PopStack popped5;
    if (Equal(popped5,GetLocal(1))) {
      PopFrame;
      PopReturnAddress return_address_6;
      SetResult 1;
      JumpIndirect: (return) return_address_6
    } else {
      TraceOperation 048628 (Inc (Con 3));
      SetLocal 3 Add(GetLocal(3),1);
      TraceOperation 048630 (Jump 048614);
      Jump: 048614
    }
  } else {
    Jump: 048633
  }
LocOp 048633:
  TraceOperation 048633 (Push (Var (Global 175)));
  Let b1 = M[007556];
  Let b2 = M[007557];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 048636 (Inc (Con 191));
  Let b3 = M[007556];
  Let b4 = M[007557];
  SetByte 007556 HiByte(Add(MakeHiLo(b3,b4),1));
  SetByte 007557 LoByte(Add(MakeHiLo(b3,b4),1));
  TraceOperation 048638 (Storew (Con 10067) (Var Sp) (Var (Local 1)));
  PopStack popped5;
  SetByte Offset(010067,Mul(2,popped5)) HiByte(GetLocal(1));
  SetByte Offset(Offset(010067,Mul(2,popped5)),1) LoByte(GetLocal(1));
  TraceOperation 048644 Rtrue;
  PopFrame;
  PopReturnAddress return_address_6;
  SetResult 1;
  JumpIndirect: (return) return_address_6
--------------------------------------------------
LocRoutine 048648:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 048649
LocOp 048649:
  TraceOperation 048649 (Call (Floc 026172) [Var (Global 155),Con 3] Sp);
  Let b1 = M[007516];
  Let b2 = M[007517];
  PushFrame;
  PushReturnAddress 048649;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 3;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 048649:
  PushStack call_result;
  TraceOperation 048656 (Jz (Var Sp) (Branch T (Dloc 048666)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 048666
  } else {
    TraceOperation 048659 (Store (Con 63) (Var (Local 1)));
    SetByte 007300 HiByte(GetLocal(1));
    SetByte 007301 LoByte(GetLocal(1));
    TraceOperation 048662 (Call (Fvar (Global 155)) [] Sp);
    Let b2 = M[007516];
    Let b3 = M[007517];
    if (IsZeroAddress(PackedAddress Z5(MakeHiLo(b2,b3)))) {
      PushStack 0;
      Jump: 048665
    } else {
      PushFrame;
      PushReturnAddress 048662;
      SetNumberActuals 0;
      JumpIndirect: (routine) PackedAddress Z5(MakeHiLo(b2,b3))
    }
  }
LocReturn 048662:
  PushStack call_result;
  Jump: 048665
LocOp 048665:
  TraceOperation 048665 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 048666:
  TraceOperation 048666 (Sub (Var (Global 155)) (Con 1) Sp);
  Let b1 = M[007516];
  Let b2 = M[007517];
  PushStack Sub(MakeHiLo(b1,b2),1);
  TraceOperation 048670 (Test_attr (Var (Local 1)) (Var Sp) (Branch T Dtrue));
  PopStack popped3;
  Let b4 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),Div8(popped3))];
  if (TestBit(b4,SevenMinus(LoByte(Mod(popped3,8))))) {
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult 1;
    JumpIndirect: (return) return_address_5
  } else {
    TraceOperation 048674 Rfalse;
    PopFrame;
    PopReturnAddress return_address_6;
    SetResult 0;
    JumpIndirect: (return) return_address_6
  }
--------------------------------------------------
LocRoutine 048676:
  MakeRoutineFrame 10;
  if (LessThanByte(num_actuals,10)) {
    SetLocal 10 0;
    if (LessThanByte(num_actuals,9)) {
      SetLocal 9 0;
      if (LessThanByte(num_actuals,8)) {
        SetLocal 8 0;
        if (LessThanByte(num_actuals,7)) {
          SetLocal 7 0;
          if (LessThanByte(num_actuals,6)) {
            SetLocal 6 0;
            if (LessThanByte(num_actuals,5)) {
              SetLocal 5 0;
              if (LessThanByte(num_actuals,4)) {
                SetLocal 4 0;
                if (LessThanByte(num_actuals,3)) {
                  SetLocal 3 0;
                  if (LessThanByte(num_actuals,2)) {
                    SetLocal 2 0;
                    if (LessThanByte(num_actuals,1)) {
                      SetLocal 1 0;
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  Jump: 048677
LocOp 048677:
  TraceOperation 048677 (And (Var (Global 163)) (Con 2) Sp);
  Let b1 = M[007532];
  Let b2 = M[007533];
  PushStack And(MakeHiLo(b1,b2),2);
  TraceOperation 048681 (Jz (Var Sp) (Branch T (Dloc 048686)));
  PopStack popped3;
  if (IsZero(popped3)) {
    Jump: 048686
  } else {
    TraceOperation 048684 (Inc (Con 7));
    SetLocal 7 Add(GetLocal(7),1);
    Jump: 048686
  }
LocOp 048686:
  TraceOperation 048686 (And (Var (Global 163)) (Con 4) Sp);
  Let b1 = M[007532];
  Let b2 = M[007533];
  PushStack And(MakeHiLo(b1,b2),4);
  TraceOperation 048690 (Jz (Var Sp) (Branch T (Dloc 048695)));
  PopStack popped3;
  if (IsZero(popped3)) {
    Jump: 048695
  } else {
    TraceOperation 048693 (Inc (Con 7));
    SetLocal 7 Add(GetLocal(7),1);
    Jump: 048695
  }
LocOp 048695:
  TraceOperation 048695 (And (Var (Global 163)) (Con 16) Sp);
  Let b1 = M[007532];
  Let b2 = M[007533];
  PushStack And(MakeHiLo(b1,b2),16);
  TraceOperation 048699 (Jz (Var Sp) (Branch T (Dloc 048704)));
  PopStack popped3;
  if (IsZero(popped3)) {
    Jump: 048704
  } else {
    TraceOperation 048702 (Inc (Con 7));
    SetLocal 7 Add(GetLocal(7),1);
    Jump: 048704
  }
LocOp 048704:
  TraceOperation 048704 (And (Var (Global 163)) (Con 32) Sp);
  Let b1 = M[007532];
  Let b2 = M[007533];
  PushStack And(MakeHiLo(b1,b2),32);
  TraceOperation 048708 (Jz (Var Sp) (Branch T (Dloc 048713)));
  PopStack popped3;
  if (IsZero(popped3)) {
    Jump: 048713
  } else {
    TraceOperation 048711 (Inc (Con 7));
    SetLocal 7 Add(GetLocal(7),1);
    Jump: 048713
  }
LocOp 048713:
  TraceOperation 048713 (Jz (Var (Global 166)) (Branch T (Dloc 048718)));
  Let b1 = M[007538];
  Let b2 = M[007539];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 048718
  } else {
    TraceOperation 048716 (Inc (Con 7));
    SetLocal 7 Add(GetLocal(7),1);
    Jump: 048718
  }
LocOp 048718:
  TraceOperation 048718 (Store (Con 9) (Con 60));
  SetLocal 9 60;
  TraceOperation 048721 (Store (Con 10) (Con 40));
  SetLocal 10 40;
  TraceOperation 048724 (Je [Var (Global 73),Con 64,Con 49] (Branch F (Dloc 048736)));
  Let b1 = M[007352];
  Let b2 = M[007353];
  if (LogOr(Equal(MakeHiLo(b1,b2),64),Equal(MakeHiLo(b1,b2),49))) {
    TraceOperation 048730 (Store (Con 9) (Con 40));
    SetLocal 9 40;
    TraceOperation 048733 (Store (Con 10) (Con 60));
    SetLocal 10 60;
    Jump: 048736
  } else {
    Jump: 048736
  }
LocOp 048736:
  TraceOperation 048736 (Store (Con 1) (Var (Local 1)));
  SetLocal 1 GetLocal(1);
  TraceOperation 048739 (Store (Con 5) (Con 0));
  SetLocal 5 0;
  Jump: 048742
LocOp 048742:
  TraceOperation 048742 (Jl (Var (Local 5)) (Var (Global 175)) (Branch F (Dloc 048954)));
  Let b1 = M[007556];
  Let b2 = M[007557];
  if (LessThan(GetLocal(5),MakeHiLo(b1,b2))) {
    TraceOperation 048747 (Loadw (Con 10067) (Var (Local 5)) (Local 4));
    Let b3 = M[Offset(010067,Mul(2,GetLocal(5)))];
    Let b4 = M[Offset(Offset(010067,Mul(2,GetLocal(5))),1)];
    SetLocal 4 MakeHiLo(b3,b4);
    TraceOperation 048753 (Get_parent (Var (Local 4)) (Local 2));
    Let b5 = M[Offset(Offset(000378,Mul(GetLocal(4),14)),6)];
    Let b6 = M[Offset(Offset(Offset(000378,Mul(GetLocal(4),14)),6),1)];
    SetLocal 2 MakeHiLo(b5,b6);
    TraceOperation 048756 (Store (Con 3) (Con 0));
    SetLocal 3 0;
    TraceOperation 048759 (Store (Con 8) (Con 0));
    SetLocal 8 0;
    TraceOperation 048762 (And (Var (Global 163)) (Con 2) Sp);
    Let b7 = M[007532];
    Let b8 = M[007533];
    PushStack And(MakeHiLo(b7,b8),2);
    TraceOperation 048766 (Jz (Var Sp) (Branch T (Dloc 048775)));
    PopStack popped9;
    if (IsZero(popped9)) {
      Jump: 048775
    } else {
      TraceOperation 048769 (Je [Var (Local 2),Var (Global 37)] (Branch F (Dloc 048775)));
      Let b10 = M[007280];
      Let b11 = M[007281];
      if (Equal(GetLocal(2),MakeHiLo(b10,b11))) {
        TraceOperation 048773 (Inc (Con 8));
        SetLocal 8 Add(GetLocal(8),1);
        Jump: 048775
      } else {
        Jump: 048775
      }
    }
  } else {
    Jump: 048954
  }
LocOp 048775:
  TraceOperation 048775 (And (Var (Global 163)) (Con 4) Sp);
  Let b1 = M[007532];
  Let b2 = M[007533];
  PushStack And(MakeHiLo(b1,b2),4);
  TraceOperation 048779 (Jz (Var Sp) (Branch T (Dloc 048788)));
  PopStack popped3;
  if (IsZero(popped3)) {
    Jump: 048788
  } else {
    TraceOperation 048782 (Je [Var (Local 2),Var (Global 38)] (Branch F (Dloc 048788)));
    Let b4 = M[007282];
    Let b5 = M[007283];
    if (Equal(GetLocal(2),MakeHiLo(b4,b5))) {
      TraceOperation 048786 (Inc (Con 8));
      SetLocal 8 Add(GetLocal(8),1);
      Jump: 048788
    } else {
      Jump: 048788
    }
  }
LocOp 048788:
  TraceOperation 048788 (And (Var (Global 163)) (Con 16) Sp);
  Let b1 = M[007532];
  Let b2 = M[007533];
  PushStack And(MakeHiLo(b1,b2),16);
  TraceOperation 048792 (Jz (Var Sp) (Branch T (Dloc 048801)));
  PopStack popped3;
  if (IsZero(popped3)) {
    Jump: 048801
  } else {
    TraceOperation 048795 (Test_attr (Var (Local 4)) (Con 8) (Branch F (Dloc 048801)));
    Let b4 = M[Offset(Offset(000378,Mul(GetLocal(4),14)),1)];
    if (TestBit(b4,7)) {
      TraceOperation 048799 (Inc (Con 8));
      SetLocal 8 Add(GetLocal(8),1);
      Jump: 048801
    } else {
      Jump: 048801
    }
  }
LocOp 048801:
  TraceOperation 048801 (And (Var (Global 163)) (Con 32) Sp);
  Let b1 = M[007532];
  Let b2 = M[007533];
  PushStack And(MakeHiLo(b1,b2),32);
  TraceOperation 048805 (Jz (Var Sp) (Branch T (Dloc 048814)));
  PopStack popped3;
  if (IsZero(popped3)) {
    Jump: 048814
  } else {
    TraceOperation 048808 (Test_attr (Var (Local 4)) (Con 8) (Branch T (Dloc 048814)));
    Let b4 = M[Offset(Offset(000378,Mul(GetLocal(4),14)),1)];
    if (TestBit(b4,7)) {
      Jump: 048814
    } else {
      TraceOperation 048812 (Inc (Con 8));
      SetLocal 8 Add(GetLocal(8),1);
      Jump: 048814
    }
  }
LocOp 048814:
  TraceOperation 048814 (Jz (Var (Global 166)) (Branch T (Dloc 048823)));
  Let b1 = M[007538];
  Let b2 = M[007539];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 048823
  } else {
    TraceOperation 048817 (Je [Var (Local 2),Var (Global 166)] (Branch F (Dloc 048823)));
    Let b3 = M[007538];
    Let b4 = M[007539];
    if (Equal(GetLocal(2),MakeHiLo(b3,b4))) {
      TraceOperation 048821 (Inc (Con 8));
      SetLocal 8 Add(GetLocal(8),1);
      Jump: 048823
    } else {
      Jump: 048823
    }
  }
LocOp 048823:
  TraceOperation 048823 (Jl (Var (Local 8)) (Var (Local 7)) (Branch F (Dloc 048837)));
  if (LessThan(GetLocal(8),GetLocal(7))) {
    TraceOperation 048827 (Storew (Con 10067) (Var (Local 5)) (Con -1));
    SetByte Offset(010067,Mul(2,GetLocal(5))) 255;
    SetByte Offset(Offset(010067,Mul(2,GetLocal(5))),1) 255;
    TraceOperation 048834 (Jump 048949);
    Jump: 048949
  } else {
    Jump: 048837
  }
LocOp 048837:
  TraceOperation 048837 (Store (Con 3) (Con 0));
  SetLocal 3 0;
  TraceOperation 048840 (Test_attr (Var (Local 4)) (Con 3) (Branch T (Dloc 048847)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(4),14)),0)];
  if (TestBit(b1,4)) {
    Jump: 048847
  } else {
    TraceOperation 048844 (Store (Con 3) (Con 100));
    SetLocal 3 100;
    Jump: 048847
  }
LocOp 048847:
  TraceOperation 048847 (Je [Var (Local 2),Var (Global 37)] (Branch F (Dloc 048858)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  if (Equal(GetLocal(2),MakeHiLo(b1,b2))) {
    TraceOperation 048851 (Add (Var (Local 3)) (Var (Local 9)) (Local 3));
    SetLocal 3 Add(GetLocal(3),GetLocal(9));
    TraceOperation 048855 (Jump 048877);
    Jump: 048877
  } else {
    Jump: 048858
  }
LocOp 048858:
  TraceOperation 048858 (Je [Var (Local 2),Var (Global 38)] (Branch F (Dloc 048869)));
  Let b1 = M[007282];
  Let b2 = M[007283];
  if (Equal(GetLocal(2),MakeHiLo(b1,b2))) {
    TraceOperation 048862 (Add (Var (Local 3)) (Var (Local 10)) (Local 3));
    SetLocal 3 Add(GetLocal(3),GetLocal(10));
    TraceOperation 048866 (Jump 048877);
    Jump: 048877
  } else {
    Jump: 048869
  }
LocOp 048869:
  TraceOperation 048869 (Je [Var (Local 2),Con 6] (Branch T (Dloc 048877)));
  if (Equal(GetLocal(2),6)) {
    Jump: 048877
  } else {
    TraceOperation 048873 (Add (Var (Local 3)) (Con 20) (Local 3));
    SetLocal 3 Add(GetLocal(3),20);
    Jump: 048877
  }
LocOp 048877:
  TraceOperation 048877 (Call (Floc 052104) [Var (Local 4),Con 2] Sp);
  PushFrame;
  PushReturnAddress 048877;
  SetLocal 1 GetLocal(4);
  SetLocal 2 2;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 052105
LocReturn 048877:
  PushStack call_result;
  TraceOperation 048884 (Mul (Con 1000) (Var Sp) Sp);
  PopStack popped1;
  PushStack Mul(1000,popped1);
  TraceOperation 048890 (Add (Var (Local 3)) (Var Sp) (Local 3));
  PopStack popped2;
  SetLocal 3 Add(GetLocal(3),popped2);
  TraceOperation 048894 (Test_attr (Var (Local 4)) (Con 15) (Branch T (Dloc 048902)));
  Let b3 = M[Offset(Offset(000378,Mul(GetLocal(4),14)),1)];
  if (TestBit(b3,0)) {
    Jump: 048902
  } else {
    TraceOperation 048898 (Add (Var (Local 3)) (Con 10) (Local 3));
    SetLocal 3 Add(GetLocal(3),10);
    Jump: 048902
  }
LocOp 048902:
  TraceOperation 048902 (Je [Var (Local 4),Var (Global 37)] (Branch T (Dloc 048910)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  if (Equal(GetLocal(4),MakeHiLo(b1,b2))) {
    Jump: 048910
  } else {
    TraceOperation 048906 (Add (Var (Local 3)) (Con 5) (Local 3));
    SetLocal 3 Add(GetLocal(3),5);
    Jump: 048910
  }
LocOp 048910:
  TraceOperation 048910 (Call (Floc 051528) [Var (Local 4)] Sp);
  PushFrame;
  PushReturnAddress 048910;
  SetLocal 1 GetLocal(4);
  MakeRoutineFrame 3;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 051529
LocReturn 048910:
  PushStack call_result;
  TraceOperation 048916 (Loadw (Con 7732) (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(007732,Mul(2,popped1))];
  Let b3 = M[Offset(Offset(007732,Mul(2,popped1)),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 048922 (And (Var (Global 167)) (Var Sp) Sp);
  Let b4 = M[007540];
  Let b5 = M[007541];
  PopStack popped6;
  PushStack And(MakeHiLo(b4,b5),popped6);
  TraceOperation 048926 (Jz (Var Sp) (Branch T (Dloc 048933)));
  PopStack popped7;
  if (IsZero(popped7)) {
    Jump: 048933
  } else {
    TraceOperation 048929 (Add (Var (Local 3)) (Con 1) (Local 3));
    SetLocal 3 Add(GetLocal(3),1);
    Jump: 048933
  }
LocOp 048933:
  TraceOperation 048933 (Loadw (Con 10323) (Var (Local 5)) Sp);
  Let b1 = M[Offset(010323,Mul(2,GetLocal(5)))];
  Let b2 = M[Offset(Offset(010323,Mul(2,GetLocal(5))),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 048939 (Add (Var Sp) (Var (Local 3)) Sp);
  PopStack popped3;
  PushStack Add(popped3,GetLocal(3));
  TraceOperation 048943 (Storew (Con 10323) (Var (Local 5)) (Var Sp));
  PopStack popped4;
  SetByte Offset(010323,Mul(2,GetLocal(5))) HiByte(popped4);
  SetByte Offset(Offset(010323,Mul(2,GetLocal(5))),1) LoByte(popped4);
  Jump: 048949
LocOp 048949:
  TraceOperation 048949 (Inc (Con 5));
  SetLocal 5 Add(GetLocal(5),1);
  TraceOperation 048951 (Jump 048742);
  Jump: 048742
LocOp 048954:
  TraceOperation 048954 (Store (Con 5) (Con 0));
  SetLocal 5 0;
  Jump: 048957
LocOp 048957:
  TraceOperation 048957 (Jl (Var (Local 5)) (Var (Global 175)) (Branch F (Dloc 049046)));
  Let b1 = M[007556];
  Let b2 = M[007557];
  if (LessThan(GetLocal(5),MakeHiLo(b1,b2))) {
    Jump: 048962
  } else {
    Jump: 049046
  }
LocOp 048962:
  TraceOperation 048962 (Loadw (Con 10067) (Var (Local 5)) Sp);
  Let b1 = M[Offset(010067,Mul(2,GetLocal(5)))];
  Let b2 = M[Offset(Offset(010067,Mul(2,GetLocal(5))),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 048968 (Je [Var Sp,Con -1] (Branch F (Dloc 049041)));
  PopStack popped3;
  if (Equal(popped3,-1)) {
    TraceOperation 048975 (Sub (Var (Global 175)) (Con 1) Sp);
    Let b4 = M[007556];
    Let b5 = M[007557];
    PushStack Sub(MakeHiLo(b4,b5),1);
    TraceOperation 048979 (Je [Var (Local 5),Var Sp] (Branch F (Dloc 048988)));
    PopStack popped6;
    if (Equal(GetLocal(5),popped6)) {
      TraceOperation 048983 (Dec (Con 191));
      Let b7 = M[007556];
      Let b8 = M[007557];
      SetByte 007556 HiByte(Sub(MakeHiLo(b7,b8),1));
      SetByte 007557 LoByte(Sub(MakeHiLo(b7,b8),1));
      TraceOperation 048985 (Jump 049041);
      Jump: 049041
    } else {
      Jump: 048988
    }
  } else {
    Jump: 049041
  }
LocOp 048988:
  TraceOperation 048988 (Store (Con 6) (Var (Local 5)));
  SetLocal 6 GetLocal(5);
  Jump: 048991
LocOp 048991:
  TraceOperation 048991 (Sub (Var (Global 175)) (Con 1) Sp);
  Let b1 = M[007556];
  Let b2 = M[007557];
  PushStack Sub(MakeHiLo(b1,b2),1);
  TraceOperation 048995 (Jl (Var (Local 6)) (Var Sp) (Branch F (Dloc 049036)));
  PopStack popped3;
  if (LessThan(GetLocal(6),popped3)) {
    TraceOperation 048999 (Add (Var (Local 6)) (Con 1) Sp);
    PushStack Add(GetLocal(6),1);
    TraceOperation 049003 (Loadw (Con 10067) (Var Sp) Sp);
    PopStack popped4;
    Let b5 = M[Offset(010067,Mul(2,popped4))];
    Let b6 = M[Offset(Offset(010067,Mul(2,popped4)),1)];
    PushStack MakeHiLo(b5,b6);
    TraceOperation 049009 (Storew (Con 10067) (Var (Local 6)) (Var Sp));
    PopStack popped7;
    SetByte Offset(010067,Mul(2,GetLocal(6))) HiByte(popped7);
    SetByte Offset(Offset(010067,Mul(2,GetLocal(6))),1) LoByte(popped7);
    TraceOperation 049015 (Add (Var (Local 6)) (Con 1) Sp);
    PushStack Add(GetLocal(6),1);
    TraceOperation 049019 (Loadw (Con 10323) (Var Sp) Sp);
    PopStack popped8;
    Let b9 = M[Offset(010323,Mul(2,popped8))];
    Let b10 = M[Offset(Offset(010323,Mul(2,popped8)),1)];
    PushStack MakeHiLo(b9,b10);
    TraceOperation 049025 (Storew (Con 10323) (Var (Local 6)) (Var Sp));
    PopStack popped11;
    SetByte Offset(010323,Mul(2,GetLocal(6))) HiByte(popped11);
    SetByte Offset(Offset(010323,Mul(2,GetLocal(6))),1) LoByte(popped11);
    TraceOperation 049031 (Inc (Con 6));
    SetLocal 6 Add(GetLocal(6),1);
    TraceOperation 049033 (Jump 048991);
    Jump: 048991
  } else {
    Jump: 049036
  }
LocOp 049036:
  TraceOperation 049036 (Dec (Con 191));
  Let b1 = M[007556];
  Let b2 = M[007557];
  SetByte 007556 HiByte(Sub(MakeHiLo(b1,b2),1));
  SetByte 007557 LoByte(Sub(MakeHiLo(b1,b2),1));
  TraceOperation 049038 (Jump 048962);
  Jump: 048962
LocOp 049041:
  TraceOperation 049041 (Inc (Con 5));
  SetLocal 5 Add(GetLocal(5),1);
  TraceOperation 049043 (Jump 048957);
  Jump: 048957
LocOp 049046:
  TraceOperation 049046 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 049048:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 049049
LocOp 049049:
  TraceOperation 049049 (Store (Con 1) (Con 0));
  SetLocal 1 0;
  TraceOperation 049052 (Store (Con 3) (Con -1));
  SetLocal 3 -1;
  TraceOperation 049057 (Store (Con 4) (Con 0));
  SetLocal 4 0;
  Jump: 049060
LocOp 049060:
  TraceOperation 049060 (Jl (Var (Local 4)) (Var (Global 175)) (Branch F (Dloc 049095)));
  Let b1 = M[007556];
  Let b2 = M[007557];
  if (LessThan(GetLocal(4),MakeHiLo(b1,b2))) {
    TraceOperation 049064 (Loadw (Con 10067) (Var (Local 4)) Sp);
    Let b3 = M[Offset(010067,Mul(2,GetLocal(4)))];
    Let b4 = M[Offset(Offset(010067,Mul(2,GetLocal(4))),1)];
    PushStack MakeHiLo(b3,b4);
    TraceOperation 049070 (Jl (Var Sp) (Con 0) (Branch T (Dloc 049090)));
    PopStack popped5;
    if (LessThan(popped5,0)) {
      Jump: 049090
    } else {
      TraceOperation 049074 (Loadw (Con 10323) (Var (Local 4)) (Local 2));
      Let b6 = M[Offset(010323,Mul(2,GetLocal(4)))];
      Let b7 = M[Offset(Offset(010323,Mul(2,GetLocal(4))),1)];
      SetLocal 2 MakeHiLo(b6,b7);
      TraceOperation 049080 (Jg (Var (Local 2)) (Var (Local 3)) (Branch F (Dloc 049090)));
      if (GreaterThan(GetLocal(2),GetLocal(3))) {
        TraceOperation 049084 (Store (Con 3) (Var (Local 2)));
        SetLocal 3 GetLocal(2);
        TraceOperation 049087 (Store (Con 1) (Var (Local 4)));
        SetLocal 1 GetLocal(4);
        Jump: 049090
      } else {
        Jump: 049090
      }
    }
  } else {
    Jump: 049095
  }
LocOp 049090:
  TraceOperation 049090 (Inc (Con 4));
  SetLocal 4 Add(GetLocal(4),1);
  TraceOperation 049092 (Jump 049060);
  Jump: 049060
LocOp 049095:
  TraceOperation 049095 (Jl (Var (Local 3)) (Con 0) (Branch F (Dloc 049102)));
  if (LessThan(GetLocal(3),0)) {
    TraceOperation 049099 (Ret (Con -1));
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult -1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 049102
  }
LocOp 049102:
  TraceOperation 049102 (Loadw (Con 10067) (Var (Local 1)) (Local 4));
  Let b1 = M[Offset(010067,Mul(2,GetLocal(1)))];
  Let b2 = M[Offset(Offset(010067,Mul(2,GetLocal(1))),1)];
  SetLocal 4 MakeHiLo(b1,b2);
  TraceOperation 049108 (Storew (Con 10067) (Var (Local 1)) (Con -1));
  SetByte Offset(010067,Mul(2,GetLocal(1))) 255;
  SetByte Offset(Offset(010067,Mul(2,GetLocal(1))),1) 255;
  Jump: 049115
LocOp 049115:
  TraceOperation 049115 (Ret (Var (Local 4)));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult GetLocal(4);
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 049120:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 049121
LocOp 049121:
  TraceOperation 049121 (Store (Con 1) (Con -1));
  SetLocal 1 -1;
  TraceOperation 049126 (Store (Con 3) (Con -1000));
  SetLocal 3 -1000;
  TraceOperation 049131 (Store (Con 4) (Con 0));
  SetLocal 4 0;
  Jump: 049134
LocOp 049134:
  TraceOperation 049134 (Jl (Var (Local 4)) (Var (Global 175)) (Branch F (Dloc 049171)));
  Let b1 = M[007556];
  Let b2 = M[007557];
  if (LessThan(GetLocal(4),MakeHiLo(b1,b2))) {
    TraceOperation 049138 (Loadw (Con 10323) (Var (Local 4)) (Local 2));
    Let b3 = M[Offset(010323,Mul(2,GetLocal(4)))];
    Let b4 = M[Offset(Offset(010323,Mul(2,GetLocal(4))),1)];
    SetLocal 2 MakeHiLo(b3,b4);
    Jump: 049144
  } else {
    Jump: 049171
  }
LocOp 049144:
  TraceOperation 049144 (Je [Var (Local 2),Var (Local 3)] (Branch F (Dloc 049153)));
  if (Equal(GetLocal(2),GetLocal(3))) {
    TraceOperation 049148 (Store (Con 1) (Con -1));
    SetLocal 1 -1;
    Jump: 049153
  } else {
    Jump: 049153
  }
LocOp 049153:
  TraceOperation 049153 (Jg (Var (Local 2)) (Var (Local 3)) (Branch F (Dloc 049166)));
  if (GreaterThan(GetLocal(2),GetLocal(3))) {
    TraceOperation 049157 (Store (Con 3) (Var (Local 2)));
    SetLocal 3 GetLocal(2);
    TraceOperation 049160 (Loadw (Con 10067) (Var (Local 4)) (Local 1));
    Let b1 = M[Offset(010067,Mul(2,GetLocal(4)))];
    Let b2 = M[Offset(Offset(010067,Mul(2,GetLocal(4))),1)];
    SetLocal 1 MakeHiLo(b1,b2);
    Jump: 049166
  } else {
    Jump: 049166
  }
LocOp 049166:
  TraceOperation 049166 (Inc (Con 4));
  SetLocal 4 Add(GetLocal(4),1);
  TraceOperation 049168 (Jump 049134);
  Jump: 049134
LocOp 049171:
  TraceOperation 049171 (Ret (Var (Local 1)));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult GetLocal(1);
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 049176:
  MakeRoutineFrame 9;
  if (LessThanByte(num_actuals,9)) {
    SetLocal 9 0;
    if (LessThanByte(num_actuals,8)) {
      SetLocal 8 0;
      if (LessThanByte(num_actuals,7)) {
        SetLocal 7 0;
        if (LessThanByte(num_actuals,6)) {
          SetLocal 6 0;
          if (LessThanByte(num_actuals,5)) {
            SetLocal 5 0;
            if (LessThanByte(num_actuals,4)) {
              SetLocal 4 0;
              if (LessThanByte(num_actuals,3)) {
                SetLocal 3 0;
                if (LessThanByte(num_actuals,2)) {
                  SetLocal 2 0;
                  if (LessThanByte(num_actuals,1)) {
                    SetLocal 1 0;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  Jump: 049177
LocOp 049177:
  TraceOperation 049177 (Je [Var (Local 1),Var (Local 2)] (Branch T Dtrue));
  if (Equal(GetLocal(1),GetLocal(2))) {
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    TraceOperation 049181 (Jz (Var (Local 1)) (Branch T Dfalse));
    if (IsZero(GetLocal(1))) {
      PopFrame;
      PopReturnAddress return_address_2;
      SetResult 0;
      JumpIndirect: (return) return_address_2
    } else {
      TraceOperation 049184 (Jz (Var (Local 2)) (Branch T Dfalse));
      if (IsZero(GetLocal(2))) {
        PopFrame;
        PopReturnAddress return_address_3;
        SetResult 0;
        JumpIndirect: (return) return_address_3
      } else {
        TraceOperation 049187 (Get_parent (Var (Local 1)) Sp);
        Let b4 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),6)];
        Let b5 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),6),1)];
        PushStack MakeHiLo(b4,b5);
        TraceOperation 049190 (Je [Var Sp,Con 6] (Branch T Dfalse));
        PopStack popped6;
        if (Equal(popped6,6)) {
          PopFrame;
          PopReturnAddress return_address_7;
          SetResult 0;
          JumpIndirect: (return) return_address_7
        } else {
          TraceOperation 049194 (Get_parent (Var (Local 2)) Sp);
          Let b8 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),6)];
          Let b9 = M[Offset(Offset(Offset(000378,Mul(GetLocal(2),14)),6),1)];
          PushStack MakeHiLo(b8,b9);
          TraceOperation 049197 (Je [Var Sp,Con 6] (Branch T Dfalse));
          PopStack popped10;
          if (Equal(popped10,6)) {
            PopFrame;
            PopReturnAddress return_address_11;
            SetResult 0;
            JumpIndirect: (return) return_address_11
          } else {
            TraceOperation 049201 (Get_prop (Var (Local 1)) (Con 30) (Global 239));
            Let b12 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),12)];
            Let b13 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),12),1)];
            Let b14 = M[Address(MakeHiLo(b12,b13))];
            Let loop_var15 = DeAddress(Offset(Address(MakeHiLo(b12,b13)),Add(Mul(2,Widen(b14)),1)));
            Label 16: {
              Let b17 = M[Address(loop_var15)];
              if (IsZeroByte(b17)) {
                Let b18 = M[000324];
                Let b19 = M[000325];
                SetByte 007684 b18;
                SetByte 007685 b19;
              } else {
                if (TestBit(b17,7)) {
                  Let b20 = M[Offset(Address(loop_var15),1)];
                  if (Equal(30,Widen(BwAnd(b17,63)))) {
                    if (Equal(Widen(BwAnd(b20,63)),2)) {
                      Let b21 = M[Offset(Address(loop_var15),2)];
                      Let b22 = M[Offset(Offset(Address(loop_var15),2),1)];
                      SetByte 007684 b21;
                      SetByte 007685 b22;
                    } else {
                      Let b23 = M[Offset(Address(loop_var15),2)];
                      SetByte 007684 HiByte(Widen(b23));
                      SetByte 007685 LoByte(Widen(b23));
                    }
                  } else {
                    Assign loop_var15 = DeAddress(Offset(Offset(Address(loop_var15),2),Widen(BwAnd(b20,63))));
                    Goto: Label 16
                  }
                } else {
                  if (TestBit(b17,6)) {
                    if (Equal(30,Widen(BwAnd(b17,63)))) {
                      Let b24 = M[Offset(Address(loop_var15),1)];
                      Let b25 = M[Offset(Offset(Address(loop_var15),1),1)];
                      SetByte 007684 b24;
                      SetByte 007685 b25;
                    } else {
                      Assign loop_var15 = DeAddress(Offset(Offset(Address(loop_var15),1),2));
                      Goto: Label 16
                    }
                  } else {
                    if (Equal(30,Widen(BwAnd(b17,63)))) {
                      Let b26 = M[Offset(Address(loop_var15),1)];
                      SetByte 007684 HiByte(Widen(b26));
                      SetByte 007685 LoByte(Widen(b26));
                    } else {
                      Assign loop_var15 = DeAddress(Offset(Offset(Address(loop_var15),1),1));
                      Goto: Label 16
                    }
                  }
                }
              }
            }
            TraceOperation 049205 (Push (Var (Global 239)));
            Let b27 = M[007684];
            Let b28 = M[007685];
            PushStack MakeHiLo(b27,b28);
            TraceOperation 049208 (Jz (Var Sp) (Branch F (Dloc 049221)));
            PopStack popped29;
            if (IsZero(popped29)) {
              TraceOperation 049211 (Get_prop (Var (Local 2)) (Con 30) (Global 239));
              Let b30 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),12)];
              Let b31 = M[Offset(Offset(Offset(000378,Mul(GetLocal(2),14)),12),1)];
              Let b32 = M[Address(MakeHiLo(b30,b31))];
              Let loop_var33 = DeAddress(Offset(Address(MakeHiLo(b30,b31)),Add(Mul(2,Widen(b32)),1)));
              Label 34: {
                Let b35 = M[Address(loop_var33)];
                if (IsZeroByte(b35)) {
                  Let b36 = M[000324];
                  Let b37 = M[000325];
                  SetByte 007684 b36;
                  SetByte 007685 b37;
                } else {
                  if (TestBit(b35,7)) {
                    Let b38 = M[Offset(Address(loop_var33),1)];
                    if (Equal(30,Widen(BwAnd(b35,63)))) {
                      if (Equal(Widen(BwAnd(b38,63)),2)) {
                        Let b39 = M[Offset(Address(loop_var33),2)];
                        Let b40 = M[Offset(Offset(Address(loop_var33),2),1)];
                        SetByte 007684 b39;
                        SetByte 007685 b40;
                      } else {
                        Let b41 = M[Offset(Address(loop_var33),2)];
                        SetByte 007684 HiByte(Widen(b41));
                        SetByte 007685 LoByte(Widen(b41));
                      }
                    } else {
                      Assign loop_var33 = DeAddress(Offset(Offset(Address(loop_var33),2),Widen(BwAnd(b38,63))));
                      Goto: Label 34
                    }
                  } else {
                    if (TestBit(b35,6)) {
                      if (Equal(30,Widen(BwAnd(b35,63)))) {
                        Let b42 = M[Offset(Address(loop_var33),1)];
                        Let b43 = M[Offset(Offset(Address(loop_var33),1),1)];
                        SetByte 007684 b42;
                        SetByte 007685 b43;
                      } else {
                        Assign loop_var33 = DeAddress(Offset(Offset(Address(loop_var33),1),2));
                        Goto: Label 34
                      }
                    } else {
                      if (Equal(30,Widen(BwAnd(b35,63)))) {
                        Let b44 = M[Offset(Address(loop_var33),1)];
                        SetByte 007684 HiByte(Widen(b44));
                        SetByte 007685 LoByte(Widen(b44));
                      } else {
                        Assign loop_var33 = DeAddress(Offset(Offset(Address(loop_var33),1),1));
                        Goto: Label 34
                      }
                    }
                  }
                }
              }
              TraceOperation 049215 (Push (Var (Global 239)));
              Let b45 = M[007684];
              Let b46 = M[007685];
              PushStack MakeHiLo(b45,b46);
              TraceOperation 049218 (Jz (Var Sp) (Branch T (Dloc 049275)));
              PopStack popped47;
              if (IsZero(popped47)) {
                Jump: 049275
              } else {
                Jump: 049221
              }
            } else {
              Jump: 049221
            }
          }
        }
      }
    }
  }
LocOp 049221:
  TraceOperation 049221 (Get_prop (Var (Local 2)) (Con 30) (Global 239));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),12)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(2),14)),12),1)];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let loop_var4 = DeAddress(Offset(Address(MakeHiLo(b1,b2)),Add(Mul(2,Widen(b3)),1)));
  Label 5: {
    Let b6 = M[Address(loop_var4)];
    if (IsZeroByte(b6)) {
      Let b7 = M[000324];
      Let b8 = M[000325];
      SetByte 007684 b7;
      SetByte 007685 b8;
    } else {
      if (TestBit(b6,7)) {
        Let b9 = M[Offset(Address(loop_var4),1)];
        if (Equal(30,Widen(BwAnd(b6,63)))) {
          if (Equal(Widen(BwAnd(b9,63)),2)) {
            Let b10 = M[Offset(Address(loop_var4),2)];
            Let b11 = M[Offset(Offset(Address(loop_var4),2),1)];
            SetByte 007684 b10;
            SetByte 007685 b11;
          } else {
            Let b12 = M[Offset(Address(loop_var4),2)];
            SetByte 007684 HiByte(Widen(b12));
            SetByte 007685 LoByte(Widen(b12));
          }
        } else {
          Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),2),Widen(BwAnd(b9,63))));
          Goto: Label 5
        }
      } else {
        if (TestBit(b6,6)) {
          if (Equal(30,Widen(BwAnd(b6,63)))) {
            Let b13 = M[Offset(Address(loop_var4),1)];
            Let b14 = M[Offset(Offset(Address(loop_var4),1),1)];
            SetByte 007684 b13;
            SetByte 007685 b14;
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),2));
            Goto: Label 5
          }
        } else {
          if (Equal(30,Widen(BwAnd(b6,63)))) {
            Let b15 = M[Offset(Address(loop_var4),1)];
            SetByte 007684 HiByte(Widen(b15));
            SetByte 007685 LoByte(Widen(b15));
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),1));
            Goto: Label 5
          }
        }
      }
    }
  }
  TraceOperation 049225 (Push (Var (Global 239)));
  Let b16 = M[007684];
  Let b17 = M[007685];
  PushStack MakeHiLo(b16,b17);
  TraceOperation 049228 (Get_prop (Var (Local 1)) (Con 30) (Global 239));
  Let b18 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),12)];
  Let b19 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),12),1)];
  Let b20 = M[Address(MakeHiLo(b18,b19))];
  Let loop_var21 = DeAddress(Offset(Address(MakeHiLo(b18,b19)),Add(Mul(2,Widen(b20)),1)));
  Label 22: {
    Let b23 = M[Address(loop_var21)];
    if (IsZeroByte(b23)) {
      Let b24 = M[000324];
      Let b25 = M[000325];
      SetByte 007684 b24;
      SetByte 007685 b25;
    } else {
      if (TestBit(b23,7)) {
        Let b26 = M[Offset(Address(loop_var21),1)];
        if (Equal(30,Widen(BwAnd(b23,63)))) {
          if (Equal(Widen(BwAnd(b26,63)),2)) {
            Let b27 = M[Offset(Address(loop_var21),2)];
            Let b28 = M[Offset(Offset(Address(loop_var21),2),1)];
            SetByte 007684 b27;
            SetByte 007685 b28;
          } else {
            Let b29 = M[Offset(Address(loop_var21),2)];
            SetByte 007684 HiByte(Widen(b29));
            SetByte 007685 LoByte(Widen(b29));
          }
        } else {
          Assign loop_var21 = DeAddress(Offset(Offset(Address(loop_var21),2),Widen(BwAnd(b26,63))));
          Goto: Label 22
        }
      } else {
        if (TestBit(b23,6)) {
          if (Equal(30,Widen(BwAnd(b23,63)))) {
            Let b30 = M[Offset(Address(loop_var21),1)];
            Let b31 = M[Offset(Offset(Address(loop_var21),1),1)];
            SetByte 007684 b30;
            SetByte 007685 b31;
          } else {
            Assign loop_var21 = DeAddress(Offset(Offset(Address(loop_var21),1),2));
            Goto: Label 22
          }
        } else {
          if (Equal(30,Widen(BwAnd(b23,63)))) {
            Let b32 = M[Offset(Address(loop_var21),1)];
            SetByte 007684 HiByte(Widen(b32));
            SetByte 007685 LoByte(Widen(b32));
          } else {
            Assign loop_var21 = DeAddress(Offset(Offset(Address(loop_var21),1),1));
            Goto: Label 22
          }
        }
      }
    }
  }
  TraceOperation 049232 (Push (Var (Global 239)));
  Let b33 = M[007684];
  Let b34 = M[007685];
  PushStack MakeHiLo(b33,b34);
  TraceOperation 049235 (Je [Var Sp,Var Sp] (Branch F Dfalse));
  PopStack popped35;
  PopStack popped36;
  if (Equal(popped35,popped36)) {
    TraceOperation 049239 (Store (Con 85) (Con 4099));
    SetByte 007344 16;
    SetByte 007345 3;
    TraceOperation 049244 (Store (Con 86) (Var (Local 1)));
    SetByte 007346 HiByte(GetLocal(1));
    SetByte 007347 LoByte(GetLocal(1));
    TraceOperation 049247 (Store (Con 87) (Var (Local 2)));
    SetByte 007348 HiByte(GetLocal(2));
    SetByte 007349 LoByte(GetLocal(2));
    TraceOperation 049250 (Store (Con 8) (Var (Global 75)));
    Let b37 = M[007356];
    Let b38 = M[007357];
    SetLocal 8 MakeHiLo(b37,b38);
    TraceOperation 049253 (Call (Floc 040828) [Var (Local 1),Con 30] (Local 7));
    PushFrame;
    PushReturnAddress 049253;
    SetLocal 1 GetLocal(1);
    SetLocal 2 30;
    MakeRoutineFrame 2;
    Jump: 040829
  } else {
    PopFrame;
    PopReturnAddress return_address_39;
    SetResult 0;
    JumpIndirect: (return) return_address_39
  }
LocReturn 049253:
  SetLocal 7 call_result;
  TraceOperation 049260 (Store (Con 91) (Var (Local 8)));
  SetByte 007356 HiByte(GetLocal(8));
  SetByte 007357 LoByte(GetLocal(8));
  TraceOperation 049263 (Je [Var (Local 7),Con -1] (Branch T Dtrue));
  if (Equal(GetLocal(7),-1)) {
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    TraceOperation 049269 (Je [Var (Local 7),Con -2] (Branch T Dfalse));
    if (Equal(GetLocal(7),-2)) {
      PopFrame;
      PopReturnAddress return_address_2;
      SetResult 0;
      JumpIndirect: (return) return_address_2
    } else {
      Jump: 049275
    }
  }
LocOp 049275:
  TraceOperation 049275 (Get_prop_addr (Var (Local 1)) (Con 1) (Global 239));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),12)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),12),1)];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let loop_var4 = DeAddress(Offset(Address(MakeHiLo(b1,b2)),Add(Mul(2,Widen(b3)),1)));
  Label 5: {
    Let b6 = M[Address(loop_var4)];
    if (IsZeroByte(b6)) {
      SetByte 007684 0;
      SetByte 007685 0;
    } else {
      if (TestBit(b6,7)) {
        Let b7 = M[Offset(Address(loop_var4),1)];
        if (Equal(1,Widen(BwAnd(b6,63)))) {
          SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var4),2)));
          SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var4),2)));
        } else {
          Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),2),Widen(BwAnd(b7,63))));
          Goto: Label 5
        }
      } else {
        if (TestBit(b6,6)) {
          if (Equal(1,Widen(BwAnd(b6,63)))) {
            SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var4),1)));
            SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var4),1)));
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),2));
            Goto: Label 5
          }
        } else {
          if (Equal(1,Widen(BwAnd(b6,63)))) {
            SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var4),1)));
            SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var4),1)));
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),1));
            Goto: Label 5
          }
        }
      }
    }
  }
  TraceOperation 049279 (Store (Con 3) (Var (Global 239)));
  Let b8 = M[007684];
  Let b9 = M[007685];
  SetLocal 3 MakeHiLo(b8,b9);
  TraceOperation 049282 (Get_prop_addr (Var (Local 1)) (Con 1) (Global 239));
  Let b10 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),12)];
  Let b11 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),12),1)];
  Let b12 = M[Address(MakeHiLo(b10,b11))];
  Let loop_var13 = DeAddress(Offset(Address(MakeHiLo(b10,b11)),Add(Mul(2,Widen(b12)),1)));
  Label 14: {
    Let b15 = M[Address(loop_var13)];
    if (IsZeroByte(b15)) {
      SetByte 007684 0;
      SetByte 007685 0;
    } else {
      if (TestBit(b15,7)) {
        Let b16 = M[Offset(Address(loop_var13),1)];
        if (Equal(1,Widen(BwAnd(b15,63)))) {
          SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var13),2)));
          SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var13),2)));
        } else {
          Assign loop_var13 = DeAddress(Offset(Offset(Address(loop_var13),2),Widen(BwAnd(b16,63))));
          Goto: Label 14
        }
      } else {
        if (TestBit(b15,6)) {
          if (Equal(1,Widen(BwAnd(b15,63)))) {
            SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var13),1)));
            SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var13),1)));
          } else {
            Assign loop_var13 = DeAddress(Offset(Offset(Address(loop_var13),1),2));
            Goto: Label 14
          }
        } else {
          if (Equal(1,Widen(BwAnd(b15,63)))) {
            SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var13),1)));
            SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var13),1)));
          } else {
            Assign loop_var13 = DeAddress(Offset(Offset(Address(loop_var13),1),1));
            Goto: Label 14
          }
        }
      }
    }
  }
  TraceOperation 049286 (Jz (Var (Global 239)) (Branch T (Dloc 049292)));
  Let b17 = M[007684];
  Let b18 = M[007685];
  if (IsZero(MakeHiLo(b17,b18))) {
    Jump: 049292
  } else {
    TraceOperation 049289 (Get_prop_len (Var (Global 239)) (Global 239));
    Let b19 = M[007684];
    Let b20 = M[007685];
    if (IsZero(MakeHiLo(b19,b20))) {
      SetByte 007684 0;
      SetByte 007685 0;
    } else {
      Let b21 = M[Offset(Address(MakeHiLo(b19,b20)),-1)];
      if (TestBit(b21,7)) {
        Let b22 = M[Offset(Address(MakeHiLo(b19,b20)),-2)];
        if (TestBit(b22,7)) {
          Let b23 = M[Offset(Offset(Address(MakeHiLo(b19,b20)),-2),1)];
          SetByte 007684 HiByte(Widen(BwAnd(b23,63)));
          SetByte 007685 LoByte(Widen(BwAnd(b23,63)));
        } else {
          if (TestBit(b22,6)) {
            SetByte 007684 0;
            SetByte 007685 2;
          } else {
            SetByte 007684 0;
            SetByte 007685 1;
          }
        }
      } else {
        Let b24 = M[Offset(Address(MakeHiLo(b19,b20)),-1)];
        if (TestBit(b24,7)) {
          Let b25 = M[Offset(Offset(Address(MakeHiLo(b19,b20)),-1),1)];
          SetByte 007684 HiByte(Widen(BwAnd(b25,63)));
          SetByte 007685 LoByte(Widen(BwAnd(b25,63)));
        } else {
          if (TestBit(b24,6)) {
            SetByte 007684 0;
            SetByte 007685 2;
          } else {
            SetByte 007684 0;
            SetByte 007685 1;
          }
        }
      }
    }
    Jump: 049292
  }
LocOp 049292:
  TraceOperation 049292 (Push (Var (Global 239)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 049295 (Div (Var Sp) (Con 2) (Local 5));
  PopStack popped3;
  SetLocal 5 Div(popped3,2);
  TraceOperation 049299 (Get_prop_addr (Var (Local 2)) (Con 1) (Global 239));
  Let b4 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),12)];
  Let b5 = M[Offset(Offset(Offset(000378,Mul(GetLocal(2),14)),12),1)];
  Let b6 = M[Address(MakeHiLo(b4,b5))];
  Let loop_var7 = DeAddress(Offset(Address(MakeHiLo(b4,b5)),Add(Mul(2,Widen(b6)),1)));
  Label 8: {
    Let b9 = M[Address(loop_var7)];
    if (IsZeroByte(b9)) {
      SetByte 007684 0;
      SetByte 007685 0;
    } else {
      if (TestBit(b9,7)) {
        Let b10 = M[Offset(Address(loop_var7),1)];
        if (Equal(1,Widen(BwAnd(b9,63)))) {
          SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var7),2)));
          SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var7),2)));
        } else {
          Assign loop_var7 = DeAddress(Offset(Offset(Address(loop_var7),2),Widen(BwAnd(b10,63))));
          Goto: Label 8
        }
      } else {
        if (TestBit(b9,6)) {
          if (Equal(1,Widen(BwAnd(b9,63)))) {
            SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var7),1)));
            SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var7),1)));
          } else {
            Assign loop_var7 = DeAddress(Offset(Offset(Address(loop_var7),1),2));
            Goto: Label 8
          }
        } else {
          if (Equal(1,Widen(BwAnd(b9,63)))) {
            SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var7),1)));
            SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var7),1)));
          } else {
            Assign loop_var7 = DeAddress(Offset(Offset(Address(loop_var7),1),1));
            Goto: Label 8
          }
        }
      }
    }
  }
  TraceOperation 049303 (Store (Con 4) (Var (Global 239)));
  Let b11 = M[007684];
  Let b12 = M[007685];
  SetLocal 4 MakeHiLo(b11,b12);
  TraceOperation 049306 (Get_prop_addr (Var (Local 2)) (Con 1) (Global 239));
  Let b13 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),12)];
  Let b14 = M[Offset(Offset(Offset(000378,Mul(GetLocal(2),14)),12),1)];
  Let b15 = M[Address(MakeHiLo(b13,b14))];
  Let loop_var16 = DeAddress(Offset(Address(MakeHiLo(b13,b14)),Add(Mul(2,Widen(b15)),1)));
  Label 17: {
    Let b18 = M[Address(loop_var16)];
    if (IsZeroByte(b18)) {
      SetByte 007684 0;
      SetByte 007685 0;
    } else {
      if (TestBit(b18,7)) {
        Let b19 = M[Offset(Address(loop_var16),1)];
        if (Equal(1,Widen(BwAnd(b18,63)))) {
          SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var16),2)));
          SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var16),2)));
        } else {
          Assign loop_var16 = DeAddress(Offset(Offset(Address(loop_var16),2),Widen(BwAnd(b19,63))));
          Goto: Label 17
        }
      } else {
        if (TestBit(b18,6)) {
          if (Equal(1,Widen(BwAnd(b18,63)))) {
            SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var16),1)));
            SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var16),1)));
          } else {
            Assign loop_var16 = DeAddress(Offset(Offset(Address(loop_var16),1),2));
            Goto: Label 17
          }
        } else {
          if (Equal(1,Widen(BwAnd(b18,63)))) {
            SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var16),1)));
            SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var16),1)));
          } else {
            Assign loop_var16 = DeAddress(Offset(Offset(Address(loop_var16),1),1));
            Goto: Label 17
          }
        }
      }
    }
  }
  TraceOperation 049310 (Jz (Var (Global 239)) (Branch T (Dloc 049316)));
  Let b20 = M[007684];
  Let b21 = M[007685];
  if (IsZero(MakeHiLo(b20,b21))) {
    Jump: 049316
  } else {
    TraceOperation 049313 (Get_prop_len (Var (Global 239)) (Global 239));
    Let b22 = M[007684];
    Let b23 = M[007685];
    if (IsZero(MakeHiLo(b22,b23))) {
      SetByte 007684 0;
      SetByte 007685 0;
    } else {
      Let b24 = M[Offset(Address(MakeHiLo(b22,b23)),-1)];
      if (TestBit(b24,7)) {
        Let b25 = M[Offset(Address(MakeHiLo(b22,b23)),-2)];
        if (TestBit(b25,7)) {
          Let b26 = M[Offset(Offset(Address(MakeHiLo(b22,b23)),-2),1)];
          SetByte 007684 HiByte(Widen(BwAnd(b26,63)));
          SetByte 007685 LoByte(Widen(BwAnd(b26,63)));
        } else {
          if (TestBit(b25,6)) {
            SetByte 007684 0;
            SetByte 007685 2;
          } else {
            SetByte 007684 0;
            SetByte 007685 1;
          }
        }
      } else {
        Let b27 = M[Offset(Address(MakeHiLo(b22,b23)),-1)];
        if (TestBit(b27,7)) {
          Let b28 = M[Offset(Offset(Address(MakeHiLo(b22,b23)),-1),1)];
          SetByte 007684 HiByte(Widen(BwAnd(b28,63)));
          SetByte 007685 LoByte(Widen(BwAnd(b28,63)));
        } else {
          if (TestBit(b27,6)) {
            SetByte 007684 0;
            SetByte 007685 2;
          } else {
            SetByte 007684 0;
            SetByte 007685 1;
          }
        }
      }
    }
    Jump: 049316
  }
LocOp 049316:
  TraceOperation 049316 (Push (Var (Global 239)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 049319 (Div (Var Sp) (Con 2) (Local 6));
  PopStack popped3;
  SetLocal 6 Div(popped3,2);
  TraceOperation 049323 (Store (Con 7) (Con 0));
  SetLocal 7 0;
  Jump: 049326
LocOp 049326:
  TraceOperation 049326 (Jl (Var (Local 7)) (Var (Local 5)) (Branch F (Dloc 049368)));
  if (LessThan(GetLocal(7),GetLocal(5))) {
    TraceOperation 049330 (Store (Con 9) (Con 0));
    SetLocal 9 0;
    TraceOperation 049333 (Store (Con 8) (Con 0));
    SetLocal 8 0;
    Jump: 049336
  } else {
    Jump: 049368
  }
LocOp 049336:
  TraceOperation 049336 (Jl (Var (Local 8)) (Var (Local 6)) (Branch F (Dloc 049360)));
  if (LessThan(GetLocal(8),GetLocal(6))) {
    TraceOperation 049340 (Loadw (Var (Local 4)) (Var (Local 8)) Sp);
    Let b1 = M[Offset(Address(GetLocal(4)),Mul(2,GetLocal(8)))];
    Let b2 = M[Offset(Offset(Address(GetLocal(4)),Mul(2,GetLocal(8))),1)];
    PushStack MakeHiLo(b1,b2);
    TraceOperation 049344 (Loadw (Var (Local 3)) (Var (Local 7)) Sp);
    Let b3 = M[Offset(Address(GetLocal(3)),Mul(2,GetLocal(7)))];
    Let b4 = M[Offset(Offset(Address(GetLocal(3)),Mul(2,GetLocal(7))),1)];
    PushStack MakeHiLo(b3,b4);
    TraceOperation 049348 (Je [Var Sp,Var Sp] (Branch F (Dloc 049355)));
    PopStack popped5;
    PopStack popped6;
    if (Equal(popped5,popped6)) {
      TraceOperation 049352 (Store (Con 9) (Con 1));
      SetLocal 9 1;
      Jump: 049355
    } else {
      Jump: 049355
    }
  } else {
    Jump: 049360
  }
LocOp 049355:
  TraceOperation 049355 (Inc (Con 8));
  SetLocal 8 Add(GetLocal(8),1);
  TraceOperation 049357 (Jump 049336);
  Jump: 049336
LocOp 049360:
  TraceOperation 049360 (Jz (Var (Local 9)) (Branch T Dfalse));
  if (IsZero(GetLocal(9))) {
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 0;
    JumpIndirect: (return) return_address_1
  } else {
    TraceOperation 049363 (Inc (Con 7));
    SetLocal 7 Add(GetLocal(7),1);
    TraceOperation 049365 (Jump 049326);
    Jump: 049326
  }
LocOp 049368:
  TraceOperation 049368 (Store (Con 8) (Con 0));
  SetLocal 8 0;
  Jump: 049371
LocOp 049371:
  TraceOperation 049371 (Jl (Var (Local 8)) (Var (Local 6)) (Branch F (Dloc 049413)));
  if (LessThan(GetLocal(8),GetLocal(6))) {
    TraceOperation 049375 (Store (Con 9) (Con 0));
    SetLocal 9 0;
    TraceOperation 049378 (Store (Con 7) (Con 0));
    SetLocal 7 0;
    Jump: 049381
  } else {
    Jump: 049413
  }
LocOp 049381:
  TraceOperation 049381 (Jl (Var (Local 7)) (Var (Local 5)) (Branch F (Dloc 049405)));
  if (LessThan(GetLocal(7),GetLocal(5))) {
    TraceOperation 049385 (Loadw (Var (Local 4)) (Var (Local 8)) Sp);
    Let b1 = M[Offset(Address(GetLocal(4)),Mul(2,GetLocal(8)))];
    Let b2 = M[Offset(Offset(Address(GetLocal(4)),Mul(2,GetLocal(8))),1)];
    PushStack MakeHiLo(b1,b2);
    TraceOperation 049389 (Loadw (Var (Local 3)) (Var (Local 7)) Sp);
    Let b3 = M[Offset(Address(GetLocal(3)),Mul(2,GetLocal(7)))];
    Let b4 = M[Offset(Offset(Address(GetLocal(3)),Mul(2,GetLocal(7))),1)];
    PushStack MakeHiLo(b3,b4);
    TraceOperation 049393 (Je [Var Sp,Var Sp] (Branch F (Dloc 049400)));
    PopStack popped5;
    PopStack popped6;
    if (Equal(popped5,popped6)) {
      TraceOperation 049397 (Store (Con 9) (Con 1));
      SetLocal 9 1;
      Jump: 049400
    } else {
      Jump: 049400
    }
  } else {
    Jump: 049405
  }
LocOp 049400:
  TraceOperation 049400 (Inc (Con 7));
  SetLocal 7 Add(GetLocal(7),1);
  TraceOperation 049402 (Jump 049381);
  Jump: 049381
LocOp 049405:
  TraceOperation 049405 (Jz (Var (Local 9)) (Branch T Dfalse));
  if (IsZero(GetLocal(9))) {
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 0;
    JumpIndirect: (return) return_address_1
  } else {
    TraceOperation 049408 (Inc (Con 8));
    SetLocal 8 Add(GetLocal(8),1);
    TraceOperation 049410 (Jump 049371);
    Jump: 049371
  }
LocOp 049413:
  TraceOperation 049413 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 049416:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 049417
LocOp 049417:
  TraceOperation 049417 (Store (Con 2) (Con 0));
  SetLocal 2 0;
  TraceOperation 049420 (Jz (Var (Local 1)) (Branch T (Dloc 049456)));
  if (IsZero(GetLocal(1))) {
    Jump: 049456
  } else {
    TraceOperation 049423 (Sub (Var (Global 140)) (Con 1) Sp);
    Let b1 = M[007486];
    Let b2 = M[007487];
    PushStack Sub(MakeHiLo(b1,b2),1);
    TraceOperation 049427 (Je [Var (Local 1),Var Sp] (Branch F (Dloc 049456)));
    PopStack popped3;
    if (Equal(GetLocal(1),popped3)) {
      TraceOperation 049431 (Loadw (Con 9683) (Var (Local 1)) Sp);
      Let b4 = M[Offset(009683,Mul(2,GetLocal(1)))];
      Let b5 = M[Offset(Offset(009683,Mul(2,GetLocal(1))),1)];
      PushStack MakeHiLo(b4,b5);
      TraceOperation 049437 (Jg (Var Sp) (Con 1) (Branch F (Dloc 049456)));
      PopStack popped6;
      if (GreaterThan(popped6,1)) {
        TraceOperation 049441 (Loadw (Con 9683) (Var (Local 1)) Sp);
        Let b7 = M[Offset(009683,Mul(2,GetLocal(1)))];
        Let b8 = M[Offset(Offset(009683,Mul(2,GetLocal(1))),1)];
        PushStack MakeHiLo(b7,b8);
        TraceOperation 049447 (Jl (Var Sp) (Con 10000) (Branch F (Dloc 049456)));
        PopStack popped9;
        if (LessThan(popped9,10000)) {
          TraceOperation 049453 (Store (Con 2) (Con 1));
          SetLocal 2 1;
          Jump: 049456
        } else {
          Jump: 049456
        }
      } else {
        Jump: 049456
      }
    } else {
      Jump: 049456
    }
  }
LocOp 049456:
  TraceOperation 049456 (Jz (Var (Local 2)) (Branch T (Dloc 049515)));
  if (IsZero(GetLocal(2))) {
    Jump: 049515
  } else {
    TraceOperation 049459 (Loadw (Con 9683) (Var (Local 1)) Sp);
    Let b1 = M[Offset(009683,Mul(2,GetLocal(1)))];
    Let b2 = M[Offset(Offset(009683,Mul(2,GetLocal(1))),1)];
    PushStack MakeHiLo(b1,b2);
    TraceOperation 049465 (CallN (Floc 078848) [Con 19,Var Sp]);
    PopStack popped3;
    PushFrame;
    PushReturnAddress 049465;
    SetLocal 1 19;
    SetLocal 2 popped3;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 078849
  }
LocReturn 049465:
  TraceOperation 049471 (Loadw (Con 9683) (Var (Local 1)) Sp);
  Let b1 = M[Offset(009683,Mul(2,GetLocal(1)))];
  Let b2 = M[Offset(Offset(009683,Mul(2,GetLocal(1))),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 049477 (Call (Floc 078928) [Con 19,Var Sp] Sp);
  PopStack popped3;
  PushFrame;
  PushReturnAddress 049477;
  SetLocal 1 19;
  SetLocal 2 popped3;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 078929
LocReturn 049477:
  PushStack call_result;
  TraceOperation 049484 (Jz (Var Sp) (Branch F (Dloc 049500)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 049487 (Print "(");
    GamePrint "(";
    TraceOperation 049490 (CallN (Floc 049532) [Var (Local 1)]);
    PushFrame;
    PushReturnAddress 049490;
    SetLocal 1 GetLocal(1);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 049533
  } else {
    Jump: 049500
  }
LocReturn 049490:
  TraceOperation 049495 (Print ")\n");
  GamePrint ")\n";
  Jump: 049500
LocOp 049500:
  TraceOperation 049500 (Loadw (Con 9683) (Var (Local 1)) Sp);
  Let b1 = M[Offset(009683,Mul(2,GetLocal(1)))];
  Let b2 = M[Offset(Offset(009683,Mul(2,GetLocal(1))),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 049506 (CallN (Floc 078972) [Con 19,Var Sp]);
  PopStack popped3;
  PushFrame;
  PushReturnAddress 049506;
  SetLocal 1 19;
  SetLocal 2 popped3;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 078973
LocReturn 049506:
  TraceOperation 049512 (Jump 049528);
  Jump: 049528
LocOp 049515:
  TraceOperation 049515 (Print "(");
  GamePrint "(";
  TraceOperation 049518 (CallN (Floc 049532) [Var (Local 1)]);
  PushFrame;
  PushReturnAddress 049518;
  SetLocal 1 GetLocal(1);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 049533
LocReturn 049518:
  TraceOperation 049523 (Print ")\n");
  GamePrint ")\n";
  Jump: 049528
LocOp 049528:
  TraceOperation 049528 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 049532:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 049533
LocOp 049533:
  TraceOperation 049533 (Jz (Var (Local 1)) (Branch F (Dloc 049564)));
  if (IsZero(GetLocal(1))) {
    TraceOperation 049536 (Store (Con 2) (Var (Global 77)));
    Let b1 = M[007360];
    Let b2 = M[007361];
    SetLocal 2 MakeHiLo(b1,b2);
    TraceOperation 049539 (Call (Floc 027092) [Var (Local 2)] Sp);
    PushFrame;
    PushReturnAddress 049539;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 1;
    Jump: 027093
  } else {
    Jump: 049564
  }
LocReturn 049539:
  PushStack call_result;
  TraceOperation 049545 (Jz (Var Sp) (Branch F (Dloc 049559)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 049548 (Call (Floc 108096) [Var (Local 2)] Sp);
    PushFrame;
    PushReturnAddress 049548;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 1;
    Jump: 108097
  } else {
    Jump: 049559
  }
LocReturn 049548:
  PushStack call_result;
  TraceOperation 049554 (Jz (Var Sp) (Branch F (Dloc 049559)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 049557 (Print_addr (Var (Local 2)));
    GamePrint GetText(Address(GetLocal(2)));
    Jump: 049559
  } else {
    Jump: 049559
  }
LocOp 049559:
  TraceOperation 049559 (Inc (Con 1));
  SetLocal 1 Add(GetLocal(1),1);
  TraceOperation 049561 (Store (Con 4) (Con 1));
  SetLocal 4 1;
  Jump: 049564
LocOp 049564:
  TraceOperation 049564 (Store (Con 3) (Var (Local 1)));
  SetLocal 3 GetLocal(1);
  Jump: 049567
LocOp 049567:
  TraceOperation 049567 (Jl (Var (Local 3)) (Var (Global 140)) (Branch F (Dloc 049676)));
  Let b1 = M[007486];
  Let b2 = M[007487];
  if (LessThan(GetLocal(3),MakeHiLo(b1,b2))) {
    TraceOperation 049572 (Loadw (Con 9683) (Var (Local 3)) (Local 2));
    Let b3 = M[Offset(009683,Mul(2,GetLocal(3)))];
    Let b4 = M[Offset(Offset(009683,Mul(2,GetLocal(3))),1)];
    SetLocal 2 MakeHiLo(b3,b4);
    TraceOperation 049578 (Je [Var (Local 2),Con -1] (Branch F (Dloc 049587)));
    if (Equal(GetLocal(2),-1)) {
      TraceOperation 049584 (Jump 049671);
      Jump: 049671
    } else {
      Jump: 049587
    }
  } else {
    Jump: 049676
  }
LocOp 049587:
  TraceOperation 049587 (Jz (Var (Local 4)) (Branch T (Dloc 049593)));
  if (IsZero(GetLocal(4))) {
    Jump: 049593
  } else {
    TraceOperation 049590 (Print_char (Con 32));
    GamePrint " ";
    Jump: 049593
  }
LocOp 049593:
  TraceOperation 049593 (Jz (Var (Local 2)) (Branch F (Dloc 049602)));
  if (IsZero(GetLocal(2))) {
    TraceOperation 049596 (Print_paddr (Con 28506));
    Note "<static Gettext address>";
    GamePrint "those things";
    TraceOperation 049599 (Jump 049668);
    Jump: 049668
  } else {
    Jump: 049602
  }
LocOp 049602:
  TraceOperation 049602 (Je [Var (Local 2),Con 1] (Branch F (Dloc 049612)));
  if (Equal(GetLocal(2),1)) {
    TraceOperation 049606 (Print_paddr (Con 28508));
    Note "<static Gettext address>";
    GamePrint "that";
    TraceOperation 049609 (Jump 049668);
    Jump: 049668
  } else {
    Jump: 049612
  }
LocOp 049612:
  TraceOperation 049612 (Jl (Var (Local 2)) (Con 10000) (Branch T (Dloc 049635)));
  if (LessThan(GetLocal(2),10000)) {
    Jump: 049635
  } else {
    TraceOperation 049618 (Sub (Var (Local 2)) (Con 10000) Sp);
    PushStack Sub(GetLocal(2),10000);
    TraceOperation 049624 (Call (Floc 025052) [Var Sp] Sp);
    PopStack popped1;
    PushFrame;
    PushReturnAddress 049624;
    SetLocal 1 popped1;
    MakeRoutineFrame 1;
    Jump: 025053
  }
LocReturn 049624:
  PushStack call_result;
  TraceOperation 049630 (Print_addr (Var Sp));
  PopStack popped1;
  GamePrint GetText(Address(popped1));
  TraceOperation 049632 (Jump 049668);
  Jump: 049668
LocOp 049635:
  TraceOperation 049635 (Jin (Var (Local 2)) (Con 6) (Branch F (Dloc 049663)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),6)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(2),14)),6),1)];
  if (Equal(6,MakeHiLo(b1,b2))) {
    TraceOperation 049639 (Call (Floc 027168) [Var (Global 77)] Sp);
    Let b3 = M[007360];
    Let b4 = M[007361];
    PushFrame;
    PushReturnAddress 049639;
    SetLocal 1 MakeHiLo(b3,b4);
    MakeRoutineFrame 1;
    Jump: 027169
  } else {
    Jump: 049663
  }
LocReturn 049639:
  PushStack call_result;
  TraceOperation 049645 (Jz (Var Sp) (Branch T (Dloc 049663)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 049663
  } else {
    TraceOperation 049648 (Get_prop (Var (Local 2)) (Con 23) (Global 239));
    Let b2 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),12)];
    Let b3 = M[Offset(Offset(Offset(000378,Mul(GetLocal(2),14)),12),1)];
    Let b4 = M[Address(MakeHiLo(b2,b3))];
    Let loop_var5 = DeAddress(Offset(Address(MakeHiLo(b2,b3)),Add(Mul(2,Widen(b4)),1)));
    Label 6: {
      Let b7 = M[Address(loop_var5)];
      if (IsZeroByte(b7)) {
        Let b8 = M[000310];
        Let b9 = M[000311];
        SetByte 007684 b8;
        SetByte 007685 b9;
      } else {
        if (TestBit(b7,7)) {
          Let b10 = M[Offset(Address(loop_var5),1)];
          if (Equal(23,Widen(BwAnd(b7,63)))) {
            if (Equal(Widen(BwAnd(b10,63)),2)) {
              Let b11 = M[Offset(Address(loop_var5),2)];
              Let b12 = M[Offset(Offset(Address(loop_var5),2),1)];
              SetByte 007684 b11;
              SetByte 007685 b12;
            } else {
              Let b13 = M[Offset(Address(loop_var5),2)];
              SetByte 007684 HiByte(Widen(b13));
              SetByte 007685 LoByte(Widen(b13));
            }
          } else {
            Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),2),Widen(BwAnd(b10,63))));
            Goto: Label 6
          }
        } else {
          if (TestBit(b7,6)) {
            if (Equal(23,Widen(BwAnd(b7,63)))) {
              Let b14 = M[Offset(Address(loop_var5),1)];
              Let b15 = M[Offset(Offset(Address(loop_var5),1),1)];
              SetByte 007684 b14;
              SetByte 007685 b15;
            } else {
              Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),1),2));
              Goto: Label 6
            }
          } else {
            if (Equal(23,Widen(BwAnd(b7,63)))) {
              Let b16 = M[Offset(Address(loop_var5),1)];
              SetByte 007684 HiByte(Widen(b16));
              SetByte 007685 LoByte(Widen(b16));
            } else {
              Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),1),1));
              Goto: Label 6
            }
          }
        }
      }
    }
    TraceOperation 049652 (Push (Var (Global 239)));
    Let b17 = M[007684];
    Let b18 = M[007685];
    PushStack MakeHiLo(b17,b18);
    TraceOperation 049655 (CallN (Floc 026892) [Var Sp]);
    PopStack popped19;
    PushFrame;
    PushReturnAddress 049655;
    SetLocal 1 popped19;
    MakeRoutineFrame 1;
    Jump: 026893
  }
LocReturn 049655:
  TraceOperation 049660 (Jump 049668);
  Jump: 049668
LocOp 049663:
  TraceOperation 049663 (CallN (Floc 081916) [Var (Local 2)]);
  PushFrame;
  PushReturnAddress 049663;
  SetLocal 1 GetLocal(2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 081917
LocReturn 049663:
  Jump: 049668
LocOp 049668:
  TraceOperation 049668 (Store (Con 4) (Con 1));
  SetLocal 4 1;
  Jump: 049671
LocOp 049671:
  TraceOperation 049671 (Inc (Con 3));
  SetLocal 3 Add(GetLocal(3),1);
  TraceOperation 049673 (Jump 049567);
  Jump: 049567
LocOp 049676:
  TraceOperation 049676 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 049680:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 049681
LocOp 049681:
  TraceOperation 049681 (Store (Con 165) (Var (Global 148)));
  Let b1 = M[007502];
  Let b2 = M[007503];
  SetByte 007504 b1;
  SetByte 007505 b2;
  TraceOperation 049684 (Jz (Var (Global 80)) (Branch T (Dloc 049692)));
  Let b3 = M[007366];
  Let b4 = M[007367];
  if (IsZero(MakeHiLo(b3,b4))) {
    Jump: 049692
  } else {
    TraceOperation 049687 (Store (Con 97) (Var (Global 80)));
    Let b5 = M[007366];
    Let b6 = M[007367];
    SetByte 007368 b5;
    SetByte 007369 b6;
    TraceOperation 049690 (Ret (Con 18));
    PopFrame;
    PopReturnAddress return_address_7;
    SetResult 18;
    JumpIndirect: (return) return_address_7
  }
LocOp 049692:
  TraceOperation 049692 (Dec (Con 91));
  Let b1 = M[007356];
  Let b2 = M[007357];
  SetByte 007356 HiByte(Sub(MakeHiLo(b1,b2),1));
  SetByte 007357 LoByte(Sub(MakeHiLo(b1,b2),1));
  TraceOperation 049694 (Call (Floc 041168) [] (Local 2));
  PushFrame;
  PushReturnAddress 049694;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  SetLocal 2 0;
  SetLocal 1 0;
  Jump: 041169
LocReturn 049694:
  SetLocal 2 call_result;
  TraceOperation 049698 (Store (Con 3) (Con 5));
  SetLocal 3 5;
  TraceOperation 049701 (Je [Var (Local 2),Var (Global 62)] (Branch F (Dloc 049714)));
  Let b1 = M[007330];
  Let b2 = M[007331];
  if (Equal(GetLocal(2),MakeHiLo(b1,b2))) {
    TraceOperation 049705 (Store (Con 189) (Var (Global 62)));
    Let b3 = M[007330];
    Let b4 = M[007331];
    SetByte 007552 b3;
    SetByte 007553 b4;
    TraceOperation 049708 (Store (Con 190) (Var (Global 63)));
    Let b5 = M[007332];
    Let b6 = M[007333];
    SetByte 007554 b5;
    SetByte 007555 b6;
    TraceOperation 049711 (Store (Con 3) (Con 14));
    SetLocal 3 14;
    Jump: 049714
  } else {
    Jump: 049714
  }
LocOp 049714:
  TraceOperation 049714 (Jg (Var (Global 50)) (Var (Local 3)) (Branch F (Dloc 049720)));
  Let b1 = M[007306];
  Let b2 = M[007307];
  if (GreaterThan(MakeHiLo(b1,b2),GetLocal(3))) {
    TraceOperation 049718 (Ret (Var (Global 50)));
    Let b3 = M[007306];
    Let b4 = M[007307];
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult MakeHiLo(b3,b4);
    JumpIndirect: (return) return_address_5
  } else {
    Jump: 049720
  }
LocOp 049720:
  TraceOperation 049720 (Ret (Var (Local 3)));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult GetLocal(3);
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 049724:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 049725
LocOp 049725:
  TraceOperation 049725 (Loadw (Con 8338) (Con 0) (Local 2));
  Let b1 = M[008338];
  Let b2 = M[008339];
  SetLocal 2 MakeHiLo(b1,b2);
  TraceOperation 049731 (Je [Var (Local 2),Con 63] (Branch F (Dloc 049739)));
  if (Equal(GetLocal(2),63)) {
    TraceOperation 049735 (Store (Con 60) (Con 1));
    SetByte 007294 0;
    SetByte 007295 1;
    TraceOperation 049738 Rtrue;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 049739
  }
LocOp 049739:
  TraceOperation 049739 (Store (Con 3) (Con 1));
  SetLocal 3 1;
  Jump: 049742
LocOp 049742:
  TraceOperation 049742 (Jg (Var (Local 3)) (Var (Local 2)) (Branch T (Dloc 049761)));
  if (GreaterThan(GetLocal(3),GetLocal(2))) {
    Jump: 049761
  } else {
    TraceOperation 049746 (Loadw (Con 8338) (Var (Local 3)) Sp);
    Let b1 = M[Offset(008338,Mul(2,GetLocal(3)))];
    Let b2 = M[Offset(Offset(008338,Mul(2,GetLocal(3))),1)];
    PushStack MakeHiLo(b1,b2);
    TraceOperation 049752 (Je [Var (Local 1),Var Sp] (Branch T Dtrue));
    PopStack popped3;
    if (Equal(GetLocal(1),popped3)) {
      PopFrame;
      PopReturnAddress return_address_4;
      SetResult 1;
      JumpIndirect: (return) return_address_4
    } else {
      TraceOperation 049756 (Inc (Con 3));
      SetLocal 3 Add(GetLocal(3),1);
      TraceOperation 049758 (Jump 049742);
      Jump: 049742
    }
  }
LocOp 049761:
  TraceOperation 049761 (Inc (Con 2));
  SetLocal 2 Add(GetLocal(2),1);
  TraceOperation 049763 (Storew (Con 8338) (Var (Local 2)) (Var (Local 1)));
  SetByte Offset(008338,Mul(2,GetLocal(2))) HiByte(GetLocal(1));
  SetByte Offset(Offset(008338,Mul(2,GetLocal(2))),1) LoByte(GetLocal(1));
  TraceOperation 049769 (Storew (Con 8338) (Con 0) (Var (Local 2)));
  SetByte 008338 HiByte(GetLocal(2));
  SetByte 008339 LoByte(GetLocal(2));
  TraceOperation 049775 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 049776:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 049777
LocOp 049777:
  TraceOperation 049777 (Loadw (Con 8338) (Con 0) (Local 2));
  Let b1 = M[008338];
  Let b2 = M[008339];
  SetLocal 2 MakeHiLo(b1,b2);
  TraceOperation 049783 (Store (Con 3) (Con 1));
  SetLocal 3 1;
  Jump: 049786
LocOp 049786:
  TraceOperation 049786 (Jg (Var (Local 3)) (Var (Local 2)) (Branch T (Dloc 049845)));
  if (GreaterThan(GetLocal(3),GetLocal(2))) {
    Jump: 049845
  } else {
    TraceOperation 049790 (Loadw (Con 8338) (Var (Local 3)) Sp);
    Let b1 = M[Offset(008338,Mul(2,GetLocal(3)))];
    Let b2 = M[Offset(Offset(008338,Mul(2,GetLocal(3))),1)];
    PushStack MakeHiLo(b1,b2);
    TraceOperation 049796 (Je [Var (Local 1),Var Sp] (Branch F (Dloc 049840)));
    PopStack popped3;
    if (Equal(GetLocal(1),popped3)) {
      TraceOperation 049800 (Store (Con 4) (Var (Local 3)));
      SetLocal 4 GetLocal(3);
      Jump: 049803
    } else {
      Jump: 049840
    }
  }
LocOp 049803:
  TraceOperation 049803 (Jg (Var (Local 4)) (Var (Local 2)) (Branch T (Dloc 049828)));
  if (GreaterThan(GetLocal(4),GetLocal(2))) {
    Jump: 049828
  } else {
    TraceOperation 049807 (Add (Var (Local 4)) (Con 1) Sp);
    PushStack Add(GetLocal(4),1);
    TraceOperation 049811 (Loadw (Con 8338) (Var Sp) Sp);
    PopStack popped1;
    Let b2 = M[Offset(008338,Mul(2,popped1))];
    Let b3 = M[Offset(Offset(008338,Mul(2,popped1)),1)];
    PushStack MakeHiLo(b2,b3);
    TraceOperation 049817 (Storew (Con 8338) (Var (Local 4)) (Var Sp));
    PopStack popped4;
    SetByte Offset(008338,Mul(2,GetLocal(4))) HiByte(popped4);
    SetByte Offset(Offset(008338,Mul(2,GetLocal(4))),1) LoByte(popped4);
    TraceOperation 049823 (Inc (Con 4));
    SetLocal 4 Add(GetLocal(4),1);
    TraceOperation 049825 (Jump 049803);
    Jump: 049803
  }
LocOp 049828:
  TraceOperation 049828 (Dec (Con 2));
  SetLocal 2 Sub(GetLocal(2),1);
  TraceOperation 049830 (Push (Var (Local 2)));
  PushStack GetLocal(2);
  TraceOperation 049833 (Storew (Con 8338) (Con 0) (Var Sp));
  PopStack popped1;
  SetByte 008338 HiByte(popped1);
  SetByte 008339 LoByte(popped1);
  TraceOperation 049839 Rfalse;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult 0;
  JumpIndirect: (return) return_address_2
LocOp 049840:
  TraceOperation 049840 (Inc (Con 3));
  SetLocal 3 Add(GetLocal(3),1);
  TraceOperation 049842 (Jump 049786);
  Jump: 049786
LocOp 049845:
  TraceOperation 049845 (Ret (Con 10));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 10;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 049848:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 049849
LocOp 049849:
  TraceOperation 049849 (Loadw (Con 8338) (Con 0) (Local 2));
  Let b1 = M[008338];
  Let b2 = M[008339];
  SetLocal 2 MakeHiLo(b1,b2);
  TraceOperation 049855 (Store (Con 3) (Con 1));
  SetLocal 3 1;
  Jump: 049858
LocOp 049858:
  TraceOperation 049858 (Jg (Var (Local 3)) (Var (Local 2)) (Branch T (Dloc 049885)));
  if (GreaterThan(GetLocal(3),GetLocal(2))) {
    Jump: 049885
  } else {
    TraceOperation 049862 (Loadw (Con 8338) (Var (Local 3)) (Local 4));
    Let b1 = M[Offset(008338,Mul(2,GetLocal(3)))];
    Let b2 = M[Offset(Offset(008338,Mul(2,GetLocal(3))),1)];
    SetLocal 4 MakeHiLo(b1,b2);
    TraceOperation 049868 (Test_attr (Var (Local 4)) (Var (Local 1)) (Branch T (Dloc 049880)));
    Let b3 = M[Offset(Offset(000378,Mul(GetLocal(4),14)),Div8(GetLocal(1)))];
    if (TestBit(b3,SevenMinus(LoByte(Mod(GetLocal(1),8))))) {
      Jump: 049880
    } else {
      TraceOperation 049872 (CallN (Floc 049776) [Var (Local 4)]);
      PushFrame;
      PushReturnAddress 049872;
      SetLocal 1 GetLocal(4);
      MakeRoutineFrame 4;
      SetLocal 4 0;
      SetLocal 3 0;
      SetLocal 2 0;
      Jump: 049777
    }
  }
LocReturn 049872:
  TraceOperation 049877 (Jump 049849);
  Jump: 049849
LocOp 049880:
  TraceOperation 049880 (Inc (Con 3));
  SetLocal 3 Add(GetLocal(3),1);
  TraceOperation 049882 (Jump 049858);
  Jump: 049858
LocOp 049885:
  TraceOperation 049885 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 049888:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 049889
LocOp 049889:
  TraceOperation 049889 (Store (Con 91) (Var (Global 178)));
  Let b1 = M[007562];
  Let b2 = M[007563];
  SetByte 007356 b1;
  SetByte 007357 b2;
  TraceOperation 049892 (Jz (Var (Local 2)) (Branch F (Dloc 049903)));
  if (IsZero(GetLocal(2))) {
    TraceOperation 049895 (CallN (Floc 050300) [Var (Local 1)]);
    PushFrame;
    PushReturnAddress 049895;
    SetLocal 1 GetLocal(1);
    MakeRoutineFrame 8;
    SetLocal 8 0;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 050301
  } else {
    Jump: 049903
  }
LocReturn 049895:
  TraceOperation 049900 (Jump 049908);
  Jump: 049908
LocOp 049903:
  TraceOperation 049903 (CallN (Floc 050540) [Var (Local 1)]);
  PushFrame;
  PushReturnAddress 049903;
  SetLocal 1 GetLocal(1);
  MakeRoutineFrame 1;
  Jump: 050541
LocReturn 049903:
  Jump: 049908
LocOp 049908:
  TraceOperation 049908 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 049912:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 049913
LocOp 049913:
  TraceOperation 049913 (Jl (Var (Global 85)) (Con 2) (Branch T (Dloc 049928)));
  Let b1 = M[007376];
  Let b2 = M[007377];
  if (LessThan(MakeHiLo(b1,b2),2)) {
    Jump: 049928
  } else {
    TraceOperation 049917 (Sub (Var (Global 85)) (Con 2) Sp);
    Let b3 = M[007376];
    Let b4 = M[007377];
    PushStack Sub(MakeHiLo(b3,b4),2);
    TraceOperation 049921 (CallN (Floc 050300) [Var (Local 1),Con 0,Var Sp]);
    PopStack popped5;
    PushFrame;
    PushReturnAddress 049921;
    SetLocal 1 GetLocal(1);
    SetLocal 2 0;
    SetLocal 3 popped5;
    MakeRoutineFrame 8;
    SetLocal 8 0;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    Jump: 050301
  }
LocReturn 049921:
  Jump: 049928
LocOp 049928:
  TraceOperation 049928 (Je [Var (Global 85),Con 1] (Branch F (Dloc 049945)));
  Let b1 = M[007376];
  Let b2 = M[007377];
  if (Equal(MakeHiLo(b1,b2),1)) {
    TraceOperation 049932 (Call (Floc 036800) [Var (Local 1)] Sp);
    PushFrame;
    PushReturnAddress 049932;
    SetLocal 1 GetLocal(1);
    MakeRoutineFrame 5;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 036801
  } else {
    Jump: 049945
  }
LocReturn 049932:
  PushStack call_result;
  TraceOperation 049938 (Je [Var Sp,Con 1] (Branch F (Dloc 049945)));
  PopStack popped1;
  if (Equal(popped1,1)) {
    TraceOperation 049942 (Store (Con 102) (Con 1));
    SetByte 007378 0;
    SetByte 007379 1;
    Jump: 049945
  } else {
    Jump: 049945
  }
LocOp 049945:
  TraceOperation 049945 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 049948:
  MakeRoutineFrame 7;
  if (LessThanByte(num_actuals,7)) {
    SetLocal 7 0;
    if (LessThanByte(num_actuals,6)) {
      SetLocal 6 0;
      if (LessThanByte(num_actuals,5)) {
        SetLocal 5 0;
        if (LessThanByte(num_actuals,4)) {
          SetLocal 4 0;
          if (LessThanByte(num_actuals,3)) {
            SetLocal 3 0;
            if (LessThanByte(num_actuals,2)) {
              SetLocal 2 0;
              if (LessThanByte(num_actuals,1)) {
                SetLocal 1 0;
              }
            }
          }
        }
      }
    }
  }
  Jump: 049949
LocOp 049949:
  TraceOperation 049949 (Store (Con 6) (Var (Global 70)));
  Let b1 = M[007346];
  Let b2 = M[007347];
  SetLocal 6 MakeHiLo(b1,b2);
  TraceOperation 049952 (Store (Con 7) (Var (Global 71)));
  Let b3 = M[007348];
  Let b4 = M[007349];
  SetLocal 7 MakeHiLo(b3,b4);
  TraceOperation 049955 (Store (Con 86) (Var (Local 1)));
  SetByte 007346 HiByte(GetLocal(1));
  SetByte 007347 LoByte(GetLocal(1));
  TraceOperation 049958 (Store (Con 87) (Con 0));
  SetByte 007348 0;
  SetByte 007349 0;
  TraceOperation 049961 (Store (Con 3) (Var (Global 37)));
  Let b5 = M[007280];
  Let b6 = M[007281];
  SetLocal 3 MakeHiLo(b5,b6);
  TraceOperation 049964 (Store (Con 4) (Var (Global 38)));
  Let b7 = M[007282];
  Let b8 = M[007283];
  SetLocal 4 MakeHiLo(b7,b8);
  TraceOperation 049967 (Store (Con 5) (Var (Global 79)));
  Let b9 = M[007364];
  Let b10 = M[007365];
  SetLocal 5 MakeHiLo(b9,b10);
  TraceOperation 049970 (Store (Con 95) (Con 6));
  SetByte 007364 0;
  SetByte 007365 6;
  TraceOperation 049973 (Jz (Var (Local 2)) (Branch F (Dloc 049982)));
  if (IsZero(GetLocal(2))) {
    TraceOperation 049976 (Store (Con 53) (Var (Global 31)));
    Let b11 = M[007268];
    Let b12 = M[007269];
    SetByte 007280 b11;
    SetByte 007281 b12;
    TraceOperation 049979 (Jump 049985);
    Jump: 049985
  } else {
    Jump: 049982
  }
LocOp 049982:
  TraceOperation 049982 (Store (Con 53) (Var (Local 2)));
  SetByte 007280 HiByte(GetLocal(2));
  SetByte 007281 LoByte(GetLocal(2));
  Jump: 049985
LocOp 049985:
  TraceOperation 049985 (Call (Floc 037240) [Var (Global 37)] (Global 38));
  Let b1 = M[007280];
  Let b2 = M[007281];
  PushFrame;
  PushReturnAddress 049985;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 037241
LocReturn 049985:
  SetByte 007282 HiByte(call_result);
  SetByte 007283 LoByte(call_result);
  TraceOperation 049991 (CallN (Floc 050080) [Var (Global 38),Var (Global 37),Con 0]);
  Let b1 = M[007282];
  Let b2 = M[007283];
  Let b3 = M[007280];
  Let b4 = M[007281];
  PushFrame;
  PushReturnAddress 049991;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 MakeHiLo(b3,b4);
  SetLocal 3 0;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 050081
LocReturn 049991:
  TraceOperation 049998 (Store (Con 95) (Var (Local 5)));
  SetByte 007364 HiByte(GetLocal(5));
  SetByte 007365 LoByte(GetLocal(5));
  TraceOperation 050001 (Store (Con 53) (Var (Local 3)));
  SetByte 007280 HiByte(GetLocal(3));
  SetByte 007281 LoByte(GetLocal(3));
  TraceOperation 050004 (Store (Con 54) (Var (Local 4)));
  SetByte 007282 HiByte(GetLocal(4));
  SetByte 007283 LoByte(GetLocal(4));
  TraceOperation 050007 (Store (Con 86) (Var (Local 6)));
  SetByte 007346 HiByte(GetLocal(6));
  SetByte 007347 LoByte(GetLocal(6));
  TraceOperation 050010 (Store (Con 6) (Var (Global 71)));
  Let b1 = M[007348];
  Let b2 = M[007349];
  SetLocal 6 MakeHiLo(b1,b2);
  TraceOperation 050013 (Store (Con 87) (Var (Local 7)));
  SetByte 007348 HiByte(GetLocal(7));
  SetByte 007349 LoByte(GetLocal(7));
  TraceOperation 050016 (Ret (Var (Local 6)));
  PopFrame;
  PopReturnAddress return_address_3;
  SetResult GetLocal(6);
  JumpIndirect: (return) return_address_3
--------------------------------------------------
LocRoutine 050020:
  MakeRoutineFrame 6;
  if (LessThanByte(num_actuals,6)) {
    SetLocal 6 0;
    if (LessThanByte(num_actuals,5)) {
      SetLocal 5 0;
      if (LessThanByte(num_actuals,4)) {
        SetLocal 4 0;
        if (LessThanByte(num_actuals,3)) {
          SetLocal 3 0;
          if (LessThanByte(num_actuals,2)) {
            SetLocal 2 0;
            if (LessThanByte(num_actuals,1)) {
              SetLocal 1 0;
            }
          }
        }
      }
    }
  }
  Jump: 050021
LocOp 050021:
  TraceOperation 050021 (Store (Con 3) (Var (Global 70)));
  Let b1 = M[007346];
  Let b2 = M[007347];
  SetLocal 3 MakeHiLo(b1,b2);
  TraceOperation 050024 (Store (Con 4) (Var (Global 79)));
  Let b3 = M[007364];
  Let b4 = M[007365];
  SetLocal 4 MakeHiLo(b3,b4);
  TraceOperation 050027 (Store (Con 5) (Var (Global 37)));
  Let b5 = M[007280];
  Let b6 = M[007281];
  SetLocal 5 MakeHiLo(b5,b6);
  TraceOperation 050030 (Store (Con 6) (Var (Global 38)));
  Let b7 = M[007282];
  Let b8 = M[007283];
  SetLocal 6 MakeHiLo(b7,b8);
  TraceOperation 050033 (Store (Con 86) (Var (Local 1)));
  SetByte 007346 HiByte(GetLocal(1));
  SetByte 007347 LoByte(GetLocal(1));
  TraceOperation 050036 (Jz (Var (Local 2)) (Branch F (Dloc 050045)));
  if (IsZero(GetLocal(2))) {
    TraceOperation 050039 (Store (Con 53) (Var (Global 31)));
    Let b9 = M[007268];
    Let b10 = M[007269];
    SetByte 007280 b9;
    SetByte 007281 b10;
    TraceOperation 050042 (Jump 050048);
    Jump: 050048
  } else {
    Jump: 050045
  }
LocOp 050045:
  TraceOperation 050045 (Store (Con 53) (Var (Local 2)));
  SetByte 007280 HiByte(GetLocal(2));
  SetByte 007281 LoByte(GetLocal(2));
  Jump: 050048
LocOp 050048:
  TraceOperation 050048 (Call (Floc 037240) [Var (Global 37)] (Global 38));
  Let b1 = M[007280];
  Let b2 = M[007281];
  PushFrame;
  PushReturnAddress 050048;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 037241
LocReturn 050048:
  SetByte 007282 HiByte(call_result);
  SetByte 007283 LoByte(call_result);
  TraceOperation 050054 (Store (Con 95) (Con 5));
  SetByte 007364 0;
  SetByte 007365 5;
  TraceOperation 050057 (CallN (Floc 050080) [Var (Global 38),Var (Global 37),Con 0]);
  Let b1 = M[007282];
  Let b2 = M[007283];
  Let b3 = M[007280];
  Let b4 = M[007281];
  PushFrame;
  PushReturnAddress 050057;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 MakeHiLo(b3,b4);
  SetLocal 3 0;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 050081
LocReturn 050057:
  TraceOperation 050064 (Store (Con 86) (Var (Local 3)));
  SetByte 007346 HiByte(GetLocal(3));
  SetByte 007347 LoByte(GetLocal(3));
  TraceOperation 050067 (Store (Con 95) (Var (Local 4)));
  SetByte 007364 HiByte(GetLocal(4));
  SetByte 007365 LoByte(GetLocal(4));
  TraceOperation 050070 (Store (Con 53) (Var (Local 5)));
  SetByte 007280 HiByte(GetLocal(5));
  SetByte 007281 LoByte(GetLocal(5));
  TraceOperation 050073 (Store (Con 54) (Var (Local 6)));
  SetByte 007282 HiByte(GetLocal(6));
  SetByte 007283 LoByte(GetLocal(6));
  TraceOperation 050076 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 050080:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 050081
LocOp 050081:
  TraceOperation 050081 (Jz (Var (Local 1)) (Branch F (Dloc 050085)));
  if (IsZero(GetLocal(1))) {
    TraceOperation 050084 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 050085
  }
LocOp 050085:
  TraceOperation 050085 (Jz (Var (Global 80)) (Branch T (Dloc 050097)));
  Let b1 = M[007366];
  Let b2 = M[007367];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 050097
  } else {
    TraceOperation 050088 (Store (Con 98) (Con 2));
    SetByte 007370 0;
    SetByte 007371 2;
    TraceOperation 050091 (Call (Fvar (Global 80)) [] Sp);
    Let b3 = M[007366];
    Let b4 = M[007367];
    if (IsZeroAddress(PackedAddress Z5(MakeHiLo(b3,b4)))) {
      PushStack 0;
      Jump: 050094
    } else {
      PushFrame;
      PushReturnAddress 050091;
      SetNumberActuals 0;
      JumpIndirect: (routine) PackedAddress Z5(MakeHiLo(b3,b4))
    }
  }
LocReturn 050091:
  PushStack call_result;
  Jump: 050094
LocOp 050094:
  TraceOperation 050094 (Jz (Var Sp) (Branch F Dtrue));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 050097
  } else {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  }
LocOp 050097:
  TraceOperation 050097 (CallN (Floc 078848) [Con 16,Var (Global 37)]);
  Let b1 = M[007280];
  Let b2 = M[007281];
  PushFrame;
  PushReturnAddress 050097;
  SetLocal 1 16;
  SetLocal 2 MakeHiLo(b1,b2);
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 078849
LocReturn 050097:
  TraceOperation 050103 (Call (Floc 078928) [Con 16,Var (Global 37)] Sp);
  Let b1 = M[007280];
  Let b2 = M[007281];
  PushFrame;
  PushReturnAddress 050103;
  SetLocal 1 16;
  SetLocal 2 MakeHiLo(b1,b2);
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 078929
LocReturn 050103:
  PushStack call_result;
  TraceOperation 050110 (Jz (Var Sp) (Branch F (Dloc 050249)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 050114 (Jz (Var (Global 79)) (Branch F (Dloc 050147)));
    Let b2 = M[007364];
    Let b3 = M[007365];
    if (IsZero(MakeHiLo(b2,b3))) {
      TraceOperation 050117 (Je [Var (Local 3),Con 5] (Branch F (Dloc 050147)));
      if (Equal(GetLocal(3),5)) {
        TraceOperation 050121 (Je [Var (Global 83),Con -1] (Branch T (Dloc 050147)));
        Let b4 = M[007372];
        Let b5 = M[007373];
        if (Equal(MakeHiLo(b4,b5),-1)) {
          Jump: 050147
        } else {
          TraceOperation 050127 (Call (Floc 037144) [Var (Global 83)] Sp);
          Let b6 = M[007372];
          Let b7 = M[007373];
          PushFrame;
          PushReturnAddress 050127;
          SetLocal 1 MakeHiLo(b6,b7);
          MakeRoutineFrame 1;
          Jump: 037145
        }
      } else {
        Jump: 050147
      }
    } else {
      Jump: 050147
    }
  } else {
    Jump: 050249
  }
LocReturn 050127:
  PushStack call_result;
  TraceOperation 050133 (Je [Var Sp,Con 1] (Branch F (Dloc 050144)));
  PopStack popped1;
  if (Equal(popped1,1)) {
    TraceOperation 050137 (CallN (Floc 050256) [Var (Global 83),Con 0,Var (Local 3)]);
    Let b2 = M[007372];
    Let b3 = M[007373];
    PushFrame;
    PushReturnAddress 050137;
    SetLocal 1 MakeHiLo(b2,b3);
    SetLocal 2 0;
    SetLocal 3 GetLocal(3);
    MakeRoutineFrame 5;
    SetLocal 5 0;
    SetLocal 4 0;
    Jump: 050257
  } else {
    Jump: 050144
  }
LocReturn 050137:
  Jump: 050144
LocOp 050144:
  TraceOperation 050144 (Jump 050209);
  Jump: 050209
LocOp 050147:
  TraceOperation 050147 (Jz (Var (Global 79)) (Branch F (Dloc 050166)));
  Let b1 = M[007364];
  Let b2 = M[007365];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 050150 (Je [Var (Local 3),Con 6] (Branch T (Dloc 050166)));
    if (Equal(GetLocal(3),6)) {
      Jump: 050166
    } else {
      TraceOperation 050154 (Jz (Var (Global 162)) (Branch F (Dloc 050166)));
      Let b3 = M[007530];
      Let b4 = M[007531];
      if (IsZero(MakeHiLo(b3,b4))) {
        TraceOperation 050157 (Je [Var (Local 1),Var (Global 38)] (Branch F (Dloc 050166)));
        Let b5 = M[007282];
        Let b6 = M[007283];
        if (Equal(GetLocal(1),MakeHiLo(b5,b6))) {
          TraceOperation 050161 (CallN (Floc 050256) [Con 6]);
          PushFrame;
          PushReturnAddress 050161;
          SetLocal 1 6;
          MakeRoutineFrame 5;
          SetLocal 5 0;
          SetLocal 4 0;
          SetLocal 3 0;
          SetLocal 2 0;
          Jump: 050257
        } else {
          Jump: 050166
        }
      } else {
        Jump: 050166
      }
    }
  } else {
    Jump: 050166
  }
LocReturn 050161:
  Jump: 050166
LocOp 050166:
  TraceOperation 050166 (Test_attr (Var (Local 1)) (Con 17) (Branch T (Dloc 050174)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),2)];
  if (TestBit(b1,6)) {
    Jump: 050174
  } else {
    TraceOperation 050170 (Test_attr (Var (Local 1)) (Con 4) (Branch F (Dloc 050179)));
    Let b2 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),0)];
    if (TestBit(b2,3)) {
      Jump: 050174
    } else {
      Jump: 050179
    }
  }
LocOp 050174:
  TraceOperation 050174 (CallN (Floc 050540) [Var (Local 1)]);
  PushFrame;
  PushReturnAddress 050174;
  SetLocal 1 GetLocal(1);
  MakeRoutineFrame 1;
  Jump: 050541
LocReturn 050174:
  Jump: 050179
LocOp 050179:
  TraceOperation 050179 (CallN (Floc 050256) [Var (Local 1),Var (Local 2),Var (Local 3)]);
  PushFrame;
  PushReturnAddress 050179;
  SetLocal 1 GetLocal(1);
  SetLocal 2 GetLocal(2);
  SetLocal 3 GetLocal(3);
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 050257
LocReturn 050179:
  TraceOperation 050186 (Jz (Var (Local 2)) (Branch T (Dloc 050209)));
  if (IsZero(GetLocal(2))) {
    Jump: 050209
  } else {
    TraceOperation 050189 (Test_attr (Var (Local 2)) (Con 17) (Branch T (Dloc 050197)));
    Let b1 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),2)];
    if (TestBit(b1,6)) {
      Jump: 050197
    } else {
      TraceOperation 050193 (Test_attr (Var (Local 2)) (Con 4) (Branch F (Dloc 050202)));
      Let b2 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),0)];
      if (TestBit(b2,3)) {
        Jump: 050197
      } else {
        Jump: 050202
      }
    }
  }
LocOp 050197:
  TraceOperation 050197 (CallN (Floc 050540) [Var (Local 2)]);
  PushFrame;
  PushReturnAddress 050197;
  SetLocal 1 GetLocal(2);
  MakeRoutineFrame 1;
  Jump: 050541
LocReturn 050197:
  Jump: 050202
LocOp 050202:
  TraceOperation 050202 (CallN (Floc 050256) [Var (Local 2),Con 0,Var (Local 3)]);
  PushFrame;
  PushReturnAddress 050202;
  SetLocal 1 GetLocal(2);
  SetLocal 2 0;
  SetLocal 3 GetLocal(3);
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 050257
LocReturn 050202:
  Jump: 050209
LocOp 050209:
  TraceOperation 050209 (Je [Con 8,Var (Local 1),Var (Local 2)] (Branch F (Dloc 050249)));
  if (LogOr(Equal(8,GetLocal(1)),Equal(8,GetLocal(2)))) {
    TraceOperation 050215 (CallN (Floc 050300) [Var (Global 37),Var (Global 37),Var (Local 3)]);
    Let b1 = M[007280];
    Let b2 = M[007281];
    Let b3 = M[007280];
    Let b4 = M[007281];
    PushFrame;
    PushReturnAddress 050215;
    SetLocal 1 MakeHiLo(b1,b2);
    SetLocal 2 MakeHiLo(b3,b4);
    SetLocal 3 GetLocal(3);
    MakeRoutineFrame 8;
    SetLocal 8 0;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    Jump: 050301
  } else {
    Jump: 050249
  }
LocReturn 050215:
  TraceOperation 050222 (Get_parent (Var (Global 37)) Sp);
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),6)];
  Let b4 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),6),1)];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 050225 (Pull (Con 255));
  PopStack popped5;
  SetByte 007684 HiByte(popped5);
  SetByte 007685 LoByte(popped5);
  TraceOperation 050228 (Test_attr (Var (Global 239)) (Con 17) (Branch T (Dloc 050236)));
  Let b6 = M[007684];
  Let b7 = M[007685];
  Let b8 = M[Offset(Offset(000378,Mul(MakeHiLo(b6,b7),14)),2)];
  if (TestBit(b8,6)) {
    Jump: 050236
  } else {
    TraceOperation 050232 (Test_attr (Var (Global 239)) (Con 4) (Branch F (Dloc 050249)));
    Let b9 = M[007684];
    Let b10 = M[007685];
    Let b11 = M[Offset(Offset(000378,Mul(MakeHiLo(b9,b10),14)),0)];
    if (TestBit(b11,3)) {
      Jump: 050236
    } else {
      Jump: 050249
    }
  }
LocOp 050236:
  TraceOperation 050236 (Get_parent (Var (Global 37)) Sp);
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),6)];
  Let b4 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),6),1)];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 050239 (Get_parent (Var (Global 37)) Sp);
  Let b5 = M[007280];
  Let b6 = M[007281];
  Let b7 = M[Offset(Offset(000378,Mul(MakeHiLo(b5,b6),14)),6)];
  Let b8 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b5,b6),14)),6),1)];
  PushStack MakeHiLo(b7,b8);
  TraceOperation 050242 (CallN (Floc 050300) [Var Sp,Var Sp,Var (Local 3)]);
  PopStack popped9;
  PopStack popped10;
  PushFrame;
  PushReturnAddress 050242;
  SetLocal 1 popped9;
  SetLocal 2 popped10;
  SetLocal 3 GetLocal(3);
  MakeRoutineFrame 8;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 050301
LocReturn 050242:
  Jump: 050249
LocOp 050249:
  TraceOperation 050249 (CallN (Floc 078972) [Con 16,Var (Global 37)]);
  Let b1 = M[007280];
  Let b2 = M[007281];
  PushFrame;
  PushReturnAddress 050249;
  SetLocal 1 16;
  SetLocal 2 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 078973
LocReturn 050249:
  TraceOperation 050255 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 050256:
  MakeRoutineFrame 5;
  if (LessThanByte(num_actuals,5)) {
    SetLocal 5 0;
    if (LessThanByte(num_actuals,4)) {
      SetLocal 4 0;
      if (LessThanByte(num_actuals,3)) {
        SetLocal 3 0;
        if (LessThanByte(num_actuals,2)) {
          SetLocal 2 0;
          if (LessThanByte(num_actuals,1)) {
            SetLocal 1 0;
          }
        }
      }
    }
  }
  Jump: 050257
LocOp 050257:
  TraceOperation 050257 (Jz (Var (Local 1)) (Branch T Dtrue));
  if (IsZero(GetLocal(1))) {
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    TraceOperation 050260 (Get_child (Var (Local 1)) (Local 4) (Branch F (Dloc 050264)));
    Let b2 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),10)];
    Let b3 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),10),1)];
    SetLocal 4 MakeHiLo(b2,b3);
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 050264
    } else {
      Jump: 050264
    }
  }
LocOp 050264:
  TraceOperation 050264 (Jz (Var (Local 4)) (Branch T (Dloc 050298)));
  if (IsZero(GetLocal(4))) {
    Jump: 050298
  } else {
    TraceOperation 050267 (Get_sibling (Var (Local 4)) (Local 5) (Branch F (Dloc 050271)));
    Let b1 = M[Offset(Offset(000378,Mul(GetLocal(4),14)),8)];
    Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(4),14)),8),1)];
    SetLocal 5 MakeHiLo(b1,b2);
    if (IsZero(MakeHiLo(b1,b2))) {
      Jump: 050271
    } else {
      Jump: 050271
    }
  }
LocOp 050271:
  TraceOperation 050271 (Je [Var (Local 1),Var (Global 37)] (Branch T (Dloc 050285)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  if (Equal(GetLocal(1),MakeHiLo(b1,b2))) {
    Jump: 050285
  } else {
    TraceOperation 050275 (Call (Floc 104664) [Var (Local 1),Var (Local 4)] Sp);
    PushFrame;
    PushReturnAddress 050275;
    SetLocal 1 GetLocal(1);
    SetLocal 2 GetLocal(4);
    MakeRoutineFrame 2;
    Jump: 104665
  }
LocReturn 050275:
  PushStack call_result;
  TraceOperation 050282 (Jz (Var Sp) (Branch F (Dloc 050292)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 050285
  } else {
    Jump: 050292
  }
LocOp 050285:
  TraceOperation 050285 (CallN (Floc 050300) [Var (Local 4),Var (Local 2),Var (Local 3)]);
  PushFrame;
  PushReturnAddress 050285;
  SetLocal 1 GetLocal(4);
  SetLocal 2 GetLocal(2);
  SetLocal 3 GetLocal(3);
  MakeRoutineFrame 8;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 050301
LocReturn 050285:
  Jump: 050292
LocOp 050292:
  TraceOperation 050292 (Store (Con 4) (Var (Local 5)));
  SetLocal 4 GetLocal(5);
  TraceOperation 050295 (Jump 050264);
  Jump: 050264
LocOp 050298:
  TraceOperation 050298 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 050300:
  MakeRoutineFrame 8;
  if (LessThanByte(num_actuals,8)) {
    SetLocal 8 0;
    if (LessThanByte(num_actuals,7)) {
      SetLocal 7 0;
      if (LessThanByte(num_actuals,6)) {
        SetLocal 6 0;
        if (LessThanByte(num_actuals,5)) {
          SetLocal 5 0;
          if (LessThanByte(num_actuals,4)) {
            SetLocal 4 0;
            if (LessThanByte(num_actuals,3)) {
              SetLocal 3 0;
              if (LessThanByte(num_actuals,2)) {
                SetLocal 2 0;
                if (LessThanByte(num_actuals,1)) {
                  SetLocal 1 0;
                }
              }
            }
          }
        }
      }
    }
  }
  Jump: 050301
LocOp 050301:
  TraceOperation 050301 (CallN (Floc 050540) [Var (Local 1)]);
  PushFrame;
  PushReturnAddress 050301;
  SetLocal 1 GetLocal(1);
  MakeRoutineFrame 1;
  Jump: 050541
LocReturn 050301:
  TraceOperation 050306 (Je [Var (Local 1),Var (Local 2)] (Branch T (Dloc 050381)));
  if (Equal(GetLocal(1),GetLocal(2))) {
    Jump: 050381
  } else {
    TraceOperation 050311 (Call (Floc 026172) [Var (Local 1),Con 13] Sp);
    PushFrame;
    PushReturnAddress 050311;
    SetLocal 1 GetLocal(1);
    SetLocal 2 13;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  }
LocReturn 050311:
  PushStack call_result;
  TraceOperation 050319 (Jz (Var Sp) (Branch F (Dloc 050343)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 050322 (Call (Floc 026172) [Var (Local 1),Con 20] Sp);
    PushFrame;
    PushReturnAddress 050322;
    SetLocal 1 GetLocal(1);
    SetLocal 2 20;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 050343
  }
LocReturn 050322:
  PushStack call_result;
  TraceOperation 050330 (Jz (Var Sp) (Branch F (Dloc 050343)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 050333 (Call (Floc 037144) [Var (Local 1)] Sp);
    PushFrame;
    PushReturnAddress 050333;
    SetLocal 1 GetLocal(1);
    MakeRoutineFrame 1;
    Jump: 037145
  } else {
    Jump: 050343
  }
LocReturn 050333:
  PushStack call_result;
  TraceOperation 050339 (Je [Var Sp,Con 1] (Branch F (Dloc 050381)));
  PopStack popped1;
  if (Equal(popped1,1)) {
    Jump: 050343
  } else {
    Jump: 050381
  }
LocOp 050343:
  TraceOperation 050343 (Get_child (Var (Local 1)) (Local 7) (Branch F (Dloc 050347)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),10)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),10),1)];
  SetLocal 7 MakeHiLo(b1,b2);
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 050347
  } else {
    Jump: 050347
  }
LocOp 050347:
  TraceOperation 050347 (Jz (Var (Local 7)) (Branch T (Dloc 050381)));
  if (IsZero(GetLocal(7))) {
    Jump: 050381
  } else {
    TraceOperation 050350 (Get_sibling (Var (Local 7)) (Local 8) (Branch F (Dloc 050354)));
    Let b1 = M[Offset(Offset(000378,Mul(GetLocal(7),14)),8)];
    Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(7),14)),8),1)];
    SetLocal 8 MakeHiLo(b1,b2);
    if (IsZero(MakeHiLo(b1,b2))) {
      Jump: 050354
    } else {
      Jump: 050354
    }
  }
LocOp 050354:
  TraceOperation 050354 (Je [Var (Local 1),Var (Global 37)] (Branch T (Dloc 050368)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  if (Equal(GetLocal(1),MakeHiLo(b1,b2))) {
    Jump: 050368
  } else {
    TraceOperation 050358 (Call (Floc 104664) [Var (Local 1),Var (Local 7)] Sp);
    PushFrame;
    PushReturnAddress 050358;
    SetLocal 1 GetLocal(1);
    SetLocal 2 GetLocal(7);
    MakeRoutineFrame 2;
    Jump: 104665
  }
LocReturn 050358:
  PushStack call_result;
  TraceOperation 050365 (Jz (Var Sp) (Branch F (Dloc 050375)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 050368
  } else {
    Jump: 050375
  }
LocOp 050368:
  TraceOperation 050368 (CallN (Floc 050300) [Var (Local 7),Var (Local 2),Var (Local 3)]);
  PushFrame;
  PushReturnAddress 050368;
  SetLocal 1 GetLocal(7);
  SetLocal 2 GetLocal(2);
  SetLocal 3 GetLocal(3);
  MakeRoutineFrame 8;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 050301
LocReturn 050368:
  Jump: 050375
LocOp 050375:
  TraceOperation 050375 (Store (Con 7) (Var (Local 8)));
  SetLocal 7 GetLocal(8);
  TraceOperation 050378 (Jump 050347);
  Jump: 050347
LocOp 050381:
  TraceOperation 050381 (Call (Floc 111316) [Var (Local 1),Con 19] Sp);
  PushFrame;
  PushReturnAddress 050381;
  SetLocal 1 GetLocal(1);
  SetLocal 2 19;
  MakeRoutineFrame 2;
  Jump: 111317
LocReturn 050381:
  PushStack call_result;
  TraceOperation 050388 (Jz (Var Sp) (Branch T (Dloc 050435)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 050435
  } else {
    TraceOperation 050391 (Get_prop (Var (Local 1)) (Con 19) (Global 239));
    Let b2 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),12)];
    Let b3 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),12),1)];
    Let b4 = M[Address(MakeHiLo(b2,b3))];
    Let loop_var5 = DeAddress(Offset(Address(MakeHiLo(b2,b3)),Add(Mul(2,Widen(b4)),1)));
    Label 6: {
      Let b7 = M[Address(loop_var5)];
      if (IsZeroByte(b7)) {
        Let b8 = M[000302];
        Let b9 = M[000303];
        SetByte 007684 b8;
        SetByte 007685 b9;
      } else {
        if (TestBit(b7,7)) {
          Let b10 = M[Offset(Address(loop_var5),1)];
          if (Equal(19,Widen(BwAnd(b7,63)))) {
            if (Equal(Widen(BwAnd(b10,63)),2)) {
              Let b11 = M[Offset(Address(loop_var5),2)];
              Let b12 = M[Offset(Offset(Address(loop_var5),2),1)];
              SetByte 007684 b11;
              SetByte 007685 b12;
            } else {
              Let b13 = M[Offset(Address(loop_var5),2)];
              SetByte 007684 HiByte(Widen(b13));
              SetByte 007685 LoByte(Widen(b13));
            }
          } else {
            Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),2),Widen(BwAnd(b10,63))));
            Goto: Label 6
          }
        } else {
          if (TestBit(b7,6)) {
            if (Equal(19,Widen(BwAnd(b7,63)))) {
              Let b14 = M[Offset(Address(loop_var5),1)];
              Let b15 = M[Offset(Offset(Address(loop_var5),1),1)];
              SetByte 007684 b14;
              SetByte 007685 b15;
            } else {
              Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),1),2));
              Goto: Label 6
            }
          } else {
            if (Equal(19,Widen(BwAnd(b7,63)))) {
              Let b16 = M[Offset(Address(loop_var5),1)];
              SetByte 007684 HiByte(Widen(b16));
              SetByte 007685 LoByte(Widen(b16));
            } else {
              Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),1),1));
              Goto: Label 6
            }
          }
        }
      }
    }
    TraceOperation 050395 (Store (Con 7) (Var (Global 239)));
    Let b17 = M[007684];
    Let b18 = M[007685];
    SetLocal 7 MakeHiLo(b17,b18);
    Jump: 050398
  }
LocOp 050398:
  TraceOperation 050398 (Jz (Var (Local 7)) (Branch T (Dloc 050435)));
  if (IsZero(GetLocal(7))) {
    Jump: 050435
  } else {
    TraceOperation 050401 (Get_prop (Var (Local 7)) (Con 21) (Global 239));
    Let b1 = M[Offset(Offset(000378,Mul(GetLocal(7),14)),12)];
    Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(7),14)),12),1)];
    Let b3 = M[Address(MakeHiLo(b1,b2))];
    Let loop_var4 = DeAddress(Offset(Address(MakeHiLo(b1,b2)),Add(Mul(2,Widen(b3)),1)));
    Label 5: {
      Let b6 = M[Address(loop_var4)];
      if (IsZeroByte(b6)) {
        Let b7 = M[000306];
        Let b8 = M[000307];
        SetByte 007684 b7;
        SetByte 007685 b8;
      } else {
        if (TestBit(b6,7)) {
          Let b9 = M[Offset(Address(loop_var4),1)];
          if (Equal(21,Widen(BwAnd(b6,63)))) {
            if (Equal(Widen(BwAnd(b9,63)),2)) {
              Let b10 = M[Offset(Address(loop_var4),2)];
              Let b11 = M[Offset(Offset(Address(loop_var4),2),1)];
              SetByte 007684 b10;
              SetByte 007685 b11;
            } else {
              Let b12 = M[Offset(Address(loop_var4),2)];
              SetByte 007684 HiByte(Widen(b12));
              SetByte 007685 LoByte(Widen(b12));
            }
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),2),Widen(BwAnd(b9,63))));
            Goto: Label 5
          }
        } else {
          if (TestBit(b6,6)) {
            if (Equal(21,Widen(BwAnd(b6,63)))) {
              Let b13 = M[Offset(Address(loop_var4),1)];
              Let b14 = M[Offset(Offset(Address(loop_var4),1),1)];
              SetByte 007684 b13;
              SetByte 007685 b14;
            } else {
              Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),2));
              Goto: Label 5
            }
          } else {
            if (Equal(21,Widen(BwAnd(b6,63)))) {
              Let b15 = M[Offset(Address(loop_var4),1)];
              SetByte 007684 HiByte(Widen(b15));
              SetByte 007685 LoByte(Widen(b15));
            } else {
              Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),1));
              Goto: Label 5
            }
          }
        }
      }
    }
    TraceOperation 050405 (Store (Con 8) (Var (Global 239)));
    Let b16 = M[007684];
    Let b17 = M[007685];
    SetLocal 8 MakeHiLo(b16,b17);
    TraceOperation 050408 (Je [Var (Local 1),Var (Global 37)] (Branch T (Dloc 050422)));
    Let b18 = M[007280];
    Let b19 = M[007281];
    if (Equal(GetLocal(1),MakeHiLo(b18,b19))) {
      Jump: 050422
    } else {
      TraceOperation 050412 (Call (Floc 104664) [Var (Local 1),Var (Local 7)] Sp);
      PushFrame;
      PushReturnAddress 050412;
      SetLocal 1 GetLocal(1);
      SetLocal 2 GetLocal(7);
      MakeRoutineFrame 2;
      Jump: 104665
    }
  }
LocReturn 050412:
  PushStack call_result;
  TraceOperation 050419 (Jz (Var Sp) (Branch F (Dloc 050429)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 050422
  } else {
    Jump: 050429
  }
LocOp 050422:
  TraceOperation 050422 (CallN (Floc 050300) [Var (Local 7),Con 0,Var (Local 3)]);
  PushFrame;
  PushReturnAddress 050422;
  SetLocal 1 GetLocal(7);
  SetLocal 2 0;
  SetLocal 3 GetLocal(3);
  MakeRoutineFrame 8;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 050301
LocReturn 050422:
  Jump: 050429
LocOp 050429:
  TraceOperation 050429 (Store (Con 7) (Var (Local 8)));
  SetLocal 7 GetLocal(8);
  TraceOperation 050432 (Jump 050398);
  Jump: 050398
LocOp 050435:
  TraceOperation 050435 (Get_prop_addr (Var (Local 1)) (Con 16) (Global 239));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),12)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),12),1)];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let loop_var4 = DeAddress(Offset(Address(MakeHiLo(b1,b2)),Add(Mul(2,Widen(b3)),1)));
  Label 5: {
    Let b6 = M[Address(loop_var4)];
    if (IsZeroByte(b6)) {
      SetByte 007684 0;
      SetByte 007685 0;
    } else {
      if (TestBit(b6,7)) {
        Let b7 = M[Offset(Address(loop_var4),1)];
        if (Equal(16,Widen(BwAnd(b6,63)))) {
          SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var4),2)));
          SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var4),2)));
        } else {
          Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),2),Widen(BwAnd(b7,63))));
          Goto: Label 5
        }
      } else {
        if (TestBit(b6,6)) {
          if (Equal(16,Widen(BwAnd(b6,63)))) {
            SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var4),1)));
            SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var4),1)));
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),2));
            Goto: Label 5
          }
        } else {
          if (Equal(16,Widen(BwAnd(b6,63)))) {
            SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var4),1)));
            SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var4),1)));
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),1));
            Goto: Label 5
          }
        }
      }
    }
  }
  TraceOperation 050439 (Store (Con 5) (Var (Global 239)));
  Let b8 = M[007684];
  Let b9 = M[007685];
  SetLocal 5 MakeHiLo(b8,b9);
  TraceOperation 050442 (Jz (Var (Local 5)) (Branch T (Dloc 050539)));
  if (IsZero(GetLocal(5))) {
    Jump: 050539
  } else {
    TraceOperation 050446 (Loadw (Var (Local 5)) (Con 0) Sp);
    Let b10 = M[Offset(Address(GetLocal(5)),0)];
    Let b11 = M[Offset(Offset(Address(GetLocal(5)),0),1)];
    PushStack MakeHiLo(b10,b11);
    TraceOperation 050450 (Call (Floc 040956) [Var Sp,Var (Global 117)] Sp);
    PopStack popped12;
    Let b13 = M[007440];
    Let b14 = M[007441];
    PushFrame;
    PushReturnAddress 050450;
    SetLocal 1 popped12;
    SetLocal 2 MakeHiLo(b13,b14);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 040957
  }
LocReturn 050450:
  PushStack call_result;
  TraceOperation 050457 (Jg (Var Sp) (Con 0) (Branch T (Dloc 050467)));
  PopStack popped1;
  if (GreaterThan(popped1,0)) {
    Jump: 050467
  } else {
    TraceOperation 050461 (Push (Con 0));
    PushStack 0;
    TraceOperation 050464 (Jump 050470);
    Jump: 050470
  }
LocOp 050467:
  TraceOperation 050467 (Push (Con 1));
  PushStack 1;
  Jump: 050470
LocOp 050470:
  TraceOperation 050470 (Pull (Con 4));
  PopStack popped1;
  SetLocal 4 popped1;
  TraceOperation 050473 (Jz (Var (Local 4)) (Branch T (Dloc 050492)));
  if (IsZero(GetLocal(4))) {
    Jump: 050492
  } else {
    TraceOperation 050476 (Add (Con 2) (Var (Local 3)) (Global 85));
    SetByte 007376 HiByte(Add(2,GetLocal(3)));
    SetByte 007377 LoByte(Add(2,GetLocal(3)));
    TraceOperation 050480 (CallN (Floc 040828) [Var (Local 1),Con 16]);
    PushFrame;
    PushReturnAddress 050480;
    SetLocal 1 GetLocal(1);
    SetLocal 2 16;
    MakeRoutineFrame 2;
    Jump: 040829
  }
LocReturn 050480:
  TraceOperation 050486 (Store (Con 101) (Con 0));
  SetByte 007376 0;
  SetByte 007377 0;
  TraceOperation 050489 (Jump 050539);
  Jump: 050539
LocOp 050492:
  TraceOperation 050492 (Get_prop_addr (Var (Local 1)) (Con 16) (Global 239));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),12)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),12),1)];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let loop_var4 = DeAddress(Offset(Address(MakeHiLo(b1,b2)),Add(Mul(2,Widen(b3)),1)));
  Label 5: {
    Let b6 = M[Address(loop_var4)];
    if (IsZeroByte(b6)) {
      SetByte 007684 0;
      SetByte 007685 0;
    } else {
      if (TestBit(b6,7)) {
        Let b7 = M[Offset(Address(loop_var4),1)];
        if (Equal(16,Widen(BwAnd(b6,63)))) {
          SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var4),2)));
          SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var4),2)));
        } else {
          Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),2),Widen(BwAnd(b7,63))));
          Goto: Label 5
        }
      } else {
        if (TestBit(b6,6)) {
          if (Equal(16,Widen(BwAnd(b6,63)))) {
            SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var4),1)));
            SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var4),1)));
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),2));
            Goto: Label 5
          }
        } else {
          if (Equal(16,Widen(BwAnd(b6,63)))) {
            SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var4),1)));
            SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var4),1)));
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),1));
            Goto: Label 5
          }
        }
      }
    }
  }
  TraceOperation 050496 (Jz (Var (Global 239)) (Branch T (Dloc 050502)));
  Let b8 = M[007684];
  Let b9 = M[007685];
  if (IsZero(MakeHiLo(b8,b9))) {
    Jump: 050502
  } else {
    TraceOperation 050499 (Get_prop_len (Var (Global 239)) (Global 239));
    Let b10 = M[007684];
    Let b11 = M[007685];
    if (IsZero(MakeHiLo(b10,b11))) {
      SetByte 007684 0;
      SetByte 007685 0;
    } else {
      Let b12 = M[Offset(Address(MakeHiLo(b10,b11)),-1)];
      if (TestBit(b12,7)) {
        Let b13 = M[Offset(Address(MakeHiLo(b10,b11)),-2)];
        if (TestBit(b13,7)) {
          Let b14 = M[Offset(Offset(Address(MakeHiLo(b10,b11)),-2),1)];
          SetByte 007684 HiByte(Widen(BwAnd(b14,63)));
          SetByte 007685 LoByte(Widen(BwAnd(b14,63)));
        } else {
          if (TestBit(b13,6)) {
            SetByte 007684 0;
            SetByte 007685 2;
          } else {
            SetByte 007684 0;
            SetByte 007685 1;
          }
        }
      } else {
        Let b15 = M[Offset(Address(MakeHiLo(b10,b11)),-1)];
        if (TestBit(b15,7)) {
          Let b16 = M[Offset(Offset(Address(MakeHiLo(b10,b11)),-1),1)];
          SetByte 007684 HiByte(Widen(BwAnd(b16,63)));
          SetByte 007685 LoByte(Widen(BwAnd(b16,63)));
        } else {
          if (TestBit(b15,6)) {
            SetByte 007684 0;
            SetByte 007685 2;
          } else {
            SetByte 007684 0;
            SetByte 007685 1;
          }
        }
      }
    }
    Jump: 050502
  }
LocOp 050502:
  TraceOperation 050502 (Store (Con 6) (Var (Global 239)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  SetLocal 6 MakeHiLo(b1,b2);
  TraceOperation 050505 (Store (Con 4) (Con 0));
  SetLocal 4 0;
  Jump: 050508
LocOp 050508:
  TraceOperation 050508 (Mul (Con 2) (Var (Local 4)) Sp);
  PushStack Mul(2,GetLocal(4));
  TraceOperation 050512 (Jl (Var Sp) (Var (Local 6)) (Branch F (Dloc 050539)));
  PopStack popped1;
  if (LessThan(popped1,GetLocal(6))) {
    TraceOperation 050516 (Loadw (Var (Local 5)) (Var (Local 4)) Sp);
    Let b2 = M[Offset(Address(GetLocal(5)),Mul(2,GetLocal(4)))];
    Let b3 = M[Offset(Offset(Address(GetLocal(5)),Mul(2,GetLocal(4))),1)];
    PushStack MakeHiLo(b2,b3);
    TraceOperation 050520 (Jz (Var Sp) (Branch T (Dloc 050534)));
    PopStack popped4;
    if (IsZero(popped4)) {
      Jump: 050534
    } else {
      TraceOperation 050523 (Loadw (Var (Local 5)) (Var (Local 4)) Sp);
      Let b5 = M[Offset(Address(GetLocal(5)),Mul(2,GetLocal(4)))];
      Let b6 = M[Offset(Offset(Address(GetLocal(5)),Mul(2,GetLocal(4))),1)];
      PushStack MakeHiLo(b5,b6);
      TraceOperation 050527 (CallN (Floc 050300) [Var Sp,Con 0,Var (Local 3)]);
      PopStack popped7;
      PushFrame;
      PushReturnAddress 050527;
      SetLocal 1 popped7;
      SetLocal 2 0;
      SetLocal 3 GetLocal(3);
      MakeRoutineFrame 8;
      SetLocal 8 0;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      Jump: 050301
    }
  } else {
    Jump: 050539
  }
LocReturn 050527:
  Jump: 050534
LocOp 050534:
  TraceOperation 050534 (Inc (Con 4));
  SetLocal 4 Add(GetLocal(4),1);
  TraceOperation 050536 (Jump 050508);
  Jump: 050508
LocOp 050539:
  TraceOperation 050539 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 050540:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 050541
LocOp 050541:
  TraceOperation 050541 (Push (Var (Global 70)));
  Let b1 = M[007346];
  Let b2 = M[007347];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 050544 (Push (Var (Global 79)));
  Let b3 = M[007364];
  Let b4 = M[007365];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 050547 (Store (Con 255) (Var (Global 79)));
  Let b5 = M[007364];
  Let b6 = M[007365];
  SetByte 007684 b5;
  SetByte 007685 b6;
  TraceOperation 050550 (Je [Var (Global 239),Con 6] (Branch F (Dloc 050564)));
  Let b7 = M[007684];
  Let b8 = M[007685];
  if (Equal(MakeHiLo(b7,b8),6)) {
    TraceOperation 050554 (Je [Var (Local 1),Var (Global 70)] (Branch F (Dloc 050561)));
    Let b9 = M[007346];
    Let b10 = M[007347];
    if (Equal(GetLocal(1),MakeHiLo(b9,b10))) {
      TraceOperation 050558 (Store (Con 87) (Con 1));
      SetByte 007348 0;
      SetByte 007349 1;
      Jump: 050561
    } else {
      Jump: 050561
    }
  } else {
    Jump: 050564
  }
LocOp 050561:
  TraceOperation 050561 (Jump 050595);
  Jump: 050595
LocOp 050564:
  TraceOperation 050564 (Je [Var (Global 239),Con 5] (Branch F (Dloc 050584)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),5)) {
    TraceOperation 050568 (Call (Floc 026172) [Var (Global 70),Con 3] Sp);
    Let b3 = M[007346];
    Let b4 = M[007347];
    PushFrame;
    PushReturnAddress 050568;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 3;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 050584
  }
LocReturn 050568:
  PushStack call_result;
  TraceOperation 050575 (Jz (Var Sp) (Branch T (Dloc 050581)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 050581
  } else {
    TraceOperation 050578 (CallN (Fvar (Global 70)) [Var (Local 1)]);
    Let b2 = M[007346];
    Let b3 = M[007347];
    if (IsZeroAddress(PackedAddress Z5(MakeHiLo(b2,b3)))) {
      Jump: 050581
    } else {
      PushFrame;
      PushReturnAddress 050578;
      SetLocal 1 GetLocal(1);
      SetNumberActuals 1;
      JumpIndirect: (routine) PackedAddress Z5(MakeHiLo(b2,b3))
    }
  }
LocReturn 050578:
  Jump: 050581
LocOp 050581:
  TraceOperation 050581 (Jump 050595);
  Jump: 050595
LocOp 050584:
  TraceOperation 050584 (Je [Var (Global 239),Con 0,Con 1] (Branch F (Dloc 050595)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (LogOr(Equal(MakeHiLo(b1,b2),0),Equal(MakeHiLo(b1,b2),1))) {
    TraceOperation 050590 (CallN (Floc 050604) [Var (Local 1)]);
    PushFrame;
    PushReturnAddress 050590;
    SetLocal 1 GetLocal(1);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 050605
  } else {
    Jump: 050595
  }
LocReturn 050590:
  Jump: 050595
LocOp 050595:
  TraceOperation 050595 (Pull (Con 95));
  PopStack popped1;
  SetByte 007364 HiByte(popped1);
  SetByte 007365 LoByte(popped1);
  TraceOperation 050598 (Pull (Con 86));
  PopStack popped2;
  SetByte 007346 HiByte(popped2);
  SetByte 007347 LoByte(popped2);
  TraceOperation 050601 Rtrue;
  PopFrame;
  PopReturnAddress return_address_3;
  SetResult 1;
  JumpIndirect: (return) return_address_3
--------------------------------------------------
LocRoutine 050604:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 050605
LocOp 050605:
  TraceOperation 050605 (Jg (Var (Global 178)) (Var (Global 76)) (Branch T (Dloc 050654)));
  Let b1 = M[007562];
  Let b2 = M[007563];
  Let b3 = M[007358];
  Let b4 = M[007359];
  if (GreaterThan(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    Jump: 050654
  } else {
    TraceOperation 050609 (Store (Con 91) (Var (Global 178)));
    Let b5 = M[007562];
    Let b6 = M[007563];
    SetByte 007356 b5;
    SetByte 007357 b6;
    TraceOperation 050612 (Call (Floc 051100) [] (Local 2));
    PushFrame;
    PushReturnAddress 050612;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    SetLocal 2 0;
    SetLocal 1 0;
    Jump: 051101
  }
LocReturn 050612:
  SetLocal 2 call_result;
  TraceOperation 050616 (Je [Var (Local 2),Con 1] (Branch F (Dloc 050630)));
  if (Equal(GetLocal(2),1)) {
    TraceOperation 050620 (Je [Var (Global 31),Var (Local 1)] (Branch F (Dloc 050630)));
    Let b1 = M[007268];
    Let b2 = M[007269];
    if (Equal(MakeHiLo(b1,b2),GetLocal(1))) {
      TraceOperation 050624 (CallN (Floc 048576) [Var (Local 1),Con 1]);
      PushFrame;
      PushReturnAddress 050624;
      SetLocal 1 GetLocal(1);
      SetLocal 2 1;
      MakeRoutineFrame 3;
      SetLocal 3 0;
      Jump: 048577
    } else {
      Jump: 050630
    }
  } else {
    Jump: 050630
  }
LocReturn 050624:
  Jump: 050630
LocOp 050630:
  TraceOperation 050630 (Jl (Var (Local 2)) (Con 2) (Branch T (Dloc 050654)));
  if (LessThan(GetLocal(2),2)) {
    Jump: 050654
  } else {
    TraceOperation 050634 (Jl (Var (Local 2)) (Con 128) (Branch F (Dloc 050654)));
    if (LessThan(GetLocal(2),128)) {
      TraceOperation 050638 (Loadw (Con 8997) (Var (Local 2)) Sp);
      Let b1 = M[Offset(008997,Mul(2,GetLocal(2)))];
      Let b2 = M[Offset(Offset(008997,Mul(2,GetLocal(2))),1)];
      PushStack MakeHiLo(b1,b2);
      TraceOperation 050644 (Je [Var Sp,Var (Local 1)] (Branch F (Dloc 050654)));
      PopStack popped3;
      if (Equal(popped3,GetLocal(1))) {
        TraceOperation 050648 (CallN (Floc 048576) [Var (Local 1),Con 1]);
        PushFrame;
        PushReturnAddress 050648;
        SetLocal 1 GetLocal(1);
        SetLocal 2 1;
        MakeRoutineFrame 3;
        SetLocal 3 0;
        Jump: 048577
      } else {
        Jump: 050654
      }
    } else {
      Jump: 050654
    }
  }
LocReturn 050648:
  Jump: 050654
LocOp 050654:
  TraceOperation 050654 (Store (Con 91) (Var (Global 178)));
  Let b1 = M[007562];
  Let b2 = M[007563];
  SetByte 007356 b1;
  SetByte 007357 b2;
  TraceOperation 050657 (Call (Floc 050700) [Var (Local 1)] Sp);
  PushFrame;
  PushReturnAddress 050657;
  SetLocal 1 GetLocal(1);
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 050701
LocReturn 050657:
  PushStack call_result;
  TraceOperation 050663 (Jg (Var Sp) (Con 0) (Branch F (Dloc 050697)));
  PopStack popped1;
  if (GreaterThan(popped1,0)) {
    TraceOperation 050667 (Jg (Var (Global 169)) (Con 0) (Branch F (Dloc 050697)));
    Let b2 = M[007544];
    Let b3 = M[007545];
    if (GreaterThan(MakeHiLo(b2,b3),0)) {
      TraceOperation 050671 (Je [Var (Global 178),Var (Global 169)] (Branch T (Dloc 050697)));
      Let b4 = M[007562];
      Let b5 = M[007563];
      Let b6 = M[007544];
      Let b7 = M[007545];
      if (Equal(MakeHiLo(b4,b5),MakeHiLo(b6,b7))) {
        Jump: 050697
      } else {
        TraceOperation 050675 (Store (Con 91) (Var (Global 169)));
        Let b8 = M[007544];
        Let b9 = M[007545];
        SetByte 007356 b8;
        SetByte 007357 b9;
        TraceOperation 050678 (Call (Floc 050700) [Var (Local 1)] Sp);
        PushFrame;
        PushReturnAddress 050678;
        SetLocal 1 GetLocal(1);
        MakeRoutineFrame 6;
        SetLocal 6 0;
        SetLocal 5 0;
        SetLocal 4 0;
        SetLocal 3 0;
        SetLocal 2 0;
        Jump: 050701
      }
    } else {
      Jump: 050697
    }
  } else {
    Jump: 050697
  }
LocReturn 050678:
  PushStack call_result;
  TraceOperation 050684 (Jg (Var Sp) (Con 0) (Branch F (Dloc 050694)));
  PopStack popped1;
  if (GreaterThan(popped1,0)) {
    TraceOperation 050688 (Store (Con 194) (Var (Global 169)));
    Let b2 = M[007544];
    Let b3 = M[007545];
    SetByte 007562 b2;
    SetByte 007563 b3;
    TraceOperation 050691 (CallN (Floc 045912) []);
    PushFrame;
    PushReturnAddress 050691;
    MakeRoutineFrame 0;
    Jump: 045913
  } else {
    Jump: 050694
  }
LocReturn 050691:
  Jump: 050694
LocOp 050694:
  TraceOperation 050694 (Store (Con 91) (Var (Global 178)));
  Let b1 = M[007562];
  Let b2 = M[007563];
  SetByte 007356 b1;
  SetByte 007357 b2;
  Jump: 050697
LocOp 050697:
  TraceOperation 050697 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 050700:
  MakeRoutineFrame 6;
  if (LessThanByte(num_actuals,6)) {
    SetLocal 6 0;
    if (LessThanByte(num_actuals,5)) {
      SetLocal 5 0;
      if (LessThanByte(num_actuals,4)) {
        SetLocal 4 0;
        if (LessThanByte(num_actuals,3)) {
          SetLocal 3 0;
          if (LessThanByte(num_actuals,2)) {
            SetLocal 2 0;
            if (LessThanByte(num_actuals,1)) {
              SetLocal 1 0;
            }
          }
        }
      }
    }
  }
  Jump: 050701
LocOp 050701:
  TraceOperation 050701 (Jz (Var (Local 2)) (Branch T (Dloc 050708)));
  if (IsZero(GetLocal(2))) {
    Jump: 050708
  } else {
    TraceOperation 050704 (Jz (Var (Local 1)) (Branch F (Dloc 050708)));
    if (IsZero(GetLocal(1))) {
      TraceOperation 050707 Rfalse;
      PopFrame;
      PopReturnAddress return_address_1;
      SetResult 0;
      JumpIndirect: (return) return_address_1
    } else {
      Jump: 050708
    }
  }
LocOp 050708:
  TraceOperation 050708 (Store (Con 188) (Con 0));
  SetByte 007550 0;
  SetByte 007551 0;
  TraceOperation 050711 (Jg (Var (Global 75)) (Var (Global 76)) (Branch F (Dloc 050732)));
  Let b1 = M[007356];
  Let b2 = M[007357];
  Let b3 = M[007358];
  Let b4 = M[007359];
  if (GreaterThan(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 050715 (Jz (Var (Local 2)) (Branch T (Dloc 050719)));
    if (IsZero(GetLocal(2))) {
      Jump: 050719
    } else {
      TraceOperation 050718 Rfalse;
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 0;
      JumpIndirect: (return) return_address_5
    }
  } else {
    Jump: 050732
  }
LocOp 050719:
  TraceOperation 050719 (Jz (Var (Global 162)) (Branch T (Dloc 050725)));
  Let b1 = M[007530];
  Let b2 = M[007531];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 050725
  } else {
    TraceOperation 050722 (Store (Con 188) (Con 112));
    SetByte 007550 0;
    SetByte 007551 112;
    Jump: 050725
  }
LocOp 050725:
  TraceOperation 050725 (CallN (Floc 048576) [Var (Local 1),Con 0]);
  PushFrame;
  PushReturnAddress 050725;
  SetLocal 1 GetLocal(1);
  SetLocal 2 0;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 048577
LocReturn 050725:
  TraceOperation 050731 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 050732:
  TraceOperation 050732 (Get_prop (Var (Local 1)) (Con 30) (Global 239));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),12)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),12),1)];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let loop_var4 = DeAddress(Offset(Address(MakeHiLo(b1,b2)),Add(Mul(2,Widen(b3)),1)));
  Label 5: {
    Let b6 = M[Address(loop_var4)];
    if (IsZeroByte(b6)) {
      Let b7 = M[000324];
      Let b8 = M[000325];
      SetByte 007684 b7;
      SetByte 007685 b8;
    } else {
      if (TestBit(b6,7)) {
        Let b9 = M[Offset(Address(loop_var4),1)];
        if (Equal(30,Widen(BwAnd(b6,63)))) {
          if (Equal(Widen(BwAnd(b9,63)),2)) {
            Let b10 = M[Offset(Address(loop_var4),2)];
            Let b11 = M[Offset(Offset(Address(loop_var4),2),1)];
            SetByte 007684 b10;
            SetByte 007685 b11;
          } else {
            Let b12 = M[Offset(Address(loop_var4),2)];
            SetByte 007684 HiByte(Widen(b12));
            SetByte 007685 LoByte(Widen(b12));
          }
        } else {
          Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),2),Widen(BwAnd(b9,63))));
          Goto: Label 5
        }
      } else {
        if (TestBit(b6,6)) {
          if (Equal(30,Widen(BwAnd(b6,63)))) {
            Let b13 = M[Offset(Address(loop_var4),1)];
            Let b14 = M[Offset(Offset(Address(loop_var4),1),1)];
            SetByte 007684 b13;
            SetByte 007685 b14;
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),2));
            Goto: Label 5
          }
        } else {
          if (Equal(30,Widen(BwAnd(b6,63)))) {
            Let b15 = M[Offset(Address(loop_var4),1)];
            SetByte 007684 HiByte(Widen(b15));
            SetByte 007685 LoByte(Widen(b15));
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),1));
            Goto: Label 5
          }
        }
      }
    }
  }
  TraceOperation 050736 (Push (Var (Global 239)));
  Let b16 = M[007684];
  Let b17 = M[007685];
  PushStack MakeHiLo(b16,b17);
  TraceOperation 050739 (Jz (Var Sp) (Branch T (Dloc 050832)));
  PopStack popped18;
  if (IsZero(popped18)) {
    Jump: 050832
  } else {
    TraceOperation 050743 (Store (Con 85) (Con -1));
    SetByte 007344 255;
    SetByte 007345 255;
    TraceOperation 050748 (Store (Con 6) (Var (Global 75)));
    Let b19 = M[007356];
    Let b20 = M[007357];
    SetLocal 6 MakeHiLo(b19,b20);
    TraceOperation 050751 (Call (Floc 040828) [Var (Local 1),Con 30] (Local 4));
    PushFrame;
    PushReturnAddress 050751;
    SetLocal 1 GetLocal(1);
    SetLocal 2 30;
    MakeRoutineFrame 2;
    Jump: 040829
  }
LocReturn 050751:
  SetLocal 4 call_result;
  TraceOperation 050758 (Jg (Var (Local 4)) (Con 0) (Branch F (Dloc 050826)));
  if (GreaterThan(GetLocal(4),0)) {
    TraceOperation 050763 (Add (Var (Local 6)) (Var (Local 4)) (Global 75));
    SetByte 007356 HiByte(Add(GetLocal(6),GetLocal(4)));
    SetByte 007357 LoByte(Add(GetLocal(6),GetLocal(4)));
    Jump: 050767
  } else {
    Jump: 050826
  }
LocOp 050767:
  TraceOperation 050767 (Je [Var (Global 69),Con 4098] (Branch F (Dloc 050777)));
  Let b1 = M[007344];
  Let b2 = M[007345];
  if (Equal(MakeHiLo(b1,b2),4098)) {
    TraceOperation 050773 (Or (Var (Global 172)) (Con 4) (Global 172));
    Let b3 = M[007550];
    Let b4 = M[007551];
    SetByte 007550 HiByte(Or(MakeHiLo(b3,b4),4));
    SetByte 007551 LoByte(Or(MakeHiLo(b3,b4),4));
    Jump: 050777
  } else {
    Jump: 050777
  }
LocOp 050777:
  TraceOperation 050777 (And (Var (Global 172)) (Con 4) Sp);
  Let b1 = M[007550];
  Let b2 = M[007551];
  PushStack And(MakeHiLo(b1,b2),4);
  TraceOperation 050781 (Jz (Var Sp) (Branch T (Dloc 050815)));
  PopStack popped3;
  if (IsZero(popped3)) {
    Jump: 050815
  } else {
    TraceOperation 050784 (Jz (Var (Global 170)) (Branch F (Dloc 050793)));
    Let b4 = M[007546];
    Let b5 = M[007547];
    if (IsZero(MakeHiLo(b4,b5))) {
      TraceOperation 050787 (Store (Con 4) (Con 0));
      SetLocal 4 0;
      TraceOperation 050790 (Jump 050815);
      Jump: 050815
    } else {
      Jump: 050793
    }
  }
LocOp 050793:
  TraceOperation 050793 (Jz (Var (Global 162)) (Branch F (Dloc 050805)));
  Let b1 = M[007530];
  Let b2 = M[007531];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 050796 (Store (Con 178) (Con 1));
    SetByte 007530 0;
    SetByte 007531 1;
    TraceOperation 050799 (Store (Con 179) (Con 0));
    SetByte 007532 0;
    SetByte 007533 0;
    TraceOperation 050802 (Store (Con 180) (Con 0));
    SetByte 007534 0;
    SetByte 007535 0;
    Jump: 050805
  } else {
    Jump: 050805
  }
LocOp 050805:
  TraceOperation 050805 (Or (Var (Global 163)) (Con 8) (Global 163));
  Let b1 = M[007532];
  Let b2 = M[007533];
  SetByte 007532 HiByte(Or(MakeHiLo(b1,b2),8));
  SetByte 007533 LoByte(Or(MakeHiLo(b1,b2),8));
  TraceOperation 050809 (Jz (Var (Global 164)) (Branch F (Dloc 050815)));
  Let b3 = M[007534];
  Let b4 = M[007535];
  if (IsZero(MakeHiLo(b3,b4))) {
    TraceOperation 050812 (Store (Con 180) (Con 100));
    SetByte 007534 0;
    SetByte 007535 100;
    Jump: 050815
  } else {
    Jump: 050815
  }
LocOp 050815:
  TraceOperation 050815 (Jz (Var (Local 2)) (Branch F (Dloc 050824)));
  if (IsZero(GetLocal(2))) {
    TraceOperation 050818 (CallN (Floc 048576) [Var (Local 1),Var (Local 4)]);
    PushFrame;
    PushReturnAddress 050818;
    SetLocal 1 GetLocal(1);
    SetLocal 2 GetLocal(4);
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 048577
  } else {
    Jump: 050824
  }
LocReturn 050818:
  Jump: 050824
LocOp 050824:
  TraceOperation 050824 (Ret (Var (Local 4)));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult GetLocal(4);
  JumpIndirect: (return) return_address_1
LocOp 050826:
  TraceOperation 050826 (Jz (Var (Local 4)) (Branch F (Dloc 050832)));
  if (IsZero(GetLocal(4))) {
    TraceOperation 050829 (Jump 050893);
    Jump: 050893
  } else {
    Jump: 050832
  }
LocOp 050832:
  TraceOperation 050832 (Store (Con 85) (Con -1));
  SetByte 007344 255;
  SetByte 007345 255;
  TraceOperation 050837 (Call (Floc 051100) [] (Local 5));
  PushFrame;
  PushReturnAddress 050837;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  SetLocal 2 0;
  SetLocal 1 0;
  Jump: 051101
LocReturn 050837:
  SetLocal 5 call_result;
  TraceOperation 050841 (Je [Var (Local 5),Con 1] (Branch F (Dloc 050855)));
  if (Equal(GetLocal(5),1)) {
    TraceOperation 050845 (Je [Var (Global 31),Var (Local 1)] (Branch F (Dloc 050855)));
    Let b1 = M[007268];
    Let b2 = M[007269];
    if (Equal(MakeHiLo(b1,b2),GetLocal(1))) {
      TraceOperation 050849 (Store (Con 4) (Con 1));
      SetLocal 4 1;
      TraceOperation 050852 (Jump 050767);
      Jump: 050767
    } else {
      Jump: 050855
    }
  } else {
    Jump: 050855
  }
LocOp 050855:
  TraceOperation 050855 (Jl (Var (Local 5)) (Con 2) (Branch T (Dloc 050879)));
  if (LessThan(GetLocal(5),2)) {
    Jump: 050879
  } else {
    TraceOperation 050859 (Jl (Var (Local 5)) (Con 128) (Branch F (Dloc 050879)));
    if (LessThan(GetLocal(5),128)) {
      TraceOperation 050863 (Loadw (Con 8997) (Var (Local 5)) Sp);
      Let b1 = M[Offset(008997,Mul(2,GetLocal(5)))];
      Let b2 = M[Offset(Offset(008997,Mul(2,GetLocal(5))),1)];
      PushStack MakeHiLo(b1,b2);
      TraceOperation 050869 (Je [Var Sp,Var (Local 1)] (Branch F (Dloc 050879)));
      PopStack popped3;
      if (Equal(popped3,GetLocal(1))) {
        TraceOperation 050873 (Store (Con 4) (Con 1));
        SetLocal 4 1;
        TraceOperation 050876 (Jump 050767);
        Jump: 050767
      } else {
        Jump: 050879
      }
    } else {
      Jump: 050879
    }
  }
LocOp 050879:
  TraceOperation 050879 (Sub (Var (Global 75)) (Con 1) Sp);
  Let b1 = M[007356];
  Let b2 = M[007357];
  PushStack Sub(MakeHiLo(b1,b2),1);
  TraceOperation 050883 (Call (Floc 050968) [Var (Local 1),Var Sp] Sp);
  PopStack popped3;
  PushFrame;
  PushReturnAddress 050883;
  SetLocal 1 GetLocal(1);
  SetLocal 2 popped3;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 050969
LocReturn 050883:
  PushStack call_result;
  TraceOperation 050890 (Jz (Var Sp) (Branch F (Dloc 050908)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 050893
  } else {
    Jump: 050908
  }
LocOp 050893:
  TraceOperation 050893 (Jz (Var (Global 162)) (Branch T (Dloc 050907)));
  Let b1 = M[007530];
  Let b2 = M[007531];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 050907
  } else {
    TraceOperation 050896 (Store (Con 4) (Con 0));
    SetLocal 4 0;
    TraceOperation 050899 (Store (Con 85) (Con -1));
    SetByte 007344 255;
    SetByte 007345 255;
    TraceOperation 050904 (Jump 050767);
    Jump: 050767
  }
LocOp 050907:
  TraceOperation 050907 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
LocOp 050908:
  TraceOperation 050908 (Store (Con 3) (Con 1));
  SetLocal 3 1;
  TraceOperation 050911 (Loadb (Var (Local 5)) (Con 6) Sp);
  Let b1 = M[Offset(Address(GetLocal(5)),6)];
  PushStack Widen(b1);
  TraceOperation 050915 (And (Var Sp) (Con 116) (Global 172));
  PopStack popped2;
  SetByte 007550 HiByte(And(popped2,116));
  SetByte 007551 LoByte(And(popped2,116));
  TraceOperation 050919 (Call (Floc 041168) [] (Local 5));
  PushFrame;
  PushReturnAddress 050919;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  SetLocal 2 0;
  SetLocal 1 0;
  Jump: 041169
LocReturn 050919:
  SetLocal 5 call_result;
  Jump: 050923
LocOp 050923:
  TraceOperation 050923 (Sub (Var (Global 75)) (Con 1) Sp);
  Let b1 = M[007356];
  Let b2 = M[007357];
  PushStack Sub(MakeHiLo(b1,b2),1);
  TraceOperation 050927 (Call (Floc 050968) [Var (Local 1),Var Sp] Sp);
  PopStack popped3;
  PushFrame;
  PushReturnAddress 050927;
  SetLocal 1 GetLocal(1);
  SetLocal 2 popped3;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 050969
LocReturn 050927:
  PushStack call_result;
  TraceOperation 050934 (Jz (Var Sp) (Branch T (Dloc 050961)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 050961
  } else {
    TraceOperation 050937 (Inc (Con 3));
    SetLocal 3 Add(GetLocal(3),1);
    TraceOperation 050939 (Jz (Var (Local 5)) (Branch T (Dloc 050954)));
    if (IsZero(GetLocal(5))) {
      Jump: 050954
    } else {
      TraceOperation 050942 (Loadb (Var (Local 5)) (Con 6) Sp);
      Let b2 = M[Offset(Address(GetLocal(5)),6)];
      PushStack Widen(b2);
      TraceOperation 050946 (And (Var Sp) (Con 116) Sp);
      PopStack popped3;
      PushStack And(popped3,116);
      TraceOperation 050950 (Or (Var (Global 172)) (Var Sp) (Global 172));
      Let b4 = M[007550];
      Let b5 = M[007551];
      PopStack popped6;
      SetByte 007550 HiByte(Or(MakeHiLo(b4,b5),popped6));
      SetByte 007551 LoByte(Or(MakeHiLo(b4,b5),popped6));
      Jump: 050954
    }
  }
LocOp 050954:
  TraceOperation 050954 (Call (Floc 041168) [] (Local 5));
  PushFrame;
  PushReturnAddress 050954;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  SetLocal 2 0;
  SetLocal 1 0;
  Jump: 041169
LocReturn 050954:
  SetLocal 5 call_result;
  TraceOperation 050958 (Jump 050923);
  Jump: 050923
LocOp 050961:
  TraceOperation 050961 (Store (Con 4) (Var (Local 3)));
  SetLocal 4 GetLocal(3);
  TraceOperation 050964 (Jump 050767);
  Jump: 050767
--------------------------------------------------
LocRoutine 050968:
  MakeRoutineFrame 6;
  if (LessThanByte(num_actuals,6)) {
    SetLocal 6 0;
    if (LessThanByte(num_actuals,5)) {
      SetLocal 5 0;
      if (LessThanByte(num_actuals,4)) {
        SetLocal 4 0;
        if (LessThanByte(num_actuals,3)) {
          SetLocal 3 0;
          if (LessThanByte(num_actuals,2)) {
            SetLocal 2 0;
            if (LessThanByte(num_actuals,1)) {
              SetLocal 1 0;
            }
          }
        }
      }
    }
  }
  Jump: 050969
LocOp 050969:
  TraceOperation 050969 (Jz (Var (Local 1)) (Branch T Dfalse));
  if (IsZero(GetLocal(1))) {
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 0;
    JumpIndirect: (return) return_address_1
  } else {
    TraceOperation 050972 (Store (Con 4) (Var (Global 75)));
    Let b2 = M[007356];
    Let b3 = M[007357];
    SetLocal 4 MakeHiLo(b2,b3);
    TraceOperation 050975 (Store (Con 91) (Var (Local 2)));
    SetByte 007356 HiByte(GetLocal(2));
    SetByte 007357 LoByte(GetLocal(2));
    TraceOperation 050978 (Call (Floc 041228) [] (Local 3));
    PushFrame;
    PushReturnAddress 050978;
    MakeRoutineFrame 1;
    SetLocal 1 0;
    Jump: 041229
  }
LocReturn 050978:
  SetLocal 3 call_result;
  TraceOperation 050982 (Store (Con 91) (Var (Local 4)));
  SetByte 007356 HiByte(GetLocal(4));
  SetByte 007357 LoByte(GetLocal(4));
  TraceOperation 050985 (Jl (Var (Global 139)) (Con 256) (Branch T (Dloc 051010)));
  Let b1 = M[007484];
  Let b2 = M[007485];
  if (LessThan(MakeHiLo(b1,b2),256)) {
    Jump: 051010
  } else {
    TraceOperation 050991 (Call (Fvar (Global 139)) [Var (Local 1),Var (Local 3)] (Local 4));
    Let b3 = M[007484];
    Let b4 = M[007485];
    if (IsZeroAddress(PackedAddress Z5(MakeHiLo(b3,b4)))) {
      SetLocal 4 0;
      Jump: 050997
    } else {
      PushFrame;
      PushReturnAddress 050991;
      SetLocal 1 GetLocal(1);
      SetLocal 2 GetLocal(3);
      SetNumberActuals 2;
      JumpIndirect: (routine) PackedAddress Z5(MakeHiLo(b3,b4))
    }
  }
LocReturn 050991:
  SetLocal 4 call_result;
  Jump: 050997
LocOp 050997:
  TraceOperation 050997 (Jl (Var (Local 4)) (Con 0) (Branch T (Dloc 051003)));
  if (LessThan(GetLocal(4),0)) {
    Jump: 051003
  } else {
    TraceOperation 051001 (Ret (Var (Local 4)));
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult GetLocal(4);
    JumpIndirect: (return) return_address_1
  }
LocOp 051003:
  TraceOperation 051003 (Sub (Con 0) (Var (Local 4)) (Local 6));
  SetLocal 6 Sub(0,GetLocal(4));
  TraceOperation 051007 (Jump 051013);
  Jump: 051013
LocOp 051010:
  TraceOperation 051010 (Store (Con 6) (Var (Global 139)));
  Let b1 = M[007484];
  Let b2 = M[007485];
  SetLocal 6 MakeHiLo(b1,b2);
  Jump: 051013
LocOp 051013:
  TraceOperation 051013 (Call (Floc 110912) [Var (Local 1),Var (Local 6)] (Local 4));
  PushFrame;
  PushReturnAddress 051013;
  SetLocal 1 GetLocal(1);
  SetLocal 2 GetLocal(6);
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 110913
LocReturn 051013:
  SetLocal 4 call_result;
  TraceOperation 051020 (Call (Floc 111216) [Var (Local 1),Var (Local 6)] Sp);
  PushFrame;
  PushReturnAddress 051020;
  SetLocal 1 GetLocal(1);
  SetLocal 2 GetLocal(6);
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 111217
LocReturn 051020:
  PushStack call_result;
  TraceOperation 051027 (Div (Var Sp) (Con 2) Sp);
  PopStack popped1;
  PushStack Div(popped1,2);
  TraceOperation 051031 (Sub (Var Sp) (Con 1) (Local 5));
  PopStack popped2;
  SetLocal 5 Sub(popped2,1);
  TraceOperation 051035 (Store (Con 6) (Con 0));
  SetLocal 6 0;
  Jump: 051038
LocOp 051038:
  TraceOperation 051038 (Jg (Var (Local 6)) (Var (Local 5)) (Branch T (Dloc 051055)));
  if (GreaterThan(GetLocal(6),GetLocal(5))) {
    Jump: 051055
  } else {
    TraceOperation 051042 (Loadw (Var (Local 4)) (Var (Local 6)) Sp);
    Let b1 = M[Offset(Address(GetLocal(4)),Mul(2,GetLocal(6)))];
    Let b2 = M[Offset(Offset(Address(GetLocal(4)),Mul(2,GetLocal(6))),1)];
    PushStack MakeHiLo(b1,b2);
    TraceOperation 051046 (Je [Var (Local 3),Var Sp] (Branch T Dtrue));
    PopStack popped3;
    if (Equal(GetLocal(3),popped3)) {
      PopFrame;
      PopReturnAddress return_address_4;
      SetResult 1;
      JumpIndirect: (return) return_address_4
    } else {
      TraceOperation 051050 (Inc (Con 6));
      SetLocal 6 Add(GetLocal(6),1);
      TraceOperation 051052 (Jump 051038);
      Jump: 051038
    }
  }
LocOp 051055:
  TraceOperation 051055 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 051056:
  MakeRoutineFrame 6;
  if (LessThanByte(num_actuals,6)) {
    SetLocal 6 0;
    if (LessThanByte(num_actuals,5)) {
      SetLocal 5 0;
      if (LessThanByte(num_actuals,4)) {
        SetLocal 4 0;
        if (LessThanByte(num_actuals,3)) {
          SetLocal 3 0;
          if (LessThanByte(num_actuals,2)) {
            SetLocal 2 0;
            if (LessThanByte(num_actuals,1)) {
              SetLocal 1 0;
            }
          }
        }
      }
    }
  }
  Jump: 051057
LocOp 051057:
  TraceOperation 051057 (Call (Floc 110912) [Var (Local 2),Var (Local 3)] (Local 4));
  PushFrame;
  PushReturnAddress 051057;
  SetLocal 1 GetLocal(2);
  SetLocal 2 GetLocal(3);
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 110913
LocReturn 051057:
  SetLocal 4 call_result;
  TraceOperation 051064 (Call (Floc 111216) [Var (Local 2),Var (Local 3)] Sp);
  PushFrame;
  PushReturnAddress 051064;
  SetLocal 1 GetLocal(2);
  SetLocal 2 GetLocal(3);
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 111217
LocReturn 051064:
  PushStack call_result;
  TraceOperation 051071 (Div (Var Sp) (Con 2) Sp);
  PopStack popped1;
  PushStack Div(popped1,2);
  TraceOperation 051075 (Sub (Var Sp) (Con 1) (Local 5));
  PopStack popped2;
  SetLocal 5 Sub(popped2,1);
  TraceOperation 051079 (Store (Con 6) (Con 0));
  SetLocal 6 0;
  Jump: 051082
LocOp 051082:
  TraceOperation 051082 (Jg (Var (Local 6)) (Var (Local 5)) (Branch T (Dloc 051099)));
  if (GreaterThan(GetLocal(6),GetLocal(5))) {
    Jump: 051099
  } else {
    TraceOperation 051086 (Loadw (Var (Local 4)) (Var (Local 6)) Sp);
    Let b1 = M[Offset(Address(GetLocal(4)),Mul(2,GetLocal(6)))];
    Let b2 = M[Offset(Offset(Address(GetLocal(4)),Mul(2,GetLocal(6))),1)];
    PushStack MakeHiLo(b1,b2);
    TraceOperation 051090 (Je [Var (Local 1),Var Sp] (Branch T Dtrue));
    PopStack popped3;
    if (Equal(GetLocal(1),popped3)) {
      PopFrame;
      PopReturnAddress return_address_4;
      SetResult 1;
      JumpIndirect: (return) return_address_4
    } else {
      TraceOperation 051094 (Inc (Con 6));
      SetLocal 6 Add(GetLocal(6),1);
      TraceOperation 051096 (Jump 051082);
      Jump: 051082
    }
  }
LocOp 051099:
  TraceOperation 051099 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 051100:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 051101
LocOp 051101:
  TraceOperation 051101 (Call (Floc 041168) [] (Local 1));
  PushFrame;
  PushReturnAddress 051101;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  SetLocal 2 0;
  SetLocal 1 0;
  Jump: 041169
LocReturn 051101:
  SetLocal 1 call_result;
  TraceOperation 051105 (Jz (Var (Local 1)) (Branch T Dfalse));
  if (IsZero(GetLocal(1))) {
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 0;
    JumpIndirect: (return) return_address_1
  } else {
    TraceOperation 051108 (Je [Var (Local 1),Con 22808,Con 22862,Con 23501] (Branch F (Dloc 051119)));
    if (LogOr(LogOr(Equal(GetLocal(1),22808),Equal(GetLocal(1),22862)),Equal(GetLocal(1),23501))) {
      TraceOperation 051118 Rtrue;
      PopFrame;
      PopReturnAddress return_address_2;
      SetResult 1;
      JumpIndirect: (return) return_address_2
    } else {
      Jump: 051119
    }
  }
LocOp 051119:
  TraceOperation 051119 (Loadw (Con 8997) (Con 0) (Local 3));
  Let b1 = M[008997];
  Let b2 = M[008998];
  SetLocal 3 MakeHiLo(b1,b2);
  TraceOperation 051125 (Store (Con 2) (Con 1));
  SetLocal 2 1;
  TraceOperation 051128 (Jump 051135);
  Jump: 051135
--------------------------------------------------
LocRoutine 051152:
  MakeRoutineFrame 0;
  Jump: 051153
LocOp 051153:
  TraceOperation 051153 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 051172:
  MakeRoutineFrame 10;
  if (LessThanByte(num_actuals,10)) {
    SetLocal 10 0;
    if (LessThanByte(num_actuals,9)) {
      SetLocal 9 0;
      if (LessThanByte(num_actuals,8)) {
        SetLocal 8 0;
        if (LessThanByte(num_actuals,7)) {
          SetLocal 7 0;
          if (LessThanByte(num_actuals,6)) {
            SetLocal 6 0;
            if (LessThanByte(num_actuals,5)) {
              SetLocal 5 0;
              if (LessThanByte(num_actuals,4)) {
                SetLocal 4 0;
                if (LessThanByte(num_actuals,3)) {
                  SetLocal 3 0;
                  if (LessThanByte(num_actuals,2)) {
                    SetLocal 2 0;
                    if (LessThanByte(num_actuals,1)) {
                      SetLocal 1 0;
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  Jump: 051173
LocOp 051173:
  TraceOperation 051173 (Store (Con 2) (Var (Global 75)));
  Let b1 = M[007356];
  Let b2 = M[007357];
  SetLocal 2 MakeHiLo(b1,b2);
  TraceOperation 051176 (Store (Con 91) (Var (Local 1)));
  SetByte 007356 HiByte(GetLocal(1));
  SetByte 007357 LoByte(GetLocal(1));
  TraceOperation 051179 (Call (Floc 041168) [] (Local 3));
  PushFrame;
  PushReturnAddress 051179;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  SetLocal 2 0;
  SetLocal 1 0;
  Jump: 041169
LocReturn 051179:
  SetLocal 3 call_result;
  TraceOperation 051183 (Store (Con 91) (Var (Local 2)));
  SetByte 007356 HiByte(GetLocal(2));
  SetByte 007357 LoByte(GetLocal(2));
  TraceOperation 051186 (Call (Floc 051976) [Var (Local 3)] (Local 3));
  PushFrame;
  PushReturnAddress 051186;
  SetLocal 1 GetLocal(3);
  MakeRoutineFrame 3;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 051977
LocReturn 051186:
  SetLocal 3 call_result;
  TraceOperation 051192 (Jl (Var (Local 3)) (Con 1) (Branch T (Dloc 051198)));
  if (LessThan(GetLocal(3),1)) {
    Jump: 051198
  } else {
    TraceOperation 051196 (Ret (Var (Local 3)));
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult GetLocal(3);
    JumpIndirect: (return) return_address_1
  }
LocOp 051198:
  TraceOperation 051198 (Mul (Var (Local 1)) (Con 4) Sp);
  PushStack Mul(GetLocal(1),4);
  TraceOperation 051202 (Add (Var Sp) (Con 1) (Local 2));
  PopStack popped1;
  SetLocal 2 Add(popped1,1);
  TraceOperation 051206 (Loadb (Con 8867) (Var (Local 2)) (Local 3));
  Let b2 = M[Offset(008867,GetLocal(2))];
  SetLocal 3 Widen(b2);
  TraceOperation 051212 (Add (Var (Local 3)) (Con 8498) (Local 5));
  SetLocal 5 Add(GetLocal(3),8498);
  TraceOperation 051218 (Sub (Var (Local 2)) (Con 1) Sp);
  PushStack Sub(GetLocal(2),1);
  TraceOperation 051222 (Loadb (Con 8867) (Var Sp) (Local 6));
  PopStack popped3;
  Let b4 = M[Offset(008867,popped3)];
  SetLocal 6 Widen(b4);
  TraceOperation 051228 (Jl (Var (Local 6)) (Con 4) (Branch T (Dloc 051237)));
  if (LessThan(GetLocal(6),4)) {
    Jump: 051237
  } else {
    TraceOperation 051232 (Store (Con 7) (Con 1000));
    SetLocal 7 1000;
    Jump: 051237
  }
LocOp 051237:
  TraceOperation 051237 (Je [Var (Local 6),Con 3] (Branch F (Dloc 051244)));
  if (Equal(GetLocal(6),3)) {
    TraceOperation 051241 (Store (Con 7) (Con 100));
    SetLocal 7 100;
    Jump: 051244
  } else {
    Jump: 051244
  }
LocOp 051244:
  TraceOperation 051244 (Je [Var (Local 6),Con 2] (Branch F (Dloc 051251)));
  if (Equal(GetLocal(6),2)) {
    TraceOperation 051248 (Store (Con 7) (Con 10));
    SetLocal 7 10;
    Jump: 051251
  } else {
    Jump: 051251
  }
LocOp 051251:
  TraceOperation 051251 (Je [Var (Local 6),Con 1] (Branch F (Dloc 051258)));
  if (Equal(GetLocal(6),1)) {
    TraceOperation 051255 (Store (Con 7) (Con 1));
    SetLocal 7 1;
    Jump: 051258
  } else {
    Jump: 051258
  }
LocOp 051258:
  TraceOperation 051258 (Store (Con 8) (Con 0));
  SetLocal 8 0;
  TraceOperation 051261 (Store (Con 4) (Con 0));
  SetLocal 4 0;
  TraceOperation 051264 (Sub (Var (Local 6)) (Con 1) (Local 6));
  SetLocal 6 Sub(GetLocal(6),1);
  TraceOperation 051268 (Store (Con 4) (Con 0));
  SetLocal 4 0;
  Jump: 051271
LocOp 051271:
  TraceOperation 051271 (Jg (Var (Local 4)) (Var (Local 6)) (Branch T (Dloc 051400)));
  if (GreaterThan(GetLocal(4),GetLocal(6))) {
    Jump: 051400
  } else {
    TraceOperation 051276 (Loadb (Var (Local 5)) (Var (Local 4)) (Local 10));
    Let b1 = M[Offset(Address(GetLocal(5)),GetLocal(4))];
    SetLocal 10 Widen(b1);
    TraceOperation 051280 (Je [Var (Local 10),Con 48] (Branch F (Dloc 051290)));
    if (Equal(GetLocal(10),48)) {
      TraceOperation 051284 (Store (Con 9) (Con 0));
      SetLocal 9 0;
      TraceOperation 051287 (Jump 051383);
      Jump: 051383
    } else {
      Jump: 051290
    }
  }
LocOp 051290:
  TraceOperation 051290 (Je [Var (Local 10),Con 49] (Branch F (Dloc 051300)));
  if (Equal(GetLocal(10),49)) {
    TraceOperation 051294 (Store (Con 9) (Con 1));
    SetLocal 9 1;
    TraceOperation 051297 (Jump 051383);
    Jump: 051383
  } else {
    Jump: 051300
  }
LocOp 051300:
  TraceOperation 051300 (Je [Var (Local 10),Con 50] (Branch F (Dloc 051310)));
  if (Equal(GetLocal(10),50)) {
    TraceOperation 051304 (Store (Con 9) (Con 2));
    SetLocal 9 2;
    TraceOperation 051307 (Jump 051383);
    Jump: 051383
  } else {
    Jump: 051310
  }
LocOp 051310:
  TraceOperation 051310 (Je [Var (Local 10),Con 51] (Branch F (Dloc 051320)));
  if (Equal(GetLocal(10),51)) {
    TraceOperation 051314 (Store (Con 9) (Con 3));
    SetLocal 9 3;
    TraceOperation 051317 (Jump 051383);
    Jump: 051383
  } else {
    Jump: 051320
  }
LocOp 051320:
  TraceOperation 051320 (Je [Var (Local 10),Con 52] (Branch F (Dloc 051330)));
  if (Equal(GetLocal(10),52)) {
    TraceOperation 051324 (Store (Con 9) (Con 4));
    SetLocal 9 4;
    TraceOperation 051327 (Jump 051383);
    Jump: 051383
  } else {
    Jump: 051330
  }
LocOp 051330:
  TraceOperation 051330 (Je [Var (Local 10),Con 53] (Branch F (Dloc 051340)));
  if (Equal(GetLocal(10),53)) {
    TraceOperation 051334 (Store (Con 9) (Con 5));
    SetLocal 9 5;
    TraceOperation 051337 (Jump 051383);
    Jump: 051383
  } else {
    Jump: 051340
  }
LocOp 051340:
  TraceOperation 051340 (Je [Var (Local 10),Con 54] (Branch F (Dloc 051350)));
  if (Equal(GetLocal(10),54)) {
    TraceOperation 051344 (Store (Con 9) (Con 6));
    SetLocal 9 6;
    TraceOperation 051347 (Jump 051383);
    Jump: 051383
  } else {
    Jump: 051350
  }
LocOp 051350:
  TraceOperation 051350 (Je [Var (Local 10),Con 55] (Branch F (Dloc 051360)));
  if (Equal(GetLocal(10),55)) {
    TraceOperation 051354 (Store (Con 9) (Con 7));
    SetLocal 9 7;
    TraceOperation 051357 (Jump 051383);
    Jump: 051383
  } else {
    Jump: 051360
  }
LocOp 051360:
  TraceOperation 051360 (Je [Var (Local 10),Con 56] (Branch F (Dloc 051370)));
  if (Equal(GetLocal(10),56)) {
    TraceOperation 051364 (Store (Con 9) (Con 8));
    SetLocal 9 8;
    TraceOperation 051367 (Jump 051383);
    Jump: 051383
  } else {
    Jump: 051370
  }
LocOp 051370:
  TraceOperation 051370 (Je [Var (Local 10),Con 57] (Branch F (Dloc 051380)));
  if (Equal(GetLocal(10),57)) {
    TraceOperation 051374 (Store (Con 9) (Con 9));
    SetLocal 9 9;
    TraceOperation 051377 (Jump 051383);
    Jump: 051383
  } else {
    Jump: 051380
  }
LocOp 051380:
  TraceOperation 051380 (Ret (Con -1000));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult -1000;
  JumpIndirect: (return) return_address_1
LocOp 051383:
  TraceOperation 051383 (Mul (Var (Local 7)) (Var (Local 9)) Sp);
  PushStack Mul(GetLocal(7),GetLocal(9));
  TraceOperation 051387 (Add (Var (Local 8)) (Var Sp) (Local 8));
  PopStack popped1;
  SetLocal 8 Add(GetLocal(8),popped1);
  TraceOperation 051391 (Div (Var (Local 7)) (Con 10) (Local 7));
  SetLocal 7 Div(GetLocal(7),10);
  TraceOperation 051395 (Inc (Con 4));
  SetLocal 4 Add(GetLocal(4),1);
  TraceOperation 051397 (Jump 051271);
  Jump: 051271
LocOp 051400:
  TraceOperation 051400 (Jg (Var (Local 6)) (Con 3) (Branch F (Dloc 051409)));
  if (GreaterThan(GetLocal(6),3)) {
    TraceOperation 051404 (Store (Con 8) (Con 10000));
    SetLocal 8 10000;
    Jump: 051409
  } else {
    Jump: 051409
  }
LocOp 051409:
  TraceOperation 051409 (Ret (Var (Local 8)));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult GetLocal(8);
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 051412:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 051413
LocOp 051413:
  TraceOperation 051413 (Store (Con 2) (Var (Global 75)));
  Let b1 = M[007356];
  Let b2 = M[007357];
  SetLocal 2 MakeHiLo(b1,b2);
  TraceOperation 051416 (Store (Con 91) (Var (Local 1)));
  SetByte 007356 HiByte(GetLocal(1));
  SetByte 007357 LoByte(GetLocal(1));
  TraceOperation 051419 (Call (Floc 041228) [] (Local 3));
  PushFrame;
  PushReturnAddress 051419;
  MakeRoutineFrame 1;
  SetLocal 1 0;
  Jump: 041229
LocReturn 051419:
  SetLocal 3 call_result;
  TraceOperation 051423 (Store (Con 91) (Var (Local 2)));
  SetByte 007356 HiByte(GetLocal(2));
  SetByte 007357 LoByte(GetLocal(2));
  TraceOperation 051426 (Store (Con 255) (Var (Local 3)));
  SetByte 007684 HiByte(GetLocal(3));
  SetByte 007685 LoByte(GetLocal(3));
  TraceOperation 051429 (Je [Var (Global 239),Con 24212] (Branch F (Dloc 051437)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),24212)) {
    TraceOperation 051435 (Ret (Con 21));
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 21;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 051437
  }
LocOp 051437:
  TraceOperation 051437 (Je [Var (Global 239),Con 24230] (Branch F (Dloc 051445)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),24230)) {
    TraceOperation 051443 (Ret (Con 22));
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 22;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 051445
  }
LocOp 051445:
  TraceOperation 051445 (Je [Var (Global 239),Con 24230] (Branch F (Dloc 051453)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),24230)) {
    TraceOperation 051451 (Ret (Con 23));
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 23;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 051453
  }
LocOp 051453:
  TraceOperation 051453 (Je [Var (Global 239),Con 24194] (Branch F (Dloc 051461)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),24194)) {
    TraceOperation 051459 (Ret (Con 24));
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 24;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 051461
  }
LocOp 051461:
  TraceOperation 051461 (Je [Var (Global 239),Con 24194] (Branch F (Dloc 051469)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),24194)) {
    TraceOperation 051467 (Ret (Con 25));
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 25;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 051469
  }
LocOp 051469:
  TraceOperation 051469 (Je [Var (Global 239),Con 24221] (Branch F (Dloc 051477)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),24221)) {
    TraceOperation 051475 (Ret (Con 26));
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 26;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 051477
  }
LocOp 051477:
  TraceOperation 051477 (Je [Var (Global 239),Con 24221] (Branch F (Dloc 051485)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),24221)) {
    TraceOperation 051483 (Ret (Con 27));
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 27;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 051485
  }
LocOp 051485:
  TraceOperation 051485 (Je [Var (Global 239),Con 24185] (Branch F (Dloc 051493)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),24185)) {
    TraceOperation 051491 (Ret (Con 28));
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 28;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 051493
  }
LocOp 051493:
  TraceOperation 051493 (Je [Var (Global 239),Con 24203] (Branch F (Dloc 051501)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),24203)) {
    TraceOperation 051499 (Ret (Con 29));
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 29;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 051501
  }
LocOp 051501:
  TraceOperation 051501 (Je [Var (Global 239),Con 24032] (Branch F (Dloc 051509)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),24032)) {
    TraceOperation 051507 (Ret (Con 30));
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 30;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 051509
  }
LocOp 051509:
  TraceOperation 051509 (Call (Floc 051172) [Var (Local 1)] Sp);
  PushFrame;
  PushReturnAddress 051509;
  SetLocal 1 GetLocal(1);
  MakeRoutineFrame 10;
  SetLocal 10 0;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 051173
LocReturn 051509:
  PushStack call_result;
  TraceOperation 051515 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 051520:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 051521
LocOp 051521:
  TraceOperation 051521 (Test_attr (Var (Local 1)) (Con 24) (Branch F Dtrue));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),3)];
  if (TestBit(b1,7)) {
    TraceOperation 051525 Rfalse;
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  } else {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  }
--------------------------------------------------
LocRoutine 051528:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 051529
LocOp 051529:
  TraceOperation 051529 (Test_attr (Var (Local 1)) (Con 1) (Branch T (Dloc 051536)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),0)];
  if (TestBit(b1,6)) {
    Jump: 051536
  } else {
    TraceOperation 051533 (Store (Con 2) (Con 6));
    SetLocal 2 6;
    Jump: 051536
  }
LocOp 051536:
  TraceOperation 051536 (Test_attr (Var (Local 1)) (Con 23) (Branch F (Dloc 051543)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),2)];
  if (TestBit(b1,0)) {
    TraceOperation 051540 (Store (Con 3) (Con 23));
    SetLocal 3 23;
    Jump: 051543
  } else {
    Jump: 051543
  }
LocOp 051543:
  TraceOperation 051543 (Test_attr (Var (Local 1)) (Con 24) (Branch F (Dloc 051550)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),3)];
  if (TestBit(b1,7)) {
    TraceOperation 051547 (Store (Con 3) (Con 24));
    SetLocal 3 24;
    Jump: 051550
  } else {
    Jump: 051550
  }
LocOp 051550:
  TraceOperation 051550 (Test_attr (Var (Local 1)) (Con 25) (Branch F (Dloc 051557)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),3)];
  if (TestBit(b1,6)) {
    TraceOperation 051554 (Store (Con 3) (Con 25));
    SetLocal 3 25;
    Jump: 051557
  } else {
    Jump: 051557
  }
LocOp 051557:
  TraceOperation 051557 (Jz (Var (Local 3)) (Branch F (Dloc 051572)));
  if (IsZero(GetLocal(3))) {
    TraceOperation 051560 (Jz (Var (Local 2)) (Branch F (Dloc 051569)));
    if (IsZero(GetLocal(2))) {
      TraceOperation 051563 (Store (Con 3) (Con 23));
      SetLocal 3 23;
      TraceOperation 051566 (Jump 051572);
      Jump: 051572
    } else {
      Jump: 051569
    }
  } else {
    Jump: 051572
  }
LocOp 051569:
  TraceOperation 051569 (Store (Con 3) (Con 25));
  SetLocal 3 25;
  Jump: 051572
LocOp 051572:
  TraceOperation 051572 (Je [Var (Local 3),Con 24] (Branch F (Dloc 051580)));
  if (Equal(GetLocal(3),24)) {
    TraceOperation 051576 (Add (Var (Local 2)) (Con 1) (Local 2));
    SetLocal 2 Add(GetLocal(2),1);
    Jump: 051580
  } else {
    Jump: 051580
  }
LocOp 051580:
  TraceOperation 051580 (Je [Var (Local 3),Con 25] (Branch F (Dloc 051588)));
  if (Equal(GetLocal(3),25)) {
    TraceOperation 051584 (Add (Var (Local 2)) (Con 2) (Local 2));
    SetLocal 2 Add(GetLocal(2),2);
    Jump: 051588
  } else {
    Jump: 051588
  }
LocOp 051588:
  TraceOperation 051588 (Test_attr (Var (Local 1)) (Con 26) (Branch F (Dloc 051596)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),3)];
  if (TestBit(b1,5)) {
    TraceOperation 051592 (Add (Var (Local 2)) (Con 3) (Local 2));
    SetLocal 2 Add(GetLocal(2),3);
    Jump: 051596
  } else {
    Jump: 051596
  }
LocOp 051596:
  TraceOperation 051596 (Ret (Var (Local 2)));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult GetLocal(2);
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 051600:
  MakeRoutineFrame 6;
  if (LessThanByte(num_actuals,6)) {
    SetLocal 6 0;
    if (LessThanByte(num_actuals,5)) {
      SetLocal 5 0;
      if (LessThanByte(num_actuals,4)) {
        SetLocal 4 0;
        if (LessThanByte(num_actuals,3)) {
          SetLocal 3 0;
          if (LessThanByte(num_actuals,2)) {
            SetLocal 2 0;
            if (LessThanByte(num_actuals,1)) {
              SetLocal 1 0;
            }
          }
        }
      }
    }
  }
  Jump: 051601
LocOp 051601:
  TraceOperation 051601 (Store (Con 5) (Var (Global 75)));
  Let b1 = M[007356];
  Let b2 = M[007357];
  SetLocal 5 MakeHiLo(b1,b2);
  TraceOperation 051604 (Store (Con 91) (Var (Local 1)));
  SetByte 007356 HiByte(GetLocal(1));
  SetByte 007357 LoByte(GetLocal(1));
  TraceOperation 051607 (Store (Con 3) (Con 0));
  SetLocal 3 0;
  Jump: 051610
LocOp 051610:
  TraceOperation 051610 (Jl (Var (Local 3)) (Var (Local 2)) (Branch F (Dloc 051660)));
  if (LessThan(GetLocal(3),GetLocal(2))) {
    TraceOperation 051614 (Call (Floc 041228) [] (Local 4));
    PushFrame;
    PushReturnAddress 051614;
    MakeRoutineFrame 1;
    SetLocal 1 0;
    Jump: 041229
  } else {
    Jump: 051660
  }
LocReturn 051614:
  SetLocal 4 call_result;
  TraceOperation 051618 (Je [Var (Local 4),Con 0,Con 23996,Con 21836] (Branch T (Dloc 051633)));
  if (LogOr(LogOr(Equal(GetLocal(4),0),Equal(GetLocal(4),23996)),Equal(GetLocal(4),21836))) {
    Jump: 051633
  } else {
    TraceOperation 051627 (Je [Var (Local 4),Con -1] (Branch F (Dloc 051636)));
    if (Equal(GetLocal(4),-1)) {
      Jump: 051633
    } else {
      Jump: 051636
    }
  }
LocOp 051633:
  TraceOperation 051633 (Jump 051660);
  Jump: 051660
LocOp 051636:
  TraceOperation 051636 (Loadb (Var (Local 4)) (Con 6) Sp);
  Let b1 = M[Offset(Address(GetLocal(4)),6)];
  PushStack Widen(b1);
  TraceOperation 051640 (And (Var Sp) (Con 4) Sp);
  PopStack popped2;
  PushStack And(popped2,4);
  TraceOperation 051644 (Jz (Var Sp) (Branch T (Dloc 051655)));
  PopStack popped3;
  if (IsZero(popped3)) {
    Jump: 051655
  } else {
    TraceOperation 051647 (Store (Con 85) (Con 4098));
    SetByte 007344 16;
    SetByte 007345 2;
    TraceOperation 051652 (Store (Con 6) (Con 1));
    SetLocal 6 1;
    Jump: 051655
  }
LocOp 051655:
  TraceOperation 051655 (Inc (Con 3));
  SetLocal 3 Add(GetLocal(3),1);
  TraceOperation 051657 (Jump 051610);
  Jump: 051610
LocOp 051660:
  TraceOperation 051660 (Store (Con 91) (Var (Local 5)));
  SetByte 007356 HiByte(GetLocal(5));
  SetByte 007357 LoByte(GetLocal(5));
  TraceOperation 051663 (Ret (Var (Local 6)));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult GetLocal(6);
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 051678:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 051679
LocOp 051679:
  TraceOperation 051679 (Loadw (Con 8997) (Con 0) Sp);
  Let b1 = M[008997];
  Let b2 = M[008998];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 051685 (Jg (Var (Local 3)) (Var Sp) (Branch T (Dloc 051713)));
  PopStack popped3;
  if (GreaterThan(GetLocal(3),popped3)) {
    Jump: 051713
  } else {
    TraceOperation 051689 (Loadw (Con 8997) (Var (Local 3)) Sp);
    Let b4 = M[Offset(008997,Mul(2,GetLocal(3)))];
    Let b5 = M[Offset(Offset(008997,Mul(2,GetLocal(3))),1)];
    PushStack MakeHiLo(b4,b5);
    TraceOperation 051695 (Je [Var Sp,Var (Local 1)] (Branch F (Dloc 051710)));
    PopStack popped6;
    if (Equal(popped6,GetLocal(1))) {
      TraceOperation 051699 (Add (Var (Local 3)) (Con 2) Sp);
      PushStack Add(GetLocal(3),2);
      TraceOperation 051703 (Storew (Con 8997) (Var Sp) (Var (Local 2)));
      PopStack popped7;
      SetByte Offset(008997,Mul(2,popped7)) HiByte(GetLocal(2));
      SetByte Offset(Offset(008997,Mul(2,popped7)),1) LoByte(GetLocal(2));
      TraceOperation 051709 Rtrue;
      PopFrame;
      PopReturnAddress return_address_8;
      SetResult 1;
      JumpIndirect: (return) return_address_8
    } else {
      Jump: 051710
    }
  }
LocOp 051710:
  TraceOperation 051710 (Jump 051675);
  Jump: 051675
LocOp 051713:
  TraceOperation 051713 (CallN (Floc 087960) [Con 14]);
  PushFrame;
  PushReturnAddress 051713;
  SetLocal 1 14;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 087961
LocReturn 051713:
  TraceOperation 051718 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 051720:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 051721
LocOp 051721:
  TraceOperation 051721 (Store (Con 2) (Con 1));
  SetLocal 2 1;
  TraceOperation 051724 (Jump 051731);
  Jump: 051731
--------------------------------------------------
LocRoutine 051730:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 051731
LocOp 051731:
  TraceOperation 051731 (Loadw (Con 8997) (Con 0) Sp);
  Let b1 = M[008997];
  Let b2 = M[008998];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 051737 (Jg (Var (Local 2)) (Var Sp) (Branch T (Dloc 051765)));
  PopStack popped3;
  if (GreaterThan(GetLocal(2),popped3)) {
    Jump: 051765
  } else {
    TraceOperation 051741 (Loadw (Con 8997) (Var (Local 2)) Sp);
    Let b4 = M[Offset(008997,Mul(2,GetLocal(2)))];
    Let b5 = M[Offset(Offset(008997,Mul(2,GetLocal(2))),1)];
    PushStack MakeHiLo(b4,b5);
    TraceOperation 051747 (Je [Var Sp,Var (Local 1)] (Branch F (Dloc 051762)));
    PopStack popped6;
    if (Equal(popped6,GetLocal(1))) {
      TraceOperation 051751 (Add (Var (Local 2)) (Con 2) Sp);
      PushStack Add(GetLocal(2),2);
      TraceOperation 051755 (Loadw (Con 8997) (Var Sp) Sp);
      PopStack popped7;
      Let b8 = M[Offset(008997,Mul(2,popped7))];
      Let b9 = M[Offset(Offset(008997,Mul(2,popped7)),1)];
      PushStack MakeHiLo(b8,b9);
      TraceOperation 051761 Ret_popped;
      PopStack popped10;
      PopFrame;
      PopReturnAddress return_address_11;
      SetResult popped10;
      JumpIndirect: (return) return_address_11
    } else {
      Jump: 051762
    }
  }
LocOp 051762:
  TraceOperation 051762 (Jump 051727);
  Jump: 051727
LocOp 051765:
  TraceOperation 051765 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 051768:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 051769
LocOp 051769:
  TraceOperation 051769 (CallN (Floc 051776) [Var (Local 1)]);
  PushFrame;
  PushReturnAddress 051769;
  SetLocal 1 GetLocal(1);
  MakeRoutineFrame 3;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 051777
LocReturn 051769:
  TraceOperation 051774 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 051776:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 051777
LocOp 051777:
  TraceOperation 051777 (Je [Var (Local 1),Var (Global 31)] (Branch F (Dloc 051782)));
  Let b1 = M[007268];
  Let b2 = M[007269];
  if (Equal(GetLocal(1),MakeHiLo(b1,b2))) {
    TraceOperation 051781 Rtrue;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 051782
  }
LocOp 051782:
  TraceOperation 051782 (Call (Floc 051528) [Var (Local 1)] Sp);
  PushFrame;
  PushReturnAddress 051782;
  SetLocal 1 GetLocal(1);
  MakeRoutineFrame 3;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 051529
LocReturn 051782:
  PushStack call_result;
  TraceOperation 051788 (Loadw (Con 7732) (Var Sp) (Local 3));
  PopStack popped1;
  Let b2 = M[Offset(007732,Mul(2,popped1))];
  Let b3 = M[Offset(Offset(007732,Mul(2,popped1)),1)];
  SetLocal 3 MakeHiLo(b2,b3);
  TraceOperation 051794 (Store (Con 2) (Con 1));
  SetLocal 2 1;
  TraceOperation 051797 (Jump 051804);
  Jump: 051804
--------------------------------------------------
LocRoutine 051840:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 051841
LocOp 051841:
  TraceOperation 051841 (Jump 051800);
  Jump: 051800
--------------------------------------------------
LocRoutine 051848:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 051849
LocOp 051849:
  TraceOperation 051849 (Get_child (Var (Global 31)) Sp (Branch F (Dloc 051853)));
  Let b1 = M[007268];
  Let b2 = M[007269];
  Let b3 = M[Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),10)];
  Let b4 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),10),1)];
  PushStack MakeHiLo(b3,b4);
  if (IsZero(MakeHiLo(b3,b4))) {
    Jump: 051853
  } else {
    Jump: 051853
  }
LocOp 051853:
  TraceOperation 051853 (Pull (Con 1));
  PopStack popped1;
  SetLocal 1 popped1;
  TraceOperation 051856 (Jz (Var (Local 1)) (Branch T (Dloc 051869)));
  if (IsZero(GetLocal(1))) {
    Jump: 051869
  } else {
    Jump: 051859
  }
LocOp 051859:
  TraceOperation 051859 (CallN (Floc 051776) [Var (Local 1)]);
  PushFrame;
  PushReturnAddress 051859;
  SetLocal 1 GetLocal(1);
  MakeRoutineFrame 3;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 051777
LocReturn 051859:
  TraceOperation 051864 (Get_sibling (Var (Local 1)) (Local 1) (Branch T (Dloc 051859)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),8)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),8),1)];
  SetLocal 1 MakeHiLo(b1,b2);
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 051869
  } else {
    Jump: 051859
  }
LocOp 051869:
  TraceOperation 051869 (Store (Con 1) (Con 0));
  SetLocal 1 0;
  TraceOperation 051872 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 051876:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 051877
LocOp 051877:
  TraceOperation 051877 (Jz (Var (Global 1)) (Branch T (Dloc 051886)));
  Let b1 = M[007208];
  Let b2 = M[007209];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 051886
  } else {
    TraceOperation 051880 (Get_parent (Var (Global 31)) Sp);
    Let b3 = M[007268];
    Let b4 = M[007269];
    Let b5 = M[Offset(Offset(000378,Mul(MakeHiLo(b3,b4),14)),6)];
    Let b6 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b3,b4),14)),6),1)];
    PushStack MakeHiLo(b5,b6);
    TraceOperation 051883 (Jz (Var Sp) (Branch F (Dloc 051905)));
    PopStack popped7;
    if (IsZero(popped7)) {
      Jump: 051886
    } else {
      Jump: 051905
    }
  }
LocOp 051886:
  TraceOperation 051886 (Store (Con 252) (Con 8498));
  SetByte 007678 33;
  SetByte 007679 50;
  TraceOperation 051891 (Storeb (Var (Global 236)) (Con 1) (Con 0));
  Let b1 = M[007678];
  Let b2 = M[007679];
  SetByte Offset(Address(MakeHiLo(b1,b2)),1) 0;
  TraceOperation 051896 (Aread (Var (Global 236)) (Con 8867) (Global 239));
  ReadInputFromUser Nothing user_command_line_3;
  Let b4 = M[007678];
  Let b5 = M[007679];
  Tokenize user_command_line_3 (num_tokens_6,positions7,words8);
  StringBytes user_command_line_3 string_bytes_9;
  Let loop_var10 = 0;
  Label 11: {
    if (Equal(loop_var10,Widen(StringLength(user_command_line_3)))) {
      SetByte 008868 num_tokens_6;
      Let loop_var12 = 0;
      Label 13: {
        if (Equal(loop_var12,Widen(num_tokens_6))) {
          TraceOperation 051902 (Jump 051924);
          Jump: 051924
        } else {
          Let lookee14 = LookupInDict(IndexList(words8,loop_var12));
          SetByte Offset(Offset(008869,Mul(4,loop_var12)),0) HiByte(DeAddress(lookee14));
          SetByte Offset(Offset(008869,Mul(4,loop_var12)),1) LoByte(DeAddress(lookee14));
          SetByte Offset(Offset(008869,Mul(4,loop_var12)),2) StringLength(IndexList(words8,loop_var12));
          SetByte Offset(Offset(008869,Mul(4,loop_var12)),3) IndexList(positions7,loop_var12);
          Assign loop_var12 = Add(loop_var12,1);
          Goto: Label 13
        }
      }
    } else {
      SetByte Offset(Offset(Address(MakeHiLo(b4,b5)),1),loop_var10) IndexList(string_bytes_9,loop_var10);
      Assign loop_var10 = Add(loop_var10,1);
      Goto: Label 11
    }
  }
LocOp 051905:
  TraceOperation 051905 (Store (Con 252) (Con 8498));
  SetByte 007678 33;
  SetByte 007679 50;
  TraceOperation 051910 (Storeb (Var (Global 236)) (Con 1) (Con 0));
  Let b1 = M[007678];
  Let b2 = M[007679];
  SetByte Offset(Address(MakeHiLo(b1,b2)),1) 0;
  TraceOperation 051915 (CallN (Floc 080596) []);
  PushFrame;
  PushReturnAddress 051915;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  SetLocal 1 0;
  Jump: 080597
LocReturn 051915:
  TraceOperation 051918 (Aread (Var (Global 236)) (Con 8867) (Global 239));
  ReadInputFromUser Nothing user_command_line_1;
  Let b2 = M[007678];
  Let b3 = M[007679];
  Tokenize user_command_line_1 (num_tokens_4,positions5,words6);
  StringBytes user_command_line_1 string_bytes_7;
  Let loop_var8 = 0;
  Label 9: {
    if (Equal(loop_var8,Widen(StringLength(user_command_line_1)))) {
      SetByte 008868 num_tokens_4;
      Let loop_var10 = 0;
      Label 11: {
        if (Equal(loop_var10,Widen(num_tokens_4))) {
          Jump: 051924
        } else {
          Let lookee12 = LookupInDict(IndexList(words6,loop_var10));
          SetByte Offset(Offset(008869,Mul(4,loop_var10)),0) HiByte(DeAddress(lookee12));
          SetByte Offset(Offset(008869,Mul(4,loop_var10)),1) LoByte(DeAddress(lookee12));
          SetByte Offset(Offset(008869,Mul(4,loop_var10)),2) StringLength(IndexList(words6,loop_var10));
          SetByte Offset(Offset(008869,Mul(4,loop_var10)),3) IndexList(positions5,loop_var10);
          Assign loop_var10 = Add(loop_var10,1);
          Goto: Label 11
        }
      }
    } else {
      SetByte Offset(Offset(Address(MakeHiLo(b2,b3)),1),loop_var8) IndexList(string_bytes_7,loop_var8);
      Assign loop_var8 = Add(loop_var8,1);
      Goto: Label 9
    }
  }
LocOp 051924:
  TraceOperation 051924 (Loadb (Con 8867) (Con 1) (Local 2));
  Let b1 = M[008868];
  SetLocal 2 Widen(b1);
  TraceOperation 051930 (Jz (Var (Local 2)) (Branch T (Dloc 051959)));
  if (IsZero(GetLocal(2))) {
    Jump: 051959
  } else {
    TraceOperation 051933 (Loadw (Con 8867) (Con 1) (Local 1));
    Let b2 = M[008869];
    Let b3 = M[008870];
    SetLocal 1 MakeHiLo(b2,b3);
    TraceOperation 051939 (Je [Var (Local 1),Con 24518,Con 24527,Con 24527] (Branch T Dtrue));
    if (LogOr(LogOr(Equal(GetLocal(1),24518),Equal(GetLocal(1),24527)),Equal(GetLocal(1),24527))) {
      PopFrame;
      PopReturnAddress return_address_4;
      SetResult 1;
      JumpIndirect: (return) return_address_4
    } else {
      TraceOperation 051949 (Je [Var (Local 1),Con 22871,Con 22916,Con 22916] (Branch T Dfalse));
      if (LogOr(LogOr(Equal(GetLocal(1),22871),Equal(GetLocal(1),22916)),Equal(GetLocal(1),22916))) {
        PopFrame;
        PopReturnAddress return_address_5;
        SetResult 0;
        JumpIndirect: (return) return_address_5
      } else {
        Jump: 051959
      }
    }
  }
LocOp 051959:
  TraceOperation 051959 (CallN (Floc 036596) [Con 0,Con 1]);
  PushFrame;
  PushReturnAddress 051959;
  SetLocal 1 0;
  SetLocal 2 1;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 036597
LocReturn 051959:
  TraceOperation 051965 (Print "> ");
  GamePrint "> ";
  TraceOperation 051970 (Jump 051877);
  Jump: 051877
--------------------------------------------------
LocRoutine 051976:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 051977
LocOp 051977:
  TraceOperation 051977 (Loadw (Con 9153) (Con 0) (Local 3));
  Let b1 = M[009153];
  Let b2 = M[009154];
  SetLocal 3 MakeHiLo(b1,b2);
  TraceOperation 051983 (Store (Con 2) (Con 1));
  SetLocal 2 1;
  TraceOperation 051986 (Jump 051993);
  Jump: 051993
--------------------------------------------------
LocRoutine 051994:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 051995
LocOp 051995:
  TraceOperation 051995 (Jg (Con 218) (Con 207) (Branch F (Dloc 047681)));
  TraceOperation 052000 (Je [Con 97,Con 256,Con 19796,Var (Local 2)] (Branch F (Dloc 052265)));
  if (LogOr(False,Equal(97,GetLocal(2)))) {
    TraceOperation 052011 (Loadw (Con 9153) (Var Sp) Sp);
    PopStack popped1;
    Let b2 = M[Offset(009153,Mul(2,popped1))];
    Let b3 = M[Offset(Offset(009153,Mul(2,popped1)),1)];
    PushStack MakeHiLo(b2,b3);
    TraceOperation 052017 Ret_popped;
    PopStack popped4;
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult popped4;
    JumpIndirect: (return) return_address_5
  } else {
    Jump: 052265
  }
--------------------------------------------------
LocRoutine 052036:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 052037
LocOp 052037:
  TraceOperation 052037 (Store (Con 2) (Var (Global 175)));
  Let b1 = M[007556];
  Let b2 = M[007557];
  SetLocal 2 MakeHiLo(b1,b2);
  TraceOperation 052040 (Loadw (Con 10451) (Con 0) (Global 175));
  Let b3 = M[010451];
  Let b4 = M[010452];
  SetByte 007556 b3;
  SetByte 007557 b4;
  TraceOperation 052046 (Storew (Con 10451) (Con 0) (Var (Local 2)));
  SetByte 010451 HiByte(GetLocal(2));
  SetByte 010452 LoByte(GetLocal(2));
  TraceOperation 052052 (Jl (Var (Local 2)) (Var (Global 175)) (Branch F (Dloc 052059)));
  Let b5 = M[007556];
  Let b6 = M[007557];
  if (LessThan(GetLocal(2),MakeHiLo(b5,b6))) {
    TraceOperation 052056 (Store (Con 2) (Var (Global 175)));
    Let b7 = M[007556];
    Let b8 = M[007557];
    SetLocal 2 MakeHiLo(b7,b8);
    Jump: 052059
  } else {
    Jump: 052059
  }
LocOp 052059:
  TraceOperation 052059 (Store (Con 1) (Var (Local 2)));
  SetLocal 1 GetLocal(2);
  Jump: 052062
LocOp 052062:
  TraceOperation 052062 (Jg (Var (Local 1)) (Con 0) (Branch F (Dloc 052103)));
  if (GreaterThan(GetLocal(1),0)) {
    TraceOperation 052066 (Sub (Var (Local 1)) (Con 1) Sp);
    PushStack Sub(GetLocal(1),1);
    TraceOperation 052070 (Loadw (Con 10067) (Var Sp) (Local 2));
    PopStack popped1;
    Let b2 = M[Offset(010067,Mul(2,popped1))];
    Let b3 = M[Offset(Offset(010067,Mul(2,popped1)),1)];
    SetLocal 2 MakeHiLo(b2,b3);
    TraceOperation 052076 (Loadw (Con 10451) (Var (Local 1)) Sp);
    Let b4 = M[Offset(010451,Mul(2,GetLocal(1)))];
    Let b5 = M[Offset(Offset(010451,Mul(2,GetLocal(1))),1)];
    PushStack MakeHiLo(b4,b5);
    TraceOperation 052082 (Sub (Var (Local 1)) (Con 1) Sp);
    PushStack Sub(GetLocal(1),1);
    TraceOperation 052086 (Storew (Con 10067) (Var Sp) (Var Sp));
    PopStack popped6;
    PopStack popped7;
    SetByte Offset(010067,Mul(2,popped6)) HiByte(popped7);
    SetByte Offset(Offset(010067,Mul(2,popped6)),1) LoByte(popped7);
    TraceOperation 052092 (Storew (Con 10451) (Var (Local 1)) (Var (Local 2)));
    SetByte Offset(010451,Mul(2,GetLocal(1))) HiByte(GetLocal(2));
    SetByte Offset(Offset(010451,Mul(2,GetLocal(1))),1) LoByte(GetLocal(2));
    TraceOperation 052098 (Dec (Con 1));
    SetLocal 1 Sub(GetLocal(1),1);
    TraceOperation 052100 (Jump 052062);
    Jump: 052062
  } else {
    Jump: 052103
  }
LocOp 052103:
  TraceOperation 052103 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 052104:
  MakeRoutineFrame 6;
  if (LessThanByte(num_actuals,6)) {
    SetLocal 6 0;
    if (LessThanByte(num_actuals,5)) {
      SetLocal 5 0;
      if (LessThanByte(num_actuals,4)) {
        SetLocal 4 0;
        if (LessThanByte(num_actuals,3)) {
          SetLocal 3 0;
          if (LessThanByte(num_actuals,2)) {
            SetLocal 2 0;
            if (LessThanByte(num_actuals,1)) {
              SetLocal 1 0;
            }
          }
        }
      }
    }
  }
  Jump: 052105
LocOp 052105:
  TraceOperation 052105 (Jl (Var (Local 2)) (Con 2) (Branch T Dfalse));
  if (LessThan(GetLocal(2),2)) {
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 0;
    JumpIndirect: (return) return_address_1
  } else {
    TraceOperation 052109 (Je [Var (Global 147),Con 1] (Branch F (Dloc 052181)));
    Let b2 = M[007500];
    Let b3 = M[007501];
    if (Equal(MakeHiLo(b2,b3),1)) {
      Jump: 052114
    } else {
      Jump: 052181
    }
  }
LocOp 052114:
  TraceOperation 052114 (Jg (Var (Global 72)) (Con 0) (Branch F (Dloc 052132)));
  Let b1 = M[007350];
  Let b2 = M[007351];
  if (GreaterThan(MakeHiLo(b1,b2),0)) {
    TraceOperation 052118 (Loadw (Con 8466) (Con 2) Sp);
    Let b3 = M[008470];
    Let b4 = M[008471];
    PushStack MakeHiLo(b3,b4);
    TraceOperation 052124 (Call (Floc 052396) [Var Sp,Var (Local 1)] Sp);
    PopStack popped5;
    PushFrame;
    PushReturnAddress 052124;
    SetLocal 1 popped5;
    SetLocal 2 GetLocal(1);
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 052397
  } else {
    Jump: 052132
  }
LocReturn 052124:
  PushStack call_result;
  TraceOperation 052131 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 052132:
  TraceOperation 052132 (Store (Con 3) (Con 0));
  SetLocal 3 0;
  TraceOperation 052135 (Store (Con 4) (Con 1));
  SetLocal 4 1;
  Jump: 052138
LocOp 052138:
  TraceOperation 052138 (Loadw (Con 10451) (Con 0) Sp);
  Let b1 = M[010451];
  Let b2 = M[010452];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 052144 (Jg (Var (Local 4)) (Var Sp) (Branch T (Dloc 052179)));
  PopStack popped3;
  if (GreaterThan(GetLocal(4),popped3)) {
    Jump: 052179
  } else {
    TraceOperation 052148 (Loadw (Con 10451) (Var (Local 4)) Sp);
    Let b4 = M[Offset(010451,Mul(2,GetLocal(4)))];
    Let b5 = M[Offset(Offset(010451,Mul(2,GetLocal(4))),1)];
    PushStack MakeHiLo(b4,b5);
    TraceOperation 052154 (Call (Floc 052396) [Var (Local 1),Var Sp] (Local 6));
    PopStack popped6;
    PushFrame;
    PushReturnAddress 052154;
    SetLocal 1 GetLocal(1);
    SetLocal 2 popped6;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 052397
  }
LocReturn 052154:
  SetLocal 6 call_result;
  TraceOperation 052161 (Je [Var (Local 6),Con 4] (Branch F (Dloc 052167)));
  if (Equal(GetLocal(6),4)) {
    TraceOperation 052165 (Ret (Var (Local 6)));
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult GetLocal(6);
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 052167
  }
LocOp 052167:
  TraceOperation 052167 (Jg (Var (Local 6)) (Var (Local 3)) (Branch F (Dloc 052174)));
  if (GreaterThan(GetLocal(6),GetLocal(3))) {
    TraceOperation 052171 (Store (Con 3) (Var (Local 6)));
    SetLocal 3 GetLocal(6);
    Jump: 052174
  } else {
    Jump: 052174
  }
LocOp 052174:
  TraceOperation 052174 (Inc (Con 4));
  SetLocal 4 Add(GetLocal(4),1);
  TraceOperation 052176 (Jump 052138);
  Jump: 052138
LocOp 052179:
  TraceOperation 052179 (Ret (Var (Local 3)));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult GetLocal(3);
  JumpIndirect: (return) return_address_1
LocOp 052181:
  TraceOperation 052181 (Je [Var (Global 147),Con 2] (Branch F (Dloc 052210)));
  Let b1 = M[007500];
  Let b2 = M[007501];
  if (Equal(MakeHiLo(b1,b2),2)) {
    Jump: 052185
  } else {
    Jump: 052210
  }
LocOp 052185:
  TraceOperation 052185 (Jz (Var (Global 72)) (Branch F (Dloc 052196)));
  Let b1 = M[007350];
  Let b2 = M[007351];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 052188 (Call (Floc 052396) [Var (Local 1),Con 0] Sp);
    PushFrame;
    PushReturnAddress 052188;
    SetLocal 1 GetLocal(1);
    SetLocal 2 0;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 052397
  } else {
    Jump: 052196
  }
LocReturn 052188:
  PushStack call_result;
  TraceOperation 052195 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 052196:
  TraceOperation 052196 (Loadw (Con 8466) (Con 2) Sp);
  Let b1 = M[008470];
  Let b2 = M[008471];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 052202 (Call (Floc 052396) [Var Sp,Var (Local 1)] Sp);
  PopStack popped3;
  PushFrame;
  PushReturnAddress 052202;
  SetLocal 1 popped3;
  SetLocal 2 GetLocal(1);
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 052397
LocReturn 052202:
  PushStack call_result;
  TraceOperation 052209 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 052210:
  TraceOperation 052210 (Store (Con 5) (Var (Global 75)));
  Let b1 = M[007356];
  Let b2 = M[007357];
  SetLocal 5 MakeHiLo(b1,b2);
  TraceOperation 052213 (Loadw (Con 9811) (Var (Global 140)) Sp);
  Let b3 = M[007486];
  Let b4 = M[007487];
  Let b5 = M[Offset(009811,Mul(2,MakeHiLo(b3,b4)))];
  Let b6 = M[Offset(Offset(009811,Mul(2,MakeHiLo(b3,b4))),1)];
  PushStack MakeHiLo(b5,b6);
  TraceOperation 052219 (Je [Var Sp,Con 2] (Branch F (Dloc 052387)));
  PopStack popped7;
  if (Equal(popped7,2)) {
    TraceOperation 052224 (Store (Con 6) (Var (Global 140)));
    Let b8 = M[007486];
    Let b9 = M[007487];
    SetLocal 6 MakeHiLo(b8,b9);
    Jump: 052227
  } else {
    Jump: 052387
  }
LocOp 052227:
  TraceOperation 052227 (Loadw (Con 9811) (Var (Global 140)) Sp);
  Let b1 = M[007486];
  Let b2 = M[007487];
  Let b3 = M[Offset(009811,Mul(2,MakeHiLo(b1,b2)))];
  Let b4 = M[Offset(Offset(009811,Mul(2,MakeHiLo(b1,b2))),1)];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 052233 (Je [Var Sp,Con 2] (Branch F (Dloc 052242)));
  PopStack popped5;
  if (Equal(popped5,2)) {
    TraceOperation 052237 (Inc (Con 156));
    Let b6 = M[007486];
    Let b7 = M[007487];
    SetByte 007486 HiByte(Add(MakeHiLo(b6,b7),1));
    SetByte 007487 LoByte(Add(MakeHiLo(b6,b7),1));
    TraceOperation 052239 (Jump 052227);
    Jump: 052227
  } else {
    Jump: 052242
  }
LocOp 052242:
  TraceOperation 052242 (Loadw (Con 9811) (Var (Global 140)) Sp);
  Let b1 = M[007486];
  Let b2 = M[007487];
  Let b3 = M[Offset(009811,Mul(2,MakeHiLo(b1,b2)))];
  Let b4 = M[Offset(Offset(009811,Mul(2,MakeHiLo(b1,b2))),1)];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 052248 (Je [Var Sp,Con 1] (Branch F (Dloc 052384)));
  PopStack popped5;
  if (Equal(popped5,1)) {
    TraceOperation 052253 (Loadw (Con 9875) (Var (Global 140)) Sp);
    Let b6 = M[007486];
    Let b7 = M[007487];
    Let b8 = M[Offset(009875,Mul(2,MakeHiLo(b6,b7)))];
    Let b9 = M[Offset(Offset(009875,Mul(2,MakeHiLo(b6,b7))),1)];
    PushStack MakeHiLo(b8,b9);
    TraceOperation 052259 (Jz (Var Sp) (Branch F (Dloc 052384)));
    PopStack popped10;
    if (IsZero(popped10)) {
      Jump: 052263
    } else {
      Jump: 052384
    }
  } else {
    Jump: 052384
  }
LocOp 052263:
  TraceOperation 052263 (Jl (Var (Global 75)) (Var (Global 76)) (Branch F (Dloc 052384)));
  Let b1 = M[007356];
  Let b2 = M[007357];
  Let b3 = M[007358];
  Let b4 = M[007359];
  if (LessThan(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 052268 (Call (Floc 041168) [] (Local 3));
    PushFrame;
    PushReturnAddress 052268;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    SetLocal 2 0;
    SetLocal 1 0;
    Jump: 041169
  } else {
    Jump: 052384
  }
LocReturn 052268:
  SetLocal 3 call_result;
  TraceOperation 052272 (Jz (Var (Local 3)) (Branch T (Dloc 052381)));
  if (IsZero(GetLocal(3))) {
    Jump: 052381
  } else {
    TraceOperation 052276 (Loadb (Var (Local 3)) (Con 6) Sp);
    Let b1 = M[Offset(Address(GetLocal(3)),6)];
    PushStack Widen(b1);
    TraceOperation 052280 (And (Var Sp) (Con 8) Sp);
    PopStack popped2;
    PushStack And(popped2,8);
    TraceOperation 052284 (Jz (Var Sp) (Branch T (Dloc 052381)));
    PopStack popped3;
    if (IsZero(popped3)) {
      Jump: 052381
    } else {
      TraceOperation 052288 (Je [Var (Local 3),Con 21512,Con 22088,Con 22169] (Branch T (Dloc 052306)));
      if (LogOr(LogOr(Equal(GetLocal(3),21512),Equal(GetLocal(3),22088)),Equal(GetLocal(3),22169))) {
        Jump: 052306
      } else {
        TraceOperation 052298 (Je [Var (Local 3),Con 22178,Con 21656] (Branch F (Dloc 052309)));
        if (LogOr(Equal(GetLocal(3),22178),Equal(GetLocal(3),21656))) {
          Jump: 052306
        } else {
          Jump: 052309
        }
      }
    }
  }
LocOp 052306:
  TraceOperation 052306 (Jump 052263);
  Jump: 052263
LocOp 052309:
  TraceOperation 052309 (CallN (Floc 046328) []);
  PushFrame;
  PushReturnAddress 052309;
  MakeRoutineFrame 0;
  Jump: 046329
LocReturn 052309:
  TraceOperation 052312 (Push (Var (Global 177)));
  Let b1 = M[007560];
  Let b2 = M[007561];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 052315 (Push (Var (Global 178)));
  Let b3 = M[007562];
  Let b4 = M[007563];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 052318 (Storew (Con 10451) (Con 0) (Var (Global 175)));
  Let b5 = M[007556];
  Let b6 = M[007557];
  SetByte 010451 b5;
  SetByte 010452 b6;
  TraceOperation 052324 (Add (Con 10451) (Con 2) Sp);
  PushStack 10453;
  TraceOperation 052330 (CallN (Floc 052024) [Var (Global 175),Con 10067,Var Sp]);
  Let b7 = M[007556];
  Let b8 = M[007557];
  PopStack popped9;
  PushFrame;
  PushReturnAddress 052330;
  SetLocal 1 MakeHiLo(b7,b8);
  SetLocal 2 10067;
  SetLocal 3 popped9;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 052025
LocReturn 052330:
  TraceOperation 052338 (Store (Con 193) (Con 0));
  SetByte 007560 0;
  SetByte 007561 0;
  TraceOperation 052341 (Store (Con 191) (Con 0));
  SetByte 007556 0;
  SetByte 007557 0;
  TraceOperation 052344 (Store (Con 194) (Var (Global 75)));
  Let b1 = M[007356];
  Let b2 = M[007357];
  SetByte 007562 b1;
  SetByte 007563 b2;
  TraceOperation 052347 (Loadw (Con 9875) (Var (Global 140)) Sp);
  Let b3 = M[007486];
  Let b4 = M[007487];
  Let b5 = M[Offset(009875,Mul(2,MakeHiLo(b3,b4)))];
  Let b6 = M[Offset(Offset(009875,Mul(2,MakeHiLo(b3,b4))),1)];
  PushStack MakeHiLo(b5,b6);
  TraceOperation 052353 (CallN (Floc 050080) [Var (Global 37),Var (Global 38),Var Sp]);
  Let b7 = M[007280];
  Let b8 = M[007281];
  Let b9 = M[007282];
  Let b10 = M[007283];
  PopStack popped11;
  PushFrame;
  PushReturnAddress 052353;
  SetLocal 1 MakeHiLo(b7,b8);
  SetLocal 2 MakeHiLo(b9,b10);
  SetLocal 3 popped11;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 050081
LocReturn 052353:
  TraceOperation 052360 (Store (Con 91) (Var (Local 5)));
  SetByte 007356 HiByte(GetLocal(5));
  SetByte 007357 LoByte(GetLocal(5));
  TraceOperation 052363 (Store (Con 163) (Con 1));
  SetByte 007500 0;
  SetByte 007501 1;
  TraceOperation 052366 (CallN (Floc 052036) []);
  PushFrame;
  PushReturnAddress 052366;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  SetLocal 1 0;
  Jump: 052037
LocReturn 052366:
  TraceOperation 052369 (Pull (Con 194));
  PopStack popped1;
  SetByte 007562 HiByte(popped1);
  SetByte 007563 LoByte(popped1);
  TraceOperation 052372 (Pull (Con 193));
  PopStack popped2;
  SetByte 007560 HiByte(popped2);
  SetByte 007561 LoByte(popped2);
  TraceOperation 052375 (Store (Con 156) (Var (Local 6)));
  SetByte 007486 HiByte(GetLocal(6));
  SetByte 007487 LoByte(GetLocal(6));
  TraceOperation 052378 (Jump 052114);
  Jump: 052114
LocOp 052381:
  TraceOperation 052381 (Jump 052263);
  Jump: 052263
LocOp 052384:
  TraceOperation 052384 (Store (Con 156) (Var (Local 6)));
  SetByte 007486 HiByte(GetLocal(6));
  SetByte 007487 LoByte(GetLocal(6));
  Jump: 052387
LocOp 052387:
  TraceOperation 052387 (Store (Con 91) (Var (Local 5)));
  SetByte 007356 HiByte(GetLocal(5));
  SetByte 007357 LoByte(GetLocal(5));
  TraceOperation 052390 (Store (Con 163) (Con 2));
  SetByte 007500 0;
  SetByte 007501 2;
  TraceOperation 052393 (Jump 052185);
  Jump: 052185
--------------------------------------------------
LocRoutine 052396:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 052397
LocOp 052397:
  TraceOperation 052397 (Push (Var (Global 40)));
  Let b1 = M[007286];
  Let b2 = M[007287];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 052400 (Push (Var (Global 36)));
  Let b3 = M[007278];
  Let b4 = M[007279];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 052403 (Push (Var (Global 47)));
  Let b5 = M[007300];
  Let b6 = M[007301];
  PushStack MakeHiLo(b5,b6);
  TraceOperation 052406 (Push (Var (Global 48)));
  Let b7 = M[007302];
  Let b8 = M[007303];
  PushStack MakeHiLo(b7,b8);
  TraceOperation 052409 (Store (Con 56) (Var (Global 73)));
  Let b9 = M[007352];
  Let b10 = M[007353];
  SetByte 007286 b9;
  SetByte 007287 b10;
  TraceOperation 052412 (Store (Con 52) (Var (Global 31)));
  Let b11 = M[007268];
  Let b12 = M[007269];
  SetByte 007278 b11;
  SetByte 007279 b12;
  TraceOperation 052415 (Jz (Var (Global 74)) (Branch T (Dloc 052427)));
  Let b13 = M[007354];
  Let b14 = M[007355];
  if (IsZero(MakeHiLo(b13,b14))) {
    Jump: 052427
  } else {
    TraceOperation 052418 (Store (Con 63) (Var (Local 2)));
    SetByte 007300 HiByte(GetLocal(2));
    SetByte 007301 LoByte(GetLocal(2));
    TraceOperation 052421 (Store (Con 64) (Var (Local 1)));
    SetByte 007302 HiByte(GetLocal(1));
    SetByte 007303 LoByte(GetLocal(1));
    TraceOperation 052424 (Jump 052433);
    Jump: 052433
  }
LocOp 052427:
  TraceOperation 052427 (Store (Con 63) (Var (Local 1)));
  SetByte 007300 HiByte(GetLocal(1));
  SetByte 007301 LoByte(GetLocal(1));
  TraceOperation 052430 (Store (Con 64) (Var (Local 2)));
  SetByte 007302 HiByte(GetLocal(2));
  SetByte 007303 LoByte(GetLocal(2));
  Jump: 052433
LocOp 052433:
  TraceOperation 052433 (Call (Floc 105956) [] (Local 3));
  PushFrame;
  PushReturnAddress 052433;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  SetLocal 1 0;
  Jump: 105957
LocReturn 052433:
  SetLocal 3 call_result;
  TraceOperation 052437 (Pull (Con 64));
  PopStack popped1;
  SetByte 007302 HiByte(popped1);
  SetByte 007303 LoByte(popped1);
  TraceOperation 052440 (Pull (Con 63));
  PopStack popped2;
  SetByte 007300 HiByte(popped2);
  SetByte 007301 LoByte(popped2);
  TraceOperation 052443 (Pull (Con 52));
  PopStack popped3;
  SetByte 007278 HiByte(popped3);
  SetByte 007279 LoByte(popped3);
  TraceOperation 052446 (Pull (Con 56));
  PopStack popped4;
  SetByte 007286 HiByte(popped4);
  SetByte 007287 LoByte(popped4);
  TraceOperation 052449 (Ret (Var (Local 3)));
  PopFrame;
  PopReturnAddress return_address_5;
  SetResult GetLocal(3);
  JumpIndirect: (return) return_address_5
--------------------------------------------------
LocRoutine 052452:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 052453
LocOp 052453:
  TraceOperation 052453 (Call (Floc 026172) [Var (Local 1),Con 4] Sp);
  PushFrame;
  PushReturnAddress 052453;
  SetLocal 1 GetLocal(1);
  SetLocal 2 4;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 052453:
  PushStack call_result;
  TraceOperation 052460 (Jz (Var Sp) (Branch F (Dloc 052473)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 052463 (Call (Floc 026172) [Var (Local 1),Con 3] Sp);
    PushFrame;
    PushReturnAddress 052463;
    SetLocal 1 GetLocal(1);
    SetLocal 2 3;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 052473
  }
LocReturn 052463:
  PushStack call_result;
  TraceOperation 052470 (Jz (Var Sp) (Branch T (Dloc 052478)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 052478
  } else {
    Jump: 052473
  }
LocOp 052473:
  TraceOperation 052473 (CallN (Floc 080428) [Var (Local 1)]);
  PushFrame;
  PushReturnAddress 052473;
  SetLocal 1 GetLocal(1);
  MakeRoutineFrame 1;
  Jump: 080429
LocReturn 052473:
  Jump: 052478
LocOp 052478:
  TraceOperation 052478 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 052480:
  MakeRoutineFrame 0;
  Jump: 052481
LocOp 052481:
  TraceOperation 052481 (Sub (Con 327) (Con 255) (Global 0));
  SetByte 007206 0;
  SetByte 007207 72;
  TraceOperation 052487 (CallN (Floc 088936) [Con 1]);
  PushFrame;
  PushReturnAddress 052487;
  SetLocal 1 1;
  MakeRoutineFrame 14;
  SetLocal 14 0;
  SetLocal 13 0;
  SetLocal 12 0;
  SetLocal 11 0;
  SetLocal 10 0;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 088937
LocReturn 052487:
  Jump: 052492
LocOp 052492:
  TraceOperation 052492 (Jz (Con 1) (Branch T (Dloc 052522)));
  Jump: 052495
LocOp 052495:
  TraceOperation 052495 (Jz (Var (Global 21)) (Branch F (Dloc 052509)));
  Let b1 = M[007248];
  Let b2 = M[007249];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 052498 (Store (Con 196) (Con 1));
    SetByte 007566 0;
    SetByte 007567 1;
    TraceOperation 052501 (CallN (Floc 088684) [Con 2]);
    PushFrame;
    PushReturnAddress 052501;
    SetLocal 1 2;
    MakeRoutineFrame 4;
    SetLocal 4 0;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 088685
  } else {
    Jump: 052509
  }
LocReturn 052501:
  TraceOperation 052506 (Jump 052495);
  Jump: 052495
LocOp 052509:
  TraceOperation 052509 (Call (Floc 088684) [Con 3] Sp);
  PushFrame;
  PushReturnAddress 052509;
  SetLocal 1 3;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 088685
LocReturn 052509:
  PushStack call_result;
  TraceOperation 052515 (Jz (Var Sp) (Branch F (Dloc 052519)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 052518 Rtrue;
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  } else {
    Jump: 052519
  }
LocOp 052519:
  TraceOperation 052519 (Jump 052492);
  Jump: 052492
LocOp 052522:
  TraceOperation 052522 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 052524:
  MakeRoutineFrame 0;
  Jump: 052525
LocOp 052525:
  TraceOperation 052525 (Loadw (Con 11559) (Con 25) Sp);
  Let b1 = M[011609];
  Let b2 = M[011610];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 052531 (CallN (Floc 088936) [Var Sp]);
  PopStack popped3;
  PushFrame;
  PushReturnAddress 052531;
  SetLocal 1 popped3;
  MakeRoutineFrame 14;
  SetLocal 14 0;
  SetLocal 13 0;
  SetLocal 12 0;
  SetLocal 11 0;
  SetLocal 10 0;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 088937
LocReturn 052531:
  TraceOperation 052536 (Loadw (Con 11625) (Con 25) Sp);
  Let b1 = M[011675];
  Let b2 = M[011676];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 052542 (CallN (Floc 088936) [Var Sp]);
  PopStack popped3;
  PushFrame;
  PushReturnAddress 052542;
  SetLocal 1 popped3;
  MakeRoutineFrame 14;
  SetLocal 14 0;
  SetLocal 13 0;
  SetLocal 12 0;
  SetLocal 11 0;
  SetLocal 10 0;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 088937
LocReturn 052542:
  TraceOperation 052547 (Loadw (Con 11691) (Con 25) Sp);
  Let b1 = M[011741];
  Let b2 = M[011742];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 052553 (CallN (Floc 088936) [Var Sp]);
  PopStack popped3;
  PushFrame;
  PushReturnAddress 052553;
  SetLocal 1 popped3;
  MakeRoutineFrame 14;
  SetLocal 14 0;
  SetLocal 13 0;
  SetLocal 12 0;
  SetLocal 11 0;
  SetLocal 10 0;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 088937
LocReturn 052553:
  TraceOperation 052558 (CallN (Floc 024584) []);
  PushFrame;
  PushReturnAddress 052558;
  MakeRoutineFrame 0;
  Jump: 024585
LocReturn 052558:
  TraceOperation 052561 (Print "\n\n\n");
  GamePrint "\n\n\n";
  TraceOperation 052566 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 052568:
  MakeRoutineFrame 0;
  Jump: 052569
LocOp 052569:
  TraceOperation 052569 (Store (Con 38) (Con 1));
  SetByte 007250 0;
  SetByte 007251 1;
  TraceOperation 052572 (Loadw (Con 10585) (Con 0) (Global 31));
  Let b1 = M[010585];
  Let b2 = M[010586];
  SetByte 007268 b1;
  SetByte 007269 b2;
  TraceOperation 052578 (Loadw (Con 10585) (Con 3) (Global 24));
  Let b3 = M[010591];
  Let b4 = M[010592];
  SetByte 007254 b3;
  SetByte 007255 b4;
  TraceOperation 052584 (Store (Con 48) (Con 0));
  SetByte 007270 0;
  SetByte 007271 0;
  TraceOperation 052587 (Store (Con 17) (Con 0));
  SetByte 007208 0;
  SetByte 007209 0;
  TraceOperation 052590 (CallN (Floc 053640) []);
  PushFrame;
  PushReturnAddress 052590;
  MakeRoutineFrame 1;
  SetLocal 1 0;
  Jump: 053641
LocReturn 052590:
  TraceOperation 052593 (CallN (Floc 110008) []);
  PushFrame;
  PushReturnAddress 052593;
  MakeRoutineFrame 0;
  Jump: 110009
LocReturn 052593:
  TraceOperation 052596 (CallN (Floc 110004) []);
  PushFrame;
  PushReturnAddress 052596;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  SetLocal 1 0;
  Jump: 110005
LocReturn 052596:
  TraceOperation 052599 (CallN (Floc 110084) []);
  PushFrame;
  PushReturnAddress 052599;
  MakeRoutineFrame 0;
  Jump: 110085
LocReturn 052599:
  TraceOperation 052602 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 052604:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 052605
LocOp 052605:
  TraceOperation 052605 (Jz (Con 0) (Branch T (Dloc 052613)));
  Jump: 052613
LocReturn 052608:
  Jump: 052613
LocOp 052613:
  TraceOperation 052613 (Store (Con 1) (Con 1));
  SetLocal 1 1;
  Jump: 052616
LocOp 052616:
  TraceOperation 052616 (Jg (Var (Local 1)) (Con 100) (Branch T (Dloc 052629)));
  if (GreaterThan(GetLocal(1),100)) {
    Jump: 052629
  } else {
    TraceOperation 052620 (Random (Var (Local 1)) (Global 239));
    LetRandom random1 GetLocal(1);
    SetByte 007684 HiByte(random1);
    SetByte 007685 LoByte(random1);
    TraceOperation 052624 (Inc (Con 1));
    SetLocal 1 Add(GetLocal(1),1);
    TraceOperation 052626 (Jump 052616);
    Jump: 052616
  }
LocOp 052629:
  TraceOperation 052629 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 052632:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 052633
LocOp 052633:
  TraceOperation 052633 (Store (Con 47) (Con 41));
  SetByte 007268 0;
  SetByte 007269 41;
  TraceOperation 052638 (Loadw (Con 10585) (Con 0) (Local 1));
  Let b1 = M[010585];
  Let b2 = M[010586];
  SetLocal 1 MakeHiLo(b1,b2);
  TraceOperation 052644 (Call (Floc 102544) [Var (Local 1)] (Global 1));
  PushFrame;
  PushReturnAddress 052644;
  SetLocal 1 GetLocal(1);
  MakeRoutineFrame 1;
  Jump: 102545
LocReturn 052644:
  SetByte 007208 HiByte(call_result);
  SetByte 007209 LoByte(call_result);
  TraceOperation 052650 (Jz (Var (Global 1)) (Branch F (Dloc 052683)));
  Let b1 = M[007208];
  Let b2 = M[007209];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 052653 (Loadw (Con 10585) (Con 2) (Global 1));
    Let b3 = M[010589];
    Let b4 = M[010590];
    SetByte 007208 b3;
    SetByte 007209 b4;
    TraceOperation 052659 (Loadw (Con 10585) (Con 1) Sp);
    Let b5 = M[010587];
    Let b6 = M[010588];
    PushStack MakeHiLo(b5,b6);
    TraceOperation 052665 (Jz (Var Sp) (Branch T (Dloc 052680)));
    PopStack popped7;
    if (IsZero(popped7)) {
      Jump: 052680
    } else {
      TraceOperation 052668 (Loadw (Con 10585) (Con 1) Sp);
      Let b8 = M[010587];
      Let b9 = M[010588];
      PushStack MakeHiLo(b8,b9);
      TraceOperation 052674 (Insert_obj (Var (Local 1)) (Var Sp));
      PopStack popped10;
      Let b11 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),6)];
      Let b12 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),6),1)];
      if (IsZero(MakeHiLo(b11,b12))) {} else {
        Let b13 = M[Offset(Offset(000378,Mul(MakeHiLo(b11,b12),14)),10)];
        Let b14 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b11,b12),14)),10),1)];
        if (Equal(MakeHiLo(b13,b14),GetLocal(1))) {
          Let b15 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),8)];
          Let b16 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),8),1)];
          SetByte Offset(Offset(000378,Mul(MakeHiLo(b11,b12),14)),10) b15;
          SetByte Offset(Offset(Offset(000378,Mul(MakeHiLo(b11,b12),14)),10),1) b16;
        } else {
          Let loop_var17 = MakeHiLo(b13,b14);
          Label 18: {
            Let b19 = M[Offset(Offset(000378,Mul(loop_var17,14)),8)];
            Let b20 = M[Offset(Offset(Offset(000378,Mul(loop_var17,14)),8),1)];
            if (Equal(MakeHiLo(b19,b20),GetLocal(1))) {
              Let b21 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),8)];
              Let b22 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),8),1)];
              SetByte Offset(Offset(000378,Mul(loop_var17,14)),8) b21;
              SetByte Offset(Offset(Offset(000378,Mul(loop_var17,14)),8),1) b22;
            } else {
              Assign loop_var17 = MakeHiLo(b19,b20);
              Goto: Label 18
            }
          }
        }
      }
      SetByte Offset(Offset(000378,Mul(GetLocal(1),14)),6) HiByte(popped10);
      SetByte Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),6),1) LoByte(popped10);
      Let b23 = M[Offset(Offset(000378,Mul(popped10,14)),10)];
      Let b24 = M[Offset(Offset(Offset(000378,Mul(popped10,14)),10),1)];
      SetByte Offset(Offset(000378,Mul(GetLocal(1),14)),8) b23;
      SetByte Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),8),1) b24;
      SetByte Offset(Offset(000378,Mul(popped10,14)),10) HiByte(GetLocal(1));
      SetByte Offset(Offset(Offset(000378,Mul(popped10,14)),10),1) LoByte(GetLocal(1));
      TraceOperation 052677 (Jump 052683);
      Jump: 052683
    }
  } else {
    Jump: 052683
  }
LocOp 052680:
  TraceOperation 052680 (Insert_obj (Var (Local 1)) (Var (Global 1)));
  Let b1 = M[007208];
  Let b2 = M[007209];
  Let b3 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),6)];
  Let b4 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),6),1)];
  if (IsZero(MakeHiLo(b3,b4))) {} else {
    Let b5 = M[Offset(Offset(000378,Mul(MakeHiLo(b3,b4),14)),10)];
    Let b6 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b3,b4),14)),10),1)];
    if (Equal(MakeHiLo(b5,b6),GetLocal(1))) {
      Let b7 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),8)];
      Let b8 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),8),1)];
      SetByte Offset(Offset(000378,Mul(MakeHiLo(b3,b4),14)),10) b7;
      SetByte Offset(Offset(Offset(000378,Mul(MakeHiLo(b3,b4),14)),10),1) b8;
    } else {
      Let loop_var9 = MakeHiLo(b5,b6);
      Label 10: {
        Let b11 = M[Offset(Offset(000378,Mul(loop_var9,14)),8)];
        Let b12 = M[Offset(Offset(Offset(000378,Mul(loop_var9,14)),8),1)];
        if (Equal(MakeHiLo(b11,b12),GetLocal(1))) {
          Let b13 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),8)];
          Let b14 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),8),1)];
          SetByte Offset(Offset(000378,Mul(loop_var9,14)),8) b13;
          SetByte Offset(Offset(Offset(000378,Mul(loop_var9,14)),8),1) b14;
        } else {
          Assign loop_var9 = MakeHiLo(b11,b12);
          Goto: Label 10
        }
      }
    }
  }
  SetByte Offset(Offset(000378,Mul(GetLocal(1),14)),6) b1;
  SetByte Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),6),1) b2;
  Let b15 = M[Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),10)];
  Let b16 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),10),1)];
  SetByte Offset(Offset(000378,Mul(GetLocal(1),14)),8) b15;
  SetByte Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),8),1) b16;
  SetByte Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),10) HiByte(GetLocal(1));
  SetByte Offset(Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),10),1) LoByte(GetLocal(1));
  Jump: 052683
LocOp 052683:
  TraceOperation 052683 (Je [Var (Local 1),Var (Global 31)] (Branch T (Dloc 052692)));
  Let b1 = M[007268];
  Let b2 = M[007269];
  if (Equal(GetLocal(1),MakeHiLo(b1,b2))) {
    Jump: 052692
  } else {
    TraceOperation 052687 (CallN (Floc 103652) [Var (Local 1)]);
    PushFrame;
    PushReturnAddress 052687;
    SetLocal 1 GetLocal(1);
    MakeRoutineFrame 3;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 103653
  }
LocReturn 052687:
  Jump: 052692
LocOp 052692:
  TraceOperation 052692 (Store (Con 48) (Var (Global 1)));
  Let b1 = M[007208];
  Let b2 = M[007209];
  SetByte 007270 b1;
  SetByte 007271 b2;
  TraceOperation 052695 (CallN (Floc 037120) []);
  PushFrame;
  PushReturnAddress 052695;
  MakeRoutineFrame 0;
  Jump: 037121
LocReturn 052695:
  TraceOperation 052698 (CallN (Floc 053324) []);
  PushFrame;
  PushReturnAddress 052698;
  MakeRoutineFrame 1;
  SetLocal 1 0;
  Jump: 053325
LocReturn 052698:
  TraceOperation 052701 (CallN (Floc 103776) []);
  PushFrame;
  PushReturnAddress 052701;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  SetLocal 1 0;
  Jump: 103777
LocReturn 052701:
  TraceOperation 052704 (Store (Con 53) (Var (Global 31)));
  Let b1 = M[007268];
  Let b2 = M[007269];
  SetByte 007280 b1;
  SetByte 007281 b2;
  TraceOperation 052707 (Store (Con 52) (Con 0));
  SetByte 007278 0;
  SetByte 007279 0;
  TraceOperation 052710 (Store (Con 54) (Var (Global 32)));
  Let b3 = M[007270];
  Let b4 = M[007271];
  SetByte 007282 b3;
  SetByte 007283 b4;
  TraceOperation 052713 (Store (Con 56) (Con 72));
  SetByte 007286 0;
  SetByte 007287 72;
  TraceOperation 052716 Rfalse;
  PopFrame;
  PopReturnAddress return_address_5;
  SetResult 0;
  JumpIndirect: (return) return_address_5
--------------------------------------------------
LocRoutine 052720:
  MakeRoutineFrame 0;
  Jump: 052721
LocOp 052721:
  TraceOperation 052721 (Jz (Var (Global 180)) (Branch T Dfalse));
  Let b1 = M[007566];
  Let b2 = M[007567];
  if (IsZero(MakeHiLo(b1,b2))) {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  } else {
    TraceOperation 052724 (Store (Con 38) (Con 0));
    SetByte 007250 0;
    SetByte 007251 0;
    TraceOperation 052727 (CallN (Floc 042340) [Con 8466]);
    PushFrame;
    PushReturnAddress 052727;
    SetLocal 1 8466;
    MakeRoutineFrame 11;
    SetLocal 11 0;
    SetLocal 10 0;
    SetLocal 9 0;
    SetLocal 8 0;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 042341
  }
LocReturn 052727:
  TraceOperation 052733 (CallN (Floc 052740) [Con 8466]);
  PushFrame;
  PushReturnAddress 052733;
  SetLocal 1 8466;
  MakeRoutineFrame 1;
  Jump: 052741
LocReturn 052733:
  TraceOperation 052739 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 052740:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 052741
LocOp 052741:
  TraceOperation 052741 (Loadw (Var (Local 1)) (Con 0) Sp);
  Let b1 = M[Offset(Address(GetLocal(1)),0)];
  Let b2 = M[Offset(Offset(Address(GetLocal(1)),0),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 052745 (Je [Var Sp,Con 79] (Branch F (Dloc 052752)));
  PopStack popped3;
  if (Equal(popped3,79)) {
    TraceOperation 052749 (Store (Con 57) (Con 1));
    SetByte 007288 0;
    SetByte 007289 1;
    Jump: 052752
  } else {
    Jump: 052752
  }
LocOp 052752:
  TraceOperation 052752 (Loadw (Var (Local 1)) (Con 0) Sp);
  Let b1 = M[Offset(Address(GetLocal(1)),0)];
  Let b2 = M[Offset(Offset(Address(GetLocal(1)),0),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 052756 (Je [Var Sp,Con 66] (Branch F (Dloc 052785)));
  PopStack popped3;
  if (Equal(popped3,66)) {
    TraceOperation 052760 (Loadw (Var (Local 1)) (Con 2) Sp);
    Let b4 = M[Offset(Address(GetLocal(1)),4)];
    Let b5 = M[Offset(Offset(Address(GetLocal(1)),4),1)];
    PushStack MakeHiLo(b4,b5);
    TraceOperation 052764 (Je [Var Sp,Var (Global 31)] (Branch F (Dloc 052785)));
    PopStack popped6;
    Let b7 = M[007268];
    Let b8 = M[007269];
    if (Equal(popped6,MakeHiLo(b7,b8))) {
      TraceOperation 052768 (Je [Var (Global 37),Var (Global 31)] (Branch T (Dloc 052785)));
      Let b9 = M[007280];
      Let b10 = M[007281];
      Let b11 = M[007268];
      Let b12 = M[007269];
      if (Equal(MakeHiLo(b9,b10),MakeHiLo(b11,b12))) {
        Jump: 052785
      } else {
        TraceOperation 052772 (Storew (Var (Local 1)) (Con 0) (Con 9));
        SetByte Offset(Address(GetLocal(1)),0) 0;
        SetByte Offset(Offset(Address(GetLocal(1)),0),1) 9;
        TraceOperation 052777 (Storew (Var (Local 1)) (Con 2) (Var (Global 37)));
        Let b13 = M[007280];
        Let b14 = M[007281];
        SetByte Offset(Address(GetLocal(1)),4) b13;
        SetByte Offset(Offset(Address(GetLocal(1)),4),1) b14;
        TraceOperation 052782 (Store (Con 53) (Var (Global 31)));
        Let b15 = M[007268];
        Let b16 = M[007269];
        SetByte 007280 b15;
        SetByte 007281 b16;
        Jump: 052785
      }
    } else {
      Jump: 052785
    }
  } else {
    Jump: 052785
  }
LocOp 052785:
  TraceOperation 052785 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 052794:
  MakeRoutineFrame 0;
  Jump: 052795
LocOp 052795:
  TraceOperation 052795 (Loadw (Con 8466) (Con 0) (Global 40));
  Let b1 = M[008466];
  Let b2 = M[008467];
  SetByte 007286 b1;
  SetByte 007287 b2;
  TraceOperation 052801 (Store (Con 52) (Con 0));
  SetByte 007278 0;
  SetByte 007279 0;
  TraceOperation 052804 (Je [Var (Global 37),Var (Global 31)] (Branch T (Dloc 052811)));
  Let b3 = M[007280];
  Let b4 = M[007281];
  Let b5 = M[007268];
  Let b6 = M[007269];
  if (Equal(MakeHiLo(b3,b4),MakeHiLo(b5,b6))) {
    Jump: 052811
  } else {
    TraceOperation 052808 (Store (Con 52) (Var (Global 31)));
    Let b7 = M[007268];
    Let b8 = M[007269];
    SetByte 007278 b7;
    SetByte 007279 b8;
    Jump: 052811
  }
LocOp 052811:
  TraceOperation 052811 (Store (Con 58) (Con 0));
  SetByte 007290 0;
  SetByte 007291 0;
  TraceOperation 052814 (Store (Con 59) (Con 0));
  SetByte 007292 0;
  SetByte 007293 0;
  TraceOperation 052817 (Store (Con 61) (Con 0));
  SetByte 007296 0;
  SetByte 007297 0;
  TraceOperation 052820 (Loadw (Con 8466) (Con 1) Sp);
  Let b1 = M[008468];
  Let b2 = M[008469];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 052826 (Jl (Var Sp) (Con 1) (Branch T (Dloc 052842)));
  PopStack popped3;
  if (LessThan(popped3,1)) {
    Jump: 052842
  } else {
    TraceOperation 052830 (Loadw (Con 8466) (Con 2) (Global 42));
    Let b4 = M[008470];
    Let b5 = M[008471];
    SetByte 007290 b4;
    SetByte 007291 b5;
    TraceOperation 052836 (Jz (Var (Global 42)) (Branch F (Dloc 052842)));
    Let b6 = M[007290];
    Let b7 = M[007291];
    if (IsZero(MakeHiLo(b6,b7))) {
      TraceOperation 052839 (Store (Con 61) (Con 1));
      SetByte 007296 0;
      SetByte 007297 1;
      Jump: 052842
    } else {
      Jump: 052842
    }
  }
LocOp 052842:
  TraceOperation 052842 (Loadw (Con 8466) (Con 1) Sp);
  Let b1 = M[008468];
  Let b2 = M[008469];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 052848 (Jl (Var Sp) (Con 2) (Branch T (Dloc 052864)));
  PopStack popped3;
  if (LessThan(popped3,2)) {
    Jump: 052864
  } else {
    TraceOperation 052852 (Loadw (Con 8466) (Con 3) (Global 43));
    Let b4 = M[008472];
    Let b5 = M[008473];
    SetByte 007292 b4;
    SetByte 007293 b5;
    TraceOperation 052858 (Jz (Var (Global 43)) (Branch F (Dloc 052864)));
    Let b6 = M[007292];
    Let b7 = M[007293];
    if (IsZero(MakeHiLo(b6,b7))) {
      TraceOperation 052861 (Store (Con 61) (Con 1));
      SetByte 007296 0;
      SetByte 007297 1;
      Jump: 052864
    } else {
      Jump: 052864
    }
  }
LocOp 052864:
  TraceOperation 052864 (Je [Var (Global 42),Con 1] (Branch F (Dloc 052874)));
  Let b1 = M[007290];
  Let b2 = M[007291];
  if (Equal(MakeHiLo(b1,b2),1)) {
    TraceOperation 052868 (Store (Con 63) (Var (Global 59)));
    Let b3 = M[007324];
    Let b4 = M[007325];
    SetByte 007300 b3;
    SetByte 007301 b4;
    TraceOperation 052871 (Jump 052877);
    Jump: 052877
  } else {
    Jump: 052874
  }
LocOp 052874:
  TraceOperation 052874 (Store (Con 63) (Var (Global 42)));
  Let b1 = M[007290];
  Let b2 = M[007291];
  SetByte 007300 b1;
  SetByte 007301 b2;
  Jump: 052877
LocOp 052877:
  TraceOperation 052877 (Je [Var (Global 43),Con 1] (Branch F (Dloc 052897)));
  Let b1 = M[007292];
  Let b2 = M[007293];
  if (Equal(MakeHiLo(b1,b2),1)) {
    TraceOperation 052881 (Je [Var (Global 42),Con 1] (Branch F (Dloc 052891)));
    Let b3 = M[007290];
    Let b4 = M[007291];
    if (Equal(MakeHiLo(b3,b4),1)) {
      TraceOperation 052885 (Store (Con 64) (Var (Global 60)));
      Let b5 = M[007326];
      Let b6 = M[007327];
      SetByte 007302 b5;
      SetByte 007303 b6;
      TraceOperation 052888 (Jump 052894);
      Jump: 052894
    } else {
      Jump: 052891
    }
  } else {
    Jump: 052897
  }
LocOp 052891:
  TraceOperation 052891 (Store (Con 64) (Var (Global 59)));
  Let b1 = M[007324];
  Let b2 = M[007325];
  SetByte 007302 b1;
  SetByte 007303 b2;
  Jump: 052894
LocOp 052894:
  TraceOperation 052894 (Jump 052900);
  Jump: 052900
LocOp 052897:
  TraceOperation 052897 (Store (Con 64) (Var (Global 43)));
  Let b1 = M[007292];
  Let b2 = M[007293];
  SetByte 007302 b1;
  SetByte 007303 b2;
  Jump: 052900
LocOp 052900:
  TraceOperation 052900 (Jz (Var (Global 45)) (Branch T (Dloc 052942)));
  Let b1 = M[007296];
  Let b2 = M[007297];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 052942
  } else {
    TraceOperation 052903 (Loadw (Con 8338) (Con 0) Sp);
    Let b3 = M[008338];
    Let b4 = M[008339];
    PushStack MakeHiLo(b3,b4);
    TraceOperation 052909 (Jz (Var Sp) (Branch F (Dloc 052920)));
    PopStack popped5;
    if (IsZero(popped5)) {
      TraceOperation 052912 (CallN (Floc 036596) [Con 4097,Con 2]);
      PushFrame;
      PushReturnAddress 052912;
      SetLocal 1 4097;
      SetLocal 2 2;
      MakeRoutineFrame 6;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      SetLocal 3 0;
      Jump: 036597
    } else {
      Jump: 052920
    }
  }
LocReturn 052912:
  TraceOperation 052919 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 052920:
  TraceOperation 052920 (Jz (Var (Global 44)) (Branch T (Dloc 052933)));
  Let b1 = M[007294];
  Let b2 = M[007295];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 052933
  } else {
    TraceOperation 052923 (Store (Con 60) (Con 0));
    SetByte 007294 0;
    SetByte 007295 0;
    TraceOperation 052926 (CallN (Floc 036596) [Con 4097,Con 1]);
    PushFrame;
    PushReturnAddress 052926;
    SetLocal 1 4097;
    SetLocal 2 1;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 036597
  }
LocReturn 052926:
  Jump: 052933
LocOp 052933:
  TraceOperation 052933 (CallN (Floc 052976) []);
  PushFrame;
  PushReturnAddress 052933;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  SetLocal 2 0;
  SetLocal 1 0;
  Jump: 052977
LocReturn 052933:
  TraceOperation 052936 (Store (Con 61) (Con 0));
  SetByte 007296 0;
  SetByte 007297 0;
  TraceOperation 052939 (Jump 052949);
  Jump: 052949
LocOp 052942:
  TraceOperation 052942 (CallN (Floc 076760) [Var (Global 40),Var (Global 47),Var (Global 48)]);
  Let b1 = M[007286];
  Let b2 = M[007287];
  Let b3 = M[007300];
  Let b4 = M[007301];
  Let b5 = M[007302];
  Let b6 = M[007303];
  PushFrame;
  PushReturnAddress 052942;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 MakeHiLo(b3,b4);
  SetLocal 3 MakeHiLo(b5,b6);
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 076761
LocReturn 052942:
  Jump: 052949
LocOp 052949:
  TraceOperation 052949 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 052956)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 052953 (Jz (Var (Global 36)) (Branch T (Dloc 052959)));
    Let b5 = M[007278];
    Let b6 = M[007279];
    if (IsZero(MakeHiLo(b5,b6))) {
      Jump: 052959
    } else {
      Jump: 052956
    }
  } else {
    Jump: 052956
  }
LocOp 052956:
  TraceOperation 052956 (Store (Con 56) (Con 72));
  SetByte 007286 0;
  SetByte 007287 72;
  Jump: 052959
LocOp 052959:
  TraceOperation 052959 (Store (Con 53) (Var (Global 31)));
  Let b1 = M[007268];
  Let b2 = M[007269];
  SetByte 007280 b1;
  SetByte 007281 b2;
  TraceOperation 052962 (Store (Con 52) (Con 0));
  SetByte 007278 0;
  SetByte 007279 0;
  TraceOperation 052965 (Jz (Var (Global 41)) (Branch T (Dloc 052972)));
  Let b3 = M[007288];
  Let b4 = M[007289];
  if (IsZero(MakeHiLo(b3,b4))) {
    Jump: 052972
  } else {
    TraceOperation 052968 (CallN (Floc 089744) []);
    PushFrame;
    PushReturnAddress 052968;
    MakeRoutineFrame 2;
    SetLocal 2 0;
    SetLocal 1 0;
    Jump: 089745
  }
LocReturn 052968:
  TraceOperation 052971 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 052972:
  TraceOperation 052972 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 052976:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 052977
LocOp 052977:
  TraceOperation 052977 (Store (Con 1) (Var (Global 1)));
  Let b1 = M[007208];
  Let b2 = M[007209];
  SetLocal 1 MakeHiLo(b1,b2);
  TraceOperation 052980 (Store (Con 2) (Con 1));
  SetLocal 2 1;
  Jump: 052983
LocOp 052983:
  TraceOperation 052983 (Loadw (Con 8338) (Con 0) Sp);
  Let b1 = M[008338];
  Let b2 = M[008339];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 052989 (Jg (Var (Local 2)) (Var Sp) (Branch T (Dloc 053060)));
  PopStack popped3;
  if (GreaterThan(GetLocal(2),popped3)) {
    Jump: 053060
  } else {
    TraceOperation 052994 (Loadw (Con 8338) (Var (Local 2)) (Local 3));
    Let b4 = M[Offset(008338,Mul(2,GetLocal(2)))];
    Let b5 = M[Offset(Offset(008338,Mul(2,GetLocal(2))),1)];
    SetLocal 3 MakeHiLo(b4,b5);
    TraceOperation 053000 (CallN (Floc 080376) []);
    PushFrame;
    PushReturnAddress 053000;
    MakeRoutineFrame 0;
    Jump: 080377
  }
LocReturn 053000:
  TraceOperation 053003 (Jz (Var (Global 42)) (Branch F (Dloc 053024)));
  Let b1 = M[007290];
  Let b2 = M[007291];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 053006 (Store (Con 58) (Var (Local 3)));
    SetByte 007290 HiByte(GetLocal(3));
    SetByte 007291 LoByte(GetLocal(3));
    TraceOperation 053009 (CallN (Floc 076760) [Var (Global 40),Var (Local 3),Var (Global 48),Var (Local 3)]);
    Let b3 = M[007286];
    Let b4 = M[007287];
    Let b5 = M[007302];
    Let b6 = M[007303];
    PushFrame;
    PushReturnAddress 053009;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 GetLocal(3);
    SetLocal 3 MakeHiLo(b5,b6);
    SetLocal 4 GetLocal(3);
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    Jump: 076761
  } else {
    Jump: 053024
  }
LocReturn 053009:
  TraceOperation 053018 (Store (Con 58) (Con 0));
  SetByte 007290 0;
  SetByte 007291 0;
  TraceOperation 053021 (Jump 053039);
  Jump: 053039
LocOp 053024:
  TraceOperation 053024 (Store (Con 59) (Var (Local 3)));
  SetByte 007292 HiByte(GetLocal(3));
  SetByte 007293 LoByte(GetLocal(3));
  TraceOperation 053027 (CallN (Floc 076760) [Var (Global 40),Var (Global 47),Var (Local 3),Var (Local 3)]);
  Let b1 = M[007286];
  Let b2 = M[007287];
  Let b3 = M[007300];
  Let b4 = M[007301];
  PushFrame;
  PushReturnAddress 053027;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 MakeHiLo(b3,b4);
  SetLocal 3 GetLocal(3);
  SetLocal 4 GetLocal(3);
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  Jump: 076761
LocReturn 053027:
  TraceOperation 053036 (Store (Con 59) (Con 0));
  SetByte 007292 0;
  SetByte 007293 0;
  Jump: 053039
LocOp 053039:
  TraceOperation 053039 (Jz (Var (Global 21)) (Branch T (Dloc 053043)));
  Let b1 = M[007248];
  Let b2 = M[007249];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 053043
  } else {
    TraceOperation 053042 Rtrue;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  }
LocOp 053043:
  TraceOperation 053043 (Je [Var (Global 1),Var (Local 1)] (Branch T (Dloc 053055)));
  Let b1 = M[007208];
  Let b2 = M[007209];
  if (Equal(MakeHiLo(b1,b2),GetLocal(1))) {
    Jump: 053055
  } else {
    TraceOperation 053047 (CallN (Floc 036596) [Con 4097,Con 51]);
    PushFrame;
    PushReturnAddress 053047;
    SetLocal 1 4097;
    SetLocal 2 51;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 036597
  }
LocReturn 053047:
  TraceOperation 053054 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 053055:
  TraceOperation 053055 (Inc (Con 2));
  SetLocal 2 Add(GetLocal(2),1);
  TraceOperation 053057 (Jump 052983);
  Jump: 052983
LocOp 053060:
  TraceOperation 053060 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 053064:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 053065
LocOp 053065:
  TraceOperation 053065 (Store (Con 1) (Con 1));
  SetLocal 1 1;
  Jump: 053068
LocOp 053068:
  TraceOperation 053068 (Loadw (Con 14723) (Con 0) Sp);
  Let b1 = M[014723];
  Let b2 = M[014724];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 053074 (Jg (Var (Local 1)) (Var Sp) (Branch T (Dloc 053170)));
  PopStack popped3;
  if (GreaterThan(GetLocal(1),popped3)) {
    Jump: 053170
  } else {
    TraceOperation 053079 (Loadw (Con 14723) (Var (Local 1)) (Local 4));
    Let b4 = M[Offset(014723,Mul(2,GetLocal(1)))];
    Let b5 = M[Offset(Offset(014723,Mul(2,GetLocal(1))),1)];
    SetLocal 4 MakeHiLo(b4,b5);
    TraceOperation 053085 (Jz (Var (Local 4)) (Branch T (Dloc 053165)));
    if (IsZero(GetLocal(4))) {
      Jump: 053165
    } else {
      TraceOperation 053089 (Loadw (Con 14729) (Var (Local 1)) (Local 2));
      Let b6 = M[Offset(014729,Mul(2,GetLocal(1)))];
      Let b7 = M[Offset(Offset(014729,Mul(2,GetLocal(1))),1)];
      SetLocal 2 MakeHiLo(b6,b7);
      TraceOperation 053095 (Store (Con 3) (Con 0));
      SetLocal 3 0;
      TraceOperation 053098 (Jl (Var (Local 2)) (Con 0) (Branch F (Dloc 053136)));
      if (LessThan(GetLocal(2),0)) {
        TraceOperation 053102 (Store (Con 255) (Con 14729));
        SetByte 007684 57;
        SetByte 007685 137;
        TraceOperation 053107 (Store (Con 254) (Var (Local 1)));
        SetByte 007682 HiByte(GetLocal(1));
        SetByte 007683 LoByte(GetLocal(1));
        TraceOperation 053110 (Loadw (Var (Global 239)) (Var (Global 238)) (Global 237));
        Let b8 = M[007684];
        Let b9 = M[007685];
        Let b10 = M[007682];
        Let b11 = M[007683];
        Let b12 = M[Offset(Address(MakeHiLo(b8,b9)),Mul(2,MakeHiLo(b10,b11)))];
        Let b13 = M[Offset(Offset(Address(MakeHiLo(b8,b9)),Mul(2,MakeHiLo(b10,b11))),1)];
        SetByte 007680 b12;
        SetByte 007681 b13;
        TraceOperation 053114 (Inc (Con 253));
        Let b14 = M[007680];
        Let b15 = M[007681];
        SetByte 007680 HiByte(Add(MakeHiLo(b14,b15),1));
        SetByte 007681 LoByte(Add(MakeHiLo(b14,b15),1));
        TraceOperation 053116 (Storew (Var (Global 239)) (Var (Global 238)) (Var (Global 237)));
        Let b16 = M[007684];
        Let b17 = M[007685];
        Let b18 = M[007682];
        Let b19 = M[007683];
        Let b20 = M[007680];
        Let b21 = M[007681];
        SetByte Offset(Address(MakeHiLo(b16,b17)),Mul(2,MakeHiLo(b18,b19))) b20;
        SetByte Offset(Offset(Address(MakeHiLo(b16,b17)),Mul(2,MakeHiLo(b18,b19))),1) b21;
        TraceOperation 053121 (Loadw (Con 14729) (Var (Local 1)) Sp);
        Let b22 = M[Offset(014729,Mul(2,GetLocal(1)))];
        Let b23 = M[Offset(Offset(014729,Mul(2,GetLocal(1))),1)];
        PushStack MakeHiLo(b22,b23);
        TraceOperation 053127 (Jz (Var Sp) (Branch F (Dloc 053133)));
        PopStack popped24;
        if (IsZero(popped24)) {
          TraceOperation 053130 (Store (Con 3) (Con 1));
          SetLocal 3 1;
          Jump: 053133
        } else {
          Jump: 053133
        }
      } else {
        Jump: 053136
      }
    }
  }
LocOp 053133:
  TraceOperation 053133 (Jump 053151);
  Jump: 053151
LocOp 053136:
  TraceOperation 053136 (Jl (Var (Global 24)) (Var (Local 2)) (Branch T (Dloc 053151)));
  Let b1 = M[007254];
  Let b2 = M[007255];
  if (LessThan(MakeHiLo(b1,b2),GetLocal(2))) {
    Jump: 053151
  } else {
    TraceOperation 053140 (Add (Var (Local 2)) (Con 30) Sp);
    PushStack Add(GetLocal(2),30);
    TraceOperation 053144 (Jl (Var (Global 24)) (Var Sp) (Branch F (Dloc 053151)));
    Let b3 = M[007254];
    Let b4 = M[007255];
    PopStack popped5;
    if (LessThan(MakeHiLo(b3,b4),popped5)) {
      TraceOperation 053148 (Store (Con 3) (Con 1));
      SetLocal 3 1;
      Jump: 053151
    } else {
      Jump: 053151
    }
  }
LocOp 053151:
  TraceOperation 053151 (Jz (Var (Local 3)) (Branch T (Dloc 053165)));
  if (IsZero(GetLocal(3))) {
    Jump: 053165
  } else {
    TraceOperation 053154 (Storew (Con 14723) (Var (Local 1)) (Con 0));
    SetByte Offset(014723,Mul(2,GetLocal(1))) 0;
    SetByte Offset(Offset(014723,Mul(2,GetLocal(1))),1) 0;
    TraceOperation 053160 (CallN (Floc 088936) [Var (Local 4)]);
    PushFrame;
    PushReturnAddress 053160;
    SetLocal 1 GetLocal(4);
    MakeRoutineFrame 14;
    SetLocal 14 0;
    SetLocal 13 0;
    SetLocal 12 0;
    SetLocal 11 0;
    SetLocal 10 0;
    SetLocal 9 0;
    SetLocal 8 0;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 088937
  }
LocReturn 053160:
  Jump: 053165
LocOp 053165:
  TraceOperation 053165 (Inc (Con 1));
  SetLocal 1 Add(GetLocal(1),1);
  TraceOperation 053167 (Jump 053068);
  Jump: 053068
LocOp 053170:
  TraceOperation 053170 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 053172:
  MakeRoutineFrame 5;
  if (LessThanByte(num_actuals,5)) {
    SetLocal 5 0;
    if (LessThanByte(num_actuals,4)) {
      SetLocal 4 0;
      if (LessThanByte(num_actuals,3)) {
        SetLocal 3 0;
        if (LessThanByte(num_actuals,2)) {
          SetLocal 2 0;
          if (LessThanByte(num_actuals,1)) {
            SetLocal 1 0;
          }
        }
      }
    }
  }
  Jump: 053173
LocOp 053173:
  TraceOperation 053173 (Store (Con 4) (Con 1));
  SetLocal 4 1;
  Jump: 053176
LocOp 053176:
  TraceOperation 053176 (Loadw (Con 14723) (Con 0) Sp);
  Let b1 = M[014723];
  Let b2 = M[014724];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 053182 (Jg (Var (Local 4)) (Var Sp) (Branch T (Dloc 053222)));
  PopStack popped3;
  if (GreaterThan(GetLocal(4),popped3)) {
    Jump: 053222
  } else {
    TraceOperation 053186 (Loadw (Con 14723) (Var (Local 4)) Sp);
    Let b4 = M[Offset(014723,Mul(2,GetLocal(4)))];
    Let b5 = M[Offset(Offset(014723,Mul(2,GetLocal(4))),1)];
    PushStack MakeHiLo(b4,b5);
    TraceOperation 053192 (Je [Var (Local 1),Var Sp] (Branch F (Dloc 053202)));
    PopStack popped6;
    if (Equal(GetLocal(1),popped6)) {
      TraceOperation 053196 (Store (Con 5) (Var (Local 4)));
      SetLocal 5 GetLocal(4);
      TraceOperation 053199 (Jump 053222);
      Jump: 053222
    } else {
      Jump: 053202
    }
  }
LocOp 053202:
  TraceOperation 053202 (Jz (Var (Local 5)) (Branch F (Dloc 053217)));
  if (IsZero(GetLocal(5))) {
    TraceOperation 053205 (Loadw (Con 14723) (Var (Local 4)) Sp);
    Let b1 = M[Offset(014723,Mul(2,GetLocal(4)))];
    Let b2 = M[Offset(Offset(014723,Mul(2,GetLocal(4))),1)];
    PushStack MakeHiLo(b1,b2);
    TraceOperation 053211 (Jz (Var Sp) (Branch F (Dloc 053217)));
    PopStack popped3;
    if (IsZero(popped3)) {
      TraceOperation 053214 (Store (Con 5) (Var (Local 4)));
      SetLocal 5 GetLocal(4);
      Jump: 053217
    } else {
      Jump: 053217
    }
  } else {
    Jump: 053217
  }
LocOp 053217:
  TraceOperation 053217 (Inc (Con 4));
  SetLocal 4 Add(GetLocal(4),1);
  TraceOperation 053219 (Jump 053176);
  Jump: 053176
LocOp 053222:
  TraceOperation 053222 (Jz (Var (Local 5)) (Branch F (Dloc 053232)));
  if (IsZero(GetLocal(5))) {
    TraceOperation 053225 (Call (Floc 086692) [Con 8] Sp);
    PushFrame;
    PushReturnAddress 053225;
    SetLocal 1 8;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 086693
  } else {
    Jump: 053232
  }
LocReturn 053225:
  PushStack call_result;
  TraceOperation 053231 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 053232:
  TraceOperation 053232 (Storew (Con 14723) (Var (Local 5)) (Var (Local 1)));
  SetByte Offset(014723,Mul(2,GetLocal(5))) HiByte(GetLocal(1));
  SetByte Offset(Offset(014723,Mul(2,GetLocal(5))),1) LoByte(GetLocal(1));
  TraceOperation 053238 (Jz (Var (Local 3)) (Branch T (Dloc 053250)));
  if (IsZero(GetLocal(3))) {
    Jump: 053250
  } else {
    TraceOperation 053241 (Storew (Con 14729) (Var (Local 5)) (Var (Local 2)));
    SetByte Offset(014729,Mul(2,GetLocal(5))) HiByte(GetLocal(2));
    SetByte Offset(Offset(014729,Mul(2,GetLocal(5))),1) LoByte(GetLocal(2));
    TraceOperation 053247 (Jump 053260);
    Jump: 053260
  }
LocOp 053250:
  TraceOperation 053250 (Sub (Con 0) (Var (Local 2)) Sp);
  PushStack Sub(0,GetLocal(2));
  TraceOperation 053254 (Storew (Con 14729) (Var (Local 5)) (Var Sp));
  PopStack popped1;
  SetByte Offset(014729,Mul(2,GetLocal(5))) HiByte(popped1);
  SetByte Offset(Offset(014729,Mul(2,GetLocal(5))),1) LoByte(popped1);
  Jump: 053260
LocOp 053260:
  TraceOperation 053260 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 053264:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 053265
LocOp 053265:
  TraceOperation 053265 (Store (Con 40) (Var (Local 1)));
  SetByte 007254 HiByte(GetLocal(1));
  SetByte 007255 LoByte(GetLocal(1));
  TraceOperation 053268 (Store (Con 41) (Var (Local 2)));
  SetByte 007256 HiByte(GetLocal(2));
  SetByte 007257 LoByte(GetLocal(2));
  TraceOperation 053271 (Store (Con 197) (Con 0));
  SetByte 007568 0;
  SetByte 007569 0;
  TraceOperation 053274 (Jl (Var (Local 2)) (Con 0) (Branch F (Dloc 053282)));
  if (LessThan(GetLocal(2),0)) {
    TraceOperation 053278 (Sub (Con 0) (Var (Local 2)) (Global 181));
    SetByte 007568 HiByte(Sub(0,GetLocal(2)));
    SetByte 007569 LoByte(Sub(0,GetLocal(2)));
    Jump: 053282
  } else {
    Jump: 053282
  }
LocOp 053282:
  TraceOperation 053282 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 053284:
  MakeRoutineFrame 0;
  Jump: 053285
LocOp 053285:
  TraceOperation 053285 (Inc (Con 39));
  Let b1 = M[007252];
  Let b2 = M[007253];
  SetByte 007252 HiByte(Add(MakeHiLo(b1,b2),1));
  SetByte 007253 LoByte(Add(MakeHiLo(b1,b2),1));
  TraceOperation 053287 (Je [Var (Global 24),Con -1] (Branch T (Dloc 053321)));
  Let b3 = M[007254];
  Let b4 = M[007255];
  if (Equal(MakeHiLo(b3,b4),-1)) {
    Jump: 053321
  } else {
    TraceOperation 053293 (Jl (Var (Global 25)) (Con 0) (Branch T (Dloc 053304)));
    Let b5 = M[007256];
    Let b6 = M[007257];
    if (LessThan(MakeHiLo(b5,b6),0)) {
      Jump: 053304
    } else {
      TraceOperation 053297 (Add (Var (Global 24)) (Var (Global 25)) (Global 24));
      Let b7 = M[007254];
      Let b8 = M[007255];
      Let b9 = M[007256];
      Let b10 = M[007257];
      SetByte 007254 HiByte(Add(MakeHiLo(b7,b8),MakeHiLo(b9,b10)));
      SetByte 007255 LoByte(Add(MakeHiLo(b7,b8),MakeHiLo(b9,b10)));
      TraceOperation 053301 (Jump 053315);
      Jump: 053315
    }
  }
LocOp 053304:
  TraceOperation 053304 (Dec (Con 197));
  Let b1 = M[007568];
  Let b2 = M[007569];
  SetByte 007568 HiByte(Sub(MakeHiLo(b1,b2),1));
  SetByte 007569 LoByte(Sub(MakeHiLo(b1,b2),1));
  TraceOperation 053306 (Jz (Var (Global 181)) (Branch F (Dloc 053315)));
  Let b3 = M[007568];
  Let b4 = M[007569];
  if (IsZero(MakeHiLo(b3,b4))) {
    TraceOperation 053309 (Inc (Con 40));
    Let b5 = M[007254];
    Let b6 = M[007255];
    SetByte 007254 HiByte(Add(MakeHiLo(b5,b6),1));
    SetByte 007255 LoByte(Add(MakeHiLo(b5,b6),1));
    TraceOperation 053311 (Sub (Con 0) (Var (Global 25)) (Global 181));
    Let b7 = M[007256];
    Let b8 = M[007257];
    SetByte 007568 HiByte(Sub(0,MakeHiLo(b7,b8)));
    SetByte 007569 LoByte(Sub(0,MakeHiLo(b7,b8)));
    Jump: 053315
  } else {
    Jump: 053315
  }
LocOp 053315:
  TraceOperation 053315 (Mod (Var (Global 24)) (Con 1440) (Global 24));
  Let b1 = M[007254];
  Let b2 = M[007255];
  SetByte 007254 HiByte(Mod(MakeHiLo(b1,b2),1440));
  SetByte 007255 LoByte(Mod(MakeHiLo(b1,b2),1440));
  Jump: 053321
LocOp 053321:
  TraceOperation 053321 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 053324:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 053325
LocOp 053325:
  TraceOperation 053325 (Get_child (Var (Global 31)) Sp (Branch F (Dloc 053329)));
  Let b1 = M[007268];
  Let b2 = M[007269];
  Let b3 = M[Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),10)];
  Let b4 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),10),1)];
  PushStack MakeHiLo(b3,b4);
  if (IsZero(MakeHiLo(b3,b4))) {
    Jump: 053329
  } else {
    Jump: 053329
  }
LocOp 053329:
  TraceOperation 053329 (Pull (Con 1));
  PopStack popped1;
  SetLocal 1 popped1;
  TraceOperation 053332 (Jz (Var (Local 1)) (Branch T (Dloc 053346)));
  if (IsZero(GetLocal(1))) {
    Jump: 053346
  } else {
    Jump: 053335
  }
LocOp 053335:
  TraceOperation 053335 (Set_attr (Var (Local 1)) (Con 11));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),1)];
  SetByte Offset(Offset(000378,Mul(GetLocal(1),14)),1) SetBit(b1,4);
  TraceOperation 053338 (Clear_attr (Var (Local 1)) (Con 3));
  Let b2 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),0)];
  SetByte Offset(Offset(000378,Mul(GetLocal(1),14)),0) ClearBit(b2,4);
  TraceOperation 053341 (Get_sibling (Var (Local 1)) (Local 1) (Branch T (Dloc 053335)));
  Let b3 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),8)];
  Let b4 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),8),1)];
  SetLocal 1 MakeHiLo(b3,b4);
  if (IsZero(MakeHiLo(b3,b4))) {
    Jump: 053346
  } else {
    Jump: 053335
  }
LocOp 053346:
  TraceOperation 053346 (Get_child (Var (Global 31)) Sp (Branch F (Dloc 053350)));
  Let b1 = M[007268];
  Let b2 = M[007269];
  Let b3 = M[Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),10)];
  Let b4 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),10),1)];
  PushStack MakeHiLo(b3,b4);
  if (IsZero(MakeHiLo(b3,b4))) {
    Jump: 053350
  } else {
    Jump: 053350
  }
LocOp 053350:
  TraceOperation 053350 (Pull (Con 1));
  PopStack popped1;
  SetLocal 1 popped1;
  TraceOperation 053353 (Jz (Var (Local 1)) (Branch T (Dloc 053375)));
  if (IsZero(GetLocal(1))) {
    Jump: 053375
  } else {
    Jump: 053356
  }
LocOp 053356:
  TraceOperation 053356 (Call (Floc 026172) [Var (Local 1),Con 27] Sp);
  PushFrame;
  PushReturnAddress 053356;
  SetLocal 1 GetLocal(1);
  SetLocal 2 27;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 053356:
  PushStack call_result;
  TraceOperation 053364 (Jz (Var Sp) (Branch T (Dloc 053370)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 053370
  } else {
    TraceOperation 053367 (Store (Con 51) (Var (Local 1)));
    SetByte 007276 HiByte(GetLocal(1));
    SetByte 007277 LoByte(GetLocal(1));
    Jump: 053370
  }
LocOp 053370:
  TraceOperation 053370 (Get_sibling (Var (Local 1)) (Local 1) (Branch T (Dloc 053356)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),8)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),8),1)];
  SetLocal 1 MakeHiLo(b1,b2);
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 053375
  } else {
    Jump: 053356
  }
LocOp 053375:
  TraceOperation 053375 (Store (Con 1) (Con 1));
  SetLocal 1 1;
  Jump: 053378
LocOp 053378:
  TraceOperation 053378 (Call (Floc 026172) [Var (Local 1),Con 27] Sp);
  PushFrame;
  PushReturnAddress 053378;
  SetLocal 1 GetLocal(1);
  SetLocal 2 27;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 053378:
  PushStack call_result;
  TraceOperation 053386 (Jz (Var Sp) (Branch T (Dloc 053413)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 053413
  } else {
    TraceOperation 053389 (Call (Floc 111316) [Var (Local 1),Con 20] Sp);
    PushFrame;
    PushReturnAddress 053389;
    SetLocal 1 GetLocal(1);
    SetLocal 2 20;
    MakeRoutineFrame 2;
    Jump: 111317
  }
LocReturn 053389:
  PushStack call_result;
  TraceOperation 053396 (Jz (Var Sp) (Branch T (Dloc 053413)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 053413
  } else {
    TraceOperation 053399 (Get_prop (Var (Local 1)) (Con 20) (Global 239));
    Let b2 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),12)];
    Let b3 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),12),1)];
    Let b4 = M[Address(MakeHiLo(b2,b3))];
    Let loop_var5 = DeAddress(Offset(Address(MakeHiLo(b2,b3)),Add(Mul(2,Widen(b4)),1)));
    Label 6: {
      Let b7 = M[Address(loop_var5)];
      if (IsZeroByte(b7)) {
        Let b8 = M[000304];
        Let b9 = M[000305];
        SetByte 007684 b8;
        SetByte 007685 b9;
      } else {
        if (TestBit(b7,7)) {
          Let b10 = M[Offset(Address(loop_var5),1)];
          if (Equal(20,Widen(BwAnd(b7,63)))) {
            if (Equal(Widen(BwAnd(b10,63)),2)) {
              Let b11 = M[Offset(Address(loop_var5),2)];
              Let b12 = M[Offset(Offset(Address(loop_var5),2),1)];
              SetByte 007684 b11;
              SetByte 007685 b12;
            } else {
              Let b13 = M[Offset(Address(loop_var5),2)];
              SetByte 007684 HiByte(Widen(b13));
              SetByte 007685 LoByte(Widen(b13));
            }
          } else {
            Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),2),Widen(BwAnd(b10,63))));
            Goto: Label 6
          }
        } else {
          if (TestBit(b7,6)) {
            if (Equal(20,Widen(BwAnd(b7,63)))) {
              Let b14 = M[Offset(Address(loop_var5),1)];
              Let b15 = M[Offset(Offset(Address(loop_var5),1),1)];
              SetByte 007684 b14;
              SetByte 007685 b15;
            } else {
              Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),1),2));
              Goto: Label 6
            }
          } else {
            if (Equal(20,Widen(BwAnd(b7,63)))) {
              Let b16 = M[Offset(Address(loop_var5),1)];
              SetByte 007684 HiByte(Widen(b16));
              SetByte 007685 LoByte(Widen(b16));
            } else {
              Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),1),1));
              Goto: Label 6
            }
          }
        }
      }
    }
    TraceOperation 053403 (Push (Var (Global 239)));
    Let b17 = M[007684];
    Let b18 = M[007685];
    PushStack MakeHiLo(b17,b18);
    TraceOperation 053406 (Je [Var Sp,Var (Global 31)] (Branch F (Dloc 053413)));
    PopStack popped19;
    Let b20 = M[007268];
    Let b21 = M[007269];
    if (Equal(popped19,MakeHiLo(b20,b21))) {
      TraceOperation 053410 (Store (Con 51) (Var (Local 1)));
      SetByte 007276 HiByte(GetLocal(1));
      SetByte 007277 LoByte(GetLocal(1));
      Jump: 053413
    } else {
      Jump: 053413
    }
  }
LocOp 053413:
  TraceOperation 053413 (Inc (Con 1));
  SetLocal 1 Add(GetLocal(1),1);
  TraceOperation 053415 (Jg (Var (Local 1)) (Con 72) (Branch T (Dloc 053424)));
  if (GreaterThan(GetLocal(1),72)) {
    Jump: 053424
  } else {
    TraceOperation 053421 (Jump 053378);
    Jump: 053378
  }
LocOp 053424:
  TraceOperation 053424 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 053428:
  MakeRoutineFrame 0;
  Jump: 053429
LocOp 053429:
  TraceOperation 053429 (Jz (Var (Global 21)) (Branch F (Dloc 053436)));
  Let b1 = M[007248];
  Let b2 = M[007249];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 053432 (CallN (Floc 089744) []);
    PushFrame;
    PushReturnAddress 053432;
    MakeRoutineFrame 2;
    SetLocal 2 0;
    SetLocal 1 0;
    Jump: 089745
  } else {
    Jump: 053436
  }
LocReturn 053432:
  TraceOperation 053435 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 053436:
  TraceOperation 053436 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 053440:
  MakeRoutineFrame 0;
  Jump: 053441
LocOp 053441:
  TraceOperation 053441 (Print "\n");
  GamePrint "\n";
  Jump: 053444
LocOp 053444:
  TraceOperation 053444 (Jz (Con 1) (Branch T (Dloc 053458)));
  TraceOperation 053447 (CallN (Floc 078824) [Con 28]);
  PushFrame;
  PushReturnAddress 053447;
  SetLocal 1 28;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 078825
LocReturn 053447:
  TraceOperation 053452 (CallN (Floc 080316) []);
  PushFrame;
  PushReturnAddress 053452;
  MakeRoutineFrame 0;
  Jump: 080317
LocReturn 053452:
  TraceOperation 053455 (Jump 053444);
  Jump: 053444
LocOp 053458:
  TraceOperation 053458 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 053460:
  MakeRoutineFrame 0;
  Jump: 053461
LocOp 053461:
  TraceOperation 053461 (CallN (Floc 080596) []);
  PushFrame;
  PushReturnAddress 053461;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  SetLocal 1 0;
  Jump: 080597
LocReturn 053461:
  TraceOperation 053464 (CallN (Floc 041888) [Con 8498,Con 8867]);
  PushFrame;
  PushReturnAddress 053464;
  SetLocal 1 8498;
  SetLocal 2 8867;
  MakeRoutineFrame 2;
  Jump: 041889
LocReturn 053464:
  TraceOperation 053472 (Call (Floc 041076) [] Sp);
  PushFrame;
  PushReturnAddress 053472;
  MakeRoutineFrame 0;
  Jump: 041077
LocReturn 053472:
  PushStack call_result;
  TraceOperation 053476 (Add (Con 100) (Var Sp) (Global 64));
  PopStack popped1;
  SetByte 007334 HiByte(Add(100,popped1));
  SetByte 007335 LoByte(Add(100,popped1));
  TraceOperation 053480 (Call (Floc 041076) [] (Global 76));
  PushFrame;
  PushReturnAddress 053480;
  MakeRoutineFrame 0;
  Jump: 041077
LocReturn 053480:
  SetByte 007358 HiByte(call_result);
  SetByte 007359 LoByte(call_result);
  TraceOperation 053484 (Store (Con 91) (Con 1));
  SetByte 007356 0;
  SetByte 007357 1;
  TraceOperation 053487 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 053488:
  MakeRoutineFrame 0;
  Jump: 053489
LocOp 053489:
  TraceOperation 053489 Restart;
  Jump: 024557
--------------------------------------------------
LocRoutine 053492:
  MakeRoutineFrame 0;
  Jump: 053493
LocOp 053493:
  TraceOperation 053493 (Store (Con 53) (Var (Global 31)));
  Let b1 = M[007268];
  Let b2 = M[007269];
  SetByte 007280 b1;
  SetByte 007281 b2;
  TraceOperation 053496 (CallN (Floc 025720) []);
  PushFrame;
  PushReturnAddress 053496;
  MakeRoutineFrame 0;
  Jump: 025721
LocReturn 053496:
  TraceOperation 053499 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 053504:
  MakeRoutineFrame 0;
  Jump: 053505
LocOp 053505:
  TraceOperation 053505 (Jz (Var (Global 22)) (Branch F (Dloc 053510)));
  Let b1 = M[007250];
  Let b2 = M[007251];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 053508 (Inc (Con 39));
    Let b3 = M[007252];
    Let b4 = M[007253];
    SetByte 007252 HiByte(Add(MakeHiLo(b3,b4),1));
    SetByte 007253 LoByte(Add(MakeHiLo(b3,b4),1));
    Jump: 053510
  } else {
    Jump: 053510
  }
LocOp 053510:
  TraceOperation 053510 (CallN (Floc 079972) []);
  PushFrame;
  PushReturnAddress 053510;
  MakeRoutineFrame 0;
  Jump: 079973
LocReturn 053510:
  TraceOperation 053513 (Jz (Var (Global 22)) (Branch F (Dloc 053518)));
  Let b1 = M[007250];
  Let b2 = M[007251];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 053516 (Dec (Con 39));
    Let b3 = M[007252];
    Let b4 = M[007253];
    SetByte 007252 HiByte(Sub(MakeHiLo(b3,b4),1));
    SetByte 007253 LoByte(Sub(MakeHiLo(b3,b4),1));
    Jump: 053518
  } else {
    Jump: 053518
  }
LocOp 053518:
  TraceOperation 053518 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 053520:
  MakeRoutineFrame 0;
  Jump: 053521
LocOp 053521:
  TraceOperation 053521 (Print "\n\n    ");
  GamePrint "\n\n    ";
  TraceOperation 053528 (CallN (Floc 025176) [Con 5]);
  PushFrame;
  PushReturnAddress 053528;
  SetLocal 1 5;
  MakeRoutineFrame 1;
  Jump: 025177
LocReturn 053528:
  TraceOperation 053533 (Print "***");
  GamePrint "***";
  TraceOperation 053542 (Je [Var (Global 21),Con 1] (Branch F (Dloc 053553)));
  Let b1 = M[007248];
  Let b2 = M[007249];
  if (Equal(MakeHiLo(b1,b2),1)) {
    TraceOperation 053546 (CallN (Floc 036596) [Con 4097,Con 3]);
    PushFrame;
    PushReturnAddress 053546;
    SetLocal 1 4097;
    SetLocal 2 3;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 036597
  } else {
    Jump: 053553
  }
LocReturn 053546:
  Jump: 053553
LocOp 053553:
  TraceOperation 053553 (Je [Var (Global 21),Con 2] (Branch F (Dloc 053564)));
  Let b1 = M[007248];
  Let b2 = M[007249];
  if (Equal(MakeHiLo(b1,b2),2)) {
    TraceOperation 053557 (CallN (Floc 036596) [Con 4097,Con 4]);
    PushFrame;
    PushReturnAddress 053557;
    SetLocal 1 4097;
    SetLocal 2 4;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 036597
  } else {
    Jump: 053564
  }
LocReturn 053557:
  Jump: 053564
LocOp 053564:
  TraceOperation 053564 (Je [Var (Global 21),Con 0,Con 1,Con 2] (Branch T (Dloc 053601)));
  Let b1 = M[007248];
  Let b2 = M[007249];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),0),Equal(MakeHiLo(b1,b2),1)),Equal(MakeHiLo(b1,b2),2))) {
    Jump: 053601
  } else {
    TraceOperation 053571 (Print " ");
    GamePrint " ";
    TraceOperation 053574 (Call (Floc 026172) [Var (Global 21),Con 3] Sp);
    Let b3 = M[007248];
    Let b4 = M[007249];
    PushFrame;
    PushReturnAddress 053574;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 3;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  }
LocReturn 053574:
  PushStack call_result;
  TraceOperation 053581 (Jz (Var Sp) (Branch T (Dloc 053586)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 053586
  } else {
    TraceOperation 053584 (CallN (Fvar (Global 21)) []);
    Let b2 = M[007248];
    Let b3 = M[007249];
    if (IsZeroAddress(PackedAddress Z5(MakeHiLo(b2,b3)))) {
      Jump: 053586
    } else {
      PushFrame;
      PushReturnAddress 053584;
      SetNumberActuals 0;
      JumpIndirect: (routine) PackedAddress Z5(MakeHiLo(b2,b3))
    }
  }
LocReturn 053584:
  Jump: 053586
LocOp 053586:
  TraceOperation 053586 (Call (Floc 026172) [Var (Global 21),Con 4] Sp);
  Let b1 = M[007248];
  Let b2 = M[007249];
  PushFrame;
  PushReturnAddress 053586;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 4;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 053586:
  PushStack call_result;
  TraceOperation 053593 (Jz (Var Sp) (Branch T (Dloc 053598)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 053598
  } else {
    TraceOperation 053596 (Print_paddr (Var (Global 21)));
    Let b2 = M[007248];
    Let b3 = M[007249];
    GamePrint GetText(PackedAddress Z5(MakeHiLo(b2,b3)));
    Jump: 053598
  }
LocOp 053598:
  TraceOperation 053598 (Print " ");
  GamePrint " ";
  Jump: 053601
LocOp 053601:
  TraceOperation 053601 (Print "***");
  GamePrint "***";
  TraceOperation 053610 (CallN (Floc 025176) [Con 0]);
  PushFrame;
  PushReturnAddress 053610;
  SetLocal 1 0;
  MakeRoutineFrame 1;
  Jump: 025177
LocReturn 053610:
  TraceOperation 053615 (Print "\n\n");
  GamePrint "\n\n";
  TraceOperation 053620 (Print "\n");
  GamePrint "\n";
  TraceOperation 053623 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 053624:
  MakeRoutineFrame 0;
  Jump: 053625
LocOp 053625:
  TraceOperation 053625 (CallN (Floc 080024) []);
  PushFrame;
  PushReturnAddress 053625;
  MakeRoutineFrame 0;
  Jump: 080025
LocReturn 053625:
  TraceOperation 053628 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 053632:
  MakeRoutineFrame 0;
  Jump: 053633
LocOp 053633:
  TraceOperation 053633 (Store (Con 18) (Var (Global 26)));
  Let b1 = M[007258];
  Let b2 = M[007259];
  SetByte 007210 b1;
  SetByte 007211 b2;
  TraceOperation 053636 (Store (Con 19) (Var (Global 23)));
  Let b3 = M[007252];
  Let b4 = M[007253];
  SetByte 007212 b3;
  SetByte 007213 b4;
  TraceOperation 053639 Rfalse;
  PopFrame;
  PopReturnAddress return_address_5;
  SetResult 0;
  JumpIndirect: (return) return_address_5
--------------------------------------------------
LocRoutine 053640:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 053641
LocOp 053641:
  TraceOperation 053641 (Store (Con 1) (Con 0));
  SetLocal 1 0;
  Jump: 053644
LocOp 053644:
  TraceOperation 053644 (Jl (Var (Local 1)) (Con 107) (Branch F (Dloc 053660)));
  if (LessThan(GetLocal(1),107)) {
    TraceOperation 053648 (Storew (Con 10867) (Var (Local 1)) (Con -1));
    SetByte Offset(010867,Mul(2,GetLocal(1))) 255;
    SetByte Offset(Offset(010867,Mul(2,GetLocal(1))),1) 255;
    TraceOperation 053655 (Inc (Con 1));
    SetLocal 1 Add(GetLocal(1),1);
    TraceOperation 053657 (Jump 053644);
    Jump: 053644
  } else {
    Jump: 053660
  }
LocOp 053660:
  TraceOperation 053660 (Store (Con 1) (Con 0));
  SetLocal 1 0;
  Jump: 053663
LocOp 053663:
  TraceOperation 053663 (Jl (Var (Local 1)) (Con 157) (Branch F (Dloc 053679)));
  if (LessThan(GetLocal(1),157)) {
    TraceOperation 053667 (Storew (Con 11081) (Var (Local 1)) (Con -1));
    SetByte Offset(011081,Mul(2,GetLocal(1))) 255;
    SetByte Offset(Offset(011081,Mul(2,GetLocal(1))),1) 255;
    TraceOperation 053674 (Inc (Con 1));
    SetLocal 1 Add(GetLocal(1),1);
    TraceOperation 053676 (Jump 053663);
    Jump: 053663
  } else {
    Jump: 053679
  }
LocOp 053679:
  TraceOperation 053679 (Storew (Con 10867) (Con 29) (Con 42));
  SetByte 010925 0;
  SetByte 010926 42;
  TraceOperation 053685 (Storew (Con 10867) (Con 8) (Con 47));
  SetByte 010883 0;
  SetByte 010884 47;
  TraceOperation 053691 (Storew (Con 10867) (Con 21) (Con 52));
  SetByte 010909 0;
  SetByte 010910 52;
  TraceOperation 053697 (Storew (Con 10867) (Con 8) (Con 55));
  SetByte 010883 0;
  SetByte 010884 55;
  TraceOperation 053703 (Storew (Con 10867) (Con 6) (Con 60));
  SetByte 010879 0;
  SetByte 010880 60;
  TraceOperation 053709 (Storew (Con 10867) (Con 16) (Con 63));
  SetByte 010899 0;
  SetByte 010900 63;
  TraceOperation 053715 (Storew (Con 10867) (Con 15) (Con 66));
  SetByte 010897 0;
  SetByte 010898 66;
  TraceOperation 053721 (Storew (Con 10867) (Con 2) (Con 69));
  SetByte 010871 0;
  SetByte 010872 69;
  TraceOperation 053727 (Storew (Con 10867) (Con 31) (Con 72));
  SetByte 010929 0;
  SetByte 010930 72;
  TraceOperation 053733 (Storew (Con 10867) (Con 11) (Con 75));
  SetByte 010889 0;
  SetByte 010890 75;
  TraceOperation 053739 (Storew (Con 10867) (Con 29) (Con 78));
  SetByte 010925 0;
  SetByte 010926 78;
  TraceOperation 053745 (Storew (Con 10867) (Con 26) (Con 81));
  SetByte 010919 0;
  SetByte 010920 81;
  TraceOperation 053751 (Storew (Con 10867) (Con 27) (Con 84));
  SetByte 010921 0;
  SetByte 010922 84;
  TraceOperation 053757 (Storew (Con 10867) (Con 3) (Con 87));
  SetByte 010873 0;
  SetByte 010874 87;
  TraceOperation 053763 (Storew (Con 10867) (Con 34) (Con 90));
  SetByte 010935 0;
  SetByte 010936 90;
  TraceOperation 053769 (Storew (Con 10867) (Con 30) (Con 94));
  SetByte 010927 0;
  SetByte 010928 94;
  TraceOperation 053775 (Storew (Con 10867) (Con 7) (Con 97));
  SetByte 010881 0;
  SetByte 010882 97;
  TraceOperation 053781 (Storew (Con 10867) (Con 20) (Con 101));
  SetByte 010907 0;
  SetByte 010908 101;
  TraceOperation 053787 (Storew (Con 10867) (Con 13) (Con 104));
  SetByte 010893 0;
  SetByte 010894 104;
  TraceOperation 053793 (Storew (Con 10867) (Con 14) (Con 108));
  SetByte 010895 0;
  SetByte 010896 108;
  TraceOperation 053799 (Storew (Con 10867) (Con 9) (Con 112));
  SetByte 010885 0;
  SetByte 010886 112;
  TraceOperation 053805 (Storew (Con 10867) (Con 10) (Con 116));
  SetByte 010887 0;
  SetByte 010888 116;
  TraceOperation 053811 (Storew (Con 10867) (Con 24) (Con 120));
  SetByte 010915 0;
  SetByte 010916 120;
  TraceOperation 053817 (Storew (Con 10867) (Con 25) (Con 123));
  SetByte 010917 0;
  SetByte 010918 123;
  TraceOperation 053823 (Storew (Con 10867) (Con 12) (Con 126));
  SetByte 010891 0;
  SetByte 010892 126;
  TraceOperation 053829 (Storew (Con 10867) (Con 36) (Con 129));
  SetByte 010939 0;
  SetByte 010940 129;
  TraceOperation 053835 (Storew (Con 11081) (Con 22) (Con 0));
  SetByte 011125 0;
  SetByte 011126 0;
  TraceOperation 053841 (Storew (Con 11081) (Con 34) (Con 4));
  SetByte 011149 0;
  SetByte 011150 4;
  TraceOperation 053847 (Storew (Con 11081) (Con 29) (Con 8));
  SetByte 011139 0;
  SetByte 011140 8;
  TraceOperation 053853 (Storew (Con 11081) (Con 17) (Con 11));
  SetByte 011115 0;
  SetByte 011116 11;
  TraceOperation 053859 (Storew (Con 11081) (Con 26) (Con 14));
  SetByte 011133 0;
  SetByte 011134 14;
  TraceOperation 053865 (Storew (Con 11081) (Con 31) (Con 17));
  SetByte 011143 0;
  SetByte 011144 17;
  TraceOperation 053871 (Storew (Con 11081) (Con 74) (Con 20));
  SetByte 011229 0;
  SetByte 011230 20;
  TraceOperation 053878 (Storew (Con 11081) (Con 75) (Con 23));
  SetByte 011231 0;
  SetByte 011232 23;
  TraceOperation 053885 (Storew (Con 11081) (Con 24) (Con 26));
  SetByte 011129 0;
  SetByte 011130 26;
  TraceOperation 053891 (Storew (Con 11081) (Con 18) (Con 29));
  SetByte 011117 0;
  SetByte 011118 29;
  TraceOperation 053897 (Storew (Con 11081) (Con 36) (Con 34));
  SetByte 011153 0;
  SetByte 011154 34;
  TraceOperation 053903 (Storew (Con 11081) (Con 72) (Con 39));
  SetByte 011225 0;
  SetByte 011226 39;
  TraceOperation 053910 (Storew (Con 11081) (Con 84) (Con 132));
  SetByte 011249 0;
  SetByte 011250 132;
  TraceOperation 053917 (Storew (Con 11081) (Con 0) (Con 135));
  SetByte 011081 0;
  SetByte 011082 135;
  TraceOperation 053924 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 053928:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 053929
LocOp 053929:
  TraceOperation 053929 (Store (Con 255) (Var (Local 1)));
  SetByte 007684 HiByte(GetLocal(1));
  SetByte 007685 LoByte(GetLocal(1));
  TraceOperation 053932 (Je [Var (Global 239),Con 1] (Branch F (Dloc 053944)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),1)) {
    TraceOperation 053936 (Print "cold");
    GamePrint "cold";
    TraceOperation 053941 (Jump 054011);
    Jump: 054011
  } else {
    Jump: 053944
  }
LocOp 053944:
  TraceOperation 053944 (Je [Var (Global 239),Con 2] (Branch F (Dloc 053956)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),2)) {
    TraceOperation 053948 (Print "tepid");
    GamePrint "tepid";
    TraceOperation 053953 (Jump 054011);
    Jump: 054011
  } else {
    Jump: 053956
  }
LocOp 053956:
  TraceOperation 053956 (Je [Var (Global 239),Con 3] (Branch F (Dloc 053968)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),3)) {
    TraceOperation 053960 (Print "warm");
    GamePrint "warm";
    TraceOperation 053965 (Jump 054011);
    Jump: 054011
  } else {
    Jump: 053968
  }
LocOp 053968:
  TraceOperation 053968 (Je [Var (Global 239),Con 4] (Branch F (Dloc 053978)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),4)) {
    TraceOperation 053972 (Print "hot");
    GamePrint "hot";
    TraceOperation 053975 (Jump 054011);
    Jump: 054011
  } else {
    Jump: 053978
  }
LocOp 053978:
  TraceOperation 053978 (Je [Var (Global 239),Con 5] (Branch F (Dloc 053992)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),5)) {
    TraceOperation 053982 (Print "boiling");
    GamePrint "boiling";
    TraceOperation 053989 (Jump 054011);
    Jump: 054011
  } else {
    Jump: 053992
  }
LocOp 053992:
  TraceOperation 053992 (Print "<illegal temperature>");
  GamePrint "<illegal temperature>";
  Jump: 054011
LocOp 054011:
  TraceOperation 054011 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 054012:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 054013
LocOp 054013:
  TraceOperation 054013 (Mod (Var (Local 1)) (Con 5) Sp);
  PushStack Mod(GetLocal(1),5);
  TraceOperation 054017 (Add (Var Sp) (Con 1) Sp);
  PopStack popped1;
  PushStack Add(popped1,1);
  TraceOperation 054021 Ret_popped;
  PopStack popped2;
  PopFrame;
  PopReturnAddress return_address_3;
  SetResult popped2;
  JumpIndirect: (return) return_address_3
--------------------------------------------------
LocRoutine 054024:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 054025
LocOp 054025:
  TraceOperation 054025 (Add (Var (Local 1)) (Con 3) Sp);
  PushStack Add(GetLocal(1),3);
  TraceOperation 054029 (Mod (Var Sp) (Con 5) Sp);
  PopStack popped1;
  PushStack Mod(popped1,5);
  TraceOperation 054033 (Add (Var Sp) (Con 1) Sp);
  PopStack popped2;
  PushStack Add(popped2,1);
  TraceOperation 054037 Ret_popped;
  PopStack popped3;
  PopFrame;
  PopReturnAddress return_address_4;
  SetResult popped3;
  JumpIndirect: (return) return_address_4
--------------------------------------------------
LocRoutine 054040:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 054041
LocOp 054041:
  TraceOperation 054041 (Jz (Var (Local 1)) (Branch F (Dloc 054052)));
  if (IsZero(GetLocal(1))) {
    TraceOperation 054044 (Jz (Var (Local 2)) (Branch F (Dloc 054052)));
    if (IsZero(GetLocal(2))) {
      TraceOperation 054047 (Random (Con 5) Sp);
      LetRandom random1 5;
      PushStack random1;
      TraceOperation 054051 Ret_popped;
      PopStack popped2;
      PopFrame;
      PopReturnAddress return_address_3;
      SetResult popped2;
      JumpIndirect: (return) return_address_3
    } else {
      Jump: 054052
    }
  } else {
    Jump: 054052
  }
LocOp 054052:
  TraceOperation 054052 (Je [Var (Local 1),Var (Local 2)] (Branch F (Dloc 054058)));
  if (Equal(GetLocal(1),GetLocal(2))) {
    TraceOperation 054056 (Ret (Var (Local 2)));
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult GetLocal(2);
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 054058
  }
LocOp 054058:
  TraceOperation 054058 (Jg (Var (Local 1)) (Var (Local 2)) (Branch F (Dloc 054084)));
  if (GreaterThan(GetLocal(1),GetLocal(2))) {
    TraceOperation 054062 (Sub (Var (Local 1)) (Var (Local 2)) Sp);
    PushStack Sub(GetLocal(1),GetLocal(2));
    TraceOperation 054066 (Add (Var Sp) (Con 1) Sp);
    PopStack popped1;
    PushStack Add(popped1,1);
    TraceOperation 054070 (Random (Con 32767) Sp);
    LetRandom random2 32767;
    PushStack random2;
    TraceOperation 054075 (Mod (Var Sp) (Var Sp) Sp);
    PopStack popped3;
    PopStack popped4;
    PushStack Mod(popped3,popped4);
    TraceOperation 054079 (Add (Var (Local 2)) (Var Sp) Sp);
    PopStack popped5;
    PushStack Add(GetLocal(2),popped5);
    TraceOperation 054083 Ret_popped;
    PopStack popped6;
    PopFrame;
    PopReturnAddress return_address_7;
    SetResult popped6;
    JumpIndirect: (return) return_address_7
  } else {
    Jump: 054084
  }
LocOp 054084:
  TraceOperation 054084 (Sub (Var (Local 2)) (Var (Local 1)) Sp);
  PushStack Sub(GetLocal(2),GetLocal(1));
  TraceOperation 054088 (Add (Var Sp) (Con 1) Sp);
  PopStack popped1;
  PushStack Add(popped1,1);
  TraceOperation 054092 (Random (Con 32767) Sp);
  LetRandom random2 32767;
  PushStack random2;
  TraceOperation 054097 (Mod (Var Sp) (Var Sp) Sp);
  PopStack popped3;
  PopStack popped4;
  PushStack Mod(popped3,popped4);
  TraceOperation 054101 (Add (Var (Local 1)) (Var Sp) Sp);
  PopStack popped5;
  PushStack Add(GetLocal(1),popped5);
  TraceOperation 054105 Ret_popped;
  PopStack popped6;
  PopFrame;
  PopReturnAddress return_address_7;
  SetResult popped6;
  JumpIndirect: (return) return_address_7
--------------------------------------------------
LocRoutine 054108:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 054109
LocOp 054109:
  TraceOperation 054109 (Store (Con 255) (Var (Local 1)));
  SetByte 007684 HiByte(GetLocal(1));
  SetByte 007685 LoByte(GetLocal(1));
  TraceOperation 054112 (Je [Var (Global 239),Con 50] (Branch F (Dloc 054124)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),50)) {
    TraceOperation 054116 (CallN (Floc 080936) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 054116;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 1;
    Jump: 080937
  } else {
    Jump: 054124
  }
LocReturn 054116:
  TraceOperation 054121 (Jump 054631);
  Jump: 054631
LocOp 054124:
  TraceOperation 054124 (Je [Var (Global 239),Con 51] (Branch F (Dloc 054136)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),51)) {
    TraceOperation 054128 (CallN (Floc 080936) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 054128;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 1;
    Jump: 080937
  } else {
    Jump: 054136
  }
LocReturn 054128:
  TraceOperation 054133 (Jump 054631);
  Jump: 054631
LocOp 054136:
  TraceOperation 054136 (Je [Var (Global 239),Con 83] (Branch F (Dloc 054148)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),83)) {
    TraceOperation 054140 (CallN (Floc 080936) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 054140;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 1;
    Jump: 080937
  } else {
    Jump: 054148
  }
LocReturn 054140:
  TraceOperation 054145 (Jump 054631);
  Jump: 054631
LocOp 054148:
  TraceOperation 054148 (Je [Var (Global 239),Con 84] (Branch F (Dloc 054160)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),84)) {
    TraceOperation 054152 (CallN (Floc 080936) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 054152;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 1;
    Jump: 080937
  } else {
    Jump: 054160
  }
LocReturn 054152:
  TraceOperation 054157 (Jump 054631);
  Jump: 054631
LocOp 054160:
  TraceOperation 054160 (Je [Var (Global 239),Con 53] (Branch F (Dloc 054172)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),53)) {
    TraceOperation 054164 (CallN (Floc 080936) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 054164;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 1;
    Jump: 080937
  } else {
    Jump: 054172
  }
LocReturn 054164:
  TraceOperation 054169 (Jump 054631);
  Jump: 054631
LocOp 054172:
  TraceOperation 054172 (Je [Var (Global 239),Con 52] (Branch F (Dloc 054184)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),52)) {
    TraceOperation 054176 (CallN (Floc 080936) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 054176;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 1;
    Jump: 080937
  } else {
    Jump: 054184
  }
LocReturn 054176:
  TraceOperation 054181 (Jump 054631);
  Jump: 054631
LocOp 054184:
  TraceOperation 054184 (Je [Var (Global 239),Con 85] (Branch F (Dloc 054196)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),85)) {
    TraceOperation 054188 (CallN (Floc 080936) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 054188;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 1;
    Jump: 080937
  } else {
    Jump: 054196
  }
LocReturn 054188:
  TraceOperation 054193 (Jump 054631);
  Jump: 054631
LocOp 054196:
  TraceOperation 054196 (Je [Var (Global 239),Con 86] (Branch F (Dloc 054208)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),86)) {
    TraceOperation 054200 (CallN (Floc 080936) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 054200;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 1;
    Jump: 080937
  } else {
    Jump: 054208
  }
LocReturn 054200:
  TraceOperation 054205 (Jump 054631);
  Jump: 054631
LocOp 054208:
  TraceOperation 054208 (Je [Var (Global 239),Con 87] (Branch F (Dloc 054220)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),87)) {
    TraceOperation 054212 (CallN (Floc 080936) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 054212;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 1;
    Jump: 080937
  } else {
    Jump: 054220
  }
LocReturn 054212:
  TraceOperation 054217 (Jump 054631);
  Jump: 054631
LocOp 054220:
  TraceOperation 054220 (Je [Var (Global 239),Con 88] (Branch F (Dloc 054232)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),88)) {
    TraceOperation 054224 (CallN (Floc 080936) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 054224;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 1;
    Jump: 080937
  } else {
    Jump: 054232
  }
LocReturn 054224:
  TraceOperation 054229 (Jump 054631);
  Jump: 054631
LocOp 054232:
  TraceOperation 054232 (Je [Var (Global 239),Con 89] (Branch F (Dloc 054244)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),89)) {
    TraceOperation 054236 (CallN (Floc 080936) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 054236;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 1;
    Jump: 080937
  } else {
    Jump: 054244
  }
LocReturn 054236:
  TraceOperation 054241 (Jump 054631);
  Jump: 054631
LocOp 054244:
  TraceOperation 054244 (Je [Var (Global 239),Con 90] (Branch F (Dloc 054256)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),90)) {
    TraceOperation 054248 (CallN (Floc 080936) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 054248;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 1;
    Jump: 080937
  } else {
    Jump: 054256
  }
LocReturn 054248:
  TraceOperation 054253 (Jump 054631);
  Jump: 054631
LocOp 054256:
  TraceOperation 054256 (Je [Var (Global 239),Con 54] (Branch F (Dloc 054268)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),54)) {
    TraceOperation 054260 (CallN (Floc 080936) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 054260;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 1;
    Jump: 080937
  } else {
    Jump: 054268
  }
LocReturn 054260:
  TraceOperation 054265 (Jump 054631);
  Jump: 054631
LocOp 054268:
  TraceOperation 054268 (Je [Var (Global 239),Con 55] (Branch F (Dloc 054280)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),55)) {
    TraceOperation 054272 (CallN (Floc 105088) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 054272;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 3;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 105089
  } else {
    Jump: 054280
  }
LocReturn 054272:
  TraceOperation 054277 (Jump 054631);
  Jump: 054631
LocOp 054280:
  TraceOperation 054280 (Je [Var (Global 239),Con 56] (Branch F (Dloc 054292)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),56)) {
    TraceOperation 054284 (CallN (Floc 080952) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 054284;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 1;
    Jump: 080953
  } else {
    Jump: 054292
  }
LocReturn 054284:
  TraceOperation 054289 (Jump 054631);
  Jump: 054631
LocOp 054292:
  TraceOperation 054292 (Je [Var (Global 239),Con 57] (Branch F (Dloc 054304)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),57)) {
    TraceOperation 054296 (CallN (Floc 080936) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 054296;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 1;
    Jump: 080937
  } else {
    Jump: 054304
  }
LocReturn 054296:
  TraceOperation 054301 (Jump 054631);
  Jump: 054631
LocOp 054304:
  TraceOperation 054304 (Je [Var (Global 239),Con 58] (Branch F (Dloc 054316)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),58)) {
    TraceOperation 054308 (CallN (Floc 080936) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 054308;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 1;
    Jump: 080937
  } else {
    Jump: 054316
  }
LocReturn 054308:
  TraceOperation 054313 (Jump 054631);
  Jump: 054631
LocOp 054316:
  TraceOperation 054316 (Je [Var (Global 239),Con 59] (Branch F (Dloc 054328)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),59)) {
    TraceOperation 054320 (CallN (Floc 041256) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 054320;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 041257
  } else {
    Jump: 054328
  }
LocReturn 054320:
  TraceOperation 054325 (Jump 054631);
  Jump: 054631
LocOp 054328:
  TraceOperation 054328 (Je [Var (Global 239),Con 60] (Branch F (Dloc 054340)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),60)) {
    TraceOperation 054332 (CallN (Floc 080936) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 054332;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 1;
    Jump: 080937
  } else {
    Jump: 054340
  }
LocReturn 054332:
  TraceOperation 054337 (Jump 054631);
  Jump: 054631
LocOp 054340:
  TraceOperation 054340 (Je [Var (Global 239),Con 61] (Branch F (Dloc 054352)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 054344 (CallN (Floc 082048) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 054344;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 082049
  } else {
    Jump: 054352
  }
LocReturn 054344:
  TraceOperation 054349 (Jump 054631);
  Jump: 054631
LocOp 054352:
  TraceOperation 054352 (Je [Var (Global 239),Con 62] (Branch F (Dloc 054364)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),62)) {
    TraceOperation 054356 (CallN (Floc 080936) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 054356;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 1;
    Jump: 080937
  } else {
    Jump: 054364
  }
LocReturn 054356:
  TraceOperation 054361 (Jump 054631);
  Jump: 054631
LocOp 054364:
  TraceOperation 054364 (Je [Var (Global 239),Con 63] (Branch F (Dloc 054376)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),63)) {
    TraceOperation 054368 (CallN (Floc 080936) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 054368;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 1;
    Jump: 080937
  } else {
    Jump: 054376
  }
LocReturn 054368:
  TraceOperation 054373 (Jump 054631);
  Jump: 054631
LocOp 054376:
  TraceOperation 054376 (Je [Var (Global 239),Con 64] (Branch F (Dloc 054388)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),64)) {
    TraceOperation 054380 (CallN (Floc 080936) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 054380;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 1;
    Jump: 080937
  } else {
    Jump: 054388
  }
LocReturn 054380:
  TraceOperation 054385 (Jump 054631);
  Jump: 054631
LocOp 054388:
  TraceOperation 054388 (Je [Var (Global 239),Con 65] (Branch F (Dloc 054400)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),65)) {
    TraceOperation 054392 (CallN (Floc 089984) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 054392;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 089985
  } else {
    Jump: 054400
  }
LocReturn 054392:
  TraceOperation 054397 (Jump 054631);
  Jump: 054631
LocOp 054400:
  TraceOperation 054400 (Je [Var (Global 239),Con 91] (Branch F (Dloc 054412)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),91)) {
    TraceOperation 054404 (CallN (Floc 080936) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 054404;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 1;
    Jump: 080937
  } else {
    Jump: 054412
  }
LocReturn 054404:
  TraceOperation 054409 (Jump 054631);
  Jump: 054631
LocOp 054412:
  TraceOperation 054412 (Je [Var (Global 239),Con 66] (Branch F (Dloc 054424)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),66)) {
    TraceOperation 054416 (CallN (Floc 080936) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 054416;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 1;
    Jump: 080937
  } else {
    Jump: 054424
  }
LocReturn 054416:
  TraceOperation 054421 (Jump 054631);
  Jump: 054631
LocOp 054424:
  TraceOperation 054424 (Je [Var (Global 239),Con 67] (Branch F (Dloc 054436)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),67)) {
    TraceOperation 054428 (CallN (Floc 055076) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 054428;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 1;
    Jump: 055077
  } else {
    Jump: 054436
  }
LocReturn 054428:
  TraceOperation 054433 (Jump 054631);
  Jump: 054631
LocOp 054436:
  TraceOperation 054436 (Je [Var (Global 239),Con 68] (Branch F (Dloc 054448)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),68)) {
    TraceOperation 054440 (CallN (Floc 078260) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 054440;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 1;
    Jump: 078261
  } else {
    Jump: 054448
  }
LocReturn 054440:
  TraceOperation 054445 (Jump 054631);
  Jump: 054631
LocOp 054448:
  TraceOperation 054448 (Je [Var (Global 239),Con 69] (Branch F (Dloc 054460)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),69)) {
    TraceOperation 054452 (CallN (Floc 080936) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 054452;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 1;
    Jump: 080937
  } else {
    Jump: 054460
  }
LocReturn 054452:
  TraceOperation 054457 (Jump 054631);
  Jump: 054631
LocOp 054460:
  TraceOperation 054460 (Je [Var (Global 239),Con 70] (Branch F (Dloc 054472)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),70)) {
    TraceOperation 054464 (CallN (Floc 080936) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 054464;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 1;
    Jump: 080937
  } else {
    Jump: 054472
  }
LocReturn 054464:
  TraceOperation 054469 (Jump 054631);
  Jump: 054631
LocOp 054472:
  TraceOperation 054472 (Je [Var (Global 239),Con 71] (Branch F (Dloc 054484)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),71)) {
    TraceOperation 054476 (CallN (Floc 101976) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 054476;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 1;
    Jump: 101977
  } else {
    Jump: 054484
  }
LocReturn 054476:
  TraceOperation 054481 (Jump 054631);
  Jump: 054631
LocOp 054484:
  TraceOperation 054484 (Je [Var (Global 239),Con 72] (Branch F (Dloc 054496)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),72)) {
    TraceOperation 054488 (CallN (Floc 080936) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 054488;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 1;
    Jump: 080937
  } else {
    Jump: 054496
  }
LocReturn 054488:
  TraceOperation 054493 (Jump 054631);
  Jump: 054631
LocOp 054496:
  TraceOperation 054496 (Je [Var (Global 239),Con 73] (Branch F (Dloc 054508)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),73)) {
    TraceOperation 054500 (CallN (Floc 080936) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 054500;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 1;
    Jump: 080937
  } else {
    Jump: 054508
  }
LocReturn 054500:
  TraceOperation 054505 (Jump 054631);
  Jump: 054631
LocOp 054508:
  TraceOperation 054508 (Je [Var (Global 239),Con 74] (Branch F (Dloc 054520)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),74)) {
    TraceOperation 054512 (CallN (Floc 080936) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 054512;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 1;
    Jump: 080937
  } else {
    Jump: 054520
  }
LocReturn 054512:
  TraceOperation 054517 (Jump 054631);
  Jump: 054631
LocOp 054520:
  TraceOperation 054520 (Je [Var (Global 239),Con 75] (Branch F (Dloc 054532)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),75)) {
    TraceOperation 054524 (CallN (Floc 080936) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 054524;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 1;
    Jump: 080937
  } else {
    Jump: 054532
  }
LocReturn 054524:
  TraceOperation 054529 (Jump 054631);
  Jump: 054631
LocOp 054532:
  TraceOperation 054532 (Je [Var (Global 239),Con 76] (Branch F (Dloc 054544)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),76)) {
    TraceOperation 054536 (CallN (Floc 080936) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 054536;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 1;
    Jump: 080937
  } else {
    Jump: 054544
  }
LocReturn 054536:
  TraceOperation 054541 (Jump 054631);
  Jump: 054631
LocOp 054544:
  TraceOperation 054544 (Je [Var (Global 239),Con 77] (Branch F (Dloc 054556)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),77)) {
    TraceOperation 054548 (CallN (Floc 080936) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 054548;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 1;
    Jump: 080937
  } else {
    Jump: 054556
  }
LocReturn 054548:
  TraceOperation 054553 (Jump 054631);
  Jump: 054631
LocOp 054556:
  TraceOperation 054556 (Je [Var (Global 239),Con 78] (Branch F (Dloc 054568)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),78)) {
    TraceOperation 054560 (CallN (Floc 078396) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 054560;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 1;
    Jump: 078397
  } else {
    Jump: 054568
  }
LocReturn 054560:
  TraceOperation 054565 (Jump 054631);
  Jump: 054631
LocOp 054568:
  TraceOperation 054568 (Je [Var (Global 239),Con 79] (Branch F (Dloc 054580)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),79)) {
    TraceOperation 054572 (CallN (Floc 080936) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 054572;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 1;
    Jump: 080937
  } else {
    Jump: 054580
  }
LocReturn 054572:
  TraceOperation 054577 (Jump 054631);
  Jump: 054631
LocOp 054580:
  TraceOperation 054580 (Je [Var (Global 239),Con 80] (Branch F (Dloc 054592)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),80)) {
    TraceOperation 054584 (CallN (Floc 110044) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 054584;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 1;
    Jump: 110045
  } else {
    Jump: 054592
  }
LocReturn 054584:
  TraceOperation 054589 (Jump 054631);
  Jump: 054631
LocOp 054592:
  TraceOperation 054592 (Je [Var (Global 239),Con 81] (Branch F (Dloc 054604)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),81)) {
    TraceOperation 054596 (CallN (Floc 110060) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 054596;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 1;
    Jump: 110061
  } else {
    Jump: 054604
  }
LocReturn 054596:
  TraceOperation 054601 (Jump 054631);
  Jump: 054631
LocOp 054604:
  TraceOperation 054604 (Je [Var (Global 239),Con 82] (Branch F (Dloc 054616)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),82)) {
    TraceOperation 054608 (CallN (Floc 110076) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 054608;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 1;
    Jump: 110077
  } else {
    Jump: 054616
  }
LocReturn 054608:
  TraceOperation 054613 (Jump 054631);
  Jump: 054631
LocOp 054616:
  TraceOperation 054616 (Je [Var (Global 239),Con 100] (Branch F (Dloc 054628)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),100)) {
    TraceOperation 054620 (CallN (Floc 053928) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 054620;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 1;
    Jump: 053929
  } else {
    Jump: 054628
  }
LocReturn 054620:
  TraceOperation 054625 (Jump 054631);
  Jump: 054631
LocOp 054628:
  TraceOperation 054628 (Print_num (Var (Local 2)));
  GamePrint ShowNumber(GetLocal(2));
  Jump: 054631
LocOp 054631:
  TraceOperation 054631 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 054632:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 054633
LocOp 054633:
  TraceOperation 054633 (Store (Con 255) (Var (Local 1)));
  SetByte 007684 HiByte(GetLocal(1));
  SetByte 007685 LoByte(GetLocal(1));
  TraceOperation 054636 (Je [Var (Global 239),Con 54] (Branch F (Dloc 054641)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),54)) {
    TraceOperation 054640 Rfalse;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 054641
  }
LocOp 054641:
  TraceOperation 054641 (Je [Var (Global 239),Con 55] (Branch F (Dloc 054648)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),55)) {
    TraceOperation 054645 (Ret (Con 540));
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 540;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 054648
  }
LocOp 054648:
  TraceOperation 054648 (Je [Var (Global 239),Con 56] (Branch F (Dloc 054655)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),56)) {
    TraceOperation 054652 (Ret (Con 28440));
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 28440;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 054655
  }
LocOp 054655:
  TraceOperation 054655 (Je [Var (Global 239),Con 59] (Branch F (Dloc 054661)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),59)) {
    TraceOperation 054659 (Ret (Con 101));
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 101;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 054661
  }
LocOp 054661:
  TraceOperation 054661 (Je [Var (Global 239),Con 61] (Branch F (Dloc 054666)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 054665 Rfalse;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 054666
  }
LocOp 054666:
  TraceOperation 054666 (Je [Var (Global 239),Con 62] (Branch F (Dloc 054673)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),62)) {
    TraceOperation 054670 (Ret (Con 6145));
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 6145;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 054673
  }
LocOp 054673:
  TraceOperation 054673 (Je [Var (Global 239),Con 65] (Branch F (Dloc 054680)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),65)) {
    TraceOperation 054677 (Ret (Con 26509));
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 26509;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 054680
  }
LocOp 054680:
  TraceOperation 054680 (Je [Var (Global 239),Con 66] (Branch F (Dloc 054685)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),66)) {
    TraceOperation 054684 Rfalse;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 054685
  }
LocOp 054685:
  TraceOperation 054685 (Je [Var (Global 239),Con 68] (Branch F (Dloc 054691)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),68)) {
    TraceOperation 054689 (Ret (Con 72));
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 72;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 054691
  }
LocOp 054691:
  TraceOperation 054691 (Je [Var (Global 239),Con 70] (Branch F (Dloc 054696)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),70)) {
    TraceOperation 054695 Rfalse;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 054696
  }
LocOp 054696:
  TraceOperation 054696 (Je [Var (Global 239),Con 71] (Branch F (Dloc 054703)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),71)) {
    TraceOperation 054700 (Ret (Con 7788));
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 7788;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 054703
  }
LocOp 054703:
  TraceOperation 054703 (Je [Var (Global 239),Con 75] (Branch F (Dloc 054708)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),75)) {
    TraceOperation 054707 Rtrue;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 054708
  }
LocOp 054708:
  TraceOperation 054708 (Je [Var (Global 239),Con 77] (Branch F (Dloc 054713)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),77)) {
    TraceOperation 054712 Rfalse;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 054713
  }
LocOp 054713:
  TraceOperation 054713 (Je [Var (Global 239),Con 78] (Branch F (Dloc 054718)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),78)) {
    TraceOperation 054717 Rfalse;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 054718
  }
LocOp 054718:
  TraceOperation 054718 (Je [Var (Global 239),Con 80] (Branch F (Dloc 054723)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),80)) {
    TraceOperation 054722 Rfalse;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 054723
  }
LocOp 054723:
  TraceOperation 054723 (Je [Var (Global 239),Con 81] (Branch F (Dloc 054728)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),81)) {
    TraceOperation 054727 Rfalse;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 054728
  }
LocOp 054728:
  TraceOperation 054728 (Je [Var (Global 239),Con 82] (Branch F (Dloc 054733)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),82)) {
    TraceOperation 054732 Rfalse;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 054733
  }
LocOp 054733:
  TraceOperation 054733 (Je [Var (Global 239),Con 100] (Branch F (Dloc 054738)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),100)) {
    TraceOperation 054737 Rtrue;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 054738
  }
LocOp 054738:
  TraceOperation 054738 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 054740:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 054741
LocOp 054741:
  TraceOperation 054741 (Store (Con 255) (Var (Local 1)));
  SetByte 007684 HiByte(GetLocal(1));
  SetByte 007685 LoByte(GetLocal(1));
  TraceOperation 054744 (Je [Var (Global 239),Con 56] (Branch F (Dloc 054751)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),56)) {
    TraceOperation 054748 (Ret (Con 10239));
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 10239;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 054751
  }
LocOp 054751:
  TraceOperation 054751 (Je [Var (Global 239),Con 59] (Branch F (Dloc 054758)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),59)) {
    TraceOperation 054755 (Ret (Con 10239));
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 10239;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 054758
  }
LocOp 054758:
  TraceOperation 054758 (Je [Var (Global 239),Con 61] (Branch F (Dloc 054765)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 054762 (Ret (Con 10239));
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 10239;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 054765
  }
LocOp 054765:
  TraceOperation 054765 (Je [Var (Global 239),Con 62] (Branch F (Dloc 054772)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),62)) {
    TraceOperation 054769 (Ret (Con 10239));
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 10239;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 054772
  }
LocOp 054772:
  TraceOperation 054772 (Je [Var (Global 239),Con 65] (Branch F (Dloc 054779)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),65)) {
    TraceOperation 054776 (Ret (Con 10239));
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 10239;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 054779
  }
LocOp 054779:
  TraceOperation 054779 (Je [Var (Global 239),Con 66] (Branch F (Dloc 054786)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),66)) {
    TraceOperation 054783 (Ret (Con 10239));
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 10239;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 054786
  }
LocOp 054786:
  TraceOperation 054786 (Je [Var (Global 239),Con 68] (Branch F (Dloc 054793)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),68)) {
    TraceOperation 054790 (Ret (Con 10239));
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 10239;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 054793
  }
LocOp 054793:
  TraceOperation 054793 (Je [Var (Global 239),Con 70] (Branch F (Dloc 054800)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),70)) {
    TraceOperation 054797 (Ret (Con 10239));
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 10239;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 054800
  }
LocOp 054800:
  TraceOperation 054800 (Je [Var (Global 239),Con 71] (Branch F (Dloc 054807)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),71)) {
    TraceOperation 054804 (Ret (Con 10239));
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 10239;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 054807
  }
LocOp 054807:
  TraceOperation 054807 (Je [Var (Global 239),Con 75] (Branch F (Dloc 054814)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),75)) {
    TraceOperation 054811 (Ret (Con 10239));
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 10239;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 054814
  }
LocOp 054814:
  TraceOperation 054814 (Je [Var (Global 239),Con 77] (Branch F (Dloc 054821)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),77)) {
    TraceOperation 054818 (Ret (Con 10239));
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 10239;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 054821
  }
LocOp 054821:
  TraceOperation 054821 (Je [Var (Global 239),Con 78] (Branch F (Dloc 054828)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),78)) {
    TraceOperation 054825 (Ret (Con 10239));
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 10239;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 054828
  }
LocOp 054828:
  TraceOperation 054828 (Je [Var (Global 239),Con 80] (Branch F (Dloc 054835)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),80)) {
    TraceOperation 054832 (Ret (Con 27509));
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 27509;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 054835
  }
LocOp 054835:
  TraceOperation 054835 (Je [Var (Global 239),Con 81] (Branch F (Dloc 054842)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),81)) {
    TraceOperation 054839 (Ret (Con 27509));
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 27509;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 054842
  }
LocOp 054842:
  TraceOperation 054842 (Je [Var (Global 239),Con 82] (Branch F (Dloc 054849)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),82)) {
    TraceOperation 054846 (Ret (Con 27509));
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 27509;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 054849
  }
LocOp 054849:
  TraceOperation 054849 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 054852:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 054853
LocOp 054853:
  TraceOperation 054853 (Je [Var (Local 1),Con 80,Con 81,Con 82] (Branch T Dtrue));
  if (LogOr(LogOr(Equal(GetLocal(1),80),Equal(GetLocal(1),81)),Equal(GetLocal(1),82))) {
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    TraceOperation 054860 Rfalse;
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  }
--------------------------------------------------
LocRoutine 054864:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 054865
LocOp 054865:
  TraceOperation 054865 (Store (Con 255) (Var (Local 1)));
  SetByte 007684 HiByte(GetLocal(1));
  SetByte 007685 LoByte(GetLocal(1));
  TraceOperation 054868 (Je [Var (Global 239),Con 80] (Branch F (Dloc 054875)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),80)) {
    TraceOperation 054872 (Ret (Con 27510));
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 27510;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 054875
  }
LocOp 054875:
  TraceOperation 054875 (Je [Var (Global 239),Con 81] (Branch F (Dloc 054882)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),81)) {
    TraceOperation 054879 (Ret (Con 27517));
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 27517;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 054882
  }
LocOp 054882:
  TraceOperation 054882 (Je [Var (Global 239),Con 82] (Branch F (Dloc 054889)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),82)) {
    TraceOperation 054886 (Ret (Con 27518));
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 27518;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 054889
  }
LocOp 054889:
  TraceOperation 054889 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 054892:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 054893
LocOp 054893:
  TraceOperation 054893 (Je [Var (Local 1),Con 13] (Branch F (Dloc 054904)));
  if (Equal(GetLocal(1),13)) {
    TraceOperation 054899 (Print "room");
    GamePrint "room";
    Jump: 054904
  } else {
    Jump: 054904
  }
LocOp 054904:
  TraceOperation 054904 (Je [Var (Local 1),Con 14] (Branch F (Dloc 054915)));
  if (Equal(GetLocal(1),14)) {
    TraceOperation 054910 (Print "thing");
    GamePrint "thing";
    Jump: 054915
  } else {
    Jump: 054915
  }
LocOp 054915:
  TraceOperation 054915 (Je [Var (Local 1),Con 15] (Branch F (Dloc 054928)));
  if (Equal(GetLocal(1),15)) {
    TraceOperation 054921 (Print "direction");
    GamePrint "direction";
    Jump: 054928
  } else {
    Jump: 054928
  }
LocOp 054928:
  TraceOperation 054928 (Je [Var (Local 1),Con 16] (Branch F (Dloc 054939)));
  if (Equal(GetLocal(1),16)) {
    TraceOperation 054934 (Print "door");
    GamePrint "door";
    Jump: 054939
  } else {
    Jump: 054939
  }
LocOp 054939:
  TraceOperation 054939 (Je [Var (Local 1),Con 17] (Branch F (Dloc 054952)));
  if (Equal(GetLocal(1),17)) {
    TraceOperation 054945 (Print "container");
    GamePrint "container";
    Jump: 054952
  } else {
    Jump: 054952
  }
LocOp 054952:
  TraceOperation 054952 (Je [Var (Local 1),Con 18] (Branch F (Dloc 054965)));
  if (Equal(GetLocal(1),18)) {
    TraceOperation 054958 (Print "supporter");
    GamePrint "supporter";
    Jump: 054965
  } else {
    Jump: 054965
  }
LocOp 054965:
  TraceOperation 054965 (Je [Var (Local 1),Con 19] (Branch F (Dloc 054978)));
  if (Equal(GetLocal(1),19)) {
    TraceOperation 054971 (Print "backdrop");
    GamePrint "backdrop";
    Jump: 054978
  } else {
    Jump: 054978
  }
LocOp 054978:
  TraceOperation 054978 (Je [Var (Local 1),Con 20] (Branch F (Dloc 054989)));
  if (Equal(GetLocal(1),20)) {
    TraceOperation 054984 (Print "person");
    GamePrint "person";
    Jump: 054989
  } else {
    Jump: 054989
  }
LocOp 054989:
  TraceOperation 054989 (Je [Var (Local 1),Con 21] (Branch F (Dloc 055000)));
  if (Equal(GetLocal(1),21)) {
    TraceOperation 054995 (Print "region");
    GamePrint "region";
    Jump: 055000
  } else {
    Jump: 055000
  }
LocOp 055000:
  TraceOperation 055000 (Je [Var (Local 1),Con 22] (Branch F (Dloc 055009)));
  if (Equal(GetLocal(1),22)) {
    TraceOperation 055006 (Print "man");
    GamePrint "man";
    Jump: 055009
  } else {
    Jump: 055009
  }
LocOp 055009:
  TraceOperation 055009 (Je [Var (Local 1),Con 23] (Branch F (Dloc 055020)));
  if (Equal(GetLocal(1),23)) {
    TraceOperation 055015 (Print "woman");
    GamePrint "woman";
    Jump: 055020
  } else {
    Jump: 055020
  }
LocOp 055020:
  TraceOperation 055020 (Je [Var (Local 1),Con 24] (Branch F (Dloc 055031)));
  if (Equal(GetLocal(1),24)) {
    TraceOperation 055026 (Print "animal");
    GamePrint "animal";
    Jump: 055031
  } else {
    Jump: 055031
  }
LocOp 055031:
  TraceOperation 055031 (Je [Var (Local 1),Con 25] (Branch F (Dloc 055042)));
  if (Equal(GetLocal(1),25)) {
    TraceOperation 055037 (Print "device");
    GamePrint "device";
    Jump: 055042
  } else {
    Jump: 055042
  }
LocOp 055042:
  TraceOperation 055042 (Je [Var (Local 1),Con 26] (Branch F (Dloc 055055)));
  if (Equal(GetLocal(1),26)) {
    TraceOperation 055048 (Print "vehicle");
    GamePrint "vehicle";
    Jump: 055055
  } else {
    Jump: 055055
  }
LocOp 055055:
  TraceOperation 055055 (Je [Var (Local 1),Con 27] (Branch F (Dloc 055074)));
  if (Equal(GetLocal(1),27)) {
    TraceOperation 055061 (Print "player's holdall");
    GamePrint "player's holdall";
    Jump: 055074
  } else {
    Jump: 055074
  }
LocOp 055074:
  TraceOperation 055074 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 055076:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 055077
LocOp 055077:
  TraceOperation 055077 (Print_paddr (Var (Local 1)));
  GamePrint GetText(PackedAddress Z5(GetLocal(1)));
  TraceOperation 055079 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 055080:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 055081
LocOp 055081:
  TraceOperation 055081 (Store (Con 1) (Var (Global 1)));
  Let b1 = M[007208];
  Let b2 = M[007209];
  SetLocal 1 MakeHiLo(b1,b2);
  TraceOperation 055084 (Je [Var (Local 1),Con 8] (Branch F (Dloc 055091)));
  if (Equal(GetLocal(1),8)) {
    TraceOperation 055088 (Store (Con 1) (Var (Global 32)));
    Let b3 = M[007270];
    Let b4 = M[007271];
    SetLocal 1 MakeHiLo(b3,b4);
    Jump: 055091
  } else {
    Jump: 055091
  }
LocOp 055091:
  TraceOperation 055091 (Je [Var (Local 1),Con 43] (Branch F (Dloc 055097)));
  if (Equal(GetLocal(1),43)) {
    TraceOperation 055095 (Ret (Con 5));
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 5;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 055097
  }
LocOp 055097:
  TraceOperation 055097 (Ret (Con 4));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 4;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 055100:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 055101
LocOp 055101:
  TraceOperation 055101 (Store (Con 1) (Var (Global 1)));
  Let b1 = M[007208];
  Let b2 = M[007209];
  SetLocal 1 MakeHiLo(b1,b2);
  TraceOperation 055104 (Je [Var (Local 1),Con 8] (Branch F (Dloc 055111)));
  if (Equal(GetLocal(1),8)) {
    TraceOperation 055108 (Store (Con 1) (Var (Global 32)));
    Let b3 = M[007270];
    Let b4 = M[007271];
    SetLocal 1 MakeHiLo(b3,b4);
    Jump: 055111
  } else {
    Jump: 055111
  }
LocOp 055111:
  TraceOperation 055111 (Je [Var (Local 1),Con 43] (Branch F (Dloc 055118)));
  if (Equal(GetLocal(1),43)) {
    TraceOperation 055115 (Ret (Con 60));
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 60;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 055118
  }
LocOp 055118:
  TraceOperation 055118 (Ret (Con 43));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 43;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 055120:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 055121
LocOp 055121:
  TraceOperation 055121 (Store (Con 1) (Var (Global 1)));
  Let b1 = M[007208];
  Let b2 = M[007209];
  SetLocal 1 MakeHiLo(b1,b2);
  TraceOperation 055124 (Je [Var (Local 1),Con 8] (Branch F (Dloc 055131)));
  if (Equal(GetLocal(1),8)) {
    TraceOperation 055128 (Store (Con 1) (Var (Global 32)));
    Let b3 = M[007270];
    Let b4 = M[007271];
    SetLocal 1 MakeHiLo(b3,b4);
    Jump: 055131
  } else {
    Jump: 055131
  }
LocOp 055131:
  TraceOperation 055131 (Je [Var (Local 1),Con 71] (Branch F (Dloc 055139)));
  if (Equal(GetLocal(1),71)) {
    TraceOperation 055137 (Ret (Con 5));
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 5;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 055139
  }
LocOp 055139:
  TraceOperation 055139 (Ret (Con 4));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 4;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 055144:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 055145
LocOp 055145:
  TraceOperation 055145 (Store (Con 1) (Var (Global 1)));
  Let b1 = M[007208];
  Let b2 = M[007209];
  SetLocal 1 MakeHiLo(b1,b2);
  TraceOperation 055148 (Je [Var (Local 1),Con 8] (Branch F (Dloc 055155)));
  if (Equal(GetLocal(1),8)) {
    TraceOperation 055152 (Store (Con 1) (Var (Global 32)));
    Let b3 = M[007270];
    Let b4 = M[007271];
    SetLocal 1 MakeHiLo(b3,b4);
    Jump: 055155
  } else {
    Jump: 055155
  }
LocOp 055155:
  TraceOperation 055155 (Je [Var (Local 1),Con 71] (Branch F (Dloc 055163)));
  if (Equal(GetLocal(1),71)) {
    TraceOperation 055161 (Ret (Con 63));
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 63;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 055163
  }
LocOp 055163:
  TraceOperation 055163 (Ret (Con 71));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 71;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 055168:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 055169
LocOp 055169:
  TraceOperation 055169 (Je [Var (Local 2),Con 1] (Branch F (Dloc 055216)));
  if (Equal(GetLocal(2),1)) {
    TraceOperation 055173 (Storew (Con 16625) (Var (Local 1)) (Con 43));
    SetByte Offset(016625,Mul(2,GetLocal(1))) 0;
    SetByte Offset(Offset(016625,Mul(2,GetLocal(1))),1) 43;
    TraceOperation 055179 (Inc (Con 1));
    SetLocal 1 Add(GetLocal(1),1);
    TraceOperation 055181 (Storew (Con 16625) (Var (Local 1)) (Con 0));
    SetByte Offset(016625,Mul(2,GetLocal(1))) 0;
    SetByte Offset(Offset(016625,Mul(2,GetLocal(1))),1) 0;
    TraceOperation 055187 (Inc (Con 1));
    SetLocal 1 Add(GetLocal(1),1);
    TraceOperation 055189 (Storew (Con 16625) (Var (Local 1)) (Con 0));
    SetByte Offset(016625,Mul(2,GetLocal(1))) 0;
    SetByte Offset(Offset(016625,Mul(2,GetLocal(1))),1) 0;
    TraceOperation 055195 (Inc (Con 1));
    SetLocal 1 Add(GetLocal(1),1);
    TraceOperation 055197 (Storew (Con 16625) (Var (Local 1)) (Con 0));
    SetByte Offset(016625,Mul(2,GetLocal(1))) 0;
    SetByte Offset(Offset(016625,Mul(2,GetLocal(1))),1) 0;
    TraceOperation 055203 (Inc (Con 1));
    SetLocal 1 Add(GetLocal(1),1);
    TraceOperation 055205 (Storew (Con 16625) (Var (Local 1)) (Con 0));
    SetByte Offset(016625,Mul(2,GetLocal(1))) 0;
    SetByte Offset(Offset(016625,Mul(2,GetLocal(1))),1) 0;
    TraceOperation 055211 (Inc (Con 1));
    SetLocal 1 Add(GetLocal(1),1);
    TraceOperation 055213 (Jump 055226);
    Jump: 055226
  } else {
    Jump: 055216
  }
LocOp 055216:
  TraceOperation 055216 (Inc (Con 1));
  SetLocal 1 Add(GetLocal(1),1);
  TraceOperation 055218 (Inc (Con 1));
  SetLocal 1 Add(GetLocal(1),1);
  TraceOperation 055220 (Inc (Con 1));
  SetLocal 1 Add(GetLocal(1),1);
  TraceOperation 055222 (Inc (Con 1));
  SetLocal 1 Add(GetLocal(1),1);
  TraceOperation 055224 (Inc (Con 1));
  SetLocal 1 Add(GetLocal(1),1);
  Jump: 055226
LocOp 055226:
  TraceOperation 055226 (Ret (Con 5));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 5;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 055228:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 055229
LocOp 055229:
  TraceOperation 055229 (Je [Var (Local 2),Con 1] (Branch F (Dloc 055244)));
  if (Equal(GetLocal(2),1)) {
    TraceOperation 055233 (Storew (Con 16625) (Var (Local 1)) (Con 0));
    SetByte Offset(016625,Mul(2,GetLocal(1))) 0;
    SetByte Offset(Offset(016625,Mul(2,GetLocal(1))),1) 0;
    TraceOperation 055239 (Inc (Con 1));
    SetLocal 1 Add(GetLocal(1),1);
    TraceOperation 055241 (Jump 055246);
    Jump: 055246
  } else {
    Jump: 055244
  }
LocOp 055244:
  TraceOperation 055244 (Inc (Con 1));
  SetLocal 1 Add(GetLocal(1),1);
  Jump: 055246
LocOp 055246:
  TraceOperation 055246 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 055248:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 055249
LocOp 055249:
  TraceOperation 055249 (Je [Var (Local 2),Con 1] (Branch F (Dloc 055288)));
  if (Equal(GetLocal(2),1)) {
    TraceOperation 055253 (Storew (Con 16625) (Var (Local 1)) (Con 72));
    SetByte Offset(016625,Mul(2,GetLocal(1))) 0;
    SetByte Offset(Offset(016625,Mul(2,GetLocal(1))),1) 72;
    TraceOperation 055259 (Inc (Con 1));
    SetLocal 1 Add(GetLocal(1),1);
    TraceOperation 055261 (Storew (Con 16625) (Var (Local 1)) (Con 0));
    SetByte Offset(016625,Mul(2,GetLocal(1))) 0;
    SetByte Offset(Offset(016625,Mul(2,GetLocal(1))),1) 0;
    TraceOperation 055267 (Inc (Con 1));
    SetLocal 1 Add(GetLocal(1),1);
    TraceOperation 055269 (Storew (Con 16625) (Var (Local 1)) (Con 0));
    SetByte Offset(016625,Mul(2,GetLocal(1))) 0;
    SetByte Offset(Offset(016625,Mul(2,GetLocal(1))),1) 0;
    TraceOperation 055275 (Inc (Con 1));
    SetLocal 1 Add(GetLocal(1),1);
    TraceOperation 055277 (Storew (Con 16625) (Var (Local 1)) (Con 0));
    SetByte Offset(016625,Mul(2,GetLocal(1))) 0;
    SetByte Offset(Offset(016625,Mul(2,GetLocal(1))),1) 0;
    TraceOperation 055283 (Inc (Con 1));
    SetLocal 1 Add(GetLocal(1),1);
    TraceOperation 055285 (Jump 055296);
    Jump: 055296
  } else {
    Jump: 055288
  }
LocOp 055288:
  TraceOperation 055288 (Inc (Con 1));
  SetLocal 1 Add(GetLocal(1),1);
  TraceOperation 055290 (Inc (Con 1));
  SetLocal 1 Add(GetLocal(1),1);
  TraceOperation 055292 (Inc (Con 1));
  SetLocal 1 Add(GetLocal(1),1);
  TraceOperation 055294 (Inc (Con 1));
  SetLocal 1 Add(GetLocal(1),1);
  Jump: 055296
LocOp 055296:
  TraceOperation 055296 (Ret (Con 4));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 4;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 055300:
  MakeRoutineFrame 0;
  Jump: 055301
LocOp 055301:
  TraceOperation 055301 (Call (Floc 077824) [Con 123,Con 124,Con 125] Sp);
  PushFrame;
  PushReturnAddress 055301;
  SetLocal 1 123;
  SetLocal 2 124;
  SetLocal 3 125;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 077825
LocReturn 055301:
  PushStack call_result;
  TraceOperation 055309 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 055312:
  MakeRoutineFrame 0;
  Jump: 055313
LocOp 055313:
  TraceOperation 055313 (Call (Floc 077824) [Con 126,Con 127,Con 128] Sp);
  PushFrame;
  PushReturnAddress 055313;
  SetLocal 1 126;
  SetLocal 2 127;
  SetLocal 3 128;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 077825
LocReturn 055313:
  PushStack call_result;
  TraceOperation 055321 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 055324:
  MakeRoutineFrame 0;
  Jump: 055325
LocOp 055325:
  TraceOperation 055325 (Call (Floc 077824) [Con 129,Con 130,Con 131] Sp);
  PushFrame;
  PushReturnAddress 055325;
  SetLocal 1 129;
  SetLocal 2 130;
  SetLocal 3 131;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 077825
LocReturn 055325:
  PushStack call_result;
  TraceOperation 055333 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 055336:
  MakeRoutineFrame 0;
  Jump: 055337
LocOp 055337:
  TraceOperation 055337 (Call (Floc 077824) [Con 132,Con 133,Con 134] Sp);
  PushFrame;
  PushReturnAddress 055337;
  SetLocal 1 132;
  SetLocal 2 133;
  SetLocal 3 134;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 077825
LocReturn 055337:
  PushStack call_result;
  TraceOperation 055345 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 055348:
  MakeRoutineFrame 0;
  Jump: 055349
LocOp 055349:
  TraceOperation 055349 (Call (Floc 077824) [Con 135,Con 136,Con 137] Sp);
  PushFrame;
  PushReturnAddress 055349;
  SetLocal 1 135;
  SetLocal 2 136;
  SetLocal 3 137;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 077825
LocReturn 055349:
  PushStack call_result;
  TraceOperation 055357 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 055360:
  MakeRoutineFrame 0;
  Jump: 055361
LocOp 055361:
  TraceOperation 055361 (Call (Floc 077824) [Con 138,Con 139,Con 140] Sp);
  PushFrame;
  PushReturnAddress 055361;
  SetLocal 1 138;
  SetLocal 2 139;
  SetLocal 3 140;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 077825
LocReturn 055361:
  PushStack call_result;
  TraceOperation 055369 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 055372:
  MakeRoutineFrame 0;
  Jump: 055373
LocOp 055373:
  TraceOperation 055373 (Call (Floc 077824) [Con 141,Con 142,Con 143] Sp);
  PushFrame;
  PushReturnAddress 055373;
  SetLocal 1 141;
  SetLocal 2 142;
  SetLocal 3 143;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 077825
LocReturn 055373:
  PushStack call_result;
  TraceOperation 055381 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 055384:
  MakeRoutineFrame 0;
  Jump: 055385
LocOp 055385:
  TraceOperation 055385 (Call (Floc 077824) [Con 144,Con 145,Con 146] Sp);
  PushFrame;
  PushReturnAddress 055385;
  SetLocal 1 144;
  SetLocal 2 145;
  SetLocal 3 146;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 077825
LocReturn 055385:
  PushStack call_result;
  TraceOperation 055393 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 055396:
  MakeRoutineFrame 0;
  Jump: 055397
LocOp 055397:
  TraceOperation 055397 (Call (Floc 077824) [Con 147,Con 148,Con 149] Sp);
  PushFrame;
  PushReturnAddress 055397;
  SetLocal 1 147;
  SetLocal 2 148;
  SetLocal 3 149;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 077825
LocReturn 055397:
  PushStack call_result;
  TraceOperation 055405 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 055408:
  MakeRoutineFrame 0;
  Jump: 055409
LocOp 055409:
  TraceOperation 055409 (Call (Floc 077824) [Con 150,Con 151,Con 152] Sp);
  PushFrame;
  PushReturnAddress 055409;
  SetLocal 1 150;
  SetLocal 2 151;
  SetLocal 3 152;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 077825
LocReturn 055409:
  PushStack call_result;
  TraceOperation 055417 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 055420:
  MakeRoutineFrame 0;
  Jump: 055421
LocOp 055421:
  TraceOperation 055421 (Call (Floc 077824) [Con 153,Con 154,Con 155] Sp);
  PushFrame;
  PushReturnAddress 055421;
  SetLocal 1 153;
  SetLocal 2 154;
  SetLocal 3 155;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 077825
LocReturn 055421:
  PushStack call_result;
  TraceOperation 055429 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 055432:
  MakeRoutineFrame 0;
  Jump: 055433
LocOp 055433:
  TraceOperation 055433 (Call (Floc 077824) [Con 156,Con 157,Con 158] Sp);
  PushFrame;
  PushReturnAddress 055433;
  SetLocal 1 156;
  SetLocal 2 157;
  SetLocal 3 158;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 077825
LocReturn 055433:
  PushStack call_result;
  TraceOperation 055441 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 055444:
  MakeRoutineFrame 0;
  Jump: 055445
LocOp 055445:
  TraceOperation 055445 (Call (Floc 077824) [Con 159,Con 160,Con 161] Sp);
  PushFrame;
  PushReturnAddress 055445;
  SetLocal 1 159;
  SetLocal 2 160;
  SetLocal 3 161;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 077825
LocReturn 055445:
  PushStack call_result;
  TraceOperation 055453 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 055456:
  MakeRoutineFrame 0;
  Jump: 055457
LocOp 055457:
  TraceOperation 055457 (Call (Floc 077824) [Con 162,Con 163,Con 164] Sp);
  PushFrame;
  PushReturnAddress 055457;
  SetLocal 1 162;
  SetLocal 2 163;
  SetLocal 3 164;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 077825
LocReturn 055457:
  PushStack call_result;
  TraceOperation 055465 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 055468:
  MakeRoutineFrame 0;
  Jump: 055469
LocOp 055469:
  TraceOperation 055469 (Call (Floc 077824) [Con 165,Con 166,Con 167] Sp);
  PushFrame;
  PushReturnAddress 055469;
  SetLocal 1 165;
  SetLocal 2 166;
  SetLocal 3 167;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 077825
LocReturn 055469:
  PushStack call_result;
  TraceOperation 055477 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 055480:
  MakeRoutineFrame 0;
  Jump: 055481
LocOp 055481:
  TraceOperation 055481 (Call (Floc 077824) [Con 168,Con 169,Con 170] Sp);
  PushFrame;
  PushReturnAddress 055481;
  SetLocal 1 168;
  SetLocal 2 169;
  SetLocal 3 170;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 077825
LocReturn 055481:
  PushStack call_result;
  TraceOperation 055489 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 055492:
  MakeRoutineFrame 0;
  Jump: 055493
LocOp 055493:
  TraceOperation 055493 (Call (Floc 077824) [Con 171,Con 172,Con 173] Sp);
  PushFrame;
  PushReturnAddress 055493;
  SetLocal 1 171;
  SetLocal 2 172;
  SetLocal 3 173;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 077825
LocReturn 055493:
  PushStack call_result;
  TraceOperation 055501 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 055504:
  MakeRoutineFrame 0;
  Jump: 055505
LocOp 055505:
  TraceOperation 055505 (Call (Floc 077824) [Con 174,Con 175,Con 176] Sp);
  PushFrame;
  PushReturnAddress 055505;
  SetLocal 1 174;
  SetLocal 2 175;
  SetLocal 3 176;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 077825
LocReturn 055505:
  PushStack call_result;
  TraceOperation 055513 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 055516:
  MakeRoutineFrame 0;
  Jump: 055517
LocOp 055517:
  TraceOperation 055517 (Call (Floc 077824) [Con 177,Con 178,Con 179] Sp);
  PushFrame;
  PushReturnAddress 055517;
  SetLocal 1 177;
  SetLocal 2 178;
  SetLocal 3 179;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 077825
LocReturn 055517:
  PushStack call_result;
  TraceOperation 055525 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 055528:
  MakeRoutineFrame 0;
  Jump: 055529
LocOp 055529:
  TraceOperation 055529 (Call (Floc 077824) [Con 180,Con 181,Con 182] Sp);
  PushFrame;
  PushReturnAddress 055529;
  SetLocal 1 180;
  SetLocal 2 181;
  SetLocal 3 182;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 077825
LocReturn 055529:
  PushStack call_result;
  TraceOperation 055537 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 055540:
  MakeRoutineFrame 0;
  Jump: 055541
LocOp 055541:
  TraceOperation 055541 (Call (Floc 077824) [Con 183,Con 184,Con 185] Sp);
  PushFrame;
  PushReturnAddress 055541;
  SetLocal 1 183;
  SetLocal 2 184;
  SetLocal 3 185;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 077825
LocReturn 055541:
  PushStack call_result;
  TraceOperation 055549 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 055552:
  MakeRoutineFrame 0;
  Jump: 055553
LocOp 055553:
  TraceOperation 055553 (Call (Floc 077824) [Con 186,Con 187,Con 188] Sp);
  PushFrame;
  PushReturnAddress 055553;
  SetLocal 1 186;
  SetLocal 2 187;
  SetLocal 3 188;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 077825
LocReturn 055553:
  PushStack call_result;
  TraceOperation 055561 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 055564:
  MakeRoutineFrame 0;
  Jump: 055565
LocOp 055565:
  TraceOperation 055565 (Call (Floc 077824) [Con 189,Con 190,Con 191] Sp);
  PushFrame;
  PushReturnAddress 055565;
  SetLocal 1 189;
  SetLocal 2 190;
  SetLocal 3 191;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 077825
LocReturn 055565:
  PushStack call_result;
  TraceOperation 055573 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 055576:
  MakeRoutineFrame 0;
  Jump: 055577
LocOp 055577:
  TraceOperation 055577 (Call (Floc 077824) [Con 192,Con 193,Con 194] Sp);
  PushFrame;
  PushReturnAddress 055577;
  SetLocal 1 192;
  SetLocal 2 193;
  SetLocal 3 194;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 077825
LocReturn 055577:
  PushStack call_result;
  TraceOperation 055585 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 055588:
  MakeRoutineFrame 0;
  Jump: 055589
LocOp 055589:
  TraceOperation 055589 (Call (Floc 077824) [Con 195,Con 196,Con 197] Sp);
  PushFrame;
  PushReturnAddress 055589;
  SetLocal 1 195;
  SetLocal 2 196;
  SetLocal 3 197;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 077825
LocReturn 055589:
  PushStack call_result;
  TraceOperation 055597 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 055600:
  MakeRoutineFrame 0;
  Jump: 055601
LocOp 055601:
  TraceOperation 055601 (Call (Floc 077824) [Con 198,Con 199,Con 200] Sp);
  PushFrame;
  PushReturnAddress 055601;
  SetLocal 1 198;
  SetLocal 2 199;
  SetLocal 3 200;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 077825
LocReturn 055601:
  PushStack call_result;
  TraceOperation 055609 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 055612:
  MakeRoutineFrame 0;
  Jump: 055613
LocOp 055613:
  TraceOperation 055613 (Call (Floc 077824) [Con 201,Con 202,Con 203] Sp);
  PushFrame;
  PushReturnAddress 055613;
  SetLocal 1 201;
  SetLocal 2 202;
  SetLocal 3 203;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 077825
LocReturn 055613:
  PushStack call_result;
  TraceOperation 055621 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 055624:
  MakeRoutineFrame 0;
  Jump: 055625
LocOp 055625:
  TraceOperation 055625 (Call (Floc 077824) [Con 204,Con 205,Con 206] Sp);
  PushFrame;
  PushReturnAddress 055625;
  SetLocal 1 204;
  SetLocal 2 205;
  SetLocal 3 206;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 077825
LocReturn 055625:
  PushStack call_result;
  TraceOperation 055633 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 055636:
  MakeRoutineFrame 0;
  Jump: 055637
LocOp 055637:
  TraceOperation 055637 (Call (Floc 077824) [Con 207,Con 208,Con 209] Sp);
  PushFrame;
  PushReturnAddress 055637;
  SetLocal 1 207;
  SetLocal 2 208;
  SetLocal 3 209;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 077825
LocReturn 055637:
  PushStack call_result;
  TraceOperation 055645 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 055648:
  MakeRoutineFrame 0;
  Jump: 055649
LocOp 055649:
  TraceOperation 055649 (Call (Floc 077824) [Con 210,Con 211,Con 212] Sp);
  PushFrame;
  PushReturnAddress 055649;
  SetLocal 1 210;
  SetLocal 2 211;
  SetLocal 3 212;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 077825
LocReturn 055649:
  PushStack call_result;
  TraceOperation 055657 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 055660:
  MakeRoutineFrame 0;
  Jump: 055661
LocOp 055661:
  TraceOperation 055661 (Call (Floc 077824) [Con 213,Con 214,Con 215] Sp);
  PushFrame;
  PushReturnAddress 055661;
  SetLocal 1 213;
  SetLocal 2 214;
  SetLocal 3 215;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 077825
LocReturn 055661:
  PushStack call_result;
  TraceOperation 055669 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 055672:
  MakeRoutineFrame 0;
  Jump: 055673
LocOp 055673:
  TraceOperation 055673 (Call (Floc 077824) [Con 216,Con 217,Con 218] Sp);
  PushFrame;
  PushReturnAddress 055673;
  SetLocal 1 216;
  SetLocal 2 217;
  SetLocal 3 218;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 077825
LocReturn 055673:
  PushStack call_result;
  TraceOperation 055681 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 055684:
  MakeRoutineFrame 0;
  Jump: 055685
LocOp 055685:
  TraceOperation 055685 (Call (Floc 077824) [Con 219,Con 220,Con 221] Sp);
  PushFrame;
  PushReturnAddress 055685;
  SetLocal 1 219;
  SetLocal 2 220;
  SetLocal 3 221;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 077825
LocReturn 055685:
  PushStack call_result;
  TraceOperation 055693 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 055696:
  MakeRoutineFrame 0;
  Jump: 055697
LocOp 055697:
  TraceOperation 055697 (Call (Floc 077824) [Con 222,Con 223,Con 224] Sp);
  PushFrame;
  PushReturnAddress 055697;
  SetLocal 1 222;
  SetLocal 2 223;
  SetLocal 3 224;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 077825
LocReturn 055697:
  PushStack call_result;
  TraceOperation 055705 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 055708:
  MakeRoutineFrame 0;
  Jump: 055709
LocOp 055709:
  TraceOperation 055709 (Call (Floc 077824) [Con 225,Con 226,Con 227] Sp);
  PushFrame;
  PushReturnAddress 055709;
  SetLocal 1 225;
  SetLocal 2 226;
  SetLocal 3 227;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 077825
LocReturn 055709:
  PushStack call_result;
  TraceOperation 055717 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 055720:
  MakeRoutineFrame 0;
  Jump: 055721
LocOp 055721:
  TraceOperation 055721 (Call (Floc 077824) [Con 228,Con 229,Con 230] Sp);
  PushFrame;
  PushReturnAddress 055721;
  SetLocal 1 228;
  SetLocal 2 229;
  SetLocal 3 230;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 077825
LocReturn 055721:
  PushStack call_result;
  TraceOperation 055729 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 055732:
  MakeRoutineFrame 0;
  Jump: 055733
LocOp 055733:
  TraceOperation 055733 (Call (Floc 077824) [Con 231,Con 232,Con 233] Sp);
  PushFrame;
  PushReturnAddress 055733;
  SetLocal 1 231;
  SetLocal 2 232;
  SetLocal 3 233;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 077825
LocReturn 055733:
  PushStack call_result;
  TraceOperation 055741 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 055744:
  MakeRoutineFrame 0;
  Jump: 055745
LocOp 055745:
  TraceOperation 055745 (Call (Floc 077824) [Con 234,Con 235,Con 236] Sp);
  PushFrame;
  PushReturnAddress 055745;
  SetLocal 1 234;
  SetLocal 2 235;
  SetLocal 3 236;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 077825
LocReturn 055745:
  PushStack call_result;
  TraceOperation 055753 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 055756:
  MakeRoutineFrame 0;
  Jump: 055757
LocOp 055757:
  TraceOperation 055757 (Call (Floc 077824) [Con 237,Con 238,Con 239] Sp);
  PushFrame;
  PushReturnAddress 055757;
  SetLocal 1 237;
  SetLocal 2 238;
  SetLocal 3 239;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 077825
LocReturn 055757:
  PushStack call_result;
  TraceOperation 055765 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 055768:
  MakeRoutineFrame 0;
  Jump: 055769
LocOp 055769:
  TraceOperation 055769 (Call (Floc 077824) [Con 240,Con 241,Con 242] Sp);
  PushFrame;
  PushReturnAddress 055769;
  SetLocal 1 240;
  SetLocal 2 241;
  SetLocal 3 242;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 077825
LocReturn 055769:
  PushStack call_result;
  TraceOperation 055777 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 055780:
  MakeRoutineFrame 0;
  Jump: 055781
LocOp 055781:
  TraceOperation 055781 (Call (Floc 077824) [Con 243,Con 244,Con 245] Sp);
  PushFrame;
  PushReturnAddress 055781;
  SetLocal 1 243;
  SetLocal 2 244;
  SetLocal 3 245;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 077825
LocReturn 055781:
  PushStack call_result;
  TraceOperation 055789 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 055792:
  MakeRoutineFrame 0;
  Jump: 055793
LocOp 055793:
  TraceOperation 055793 (Call (Floc 077824) [Con 246,Con 247,Con 248] Sp);
  PushFrame;
  PushReturnAddress 055793;
  SetLocal 1 246;
  SetLocal 2 247;
  SetLocal 3 248;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 077825
LocReturn 055793:
  PushStack call_result;
  TraceOperation 055801 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 055804:
  MakeRoutineFrame 0;
  Jump: 055805
LocOp 055805:
  TraceOperation 055805 (Call (Floc 077824) [Con 249,Con 250,Con 251] Sp);
  PushFrame;
  PushReturnAddress 055805;
  SetLocal 1 249;
  SetLocal 2 250;
  SetLocal 3 251;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 077825
LocReturn 055805:
  PushStack call_result;
  TraceOperation 055813 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 055816:
  MakeRoutineFrame 0;
  Jump: 055817
LocOp 055817:
  TraceOperation 055817 (Call (Floc 077824) [Con 252,Con 253,Con 254] Sp);
  PushFrame;
  PushReturnAddress 055817;
  SetLocal 1 252;
  SetLocal 2 253;
  SetLocal 3 254;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 077825
LocReturn 055817:
  PushStack call_result;
  TraceOperation 055825 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 055828:
  MakeRoutineFrame 0;
  Jump: 055829
LocOp 055829:
  TraceOperation 055829 (Call (Floc 077824) [Con 255,Con 256,Con 257] Sp);
  PushFrame;
  PushReturnAddress 055829;
  SetLocal 1 255;
  SetLocal 2 256;
  SetLocal 3 257;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 077825
LocReturn 055829:
  PushStack call_result;
  TraceOperation 055839 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 055840:
  MakeRoutineFrame 0;
  Jump: 055841
LocOp 055841:
  TraceOperation 055841 (Call (Floc 077824) [Con 258,Con 259,Con 260] Sp);
  PushFrame;
  PushReturnAddress 055841;
  SetLocal 1 258;
  SetLocal 2 259;
  SetLocal 3 260;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 077825
LocReturn 055841:
  PushStack call_result;
  TraceOperation 055852 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 055856:
  MakeRoutineFrame 0;
  Jump: 055857
LocOp 055857:
  TraceOperation 055857 (Call (Floc 077824) [Con 261,Con 262,Con 263] Sp);
  PushFrame;
  PushReturnAddress 055857;
  SetLocal 1 261;
  SetLocal 2 262;
  SetLocal 3 263;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 077825
LocReturn 055857:
  PushStack call_result;
  TraceOperation 055868 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 055872:
  MakeRoutineFrame 0;
  Jump: 055873
LocOp 055873:
  TraceOperation 055873 (Call (Floc 077824) [Con 264,Con 265,Con 266] Sp);
  PushFrame;
  PushReturnAddress 055873;
  SetLocal 1 264;
  SetLocal 2 265;
  SetLocal 3 266;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 077825
LocReturn 055873:
  PushStack call_result;
  TraceOperation 055884 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 055888:
  MakeRoutineFrame 0;
  Jump: 055889
LocOp 055889:
  TraceOperation 055889 (Call (Floc 077824) [Con 267,Con 268,Con 269] Sp);
  PushFrame;
  PushReturnAddress 055889;
  SetLocal 1 267;
  SetLocal 2 268;
  SetLocal 3 269;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 077825
LocReturn 055889:
  PushStack call_result;
  TraceOperation 055900 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 055904:
  MakeRoutineFrame 0;
  Jump: 055905
LocOp 055905:
  TraceOperation 055905 (Call (Floc 077824) [Con 270,Con 271,Con 272] Sp);
  PushFrame;
  PushReturnAddress 055905;
  SetLocal 1 270;
  SetLocal 2 271;
  SetLocal 3 272;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 077825
LocReturn 055905:
  PushStack call_result;
  TraceOperation 055916 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 055920:
  MakeRoutineFrame 0;
  Jump: 055921
LocOp 055921:
  TraceOperation 055921 (Call (Floc 077824) [Con 273,Con 274,Con 275] Sp);
  PushFrame;
  PushReturnAddress 055921;
  SetLocal 1 273;
  SetLocal 2 274;
  SetLocal 3 275;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 077825
LocReturn 055921:
  PushStack call_result;
  TraceOperation 055932 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 055936:
  MakeRoutineFrame 0;
  Jump: 055937
LocOp 055937:
  TraceOperation 055937 (Call (Floc 077824) [Con 276,Con 277,Con 278] Sp);
  PushFrame;
  PushReturnAddress 055937;
  SetLocal 1 276;
  SetLocal 2 277;
  SetLocal 3 278;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 077825
LocReturn 055937:
  PushStack call_result;
  TraceOperation 055948 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 055952:
  MakeRoutineFrame 0;
  Jump: 055953
LocOp 055953:
  TraceOperation 055953 (Call (Floc 077824) [Con 279,Con 280,Con 281] Sp);
  PushFrame;
  PushReturnAddress 055953;
  SetLocal 1 279;
  SetLocal 2 280;
  SetLocal 3 281;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 077825
LocReturn 055953:
  PushStack call_result;
  TraceOperation 055964 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 055968:
  MakeRoutineFrame 0;
  Jump: 055969
LocOp 055969:
  TraceOperation 055969 (Call (Floc 077824) [Con 282,Con 283,Con 284] Sp);
  PushFrame;
  PushReturnAddress 055969;
  SetLocal 1 282;
  SetLocal 2 283;
  SetLocal 3 284;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 077825
LocReturn 055969:
  PushStack call_result;
  TraceOperation 055980 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 055984:
  MakeRoutineFrame 0;
  Jump: 055985
LocOp 055985:
  TraceOperation 055985 (Call (Floc 077824) [Con 285,Con 286,Con 287] Sp);
  PushFrame;
  PushReturnAddress 055985;
  SetLocal 1 285;
  SetLocal 2 286;
  SetLocal 3 287;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 077825
LocReturn 055985:
  PushStack call_result;
  TraceOperation 055996 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 056000:
  MakeRoutineFrame 0;
  Jump: 056001
LocOp 056001:
  TraceOperation 056001 (Call (Floc 077824) [Con 288,Con 289,Con 290] Sp);
  PushFrame;
  PushReturnAddress 056001;
  SetLocal 1 288;
  SetLocal 2 289;
  SetLocal 3 290;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 077825
LocReturn 056001:
  PushStack call_result;
  TraceOperation 056012 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 056016:
  MakeRoutineFrame 0;
  Jump: 056017
LocOp 056017:
  TraceOperation 056017 (Call (Floc 077824) [Con 291,Con 292,Con 293] Sp);
  PushFrame;
  PushReturnAddress 056017;
  SetLocal 1 291;
  SetLocal 2 292;
  SetLocal 3 293;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 077825
LocReturn 056017:
  PushStack call_result;
  TraceOperation 056028 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 056032:
  MakeRoutineFrame 0;
  Jump: 056033
LocOp 056033:
  TraceOperation 056033 (Call (Floc 077824) [Con 294,Con 295,Con 296] Sp);
  PushFrame;
  PushReturnAddress 056033;
  SetLocal 1 294;
  SetLocal 2 295;
  SetLocal 3 296;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 077825
LocReturn 056033:
  PushStack call_result;
  TraceOperation 056044 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 056048:
  MakeRoutineFrame 0;
  Jump: 056049
LocOp 056049:
  TraceOperation 056049 (Call (Floc 077824) [Con 297,Con 298,Con 299] Sp);
  PushFrame;
  PushReturnAddress 056049;
  SetLocal 1 297;
  SetLocal 2 298;
  SetLocal 3 299;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 077825
LocReturn 056049:
  PushStack call_result;
  TraceOperation 056060 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 056064:
  MakeRoutineFrame 0;
  Jump: 056065
LocOp 056065:
  TraceOperation 056065 (Call (Floc 077824) [Con 300,Con 301,Con 302] Sp);
  PushFrame;
  PushReturnAddress 056065;
  SetLocal 1 300;
  SetLocal 2 301;
  SetLocal 3 302;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 077825
LocReturn 056065:
  PushStack call_result;
  TraceOperation 056076 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 056080:
  MakeRoutineFrame 0;
  Jump: 056081
LocOp 056081:
  TraceOperation 056081 (Call (Floc 077824) [Con 303,Con 304,Con 305] Sp);
  PushFrame;
  PushReturnAddress 056081;
  SetLocal 1 303;
  SetLocal 2 304;
  SetLocal 3 305;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 077825
LocReturn 056081:
  PushStack call_result;
  TraceOperation 056092 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 056096:
  MakeRoutineFrame 0;
  Jump: 056097
LocOp 056097:
  TraceOperation 056097 (Call (Floc 077824) [Con 306,Con 307,Con 308] Sp);
  PushFrame;
  PushReturnAddress 056097;
  SetLocal 1 306;
  SetLocal 2 307;
  SetLocal 3 308;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 077825
LocReturn 056097:
  PushStack call_result;
  TraceOperation 056108 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 056112:
  MakeRoutineFrame 0;
  Jump: 056113
LocOp 056113:
  TraceOperation 056113 (Call (Floc 077824) [Con 309,Con 310,Con 311] Sp);
  PushFrame;
  PushReturnAddress 056113;
  SetLocal 1 309;
  SetLocal 2 310;
  SetLocal 3 311;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 077825
LocReturn 056113:
  PushStack call_result;
  TraceOperation 056124 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 056128:
  MakeRoutineFrame 0;
  Jump: 056129
LocOp 056129:
  TraceOperation 056129 (Call (Floc 077824) [Con 312,Con 313,Con 314] Sp);
  PushFrame;
  PushReturnAddress 056129;
  SetLocal 1 312;
  SetLocal 2 313;
  SetLocal 3 314;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 077825
LocReturn 056129:
  PushStack call_result;
  TraceOperation 056140 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 056144:
  MakeRoutineFrame 0;
  Jump: 056145
LocOp 056145:
  TraceOperation 056145 (Call (Floc 077824) [Con 315,Con 316,Con 317] Sp);
  PushFrame;
  PushReturnAddress 056145;
  SetLocal 1 315;
  SetLocal 2 316;
  SetLocal 3 317;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 077825
LocReturn 056145:
  PushStack call_result;
  TraceOperation 056156 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 056160:
  MakeRoutineFrame 0;
  Jump: 056161
LocOp 056161:
  TraceOperation 056161 (Call (Floc 077824) [Con 318,Con 319,Con 320] Sp);
  PushFrame;
  PushReturnAddress 056161;
  SetLocal 1 318;
  SetLocal 2 319;
  SetLocal 3 320;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 077825
LocReturn 056161:
  PushStack call_result;
  TraceOperation 056172 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 056176:
  MakeRoutineFrame 0;
  Jump: 056177
LocOp 056177:
  TraceOperation 056177 (Call (Floc 077824) [Con 321,Con 322,Con 323] Sp);
  PushFrame;
  PushReturnAddress 056177;
  SetLocal 1 321;
  SetLocal 2 322;
  SetLocal 3 323;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 077825
LocReturn 056177:
  PushStack call_result;
  TraceOperation 056188 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 056192:
  MakeRoutineFrame 0;
  Jump: 056193
LocOp 056193:
  TraceOperation 056193 (Call (Floc 077824) [Con 324,Con 325,Con 326] Sp);
  PushFrame;
  PushReturnAddress 056193;
  SetLocal 1 324;
  SetLocal 2 325;
  SetLocal 3 326;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 077825
LocReturn 056193:
  PushStack call_result;
  TraceOperation 056204 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 056208:
  MakeRoutineFrame 0;
  Jump: 056209
LocOp 056209:
  TraceOperation 056209 (Call (Floc 077824) [Con 327,Con 328,Con 329] Sp);
  PushFrame;
  PushReturnAddress 056209;
  SetLocal 1 327;
  SetLocal 2 328;
  SetLocal 3 329;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 077825
LocReturn 056209:
  PushStack call_result;
  TraceOperation 056220 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 056224:
  MakeRoutineFrame 0;
  Jump: 056225
LocOp 056225:
  TraceOperation 056225 (Call (Floc 077824) [Con 330,Con 331,Con 332] Sp);
  PushFrame;
  PushReturnAddress 056225;
  SetLocal 1 330;
  SetLocal 2 331;
  SetLocal 3 332;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 077825
LocReturn 056225:
  PushStack call_result;
  TraceOperation 056236 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 056240:
  MakeRoutineFrame 0;
  Jump: 056241
LocOp 056241:
  TraceOperation 056241 (Call (Floc 077824) [Con 333,Con 334,Con 335] Sp);
  PushFrame;
  PushReturnAddress 056241;
  SetLocal 1 333;
  SetLocal 2 334;
  SetLocal 3 335;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 077825
LocReturn 056241:
  PushStack call_result;
  TraceOperation 056252 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 056256:
  MakeRoutineFrame 0;
  Jump: 056257
LocOp 056257:
  TraceOperation 056257 (Call (Floc 077824) [Con 336,Con 337,Con 338] Sp);
  PushFrame;
  PushReturnAddress 056257;
  SetLocal 1 336;
  SetLocal 2 337;
  SetLocal 3 338;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 077825
LocReturn 056257:
  PushStack call_result;
  TraceOperation 056268 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 056272:
  MakeRoutineFrame 0;
  Jump: 056273
LocOp 056273:
  TraceOperation 056273 (Call (Floc 077824) [Con 339,Con 340,Con 341] Sp);
  PushFrame;
  PushReturnAddress 056273;
  SetLocal 1 339;
  SetLocal 2 340;
  SetLocal 3 341;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 077825
LocReturn 056273:
  PushStack call_result;
  TraceOperation 056284 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 056288:
  MakeRoutineFrame 0;
  Jump: 056289
LocOp 056289:
  TraceOperation 056289 (Call (Floc 077824) [Con 342,Con 343,Con 344] Sp);
  PushFrame;
  PushReturnAddress 056289;
  SetLocal 1 342;
  SetLocal 2 343;
  SetLocal 3 344;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 077825
LocReturn 056289:
  PushStack call_result;
  TraceOperation 056300 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 056304:
  MakeRoutineFrame 0;
  Jump: 056305
LocOp 056305:
  TraceOperation 056305 (Call (Floc 077824) [Con 345,Con 346,Con 347] Sp);
  PushFrame;
  PushReturnAddress 056305;
  SetLocal 1 345;
  SetLocal 2 346;
  SetLocal 3 347;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 077825
LocReturn 056305:
  PushStack call_result;
  TraceOperation 056316 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 056320:
  MakeRoutineFrame 0;
  Jump: 056321
LocOp 056321:
  TraceOperation 056321 (Call (Floc 077824) [Con 348,Con 349,Con 350] Sp);
  PushFrame;
  PushReturnAddress 056321;
  SetLocal 1 348;
  SetLocal 2 349;
  SetLocal 3 350;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 077825
LocReturn 056321:
  PushStack call_result;
  TraceOperation 056332 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 056336:
  MakeRoutineFrame 0;
  Jump: 056337
LocOp 056337:
  TraceOperation 056337 (Call (Floc 077824) [Con 351,Con 352,Con 353] Sp);
  PushFrame;
  PushReturnAddress 056337;
  SetLocal 1 351;
  SetLocal 2 352;
  SetLocal 3 353;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 077825
LocReturn 056337:
  PushStack call_result;
  TraceOperation 056348 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 056352:
  MakeRoutineFrame 0;
  Jump: 056353
LocOp 056353:
  TraceOperation 056353 (Call (Floc 077824) [Con 354,Con 355,Con 356] Sp);
  PushFrame;
  PushReturnAddress 056353;
  SetLocal 1 354;
  SetLocal 2 355;
  SetLocal 3 356;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 077825
LocReturn 056353:
  PushStack call_result;
  TraceOperation 056364 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 056368:
  MakeRoutineFrame 0;
  Jump: 056369
LocOp 056369:
  TraceOperation 056369 (Call (Floc 077824) [Con 357,Con 358,Con 359] Sp);
  PushFrame;
  PushReturnAddress 056369;
  SetLocal 1 357;
  SetLocal 2 358;
  SetLocal 3 359;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 077825
LocReturn 056369:
  PushStack call_result;
  TraceOperation 056380 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 056384:
  MakeRoutineFrame 0;
  Jump: 056385
LocOp 056385:
  TraceOperation 056385 (Call (Floc 077824) [Con 360,Con 361,Con 362] Sp);
  PushFrame;
  PushReturnAddress 056385;
  SetLocal 1 360;
  SetLocal 2 361;
  SetLocal 3 362;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 077825
LocReturn 056385:
  PushStack call_result;
  TraceOperation 056396 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 056400:
  MakeRoutineFrame 0;
  Jump: 056401
LocOp 056401:
  TraceOperation 056401 (Call (Floc 077824) [Con 363,Con 364,Con 365] Sp);
  PushFrame;
  PushReturnAddress 056401;
  SetLocal 1 363;
  SetLocal 2 364;
  SetLocal 3 365;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 077825
LocReturn 056401:
  PushStack call_result;
  TraceOperation 056412 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 056416:
  MakeRoutineFrame 0;
  Jump: 056417
LocOp 056417:
  TraceOperation 056417 (Call (Floc 077824) [Con 366,Con 367,Con 368] Sp);
  PushFrame;
  PushReturnAddress 056417;
  SetLocal 1 366;
  SetLocal 2 367;
  SetLocal 3 368;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 077825
LocReturn 056417:
  PushStack call_result;
  TraceOperation 056428 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 056432:
  MakeRoutineFrame 0;
  Jump: 056433
LocOp 056433:
  TraceOperation 056433 (Call (Floc 077824) [Con 369,Con 370,Con 371] Sp);
  PushFrame;
  PushReturnAddress 056433;
  SetLocal 1 369;
  SetLocal 2 370;
  SetLocal 3 371;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 077825
LocReturn 056433:
  PushStack call_result;
  TraceOperation 056444 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 056448:
  MakeRoutineFrame 0;
  Jump: 056449
LocOp 056449:
  TraceOperation 056449 (Call (Floc 077824) [Con 372,Con 373,Con 374] Sp);
  PushFrame;
  PushReturnAddress 056449;
  SetLocal 1 372;
  SetLocal 2 373;
  SetLocal 3 374;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 077825
LocReturn 056449:
  PushStack call_result;
  TraceOperation 056460 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 056464:
  MakeRoutineFrame 0;
  Jump: 056465
LocOp 056465:
  TraceOperation 056465 (Store (Con 255) (Var (Global 67)));
  Let b1 = M[007340];
  Let b2 = M[007341];
  SetByte 007684 b1;
  SetByte 007685 b2;
  TraceOperation 056468 (Je [Var (Global 239),Con 250] (Branch F (Dloc 056481)));
  Let b3 = M[007684];
  Let b4 = M[007685];
  if (Equal(MakeHiLo(b3,b4),250)) {
    TraceOperation 056472 (CallN (Floc 052452) [Con -31321]);
    PushFrame;
    PushReturnAddress 056472;
    SetLocal 1 -31321;
    MakeRoutineFrame 1;
    Jump: 052453
  } else {
    Jump: 056481
  }
LocReturn 056472:
  TraceOperation 056478 (Jump 056499);
  Jump: 056499
LocOp 056481:
  TraceOperation 056481 (Je [Var (Global 239),Con 251] (Branch F (Dloc 056494)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),251)) {
    TraceOperation 056485 (CallN (Floc 052452) [Con -31321]);
    PushFrame;
    PushReturnAddress 056485;
    SetLocal 1 -31321;
    MakeRoutineFrame 1;
    Jump: 052453
  } else {
    Jump: 056494
  }
LocReturn 056485:
  TraceOperation 056491 (Jump 056499);
  Jump: 056499
LocOp 056494:
  TraceOperation 056494 (Print_paddr (Con 29685));
  Note "<static Gettext address>";
  GamePrint "I didn't understand that sentence.";
  TraceOperation 056497 New_line;
  GamePrint "\n";
  TraceOperation 056498 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 056499:
  TraceOperation 056499 (Store (Con 20) (Con 1));
  SetByte 007214 0;
  SetByte 007215 1;
  TraceOperation 056502 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 056504:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 056505
LocOp 056505:
  TraceOperation 056505 (Call (Floc 026172) [Var (Local 1),Con 14] Sp);
  PushFrame;
  PushReturnAddress 056505;
  SetLocal 1 GetLocal(1);
  SetLocal 2 14;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 056505:
  PushStack call_result;
  TraceOperation 056512 (Jz (Var Sp) (Branch T (Dloc 056614)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 056614
  } else {
    TraceOperation 056516 (Jg (Var (Local 2)) (Con 0) (Branch T (Dloc 056526)));
    if (GreaterThan(GetLocal(2),0)) {
      Jump: 056526
    } else {
      TraceOperation 056520 (CallN (Floc 088364) [Var (Local 1),Con 30]);
      PushFrame;
      PushReturnAddress 056520;
      SetLocal 1 GetLocal(1);
      SetLocal 2 30;
      MakeRoutineFrame 3;
      SetLocal 3 0;
      Jump: 088365
    }
  }
LocReturn 056520:
  Jump: 056526
LocOp 056526:
  TraceOperation 056526 (Call (Floc 100268) [Con 12520,Con 105,Con 105,Var (Local 1)] Sp);
  PushFrame;
  PushReturnAddress 056526;
  SetLocal 1 12520;
  SetLocal 2 105;
  SetLocal 3 105;
  SetLocal 4 GetLocal(1);
  MakeRoutineFrame 8;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  Jump: 100269
LocReturn 056526:
  PushStack call_result;
  TraceOperation 056537 (Jz (Var Sp) (Branch T (Dloc 056579)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 056579
  } else {
    TraceOperation 056540 (Store (Con 3) (Con 12520));
    SetLocal 3 12520;
    TraceOperation 056545 (Call (Floc 099956) [Var (Local 3),Con 105,Var (Local 1)] (Local 4));
    PushFrame;
    PushReturnAddress 056545;
    SetLocal 1 GetLocal(3);
    SetLocal 2 105;
    SetLocal 3 GetLocal(1);
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    Jump: 099957
  }
LocReturn 056545:
  SetLocal 4 call_result;
  TraceOperation 056553 (Jg (Var (Local 2)) (Con 0) (Branch T (Dloc 056566)));
  if (GreaterThan(GetLocal(2),0)) {
    Jump: 056566
  } else {
    TraceOperation 056557 (CallN (Floc 100712) [Var (Local 3),Var (Local 4)]);
    PushFrame;
    PushReturnAddress 056557;
    SetLocal 1 GetLocal(3);
    SetLocal 2 GetLocal(4);
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 100713
  }
LocReturn 056557:
  TraceOperation 056563 (Jump 056576);
  Jump: 056576
LocOp 056566:
  TraceOperation 056566 (CallN (Floc 100364) [Var (Local 3),Con 106,Var (Local 4),Con 1,Var (Local 2)]);
  PushFrame;
  PushReturnAddress 056566;
  SetLocal 1 GetLocal(3);
  SetLocal 2 106;
  SetLocal 3 GetLocal(4);
  SetLocal 4 1;
  SetLocal 5 GetLocal(2);
  MakeRoutineFrame 6;
  SetLocal 6 0;
  Jump: 100365
LocReturn 056566:
  Jump: 056576
LocOp 056576:
  TraceOperation 056576 (Jump 056614);
  Jump: 056614
LocOp 056579:
  TraceOperation 056579 (Jg (Var (Local 2)) (Con 0) (Branch F (Dloc 056614)));
  if (GreaterThan(GetLocal(2),0)) {
    TraceOperation 056583 (Store (Con 3) (Con 12520));
    SetLocal 3 12520;
    TraceOperation 056588 (Call (Floc 100804) [Var (Local 3)] (Local 4));
    PushFrame;
    PushReturnAddress 056588;
    SetLocal 1 GetLocal(3);
    MakeRoutineFrame 3;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 100805
  } else {
    Jump: 056614
  }
LocReturn 056588:
  SetLocal 4 call_result;
  TraceOperation 056594 (CallN (Floc 100364) [Var (Local 3),Con 105,Var (Local 4),Con 1,Var (Local 1)]);
  PushFrame;
  PushReturnAddress 056594;
  SetLocal 1 GetLocal(3);
  SetLocal 2 105;
  SetLocal 3 GetLocal(4);
  SetLocal 4 1;
  SetLocal 5 GetLocal(1);
  MakeRoutineFrame 6;
  SetLocal 6 0;
  Jump: 100365
LocReturn 056594:
  TraceOperation 056604 (CallN (Floc 100364) [Var (Local 3),Con 106,Var (Local 4),Con 1,Var (Local 2)]);
  PushFrame;
  PushReturnAddress 056604;
  SetLocal 1 GetLocal(3);
  SetLocal 2 106;
  SetLocal 3 GetLocal(4);
  SetLocal 4 1;
  SetLocal 5 GetLocal(2);
  MakeRoutineFrame 6;
  SetLocal 6 0;
  Jump: 100365
LocReturn 056604:
  Jump: 056614
LocOp 056614:
  TraceOperation 056614 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 056616:
  MakeRoutineFrame 0;
  Jump: 056617
LocOp 056617:
  TraceOperation 056617 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 056620:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 056621
LocOp 056621:
  TraceOperation 056621 (Get_child (Var (Local 1)) Sp (Branch F (Dloc 056625)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),10)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),10),1)];
  PushStack MakeHiLo(b1,b2);
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 056625
  } else {
    Jump: 056625
  }
LocOp 056625:
  TraceOperation 056625 (CallN (Floc 038496) [Var Sp,Con 264]);
  PopStack popped1;
  PushFrame;
  PushReturnAddress 056625;
  SetLocal 1 popped1;
  SetLocal 2 264;
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 038497
LocReturn 056625:
  TraceOperation 056632 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 056636:
  MakeRoutineFrame 0;
  Jump: 056637
LocOp 056637:
  TraceOperation 056637 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 056640:
  MakeRoutineFrame 0;
  Jump: 056641
LocOp 056641:
  TraceOperation 056641 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 056644:
  MakeRoutineFrame 0;
  Jump: 056645
LocOp 056645:
  TraceOperation 056645 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 056648:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 056649
LocOp 056649:
  TraceOperation 056649 (CallN (Floc 078824) [Con 29,Var (Local 1)]);
  PushFrame;
  PushReturnAddress 056649;
  SetLocal 1 29;
  SetLocal 2 GetLocal(1);
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 078825
LocReturn 056649:
  TraceOperation 056655 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 056656:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 056657
LocOp 056657:
  TraceOperation 056657 (Get_child (Var (Local 1)) Sp (Branch F (Dloc 056661)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),10)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),10),1)];
  PushStack MakeHiLo(b1,b2);
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 056661
  } else {
    Jump: 056661
  }
LocOp 056661:
  TraceOperation 056661 (CallN (Floc 038496) [Var Sp,Con 8]);
  PopStack popped1;
  PushFrame;
  PushReturnAddress 056661;
  SetLocal 1 popped1;
  SetLocal 2 8;
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 038497
LocReturn 056661:
  TraceOperation 056667 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 056668:
  MakeRoutineFrame 0;
  Jump: 056669
LocOp 056669:
  TraceOperation 056669 (Call (Floc 088304) [Con 62,Con 12] Sp);
  PushFrame;
  PushReturnAddress 056669;
  SetLocal 1 62;
  SetLocal 2 12;
  MakeRoutineFrame 2;
  Jump: 088305
LocReturn 056669:
  PushStack call_result;
  TraceOperation 056676 (Jz (Var Sp) (Branch T (Dloc 056690)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 056690
  } else {
    TraceOperation 056679 (Call (Floc 088304) [Con 49,Con 36] Sp);
    PushFrame;
    PushReturnAddress 056679;
    SetLocal 1 49;
    SetLocal 2 36;
    MakeRoutineFrame 2;
    Jump: 088305
  }
LocReturn 056679:
  PushStack call_result;
  TraceOperation 056686 (Jz (Var Sp) (Branch F (Dloc 056690)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 056689 Rtrue;
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  } else {
    Jump: 056690
  }
LocOp 056690:
  TraceOperation 056690 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 056692:
  MakeRoutineFrame 0;
  Jump: 056693
LocOp 056693:
  TraceOperation 056693 (Store (Con 20) (Con 1));
  SetByte 007214 0;
  SetByte 007215 1;
  TraceOperation 056696 (Push (Var (Global 235)));
  Let b1 = M[007676];
  Let b2 = M[007677];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 056699 (Store (Con 251) (Con 51));
  SetByte 007676 0;
  SetByte 007677 51;
  TraceOperation 056702 (Push (Var (Global 235)));
  Let b3 = M[007676];
  Let b4 = M[007677];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 056705 (Call (Floc 088436) [Var Sp,Con 84] Sp);
  PopStack popped5;
  PushFrame;
  PushReturnAddress 056705;
  SetLocal 1 popped5;
  SetLocal 2 84;
  MakeRoutineFrame 2;
  Jump: 088437
LocReturn 056705:
  PushStack call_result;
  TraceOperation 056712 (CallN (Floc 053928) [Var Sp]);
  PopStack popped1;
  PushFrame;
  PushReturnAddress 056712;
  SetLocal 1 popped1;
  MakeRoutineFrame 1;
  Jump: 053929
LocReturn 056712:
  TraceOperation 056717 (Pull (Con 251));
  PopStack popped1;
  SetByte 007676 HiByte(popped1);
  SetByte 007677 LoByte(popped1);
  TraceOperation 056720 (CallN (Floc 080952) [Con -31944]);
  PushFrame;
  PushReturnAddress 056720;
  SetLocal 1 -31944;
  MakeRoutineFrame 1;
  Jump: 080953
LocReturn 056720:
  TraceOperation 056726 (Call (Floc 078000) [Con 51,Con 22] Sp);
  PushFrame;
  PushReturnAddress 056726;
  SetLocal 1 51;
  SetLocal 2 22;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 078001
LocReturn 056726:
  PushStack call_result;
  TraceOperation 056733 (Jz (Var Sp) (Branch F (Dloc 056739)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 056736 (Jump 056748);
    Jump: 056748
  } else {
    Jump: 056739
  }
LocOp 056739:
  TraceOperation 056739 (CallN (Floc 080952) [Con -31251]);
  PushFrame;
  PushReturnAddress 056739;
  SetLocal 1 -31251;
  MakeRoutineFrame 1;
  Jump: 080953
LocReturn 056739:
  TraceOperation 056745 (Jump 056754);
  Jump: 056754
LocOp 056748:
  TraceOperation 056748 (CallN (Floc 080952) [Con -31248]);
  PushFrame;
  PushReturnAddress 056748;
  SetLocal 1 -31248;
  MakeRoutineFrame 1;
  Jump: 080953
LocReturn 056748:
  Jump: 056754
LocOp 056754:
  TraceOperation 056754 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 056756:
  MakeRoutineFrame 0;
  Jump: 056757
LocOp 056757:
  TraceOperation 056757 (CallN (Floc 088936) [Con 4]);
  PushFrame;
  PushReturnAddress 056757;
  SetLocal 1 4;
  MakeRoutineFrame 14;
  SetLocal 14 0;
  SetLocal 13 0;
  SetLocal 12 0;
  SetLocal 11 0;
  SetLocal 10 0;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 088937
LocReturn 056757:
  TraceOperation 056762 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 056764:
  MakeRoutineFrame 0;
  Jump: 056765
LocOp 056765:
  TraceOperation 056765 (CallN (Floc 088684) [Con 5]);
  PushFrame;
  PushReturnAddress 056765;
  SetLocal 1 5;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 088685
LocReturn 056765:
  TraceOperation 056770 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 056772:
  MakeRoutineFrame 0;
  Jump: 056773
LocOp 056773:
  TraceOperation 056773 (Store (Con 43) (Var (Global 26)));
  Let b1 = M[007258];
  Let b2 = M[007259];
  SetByte 007260 b1;
  SetByte 007261 b2;
  TraceOperation 056776 Rfalse;
  PopFrame;
  PopReturnAddress return_address_3;
  SetResult 0;
  JumpIndirect: (return) return_address_3
--------------------------------------------------
LocRoutine 056780:
  MakeRoutineFrame 0;
  Jump: 056781
LocOp 056781:
  TraceOperation 056781 (Store (Con 20) (Con 1));
  SetByte 007214 0;
  SetByte 007215 1;
  TraceOperation 056784 (CallN (Floc 080816) []);
  PushFrame;
  PushReturnAddress 056784;
  MakeRoutineFrame 0;
  Jump: 080817
LocReturn 056784:
  TraceOperation 056787 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 056788:
  MakeRoutineFrame 0;
  Jump: 056789
LocOp 056789:
  TraceOperation 056789 (CallN (Floc 076180) [Con 0,Var (Global 31),Con 7,Con 0,Con 0]);
  Let b1 = M[007268];
  Let b2 = M[007269];
  PushFrame;
  PushReturnAddress 056789;
  SetLocal 1 0;
  SetLocal 2 MakeHiLo(b1,b2);
  SetLocal 3 7;
  SetLocal 4 0;
  SetLocal 5 0;
  MakeRoutineFrame 9;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  Jump: 076181
LocReturn 056789:
  TraceOperation 056799 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 056800:
  MakeRoutineFrame 0;
  Jump: 056801
LocOp 056801:
  TraceOperation 056801 (CallN (Floc 088936) [Con 4]);
  PushFrame;
  PushReturnAddress 056801;
  SetLocal 1 4;
  MakeRoutineFrame 14;
  SetLocal 14 0;
  SetLocal 13 0;
  SetLocal 12 0;
  SetLocal 11 0;
  SetLocal 10 0;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 088937
LocReturn 056801:
  TraceOperation 056806 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 056808:
  MakeRoutineFrame 0;
  Jump: 056809
LocOp 056809:
  TraceOperation 056809 (CallN (Floc 088684) [Con 7]);
  PushFrame;
  PushReturnAddress 056809;
  SetLocal 1 7;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 088685
LocReturn 056809:
  TraceOperation 056814 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 056816:
  MakeRoutineFrame 0;
  Jump: 056817
LocOp 056817:
  TraceOperation 056817 (CallN (Floc 088936) [Con 4]);
  PushFrame;
  PushReturnAddress 056817;
  SetLocal 1 4;
  MakeRoutineFrame 14;
  SetLocal 14 0;
  SetLocal 13 0;
  SetLocal 12 0;
  SetLocal 11 0;
  SetLocal 10 0;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 088937
LocReturn 056817:
  TraceOperation 056822 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 056824:
  MakeRoutineFrame 0;
  Jump: 056825
LocOp 056825:
  TraceOperation 056825 (Je [Var (Global 26),Var (Global 27)] (Branch T (Dloc 056835)));
  Let b1 = M[007258];
  Let b2 = M[007259];
  Let b3 = M[007260];
  Let b4 = M[007261];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    Jump: 056835
  } else {
    TraceOperation 056829 (CallN (Floc 080552) []);
    PushFrame;
    PushReturnAddress 056829;
    MakeRoutineFrame 0;
    Jump: 080553
  }
LocReturn 056829:
  TraceOperation 056832 (Store (Con 43) (Var (Global 26)));
  Let b1 = M[007258];
  Let b2 = M[007259];
  SetByte 007260 b1;
  SetByte 007261 b2;
  Jump: 056835
LocOp 056835:
  TraceOperation 056835 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 056836:
  MakeRoutineFrame 0;
  Jump: 056837
LocOp 056837:
  TraceOperation 056837 (CallN (Floc 088684) [Con 6]);
  PushFrame;
  PushReturnAddress 056837;
  SetLocal 1 6;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 088685
LocReturn 056837:
  TraceOperation 056842 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 056844:
  MakeRoutineFrame 0;
  Jump: 056845
LocOp 056845:
  TraceOperation 056845 (CallN (Floc 078824) [Con 27]);
  PushFrame;
  PushReturnAddress 056845;
  SetLocal 1 27;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 078825
LocReturn 056845:
  TraceOperation 056850 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 056852:
  MakeRoutineFrame 0;
  Jump: 056853
LocOp 056853:
  TraceOperation 056853 (Store (Con 20) (Con 1));
  SetByte 007214 0;
  SetByte 007215 1;
  TraceOperation 056856 (CallN (Floc 080952) [Con -31905]);
  PushFrame;
  PushReturnAddress 056856;
  SetLocal 1 -31905;
  MakeRoutineFrame 1;
  Jump: 080953
LocReturn 056856:
  TraceOperation 056862 New_line;
  GamePrint "\n";
  TraceOperation 056863 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 056864:
  MakeRoutineFrame 0;
  Jump: 056865
LocOp 056865:
  TraceOperation 056865 (Call (Floc 056668) [] Sp);
  PushFrame;
  PushReturnAddress 056865;
  MakeRoutineFrame 0;
  Jump: 056669
LocReturn 056865:
  PushStack call_result;
  TraceOperation 056869 (Jz (Var Sp) (Branch T (Dloc 056888)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 056888
  } else {
    TraceOperation 056872 (Loadw (Con 11427) (Con 46) Sp);
    Let b2 = M[011519];
    Let b3 = M[011520];
    PushStack MakeHiLo(b2,b3);
    TraceOperation 056878 (Add (Var Sp) (Con 1) Sp);
    PopStack popped4;
    PushStack Add(popped4,1);
    TraceOperation 056882 (Storew (Con 11427) (Con 46) (Var Sp));
    PopStack popped5;
    SetByte 011519 HiByte(popped5);
    SetByte 011520 LoByte(popped5);
    Jump: 056888
  }
LocOp 056888:
  TraceOperation 056888 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 056892:
  MakeRoutineFrame 0;
  Jump: 056893
LocOp 056893:
  TraceOperation 056893 (Call (Floc 056668) [] Sp);
  PushFrame;
  PushReturnAddress 056893;
  MakeRoutineFrame 0;
  Jump: 056669
LocReturn 056893:
  PushStack call_result;
  TraceOperation 056897 (Jz (Var Sp) (Branch F (Dloc 056935)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 056900 (Loadw (Con 11427) (Con 46) Sp);
    Let b2 = M[011519];
    Let b3 = M[011520];
    PushStack MakeHiLo(b2,b3);
    TraceOperation 056906 (Jz (Var Sp) (Branch T (Dloc 056935)));
    PopStack popped4;
    if (IsZero(popped4)) {
      Jump: 056935
    } else {
      TraceOperation 056909 (Call (Floc 088304) [Con 59,Con 13] Sp);
      PushFrame;
      PushReturnAddress 056909;
      SetLocal 1 59;
      SetLocal 2 13;
      MakeRoutineFrame 2;
      Jump: 088305
    }
  } else {
    Jump: 056935
  }
LocReturn 056909:
  PushStack call_result;
  TraceOperation 056916 (Jz (Var Sp) (Branch T (Dloc 056935)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 056935
  } else {
    TraceOperation 056919 (Loadw (Con 11427) (Con 46) Sp);
    Let b2 = M[011519];
    Let b3 = M[011520];
    PushStack MakeHiLo(b2,b3);
    TraceOperation 056925 (Sub (Var Sp) (Con 1) Sp);
    PopStack popped4;
    PushStack Sub(popped4,1);
    TraceOperation 056929 (Storew (Con 11427) (Con 46) (Var Sp));
    PopStack popped5;
    SetByte 011519 HiByte(popped5);
    SetByte 011520 LoByte(popped5);
    Jump: 056935
  }
LocOp 056935:
  TraceOperation 056935 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 056936:
  MakeRoutineFrame 0;
  Jump: 056937
LocOp 056937:
  TraceOperation 056937 (Call (Floc 102816) [Var (Global 31)] Sp);
  Let b1 = M[007268];
  Let b2 = M[007269];
  PushFrame;
  PushReturnAddress 056937;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 102817
LocReturn 056937:
  PushStack call_result;
  TraceOperation 056943 (Je [Con 43,Var Sp] (Branch F (Dloc 057014)));
  PopStack popped1;
  if (Equal(43,popped1)) {
    TraceOperation 056948 (Loadw (Con 11427) (Con 46) Sp);
    Let b2 = M[011519];
    Let b3 = M[011520];
    PushStack MakeHiLo(b2,b3);
    TraceOperation 056954 (Jg (Var Sp) (Con 7) (Branch F (Dloc 056971)));
    PopStack popped4;
    if (GreaterThan(popped4,7)) {
      TraceOperation 056958 (Store (Con 20) (Con 1));
      SetByte 007214 0;
      SetByte 007215 1;
      TraceOperation 056961 (CallN (Floc 080952) [Con -31408]);
      PushFrame;
      PushReturnAddress 056961;
      SetLocal 1 -31408;
      MakeRoutineFrame 1;
      Jump: 080953
    } else {
      Jump: 056971
    }
  } else {
    Jump: 057014
  }
LocReturn 056961:
  TraceOperation 056967 New_line;
  GamePrint "\n";
  TraceOperation 056968 (Jump 057014);
  Jump: 057014
LocOp 056971:
  TraceOperation 056971 (Loadw (Con 11427) (Con 46) Sp);
  Let b1 = M[011519];
  Let b2 = M[011520];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 056977 (Jg (Var Sp) (Con 5) (Branch F (Dloc 056994)));
  PopStack popped3;
  if (GreaterThan(popped3,5)) {
    TraceOperation 056981 (Store (Con 20) (Con 1));
    SetByte 007214 0;
    SetByte 007215 1;
    TraceOperation 056984 (CallN (Floc 080952) [Con -31415]);
    PushFrame;
    PushReturnAddress 056984;
    SetLocal 1 -31415;
    MakeRoutineFrame 1;
    Jump: 080953
  } else {
    Jump: 056994
  }
LocReturn 056984:
  TraceOperation 056990 New_line;
  GamePrint "\n";
  TraceOperation 056991 (Jump 057014);
  Jump: 057014
LocOp 056994:
  TraceOperation 056994 (Loadw (Con 11427) (Con 46) Sp);
  Let b1 = M[011519];
  Let b2 = M[011520];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 057000 (Jg (Var Sp) (Con 3) (Branch F (Dloc 057014)));
  PopStack popped3;
  if (GreaterThan(popped3,3)) {
    TraceOperation 057004 (Store (Con 20) (Con 1));
    SetByte 007214 0;
    SetByte 007215 1;
    TraceOperation 057007 (CallN (Floc 080952) [Con -31421]);
    PushFrame;
    PushReturnAddress 057007;
    SetLocal 1 -31421;
    MakeRoutineFrame 1;
    Jump: 080953
  } else {
    Jump: 057014
  }
LocReturn 057007:
  TraceOperation 057013 New_line;
  GamePrint "\n";
  Jump: 057014
LocOp 057014:
  TraceOperation 057014 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 057016:
  MakeRoutineFrame 0;
  Jump: 057017
LocOp 057017:
  TraceOperation 057017 (Loadw (Con 11427) (Con 46) Sp);
  Let b1 = M[011519];
  Let b2 = M[011520];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 057023 (Jg (Var Sp) (Con 6) (Branch F (Dloc 057039)));
  PopStack popped3;
  if (GreaterThan(popped3,6)) {
    TraceOperation 057027 (Call (Floc 108100) [] Sp);
    PushFrame;
    PushReturnAddress 057027;
    MakeRoutineFrame 1;
    SetLocal 1 0;
    Jump: 108101
  } else {
    Jump: 057039
  }
LocReturn 057027:
  PushStack call_result;
  TraceOperation 057031 (Jz (Var Sp) (Branch T (Dloc 057039)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 057039
  } else {
    TraceOperation 057034 (Store (Con 37) (Con -31660));
    SetByte 007248 132;
    SetByte 007249 84;
    Jump: 057039
  }
LocOp 057039:
  TraceOperation 057039 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 057040:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 057041
LocOp 057041:
  TraceOperation 057041 (Call (Floc 108144) [Con 0] (Local 1));
  PushFrame;
  PushReturnAddress 057041;
  SetLocal 1 0;
  MakeRoutineFrame 1;
  Jump: 108145
LocReturn 057041:
  SetLocal 1 call_result;
  TraceOperation 057047 (Call (Floc 108144) [Var (Local 1)] (Local 2));
  PushFrame;
  PushReturnAddress 057047;
  SetLocal 1 GetLocal(1);
  MakeRoutineFrame 1;
  Jump: 108145
LocReturn 057047:
  SetLocal 2 call_result;
  TraceOperation 057053 (Jump 057065);
  Jump: 057065
--------------------------------------------------
LocRoutine 057058:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 057059
LocOp 057059:
  TraceOperation 057059 (Call (Floc 108144) [Var (Local 2)] (Local 2));
  PushFrame;
  PushReturnAddress 057059;
  SetLocal 1 GetLocal(2);
  MakeRoutineFrame 1;
  Jump: 108145
LocReturn 057059:
  SetLocal 2 call_result;
  Jump: 057065
LocOp 057065:
  TraceOperation 057065 (Jz (Var (Local 1)) (Branch T (Dloc 057171)));
  if (IsZero(GetLocal(1))) {
    Jump: 057171
  } else {
    TraceOperation 057069 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 057108)));
    Let b1 = M[007434];
    Let b2 = M[007435];
    if (GreaterThan(MakeHiLo(b1,b2),1)) {
      TraceOperation 057073 (Print "  [repetition with item set to ");
      GamePrint "  [repetition with item set to ";
      TraceOperation 057098 (CallN (Floc 082048) [Var (Local 1)]);
      PushFrame;
      PushReturnAddress 057098;
      SetLocal 1 GetLocal(1);
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 082049
    } else {
      Jump: 057108
    }
  }
LocReturn 057098:
  TraceOperation 057103 (Print "]\n");
  GamePrint "]\n";
  Jump: 057108
LocOp 057108:
  TraceOperation 057108 (Call (Floc 088436) [Var (Local 1),Con 72] Sp);
  PushFrame;
  PushReturnAddress 057108;
  SetLocal 1 GetLocal(1);
  SetLocal 2 72;
  MakeRoutineFrame 2;
  Jump: 088437
LocReturn 057108:
  PushStack call_result;
  TraceOperation 057115 (Sub (Var Sp) (Con 1) Sp);
  PopStack popped1;
  PushStack Sub(popped1,1);
  TraceOperation 057119 (CallN (Floc 088548) [Var (Local 1),Con 72,Var Sp]);
  PopStack popped2;
  PushFrame;
  PushReturnAddress 057119;
  SetLocal 1 GetLocal(1);
  SetLocal 2 72;
  SetLocal 3 popped2;
  MakeRoutineFrame 3;
  Jump: 088549
LocReturn 057119:
  TraceOperation 057126 (Call (Floc 088436) [Var (Local 1),Con 72] Sp);
  PushFrame;
  PushReturnAddress 057126;
  SetLocal 1 GetLocal(1);
  SetLocal 2 72;
  MakeRoutineFrame 2;
  Jump: 088437
LocReturn 057126:
  PushStack call_result;
  TraceOperation 057133 (Jz (Var Sp) (Branch F (Dloc 057168)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 057136 (CallN (Floc 088364) [Var (Local 1),Con 36,Con 1]);
    PushFrame;
    PushReturnAddress 057136;
    SetLocal 1 GetLocal(1);
    SetLocal 2 36;
    SetLocal 3 1;
    MakeRoutineFrame 3;
    Jump: 088365
  } else {
    Jump: 057168
  }
LocReturn 057136:
  TraceOperation 057143 (Call (Floc 104604) [Var (Global 31),Var (Local 1)] Sp);
  Let b1 = M[007268];
  Let b2 = M[007269];
  PushFrame;
  PushReturnAddress 057143;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 GetLocal(1);
  MakeRoutineFrame 2;
  Jump: 104605
LocReturn 057143:
  PushStack call_result;
  TraceOperation 057150 (Jz (Var Sp) (Branch T (Dloc 057168)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 057168
  } else {
    TraceOperation 057153 (Store (Con 20) (Con 1));
    SetByte 007214 0;
    SetByte 007215 1;
    TraceOperation 057156 (CallN (Floc 081964) [Var (Local 1)]);
    PushFrame;
    PushReturnAddress 057156;
    SetLocal 1 GetLocal(1);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 081965
  }
LocReturn 057156:
  TraceOperation 057161 (CallN (Floc 080952) [Con -31937]);
  PushFrame;
  PushReturnAddress 057161;
  SetLocal 1 -31937;
  MakeRoutineFrame 1;
  Jump: 080953
LocReturn 057161:
  TraceOperation 057167 New_line;
  GamePrint "\n";
  Jump: 057168
LocOp 057168:
  TraceOperation 057168 (Jump 057056);
  Jump: 057056
LocOp 057171:
  TraceOperation 057171 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 057194)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 057175 (Print "  [7: end repeat]\n");
    GamePrint "  [7: end repeat]\n";
    Jump: 057194
  } else {
    Jump: 057194
  }
LocOp 057194:
  TraceOperation 057194 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 057196:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 057197
LocOp 057197:
  TraceOperation 057197 (Call (Floc 102968) [Con 50] Sp);
  PushFrame;
  PushReturnAddress 057197;
  SetLocal 1 50;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 102969
LocReturn 057197:
  PushStack call_result;
  TraceOperation 057203 (Je [Con 49,Var Sp] (Branch F (Dloc 057251)));
  PopStack popped1;
  if (Equal(49,popped1)) {
    TraceOperation 057207 (Call (Floc 088304) [Con 49,Con 36] Sp);
    PushFrame;
    PushReturnAddress 057207;
    SetLocal 1 49;
    SetLocal 2 36;
    MakeRoutineFrame 2;
    Jump: 088305
  } else {
    Jump: 057251
  }
LocReturn 057207:
  PushStack call_result;
  TraceOperation 057214 (Jz (Var Sp) (Branch T (Dloc 057251)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 057251
  } else {
    TraceOperation 057217 (Call (Floc 102816) [Con 51] Sp);
    PushFrame;
    PushReturnAddress 057217;
    SetLocal 1 51;
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 102817
  }
LocReturn 057217:
  PushStack call_result;
  TraceOperation 057223 (Je [Con 50,Var Sp] (Branch F (Dloc 057251)));
  PopStack popped1;
  if (Equal(50,popped1)) {
    TraceOperation 057227 (Call (Floc 088436) [Con 51,Con 84] (Local 1));
    PushFrame;
    PushReturnAddress 057227;
    SetLocal 1 51;
    SetLocal 2 84;
    MakeRoutineFrame 2;
    Jump: 088437
  } else {
    Jump: 057251
  }
LocReturn 057227:
  SetLocal 1 call_result;
  TraceOperation 057234 (Je [Var (Local 1),Con 5] (Branch T (Dloc 057251)));
  if (Equal(GetLocal(1),5)) {
    Jump: 057251
  } else {
    TraceOperation 057238 (Call (Floc 054012) [Var (Local 1)] Sp);
    PushFrame;
    PushReturnAddress 057238;
    SetLocal 1 GetLocal(1);
    MakeRoutineFrame 1;
    Jump: 054013
  }
LocReturn 057238:
  PushStack call_result;
  TraceOperation 057244 (CallN (Floc 088548) [Con 51,Con 84,Var Sp]);
  PopStack popped1;
  PushFrame;
  PushReturnAddress 057244;
  SetLocal 1 51;
  SetLocal 2 84;
  SetLocal 3 popped1;
  MakeRoutineFrame 3;
  Jump: 088549
LocReturn 057244:
  Jump: 057251
LocOp 057251:
  TraceOperation 057251 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 057252:
  MakeRoutineFrame 0;
  Jump: 057253
LocOp 057253:
  TraceOperation 057253 (Call (Floc 102816) [Con 61] Sp);
  PushFrame;
  PushReturnAddress 057253;
  SetLocal 1 61;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 102817
LocReturn 057253:
  PushStack call_result;
  TraceOperation 057259 (Je [Con 50,Var Sp] (Branch F (Dloc 057300)));
  PopStack popped1;
  if (Equal(50,popped1)) {
    TraceOperation 057263 (Call (Floc 102816) [Con 51] Sp);
    PushFrame;
    PushReturnAddress 057263;
    SetLocal 1 51;
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 102817
  } else {
    Jump: 057300
  }
LocReturn 057263:
  PushStack call_result;
  TraceOperation 057269 (Je [Con 50,Var Sp] (Branch F (Dloc 057300)));
  PopStack popped1;
  if (Equal(50,popped1)) {
    TraceOperation 057273 (Call (Floc 088436) [Con 51,Con 84] Sp);
    PushFrame;
    PushReturnAddress 057273;
    SetLocal 1 51;
    SetLocal 2 84;
    MakeRoutineFrame 2;
    Jump: 088437
  } else {
    Jump: 057300
  }
LocReturn 057273:
  PushStack call_result;
  TraceOperation 057280 (Je [Var Sp,Con 5] (Branch F (Dloc 057300)));
  PopStack popped1;
  if (Equal(popped1,5)) {
    TraceOperation 057284 (Loadw (Con 11427) (Con 47) Sp);
    Let b2 = M[011521];
    Let b3 = M[011522];
    PushStack MakeHiLo(b2,b3);
    TraceOperation 057290 (Sub (Var Sp) (Con 1) Sp);
    PopStack popped4;
    PushStack Sub(popped4,1);
    TraceOperation 057294 (Storew (Con 11427) (Con 47) (Var Sp));
    PopStack popped5;
    SetByte 011521 HiByte(popped5);
    SetByte 011522 LoByte(popped5);
    Jump: 057300
  } else {
    Jump: 057300
  }
LocOp 057300:
  TraceOperation 057300 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 057304:
  MakeRoutineFrame 0;
  Jump: 057305
LocOp 057305:
  TraceOperation 057305 (Loadw (Con 11427) (Con 47) Sp);
  Let b1 = M[011521];
  Let b2 = M[011522];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 057311 (Jz (Var Sp) (Branch F (Dloc 057330)));
  PopStack popped3;
  if (IsZero(popped3)) {
    TraceOperation 057314 (CallN (Floc 103408) [Con 61]);
    PushFrame;
    PushReturnAddress 057314;
    SetLocal 1 61;
    MakeRoutineFrame 1;
    Jump: 103409
  } else {
    Jump: 057330
  }
LocReturn 057314:
  TraceOperation 057319 (CallN (Floc 103408) [Con 51]);
  PushFrame;
  PushReturnAddress 057319;
  SetLocal 1 51;
  MakeRoutineFrame 1;
  Jump: 103409
LocReturn 057319:
  TraceOperation 057324 (CallN (Floc 103224) [Con 72,Con 50]);
  PushFrame;
  PushReturnAddress 057324;
  SetLocal 1 72;
  SetLocal 2 50;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 103225
LocReturn 057324:
  Jump: 057330
LocOp 057330:
  TraceOperation 057330 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 057332:
  MakeRoutineFrame 0;
  Jump: 057333
LocOp 057333:
  TraceOperation 057333 (Jz (Var (Global 46)) (Branch T (Dloc 057353)));
  Let b1 = M[007298];
  Let b2 = M[007299];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 057353
  } else {
    TraceOperation 057336 (Store (Con 20) (Con 1));
    SetByte 007214 0;
    SetByte 007215 1;
    TraceOperation 057339 (CallN (Floc 082048) [Var (Global 46)]);
    Let b3 = M[007298];
    Let b4 = M[007299];
    PushFrame;
    PushReturnAddress 057339;
    SetLocal 1 MakeHiLo(b3,b4);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 082049
  }
LocReturn 057339:
  TraceOperation 057344 (CallN (Floc 080952) [Con -31841]);
  PushFrame;
  PushReturnAddress 057344;
  SetLocal 1 -31841;
  MakeRoutineFrame 1;
  Jump: 080953
LocReturn 057344:
  TraceOperation 057350 (CallN (Floc 080376) []);
  PushFrame;
  PushReturnAddress 057350;
  MakeRoutineFrame 0;
  Jump: 080377
LocReturn 057350:
  Jump: 057353
LocOp 057353:
  TraceOperation 057353 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 057356:
  MakeRoutineFrame 0;
  Jump: 057357
LocOp 057357:
  TraceOperation 057357 (Jz (Var (Global 46)) (Branch T (Dloc 057365)));
  Let b1 = M[007298];
  Let b2 = M[007299];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 057365
  } else {
    TraceOperation 057360 (CallN (Floc 051776) [Var (Global 46)]);
    Let b3 = M[007298];
    Let b4 = M[007299];
    PushFrame;
    PushReturnAddress 057360;
    SetLocal 1 MakeHiLo(b3,b4);
    MakeRoutineFrame 3;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 051777
  }
LocReturn 057360:
  Jump: 057365
LocOp 057365:
  TraceOperation 057365 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 057368:
  MakeRoutineFrame 0;
  Jump: 057369
LocOp 057369:
  TraceOperation 057369 (Call (Floc 088936) [Con 18] Sp);
  PushFrame;
  PushReturnAddress 057369;
  SetLocal 1 18;
  MakeRoutineFrame 14;
  SetLocal 14 0;
  SetLocal 13 0;
  SetLocal 12 0;
  SetLocal 11 0;
  SetLocal 10 0;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 088937
LocReturn 057369:
  PushStack call_result;
  TraceOperation 057375 (Jz (Var Sp) (Branch F Dtrue));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 057378 Rfalse;
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  } else {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  }
--------------------------------------------------
LocRoutine 057380:
  MakeRoutineFrame 0;
  Jump: 057381
LocOp 057381:
  TraceOperation 057381 (Call (Floc 088936) [Con 19] Sp);
  PushFrame;
  PushReturnAddress 057381;
  SetLocal 1 19;
  MakeRoutineFrame 14;
  SetLocal 14 0;
  SetLocal 13 0;
  SetLocal 12 0;
  SetLocal 11 0;
  SetLocal 10 0;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 088937
LocReturn 057381:
  PushStack call_result;
  TraceOperation 057387 (Jz (Var Sp) (Branch F Dtrue));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 057390 Rfalse;
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  } else {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  }
--------------------------------------------------
LocRoutine 057392:
  MakeRoutineFrame 0;
  Jump: 057393
LocOp 057393:
  TraceOperation 057393 (CallN (Floc 089744) []);
  PushFrame;
  PushReturnAddress 057393;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  SetLocal 1 0;
  Jump: 089745
LocReturn 057393:
  TraceOperation 057396 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 057400:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 057401
LocOp 057401:
  TraceOperation 057401 (Je [Var (Global 40),Con 26] (Branch F (Dloc 057629)));
  Let b1 = M[007286];
  Let b2 = M[007287];
  if (Equal(MakeHiLo(b1,b2),26)) {
    TraceOperation 057406 (Jz (Var (Global 114)) (Branch T (Dloc 057415)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 057415
    } else {
      TraceOperation 057409 (CallN (Floc 098228) [Con 14350]);
      PushFrame;
      PushReturnAddress 057409;
      SetLocal 1 14350;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 057629
  }
LocReturn 057409:
  Jump: 057415
LocOp 057415:
  TraceOperation 057415 (Call (Floc 079624) [Con 20007,Con 4] Sp);
  PushFrame;
  PushReturnAddress 057415;
  SetLocal 1 20007;
  SetLocal 2 4;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 079625
LocReturn 057415:
  PushStack call_result;
  TraceOperation 057423 (Storew (Con 16625) (Var Sp) (Var (Global 87)));
  PopStack popped1;
  Let b2 = M[007380];
  Let b3 = M[007381];
  SetByte Offset(016625,Mul(2,popped1)) b2;
  SetByte Offset(Offset(016625,Mul(2,popped1)),1) b3;
  TraceOperation 057429 (Call (Floc 102544) [Var (Global 37)] Sp);
  Let b4 = M[007280];
  Let b5 = M[007281];
  PushFrame;
  PushReturnAddress 057429;
  SetLocal 1 MakeHiLo(b4,b5);
  MakeRoutineFrame 1;
  Jump: 102545
LocReturn 057429:
  PushStack call_result;
  TraceOperation 057435 (Call (Floc 079624) [Con 20007,Con 0] Sp);
  PushFrame;
  PushReturnAddress 057435;
  SetLocal 1 20007;
  SetLocal 2 0;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 079625
LocReturn 057435:
  PushStack call_result;
  TraceOperation 057443 (Storew (Con 16625) (Var Sp) (Var Sp));
  PopStack popped1;
  PopStack popped2;
  SetByte Offset(016625,Mul(2,popped1)) HiByte(popped2);
  SetByte Offset(Offset(016625,Mul(2,popped1)),1) LoByte(popped2);
  TraceOperation 057449 (Call (Floc 102816) [Var (Global 37)] (Local 1));
  Let b3 = M[007280];
  Let b4 = M[007281];
  PushFrame;
  PushReturnAddress 057449;
  SetLocal 1 MakeHiLo(b3,b4);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 102817
LocReturn 057449:
  SetLocal 1 call_result;
  TraceOperation 057455 (Jz (Var (Local 1)) (Branch T (Dloc 057504)));
  if (IsZero(GetLocal(1))) {
    Jump: 057504
  } else {
    TraceOperation 057458 (Call (Floc 102816) [Var (Global 37)] Sp);
    Let b1 = M[007280];
    Let b2 = M[007281];
    PushFrame;
    PushReturnAddress 057458;
    SetLocal 1 MakeHiLo(b1,b2);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 102817
  }
LocReturn 057458:
  PushStack call_result;
  TraceOperation 057464 (Call (Floc 026172) [Var Sp,Con 26] Sp);
  PopStack popped1;
  PushFrame;
  PushReturnAddress 057464;
  SetLocal 1 popped1;
  SetLocal 2 26;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 057464:
  PushStack call_result;
  TraceOperation 057471 (Jz (Var Sp) (Branch T (Dloc 057504)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 057504
  } else {
    TraceOperation 057474 (Call (Floc 102816) [Var (Global 37)] Sp);
    Let b2 = M[007280];
    Let b3 = M[007281];
    PushFrame;
    PushReturnAddress 057474;
    SetLocal 1 MakeHiLo(b2,b3);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 102817
  }
LocReturn 057474:
  PushStack call_result;
  TraceOperation 057480 (Call (Floc 088304) [Var Sp,Con 7] Sp);
  PopStack popped1;
  PushFrame;
  PushReturnAddress 057480;
  SetLocal 1 popped1;
  SetLocal 2 7;
  MakeRoutineFrame 2;
  Jump: 088305
LocReturn 057480:
  PushStack call_result;
  TraceOperation 057487 (Jz (Var Sp) (Branch T (Dloc 057504)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 057504
  } else {
    TraceOperation 057490 (Call (Floc 079624) [Con 20007,Con 3] Sp);
    PushFrame;
    PushReturnAddress 057490;
    SetLocal 1 20007;
    SetLocal 2 3;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 079625
  }
LocReturn 057490:
  PushStack call_result;
  TraceOperation 057498 (Storew (Con 16625) (Var Sp) (Var (Local 1)));
  PopStack popped1;
  SetByte Offset(016625,Mul(2,popped1)) HiByte(GetLocal(1));
  SetByte Offset(Offset(016625,Mul(2,popped1)),1) LoByte(GetLocal(1));
  Jump: 057504
LocOp 057504:
  TraceOperation 057504 (Store (Con 2) (Con 0));
  SetLocal 2 0;
  TraceOperation 057507 (Call (Floc 026172) [Var (Global 47),Con 15] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 057507;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 15;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 057507:
  PushStack call_result;
  TraceOperation 057514 (Jz (Var Sp) (Branch T (Dloc 057549)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 057549
  } else {
    TraceOperation 057517 (Store (Con 3) (Var (Global 47)));
    Let b2 = M[007300];
    Let b3 = M[007301];
    SetLocal 3 MakeHiLo(b2,b3);
    TraceOperation 057520 (Call (Floc 079624) [Con 20007,Con 0] Sp);
    PushFrame;
    PushReturnAddress 057520;
    SetLocal 1 20007;
    SetLocal 2 0;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 079625
  }
LocReturn 057520:
  PushStack call_result;
  TraceOperation 057528 (Loadw (Con 16625) (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(016625,Mul(2,popped1))];
  Let b3 = M[Offset(Offset(016625,Mul(2,popped1)),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 057534 (Call (Floc 109868) [Var (Local 3),Var Sp,Con 29692,Con 1733] (Local 2));
  PopStack popped4;
  PushFrame;
  PushReturnAddress 057534;
  SetLocal 1 GetLocal(3);
  SetLocal 2 popped4;
  SetLocal 3 29692;
  SetLocal 4 1733;
  MakeRoutineFrame 4;
  Jump: 109869
LocReturn 057534:
  SetLocal 2 call_result;
  TraceOperation 057546 (Jump 057562);
  Jump: 057562
LocOp 057549:
  TraceOperation 057549 (Call (Floc 026172) [Var (Global 47),Con 16] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 057549;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 16;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 057549:
  PushStack call_result;
  TraceOperation 057556 (Jz (Var Sp) (Branch T (Dloc 057562)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 057562
  } else {
    TraceOperation 057559 (Store (Con 2) (Var (Global 47)));
    Let b2 = M[007300];
    Let b3 = M[007301];
    SetLocal 2 MakeHiLo(b2,b3);
    Jump: 057562
  }
LocOp 057562:
  TraceOperation 057562 (Call (Floc 026172) [Var (Local 2),Con 16] Sp);
  PushFrame;
  PushReturnAddress 057562;
  SetLocal 1 GetLocal(2);
  SetLocal 2 16;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 057562:
  PushStack call_result;
  TraceOperation 057569 (Jz (Var Sp) (Branch T (Dloc 057612)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 057612
  } else {
    TraceOperation 057572 (Call (Floc 079624) [Con 20007,Con 2] Sp);
    PushFrame;
    PushReturnAddress 057572;
    SetLocal 1 20007;
    SetLocal 2 2;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 079625
  }
LocReturn 057572:
  PushStack call_result;
  TraceOperation 057580 (Storew (Con 16625) (Var Sp) (Var (Local 2)));
  PopStack popped1;
  SetByte Offset(016625,Mul(2,popped1)) HiByte(GetLocal(2));
  SetByte Offset(Offset(016625,Mul(2,popped1)),1) LoByte(GetLocal(2));
  TraceOperation 057586 (Call (Floc 079624) [Con 20007,Con 0] Sp);
  PushFrame;
  PushReturnAddress 057586;
  SetLocal 1 20007;
  SetLocal 2 0;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 079625
LocReturn 057586:
  PushStack call_result;
  TraceOperation 057594 (Loadw (Con 16625) (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(016625,Mul(2,popped1))];
  Let b3 = M[Offset(Offset(016625,Mul(2,popped1)),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 057600 (Call (Floc 109904) [Var (Local 2),Var Sp,Con 29693,Con 2816] (Local 2));
  PopStack popped4;
  PushFrame;
  PushReturnAddress 057600;
  SetLocal 1 GetLocal(2);
  SetLocal 2 popped4;
  SetLocal 3 29693;
  SetLocal 4 2816;
  MakeRoutineFrame 4;
  Jump: 109905
LocReturn 057600:
  SetLocal 2 call_result;
  Jump: 057612
LocOp 057612:
  TraceOperation 057612 (Call (Floc 079624) [Con 20007,Con 1] Sp);
  PushFrame;
  PushReturnAddress 057612;
  SetLocal 1 20007;
  SetLocal 2 1;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 079625
LocReturn 057612:
  PushStack call_result;
  TraceOperation 057620 (Storew (Con 16625) (Var Sp) (Var (Local 2)));
  PopStack popped1;
  SetByte Offset(016625,Mul(2,popped1)) HiByte(GetLocal(2));
  SetByte Offset(Offset(016625,Mul(2,popped1)),1) LoByte(GetLocal(2));
  TraceOperation 057626 (Jump 057640);
  Jump: 057640
LocOp 057629:
  TraceOperation 057629 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 057640)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 057633 (CallN (Floc 098228) [Con 14350,Con 1]);
    PushFrame;
    PushReturnAddress 057633;
    SetLocal 1 14350;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 057640
  }
LocReturn 057633:
  Jump: 057640
LocOp 057640:
  TraceOperation 057640 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 057644:
  MakeRoutineFrame 0;
  Jump: 057645
LocOp 057645:
  TraceOperation 057645 (Je [Var (Global 40),Con 7] (Branch F (Dloc 057711)));
  Let b1 = M[007286];
  Let b2 = M[007287];
  if (Equal(MakeHiLo(b1,b2),7)) {
    TraceOperation 057650 (Jz (Var (Global 114)) (Branch T (Dloc 057659)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 057659
    } else {
      TraceOperation 057653 (CallN (Floc 098228) [Con 14411]);
      PushFrame;
      PushReturnAddress 057653;
      SetLocal 1 14411;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 057711
  }
LocReturn 057653:
  Jump: 057659
LocOp 057659:
  TraceOperation 057659 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 057666)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 057663 (CallN (Floc 037196) []);
    PushFrame;
    PushReturnAddress 057663;
    MakeRoutineFrame 2;
    SetLocal 2 0;
    SetLocal 1 0;
    Jump: 037197
  } else {
    Jump: 057666
  }
LocReturn 057663:
  Jump: 057666
LocOp 057666:
  TraceOperation 057666 (Call (Floc 079624) [Con 20011,Con 2] Sp);
  PushFrame;
  PushReturnAddress 057666;
  SetLocal 1 20011;
  SetLocal 2 2;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 079625
LocReturn 057666:
  PushStack call_result;
  TraceOperation 057674 (Storew (Con 16625) (Var Sp) (Var (Global 34)));
  PopStack popped1;
  Let b2 = M[007274];
  Let b3 = M[007275];
  SetByte Offset(016625,Mul(2,popped1)) b2;
  SetByte Offset(Offset(016625,Mul(2,popped1)),1) b3;
  TraceOperation 057680 (Call (Floc 079624) [Con 20011,Con 3] Sp);
  PushFrame;
  PushReturnAddress 057680;
  SetLocal 1 20011;
  SetLocal 2 3;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 079625
LocReturn 057680:
  PushStack call_result;
  TraceOperation 057688 (Storew (Con 16625) (Var Sp) (Var (Global 33)));
  PopStack popped1;
  Let b2 = M[007272];
  Let b3 = M[007273];
  SetByte Offset(016625,Mul(2,popped1)) b2;
  SetByte Offset(Offset(016625,Mul(2,popped1)),1) b3;
  TraceOperation 057694 (Call (Floc 079624) [Con 20011,Con 0] Sp);
  PushFrame;
  PushReturnAddress 057694;
  SetLocal 1 20011;
  SetLocal 2 0;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 079625
LocReturn 057694:
  PushStack call_result;
  TraceOperation 057702 (Storew (Con 16625) (Var Sp) (Con 7));
  PopStack popped1;
  SetByte Offset(016625,Mul(2,popped1)) 0;
  SetByte Offset(Offset(016625,Mul(2,popped1)),1) 7;
  TraceOperation 057708 (Jump 057722);
  Jump: 057722
LocOp 057711:
  TraceOperation 057711 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 057722)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 057715 (CallN (Floc 098228) [Con 14411,Con 1]);
    PushFrame;
    PushReturnAddress 057715;
    SetLocal 1 14411;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 057722
  }
LocReturn 057715:
  Jump: 057722
LocOp 057722:
  TraceOperation 057722 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 057724:
  MakeRoutineFrame 0;
  Jump: 057725
LocOp 057725:
  TraceOperation 057725 (Je [Var (Global 40),Con 23] (Branch F (Dloc 057761)));
  Let b1 = M[007286];
  Let b2 = M[007287];
  if (Equal(MakeHiLo(b1,b2),23)) {
    TraceOperation 057729 (Jz (Var (Global 114)) (Branch T (Dloc 057738)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 057738
    } else {
      TraceOperation 057732 (CallN (Floc 098228) [Con 14431]);
      PushFrame;
      PushReturnAddress 057732;
      SetLocal 1 14431;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 057761
  }
LocReturn 057732:
  Jump: 057738
LocOp 057738:
  TraceOperation 057738 (Call (Floc 102384) [Var (Global 37)] Sp);
  Let b1 = M[007280];
  Let b2 = M[007281];
  PushFrame;
  PushReturnAddress 057738;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 1;
  Jump: 102385
LocReturn 057738:
  PushStack call_result;
  TraceOperation 057744 (Call (Floc 079624) [Con 20009,Con 0] Sp);
  PushFrame;
  PushReturnAddress 057744;
  SetLocal 1 20009;
  SetLocal 2 0;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 079625
LocReturn 057744:
  PushStack call_result;
  TraceOperation 057752 (Storew (Con 16625) (Var Sp) (Var Sp));
  PopStack popped1;
  PopStack popped2;
  SetByte Offset(016625,Mul(2,popped1)) HiByte(popped2);
  SetByte Offset(Offset(016625,Mul(2,popped1)),1) LoByte(popped2);
  TraceOperation 057758 (Jump 057772);
  Jump: 057772
LocOp 057761:
  TraceOperation 057761 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 057772)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 057765 (CallN (Floc 098228) [Con 14431,Con 1]);
    PushFrame;
    PushReturnAddress 057765;
    SetLocal 1 14431;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 057772
  }
LocReturn 057765:
  Jump: 057772
LocOp 057772:
  TraceOperation 057772 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 057776:
  MakeRoutineFrame 0;
  Jump: 057777
LocOp 057777:
  TraceOperation 057777 (CallN (Floc 088936) [Con 11]);
  PushFrame;
  PushReturnAddress 057777;
  SetLocal 1 11;
  MakeRoutineFrame 14;
  SetLocal 14 0;
  SetLocal 13 0;
  SetLocal 12 0;
  SetLocal 11 0;
  SetLocal 10 0;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 088937
LocReturn 057777:
  TraceOperation 057782 (Call (Floc 089832) [] Sp);
  PushFrame;
  PushReturnAddress 057782;
  MakeRoutineFrame 0;
  Jump: 089833
LocReturn 057782:
  PushStack call_result;
  TraceOperation 057786 (Jz (Var Sp) (Branch T (Dloc 057805)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 057805
  } else {
    TraceOperation 057789 (Call (Floc 079624) [Con 10,Con 5] Sp);
    PushFrame;
    PushReturnAddress 057789;
    SetLocal 1 10;
    SetLocal 2 5;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 079625
  }
LocReturn 057789:
  PushStack call_result;
  TraceOperation 057796 (Storew (Con 16625) (Var Sp) (Con 1));
  PopStack popped1;
  SetByte Offset(016625,Mul(2,popped1)) 0;
  SetByte Offset(Offset(016625,Mul(2,popped1)),1) 1;
  TraceOperation 057802 (Jump 057818);
  Jump: 057818
LocOp 057805:
  TraceOperation 057805 (Call (Floc 079624) [Con 10,Con 5] Sp);
  PushFrame;
  PushReturnAddress 057805;
  SetLocal 1 10;
  SetLocal 2 5;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 079625
LocReturn 057805:
  PushStack call_result;
  TraceOperation 057812 (Storew (Con 16625) (Var Sp) (Con 0));
  PopStack popped1;
  SetByte Offset(016625,Mul(2,popped1)) 0;
  SetByte Offset(Offset(016625,Mul(2,popped1)),1) 0;
  Jump: 057818
LocOp 057818:
  TraceOperation 057818 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 057820:
  MakeRoutineFrame 0;
  Jump: 057821
LocOp 057821:
  TraceOperation 057821 (Call (Floc 079624) [Con 10,Con 2] Sp);
  PushFrame;
  PushReturnAddress 057821;
  SetLocal 1 10;
  SetLocal 2 2;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 079625
LocReturn 057821:
  PushStack call_result;
  TraceOperation 057828 (Loadw (Con 16625) (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(016625,Mul(2,popped1))];
  Let b3 = M[Offset(Offset(016625,Mul(2,popped1)),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 057834 (Call (Floc 088936) [Var Sp] (Global 15));
  PopStack popped4;
  PushFrame;
  PushReturnAddress 057834;
  SetLocal 1 popped4;
  MakeRoutineFrame 14;
  SetLocal 14 0;
  SetLocal 13 0;
  SetLocal 12 0;
  SetLocal 11 0;
  SetLocal 10 0;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 088937
LocReturn 057834:
  SetByte 007236 HiByte(call_result);
  SetByte 007237 LoByte(call_result);
  TraceOperation 057840 (Jz (Var (Global 15)) (Branch T (Dloc 057864)));
  Let b1 = M[007236];
  Let b2 = M[007237];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 057864
  } else {
    TraceOperation 057843 (Call (Floc 089832) [] Sp);
    PushFrame;
    PushReturnAddress 057843;
    MakeRoutineFrame 0;
    Jump: 089833
  }
LocReturn 057843:
  PushStack call_result;
  TraceOperation 057847 (Jz (Var Sp) (Branch T (Dloc 057858)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 057858
  } else {
    TraceOperation 057850 (CallN (Floc 089720) [Var (Global 15)]);
    Let b2 = M[007236];
    Let b3 = M[007237];
    PushFrame;
    PushReturnAddress 057850;
    SetLocal 1 MakeHiLo(b2,b3);
    MakeRoutineFrame 1;
    Jump: 089721
  }
LocReturn 057850:
  TraceOperation 057855 (Jump 057863);
  Jump: 057863
LocOp 057858:
  TraceOperation 057858 (CallN (Floc 089732) [Var (Global 15)]);
  Let b1 = M[007236];
  Let b2 = M[007237];
  PushFrame;
  PushReturnAddress 057858;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 1;
  Jump: 089733
LocReturn 057858:
  Jump: 057863
LocOp 057863:
  TraceOperation 057863 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 057864:
  TraceOperation 057864 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 057868:
  MakeRoutineFrame 0;
  Jump: 057869
LocOp 057869:
  TraceOperation 057869 (Call (Floc 079624) [Con 10,Con 3] Sp);
  PushFrame;
  PushReturnAddress 057869;
  SetLocal 1 10;
  SetLocal 2 3;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 079625
LocReturn 057869:
  PushStack call_result;
  TraceOperation 057876 (Loadw (Con 16625) (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(016625,Mul(2,popped1))];
  Let b3 = M[Offset(Offset(016625,Mul(2,popped1)),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 057882 (CallN (Floc 088936) [Var Sp]);
  PopStack popped4;
  PushFrame;
  PushReturnAddress 057882;
  SetLocal 1 popped4;
  MakeRoutineFrame 14;
  SetLocal 14 0;
  SetLocal 13 0;
  SetLocal 12 0;
  SetLocal 11 0;
  SetLocal 10 0;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 088937
LocReturn 057882:
  TraceOperation 057887 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 057888:
  MakeRoutineFrame 0;
  Jump: 057889
LocOp 057889:
  TraceOperation 057889 (Call (Floc 079624) [Con 10,Con 0] Sp);
  PushFrame;
  PushReturnAddress 057889;
  SetLocal 1 10;
  SetLocal 2 0;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 079625
LocReturn 057889:
  PushStack call_result;
  TraceOperation 057896 (Loadw (Con 16625) (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(016625,Mul(2,popped1))];
  Let b3 = M[Offset(Offset(016625,Mul(2,popped1)),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 057902 (Je [Var Sp,Con 1] (Branch F (Dloc 057915)));
  PopStack popped4;
  if (Equal(popped4,1)) {
    TraceOperation 057906 (Call (Floc 088936) [Con 22] Sp);
    PushFrame;
    PushReturnAddress 057906;
    SetLocal 1 22;
    MakeRoutineFrame 14;
    SetLocal 14 0;
    SetLocal 13 0;
    SetLocal 12 0;
    SetLocal 11 0;
    SetLocal 10 0;
    SetLocal 9 0;
    SetLocal 8 0;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 088937
  } else {
    Jump: 057915
  }
LocReturn 057906:
  PushStack call_result;
  TraceOperation 057912 (Jz (Var Sp) (Branch F Dtrue));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 057915
  } else {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  }
LocOp 057915:
  TraceOperation 057915 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 057916:
  MakeRoutineFrame 0;
  Jump: 057917
LocOp 057917:
  TraceOperation 057917 (Call (Floc 079624) [Con 10,Con 5] Sp);
  PushFrame;
  PushReturnAddress 057917;
  SetLocal 1 10;
  SetLocal 2 5;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 079625
LocReturn 057917:
  PushStack call_result;
  TraceOperation 057924 (Loadw (Con 16625) (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(016625,Mul(2,popped1))];
  Let b3 = M[Offset(Offset(016625,Mul(2,popped1)),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 057930 (Jz (Var Sp) (Branch F (Dloc 057958)));
  PopStack popped4;
  if (IsZero(popped4)) {
    TraceOperation 057933 (CallN (Floc 088936) [Con 11]);
    PushFrame;
    PushReturnAddress 057933;
    SetLocal 1 11;
    MakeRoutineFrame 14;
    SetLocal 14 0;
    SetLocal 13 0;
    SetLocal 12 0;
    SetLocal 11 0;
    SetLocal 10 0;
    SetLocal 9 0;
    SetLocal 8 0;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 088937
  } else {
    Jump: 057958
  }
LocReturn 057933:
  TraceOperation 057938 (Call (Floc 089832) [] Sp);
  PushFrame;
  PushReturnAddress 057938;
  MakeRoutineFrame 0;
  Jump: 089833
LocReturn 057938:
  PushStack call_result;
  TraceOperation 057942 (Jz (Var Sp) (Branch T (Dloc 057958)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 057958
  } else {
    TraceOperation 057945 (Call (Floc 079624) [Con 10,Con 5] Sp);
    PushFrame;
    PushReturnAddress 057945;
    SetLocal 1 10;
    SetLocal 2 5;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 079625
  }
LocReturn 057945:
  PushStack call_result;
  TraceOperation 057952 (Storew (Con 16625) (Var Sp) (Con 1));
  PopStack popped1;
  SetByte Offset(016625,Mul(2,popped1)) 0;
  SetByte Offset(Offset(016625,Mul(2,popped1)),1) 1;
  Jump: 057958
LocOp 057958:
  TraceOperation 057958 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 057960:
  MakeRoutineFrame 0;
  Jump: 057961
LocOp 057961:
  TraceOperation 057961 (Call (Floc 079624) [Con 10,Con 5] Sp);
  PushFrame;
  PushReturnAddress 057961;
  SetLocal 1 10;
  SetLocal 2 5;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 079625
LocReturn 057961:
  PushStack call_result;
  TraceOperation 057968 (Loadw (Con 16625) (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(016625,Mul(2,popped1))];
  Let b3 = M[Offset(Offset(016625,Mul(2,popped1)),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 057974 (Je [Var Sp,Con 1] (Branch F (Dloc 058012)));
  PopStack popped4;
  if (Equal(popped4,1)) {
    TraceOperation 057978 (Call (Floc 079624) [Con 10,Con 1] Sp);
    PushFrame;
    PushReturnAddress 057978;
    SetLocal 1 10;
    SetLocal 2 1;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 079625
  } else {
    Jump: 058012
  }
LocReturn 057978:
  PushStack call_result;
  TraceOperation 057985 (Loadw (Con 16625) (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(016625,Mul(2,popped1))];
  Let b3 = M[Offset(Offset(016625,Mul(2,popped1)),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 057991 (Jz (Var Sp) (Branch F (Dloc 058012)));
  PopStack popped4;
  if (IsZero(popped4)) {
    TraceOperation 057994 (Call (Floc 079624) [Con 10,Con 4] Sp);
    PushFrame;
    PushReturnAddress 057994;
    SetLocal 1 10;
    SetLocal 2 4;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 079625
  } else {
    Jump: 058012
  }
LocReturn 057994:
  PushStack call_result;
  TraceOperation 058001 (Loadw (Con 16625) (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(016625,Mul(2,popped1))];
  Let b3 = M[Offset(Offset(016625,Mul(2,popped1)),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 058007 (CallN (Floc 088936) [Var Sp]);
  PopStack popped4;
  PushFrame;
  PushReturnAddress 058007;
  SetLocal 1 popped4;
  MakeRoutineFrame 14;
  SetLocal 14 0;
  SetLocal 13 0;
  SetLocal 12 0;
  SetLocal 11 0;
  SetLocal 10 0;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 088937
LocReturn 058007:
  Jump: 058012
LocOp 058012:
  TraceOperation 058012 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 058016:
  MakeRoutineFrame 0;
  Jump: 058017
LocOp 058017:
  TraceOperation 058017 (CallN (Floc 089744) []);
  PushFrame;
  PushReturnAddress 058017;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  SetLocal 1 0;
  Jump: 089745
LocReturn 058017:
  TraceOperation 058020 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 058024:
  MakeRoutineFrame 0;
  Jump: 058025
LocOp 058025:
  TraceOperation 058025 (Je [Var (Global 31),Var (Global 37)] (Branch F (Dloc 058033)));
  Let b1 = M[007268];
  Let b2 = M[007269];
  Let b3 = M[007280];
  Let b4 = M[007281];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 058029 (CallN (Floc 089744) []);
    PushFrame;
    PushReturnAddress 058029;
    MakeRoutineFrame 2;
    SetLocal 2 0;
    SetLocal 1 0;
    Jump: 089745
  } else {
    Jump: 058033
  }
LocReturn 058029:
  TraceOperation 058032 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 058033:
  TraceOperation 058033 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 058036:
  MakeRoutineFrame 0;
  Jump: 058037
LocOp 058037:
  TraceOperation 058037 (Je [Var (Global 31),Var (Global 37)] (Branch T (Dloc 058055)));
  Let b1 = M[007268];
  Let b2 = M[007269];
  Let b3 = M[007280];
  Let b4 = M[007281];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    Jump: 058055
  } else {
    TraceOperation 058041 (Call (Floc 104604) [Var (Global 31),Var (Global 37)] Sp);
    Let b5 = M[007268];
    Let b6 = M[007269];
    Let b7 = M[007280];
    Let b8 = M[007281];
    PushFrame;
    PushReturnAddress 058041;
    SetLocal 1 MakeHiLo(b5,b6);
    SetLocal 2 MakeHiLo(b7,b8);
    MakeRoutineFrame 2;
    Jump: 104605
  }
LocReturn 058041:
  PushStack call_result;
  TraceOperation 058048 (Jz (Var Sp) (Branch T (Dloc 058055)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 058055
  } else {
    TraceOperation 058051 (CallN (Floc 089744) []);
    PushFrame;
    PushReturnAddress 058051;
    MakeRoutineFrame 2;
    SetLocal 2 0;
    SetLocal 1 0;
    Jump: 089745
  }
LocReturn 058051:
  TraceOperation 058054 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 058055:
  TraceOperation 058055 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 058056:
  MakeRoutineFrame 0;
  Jump: 058057
LocOp 058057:
  TraceOperation 058057 (Call (Floc 026172) [Var (Global 47),Con 14] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 058057;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 14;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 058057:
  PushStack call_result;
  TraceOperation 058064 (Jz (Var Sp) (Branch T (Dloc 058081)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 058081
  } else {
    TraceOperation 058067 (Call (Floc 104604) [Var (Global 31),Var (Global 47)] Sp);
    Let b2 = M[007268];
    Let b3 = M[007269];
    Let b4 = M[007300];
    Let b5 = M[007301];
    PushFrame;
    PushReturnAddress 058067;
    SetLocal 1 MakeHiLo(b2,b3);
    SetLocal 2 MakeHiLo(b4,b5);
    MakeRoutineFrame 2;
    Jump: 104605
  }
LocReturn 058067:
  PushStack call_result;
  TraceOperation 058074 (Jz (Var Sp) (Branch T (Dloc 058081)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 058081
  } else {
    TraceOperation 058077 (CallN (Floc 089744) []);
    PushFrame;
    PushReturnAddress 058077;
    MakeRoutineFrame 2;
    SetLocal 2 0;
    SetLocal 1 0;
    Jump: 089745
  }
LocReturn 058077:
  TraceOperation 058080 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 058081:
  TraceOperation 058081 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 058084:
  MakeRoutineFrame 0;
  Jump: 058085
LocOp 058085:
  TraceOperation 058085 (Call (Floc 026172) [Var (Global 48),Con 14] Sp);
  Let b1 = M[007302];
  Let b2 = M[007303];
  PushFrame;
  PushReturnAddress 058085;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 14;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 058085:
  PushStack call_result;
  TraceOperation 058092 (Jz (Var Sp) (Branch T (Dloc 058109)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 058109
  } else {
    TraceOperation 058095 (Call (Floc 104604) [Var (Global 31),Var (Global 48)] Sp);
    Let b2 = M[007268];
    Let b3 = M[007269];
    Let b4 = M[007302];
    Let b5 = M[007303];
    PushFrame;
    PushReturnAddress 058095;
    SetLocal 1 MakeHiLo(b2,b3);
    SetLocal 2 MakeHiLo(b4,b5);
    MakeRoutineFrame 2;
    Jump: 104605
  }
LocReturn 058095:
  PushStack call_result;
  TraceOperation 058102 (Jz (Var Sp) (Branch T (Dloc 058109)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 058109
  } else {
    TraceOperation 058105 (CallN (Floc 089744) []);
    PushFrame;
    PushReturnAddress 058105;
    MakeRoutineFrame 2;
    SetLocal 2 0;
    SetLocal 1 0;
    Jump: 089745
  }
LocReturn 058105:
  TraceOperation 058108 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 058109:
  TraceOperation 058109 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 058112:
  MakeRoutineFrame 0;
  Jump: 058113
LocOp 058113:
  TraceOperation 058113 (Je [Var (Global 1),Con 8] (Branch F (Dloc 058121)));
  Let b1 = M[007208];
  Let b2 = M[007209];
  if (Equal(MakeHiLo(b1,b2),8)) {
    TraceOperation 058117 (CallN (Floc 089744) []);
    PushFrame;
    PushReturnAddress 058117;
    MakeRoutineFrame 2;
    SetLocal 2 0;
    SetLocal 1 0;
    Jump: 089745
  } else {
    Jump: 058121
  }
LocReturn 058117:
  TraceOperation 058120 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 058121:
  TraceOperation 058121 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 058124:
  MakeRoutineFrame 0;
  Jump: 058125
LocOp 058125:
  TraceOperation 058125 (Je [Var (Global 40),Con 52] (Branch F (Dloc 058158)));
  Let b1 = M[007286];
  Let b2 = M[007287];
  if (Equal(MakeHiLo(b1,b2),52)) {
    TraceOperation 058129 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 058158)));
    Let b3 = M[007280];
    Let b4 = M[007281];
    Let b5 = M[007268];
    Let b6 = M[007269];
    if (Equal(MakeHiLo(b3,b4),MakeHiLo(b5,b6))) {
      TraceOperation 058133 (Je [Var (Global 47),Con 48] (Branch F (Dloc 058158)));
      Let b7 = M[007300];
      Let b8 = M[007301];
      if (Equal(MakeHiLo(b7,b8),48)) {
        TraceOperation 058137 (Jz (Var (Global 114)) (Branch T (Dloc 058146)));
        Let b9 = M[007434];
        Let b10 = M[007435];
        if (IsZero(MakeHiLo(b9,b10))) {
          Jump: 058146
        } else {
          TraceOperation 058140 (CallN (Floc 098228) [Con 14531]);
          PushFrame;
          PushReturnAddress 058140;
          SetLocal 1 14531;
          MakeRoutineFrame 2;
          SetLocal 2 0;
          Jump: 098229
        }
      } else {
        Jump: 058158
      }
    } else {
      Jump: 058158
    }
  } else {
    Jump: 058158
  }
LocReturn 058140:
  Jump: 058146
LocOp 058146:
  TraceOperation 058146 (CallN (Floc 103224) [Con 61,Con 48,Con 0,Con 0]);
  PushFrame;
  PushReturnAddress 058146;
  SetLocal 1 61;
  SetLocal 2 48;
  SetLocal 3 0;
  SetLocal 4 0;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  Jump: 103225
LocReturn 058146:
  TraceOperation 058155 (Jump 058169);
  Jump: 058169
LocOp 058158:
  TraceOperation 058158 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 058169)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 058162 (CallN (Floc 098228) [Con 14531,Con 1]);
    PushFrame;
    PushReturnAddress 058162;
    SetLocal 1 14531;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 058169
  }
LocReturn 058162:
  Jump: 058169
LocOp 058169:
  TraceOperation 058169 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 058172:
  MakeRoutineFrame 0;
  Jump: 058173
LocOp 058173:
  TraceOperation 058173 (Je [Var (Global 40),Con 63] (Branch F (Dloc 058205)));
  Let b1 = M[007286];
  Let b2 = M[007287];
  if (Equal(MakeHiLo(b1,b2),63)) {
    TraceOperation 058177 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 058205)));
    Let b3 = M[007280];
    Let b4 = M[007281];
    Let b5 = M[007268];
    Let b6 = M[007269];
    if (Equal(MakeHiLo(b3,b4),MakeHiLo(b5,b6))) {
      TraceOperation 058181 (Je [Var (Global 47),Con 62] (Branch F (Dloc 058205)));
      Let b7 = M[007300];
      Let b8 = M[007301];
      if (Equal(MakeHiLo(b7,b8),62)) {
        TraceOperation 058185 (Jz (Var (Global 114)) (Branch T (Dloc 058194)));
        Let b9 = M[007434];
        Let b10 = M[007435];
        if (IsZero(MakeHiLo(b9,b10))) {
          Jump: 058194
        } else {
          TraceOperation 058188 (CallN (Floc 098228) [Con 14543]);
          PushFrame;
          PushReturnAddress 058188;
          SetLocal 1 14543;
          MakeRoutineFrame 2;
          SetLocal 2 0;
          Jump: 098229
        }
      } else {
        Jump: 058205
      }
    } else {
      Jump: 058205
    }
  } else {
    Jump: 058205
  }
LocReturn 058188:
  Jump: 058194
LocOp 058194:
  TraceOperation 058194 (CallN (Floc 088548) [Con 49,Con 72,Con 1000]);
  PushFrame;
  PushReturnAddress 058194;
  SetLocal 1 49;
  SetLocal 2 72;
  SetLocal 3 1000;
  MakeRoutineFrame 3;
  Jump: 088549
LocReturn 058194:
  TraceOperation 058202 (Jump 058216);
  Jump: 058216
LocOp 058205:
  TraceOperation 058205 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 058216)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 058209 (CallN (Floc 098228) [Con 14543,Con 1]);
    PushFrame;
    PushReturnAddress 058209;
    SetLocal 1 14543;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 058216
  }
LocReturn 058209:
  Jump: 058216
LocOp 058216:
  TraceOperation 058216 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 058220:
  MakeRoutineFrame 0;
  Jump: 058221
LocOp 058221:
  TraceOperation 058221 (Je [Var (Global 40),Con 62] (Branch F (Dloc 058259)));
  Let b1 = M[007286];
  Let b2 = M[007287];
  if (Equal(MakeHiLo(b1,b2),62)) {
    TraceOperation 058225 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 058259)));
    Let b3 = M[007280];
    Let b4 = M[007281];
    Let b5 = M[007268];
    Let b6 = M[007269];
    if (Equal(MakeHiLo(b3,b4),MakeHiLo(b5,b6))) {
      TraceOperation 058229 (Je [Var (Global 47),Con 62] (Branch F (Dloc 058259)));
      Let b7 = M[007300];
      Let b8 = M[007301];
      if (Equal(MakeHiLo(b7,b8),62)) {
        TraceOperation 058233 (Jz (Var (Global 114)) (Branch T (Dloc 058242)));
        Let b9 = M[007434];
        Let b10 = M[007435];
        if (IsZero(MakeHiLo(b9,b10))) {
          Jump: 058242
        } else {
          TraceOperation 058236 (CallN (Floc 098228) [Con 14555]);
          PushFrame;
          PushReturnAddress 058236;
          SetLocal 1 14555;
          MakeRoutineFrame 2;
          SetLocal 2 0;
          Jump: 098229
        }
      } else {
        Jump: 058259
      }
    } else {
      Jump: 058259
    }
  } else {
    Jump: 058259
  }
LocReturn 058236:
  Jump: 058242
LocOp 058242:
  TraceOperation 058242 (CallN (Floc 088548) [Con 49,Con 72,Con 0]);
  PushFrame;
  PushReturnAddress 058242;
  SetLocal 1 49;
  SetLocal 2 72;
  SetLocal 3 0;
  MakeRoutineFrame 3;
  Jump: 088549
LocReturn 058242:
  TraceOperation 058249 (CallN (Floc 088364) [Con 49,Con 36,Con 1]);
  PushFrame;
  PushReturnAddress 058249;
  SetLocal 1 49;
  SetLocal 2 36;
  SetLocal 3 1;
  MakeRoutineFrame 3;
  Jump: 088365
LocReturn 058249:
  TraceOperation 058256 (Jump 058270);
  Jump: 058270
LocOp 058259:
  TraceOperation 058259 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 058270)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 058263 (CallN (Floc 098228) [Con 14555,Con 1]);
    PushFrame;
    PushReturnAddress 058263;
    SetLocal 1 14555;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 058270
  }
LocReturn 058263:
  Jump: 058270
LocOp 058270:
  TraceOperation 058270 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 058272:
  MakeRoutineFrame 0;
  Jump: 058273
LocOp 058273:
  TraceOperation 058273 (Je [Var (Global 40),Con 52] (Branch F (Dloc 058306)));
  Let b1 = M[007286];
  Let b2 = M[007287];
  if (Equal(MakeHiLo(b1,b2),52)) {
    TraceOperation 058277 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 058306)));
    Let b3 = M[007280];
    Let b4 = M[007281];
    Let b5 = M[007268];
    Let b6 = M[007269];
    if (Equal(MakeHiLo(b3,b4),MakeHiLo(b5,b6))) {
      TraceOperation 058281 (Je [Var (Global 47),Con 66] (Branch F (Dloc 058306)));
      Let b7 = M[007300];
      Let b8 = M[007301];
      if (Equal(MakeHiLo(b7,b8),66)) {
        TraceOperation 058285 (Jz (Var (Global 114)) (Branch T (Dloc 058294)));
        Let b9 = M[007434];
        Let b10 = M[007435];
        if (IsZero(MakeHiLo(b9,b10))) {
          Jump: 058294
        } else {
          TraceOperation 058288 (CallN (Floc 098228) [Con 14568]);
          PushFrame;
          PushReturnAddress 058288;
          SetLocal 1 14568;
          MakeRoutineFrame 2;
          SetLocal 2 0;
          Jump: 098229
        }
      } else {
        Jump: 058306
      }
    } else {
      Jump: 058306
    }
  } else {
    Jump: 058306
  }
LocReturn 058288:
  Jump: 058294
LocOp 058294:
  TraceOperation 058294 (CallN (Floc 103224) [Con 69,Con 66,Con 0,Con 0]);
  PushFrame;
  PushReturnAddress 058294;
  SetLocal 1 69;
  SetLocal 2 66;
  SetLocal 3 0;
  SetLocal 4 0;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  Jump: 103225
LocReturn 058294:
  TraceOperation 058303 (Jump 058317);
  Jump: 058317
LocOp 058306:
  TraceOperation 058306 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 058317)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 058310 (CallN (Floc 098228) [Con 14568,Con 1]);
    PushFrame;
    PushReturnAddress 058310;
    SetLocal 1 14568;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 058317
  }
LocReturn 058310:
  Jump: 058317
LocOp 058317:
  TraceOperation 058317 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 058320:
  MakeRoutineFrame 0;
  Jump: 058321
LocOp 058321:
  TraceOperation 058321 (Je [Var (Global 40),Con 26] (Branch F (Dloc 058380)));
  Let b1 = M[007286];
  Let b2 = M[007287];
  if (Equal(MakeHiLo(b1,b2),26)) {
    TraceOperation 058325 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 058380)));
    Let b3 = M[007280];
    Let b4 = M[007281];
    Let b5 = M[007268];
    Let b6 = M[007269];
    if (Equal(MakeHiLo(b3,b4),MakeHiLo(b5,b6))) {
      TraceOperation 058329 (Call (Floc 079724) [Con 20007,Con 1] Sp);
      PushFrame;
      PushReturnAddress 058329;
      SetLocal 1 20007;
      SetLocal 2 1;
      MakeRoutineFrame 3;
      SetLocal 3 0;
      Jump: 079725
    } else {
      Jump: 058380
    }
  } else {
    Jump: 058380
  }
LocReturn 058329:
  PushStack call_result;
  TraceOperation 058337 (Loadw (Con 16625) (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(016625,Mul(2,popped1))];
  Let b3 = M[Offset(Offset(016625,Mul(2,popped1)),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 058343 (Je [Var Sp,Con 71] (Branch F (Dloc 058380)));
  PopStack popped4;
  if (Equal(popped4,71)) {
    TraceOperation 058347 (Call (Floc 102816) [Con 72] Sp);
    PushFrame;
    PushReturnAddress 058347;
    SetLocal 1 72;
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 102817
  } else {
    Jump: 058380
  }
LocReturn 058347:
  PushStack call_result;
  TraceOperation 058353 (Je [Con 50,Var Sp] (Branch T (Dloc 058380)));
  PopStack popped1;
  if (Equal(50,popped1)) {
    Jump: 058380
  } else {
    TraceOperation 058357 (Jz (Var (Global 114)) (Branch T (Dloc 058366)));
    Let b2 = M[007434];
    Let b3 = M[007435];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 058366
    } else {
      TraceOperation 058360 (CallN (Floc 098228) [Con 14580]);
      PushFrame;
      PushReturnAddress 058360;
      SetLocal 1 14580;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  }
LocReturn 058360:
  Jump: 058366
LocOp 058366:
  TraceOperation 058366 (Store (Con 20) (Con 1));
  SetByte 007214 0;
  SetByte 007215 1;
  TraceOperation 058369 (CallN (Floc 080952) [Con -31314]);
  PushFrame;
  PushReturnAddress 058369;
  SetLocal 1 -31314;
  MakeRoutineFrame 1;
  Jump: 080953
LocReturn 058369:
  TraceOperation 058375 New_line;
  GamePrint "\n";
  TraceOperation 058376 (CallN (Floc 089760) []);
  PushFrame;
  PushReturnAddress 058376;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  SetLocal 1 0;
  Jump: 089761
LocReturn 058376:
  TraceOperation 058379 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 058380:
  TraceOperation 058380 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 058391)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 058384 (CallN (Floc 098228) [Con 14580,Con 1]);
    PushFrame;
    PushReturnAddress 058384;
    SetLocal 1 14580;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 058391
  }
LocReturn 058384:
  Jump: 058391
LocOp 058391:
  TraceOperation 058391 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 058392:
  MakeRoutineFrame 0;
  Jump: 058393
LocOp 058393:
  TraceOperation 058393 (Je [Var (Global 40),Con 26] (Branch F (Dloc 058452)));
  Let b1 = M[007286];
  Let b2 = M[007287];
  if (Equal(MakeHiLo(b1,b2),26)) {
    TraceOperation 058397 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 058452)));
    Let b3 = M[007280];
    Let b4 = M[007281];
    Let b5 = M[007268];
    Let b6 = M[007269];
    if (Equal(MakeHiLo(b3,b4),MakeHiLo(b5,b6))) {
      TraceOperation 058401 (Call (Floc 079724) [Con 20007,Con 1] Sp);
      PushFrame;
      PushReturnAddress 058401;
      SetLocal 1 20007;
      SetLocal 2 1;
      MakeRoutineFrame 3;
      SetLocal 3 0;
      Jump: 079725
    } else {
      Jump: 058452
    }
  } else {
    Jump: 058452
  }
LocReturn 058401:
  PushStack call_result;
  TraceOperation 058409 (Loadw (Con 16625) (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(016625,Mul(2,popped1))];
  Let b3 = M[Offset(Offset(016625,Mul(2,popped1)),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 058415 (Je [Var Sp,Con 71] (Branch F (Dloc 058452)));
  PopStack popped4;
  if (Equal(popped4,71)) {
    TraceOperation 058419 (Call (Floc 102384) [Con 42] Sp);
    PushFrame;
    PushReturnAddress 058419;
    SetLocal 1 42;
    MakeRoutineFrame 1;
    Jump: 102385
  } else {
    Jump: 058452
  }
LocReturn 058419:
  PushStack call_result;
  TraceOperation 058425 (Je [Var (Global 31),Var Sp] (Branch T (Dloc 058452)));
  Let b1 = M[007268];
  Let b2 = M[007269];
  PopStack popped3;
  if (Equal(MakeHiLo(b1,b2),popped3)) {
    Jump: 058452
  } else {
    TraceOperation 058429 (Jz (Var (Global 114)) (Branch T (Dloc 058438)));
    Let b4 = M[007434];
    Let b5 = M[007435];
    if (IsZero(MakeHiLo(b4,b5))) {
      Jump: 058438
    } else {
      TraceOperation 058432 (CallN (Floc 098228) [Con 14598]);
      PushFrame;
      PushReturnAddress 058432;
      SetLocal 1 14598;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  }
LocReturn 058432:
  Jump: 058438
LocOp 058438:
  TraceOperation 058438 (Store (Con 20) (Con 1));
  SetByte 007214 0;
  SetByte 007215 1;
  TraceOperation 058441 (CallN (Floc 080952) [Con -31729]);
  PushFrame;
  PushReturnAddress 058441;
  SetLocal 1 -31729;
  MakeRoutineFrame 1;
  Jump: 080953
LocReturn 058441:
  TraceOperation 058447 New_line;
  GamePrint "\n";
  TraceOperation 058448 (CallN (Floc 089760) []);
  PushFrame;
  PushReturnAddress 058448;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  SetLocal 1 0;
  Jump: 089761
LocReturn 058448:
  TraceOperation 058451 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 058452:
  TraceOperation 058452 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 058463)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 058456 (CallN (Floc 098228) [Con 14598,Con 1]);
    PushFrame;
    PushReturnAddress 058456;
    SetLocal 1 14598;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 058463
  }
LocReturn 058456:
  Jump: 058463
LocOp 058463:
  TraceOperation 058463 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 058464:
  MakeRoutineFrame 0;
  Jump: 058465
LocOp 058465:
  TraceOperation 058465 (Je [Var (Global 40),Con 26] (Branch F (Dloc 058596)));
  Let b1 = M[007286];
  Let b2 = M[007287];
  if (Equal(MakeHiLo(b1,b2),26)) {
    TraceOperation 058470 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 058596)));
    Let b3 = M[007280];
    Let b4 = M[007281];
    Let b5 = M[007268];
    Let b6 = M[007269];
    if (Equal(MakeHiLo(b3,b4),MakeHiLo(b5,b6))) {
      TraceOperation 058475 (Call (Floc 079724) [Con 20007,Con 1] Sp);
      PushFrame;
      PushReturnAddress 058475;
      SetLocal 1 20007;
      SetLocal 2 1;
      MakeRoutineFrame 3;
      SetLocal 3 0;
      Jump: 079725
    } else {
      Jump: 058596
    }
  } else {
    Jump: 058596
  }
LocReturn 058475:
  PushStack call_result;
  TraceOperation 058483 (Loadw (Con 16625) (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(016625,Mul(2,popped1))];
  Let b3 = M[Offset(Offset(016625,Mul(2,popped1)),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 058489 (Je [Var Sp,Con 71] (Branch F (Dloc 058596)));
  PopStack popped4;
  if (Equal(popped4,71)) {
    TraceOperation 058494 (Call (Floc 088304) [Con 49,Con 36] Sp);
    PushFrame;
    PushReturnAddress 058494;
    SetLocal 1 49;
    SetLocal 2 36;
    MakeRoutineFrame 2;
    Jump: 088305
  } else {
    Jump: 058596
  }
LocReturn 058494:
  PushStack call_result;
  TraceOperation 058501 (Jz (Var Sp) (Branch T (Dloc 058596)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 058596
  } else {
    TraceOperation 058505 (Jz (Var (Global 114)) (Branch T (Dloc 058514)));
    Let b2 = M[007434];
    Let b3 = M[007435];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 058514
    } else {
      TraceOperation 058508 (CallN (Floc 098228) [Con 14616]);
      PushFrame;
      PushReturnAddress 058508;
      SetLocal 1 14616;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  }
LocReturn 058508:
  Jump: 058514
LocOp 058514:
  TraceOperation 058514 (Store (Con 20) (Con 1));
  SetByte 007214 0;
  SetByte 007215 1;
  TraceOperation 058517 (Loadw (Con 19860) (Con 0) Sp);
  Let b1 = M[019860];
  Let b2 = M[019861];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 058523 (Call (Floc 082132) [Var Sp,Con 3] Sp);
  PopStack popped3;
  PushFrame;
  PushReturnAddress 058523;
  SetLocal 1 popped3;
  SetLocal 2 3;
  MakeRoutineFrame 2;
  Jump: 082133
LocReturn 058523:
  PushStack call_result;
  TraceOperation 058530 (Storew (Con 19860) (Con 0) (Var Sp));
  PopStack popped1;
  SetByte 019860 HiByte(popped1);
  SetByte 019861 LoByte(popped1);
  TraceOperation 058536 (Loadw (Con 19860) (Con 0) Sp);
  Let b2 = M[019860];
  Let b3 = M[019861];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 058542 (Mod (Var Sp) (Con 4) Sp);
  PopStack popped4;
  PushStack Mod(popped4,4);
  TraceOperation 058546 (Sub (Var Sp) (Con 1) Sp);
  PopStack popped5;
  PushStack Sub(popped5,1);
  TraceOperation 058550 (Pull (Con 255));
  PopStack popped6;
  SetByte 007684 HiByte(popped6);
  SetByte 007685 LoByte(popped6);
  TraceOperation 058553 (Je [Var (Global 239),Con 0] (Branch F (Dloc 058567)));
  Let b7 = M[007684];
  Let b8 = M[007685];
  if (Equal(MakeHiLo(b7,b8),0)) {
    TraceOperation 058557 (CallN (Floc 080952) [Con -31667]);
    PushFrame;
    PushReturnAddress 058557;
    SetLocal 1 -31667;
    MakeRoutineFrame 1;
    Jump: 080953
  } else {
    Jump: 058567
  }
LocReturn 058557:
  TraceOperation 058563 New_line;
  GamePrint "\n";
  TraceOperation 058564 (Jump 058592);
  Jump: 058592
LocOp 058567:
  TraceOperation 058567 (Je [Var (Global 239),Con 1] (Branch F (Dloc 058581)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),1)) {
    TraceOperation 058571 (CallN (Floc 080952) [Con -31621]);
    PushFrame;
    PushReturnAddress 058571;
    SetLocal 1 -31621;
    MakeRoutineFrame 1;
    Jump: 080953
  } else {
    Jump: 058581
  }
LocReturn 058571:
  TraceOperation 058577 New_line;
  GamePrint "\n";
  TraceOperation 058578 (Jump 058592);
  Jump: 058592
LocOp 058581:
  TraceOperation 058581 (Je [Var (Global 239),Con 2] (Branch F (Dloc 058592)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),2)) {
    TraceOperation 058585 (CallN (Floc 080952) [Con -31335]);
    PushFrame;
    PushReturnAddress 058585;
    SetLocal 1 -31335;
    MakeRoutineFrame 1;
    Jump: 080953
  } else {
    Jump: 058592
  }
LocReturn 058585:
  TraceOperation 058591 New_line;
  GamePrint "\n";
  Jump: 058592
LocOp 058592:
  TraceOperation 058592 (CallN (Floc 089760) []);
  PushFrame;
  PushReturnAddress 058592;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  SetLocal 1 0;
  Jump: 089761
LocReturn 058592:
  TraceOperation 058595 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 058596:
  TraceOperation 058596 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 058607)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 058600 (CallN (Floc 098228) [Con 14616,Con 1]);
    PushFrame;
    PushReturnAddress 058600;
    SetLocal 1 14616;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 058607
  }
LocReturn 058600:
  Jump: 058607
LocOp 058607:
  TraceOperation 058607 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 058608:
  MakeRoutineFrame 0;
  Jump: 058609
LocOp 058609:
  TraceOperation 058609 (Je [Var (Global 40),Con 26] (Branch F (Dloc 058680)));
  Let b1 = M[007286];
  Let b2 = M[007287];
  if (Equal(MakeHiLo(b1,b2),26)) {
    TraceOperation 058614 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 058680)));
    Let b3 = M[007280];
    Let b4 = M[007281];
    Let b5 = M[007268];
    Let b6 = M[007269];
    if (Equal(MakeHiLo(b3,b4),MakeHiLo(b5,b6))) {
      TraceOperation 058619 (Call (Floc 079724) [Con 20007,Con 1] Sp);
      PushFrame;
      PushReturnAddress 058619;
      SetLocal 1 20007;
      SetLocal 2 1;
      MakeRoutineFrame 3;
      SetLocal 3 0;
      Jump: 079725
    } else {
      Jump: 058680
    }
  } else {
    Jump: 058680
  }
LocReturn 058619:
  PushStack call_result;
  TraceOperation 058627 (Loadw (Con 16625) (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(016625,Mul(2,popped1))];
  Let b3 = M[Offset(Offset(016625,Mul(2,popped1)),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 058633 (Je [Var Sp,Con 71] (Branch F (Dloc 058680)));
  PopStack popped4;
  if (Equal(popped4,71)) {
    TraceOperation 058637 (Call (Floc 102384) [Con 58] Sp);
    PushFrame;
    PushReturnAddress 058637;
    SetLocal 1 58;
    MakeRoutineFrame 1;
    Jump: 102385
  } else {
    Jump: 058680
  }
LocReturn 058637:
  PushStack call_result;
  TraceOperation 058643 (Je [Var (Global 31),Var Sp] (Branch F (Dloc 058657)));
  Let b1 = M[007268];
  Let b2 = M[007269];
  PopStack popped3;
  if (Equal(MakeHiLo(b1,b2),popped3)) {
    TraceOperation 058647 (Call (Floc 102384) [Con 57] Sp);
    PushFrame;
    PushReturnAddress 058647;
    SetLocal 1 57;
    MakeRoutineFrame 1;
    Jump: 102385
  } else {
    Jump: 058657
  }
LocReturn 058647:
  PushStack call_result;
  TraceOperation 058653 (Je [Var (Global 31),Var Sp] (Branch T (Dloc 058680)));
  Let b1 = M[007268];
  Let b2 = M[007269];
  PopStack popped3;
  if (Equal(MakeHiLo(b1,b2),popped3)) {
    Jump: 058680
  } else {
    Jump: 058657
  }
LocOp 058657:
  TraceOperation 058657 (Jz (Var (Global 114)) (Branch T (Dloc 058666)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 058666
  } else {
    TraceOperation 058660 (CallN (Floc 098228) [Con 14652]);
    PushFrame;
    PushReturnAddress 058660;
    SetLocal 1 14652;
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 098229
  }
LocReturn 058660:
  Jump: 058666
LocOp 058666:
  TraceOperation 058666 (Store (Con 20) (Con 1));
  SetByte 007214 0;
  SetByte 007215 1;
  TraceOperation 058669 (CallN (Floc 080952) [Con -31680]);
  PushFrame;
  PushReturnAddress 058669;
  SetLocal 1 -31680;
  MakeRoutineFrame 1;
  Jump: 080953
LocReturn 058669:
  TraceOperation 058675 New_line;
  GamePrint "\n";
  TraceOperation 058676 (CallN (Floc 089760) []);
  PushFrame;
  PushReturnAddress 058676;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  SetLocal 1 0;
  Jump: 089761
LocReturn 058676:
  TraceOperation 058679 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 058680:
  TraceOperation 058680 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 058691)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 058684 (CallN (Floc 098228) [Con 14652,Con 1]);
    PushFrame;
    PushReturnAddress 058684;
    SetLocal 1 14652;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 058691
  }
LocReturn 058684:
  Jump: 058691
LocOp 058691:
  TraceOperation 058691 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 058692:
  MakeRoutineFrame 0;
  Jump: 058693
LocOp 058693:
  TraceOperation 058693 (Call (Floc 106568) [] Sp);
  PushFrame;
  PushReturnAddress 058693;
  MakeRoutineFrame 0;
  Jump: 106569
LocReturn 058693:
  PushStack call_result;
  TraceOperation 058697 (Jz (Var Sp) (Branch T (Dloc 058743)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 058743
  } else {
    TraceOperation 058700 (Loadw (Con 19826) (Con 0) Sp);
    Let b2 = M[019826];
    Let b3 = M[019827];
    PushStack MakeHiLo(b2,b3);
    TraceOperation 058706 (Je [Var Sp,Con 1] (Branch F (Dloc 058743)));
    PopStack popped4;
    if (Equal(popped4,1)) {
      TraceOperation 058710 (Loadw (Con 19832) (Con 0) Sp);
      Let b5 = M[019832];
      Let b6 = M[019833];
      PushStack MakeHiLo(b5,b6);
      TraceOperation 058716 (Jg (Var Sp) (Con 0) (Branch F (Dloc 058743)));
      PopStack popped7;
      if (GreaterThan(popped7,0)) {
        TraceOperation 058720 (Jz (Var (Global 114)) (Branch T (Dloc 058729)));
        Let b8 = M[007434];
        Let b9 = M[007435];
        if (IsZero(MakeHiLo(b8,b9))) {
          Jump: 058729
        } else {
          TraceOperation 058723 (CallN (Floc 098228) [Con 14673]);
          PushFrame;
          PushReturnAddress 058723;
          SetLocal 1 14673;
          MakeRoutineFrame 2;
          SetLocal 2 0;
          Jump: 098229
        }
      } else {
        Jump: 058743
      }
    } else {
      Jump: 058743
    }
  }
LocReturn 058723:
  Jump: 058729
LocOp 058729:
  TraceOperation 058729 (Store (Con 20) (Con 1));
  SetByte 007214 0;
  SetByte 007215 1;
  TraceOperation 058732 (CallN (Floc 080952) [Con -31675]);
  PushFrame;
  PushReturnAddress 058732;
  SetLocal 1 -31675;
  MakeRoutineFrame 1;
  Jump: 080953
LocReturn 058732:
  TraceOperation 058738 New_line;
  GamePrint "\n";
  TraceOperation 058739 (CallN (Floc 089760) []);
  PushFrame;
  PushReturnAddress 058739;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  SetLocal 1 0;
  Jump: 089761
LocReturn 058739:
  TraceOperation 058742 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 058743:
  TraceOperation 058743 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 058754)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 058747 (CallN (Floc 098228) [Con 14673,Con 1]);
    PushFrame;
    PushReturnAddress 058747;
    SetLocal 1 14673;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 058754
  }
LocReturn 058747:
  Jump: 058754
LocOp 058754:
  TraceOperation 058754 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 058756:
  MakeRoutineFrame 0;
  Jump: 058757
LocOp 058757:
  TraceOperation 058757 (Je [Var (Global 40),Con 26] (Branch F (Dloc 058827)));
  Let b1 = M[007286];
  Let b2 = M[007287];
  if (Equal(MakeHiLo(b1,b2),26)) {
    TraceOperation 058762 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 058827)));
    Let b3 = M[007280];
    Let b4 = M[007281];
    Let b5 = M[007268];
    Let b6 = M[007269];
    if (Equal(MakeHiLo(b3,b4),MakeHiLo(b5,b6))) {
      TraceOperation 058767 (Call (Floc 079724) [Con 20007,Con 1] Sp);
      PushFrame;
      PushReturnAddress 058767;
      SetLocal 1 20007;
      SetLocal 2 1;
      MakeRoutineFrame 3;
      SetLocal 3 0;
      Jump: 079725
    } else {
      Jump: 058827
    }
  } else {
    Jump: 058827
  }
LocReturn 058767:
  PushStack call_result;
  TraceOperation 058775 (Loadw (Con 16625) (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(016625,Mul(2,popped1))];
  Let b3 = M[Offset(Offset(016625,Mul(2,popped1)),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 058781 (Je [Var Sp,Con 60] (Branch F (Dloc 058827)));
  PopStack popped4;
  if (Equal(popped4,60)) {
    TraceOperation 058785 (Jz (Var (Global 114)) (Branch T (Dloc 058794)));
    Let b5 = M[007434];
    Let b6 = M[007435];
    if (IsZero(MakeHiLo(b5,b6))) {
      Jump: 058794
    } else {
      TraceOperation 058788 (CallN (Floc 098228) [Con 14689]);
      PushFrame;
      PushReturnAddress 058788;
      SetLocal 1 14689;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 058827
  }
LocReturn 058788:
  Jump: 058794
LocOp 058794:
  TraceOperation 058794 (Store (Con 20) (Con 1));
  SetByte 007214 0;
  SetByte 007215 1;
  TraceOperation 058797 (CallN (Floc 080952) [Con -31303]);
  PushFrame;
  PushReturnAddress 058797;
  SetLocal 1 -31303;
  MakeRoutineFrame 1;
  Jump: 080953
LocReturn 058797:
  TraceOperation 058803 (Call (Floc 102816) [Con 72] Sp);
  PushFrame;
  PushReturnAddress 058803;
  SetLocal 1 72;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 102817
LocReturn 058803:
  PushStack call_result;
  TraceOperation 058809 (Je [Con 50,Var Sp] (Branch F (Dloc 058816)));
  PopStack popped1;
  if (Equal(50,popped1)) {
    TraceOperation 058813 (Jump 058823);
    Jump: 058823
  } else {
    Jump: 058816
  }
LocOp 058816:
  TraceOperation 058816 (CallN (Floc 080952) [Con -31738]);
  PushFrame;
  PushReturnAddress 058816;
  SetLocal 1 -31738;
  MakeRoutineFrame 1;
  Jump: 080953
LocReturn 058816:
  TraceOperation 058822 New_line;
  GamePrint "\n";
  Jump: 058823
LocOp 058823:
  TraceOperation 058823 (CallN (Floc 089760) []);
  PushFrame;
  PushReturnAddress 058823;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  SetLocal 1 0;
  Jump: 089761
LocReturn 058823:
  TraceOperation 058826 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 058827:
  TraceOperation 058827 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 058838)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 058831 (CallN (Floc 098228) [Con 14689,Con 1]);
    PushFrame;
    PushReturnAddress 058831;
    SetLocal 1 14689;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 058838
  }
LocReturn 058831:
  Jump: 058838
LocOp 058838:
  TraceOperation 058838 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 058840:
  MakeRoutineFrame 0;
  Jump: 058841
LocOp 058841:
  TraceOperation 058841 (Je [Var (Global 40),Con 82] (Branch F (Dloc 058886)));
  Let b1 = M[007286];
  Let b2 = M[007287];
  if (Equal(MakeHiLo(b1,b2),82)) {
    TraceOperation 058845 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 058886)));
    Let b3 = M[007280];
    Let b4 = M[007281];
    Let b5 = M[007268];
    Let b6 = M[007269];
    if (Equal(MakeHiLo(b3,b4),MakeHiLo(b5,b6))) {
      TraceOperation 058849 (Je [Var (Global 47),Con 52] (Branch F (Dloc 058886)));
      Let b7 = M[007300];
      Let b8 = M[007301];
      if (Equal(MakeHiLo(b7,b8),52)) {
        TraceOperation 058853 (Call (Floc 026172) [Var (Global 48),Con 14] Sp);
        Let b9 = M[007302];
        Let b10 = M[007303];
        PushFrame;
        PushReturnAddress 058853;
        SetLocal 1 MakeHiLo(b9,b10);
        SetLocal 2 14;
        MakeRoutineFrame 6;
        SetLocal 6 0;
        SetLocal 5 0;
        SetLocal 4 0;
        SetLocal 3 0;
        Jump: 026173
      } else {
        Jump: 058886
      }
    } else {
      Jump: 058886
    }
  } else {
    Jump: 058886
  }
LocReturn 058853:
  PushStack call_result;
  TraceOperation 058860 (Jz (Var Sp) (Branch T (Dloc 058886)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 058886
  } else {
    TraceOperation 058863 (Jz (Var (Global 114)) (Branch T (Dloc 058872)));
    Let b2 = M[007434];
    Let b3 = M[007435];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 058872
    } else {
      TraceOperation 058866 (CallN (Floc 098228) [Con 14710]);
      PushFrame;
      PushReturnAddress 058866;
      SetLocal 1 14710;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  }
LocReturn 058866:
  Jump: 058872
LocOp 058872:
  TraceOperation 058872 (CallN (Floc 076180) [Con 0,Var (Global 31),Con 82,Con 49,Var (Global 48)]);
  Let b1 = M[007268];
  Let b2 = M[007269];
  Let b3 = M[007302];
  Let b4 = M[007303];
  PushFrame;
  PushReturnAddress 058872;
  SetLocal 1 0;
  SetLocal 2 MakeHiLo(b1,b2);
  SetLocal 3 82;
  SetLocal 4 49;
  SetLocal 5 MakeHiLo(b3,b4);
  MakeRoutineFrame 9;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  Jump: 076181
LocReturn 058872:
  TraceOperation 058882 (CallN (Floc 089760) []);
  PushFrame;
  PushReturnAddress 058882;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  SetLocal 1 0;
  Jump: 089761
LocReturn 058882:
  TraceOperation 058885 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 058886:
  TraceOperation 058886 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 058897)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 058890 (CallN (Floc 098228) [Con 14710,Con 1]);
    PushFrame;
    PushReturnAddress 058890;
    SetLocal 1 14710;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 058897
  }
LocReturn 058890:
  Jump: 058897
LocOp 058897:
  TraceOperation 058897 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 058900:
  MakeRoutineFrame 0;
  Jump: 058901
LocOp 058901:
  TraceOperation 058901 (Je [Var (Global 40),Con 83] (Branch F (Dloc 058952)));
  Let b1 = M[007286];
  Let b2 = M[007287];
  if (Equal(MakeHiLo(b1,b2),83)) {
    TraceOperation 058905 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 058952)));
    Let b3 = M[007280];
    Let b4 = M[007281];
    Let b5 = M[007268];
    Let b6 = M[007269];
    if (Equal(MakeHiLo(b3,b4),MakeHiLo(b5,b6))) {
      TraceOperation 058909 (Call (Floc 026172) [Var (Global 47),Con 14] Sp);
      Let b7 = M[007300];
      Let b8 = M[007301];
      PushFrame;
      PushReturnAddress 058909;
      SetLocal 1 MakeHiLo(b7,b8);
      SetLocal 2 14;
      MakeRoutineFrame 6;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      SetLocal 3 0;
      Jump: 026173
    } else {
      Jump: 058952
    }
  } else {
    Jump: 058952
  }
LocReturn 058909:
  PushStack call_result;
  TraceOperation 058916 (Jz (Var Sp) (Branch T (Dloc 058952)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 058952
  } else {
    TraceOperation 058919 (Call (Floc 026172) [Var (Global 48),Con 14] Sp);
    Let b2 = M[007302];
    Let b3 = M[007303];
    PushFrame;
    PushReturnAddress 058919;
    SetLocal 1 MakeHiLo(b2,b3);
    SetLocal 2 14;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  }
LocReturn 058919:
  PushStack call_result;
  TraceOperation 058926 (Jz (Var Sp) (Branch T (Dloc 058952)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 058952
  } else {
    TraceOperation 058929 (Jz (Var (Global 114)) (Branch T (Dloc 058938)));
    Let b2 = M[007434];
    Let b3 = M[007435];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 058938
    } else {
      TraceOperation 058932 (CallN (Floc 098228) [Con 14725]);
      PushFrame;
      PushReturnAddress 058932;
      SetLocal 1 14725;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  }
LocReturn 058932:
  Jump: 058938
LocOp 058938:
  TraceOperation 058938 (CallN (Floc 076180) [Con 0,Var (Global 31),Con 82,Var (Global 47),Var (Global 48)]);
  Let b1 = M[007268];
  Let b2 = M[007269];
  Let b3 = M[007300];
  Let b4 = M[007301];
  Let b5 = M[007302];
  Let b6 = M[007303];
  PushFrame;
  PushReturnAddress 058938;
  SetLocal 1 0;
  SetLocal 2 MakeHiLo(b1,b2);
  SetLocal 3 82;
  SetLocal 4 MakeHiLo(b3,b4);
  SetLocal 5 MakeHiLo(b5,b6);
  MakeRoutineFrame 9;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  Jump: 076181
LocReturn 058938:
  TraceOperation 058948 (CallN (Floc 089760) []);
  PushFrame;
  PushReturnAddress 058948;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  SetLocal 1 0;
  Jump: 089761
LocReturn 058948:
  TraceOperation 058951 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 058952:
  TraceOperation 058952 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 058963)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 058956 (CallN (Floc 098228) [Con 14725,Con 1]);
    PushFrame;
    PushReturnAddress 058956;
    SetLocal 1 14725;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 058963
  }
LocReturn 058956:
  Jump: 058963
LocOp 058963:
  TraceOperation 058963 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 058964:
  MakeRoutineFrame 0;
  Jump: 058965
LocOp 058965:
  TraceOperation 058965 (Je [Var (Global 40),Con 63] (Branch F (Dloc 059000)));
  Let b1 = M[007286];
  Let b2 = M[007287];
  if (Equal(MakeHiLo(b1,b2),63)) {
    TraceOperation 058969 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 059000)));
    Let b3 = M[007280];
    Let b4 = M[007281];
    Let b5 = M[007268];
    Let b6 = M[007269];
    if (Equal(MakeHiLo(b3,b4),MakeHiLo(b5,b6))) {
      TraceOperation 058973 (Je [Var (Global 47),Con 49] (Branch F (Dloc 059000)));
      Let b7 = M[007300];
      Let b8 = M[007301];
      if (Equal(MakeHiLo(b7,b8),49)) {
        TraceOperation 058977 (Jz (Var (Global 114)) (Branch T (Dloc 058986)));
        Let b9 = M[007434];
        Let b10 = M[007435];
        if (IsZero(MakeHiLo(b9,b10))) {
          Jump: 058986
        } else {
          TraceOperation 058980 (CallN (Floc 098228) [Con 14741]);
          PushFrame;
          PushReturnAddress 058980;
          SetLocal 1 14741;
          MakeRoutineFrame 2;
          SetLocal 2 0;
          Jump: 098229
        }
      } else {
        Jump: 059000
      }
    } else {
      Jump: 059000
    }
  } else {
    Jump: 059000
  }
LocReturn 058980:
  Jump: 058986
LocOp 058986:
  TraceOperation 058986 (CallN (Floc 076180) [Con 0,Var (Global 31),Con 63,Con 62,Con 0]);
  Let b1 = M[007268];
  Let b2 = M[007269];
  PushFrame;
  PushReturnAddress 058986;
  SetLocal 1 0;
  SetLocal 2 MakeHiLo(b1,b2);
  SetLocal 3 63;
  SetLocal 4 62;
  SetLocal 5 0;
  MakeRoutineFrame 9;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  Jump: 076181
LocReturn 058986:
  TraceOperation 058996 (CallN (Floc 089760) []);
  PushFrame;
  PushReturnAddress 058996;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  SetLocal 1 0;
  Jump: 089761
LocReturn 058996:
  TraceOperation 058999 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 059000:
  TraceOperation 059000 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 059011)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 059004 (CallN (Floc 098228) [Con 14741,Con 1]);
    PushFrame;
    PushReturnAddress 059004;
    SetLocal 1 14741;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 059011
  }
LocReturn 059004:
  Jump: 059011
LocOp 059011:
  TraceOperation 059011 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 059012:
  MakeRoutineFrame 0;
  Jump: 059013
LocOp 059013:
  TraceOperation 059013 (Je [Var (Global 40),Con 62] (Branch F (Dloc 059048)));
  Let b1 = M[007286];
  Let b2 = M[007287];
  if (Equal(MakeHiLo(b1,b2),62)) {
    TraceOperation 059017 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 059048)));
    Let b3 = M[007280];
    Let b4 = M[007281];
    Let b5 = M[007268];
    Let b6 = M[007269];
    if (Equal(MakeHiLo(b3,b4),MakeHiLo(b5,b6))) {
      TraceOperation 059021 (Je [Var (Global 47),Con 49] (Branch F (Dloc 059048)));
      Let b7 = M[007300];
      Let b8 = M[007301];
      if (Equal(MakeHiLo(b7,b8),49)) {
        TraceOperation 059025 (Jz (Var (Global 114)) (Branch T (Dloc 059034)));
        Let b9 = M[007434];
        Let b10 = M[007435];
        if (IsZero(MakeHiLo(b9,b10))) {
          Jump: 059034
        } else {
          TraceOperation 059028 (CallN (Floc 098228) [Con 14753]);
          PushFrame;
          PushReturnAddress 059028;
          SetLocal 1 14753;
          MakeRoutineFrame 2;
          SetLocal 2 0;
          Jump: 098229
        }
      } else {
        Jump: 059048
      }
    } else {
      Jump: 059048
    }
  } else {
    Jump: 059048
  }
LocReturn 059028:
  Jump: 059034
LocOp 059034:
  TraceOperation 059034 (CallN (Floc 076180) [Con 0,Var (Global 31),Con 62,Con 62,Con 0]);
  Let b1 = M[007268];
  Let b2 = M[007269];
  PushFrame;
  PushReturnAddress 059034;
  SetLocal 1 0;
  SetLocal 2 MakeHiLo(b1,b2);
  SetLocal 3 62;
  SetLocal 4 62;
  SetLocal 5 0;
  MakeRoutineFrame 9;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  Jump: 076181
LocReturn 059034:
  TraceOperation 059044 (CallN (Floc 089760) []);
  PushFrame;
  PushReturnAddress 059044;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  SetLocal 1 0;
  Jump: 089761
LocReturn 059044:
  TraceOperation 059047 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 059048:
  TraceOperation 059048 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 059059)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 059052 (CallN (Floc 098228) [Con 14753,Con 1]);
    PushFrame;
    PushReturnAddress 059052;
    SetLocal 1 14753;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 059059
  }
LocReturn 059052:
  Jump: 059059
LocOp 059059:
  TraceOperation 059059 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 059060:
  MakeRoutineFrame 0;
  Jump: 059061
LocOp 059061:
  TraceOperation 059061 (Je [Var (Global 40),Con 46] (Branch F (Dloc 059135)));
  Let b1 = M[007286];
  Let b2 = M[007287];
  if (Equal(MakeHiLo(b1,b2),46)) {
    TraceOperation 059066 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 059135)));
    Let b3 = M[007280];
    Let b4 = M[007281];
    Let b5 = M[007268];
    Let b6 = M[007269];
    if (Equal(MakeHiLo(b3,b4),MakeHiLo(b5,b6))) {
      TraceOperation 059071 (Je [Var (Global 47),Con 62] (Branch F (Dloc 059135)));
      Let b7 = M[007300];
      Let b8 = M[007301];
      if (Equal(MakeHiLo(b7,b8),62)) {
        TraceOperation 059076 (Jz (Var (Global 114)) (Branch T (Dloc 059085)));
        Let b9 = M[007434];
        Let b10 = M[007435];
        if (IsZero(MakeHiLo(b9,b10))) {
          Jump: 059085
        } else {
          TraceOperation 059079 (CallN (Floc 098228) [Con 14765]);
          PushFrame;
          PushReturnAddress 059079;
          SetLocal 1 14765;
          MakeRoutineFrame 2;
          SetLocal 2 0;
          Jump: 098229
        }
      } else {
        Jump: 059135
      }
    } else {
      Jump: 059135
    }
  } else {
    Jump: 059135
  }
LocReturn 059079:
  Jump: 059085
LocOp 059085:
  TraceOperation 059085 (Call (Floc 106316) [Con 1,Con 0,Con 0,Con 1] Sp);
  PushFrame;
  PushReturnAddress 059085;
  SetLocal 1 1;
  SetLocal 2 0;
  SetLocal 3 0;
  SetLocal 4 1;
  MakeRoutineFrame 10;
  SetLocal 10 0;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  Jump: 106317
LocReturn 059085:
  PushStack call_result;
  TraceOperation 059095 (Jz (Var Sp) (Branch T (Dloc 059108)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 059108
  } else {
    TraceOperation 059098 (CallN (Floc 076180) [Con 0,Var (Global 31),Con 62,Con 62,Con 0]);
    Let b2 = M[007268];
    Let b3 = M[007269];
    PushFrame;
    PushReturnAddress 059098;
    SetLocal 1 0;
    SetLocal 2 MakeHiLo(b2,b3);
    SetLocal 3 62;
    SetLocal 4 62;
    SetLocal 5 0;
    MakeRoutineFrame 9;
    SetLocal 9 0;
    SetLocal 8 0;
    SetLocal 7 0;
    SetLocal 6 0;
    Jump: 076181
  }
LocReturn 059098:
  Jump: 059108
LocOp 059108:
  TraceOperation 059108 (Call (Floc 106316) [Con 1,Con 1,Con 0,Con 1] Sp);
  PushFrame;
  PushReturnAddress 059108;
  SetLocal 1 1;
  SetLocal 2 1;
  SetLocal 3 0;
  SetLocal 4 1;
  MakeRoutineFrame 10;
  SetLocal 10 0;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  Jump: 106317
LocReturn 059108:
  PushStack call_result;
  TraceOperation 059118 (Jz (Var Sp) (Branch T (Dloc 059131)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 059131
  } else {
    TraceOperation 059121 (CallN (Floc 076180) [Con 0,Var (Global 31),Con 63,Con 62,Con 0]);
    Let b2 = M[007268];
    Let b3 = M[007269];
    PushFrame;
    PushReturnAddress 059121;
    SetLocal 1 0;
    SetLocal 2 MakeHiLo(b2,b3);
    SetLocal 3 63;
    SetLocal 4 62;
    SetLocal 5 0;
    MakeRoutineFrame 9;
    SetLocal 9 0;
    SetLocal 8 0;
    SetLocal 7 0;
    SetLocal 6 0;
    Jump: 076181
  }
LocReturn 059121:
  Jump: 059131
LocOp 059131:
  TraceOperation 059131 (CallN (Floc 089760) []);
  PushFrame;
  PushReturnAddress 059131;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  SetLocal 1 0;
  Jump: 089761
LocReturn 059131:
  TraceOperation 059134 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 059135:
  TraceOperation 059135 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 059146)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 059139 (CallN (Floc 098228) [Con 14765,Con 1]);
    PushFrame;
    PushReturnAddress 059139;
    SetLocal 1 14765;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 059146
  }
LocReturn 059139:
  Jump: 059146
LocOp 059146:
  TraceOperation 059146 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 059148:
  MakeRoutineFrame 0;
  Jump: 059149
LocOp 059149:
  TraceOperation 059149 (Je [Var (Global 40),Con 63] (Branch F (Dloc 059184)));
  Let b1 = M[007286];
  Let b2 = M[007287];
  if (Equal(MakeHiLo(b1,b2),63)) {
    TraceOperation 059153 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 059184)));
    Let b3 = M[007280];
    Let b4 = M[007281];
    Let b5 = M[007268];
    Let b6 = M[007269];
    if (Equal(MakeHiLo(b3,b4),MakeHiLo(b5,b6))) {
      TraceOperation 059157 (Je [Var (Global 47),Con 52] (Branch F (Dloc 059184)));
      Let b7 = M[007300];
      Let b8 = M[007301];
      if (Equal(MakeHiLo(b7,b8),52)) {
        TraceOperation 059161 (Jz (Var (Global 114)) (Branch T (Dloc 059170)));
        Let b9 = M[007434];
        Let b10 = M[007435];
        if (IsZero(MakeHiLo(b9,b10))) {
          Jump: 059170
        } else {
          TraceOperation 059164 (CallN (Floc 098228) [Con 14787]);
          PushFrame;
          PushReturnAddress 059164;
          SetLocal 1 14787;
          MakeRoutineFrame 2;
          SetLocal 2 0;
          Jump: 098229
        }
      } else {
        Jump: 059184
      }
    } else {
      Jump: 059184
    }
  } else {
    Jump: 059184
  }
LocReturn 059164:
  Jump: 059170
LocOp 059170:
  TraceOperation 059170 (CallN (Floc 076180) [Con 0,Var (Global 31),Con 63,Con 62,Con 0]);
  Let b1 = M[007268];
  Let b2 = M[007269];
  PushFrame;
  PushReturnAddress 059170;
  SetLocal 1 0;
  SetLocal 2 MakeHiLo(b1,b2);
  SetLocal 3 63;
  SetLocal 4 62;
  SetLocal 5 0;
  MakeRoutineFrame 9;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  Jump: 076181
LocReturn 059170:
  TraceOperation 059180 (CallN (Floc 089760) []);
  PushFrame;
  PushReturnAddress 059180;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  SetLocal 1 0;
  Jump: 089761
LocReturn 059180:
  TraceOperation 059183 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 059184:
  TraceOperation 059184 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 059195)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 059188 (CallN (Floc 098228) [Con 14787,Con 1]);
    PushFrame;
    PushReturnAddress 059188;
    SetLocal 1 14787;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 059195
  }
LocReturn 059188:
  Jump: 059195
LocOp 059195:
  TraceOperation 059195 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 059196:
  MakeRoutineFrame 0;
  Jump: 059197
LocOp 059197:
  TraceOperation 059197 (Je [Var (Global 40),Con 62] (Branch F (Dloc 059232)));
  Let b1 = M[007286];
  Let b2 = M[007287];
  if (Equal(MakeHiLo(b1,b2),62)) {
    TraceOperation 059201 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 059232)));
    Let b3 = M[007280];
    Let b4 = M[007281];
    Let b5 = M[007268];
    Let b6 = M[007269];
    if (Equal(MakeHiLo(b3,b4),MakeHiLo(b5,b6))) {
      TraceOperation 059205 (Je [Var (Global 47),Con 52] (Branch F (Dloc 059232)));
      Let b7 = M[007300];
      Let b8 = M[007301];
      if (Equal(MakeHiLo(b7,b8),52)) {
        TraceOperation 059209 (Jz (Var (Global 114)) (Branch T (Dloc 059218)));
        Let b9 = M[007434];
        Let b10 = M[007435];
        if (IsZero(MakeHiLo(b9,b10))) {
          Jump: 059218
        } else {
          TraceOperation 059212 (CallN (Floc 098228) [Con 14799]);
          PushFrame;
          PushReturnAddress 059212;
          SetLocal 1 14799;
          MakeRoutineFrame 2;
          SetLocal 2 0;
          Jump: 098229
        }
      } else {
        Jump: 059232
      }
    } else {
      Jump: 059232
    }
  } else {
    Jump: 059232
  }
LocReturn 059212:
  Jump: 059218
LocOp 059218:
  TraceOperation 059218 (CallN (Floc 076180) [Con 0,Var (Global 31),Con 62,Con 62,Con 0]);
  Let b1 = M[007268];
  Let b2 = M[007269];
  PushFrame;
  PushReturnAddress 059218;
  SetLocal 1 0;
  SetLocal 2 MakeHiLo(b1,b2);
  SetLocal 3 62;
  SetLocal 4 62;
  SetLocal 5 0;
  MakeRoutineFrame 9;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  Jump: 076181
LocReturn 059218:
  TraceOperation 059228 (CallN (Floc 089760) []);
  PushFrame;
  PushReturnAddress 059228;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  SetLocal 1 0;
  Jump: 089761
LocReturn 059228:
  TraceOperation 059231 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 059232:
  TraceOperation 059232 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 059243)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 059236 (CallN (Floc 098228) [Con 14799,Con 1]);
    PushFrame;
    PushReturnAddress 059236;
    SetLocal 1 14799;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 059243
  }
LocReturn 059236:
  Jump: 059243
LocOp 059243:
  TraceOperation 059243 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 059244:
  MakeRoutineFrame 0;
  Jump: 059245
LocOp 059245:
  TraceOperation 059245 (Je [Var (Global 40),Con 64] (Branch F (Dloc 059317)));
  Let b1 = M[007286];
  Let b2 = M[007287];
  if (Equal(MakeHiLo(b1,b2),64)) {
    TraceOperation 059250 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 059317)));
    Let b3 = M[007280];
    Let b4 = M[007281];
    Let b5 = M[007268];
    Let b6 = M[007269];
    if (Equal(MakeHiLo(b3,b4),MakeHiLo(b5,b6))) {
      TraceOperation 059255 (Je [Var (Global 47),Con 51] (Branch F (Dloc 059317)));
      Let b7 = M[007300];
      Let b8 = M[007301];
      if (Equal(MakeHiLo(b7,b8),51)) {
        TraceOperation 059259 (Jz (Var (Global 114)) (Branch T (Dloc 059268)));
        Let b9 = M[007434];
        Let b10 = M[007435];
        if (IsZero(MakeHiLo(b9,b10))) {
          Jump: 059268
        } else {
          TraceOperation 059262 (CallN (Floc 098228) [Con 14811]);
          PushFrame;
          PushReturnAddress 059262;
          SetLocal 1 14811;
          MakeRoutineFrame 2;
          SetLocal 2 0;
          Jump: 098229
        }
      } else {
        Jump: 059317
      }
    } else {
      Jump: 059317
    }
  } else {
    Jump: 059317
  }
LocReturn 059262:
  Jump: 059268
LocOp 059268:
  TraceOperation 059268 (Store (Con 20) (Con 1));
  SetByte 007214 0;
  SetByte 007215 1;
  TraceOperation 059271 (CallN (Floc 080952) [Con -31486]);
  PushFrame;
  PushReturnAddress 059271;
  SetLocal 1 -31486;
  MakeRoutineFrame 1;
  Jump: 080953
LocReturn 059271:
  TraceOperation 059277 (CallN (Floc 056692) []);
  PushFrame;
  PushReturnAddress 059277;
  MakeRoutineFrame 0;
  Jump: 056693
LocReturn 059277:
  TraceOperation 059280 (CallN (Floc 080952) [Con -31915]);
  PushFrame;
  PushReturnAddress 059280;
  SetLocal 1 -31915;
  MakeRoutineFrame 1;
  Jump: 080953
LocReturn 059280:
  TraceOperation 059286 (Call (Floc 088436) [Con 51,Con 84] Sp);
  PushFrame;
  PushReturnAddress 059286;
  SetLocal 1 51;
  SetLocal 2 84;
  MakeRoutineFrame 2;
  Jump: 088437
LocReturn 059286:
  PushStack call_result;
  TraceOperation 059293 (Je [Var Sp,Con 5] (Branch T (Dloc 059300)));
  PopStack popped1;
  if (Equal(popped1,5)) {
    Jump: 059300
  } else {
    TraceOperation 059297 (Jump 059306);
    Jump: 059306
  }
LocOp 059300:
  TraceOperation 059300 (CallN (Floc 080952) [Con -31851]);
  PushFrame;
  PushReturnAddress 059300;
  SetLocal 1 -31851;
  MakeRoutineFrame 1;
  Jump: 080953
LocReturn 059300:
  Jump: 059306
LocOp 059306:
  TraceOperation 059306 (CallN (Floc 080952) [Con -31842]);
  PushFrame;
  PushReturnAddress 059306;
  SetLocal 1 -31842;
  MakeRoutineFrame 1;
  Jump: 080953
LocReturn 059306:
  TraceOperation 059312 New_line;
  GamePrint "\n";
  TraceOperation 059313 (CallN (Floc 089760) []);
  PushFrame;
  PushReturnAddress 059313;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  SetLocal 1 0;
  Jump: 089761
LocReturn 059313:
  TraceOperation 059316 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 059317:
  TraceOperation 059317 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 059328)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 059321 (CallN (Floc 098228) [Con 14811,Con 1]);
    PushFrame;
    PushReturnAddress 059321;
    SetLocal 1 14811;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 059328
  }
LocReturn 059321:
  Jump: 059328
LocOp 059328:
  TraceOperation 059328 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 059332:
  MakeRoutineFrame 0;
  Jump: 059333
LocOp 059333:
  TraceOperation 059333 (Je [Var (Global 40),Con 64] (Branch F (Dloc 059368)));
  Let b1 = M[007286];
  Let b2 = M[007287];
  if (Equal(MakeHiLo(b1,b2),64)) {
    TraceOperation 059337 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 059368)));
    Let b3 = M[007280];
    Let b4 = M[007281];
    Let b5 = M[007268];
    Let b6 = M[007269];
    if (Equal(MakeHiLo(b3,b4),MakeHiLo(b5,b6))) {
      TraceOperation 059341 (Je [Var (Global 47),Con 69] (Branch F (Dloc 059368)));
      Let b7 = M[007300];
      Let b8 = M[007301];
      if (Equal(MakeHiLo(b7,b8),69)) {
        TraceOperation 059345 (Jz (Var (Global 114)) (Branch T (Dloc 059354)));
        Let b9 = M[007434];
        Let b10 = M[007435];
        if (IsZero(MakeHiLo(b9,b10))) {
          Jump: 059354
        } else {
          TraceOperation 059348 (CallN (Floc 098228) [Con 14833]);
          PushFrame;
          PushReturnAddress 059348;
          SetLocal 1 14833;
          MakeRoutineFrame 2;
          SetLocal 2 0;
          Jump: 098229
        }
      } else {
        Jump: 059368
      }
    } else {
      Jump: 059368
    }
  } else {
    Jump: 059368
  }
LocReturn 059348:
  Jump: 059354
LocOp 059354:
  TraceOperation 059354 (Store (Con 20) (Con 1));
  SetByte 007214 0;
  SetByte 007215 1;
  TraceOperation 059357 (CallN (Floc 080952) [Con -31593]);
  PushFrame;
  PushReturnAddress 059357;
  SetLocal 1 -31593;
  MakeRoutineFrame 1;
  Jump: 080953
LocReturn 059357:
  TraceOperation 059363 New_line;
  GamePrint "\n";
  TraceOperation 059364 (CallN (Floc 089760) []);
  PushFrame;
  PushReturnAddress 059364;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  SetLocal 1 0;
  Jump: 089761
LocReturn 059364:
  TraceOperation 059367 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 059368:
  TraceOperation 059368 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 059379)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 059372 (CallN (Floc 098228) [Con 14833,Con 1]);
    PushFrame;
    PushReturnAddress 059372;
    SetLocal 1 14833;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 059379
  }
LocReturn 059372:
  Jump: 059379
LocOp 059379:
  TraceOperation 059379 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 059380:
  MakeRoutineFrame 0;
  Jump: 059381
LocOp 059381:
  TraceOperation 059381 (Call (Floc 106584) [] Sp);
  PushFrame;
  PushReturnAddress 059381;
  MakeRoutineFrame 0;
  Jump: 106585
LocReturn 059381:
  PushStack call_result;
  TraceOperation 059385 (Jz (Var Sp) (Branch T (Dloc 059440)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 059440
  } else {
    TraceOperation 059388 (Loadw (Con 19826) (Con 1) Sp);
    Let b2 = M[019828];
    Let b3 = M[019829];
    PushStack MakeHiLo(b2,b3);
    TraceOperation 059394 (Je [Var Sp,Con 1] (Branch F (Dloc 059440)));
    PopStack popped4;
    if (Equal(popped4,1)) {
      TraceOperation 059398 (Loadw (Con 19832) (Con 1) Sp);
      Let b5 = M[019834];
      Let b6 = M[019835];
      PushStack MakeHiLo(b5,b6);
      TraceOperation 059404 (Jg (Var Sp) (Con 0) (Branch F (Dloc 059440)));
      PopStack popped7;
      if (GreaterThan(popped7,0)) {
        TraceOperation 059408 (Jz (Var (Global 114)) (Branch T (Dloc 059417)));
        Let b8 = M[007434];
        Let b9 = M[007435];
        if (IsZero(MakeHiLo(b8,b9))) {
          Jump: 059417
        } else {
          TraceOperation 059411 (CallN (Floc 098228) [Con 14845]);
          PushFrame;
          PushReturnAddress 059411;
          SetLocal 1 14845;
          MakeRoutineFrame 2;
          SetLocal 2 0;
          Jump: 098229
        }
      } else {
        Jump: 059440
      }
    } else {
      Jump: 059440
    }
  }
LocReturn 059411:
  Jump: 059417
LocOp 059417:
  TraceOperation 059417 (Store (Con 20) (Con 1));
  SetByte 007214 0;
  SetByte 007215 1;
  TraceOperation 059420 (CallN (Floc 080952) [Con -31719]);
  PushFrame;
  PushReturnAddress 059420;
  SetLocal 1 -31719;
  MakeRoutineFrame 1;
  Jump: 080953
LocReturn 059420:
  TraceOperation 059426 New_line;
  GamePrint "\n";
  TraceOperation 059427 (CallN (Floc 103224) [Con 68,Con 67,Con 0,Con 0]);
  PushFrame;
  PushReturnAddress 059427;
  SetLocal 1 68;
  SetLocal 2 67;
  SetLocal 3 0;
  SetLocal 4 0;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  Jump: 103225
LocReturn 059427:
  TraceOperation 059436 (CallN (Floc 089744) []);
  PushFrame;
  PushReturnAddress 059436;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  SetLocal 1 0;
  Jump: 089745
LocReturn 059436:
  TraceOperation 059439 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 059440:
  TraceOperation 059440 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 059451)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 059444 (CallN (Floc 098228) [Con 14845,Con 1]);
    PushFrame;
    PushReturnAddress 059444;
    SetLocal 1 14845;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 059451
  }
LocReturn 059444:
  Jump: 059451
LocOp 059451:
  TraceOperation 059451 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 059452:
  MakeRoutineFrame 0;
  Jump: 059453
LocOp 059453:
  TraceOperation 059453 (Je [Var (Global 40),Con 26] (Branch F (Dloc 059497)));
  Let b1 = M[007286];
  Let b2 = M[007287];
  if (Equal(MakeHiLo(b1,b2),26)) {
    TraceOperation 059457 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 059497)));
    Let b3 = M[007280];
    Let b4 = M[007281];
    Let b5 = M[007268];
    Let b6 = M[007269];
    if (Equal(MakeHiLo(b3,b4),MakeHiLo(b5,b6))) {
      TraceOperation 059461 (Call (Floc 079724) [Con 20007,Con 1] Sp);
      PushFrame;
      PushReturnAddress 059461;
      SetLocal 1 20007;
      SetLocal 2 1;
      MakeRoutineFrame 3;
      SetLocal 3 0;
      Jump: 079725
    } else {
      Jump: 059497
    }
  } else {
    Jump: 059497
  }
LocReturn 059461:
  PushStack call_result;
  TraceOperation 059469 (Loadw (Con 16625) (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(016625,Mul(2,popped1))];
  Let b3 = M[Offset(Offset(016625,Mul(2,popped1)),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 059475 (Je [Var Sp,Con 71] (Branch F (Dloc 059497)));
  PopStack popped4;
  if (Equal(popped4,71)) {
    TraceOperation 059479 (Jz (Var (Global 114)) (Branch T (Dloc 059488)));
    Let b5 = M[007434];
    Let b6 = M[007435];
    if (IsZero(MakeHiLo(b5,b6))) {
      Jump: 059488
    } else {
      TraceOperation 059482 (CallN (Floc 098228) [Con 14863]);
      PushFrame;
      PushReturnAddress 059482;
      SetLocal 1 14863;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 059497
  }
LocReturn 059482:
  Jump: 059488
LocOp 059488:
  TraceOperation 059488 (Store (Con 37) (Con -31701));
  SetByte 007248 132;
  SetByte 007249 43;
  TraceOperation 059493 (CallN (Floc 089744) []);
  PushFrame;
  PushReturnAddress 059493;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  SetLocal 1 0;
  Jump: 089745
LocReturn 059493:
  TraceOperation 059496 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 059497:
  TraceOperation 059497 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 059508)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 059501 (CallN (Floc 098228) [Con 14863,Con 1]);
    PushFrame;
    PushReturnAddress 059501;
    SetLocal 1 14863;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 059508
  }
LocReturn 059501:
  Jump: 059508
LocOp 059508:
  TraceOperation 059508 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 059512:
  MakeRoutineFrame 0;
  Jump: 059513
LocOp 059513:
  TraceOperation 059513 (Je [Var (Global 40),Con 21] (Branch F (Dloc 059567)));
  Let b1 = M[007286];
  Let b2 = M[007287];
  if (Equal(MakeHiLo(b1,b2),21)) {
    TraceOperation 059517 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 059567)));
    Let b3 = M[007280];
    Let b4 = M[007281];
    Let b5 = M[007268];
    Let b6 = M[007269];
    if (Equal(MakeHiLo(b3,b4),MakeHiLo(b5,b6))) {
      TraceOperation 059521 (Je [Var (Global 47),Con 65] (Branch F (Dloc 059567)));
      Let b7 = M[007300];
      Let b8 = M[007301];
      if (Equal(MakeHiLo(b7,b8),65)) {
        TraceOperation 059525 (Jz (Var (Global 114)) (Branch T (Dloc 059534)));
        Let b9 = M[007434];
        Let b10 = M[007435];
        if (IsZero(MakeHiLo(b9,b10))) {
          Jump: 059534
        } else {
          TraceOperation 059528 (CallN (Floc 098228) [Con 14878]);
          PushFrame;
          PushReturnAddress 059528;
          SetLocal 1 14878;
          MakeRoutineFrame 2;
          SetLocal 2 0;
          Jump: 098229
        }
      } else {
        Jump: 059567
      }
    } else {
      Jump: 059567
    }
  } else {
    Jump: 059567
  }
LocReturn 059528:
  Jump: 059534
LocOp 059534:
  TraceOperation 059534 (Call (Floc 102384) [Con 42] Sp);
  PushFrame;
  PushReturnAddress 059534;
  SetLocal 1 42;
  MakeRoutineFrame 1;
  Jump: 102385
LocReturn 059534:
  PushStack call_result;
  TraceOperation 059540 (Je [Var (Global 31),Var Sp] (Branch F (Dloc 059553)));
  Let b1 = M[007268];
  Let b2 = M[007269];
  PopStack popped3;
  if (Equal(MakeHiLo(b1,b2),popped3)) {
    TraceOperation 059544 (CallN (Floc 103224) [Con 42,Con 65,Con 0,Con 0]);
    PushFrame;
    PushReturnAddress 059544;
    SetLocal 1 42;
    SetLocal 2 65;
    SetLocal 3 0;
    SetLocal 4 0;
    MakeRoutineFrame 5;
    SetLocal 5 0;
    Jump: 103225
  } else {
    Jump: 059553
  }
LocReturn 059544:
  Jump: 059553
LocOp 059553:
  TraceOperation 059553 (Store (Con 20) (Con 1));
  SetByte 007214 0;
  SetByte 007215 1;
  TraceOperation 059556 (CallN (Floc 080952) [Con -31297]);
  PushFrame;
  PushReturnAddress 059556;
  SetLocal 1 -31297;
  MakeRoutineFrame 1;
  Jump: 080953
LocReturn 059556:
  TraceOperation 059562 New_line;
  GamePrint "\n";
  TraceOperation 059563 (CallN (Floc 089744) []);
  PushFrame;
  PushReturnAddress 059563;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  SetLocal 1 0;
  Jump: 089745
LocReturn 059563:
  TraceOperation 059566 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 059567:
  TraceOperation 059567 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 059578)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 059571 (CallN (Floc 098228) [Con 14878,Con 1]);
    PushFrame;
    PushReturnAddress 059571;
    SetLocal 1 14878;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 059578
  }
LocReturn 059571:
  Jump: 059578
LocOp 059578:
  TraceOperation 059578 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 059580:
  MakeRoutineFrame 0;
  Jump: 059581
LocOp 059581:
  TraceOperation 059581 (Je [Var (Global 40),Con 20] (Branch F (Dloc 059621)));
  Let b1 = M[007286];
  Let b2 = M[007287];
  if (Equal(MakeHiLo(b1,b2),20)) {
    TraceOperation 059585 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 059621)));
    Let b3 = M[007280];
    Let b4 = M[007281];
    Let b5 = M[007268];
    Let b6 = M[007269];
    if (Equal(MakeHiLo(b3,b4),MakeHiLo(b5,b6))) {
      TraceOperation 059589 (Je [Var (Global 47),Con 61] (Branch F (Dloc 059621)));
      Let b7 = M[007300];
      Let b8 = M[007301];
      if (Equal(MakeHiLo(b7,b8),61)) {
        TraceOperation 059593 (Jz (Var (Global 114)) (Branch T (Dloc 059602)));
        Let b9 = M[007434];
        Let b10 = M[007435];
        if (IsZero(MakeHiLo(b9,b10))) {
          Jump: 059602
        } else {
          TraceOperation 059596 (CallN (Floc 098228) [Con 14895]);
          PushFrame;
          PushReturnAddress 059596;
          SetLocal 1 14895;
          MakeRoutineFrame 2;
          SetLocal 2 0;
          Jump: 098229
        }
      } else {
        Jump: 059621
      }
    } else {
      Jump: 059621
    }
  } else {
    Jump: 059621
  }
LocReturn 059596:
  Jump: 059602
LocOp 059602:
  TraceOperation 059602 (Store (Con 20) (Con 1));
  SetByte 007214 0;
  SetByte 007215 1;
  TraceOperation 059605 (CallN (Floc 080952) [Con -31276]);
  PushFrame;
  PushReturnAddress 059605;
  SetLocal 1 -31276;
  MakeRoutineFrame 1;
  Jump: 080953
LocReturn 059605:
  TraceOperation 059611 New_line;
  GamePrint "\n";
  TraceOperation 059612 (Store (Con 37) (Con -31555));
  SetByte 007248 132;
  SetByte 007249 189;
  TraceOperation 059617 (CallN (Floc 089744) []);
  PushFrame;
  PushReturnAddress 059617;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  SetLocal 1 0;
  Jump: 089745
LocReturn 059617:
  TraceOperation 059620 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 059621:
  TraceOperation 059621 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 059632)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 059625 (CallN (Floc 098228) [Con 14895,Con 1]);
    PushFrame;
    PushReturnAddress 059625;
    SetLocal 1 14895;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 059632
  }
LocReturn 059625:
  Jump: 059632
LocOp 059632:
  TraceOperation 059632 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 059636:
  MakeRoutineFrame 0;
  Jump: 059637
LocOp 059637:
  TraceOperation 059637 (Je [Var (Global 40),Con 64] (Branch F (Dloc 059682)));
  Let b1 = M[007286];
  Let b2 = M[007287];
  if (Equal(MakeHiLo(b1,b2),64)) {
    TraceOperation 059641 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 059682)));
    Let b3 = M[007280];
    Let b4 = M[007281];
    Let b5 = M[007268];
    Let b6 = M[007269];
    if (Equal(MakeHiLo(b3,b4),MakeHiLo(b5,b6))) {
      TraceOperation 059645 (Call (Floc 026172) [Var (Global 47),Con 14] Sp);
      Let b7 = M[007300];
      Let b8 = M[007301];
      PushFrame;
      PushReturnAddress 059645;
      SetLocal 1 MakeHiLo(b7,b8);
      SetLocal 2 14;
      MakeRoutineFrame 6;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      SetLocal 3 0;
      Jump: 026173
    } else {
      Jump: 059682
    }
  } else {
    Jump: 059682
  }
LocReturn 059645:
  PushStack call_result;
  TraceOperation 059652 (Jz (Var Sp) (Branch T (Dloc 059682)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 059682
  } else {
    TraceOperation 059655 (Call (Floc 102992) [Var (Global 47)] Sp);
    Let b2 = M[007300];
    Let b3 = M[007301];
    PushFrame;
    PushReturnAddress 059655;
    SetLocal 1 MakeHiLo(b2,b3);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 102993
  }
LocReturn 059655:
  PushStack call_result;
  TraceOperation 059661 (Je [Var (Global 31),Var Sp] (Branch F (Dloc 059682)));
  Let b1 = M[007268];
  Let b2 = M[007269];
  PopStack popped3;
  if (Equal(MakeHiLo(b1,b2),popped3)) {
    TraceOperation 059665 (Jz (Var (Global 114)) (Branch T (Dloc 059674)));
    Let b4 = M[007434];
    Let b5 = M[007435];
    if (IsZero(MakeHiLo(b4,b5))) {
      Jump: 059674
    } else {
      TraceOperation 059668 (CallN (Floc 098228) [Con 14909]);
      PushFrame;
      PushReturnAddress 059668;
      SetLocal 1 14909;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 059682
  }
LocReturn 059668:
  Jump: 059674
LocOp 059674:
  TraceOperation 059674 (CallN (Floc 089744) [Con 1,Con 29348]);
  PushFrame;
  PushReturnAddress 059674;
  SetLocal 1 1;
  SetLocal 2 29348;
  MakeRoutineFrame 2;
  Jump: 089745
LocReturn 059674:
  TraceOperation 059681 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 059682:
  TraceOperation 059682 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 059693)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 059686 (CallN (Floc 098228) [Con 14909,Con 1]);
    PushFrame;
    PushReturnAddress 059686;
    SetLocal 1 14909;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 059693
  }
LocReturn 059686:
  Jump: 059693
LocOp 059693:
  TraceOperation 059693 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 059696:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 059697
LocOp 059697:
  TraceOperation 059697 (Store (Con 1) (Var (Global 11)));
  Let b1 = M[007228];
  Let b2 = M[007229];
  SetLocal 1 MakeHiLo(b1,b2);
  TraceOperation 059700 (Call (Floc 026172) [Var (Global 11),Con 14] Sp);
  Let b3 = M[007228];
  Let b4 = M[007229];
  PushFrame;
  PushReturnAddress 059700;
  SetLocal 1 MakeHiLo(b3,b4);
  SetLocal 2 14;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 059700:
  PushStack call_result;
  TraceOperation 059707 (Jz (Var Sp) (Branch F (Dloc 059716)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 059710 (Push (Con 0));
    PushStack 0;
    TraceOperation 059713 (Jump 059719);
    Jump: 059719
  } else {
    Jump: 059716
  }
LocOp 059716:
  TraceOperation 059716 (Push (Con 1));
  PushStack 1;
  Jump: 059719
LocOp 059719:
  TraceOperation 059719 (Jz (Var Sp) (Branch T (Dloc 059740)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 059740
  } else {
    TraceOperation 059722 (Jz (Var (Global 114)) (Branch T (Dloc 059731)));
    Let b2 = M[007434];
    Let b3 = M[007435];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 059731
    } else {
      TraceOperation 059725 (CallN (Floc 098228) [Con 14924]);
      PushFrame;
      PushReturnAddress 059725;
      SetLocal 1 14924;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  }
LocReturn 059725:
  Jump: 059731
LocOp 059731:
  TraceOperation 059731 (CallN (Floc 088364) [Var (Local 1),Con 30]);
  PushFrame;
  PushReturnAddress 059731;
  SetLocal 1 GetLocal(1);
  SetLocal 2 30;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 088365
LocReturn 059731:
  TraceOperation 059737 (Jump 059751);
  Jump: 059751
LocOp 059740:
  TraceOperation 059740 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 059751)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 059744 (CallN (Floc 098228) [Con 14924,Con 1]);
    PushFrame;
    PushReturnAddress 059744;
    SetLocal 1 14924;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 059751
  }
LocReturn 059744:
  Jump: 059751
LocOp 059751:
  TraceOperation 059751 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 059752:
  MakeRoutineFrame 0;
  Jump: 059753
LocOp 059753:
  TraceOperation 059753 (Call (Floc 078688) [Con 4] Sp);
  PushFrame;
  PushReturnAddress 059753;
  SetLocal 1 4;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 078689
LocReturn 059753:
  PushStack call_result;
  TraceOperation 059759 (Jz (Var Sp) (Branch T (Dloc 059803)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 059803
  } else {
    TraceOperation 059762 (Call (Floc 026172) [Var (Global 11),Con 14] Sp);
    Let b2 = M[007228];
    Let b3 = M[007229];
    PushFrame;
    PushReturnAddress 059762;
    SetLocal 1 MakeHiLo(b2,b3);
    SetLocal 2 14;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  }
LocReturn 059762:
  PushStack call_result;
  TraceOperation 059769 (Jz (Var Sp) (Branch T (Dloc 059800)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 059800
  } else {
    TraceOperation 059772 (Call (Floc 088304) [Var (Global 11),Con 36] Sp);
    Let b2 = M[007228];
    Let b3 = M[007229];
    PushFrame;
    PushReturnAddress 059772;
    SetLocal 1 MakeHiLo(b2,b3);
    SetLocal 2 36;
    MakeRoutineFrame 2;
    Jump: 088305
  }
LocReturn 059772:
  PushStack call_result;
  TraceOperation 059779 (Jz (Var Sp) (Branch T (Dloc 059800)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 059800
  } else {
    TraceOperation 059782 (Jz (Var (Global 114)) (Branch T (Dloc 059791)));
    Let b2 = M[007434];
    Let b3 = M[007435];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 059791
    } else {
      TraceOperation 059785 (CallN (Floc 098228) [Con 14938]);
      PushFrame;
      PushReturnAddress 059785;
      SetLocal 1 14938;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  }
LocReturn 059785:
  Jump: 059791
LocOp 059791:
  TraceOperation 059791 (Store (Con 20) (Con 1));
  SetByte 007214 0;
  SetByte 007215 1;
  TraceOperation 059794 (CallN (Floc 080952) [Con -31943]);
  PushFrame;
  PushReturnAddress 059794;
  SetLocal 1 -31943;
  MakeRoutineFrame 1;
  Jump: 080953
LocReturn 059794:
  Jump: 059800
LocOp 059800:
  TraceOperation 059800 (Jump 059814);
  Jump: 059814
LocOp 059803:
  TraceOperation 059803 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 059814)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 059807 (CallN (Floc 098228) [Con 14938,Con 1]);
    PushFrame;
    PushReturnAddress 059807;
    SetLocal 1 14938;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 059814
  }
LocReturn 059807:
  Jump: 059814
LocOp 059814:
  TraceOperation 059814 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 059816:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 059817
LocOp 059817:
  TraceOperation 059817 (Store (Con 1) (Var (Global 11)));
  Let b1 = M[007228];
  Let b2 = M[007229];
  SetLocal 1 MakeHiLo(b1,b2);
  TraceOperation 059820 (Call (Floc 026172) [Var (Global 11),Con 14] Sp);
  Let b3 = M[007228];
  Let b4 = M[007229];
  PushFrame;
  PushReturnAddress 059820;
  SetLocal 1 MakeHiLo(b3,b4);
  SetLocal 2 14;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 059820:
  PushStack call_result;
  TraceOperation 059827 (Jz (Var Sp) (Branch F (Dloc 059836)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 059830 (Push (Con 0));
    PushStack 0;
    TraceOperation 059833 (Jump 059839);
    Jump: 059839
  } else {
    Jump: 059836
  }
LocOp 059836:
  TraceOperation 059836 (Push (Con 1));
  PushStack 1;
  Jump: 059839
LocOp 059839:
  TraceOperation 059839 (Jz (Var Sp) (Branch T (Dloc 059882)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 059882
  } else {
    TraceOperation 059842 (Jz (Var (Global 114)) (Branch T (Dloc 059851)));
    Let b2 = M[007434];
    Let b3 = M[007435];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 059851
    } else {
      TraceOperation 059845 (CallN (Floc 098228) [Con 14954]);
      PushFrame;
      PushReturnAddress 059845;
      SetLocal 1 14954;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  }
LocReturn 059845:
  Jump: 059851
LocOp 059851:
  TraceOperation 059851 (Store (Con 20) (Con 1));
  SetByte 007214 0;
  SetByte 007215 1;
  TraceOperation 059854 (Push (Var (Global 235)));
  Let b1 = M[007676];
  Let b2 = M[007677];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 059857 (Store (Con 251) (Var (Local 1)));
  SetByte 007676 HiByte(GetLocal(1));
  SetByte 007677 LoByte(GetLocal(1));
  TraceOperation 059860 (Push (Var (Global 235)));
  Let b3 = M[007676];
  Let b4 = M[007677];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 059863 (Call (Floc 088436) [Var Sp,Con 31] Sp);
  PopStack popped5;
  PushFrame;
  PushReturnAddress 059863;
  SetLocal 1 popped5;
  SetLocal 2 31;
  MakeRoutineFrame 2;
  Jump: 088437
LocReturn 059863:
  PushStack call_result;
  TraceOperation 059870 (CallN (Floc 080952) [Var Sp]);
  PopStack popped1;
  PushFrame;
  PushReturnAddress 059870;
  SetLocal 1 popped1;
  MakeRoutineFrame 1;
  Jump: 080953
LocReturn 059870:
  TraceOperation 059875 (Pull (Con 251));
  PopStack popped1;
  SetByte 007676 HiByte(popped1);
  SetByte 007677 LoByte(popped1);
  TraceOperation 059878 (CallN (Floc 089744) []);
  PushFrame;
  PushReturnAddress 059878;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  SetLocal 1 0;
  Jump: 089745
LocReturn 059878:
  TraceOperation 059881 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 059882:
  TraceOperation 059882 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 059893)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 059886 (CallN (Floc 098228) [Con 14954,Con 1]);
    PushFrame;
    PushReturnAddress 059886;
    SetLocal 1 14954;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 059893
  }
LocReturn 059886:
  Jump: 059893
LocOp 059893:
  TraceOperation 059893 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 059896:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 059897
LocOp 059897:
  TraceOperation 059897 (Store (Con 1) (Var (Global 11)));
  Let b1 = M[007228];
  Let b2 = M[007229];
  SetLocal 1 MakeHiLo(b1,b2);
  TraceOperation 059900 (Call (Floc 026172) [Var (Global 11),Con 14] Sp);
  Let b3 = M[007228];
  Let b4 = M[007229];
  PushFrame;
  PushReturnAddress 059900;
  SetLocal 1 MakeHiLo(b3,b4);
  SetLocal 2 14;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 059900:
  PushStack call_result;
  TraceOperation 059907 (Jz (Var Sp) (Branch F (Dloc 059916)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 059910 (Push (Con 0));
    PushStack 0;
    TraceOperation 059913 (Jump 059919);
    Jump: 059919
  } else {
    Jump: 059916
  }
LocOp 059916:
  TraceOperation 059916 (Push (Con 1));
  PushStack 1;
  Jump: 059919
LocOp 059919:
  TraceOperation 059919 (Jz (Var Sp) (Branch T (Dloc 059961)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 059961
  } else {
    TraceOperation 059922 (Jz (Var (Global 114)) (Branch T (Dloc 059931)));
    Let b2 = M[007434];
    Let b3 = M[007435];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 059931
    } else {
      TraceOperation 059925 (CallN (Floc 098228) [Con 14974]);
      PushFrame;
      PushReturnAddress 059925;
      SetLocal 1 14974;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  }
LocReturn 059925:
  Jump: 059931
LocOp 059931:
  TraceOperation 059931 (Store (Con 20) (Con 1));
  SetByte 007214 0;
  SetByte 007215 1;
  TraceOperation 059934 (Store (Con 22) (Var (Global 98)));
  Let b1 = M[007402];
  Let b2 = M[007403];
  SetByte 007218 b1;
  SetByte 007219 b2;
  TraceOperation 059937 (Push (Var (Global 6)));
  Let b3 = M[007218];
  Let b4 = M[007219];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 059940 (CallN (Floc 080944) [Var Sp]);
  PopStack popped5;
  PushFrame;
  PushReturnAddress 059940;
  SetLocal 1 popped5;
  MakeRoutineFrame 1;
  Jump: 080945
LocReturn 059940:
  TraceOperation 059945 (CallN (Floc 080952) [Con -31944]);
  PushFrame;
  PushReturnAddress 059945;
  SetLocal 1 -31944;
  MakeRoutineFrame 1;
  Jump: 080953
LocReturn 059945:
  TraceOperation 059951 (CallN (Floc 078824) [Con 1,Var (Local 1)]);
  PushFrame;
  PushReturnAddress 059951;
  SetLocal 1 1;
  SetLocal 2 GetLocal(1);
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 078825
LocReturn 059951:
  TraceOperation 059957 (CallN (Floc 089744) []);
  PushFrame;
  PushReturnAddress 059957;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  SetLocal 1 0;
  Jump: 089745
LocReturn 059957:
  TraceOperation 059960 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 059961:
  TraceOperation 059961 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 059972)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 059965 (CallN (Floc 098228) [Con 14974,Con 1]);
    PushFrame;
    PushReturnAddress 059965;
    SetLocal 1 14974;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 059972
  }
LocReturn 059965:
  Jump: 059972
LocOp 059972:
  TraceOperation 059972 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 059976:
  MakeRoutineFrame 0;
  Jump: 059977
LocOp 059977:
  TraceOperation 059977 (CallN (Floc 076180) [Con 0,Var (Global 31),Con 7,Con 0,Con 0]);
  Let b1 = M[007268];
  Let b2 = M[007269];
  PushFrame;
  PushReturnAddress 059977;
  SetLocal 1 0;
  SetLocal 2 MakeHiLo(b1,b2);
  SetLocal 3 7;
  SetLocal 4 0;
  SetLocal 5 0;
  MakeRoutineFrame 9;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  Jump: 076181
LocReturn 059977:
  TraceOperation 059987 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 059988:
  MakeRoutineFrame 0;
  Jump: 059989
LocOp 059989:
  TraceOperation 059989 (Je [Var (Global 40),Con 57] (Branch F (Dloc 060012)));
  Let b1 = M[007286];
  Let b2 = M[007287];
  if (Equal(MakeHiLo(b1,b2),57)) {
    TraceOperation 059993 (Jz (Var (Global 36)) (Branch F (Dloc 060012)));
    Let b3 = M[007278];
    Let b4 = M[007279];
    if (IsZero(MakeHiLo(b3,b4))) {
      TraceOperation 059996 (Jz (Var (Global 114)) (Branch T (Dloc 060005)));
      Let b5 = M[007434];
      Let b6 = M[007435];
      if (IsZero(MakeHiLo(b5,b6))) {
        Jump: 060005
      } else {
        TraceOperation 059999 (CallN (Floc 098228) [Con 14997]);
        PushFrame;
        PushReturnAddress 059999;
        SetLocal 1 14997;
        MakeRoutineFrame 2;
        SetLocal 2 0;
        Jump: 098229
      }
    } else {
      Jump: 060012
    }
  } else {
    Jump: 060012
  }
LocReturn 059999:
  Jump: 060005
LocOp 060005:
  TraceOperation 060005 (Store (Con 63) (Var (Global 32)));
  Let b1 = M[007270];
  Let b2 = M[007271];
  SetByte 007300 b1;
  SetByte 007301 b2;
  TraceOperation 060008 (CallN (Floc 089744) []);
  PushFrame;
  PushReturnAddress 060008;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  SetLocal 1 0;
  Jump: 089745
LocReturn 060008:
  TraceOperation 060011 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 060012:
  TraceOperation 060012 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 060023)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 060016 (CallN (Floc 098228) [Con 14997,Con 1]);
    PushFrame;
    PushReturnAddress 060016;
    SetLocal 1 14997;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 060023
  }
LocReturn 060016:
  Jump: 060023
LocOp 060023:
  TraceOperation 060023 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 060024:
  MakeRoutineFrame 0;
  Jump: 060025
LocOp 060025:
  TraceOperation 060025 (Je [Var (Global 40),Con 31] (Branch F (Dloc 060048)));
  Let b1 = M[007286];
  Let b2 = M[007287];
  if (Equal(MakeHiLo(b1,b2),31)) {
    TraceOperation 060029 (Jz (Var (Global 36)) (Branch F (Dloc 060048)));
    Let b3 = M[007278];
    Let b4 = M[007279];
    if (IsZero(MakeHiLo(b3,b4))) {
      TraceOperation 060032 (Jz (Var (Global 114)) (Branch T (Dloc 060041)));
      Let b5 = M[007434];
      Let b6 = M[007435];
      if (IsZero(MakeHiLo(b5,b6))) {
        Jump: 060041
      } else {
        TraceOperation 060035 (CallN (Floc 098228) [Con 15006]);
        PushFrame;
        PushReturnAddress 060035;
        SetLocal 1 15006;
        MakeRoutineFrame 2;
        SetLocal 2 0;
        Jump: 098229
      }
    } else {
      Jump: 060048
    }
  } else {
    Jump: 060048
  }
LocReturn 060035:
  Jump: 060041
LocOp 060041:
  TraceOperation 060041 (Store (Con 63) (Var (Global 32)));
  Let b1 = M[007270];
  Let b2 = M[007271];
  SetByte 007300 b1;
  SetByte 007301 b2;
  TraceOperation 060044 (CallN (Floc 089744) []);
  PushFrame;
  PushReturnAddress 060044;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  SetLocal 1 0;
  Jump: 089745
LocReturn 060044:
  TraceOperation 060047 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 060048:
  TraceOperation 060048 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 060059)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 060052 (CallN (Floc 098228) [Con 15006,Con 1]);
    PushFrame;
    PushReturnAddress 060052;
    SetLocal 1 15006;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 060059
  }
LocReturn 060052:
  Jump: 060059
LocOp 060059:
  TraceOperation 060059 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 060060:
  MakeRoutineFrame 0;
  Jump: 060061
LocOp 060061:
  TraceOperation 060061 (Je [Var (Global 40),Con 26] (Branch F (Dloc 060088)));
  Let b1 = M[007286];
  Let b2 = M[007287];
  if (Equal(MakeHiLo(b1,b2),26)) {
    TraceOperation 060065 (Jz (Var (Global 36)) (Branch F (Dloc 060088)));
    Let b3 = M[007278];
    Let b4 = M[007279];
    if (IsZero(MakeHiLo(b3,b4))) {
      TraceOperation 060068 (Jz (Var (Global 114)) (Branch T (Dloc 060077)));
      Let b5 = M[007434];
      Let b6 = M[007435];
      if (IsZero(MakeHiLo(b5,b6))) {
        Jump: 060077
      } else {
        TraceOperation 060071 (CallN (Floc 098228) [Con 15015]);
        PushFrame;
        PushReturnAddress 060071;
        SetLocal 1 15015;
        MakeRoutineFrame 2;
        SetLocal 2 0;
        Jump: 098229
      }
    } else {
      Jump: 060088
    }
  } else {
    Jump: 060088
  }
LocReturn 060071:
  Jump: 060077
LocOp 060077:
  TraceOperation 060077 (CallN (Floc 041040) [Con 26,Con 7,Var (Global 47)]);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 060077;
  SetLocal 1 26;
  SetLocal 2 7;
  SetLocal 3 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041041
LocReturn 060077:
  TraceOperation 060084 (CallN (Floc 089744) []);
  PushFrame;
  PushReturnAddress 060084;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  SetLocal 1 0;
  Jump: 089745
LocReturn 060084:
  TraceOperation 060087 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 060088:
  TraceOperation 060088 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 060099)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 060092 (CallN (Floc 098228) [Con 15015,Con 1]);
    PushFrame;
    PushReturnAddress 060092;
    SetLocal 1 15015;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 060099
  }
LocReturn 060092:
  Jump: 060099
LocOp 060099:
  TraceOperation 060099 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 060100:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 060101
LocOp 060101:
  TraceOperation 060101 (Store (Con 1) (Con 0));
  SetLocal 1 0;
  TraceOperation 060104 (Store (Con 2) (Con 12428));
  SetLocal 2 12428;
  TraceOperation 060109 (Store (Con 3) (Con 1));
  SetLocal 3 1;
  Jump: 060112
LocOp 060112:
  TraceOperation 060112 (Call (Floc 098936) [Var (Local 2)] Sp);
  PushFrame;
  PushReturnAddress 060112;
  SetLocal 1 GetLocal(2);
  MakeRoutineFrame 1;
  Jump: 098937
LocReturn 060112:
  PushStack call_result;
  TraceOperation 060118 (Jg (Var (Local 3)) (Var Sp) (Branch T (Dloc 060197)));
  PopStack popped1;
  if (GreaterThan(GetLocal(3),popped1)) {
    Jump: 060197
  } else {
    TraceOperation 060123 (Call (Floc 100664) [Var (Local 2),Var (Local 3)] Sp);
    PushFrame;
    PushReturnAddress 060123;
    SetLocal 1 GetLocal(2);
    SetLocal 2 GetLocal(3);
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 100665
  }
LocReturn 060123:
  PushStack call_result;
  TraceOperation 060130 (Jz (Var Sp) (Branch F (Dloc 060192)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 060134 (Call (Floc 100364) [Var (Local 2),Con 101,Var (Local 3)] Sp);
    PushFrame;
    PushReturnAddress 060134;
    SetLocal 1 GetLocal(2);
    SetLocal 2 101;
    SetLocal 3 GetLocal(3);
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    Jump: 100365
  } else {
    Jump: 060192
  }
LocReturn 060134:
  PushStack call_result;
  TraceOperation 060142 (Jz (Var Sp) (Branch T (Dloc 060149)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 060149
  } else {
    TraceOperation 060145 (Je [Var (Global 21),Con 2] (Branch F (Dloc 060192)));
    Let b2 = M[007248];
    Let b3 = M[007249];
    if (Equal(MakeHiLo(b2,b3),2)) {
      Jump: 060149
    } else {
      Jump: 060192
    }
  }
LocOp 060149:
  TraceOperation 060149 (Call (Floc 100604) [Var (Local 2),Con 103,Var (Local 3)] Sp);
  PushFrame;
  PushReturnAddress 060149;
  SetLocal 1 GetLocal(2);
  SetLocal 2 103;
  SetLocal 3 GetLocal(3);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 100605
LocReturn 060149:
  PushStack call_result;
  TraceOperation 060157 (Jz (Var Sp) (Branch F (Dloc 060177)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 060160 (Call (Floc 100364) [Var (Local 2),Con 104,Var (Local 3)] Sp);
    PushFrame;
    PushReturnAddress 060160;
    SetLocal 1 GetLocal(2);
    SetLocal 2 104;
    SetLocal 3 GetLocal(3);
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    Jump: 100365
  } else {
    Jump: 060177
  }
LocReturn 060160:
  PushStack call_result;
  TraceOperation 060168 (Call (Floc 078728) [Var Sp] Sp);
  PopStack popped1;
  PushFrame;
  PushReturnAddress 060168;
  SetLocal 1 popped1;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 078729
LocReturn 060168:
  PushStack call_result;
  TraceOperation 060174 (Jz (Var Sp) (Branch F (Dloc 060192)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 060177
  } else {
    Jump: 060192
  }
LocOp 060177:
  TraceOperation 060177 (Call (Floc 100604) [Var (Local 2),Con 100,Var (Local 3)] Sp);
  PushFrame;
  PushReturnAddress 060177;
  SetLocal 1 GetLocal(2);
  SetLocal 2 100;
  SetLocal 3 GetLocal(3);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 100605
LocReturn 060177:
  PushStack call_result;
  TraceOperation 060185 (Jz (Var Sp) (Branch T (Dloc 060192)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 060192
  } else {
    TraceOperation 060188 (Add (Var (Local 1)) (Con 1) (Local 1));
    SetLocal 1 Add(GetLocal(1),1);
    Jump: 060192
  }
LocOp 060192:
  TraceOperation 060192 (Inc (Con 3));
  SetLocal 3 Add(GetLocal(3),1);
  TraceOperation 060194 (Jump 060112);
  Jump: 060112
LocOp 060197:
  TraceOperation 060197 (Jl (Var (Local 1)) (Con 1) (Branch F (Dloc 060211)));
  if (LessThan(GetLocal(1),1)) {
    TraceOperation 060201 (Call (Floc 088936) [Con 13375] Sp);
    PushFrame;
    PushReturnAddress 060201;
    SetLocal 1 13375;
    MakeRoutineFrame 14;
    SetLocal 14 0;
    SetLocal 13 0;
    SetLocal 12 0;
    SetLocal 11 0;
    SetLocal 10 0;
    SetLocal 9 0;
    SetLocal 8 0;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 088937
  } else {
    Jump: 060211
  }
LocReturn 060201:
  PushStack call_result;
  TraceOperation 060208 (Jz (Var Sp) (Branch F Dtrue));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 060211
  } else {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  }
LocOp 060211:
  TraceOperation 060211 (Store (Con 20) (Con 1));
  SetByte 007214 0;
  SetByte 007215 1;
  TraceOperation 060214 (CallN (Floc 080952) [Con -31325]);
  PushFrame;
  PushReturnAddress 060214;
  SetLocal 1 -31325;
  MakeRoutineFrame 1;
  Jump: 080953
LocReturn 060214:
  TraceOperation 060220 (Store (Con 2) (Con 12428));
  SetLocal 2 12428;
  TraceOperation 060225 (Store (Con 3) (Con 1));
  SetLocal 3 1;
  Jump: 060228
LocOp 060228:
  TraceOperation 060228 (Call (Floc 098936) [Var (Local 2)] Sp);
  PushFrame;
  PushReturnAddress 060228;
  SetLocal 1 GetLocal(2);
  MakeRoutineFrame 1;
  Jump: 098937
LocReturn 060228:
  PushStack call_result;
  TraceOperation 060234 (Jg (Var (Local 3)) (Var Sp) (Branch T (Dloc 060391)));
  PopStack popped1;
  if (GreaterThan(GetLocal(3),popped1)) {
    Jump: 060391
  } else {
    TraceOperation 060239 (Call (Floc 100664) [Var (Local 2),Var (Local 3)] Sp);
    PushFrame;
    PushReturnAddress 060239;
    SetLocal 1 GetLocal(2);
    SetLocal 2 GetLocal(3);
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 100665
  }
LocReturn 060239:
  PushStack call_result;
  TraceOperation 060246 (Jz (Var Sp) (Branch F (Dloc 060386)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 060250 (Call (Floc 100364) [Var (Local 2),Con 101,Var (Local 3)] Sp);
    PushFrame;
    PushReturnAddress 060250;
    SetLocal 1 GetLocal(2);
    SetLocal 2 101;
    SetLocal 3 GetLocal(3);
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    Jump: 100365
  } else {
    Jump: 060386
  }
LocReturn 060250:
  PushStack call_result;
  TraceOperation 060258 (Jz (Var Sp) (Branch T (Dloc 060266)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 060266
  } else {
    TraceOperation 060261 (Je [Var (Global 21),Con 2] (Branch F (Dloc 060386)));
    Let b2 = M[007248];
    Let b3 = M[007249];
    if (Equal(MakeHiLo(b2,b3),2)) {
      Jump: 060266
    } else {
      Jump: 060386
    }
  }
LocOp 060266:
  TraceOperation 060266 (Call (Floc 100604) [Var (Local 2),Con 103,Var (Local 3)] Sp);
  PushFrame;
  PushReturnAddress 060266;
  SetLocal 1 GetLocal(2);
  SetLocal 2 103;
  SetLocal 3 GetLocal(3);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 100605
LocReturn 060266:
  PushStack call_result;
  TraceOperation 060274 (Jz (Var Sp) (Branch F (Dloc 060295)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 060277 (Call (Floc 100364) [Var (Local 2),Con 104,Var (Local 3)] Sp);
    PushFrame;
    PushReturnAddress 060277;
    SetLocal 1 GetLocal(2);
    SetLocal 2 104;
    SetLocal 3 GetLocal(3);
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    Jump: 100365
  } else {
    Jump: 060295
  }
LocReturn 060277:
  PushStack call_result;
  TraceOperation 060285 (Call (Floc 078728) [Var Sp] Sp);
  PopStack popped1;
  PushFrame;
  PushReturnAddress 060285;
  SetLocal 1 popped1;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 078729
LocReturn 060285:
  PushStack call_result;
  TraceOperation 060291 (Jz (Var Sp) (Branch F (Dloc 060386)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 060295
  } else {
    Jump: 060386
  }
LocOp 060295:
  TraceOperation 060295 (Call (Floc 100604) [Var (Local 2),Con 100,Var (Local 3)] Sp);
  PushFrame;
  PushReturnAddress 060295;
  SetLocal 1 GetLocal(2);
  SetLocal 2 100;
  SetLocal 3 GetLocal(3);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 100605
LocReturn 060295:
  PushStack call_result;
  TraceOperation 060303 (Jz (Var Sp) (Branch T (Dloc 060386)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 060386
  } else {
    TraceOperation 060307 (Store (Con 20) (Con 1));
    SetByte 007214 0;
    SetByte 007215 1;
    TraceOperation 060310 (Call (Floc 100364) [Var (Local 2),Con 100,Var (Local 3)] Sp);
    PushFrame;
    PushReturnAddress 060310;
    SetLocal 1 GetLocal(2);
    SetLocal 2 100;
    SetLocal 3 GetLocal(3);
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    Jump: 100365
  }
LocReturn 060310:
  PushStack call_result;
  TraceOperation 060318 (CallN (Floc 080952) [Var Sp]);
  PopStack popped1;
  PushFrame;
  PushReturnAddress 060318;
  SetLocal 1 popped1;
  MakeRoutineFrame 1;
  Jump: 080953
LocReturn 060318:
  TraceOperation 060323 (Sub (Var (Local 1)) (Con 1) (Local 1));
  SetLocal 1 Sub(GetLocal(1),1);
  TraceOperation 060327 (Jz (Var (Local 1)) (Branch F (Dloc 060343)));
  if (IsZero(GetLocal(1))) {
    TraceOperation 060330 (Store (Con 20) (Con 1));
    SetByte 007214 0;
    SetByte 007215 1;
    TraceOperation 060333 (CallN (Floc 080952) [Con -31837]);
    PushFrame;
    PushReturnAddress 060333;
    SetLocal 1 -31837;
    MakeRoutineFrame 1;
    Jump: 080953
  } else {
    Jump: 060343
  }
LocReturn 060333:
  TraceOperation 060339 New_line;
  GamePrint "\n";
  TraceOperation 060340 (Jump 060386);
  Jump: 060386
LocOp 060343:
  TraceOperation 060343 (Je [Var (Local 1),Con 1] (Branch F (Dloc 060377)));
  if (Equal(GetLocal(1),1)) {
    TraceOperation 060347 (Call (Floc 040916) [Con 3] Sp);
    PushFrame;
    PushReturnAddress 060347;
    SetLocal 1 3;
    MakeRoutineFrame 1;
    Jump: 040917
  } else {
    Jump: 060377
  }
LocReturn 060347:
  PushStack call_result;
  TraceOperation 060353 (Jz (Var Sp) (Branch T (Dloc 060365)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 060365
  } else {
    TraceOperation 060356 (Store (Con 20) (Con 1));
    SetByte 007214 0;
    SetByte 007215 1;
    TraceOperation 060359 (CallN (Floc 080952) [Con -31847]);
    PushFrame;
    PushReturnAddress 060359;
    SetLocal 1 -31847;
    MakeRoutineFrame 1;
    Jump: 080953
  }
LocReturn 060359:
  Jump: 060365
LocOp 060365:
  TraceOperation 060365 (Store (Con 20) (Con 1));
  SetByte 007214 0;
  SetByte 007215 1;
  TraceOperation 060368 (CallN (Floc 080952) [Con -31918]);
  PushFrame;
  PushReturnAddress 060368;
  SetLocal 1 -31918;
  MakeRoutineFrame 1;
  Jump: 080953
LocReturn 060368:
  TraceOperation 060374 (Jump 060386);
  Jump: 060386
LocOp 060377:
  TraceOperation 060377 (Store (Con 20) (Con 1));
  SetByte 007214 0;
  SetByte 007215 1;
  TraceOperation 060380 (CallN (Floc 080952) [Con -31852]);
  PushFrame;
  PushReturnAddress 060380;
  SetLocal 1 -31852;
  MakeRoutineFrame 1;
  Jump: 080953
LocReturn 060380:
  Jump: 060386
LocOp 060386:
  TraceOperation 060386 (Inc (Con 3));
  SetLocal 3 Add(GetLocal(3),1);
  TraceOperation 060388 (Jump 060228);
  Jump: 060228
LocOp 060391:
  TraceOperation 060391 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 060392:
  MakeRoutineFrame 0;
  Jump: 060393
LocOp 060393:
  TraceOperation 060393 (Store (Con 20) (Con 1));
  SetByte 007214 0;
  SetByte 007215 1;
  TraceOperation 060396 (CallN (Floc 080952) [Con -31839]);
  PushFrame;
  PushReturnAddress 060396;
  SetLocal 1 -31839;
  MakeRoutineFrame 1;
  Jump: 080953
LocReturn 060396:
  TraceOperation 060402 (CallN (Floc 080376) []);
  PushFrame;
  PushReturnAddress 060402;
  MakeRoutineFrame 0;
  Jump: 080377
LocReturn 060402:
  TraceOperation 060405 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 060408:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 060409
LocOp 060409:
  TraceOperation 060409 (Store (Con 1) (Con 12428));
  SetLocal 1 12428;
  TraceOperation 060414 (Store (Con 2) (Con 1));
  SetLocal 2 1;
  Jump: 060417
LocOp 060417:
  TraceOperation 060417 (Call (Floc 098936) [Var (Local 1)] Sp);
  PushFrame;
  PushReturnAddress 060417;
  SetLocal 1 GetLocal(1);
  MakeRoutineFrame 1;
  Jump: 098937
LocReturn 060417:
  PushStack call_result;
  TraceOperation 060423 (Jg (Var (Local 2)) (Var Sp) (Branch T (Dloc 060555)));
  PopStack popped1;
  if (GreaterThan(GetLocal(2),popped1)) {
    Jump: 060555
  } else {
    TraceOperation 060428 (Call (Floc 100664) [Var (Local 1),Var (Local 2)] Sp);
    PushFrame;
    PushReturnAddress 060428;
    SetLocal 1 GetLocal(1);
    SetLocal 2 GetLocal(2);
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 100665
  }
LocReturn 060428:
  PushStack call_result;
  TraceOperation 060435 (Jz (Var Sp) (Branch F (Dloc 060550)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 060439 (Call (Floc 100364) [Var (Local 1),Con 101,Var (Local 2)] Sp);
    PushFrame;
    PushReturnAddress 060439;
    SetLocal 1 GetLocal(1);
    SetLocal 2 101;
    SetLocal 3 GetLocal(2);
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    Jump: 100365
  } else {
    Jump: 060550
  }
LocReturn 060439:
  PushStack call_result;
  TraceOperation 060447 (Jz (Var Sp) (Branch T (Dloc 060455)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 060455
  } else {
    TraceOperation 060450 (Je [Var (Global 21),Con 2] (Branch F (Dloc 060550)));
    Let b2 = M[007248];
    Let b3 = M[007249];
    if (Equal(MakeHiLo(b2,b3),2)) {
      Jump: 060455
    } else {
      Jump: 060550
    }
  }
LocOp 060455:
  TraceOperation 060455 (Call (Floc 100604) [Var (Local 1),Con 103,Var (Local 2)] Sp);
  PushFrame;
  PushReturnAddress 060455;
  SetLocal 1 GetLocal(1);
  SetLocal 2 103;
  SetLocal 3 GetLocal(2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 100605
LocReturn 060455:
  PushStack call_result;
  TraceOperation 060463 (Jz (Var Sp) (Branch F (Dloc 060484)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 060466 (Call (Floc 100364) [Var (Local 1),Con 104,Var (Local 2)] Sp);
    PushFrame;
    PushReturnAddress 060466;
    SetLocal 1 GetLocal(1);
    SetLocal 2 104;
    SetLocal 3 GetLocal(2);
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    Jump: 100365
  } else {
    Jump: 060484
  }
LocReturn 060466:
  PushStack call_result;
  TraceOperation 060474 (Call (Floc 078728) [Var Sp] Sp);
  PopStack popped1;
  PushFrame;
  PushReturnAddress 060474;
  SetLocal 1 popped1;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 078729
LocReturn 060474:
  PushStack call_result;
  TraceOperation 060480 (Jz (Var Sp) (Branch F (Dloc 060550)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 060484
  } else {
    Jump: 060550
  }
LocOp 060484:
  TraceOperation 060484 (Call (Floc 100364) [Var (Local 1),Con 102,Var (Local 2)] Sp);
  PushFrame;
  PushReturnAddress 060484;
  SetLocal 1 GetLocal(1);
  SetLocal 2 102;
  SetLocal 3 GetLocal(2);
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 100365
LocReturn 060484:
  PushStack call_result;
  TraceOperation 060492 (Call (Floc 041668) [Var (Global 64),Var Sp] Sp);
  Let b1 = M[007334];
  Let b2 = M[007335];
  PopStack popped3;
  PushFrame;
  PushReturnAddress 060492;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 popped3;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 041669
LocReturn 060492:
  PushStack call_result;
  TraceOperation 060499 (Jz (Var Sp) (Branch T (Dloc 060550)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 060550
  } else {
    TraceOperation 060502 (Call (Floc 100604) [Var (Local 1),Con 103,Var (Local 2)] Sp);
    PushFrame;
    PushReturnAddress 060502;
    SetLocal 1 GetLocal(1);
    SetLocal 2 103;
    SetLocal 3 GetLocal(2);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 100605
  }
LocReturn 060502:
  PushStack call_result;
  TraceOperation 060510 (Jz (Var Sp) (Branch T (Dloc 060533)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 060533
  } else {
    TraceOperation 060513 (Call (Floc 100364) [Var (Local 1),Con 103,Var (Local 2)] Sp);
    PushFrame;
    PushReturnAddress 060513;
    SetLocal 1 GetLocal(1);
    SetLocal 2 103;
    SetLocal 3 GetLocal(2);
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    Jump: 100365
  }
LocReturn 060513:
  PushStack call_result;
  TraceOperation 060521 (Call (Floc 088936) [Var Sp] Sp);
  PopStack popped1;
  PushFrame;
  PushReturnAddress 060521;
  SetLocal 1 popped1;
  MakeRoutineFrame 14;
  SetLocal 14 0;
  SetLocal 13 0;
  SetLocal 12 0;
  SetLocal 11 0;
  SetLocal 10 0;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 088937
LocReturn 060521:
  PushStack call_result;
  TraceOperation 060527 (Jz (Var Sp) (Branch F Dtrue));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 060530 (Jump 060546);
    Jump: 060546
  } else {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  }
LocOp 060533:
  TraceOperation 060533 (Call (Floc 100364) [Var (Local 1),Con 104,Var (Local 2)] Sp);
  PushFrame;
  PushReturnAddress 060533;
  SetLocal 1 GetLocal(1);
  SetLocal 2 104;
  SetLocal 3 GetLocal(2);
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 100365
LocReturn 060533:
  PushStack call_result;
  TraceOperation 060541 (CallN (Floc 078824) [Var Sp]);
  PopStack popped1;
  PushFrame;
  PushReturnAddress 060541;
  SetLocal 1 popped1;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 078825
LocReturn 060541:
  Jump: 060546
LocOp 060546:
  TraceOperation 060546 (CallN (Floc 089744) []);
  PushFrame;
  PushReturnAddress 060546;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  SetLocal 1 0;
  Jump: 089745
LocReturn 060546:
  TraceOperation 060549 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 060550:
  TraceOperation 060550 (Inc (Con 2));
  SetLocal 2 Add(GetLocal(2),1);
  TraceOperation 060552 (Jump 060417);
  Jump: 060417
LocOp 060555:
  TraceOperation 060555 (CallN (Floc 041040) [Con 4097,Con 8]);
  PushFrame;
  PushReturnAddress 060555;
  SetLocal 1 4097;
  SetLocal 2 8;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 041041
LocReturn 060555:
  TraceOperation 060562 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 060564:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 060565
LocOp 060565:
  TraceOperation 060565 (Storew (Con 11427) (Con 38) (Con 0));
  SetByte 011503 0;
  SetByte 011504 0;
  TraceOperation 060571 (Call (Floc 108184) [Con 0] (Local 1));
  PushFrame;
  PushReturnAddress 060571;
  SetLocal 1 0;
  MakeRoutineFrame 1;
  Jump: 108185
LocReturn 060571:
  SetLocal 1 call_result;
  TraceOperation 060577 (Call (Floc 108184) [Var (Local 1)] (Local 2));
  PushFrame;
  PushReturnAddress 060577;
  SetLocal 1 GetLocal(1);
  MakeRoutineFrame 1;
  Jump: 108185
LocReturn 060577:
  SetLocal 2 call_result;
  TraceOperation 060583 (Jump 060595);
  Jump: 060595
--------------------------------------------------
LocRoutine 060604:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 060605
LocOp 060605:
  TraceOperation 060605 (Jump 060586);
  Jump: 060586
--------------------------------------------------
LocRoutine 060614:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 060615
LocOp 060615:
  TraceOperation 060615 (Je [Con 217,Con 47] (Branch F (Dloc 060649)));
  Jump: 060649
LocReturn 060626:
  PushStack call_result;
  TraceOperation 060633 (Jz (Var Sp) (Branch F (Dloc 060642)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 060636 (CallN (Floc 100712) [Var (Local 3),Var (Local 4)]);
    PushFrame;
    PushReturnAddress 060636;
    SetLocal 1 GetLocal(3);
    SetLocal 2 GetLocal(4);
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 100713
  } else {
    Jump: 060642
  }
LocReturn 060636:
  Jump: 060642
LocOp 060642:
  TraceOperation 060642 (Inc (Con 4));
  SetLocal 4 Add(GetLocal(4),1);
  TraceOperation 060644 (Jump 060616);
  Jump: 060616
LocOp 060647:
  TraceOperation 060647 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 060648:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 060649
LocOp 060649:
  TraceOperation 060649 (Store (Con 1) (Var (Global 11)));
  Let b1 = M[007228];
  Let b2 = M[007229];
  SetLocal 1 MakeHiLo(b1,b2);
  TraceOperation 060652 (CallN (Floc 078824) [Con 30,Var (Local 1)]);
  PushFrame;
  PushReturnAddress 060652;
  SetLocal 1 30;
  SetLocal 2 GetLocal(1);
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 078825
LocReturn 060652:
  TraceOperation 060658 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 060660:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 060661
LocOp 060661:
  TraceOperation 060661 (Store (Con 1) (Var (Global 11)));
  Let b1 = M[007228];
  Let b2 = M[007229];
  SetLocal 1 MakeHiLo(b1,b2);
  TraceOperation 060664 (CallN (Floc 101832) [Con 12520,Con 106,Con 1]);
  PushFrame;
  PushReturnAddress 060664;
  SetLocal 1 12520;
  SetLocal 2 106;
  SetLocal 3 1;
  MakeRoutineFrame 9;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 101833
LocReturn 060664:
  TraceOperation 060672 (Store (Con 2) (Con 12520));
  SetLocal 2 12520;
  TraceOperation 060677 (Store (Con 3) (Con 1));
  SetLocal 3 1;
  Jump: 060680
LocOp 060680:
  TraceOperation 060680 (Call (Floc 098936) [Var (Local 2)] Sp);
  PushFrame;
  PushReturnAddress 060680;
  SetLocal 1 GetLocal(2);
  MakeRoutineFrame 1;
  Jump: 098937
LocReturn 060680:
  PushStack call_result;
  TraceOperation 060686 (Jg (Var (Local 3)) (Var Sp) (Branch T (Dloc 060719)));
  PopStack popped1;
  if (GreaterThan(GetLocal(3),popped1)) {
    Jump: 060719
  } else {
    TraceOperation 060690 (Call (Floc 100664) [Var (Local 2),Var (Local 3)] Sp);
    PushFrame;
    PushReturnAddress 060690;
    SetLocal 1 GetLocal(2);
    SetLocal 2 GetLocal(3);
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 100665
  }
LocReturn 060690:
  PushStack call_result;
  TraceOperation 060697 (Jz (Var Sp) (Branch F (Dloc 060714)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 060700 (Call (Floc 100364) [Var (Local 2),Con 105,Var (Local 3)] Sp);
    PushFrame;
    PushReturnAddress 060700;
    SetLocal 1 GetLocal(2);
    SetLocal 2 105;
    SetLocal 3 GetLocal(3);
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    Jump: 100365
  } else {
    Jump: 060714
  }
LocReturn 060700:
  PushStack call_result;
  TraceOperation 060708 (CallN (Floc 078824) [Con 31,Var Sp]);
  PopStack popped1;
  PushFrame;
  PushReturnAddress 060708;
  SetLocal 1 31;
  SetLocal 2 popped1;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 078825
LocReturn 060708:
  Jump: 060714
LocOp 060714:
  TraceOperation 060714 (Inc (Con 3));
  SetLocal 3 Add(GetLocal(3),1);
  TraceOperation 060716 (Jump 060680);
  Jump: 060680
LocOp 060719:
  TraceOperation 060719 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 060768:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 060769
LocOp 060769:
  TraceOperation 060769 (Jump 060750);
  Jump: 060750
--------------------------------------------------
LocRoutine 060956:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 060957
LocOp 060957:
  TraceOperation 060957 (CallN (Floc 080952) [Con -31906]);
  PushFrame;
  PushReturnAddress 060957;
  SetLocal 1 -31906;
  MakeRoutineFrame 1;
  Jump: 080953
LocReturn 060957:
  TraceOperation 060963 (Jump 061019);
  Jump: 061019
--------------------------------------------------
LocRoutine 060970:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 060971
LocOp 060971:
  TraceOperation 060971 (Get_prop_addr (Con 0) (Con 160) Sp);
  Let b1 = M[000390];
  Let b2 = M[000391];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let loop_var4 = DeAddress(Offset(Address(MakeHiLo(b1,b2)),Add(Mul(2,Widen(b3)),1)));
  Label 5: {
    Let b6 = M[Address(loop_var4)];
    if (IsZeroByte(b6)) {
      PushStack 0;
    } else {
      if (TestBit(b6,7)) {
        Let b7 = M[Offset(Address(loop_var4),1)];
        if (Equal(160,Widen(BwAnd(b6,63)))) {
          PushStack DeAddress(Offset(Address(loop_var4),2));
        } else {
          Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),2),Widen(BwAnd(b7,63))));
          Goto: Label 5
        }
      } else {
        if (TestBit(b6,6)) {
          if (Equal(160,Widen(BwAnd(b6,63)))) {
            PushStack DeAddress(Offset(Address(loop_var4),1));
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),2));
            Goto: Label 5
          }
        } else {
          if (Equal(160,Widen(BwAnd(b6,63)))) {
            PushStack DeAddress(Offset(Address(loop_var4),1));
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),1));
            Goto: Label 5
          }
        }
      }
    }
  }
  TraceOperation 060975 (Call (Floc 020484) [Con -9713] (Global 63));
  PushFrame;
  PushReturnAddress 060975;
  SetLocal 1 -9713;
  Error: setDefaults: BadRoutineHeader, n>15
LocReturn 060975:
  SetByte 007332 HiByte(call_result);
  SetByte 007333 LoByte(call_result);
  TraceOperation 060982 (Insert_obj (Con 132) (Con 188));
  Let b1 = M[002232];
  Let b2 = M[002233];
  if (IsZero(MakeHiLo(b1,b2))) {} else {
    Let b3 = M[Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),10)];
    Let b4 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),10),1)];
    if (Equal(MakeHiLo(b3,b4),132)) {
      Let b5 = M[002234];
      Let b6 = M[002235];
      SetByte Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),10) b5;
      SetByte Offset(Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),10),1) b6;
    } else {
      Let loop_var7 = MakeHiLo(b3,b4);
      Label 8: {
        Let b9 = M[Offset(Offset(000378,Mul(loop_var7,14)),8)];
        Let b10 = M[Offset(Offset(Offset(000378,Mul(loop_var7,14)),8),1)];
        if (Equal(MakeHiLo(b9,b10),132)) {
          Let b11 = M[002234];
          Let b12 = M[002235];
          SetByte Offset(Offset(000378,Mul(loop_var7,14)),8) b11;
          SetByte Offset(Offset(Offset(000378,Mul(loop_var7,14)),8),1) b12;
        } else {
          Assign loop_var7 = MakeHiLo(b9,b10);
          Goto: Label 8
        }
      }
    }
  }
  SetByte 002232 0;
  SetByte 002233 188;
  Let b13 = M[003020];
  Let b14 = M[003021];
  SetByte 002234 b13;
  SetByte 002235 b14;
  SetByte 003020 0;
  SetByte 003021 132;
  TraceOperation 060985 (CallN (Floc 081916) [Var (Local 1)]);
  PushFrame;
  PushReturnAddress 060985;
  SetLocal 1 GetLocal(1);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 081917
LocReturn 060985:
  TraceOperation 060990 (CallN (Floc 080952) [Con -31906]);
  PushFrame;
  PushReturnAddress 060990;
  SetLocal 1 -31906;
  MakeRoutineFrame 1;
  Jump: 080953
LocReturn 060990:
  TraceOperation 060996 (Jump 061019);
  Jump: 061019
--------------------------------------------------
LocRoutine 061076:
  MakeRoutineFrame 6;
  if (LessThanByte(num_actuals,6)) {
    SetLocal 6 0;
    if (LessThanByte(num_actuals,5)) {
      SetLocal 5 0;
      if (LessThanByte(num_actuals,4)) {
        SetLocal 4 0;
        if (LessThanByte(num_actuals,3)) {
          SetLocal 3 0;
          if (LessThanByte(num_actuals,2)) {
            SetLocal 2 0;
            if (LessThanByte(num_actuals,1)) {
              SetLocal 1 0;
            }
          }
        }
      }
    }
  }
  Jump: 061077
LocOp 061077:
  TraceOperation 061077 (Call (Floc 108320) [Var (Local 6)] (Local 6));
  PushFrame;
  PushReturnAddress 061077;
  SetLocal 1 GetLocal(6);
  MakeRoutineFrame 1;
  Jump: 108321
LocReturn 061077:
  SetLocal 6 call_result;
  TraceOperation 061083 (Jz (Var (Local 5)) (Branch T (Dloc 061131)));
  if (IsZero(GetLocal(5))) {
    Jump: 061131
  } else {
    TraceOperation 061086 (Call (Floc 102384) [Var (Local 5)] Sp);
    PushFrame;
    PushReturnAddress 061086;
    SetLocal 1 GetLocal(5);
    MakeRoutineFrame 1;
    Jump: 102385
  }
LocReturn 061086:
  PushStack call_result;
  TraceOperation 061092 (Je [Var Sp,Var (Local 3)] (Branch T (Dloc 061111)));
  PopStack popped1;
  if (Equal(popped1,GetLocal(3))) {
    Jump: 061111
  } else {
    TraceOperation 061096 (Jz (Var (Local 3)) (Branch F (Dloc 061108)));
    if (IsZero(GetLocal(3))) {
      TraceOperation 061099 (Call (Floc 102384) [Var (Local 5)] (Local 3));
      PushFrame;
      PushReturnAddress 061099;
      SetLocal 1 GetLocal(5);
      MakeRoutineFrame 1;
      Jump: 102385
    } else {
      Jump: 061108
    }
  }
LocReturn 061099:
  SetLocal 3 call_result;
  TraceOperation 061105 (Jump 061111);
  Jump: 061111
LocOp 061108:
  TraceOperation 061108 (Store (Con 4) (Con 0));
  SetLocal 4 0;
  Jump: 061111
LocOp 061111:
  TraceOperation 061111 (Call (Floc 088304) [Var (Local 5),Con 30] Sp);
  PushFrame;
  PushReturnAddress 061111;
  SetLocal 1 GetLocal(5);
  SetLocal 2 30;
  MakeRoutineFrame 2;
  Jump: 088305
LocReturn 061111:
  PushStack call_result;
  TraceOperation 061118 (Jz (Var Sp) (Branch T (Dloc 061128)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 061128
  } else {
    TraceOperation 061121 (CallN (Floc 088364) [Var (Local 5),Con 34,Con 1]);
    PushFrame;
    PushReturnAddress 061121;
    SetLocal 1 GetLocal(5);
    SetLocal 2 34;
    SetLocal 3 1;
    MakeRoutineFrame 3;
    Jump: 088365
  }
LocReturn 061121:
  Jump: 061128
LocOp 061128:
  TraceOperation 061128 (Jump 061074);
  Jump: 061074
LocOp 061131:
  TraceOperation 061131 (Store (Con 152) (Con 27090));
  SetByte 007478 105;
  SetByte 007479 210;
  TraceOperation 061136 (Je [Var (Local 4),Con 1] (Branch F (Dloc 061157)));
  if (Equal(GetLocal(4),1)) {
    TraceOperation 061140 (Jz (Var (Local 3)) (Branch T (Dloc 061157)));
    if (IsZero(GetLocal(3))) {
      Jump: 061157
    } else {
      TraceOperation 061143 (Get_child (Var (Local 3)) Sp (Branch F (Dloc 061147)));
      Let b1 = M[Offset(Offset(000378,Mul(GetLocal(3),14)),10)];
      Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(3),14)),10),1)];
      PushStack MakeHiLo(b1,b2);
      if (IsZero(MakeHiLo(b1,b2))) {
        Jump: 061147
      } else {
        Jump: 061147
      }
    }
  } else {
    Jump: 061157
  }
LocOp 061147:
  TraceOperation 061147 (CallN (Floc 038496) [Var Sp,Con 2776]);
  PopStack popped1;
  PushFrame;
  PushReturnAddress 061147;
  SetLocal 1 popped1;
  SetLocal 2 2776;
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 038497
LocReturn 061147:
  TraceOperation 061154 (Jump 061225);
  Jump: 061225
LocOp 061157:
  TraceOperation 061157 (Store (Con 20) (Con 1));
  SetByte 007214 0;
  SetByte 007215 1;
  TraceOperation 061160 (Push (Var (Global 10)));
  Let b1 = M[007226];
  Let b2 = M[007227];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 061163 (Store (Con 26) (Con 1));
  SetByte 007226 0;
  SetByte 007227 1;
  Jump: 061166
LocOp 061166:
  TraceOperation 061166 (Call (Floc 026172) [Var (Global 10),Con 2] Sp);
  Let b1 = M[007226];
  Let b2 = M[007227];
  PushFrame;
  PushReturnAddress 061166;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 2;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 061166:
  PushStack call_result;
  TraceOperation 061173 (Jz (Var Sp) (Branch T (Dloc 061205)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 061205
  } else {
    TraceOperation 061176 (Call (Floc 026172) [Var (Global 10),Con 14] Sp);
    Let b2 = M[007226];
    Let b3 = M[007227];
    PushFrame;
    PushReturnAddress 061176;
    SetLocal 1 MakeHiLo(b2,b3);
    SetLocal 2 14;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  }
LocReturn 061176:
  PushStack call_result;
  TraceOperation 061183 (Jz (Var Sp) (Branch T (Dloc 061202)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 061202
  } else {
    TraceOperation 061186 (Call (Floc 088304) [Var (Global 10),Con 34] Sp);
    Let b2 = M[007226];
    Let b3 = M[007227];
    PushFrame;
    PushReturnAddress 061186;
    SetLocal 1 MakeHiLo(b2,b3);
    SetLocal 2 34;
    MakeRoutineFrame 2;
    Jump: 088305
  }
LocReturn 061186:
  PushStack call_result;
  TraceOperation 061193 (Jz (Var Sp) (Branch T (Dloc 061202)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 061202
  } else {
    TraceOperation 061196 (Set_attr (Var (Global 10)) (Con 35));
    Let b2 = M[007226];
    Let b3 = M[007227];
    Let b4 = M[Offset(Offset(000378,Mul(MakeHiLo(b2,b3),14)),4)];
    SetByte Offset(Offset(000378,Mul(MakeHiLo(b2,b3),14)),4) SetBit(b4,4);
    TraceOperation 061199 (Jump 061205);
    Jump: 061205
  }
LocOp 061202:
  TraceOperation 061202 (Clear_attr (Var (Global 10)) (Con 35));
  Let b1 = M[007226];
  Let b2 = M[007227];
  Let b3 = M[Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),4)];
  SetByte Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),4) ClearBit(b3,4);
  Jump: 061205
LocOp 061205:
  TraceOperation 061205 (Inc (Con 26));
  Let b1 = M[007226];
  Let b2 = M[007227];
  SetByte 007226 HiByte(Add(MakeHiLo(b1,b2),1));
  SetByte 007227 LoByte(Add(MakeHiLo(b1,b2),1));
  TraceOperation 061207 (Jg (Var (Global 10)) (Con 72) (Branch T (Dloc 061216)));
  Let b3 = M[007226];
  Let b4 = M[007227];
  if (GreaterThan(MakeHiLo(b3,b4),72)) {
    Jump: 061216
  } else {
    TraceOperation 061213 (Jump 061166);
    Jump: 061166
  }
LocOp 061216:
  TraceOperation 061216 (CallN (Floc 037780) [Con 2264]);
  PushFrame;
  PushReturnAddress 061216;
  SetLocal 1 2264;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 037781
LocReturn 061216:
  TraceOperation 061222 (Pull (Con 26));
  PopStack popped1;
  SetByte 007226 HiByte(popped1);
  SetByte 007227 LoByte(popped1);
  Jump: 061225
LocOp 061225:
  TraceOperation 061225 (Je [Var (Local 1),Var (Global 32)] (Branch F (Dloc 061238)));
  Let b1 = M[007270];
  Let b2 = M[007271];
  if (Equal(GetLocal(1),MakeHiLo(b1,b2))) {
    TraceOperation 061229 (Store (Con 20) (Con 1));
    SetByte 007214 0;
    SetByte 007215 1;
    TraceOperation 061232 (CallN (Floc 080952) [Con -31935]);
    PushFrame;
    PushReturnAddress 061232;
    SetLocal 1 -31935;
    MakeRoutineFrame 1;
    Jump: 080953
  } else {
    Jump: 061238
  }
LocReturn 061232:
  Jump: 061238
LocOp 061238:
  TraceOperation 061238 (Store (Con 20) (Con 1));
  SetByte 007214 0;
  SetByte 007215 1;
  TraceOperation 061241 (CallN (Floc 080952) [Con -31842]);
  PushFrame;
  PushReturnAddress 061241;
  SetLocal 1 -31842;
  MakeRoutineFrame 1;
  Jump: 080953
LocReturn 061241:
  TraceOperation 061247 (CallN (Floc 080316) []);
  PushFrame;
  PushReturnAddress 061247;
  MakeRoutineFrame 0;
  Jump: 080317
LocReturn 061247:
  TraceOperation 061250 New_line;
  GamePrint "\n";
  TraceOperation 061251 (Store (Con 152) (Con 0));
  SetByte 007478 0;
  SetByte 007479 0;
  TraceOperation 061254 (CallN (Floc 078972) [Con 7]);
  PushFrame;
  PushReturnAddress 061254;
  SetLocal 1 7;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 078973
LocReturn 061254:
  TraceOperation 061259 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 061268:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 061269
LocOp 061269:
  TraceOperation 061269 (Store (Con 1) (Var (Global 11)));
  Let b1 = M[007228];
  Let b2 = M[007229];
  SetLocal 1 MakeHiLo(b1,b2);
  TraceOperation 061272 (Get_child (Var (Local 1)) (Local 2) (Branch F (Dloc 061276)));
  Let b3 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),10)];
  Let b4 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),10),1)];
  SetLocal 2 MakeHiLo(b3,b4);
  if (IsZero(MakeHiLo(b3,b4))) {
    Jump: 061276
  } else {
    Jump: 061276
  }
LocOp 061276:
  TraceOperation 061276 (Call (Floc 026172) [Var (Local 2),Con 14] Sp);
  PushFrame;
  PushReturnAddress 061276;
  SetLocal 1 GetLocal(2);
  SetLocal 2 14;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 061276:
  PushStack call_result;
  TraceOperation 061283 (Jz (Var Sp) (Branch T (Dloc 061299)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 061299
  } else {
    TraceOperation 061286 (CallN (Floc 056504) [Var (Local 2),Con 5]);
    PushFrame;
    PushReturnAddress 061286;
    SetLocal 1 GetLocal(2);
    SetLocal 2 5;
    MakeRoutineFrame 4;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 056505
  }
LocReturn 061286:
  TraceOperation 061292 (Get_sibling (Var (Local 2)) (Local 2) (Branch F (Dloc 061296)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),8)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(2),14)),8),1)];
  SetLocal 2 MakeHiLo(b1,b2);
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 061296
  } else {
    Jump: 061296
  }
LocOp 061296:
  TraceOperation 061296 (Jump 061276);
  Jump: 061276
LocOp 061299:
  TraceOperation 061299 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 061308:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 061309
LocOp 061309:
  TraceOperation 061309 (Store (Con 1) (Var (Global 11)));
  Let b1 = M[007228];
  Let b2 = M[007229];
  SetLocal 1 MakeHiLo(b1,b2);
  TraceOperation 061312 (Call (Floc 026172) [Var (Global 11),Con 14] Sp);
  Let b3 = M[007228];
  Let b4 = M[007229];
  PushFrame;
  PushReturnAddress 061312;
  SetLocal 1 MakeHiLo(b3,b4);
  SetLocal 2 14;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 061312:
  PushStack call_result;
  TraceOperation 061319 (Jz (Var Sp) (Branch F (Dloc 061328)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 061322 (Push (Con 0));
    PushStack 0;
    TraceOperation 061325 (Jump 061331);
    Jump: 061331
  } else {
    Jump: 061328
  }
LocOp 061328:
  TraceOperation 061328 (Push (Con 1));
  PushStack 1;
  Jump: 061331
LocOp 061331:
  TraceOperation 061331 (Jz (Var Sp) (Branch T (Dloc 061364)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 061364
  } else {
    TraceOperation 061334 (Jz (Var (Global 114)) (Branch T (Dloc 061343)));
    Let b2 = M[007434];
    Let b3 = M[007435];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 061343
    } else {
      TraceOperation 061337 (CallN (Floc 098228) [Con 15327]);
      PushFrame;
      PushReturnAddress 061337;
      SetLocal 1 15327;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  }
LocReturn 061337:
  Jump: 061343
LocOp 061343:
  TraceOperation 061343 (Call (Floc 102676) [Var (Local 1),Var (Global 31)] Sp);
  Let b1 = M[007268];
  Let b2 = M[007269];
  PushFrame;
  PushReturnAddress 061343;
  SetLocal 1 GetLocal(1);
  SetLocal 2 MakeHiLo(b1,b2);
  MakeRoutineFrame 2;
  Jump: 102677
LocReturn 061343:
  PushStack call_result;
  TraceOperation 061350 (Jz (Var Sp) (Branch T (Dloc 061359)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 061359
  } else {
    TraceOperation 061353 (CallN (Floc 056504) [Var (Local 1),Con 0]);
    PushFrame;
    PushReturnAddress 061353;
    SetLocal 1 GetLocal(1);
    SetLocal 2 0;
    MakeRoutineFrame 4;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 056505
  }
LocReturn 061353:
  Jump: 061359
LocOp 061359:
  TraceOperation 061359 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 061366:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 061367
LocOp 061367:
  TraceOperation 061367 (And (Var (Global 233)) (Con 7) (Global 79));
  Let b1 = M[007672];
  Let b2 = M[007673];
  SetByte 007364 HiByte(And(MakeHiLo(b1,b2),7));
  SetByte 007365 LoByte(And(MakeHiLo(b1,b2),7));
  TraceOperation 061371 (Erase_window (Con -8447));
  Note "Erase_window (Con -8447)";
  TraceOperation 061375 Rfalse;
  PopFrame;
  PopReturnAddress return_address_3;
  SetResult 0;
  JumpIndirect: (return) return_address_3
--------------------------------------------------
LocRoutine 061376:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 061377
LocOp 061377:
  TraceOperation 061377 (Store (Con 1) (Var (Global 11)));
  Let b1 = M[007228];
  Let b2 = M[007229];
  SetLocal 1 MakeHiLo(b1,b2);
  TraceOperation 061380 (Call (Floc 026172) [Var (Global 11),Con 14] Sp);
  Let b3 = M[007228];
  Let b4 = M[007229];
  PushFrame;
  PushReturnAddress 061380;
  SetLocal 1 MakeHiLo(b3,b4);
  SetLocal 2 14;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 061380:
  PushStack call_result;
  TraceOperation 061387 (Jz (Var Sp) (Branch F (Dloc 061396)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 061390 (Push (Con 0));
    PushStack 0;
    TraceOperation 061393 (Jump 061399);
    Jump: 061399
  } else {
    Jump: 061396
  }
LocOp 061396:
  TraceOperation 061396 (Push (Con 1));
  PushStack 1;
  Jump: 061399
LocOp 061399:
  TraceOperation 061399 (Jz (Var Sp) (Branch T (Dloc 061432)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 061432
  } else {
    TraceOperation 061402 (Jz (Var (Global 114)) (Branch T (Dloc 061411)));
    Let b2 = M[007434];
    Let b3 = M[007435];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 061411
    } else {
      TraceOperation 061405 (CallN (Floc 098228) [Con 15344]);
      PushFrame;
      PushReturnAddress 061405;
      SetLocal 1 15344;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  }
LocReturn 061405:
  Jump: 061411
LocOp 061411:
  TraceOperation 061411 (Call (Floc 088304) [Var (Local 1),Con 15] Sp);
  PushFrame;
  PushReturnAddress 061411;
  SetLocal 1 GetLocal(1);
  SetLocal 2 15;
  MakeRoutineFrame 2;
  Jump: 088305
LocReturn 061411:
  PushStack call_result;
  TraceOperation 061418 (Jz (Var Sp) (Branch T (Dloc 061427)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 061427
  } else {
    TraceOperation 061421 (CallN (Floc 056504) [Var (Local 1),Con 0]);
    PushFrame;
    PushReturnAddress 061421;
    SetLocal 1 GetLocal(1);
    SetLocal 2 0;
    MakeRoutineFrame 4;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 056505
  }
LocReturn 061421:
  Jump: 061427
LocOp 061427:
  TraceOperation 061427 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 061434:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 061435
LocOp 061435:
  TraceOperation 061435 (And (Var (Global 233)) (Con 7) (Global 79));
  Let b1 = M[007672];
  Let b2 = M[007673];
  SetByte 007364 HiByte(And(MakeHiLo(b1,b2),7));
  SetByte 007365 LoByte(And(MakeHiLo(b1,b2),7));
  TraceOperation 061439 (Erase_window (Con -4095));
  Note "Erase_window (Con -4095)";
  TraceOperation 061443 Rfalse;
  PopFrame;
  PopReturnAddress return_address_3;
  SetResult 0;
  JumpIndirect: (return) return_address_3
--------------------------------------------------
LocRoutine 061444:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 061445
LocOp 061445:
  TraceOperation 061445 (Store (Con 1) (Var (Global 11)));
  Let b1 = M[007228];
  Let b2 = M[007229];
  SetLocal 1 MakeHiLo(b1,b2);
  TraceOperation 061448 (Call (Floc 026172) [Var (Global 11),Con 14] Sp);
  Let b3 = M[007228];
  Let b4 = M[007229];
  PushFrame;
  PushReturnAddress 061448;
  SetLocal 1 MakeHiLo(b3,b4);
  SetLocal 2 14;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 061448:
  PushStack call_result;
  TraceOperation 061455 (Jz (Var Sp) (Branch F (Dloc 061464)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 061458 (Push (Con 0));
    PushStack 0;
    TraceOperation 061461 (Jump 061467);
    Jump: 061467
  } else {
    Jump: 061464
  }
LocOp 061464:
  TraceOperation 061464 (Push (Con 1));
  PushStack 1;
  Jump: 061467
LocOp 061467:
  TraceOperation 061467 (Jz (Var Sp) (Branch T (Dloc 061500)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 061500
  } else {
    TraceOperation 061470 (Jz (Var (Global 114)) (Branch T (Dloc 061479)));
    Let b2 = M[007434];
    Let b3 = M[007435];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 061479
    } else {
      TraceOperation 061473 (CallN (Floc 098228) [Con 15361]);
      PushFrame;
      PushReturnAddress 061473;
      SetLocal 1 15361;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  }
LocReturn 061473:
  Jump: 061479
LocOp 061479:
  TraceOperation 061479 (Call (Floc 088304) [Var (Local 1),Con 3] Sp);
  PushFrame;
  PushReturnAddress 061479;
  SetLocal 1 GetLocal(1);
  SetLocal 2 3;
  MakeRoutineFrame 2;
  Jump: 088305
LocReturn 061479:
  PushStack call_result;
  TraceOperation 061486 (Jz (Var Sp) (Branch T (Dloc 061495)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 061495
  } else {
    TraceOperation 061489 (CallN (Floc 056504) [Var (Local 1),Con 0]);
    PushFrame;
    PushReturnAddress 061489;
    SetLocal 1 GetLocal(1);
    SetLocal 2 0;
    MakeRoutineFrame 4;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 056505
  }
LocReturn 061489:
  Jump: 061495
LocOp 061495:
  TraceOperation 061495 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 061502:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 061503
LocOp 061503:
  TraceOperation 061503 (And (Var (Global 233)) (Con 7) (Global 79));
  Let b1 = M[007672];
  Let b2 = M[007673];
  SetByte 007364 HiByte(And(MakeHiLo(b1,b2),7));
  SetByte 007365 LoByte(And(MakeHiLo(b1,b2),7));
  TraceOperation 061507 (Erase_window (Con 257));
  Note "Erase_window (Con 257)";
  TraceOperation 061511 Rfalse;
  PopFrame;
  PopReturnAddress return_address_3;
  SetResult 0;
  JumpIndirect: (return) return_address_3
--------------------------------------------------
LocRoutine 061512:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 061513
LocOp 061513:
  TraceOperation 061513 (Store (Con 1) (Var (Global 11)));
  Let b1 = M[007228];
  Let b2 = M[007229];
  SetLocal 1 MakeHiLo(b1,b2);
  TraceOperation 061516 (Call (Floc 026172) [Var (Global 11),Con 14] Sp);
  Let b3 = M[007228];
  Let b4 = M[007229];
  PushFrame;
  PushReturnAddress 061516;
  SetLocal 1 MakeHiLo(b3,b4);
  SetLocal 2 14;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 061516:
  PushStack call_result;
  TraceOperation 061523 (Jz (Var Sp) (Branch F (Dloc 061532)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 061526 (Push (Con 0));
    PushStack 0;
    TraceOperation 061529 (Jump 061535);
    Jump: 061535
  } else {
    Jump: 061532
  }
LocOp 061532:
  TraceOperation 061532 (Push (Con 1));
  PushStack 1;
  Jump: 061535
LocOp 061535:
  TraceOperation 061535 (Jz (Var Sp) (Branch T (Dloc 061567)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 061567
  } else {
    TraceOperation 061538 (Jz (Var (Global 114)) (Branch T (Dloc 061547)));
    Let b2 = M[007434];
    Let b3 = M[007435];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 061547
    } else {
      TraceOperation 061541 (CallN (Floc 098228) [Con 15378]);
      PushFrame;
      PushReturnAddress 061541;
      SetLocal 1 15378;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  }
LocReturn 061541:
  Jump: 061547
LocOp 061547:
  TraceOperation 061547 (Call (Floc 088304) [Var (Local 1),Con 30] Sp);
  PushFrame;
  PushReturnAddress 061547;
  SetLocal 1 GetLocal(1);
  SetLocal 2 30;
  MakeRoutineFrame 2;
  Jump: 088305
LocReturn 061547:
  PushStack call_result;
  TraceOperation 061554 (Jz (Var Sp) (Branch F (Dloc 061562)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 061557 (CallN (Floc 051776) [Var (Local 1)]);
    PushFrame;
    PushReturnAddress 061557;
    SetLocal 1 GetLocal(1);
    MakeRoutineFrame 3;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 051777
  } else {
    Jump: 061562
  }
LocReturn 061557:
  Jump: 061562
LocOp 061562:
  TraceOperation 061562 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 061580:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 061581
LocOp 061581:
  TraceOperation 061581 (Store (Con 1) (Var (Global 11)));
  Let b1 = M[007228];
  Let b2 = M[007229];
  SetLocal 1 MakeHiLo(b1,b2);
  TraceOperation 061584 (Call (Floc 026172) [Var (Global 11),Con 14] Sp);
  Let b3 = M[007228];
  Let b4 = M[007229];
  PushFrame;
  PushReturnAddress 061584;
  SetLocal 1 MakeHiLo(b3,b4);
  SetLocal 2 14;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 061584:
  PushStack call_result;
  TraceOperation 061591 (Jz (Var Sp) (Branch F (Dloc 061600)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 061594 (Push (Con 0));
    PushStack 0;
    TraceOperation 061597 (Jump 061603);
    Jump: 061603
  } else {
    Jump: 061600
  }
LocOp 061600:
  TraceOperation 061600 (Push (Con 1));
  PushStack 1;
  Jump: 061603
LocOp 061603:
  TraceOperation 061603 (Jz (Var Sp) (Branch T (Dloc 061677)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 061677
  } else {
    TraceOperation 061607 (Jz (Var (Global 114)) (Branch T (Dloc 061616)));
    Let b2 = M[007434];
    Let b3 = M[007435];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 061616
    } else {
      TraceOperation 061610 (CallN (Floc 098228) [Con 15395]);
      PushFrame;
      PushReturnAddress 061610;
      SetLocal 1 15395;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  }
LocReturn 061610:
  Jump: 061616
LocOp 061616:
  TraceOperation 061616 (Call (Floc 088304) [Var (Local 1),Con 30] Sp);
  PushFrame;
  PushReturnAddress 061616;
  SetLocal 1 GetLocal(1);
  SetLocal 2 30;
  MakeRoutineFrame 2;
  Jump: 088305
LocReturn 061616:
  PushStack call_result;
  TraceOperation 061623 (Jz (Var Sp) (Branch F (Dloc 061672)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 061626 (Jz (Var (Global 4)) (Branch T (Dloc 061635)));
    Let b2 = M[007214];
    Let b3 = M[007215];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 061635
    } else {
      TraceOperation 061629 (Store (Con 20) (Con 1));
      SetByte 007214 0;
      SetByte 007215 1;
      TraceOperation 061632 (CallN (Floc 080316) []);
      PushFrame;
      PushReturnAddress 061632;
      MakeRoutineFrame 0;
      Jump: 080317
    }
  } else {
    Jump: 061672
  }
LocReturn 061632:
  Jump: 061635
LocOp 061635:
  TraceOperation 061635 (CallN (Floc 078824) [Con 6,Var (Local 1)]);
  PushFrame;
  PushReturnAddress 061635;
  SetLocal 1 6;
  SetLocal 2 GetLocal(1);
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 078825
LocReturn 061635:
  TraceOperation 061641 (Jz (Var (Global 4)) (Branch T (Dloc 061672)));
  Let b1 = M[007214];
  Let b2 = M[007215];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 061672
  } else {
    TraceOperation 061644 (Loadw (Con 11427) (Con 38) Sp);
    Let b3 = M[011503];
    Let b4 = M[011504];
    PushStack MakeHiLo(b3,b4);
    TraceOperation 061650 (Add (Var Sp) (Con 1) Sp);
    PopStack popped5;
    PushStack Add(popped5,1);
    TraceOperation 061654 (Storew (Con 11427) (Con 38) (Var Sp));
    PopStack popped6;
    SetByte 011503 HiByte(popped6);
    SetByte 011504 LoByte(popped6);
    TraceOperation 061660 (CallN (Floc 088364) [Var (Local 1),Con 30]);
    PushFrame;
    PushReturnAddress 061660;
    SetLocal 1 GetLocal(1);
    SetLocal 2 30;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 088365
  }
LocReturn 061660:
  TraceOperation 061666 (Store (Con 20) (Con 1));
  SetByte 007214 0;
  SetByte 007215 1;
  TraceOperation 061669 (CallN (Floc 080368) []);
  PushFrame;
  PushReturnAddress 061669;
  MakeRoutineFrame 0;
  Jump: 080369
LocReturn 061669:
  Jump: 061672
LocOp 061672:
  TraceOperation 061672 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 061692:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 061693
LocOp 061693:
  TraceOperation 061693 (Store (Con 1) (Var (Global 11)));
  Let b1 = M[007228];
  Let b2 = M[007229];
  SetLocal 1 MakeHiLo(b1,b2);
  TraceOperation 061696 (Call (Floc 026172) [Var (Global 11),Con 14] Sp);
  Let b3 = M[007228];
  Let b4 = M[007229];
  PushFrame;
  PushReturnAddress 061696;
  SetLocal 1 MakeHiLo(b3,b4);
  SetLocal 2 14;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 061696:
  PushStack call_result;
  TraceOperation 061703 (Jz (Var Sp) (Branch F (Dloc 061712)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 061706 (Push (Con 0));
    PushStack 0;
    TraceOperation 061709 (Jump 061715);
    Jump: 061715
  } else {
    Jump: 061712
  }
LocOp 061712:
  TraceOperation 061712 (Push (Con 1));
  PushStack 1;
  Jump: 061715
LocOp 061715:
  TraceOperation 061715 (Jz (Var Sp) (Branch T (Dloc 061933)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 061933
  } else {
    TraceOperation 061719 (Jz (Var (Global 114)) (Branch T (Dloc 061728)));
    Let b2 = M[007434];
    Let b3 = M[007435];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 061728
    } else {
      TraceOperation 061722 (CallN (Floc 098228) [Con 15423]);
      PushFrame;
      PushReturnAddress 061722;
      SetLocal 1 15423;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  }
LocReturn 061722:
  Jump: 061728
LocOp 061728:
  TraceOperation 061728 (Call (Floc 088304) [Var (Local 1),Con 30] Sp);
  PushFrame;
  PushReturnAddress 061728;
  SetLocal 1 GetLocal(1);
  SetLocal 2 30;
  MakeRoutineFrame 2;
  Jump: 088305
LocReturn 061728:
  PushStack call_result;
  TraceOperation 061735 (Jz (Var Sp) (Branch F (Dloc 061928)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 061739 (Call (Floc 088056) [Var (Local 1),Con 0,Con 26] Sp);
    PushFrame;
    PushReturnAddress 061739;
    SetLocal 1 GetLocal(1);
    SetLocal 2 0;
    SetLocal 3 26;
    MakeRoutineFrame 9;
    SetLocal 9 0;
    SetLocal 8 0;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    Jump: 088057
  } else {
    Jump: 061928
  }
LocReturn 061739:
  PushStack call_result;
  TraceOperation 061747 (Jz (Var Sp) (Branch T (Dloc 061928)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 061928
  } else {
    TraceOperation 061751 (Call (Floc 088304) [Var (Local 1),Con 11] Sp);
    PushFrame;
    PushReturnAddress 061751;
    SetLocal 1 GetLocal(1);
    SetLocal 2 11;
    MakeRoutineFrame 2;
    Jump: 088305
  }
LocReturn 061751:
  PushStack call_result;
  TraceOperation 061758 (Jz (Var Sp) (Branch F (Dloc 061928)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 061762 (Loadw (Con 11427) (Con 38) Sp);
    Let b2 = M[011503];
    Let b3 = M[011504];
    PushStack MakeHiLo(b2,b3);
    TraceOperation 061768 (Add (Var Sp) (Con 1) Sp);
    PopStack popped4;
    PushStack Add(popped4,1);
    TraceOperation 061772 (Storew (Con 11427) (Con 38) (Var Sp));
    PopStack popped5;
    SetByte 011503 HiByte(popped5);
    SetByte 011504 LoByte(popped5);
    TraceOperation 061778 (Store (Con 20) (Con 1));
    SetByte 007214 0;
    SetByte 007215 1;
    TraceOperation 061781 (Push (Var (Global 235)));
    Let b6 = M[007676];
    Let b7 = M[007677];
    PushStack MakeHiLo(b6,b7);
    TraceOperation 061784 (Store (Con 251) (Var (Local 1)));
    SetByte 007676 HiByte(GetLocal(1));
    SetByte 007677 LoByte(GetLocal(1));
    TraceOperation 061787 (Push (Var (Global 235)));
    Let b8 = M[007676];
    Let b9 = M[007677];
    PushStack MakeHiLo(b8,b9);
    TraceOperation 061790 (Call (Floc 088436) [Var Sp,Con 26] Sp);
    PopStack popped10;
    PushFrame;
    PushReturnAddress 061790;
    SetLocal 1 popped10;
    SetLocal 2 26;
    MakeRoutineFrame 2;
    Jump: 088437
  } else {
    Jump: 061928
  }
LocReturn 061790:
  PushStack call_result;
  TraceOperation 061797 (CallN (Floc 080952) [Var Sp]);
  PopStack popped1;
  PushFrame;
  PushReturnAddress 061797;
  SetLocal 1 popped1;
  MakeRoutineFrame 1;
  Jump: 080953
LocReturn 061797:
  TraceOperation 061802 (Pull (Con 251));
  PopStack popped1;
  SetByte 007676 HiByte(popped1);
  SetByte 007677 LoByte(popped1);
  TraceOperation 061805 (Store (Con 20) (Con 1));
  SetByte 007214 0;
  SetByte 007215 1;
  TraceOperation 061808 (CallN (Floc 080316) []);
  PushFrame;
  PushReturnAddress 061808;
  MakeRoutineFrame 0;
  Jump: 080317
LocReturn 061808:
  TraceOperation 061811 New_line;
  GamePrint "\n";
  TraceOperation 061812 (Call (Floc 108712) [Var (Local 1)] Sp);
  PushFrame;
  PushReturnAddress 061812;
  SetLocal 1 GetLocal(1);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 108713
LocReturn 061812:
  PushStack call_result;
  TraceOperation 061818 (Jz (Var Sp) (Branch T (Dloc 061922)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 061922
  } else {
    TraceOperation 061822 (Call (Floc 108764) [Var (Local 1),Con 0] (Local 2));
    PushFrame;
    PushReturnAddress 061822;
    SetLocal 1 GetLocal(1);
    SetLocal 2 0;
    MakeRoutineFrame 2;
    Jump: 108765
  }
LocReturn 061822:
  SetLocal 2 call_result;
  TraceOperation 061829 (Call (Floc 108764) [Var (Local 1),Var (Local 2)] (Local 3));
  PushFrame;
  PushReturnAddress 061829;
  SetLocal 1 GetLocal(1);
  SetLocal 2 GetLocal(2);
  MakeRoutineFrame 2;
  Jump: 108765
LocReturn 061829:
  SetLocal 3 call_result;
  TraceOperation 061836 (Jump 061849);
  Jump: 061849
--------------------------------------------------
LocRoutine 061848:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 061849
LocOp 061849:
  TraceOperation 061849 (Jz (Var (Local 2)) (Branch T (Dloc 061878)));
  if (IsZero(GetLocal(2))) {
    Jump: 061878
  } else {
    TraceOperation 061852 (CallN (Floc 088364) [Var (Local 2),Con 34]);
    PushFrame;
    PushReturnAddress 061852;
    SetLocal 1 GetLocal(2);
    SetLocal 2 34;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 088365
  }
LocReturn 061852:
  TraceOperation 061858 (Call (Floc 088304) [Var (Local 2),Con 30] Sp);
  PushFrame;
  PushReturnAddress 061858;
  SetLocal 1 GetLocal(2);
  SetLocal 2 30;
  MakeRoutineFrame 2;
  Jump: 088305
LocReturn 061858:
  PushStack call_result;
  TraceOperation 061865 (Jz (Var Sp) (Branch T (Dloc 061875)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 061875
  } else {
    TraceOperation 061868 (CallN (Floc 088364) [Var (Local 2),Con 34,Con 1]);
    PushFrame;
    PushReturnAddress 061868;
    SetLocal 1 GetLocal(2);
    SetLocal 2 34;
    SetLocal 3 1;
    MakeRoutineFrame 3;
    Jump: 088365
  }
LocReturn 061868:
  Jump: 061875
LocOp 061875:
  TraceOperation 061875 (Jump 061839);
  Jump: 061839
LocOp 061878:
  TraceOperation 061878 (Store (Con 20) (Con 1));
  SetByte 007214 0;
  SetByte 007215 1;
  TraceOperation 061881 (CallN (Floc 080952) [Con -31556]);
  PushFrame;
  PushReturnAddress 061881;
  SetLocal 1 -31556;
  MakeRoutineFrame 1;
  Jump: 080953
LocReturn 061881:
  TraceOperation 061887 (CallN (Floc 081916) [Var (Local 1)]);
  PushFrame;
  PushReturnAddress 061887;
  SetLocal 1 GetLocal(1);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 081917
LocReturn 061887:
  TraceOperation 061892 (CallN (Floc 080952) [Con -31944]);
  PushFrame;
  PushReturnAddress 061892;
  SetLocal 1 -31944;
  MakeRoutineFrame 1;
  Jump: 080953
LocReturn 061892:
  TraceOperation 061898 (Get_child (Var (Local 1)) Sp (Branch F (Dloc 061902)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),10)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),10),1)];
  PushStack MakeHiLo(b1,b2);
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 061902
  } else {
    Jump: 061902
  }
LocOp 061902:
  TraceOperation 061902 (CallN (Floc 038496) [Var Sp,Con 3800]);
  PopStack popped1;
  PushFrame;
  PushReturnAddress 061902;
  SetLocal 1 popped1;
  SetLocal 2 3800;
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 038497
LocReturn 061902:
  TraceOperation 061909 (Store (Con 20) (Con 1));
  SetByte 007214 0;
  SetByte 007215 1;
  TraceOperation 061912 (CallN (Floc 080952) [Con -31842]);
  PushFrame;
  PushReturnAddress 061912;
  SetLocal 1 -31842;
  MakeRoutineFrame 1;
  Jump: 080953
LocReturn 061912:
  TraceOperation 061918 (CallN (Floc 080316) []);
  PushFrame;
  PushReturnAddress 061918;
  MakeRoutineFrame 0;
  Jump: 080317
LocReturn 061918:
  TraceOperation 061921 New_line;
  GamePrint "\n";
  Jump: 061922
LocOp 061922:
  TraceOperation 061922 (CallN (Floc 088364) [Var (Local 1),Con 30]);
  PushFrame;
  PushReturnAddress 061922;
  SetLocal 1 GetLocal(1);
  SetLocal 2 30;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 088365
LocReturn 061922:
  Jump: 061928
LocOp 061928:
  TraceOperation 061928 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 061948:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 061949
LocOp 061949:
  TraceOperation 061949 (Store (Con 1) (Var (Global 11)));
  Let b1 = M[007228];
  Let b2 = M[007229];
  SetLocal 1 MakeHiLo(b1,b2);
  TraceOperation 061952 (Call (Floc 026172) [Var (Global 11),Con 14] Sp);
  Let b3 = M[007228];
  Let b4 = M[007229];
  PushFrame;
  PushReturnAddress 061952;
  SetLocal 1 MakeHiLo(b3,b4);
  SetLocal 2 14;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 061952:
  PushStack call_result;
  TraceOperation 061959 (Jz (Var Sp) (Branch F (Dloc 061968)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 061962 (Push (Con 0));
    PushStack 0;
    TraceOperation 061965 (Jump 061971);
    Jump: 061971
  } else {
    Jump: 061968
  }
LocOp 061968:
  TraceOperation 061968 (Push (Con 1));
  PushStack 1;
  Jump: 061971
LocOp 061971:
  TraceOperation 061971 (Jz (Var Sp) (Branch T (Dloc 062153)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 062153
  } else {
    TraceOperation 061975 (Jz (Var (Global 114)) (Branch T (Dloc 061984)));
    Let b2 = M[007434];
    Let b3 = M[007435];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 061984
    } else {
      TraceOperation 061978 (CallN (Floc 098228) [Con 15487]);
      PushFrame;
      PushReturnAddress 061978;
      SetLocal 1 15487;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  }
LocReturn 061978:
  Jump: 061984
LocOp 061984:
  TraceOperation 061984 (Call (Floc 088304) [Var (Local 1),Con 3] Sp);
  PushFrame;
  PushReturnAddress 061984;
  SetLocal 1 GetLocal(1);
  SetLocal 2 3;
  MakeRoutineFrame 2;
  Jump: 088305
LocReturn 061984:
  PushStack call_result;
  TraceOperation 061991 (Jz (Var Sp) (Branch F (Dloc 062148)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 061995 (Call (Floc 088304) [Var (Local 1),Con 15] Sp);
    PushFrame;
    PushReturnAddress 061995;
    SetLocal 1 GetLocal(1);
    SetLocal 2 15;
    MakeRoutineFrame 2;
    Jump: 088305
  } else {
    Jump: 062148
  }
LocReturn 061995:
  PushStack call_result;
  TraceOperation 062002 (Jz (Var Sp) (Branch T (Dloc 062148)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 062148
  } else {
    TraceOperation 062006 (Call (Floc 102676) [Var (Local 1),Var (Global 31)] Sp);
    Let b2 = M[007268];
    Let b3 = M[007269];
    PushFrame;
    PushReturnAddress 062006;
    SetLocal 1 GetLocal(1);
    SetLocal 2 MakeHiLo(b2,b3);
    MakeRoutineFrame 2;
    Jump: 102677
  }
LocReturn 062006:
  PushStack call_result;
  TraceOperation 062013 (Jz (Var Sp) (Branch F (Dloc 062148)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 062017 (CallN (Floc 051776) [Var (Local 1)]);
    PushFrame;
    PushReturnAddress 062017;
    SetLocal 1 GetLocal(1);
    MakeRoutineFrame 3;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 051777
  } else {
    Jump: 062148
  }
LocReturn 062017:
  TraceOperation 062022 (Call (Floc 108812) [Var (Local 1)] Sp);
  PushFrame;
  PushReturnAddress 062022;
  SetLocal 1 GetLocal(1);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 108813
LocReturn 062022:
  PushStack call_result;
  TraceOperation 062028 (Jz (Var Sp) (Branch T (Dloc 062148)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 062148
  } else {
    TraceOperation 062032 (Call (Floc 108864) [Var (Local 1),Con 0] (Local 2));
    PushFrame;
    PushReturnAddress 062032;
    SetLocal 1 GetLocal(1);
    SetLocal 2 0;
    MakeRoutineFrame 2;
    Jump: 108865
  }
LocReturn 062032:
  SetLocal 2 call_result;
  TraceOperation 062039 (Call (Floc 108864) [Var (Local 1),Var (Local 2)] (Local 3));
  PushFrame;
  PushReturnAddress 062039;
  SetLocal 1 GetLocal(1);
  SetLocal 2 GetLocal(2);
  MakeRoutineFrame 2;
  Jump: 108865
LocReturn 062039:
  SetLocal 3 call_result;
  TraceOperation 062046 (Jump 062059);
  Jump: 062059
--------------------------------------------------
LocRoutine 062058:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 062059
LocOp 062059:
  TraceOperation 062059 (Jz (Var (Local 2)) (Branch T (Dloc 062088)));
  if (IsZero(GetLocal(2))) {
    Jump: 062088
  } else {
    TraceOperation 062062 (CallN (Floc 088364) [Var (Local 2),Con 34]);
    PushFrame;
    PushReturnAddress 062062;
    SetLocal 1 GetLocal(2);
    SetLocal 2 34;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 088365
  }
LocReturn 062062:
  TraceOperation 062068 (Call (Floc 088304) [Var (Local 2),Con 30] Sp);
  PushFrame;
  PushReturnAddress 062068;
  SetLocal 1 GetLocal(2);
  SetLocal 2 30;
  MakeRoutineFrame 2;
  Jump: 088305
LocReturn 062068:
  PushStack call_result;
  TraceOperation 062075 (Jz (Var Sp) (Branch T (Dloc 062085)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 062085
  } else {
    TraceOperation 062078 (CallN (Floc 088364) [Var (Local 2),Con 34,Con 1]);
    PushFrame;
    PushReturnAddress 062078;
    SetLocal 1 GetLocal(2);
    SetLocal 2 34;
    SetLocal 3 1;
    MakeRoutineFrame 3;
    Jump: 088365
  }
LocReturn 062078:
  Jump: 062085
LocOp 062085:
  TraceOperation 062085 (Jump 062049);
  Jump: 062049
LocOp 062088:
  TraceOperation 062088 (Loadw (Con 11427) (Con 38) Sp);
  Let b1 = M[011503];
  Let b2 = M[011504];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 062094 (Add (Var Sp) (Con 1) Sp);
  PopStack popped3;
  PushStack Add(popped3,1);
  TraceOperation 062098 (Storew (Con 11427) (Con 38) (Var Sp));
  PopStack popped4;
  SetByte 011503 HiByte(popped4);
  SetByte 011504 LoByte(popped4);
  TraceOperation 062104 (Store (Con 20) (Con 1));
  SetByte 007214 0;
  SetByte 007215 1;
  TraceOperation 062107 (CallN (Floc 080952) [Con -31556]);
  PushFrame;
  PushReturnAddress 062107;
  SetLocal 1 -31556;
  MakeRoutineFrame 1;
  Jump: 080953
LocReturn 062107:
  TraceOperation 062113 (CallN (Floc 081916) [Var (Local 1)]);
  PushFrame;
  PushReturnAddress 062113;
  SetLocal 1 GetLocal(1);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 081917
LocReturn 062113:
  TraceOperation 062118 (CallN (Floc 080952) [Con -31944]);
  PushFrame;
  PushReturnAddress 062118;
  SetLocal 1 -31944;
  MakeRoutineFrame 1;
  Jump: 080953
LocReturn 062118:
  TraceOperation 062124 (Get_child (Var (Local 1)) Sp (Branch F (Dloc 062128)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),10)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),10),1)];
  PushStack MakeHiLo(b1,b2);
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 062128
  } else {
    Jump: 062128
  }
LocOp 062128:
  TraceOperation 062128 (CallN (Floc 038496) [Var Sp,Con 3800]);
  PopStack popped1;
  PushFrame;
  PushReturnAddress 062128;
  SetLocal 1 popped1;
  SetLocal 2 3800;
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 038497
LocReturn 062128:
  TraceOperation 062135 (Store (Con 20) (Con 1));
  SetByte 007214 0;
  SetByte 007215 1;
  TraceOperation 062138 (CallN (Floc 080952) [Con -31842]);
  PushFrame;
  PushReturnAddress 062138;
  SetLocal 1 -31842;
  MakeRoutineFrame 1;
  Jump: 080953
LocReturn 062138:
  TraceOperation 062144 (CallN (Floc 080316) []);
  PushFrame;
  PushReturnAddress 062144;
  MakeRoutineFrame 0;
  Jump: 080317
LocReturn 062144:
  TraceOperation 062147 New_line;
  GamePrint "\n";
  Jump: 062148
LocOp 062148:
  TraceOperation 062148 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 062168:
  MakeRoutineFrame 0;
  Jump: 062169
LocOp 062169:
  TraceOperation 062169 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 062201)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 062173 (Jz (Var (Global 114)) (Branch T (Dloc 062182)));
    Let b5 = M[007434];
    Let b6 = M[007435];
    if (IsZero(MakeHiLo(b5,b6))) {
      Jump: 062182
    } else {
      TraceOperation 062176 (CallN (Floc 098228) [Con 15542]);
      PushFrame;
      PushReturnAddress 062176;
      SetLocal 1 15542;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 062201
  }
LocReturn 062176:
  Jump: 062182
LocOp 062182:
  TraceOperation 062182 (Get_child (Var (Global 31)) Sp (Branch F (Dloc 062186)));
  Let b1 = M[007268];
  Let b2 = M[007269];
  Let b3 = M[Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),10)];
  Let b4 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),10),1)];
  PushStack MakeHiLo(b3,b4);
  if (IsZero(MakeHiLo(b3,b4))) {
    Jump: 062186
  } else {
    Jump: 062186
  }
LocOp 062186:
  TraceOperation 062186 (Jz (Var Sp) (Branch F (Dloc 062198)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 062189 (Call (Floc 041040) [Con 28,Con 1,Var (Global 47)] Sp);
    Let b2 = M[007300];
    Let b3 = M[007301];
    PushFrame;
    PushReturnAddress 062189;
    SetLocal 1 28;
    SetLocal 2 1;
    SetLocal 3 MakeHiLo(b2,b3);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  } else {
    Jump: 062198
  }
LocReturn 062189:
  PushStack call_result;
  TraceOperation 062197 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 062198:
  TraceOperation 062198 (Jump 062212);
  Jump: 062212
LocOp 062201:
  TraceOperation 062201 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 062212)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 062205 (CallN (Floc 098228) [Con 15542,Con 1]);
    PushFrame;
    PushReturnAddress 062205;
    SetLocal 1 15542;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 062212
  }
LocReturn 062205:
  Jump: 062212
LocOp 062212:
  TraceOperation 062212 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 062216:
  MakeRoutineFrame 0;
  Jump: 062217
LocOp 062217:
  TraceOperation 062217 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 062261)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 062221 (Jz (Var (Global 114)) (Branch T (Dloc 062230)));
    Let b5 = M[007434];
    Let b6 = M[007435];
    if (IsZero(MakeHiLo(b5,b6))) {
      Jump: 062230
    } else {
      TraceOperation 062224 (CallN (Floc 098228) [Con 15554]);
      PushFrame;
      PushReturnAddress 062224;
      SetLocal 1 15554;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 062261
  }
LocReturn 062224:
  Jump: 062230
LocOp 062230:
  TraceOperation 062230 (CallN (Floc 041040) [Con 28,Con 2,Var (Global 47)]);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 062230;
  SetLocal 1 28;
  SetLocal 2 2;
  SetLocal 3 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041041
LocReturn 062230:
  TraceOperation 062237 (Store (Con 20) (Con 1));
  SetByte 007214 0;
  SetByte 007215 1;
  TraceOperation 062240 (CallN (Floc 080952) [Con -31840]);
  PushFrame;
  PushReturnAddress 062240;
  SetLocal 1 -31840;
  MakeRoutineFrame 1;
  Jump: 080953
LocReturn 062240:
  TraceOperation 062246 New_line;
  GamePrint "\n";
  TraceOperation 062247 (Get_child (Var (Global 31)) Sp (Branch F (Dloc 062251)));
  Let b1 = M[007268];
  Let b2 = M[007269];
  Let b3 = M[Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),10)];
  Let b4 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),10),1)];
  PushStack MakeHiLo(b3,b4);
  if (IsZero(MakeHiLo(b3,b4))) {
    Jump: 062251
  } else {
    Jump: 062251
  }
LocOp 062251:
  TraceOperation 062251 (CallN (Floc 038496) [Var Sp,Con 8215]);
  PopStack popped1;
  PushFrame;
  PushReturnAddress 062251;
  SetLocal 1 popped1;
  SetLocal 2 8215;
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 038497
LocReturn 062251:
  TraceOperation 062258 (Jump 062272);
  Jump: 062272
LocOp 062261:
  TraceOperation 062261 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 062272)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 062265 (CallN (Floc 098228) [Con 15554,Con 1]);
    PushFrame;
    PushReturnAddress 062265;
    SetLocal 1 15554;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 062272
  }
LocReturn 062265:
  Jump: 062272
LocOp 062272:
  TraceOperation 062272 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 062276:
  MakeRoutineFrame 0;
  Jump: 062277
LocOp 062277:
  TraceOperation 062277 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 062296)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 062281 (Jz (Var (Global 114)) (Branch T (Dloc 062290)));
    Let b5 = M[007434];
    Let b6 = M[007435];
    if (IsZero(MakeHiLo(b5,b6))) {
      Jump: 062290
    } else {
      TraceOperation 062284 (CallN (Floc 098228) [Con 15569]);
      PushFrame;
      PushReturnAddress 062284;
      SetLocal 1 15569;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 062296
  }
LocReturn 062284:
  Jump: 062290
LocOp 062290:
  TraceOperation 062290 (CallN (Floc 051848) []);
  PushFrame;
  PushReturnAddress 062290;
  MakeRoutineFrame 1;
  SetLocal 1 0;
  Jump: 051849
LocReturn 062290:
  TraceOperation 062293 (Jump 062307);
  Jump: 062307
LocOp 062296:
  TraceOperation 062296 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 062307)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 062300 (CallN (Floc 098228) [Con 15569,Con 1]);
    PushFrame;
    PushReturnAddress 062300;
    SetLocal 1 15569;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 062307
  }
LocReturn 062300:
  Jump: 062307
LocOp 062307:
  TraceOperation 062307 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 062308:
  MakeRoutineFrame 0;
  Jump: 062309
LocOp 062309:
  TraceOperation 062309 (Jz (Var (Global 36)) (Branch F (Dloc 062335)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 062312 (Jz (Var (Global 114)) (Branch T (Dloc 062321)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 062321
    } else {
      TraceOperation 062315 (CallN (Floc 098228) [Con 15577]);
      PushFrame;
      PushReturnAddress 062315;
      SetLocal 1 15577;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 062335
  }
LocReturn 062315:
  Jump: 062321
LocOp 062321:
  TraceOperation 062321 (Je [Var (Global 37),Var (Global 31)] (Branch T (Dloc 062332)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    Jump: 062332
  } else {
    TraceOperation 062325 (CallN (Floc 041060) [Con 28,Con 5,Var (Global 37)]);
    Let b5 = M[007280];
    Let b6 = M[007281];
    PushFrame;
    PushReturnAddress 062325;
    SetLocal 1 28;
    SetLocal 2 5;
    SetLocal 3 MakeHiLo(b5,b6);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041061
  }
LocReturn 062325:
  Jump: 062332
LocOp 062332:
  TraceOperation 062332 (Jump 062346);
  Jump: 062346
LocOp 062335:
  TraceOperation 062335 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 062346)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 062339 (CallN (Floc 098228) [Con 15577,Con 1]);
    PushFrame;
    PushReturnAddress 062339;
    SetLocal 1 15577;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 062346
  }
LocReturn 062339:
  Jump: 062346
LocOp 062346:
  TraceOperation 062346 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 062348:
  MakeRoutineFrame 0;
  Jump: 062349
LocOp 062349:
  TraceOperation 062349 (Jz (Var (Global 36)) (Branch F (Dloc 062377)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 062352 (Jz (Var (Global 114)) (Branch T (Dloc 062361)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 062361
    } else {
      TraceOperation 062355 (CallN (Floc 098228) [Con 15587]);
      PushFrame;
      PushReturnAddress 062355;
      SetLocal 1 15587;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 062377
  }
LocReturn 062355:
  Jump: 062361
LocOp 062361:
  TraceOperation 062361 (Je [Var (Global 37),Var (Global 47)] (Branch F (Dloc 062374)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007300];
  Let b4 = M[007301];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 062365 (Call (Floc 041040) [Con 64,Con 2,Var (Global 47)] Sp);
    Let b5 = M[007300];
    Let b6 = M[007301];
    PushFrame;
    PushReturnAddress 062365;
    SetLocal 1 64;
    SetLocal 2 2;
    SetLocal 3 MakeHiLo(b5,b6);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  } else {
    Jump: 062374
  }
LocReturn 062365:
  PushStack call_result;
  TraceOperation 062373 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 062374:
  TraceOperation 062374 (Jump 062388);
  Jump: 062388
LocOp 062377:
  TraceOperation 062377 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 062388)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 062381 (CallN (Floc 098228) [Con 15587,Con 1]);
    PushFrame;
    PushReturnAddress 062381;
    SetLocal 1 15587;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 062388
  }
LocReturn 062381:
  Jump: 062388
LocOp 062388:
  TraceOperation 062388 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 062392:
  MakeRoutineFrame 0;
  Jump: 062393
LocOp 062393:
  TraceOperation 062393 (Jz (Var (Global 36)) (Branch F (Dloc 062427)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 062396 (Jz (Var (Global 114)) (Branch T (Dloc 062405)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 062405
    } else {
      TraceOperation 062399 (CallN (Floc 098228) [Con 15598]);
      PushFrame;
      PushReturnAddress 062399;
      SetLocal 1 15598;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 062427
  }
LocReturn 062399:
  Jump: 062405
LocOp 062405:
  TraceOperation 062405 (Call (Floc 026172) [Var (Global 47),Con 20] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 062405;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 20;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 062405:
  PushStack call_result;
  TraceOperation 062412 (Jz (Var Sp) (Branch T (Dloc 062424)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 062424
  } else {
    TraceOperation 062415 (Call (Floc 041040) [Con 64,Con 3,Var (Global 47)] Sp);
    Let b2 = M[007300];
    Let b3 = M[007301];
    PushFrame;
    PushReturnAddress 062415;
    SetLocal 1 64;
    SetLocal 2 3;
    SetLocal 3 MakeHiLo(b2,b3);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  }
LocReturn 062415:
  PushStack call_result;
  TraceOperation 062423 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 062424:
  TraceOperation 062424 (Jump 062438);
  Jump: 062438
LocOp 062427:
  TraceOperation 062427 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 062438)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 062431 (CallN (Floc 098228) [Con 15598,Con 1]);
    PushFrame;
    PushReturnAddress 062431;
    SetLocal 1 15598;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 062438
  }
LocReturn 062431:
  Jump: 062438
LocOp 062438:
  TraceOperation 062438 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 062440:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 062441
LocOp 062441:
  TraceOperation 062441 (Jz (Var (Global 36)) (Branch F (Dloc 062492)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 062444 (Jz (Var (Global 114)) (Branch T (Dloc 062453)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 062453
    } else {
      TraceOperation 062447 (CallN (Floc 098228) [Con 15610]);
      PushFrame;
      PushReturnAddress 062447;
      SetLocal 1 15610;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 062492
  }
LocReturn 062447:
  Jump: 062453
LocOp 062453:
  TraceOperation 062453 (Get_prop (Var (Global 47)) (Con 20) (Global 239));
  Let b1 = M[007300];
  Let b2 = M[007301];
  Let b3 = M[Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),12)];
  Let b4 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),12),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  Let loop_var6 = DeAddress(Offset(Address(MakeHiLo(b3,b4)),Add(Mul(2,Widen(b5)),1)));
  Label 7: {
    Let b8 = M[Address(loop_var6)];
    if (IsZeroByte(b8)) {
      Let b9 = M[000304];
      Let b10 = M[000305];
      SetByte 007684 b9;
      SetByte 007685 b10;
    } else {
      if (TestBit(b8,7)) {
        Let b11 = M[Offset(Address(loop_var6),1)];
        if (Equal(20,Widen(BwAnd(b8,63)))) {
          if (Equal(Widen(BwAnd(b11,63)),2)) {
            Let b12 = M[Offset(Address(loop_var6),2)];
            Let b13 = M[Offset(Offset(Address(loop_var6),2),1)];
            SetByte 007684 b12;
            SetByte 007685 b13;
          } else {
            Let b14 = M[Offset(Address(loop_var6),2)];
            SetByte 007684 HiByte(Widen(b14));
            SetByte 007685 LoByte(Widen(b14));
          }
        } else {
          Assign loop_var6 = DeAddress(Offset(Offset(Address(loop_var6),2),Widen(BwAnd(b11,63))));
          Goto: Label 7
        }
      } else {
        if (TestBit(b8,6)) {
          if (Equal(20,Widen(BwAnd(b8,63)))) {
            Let b15 = M[Offset(Address(loop_var6),1)];
            Let b16 = M[Offset(Offset(Address(loop_var6),1),1)];
            SetByte 007684 b15;
            SetByte 007685 b16;
          } else {
            Assign loop_var6 = DeAddress(Offset(Offset(Address(loop_var6),1),2));
            Goto: Label 7
          }
        } else {
          if (Equal(20,Widen(BwAnd(b8,63)))) {
            Let b17 = M[Offset(Address(loop_var6),1)];
            SetByte 007684 HiByte(Widen(b17));
            SetByte 007685 LoByte(Widen(b17));
          } else {
            Assign loop_var6 = DeAddress(Offset(Offset(Address(loop_var6),1),1));
            Goto: Label 7
          }
        }
      }
    }
  }
  TraceOperation 062457 (Store (Con 1) (Var (Global 239)));
  Let b18 = M[007684];
  Let b19 = M[007685];
  SetLocal 1 MakeHiLo(b18,b19);
  TraceOperation 062460 (Jz (Var (Local 1)) (Branch T (Dloc 062489)));
  if (IsZero(GetLocal(1))) {
    Jump: 062489
  } else {
    TraceOperation 062463 (Get_prop (Var (Global 47)) (Con 20) (Global 239));
    Let b20 = M[007300];
    Let b21 = M[007301];
    Let b22 = M[Offset(Offset(000378,Mul(MakeHiLo(b20,b21),14)),12)];
    Let b23 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b20,b21),14)),12),1)];
    Let b24 = M[Address(MakeHiLo(b22,b23))];
    Let loop_var25 = DeAddress(Offset(Address(MakeHiLo(b22,b23)),Add(Mul(2,Widen(b24)),1)));
    Label 26: {
      Let b27 = M[Address(loop_var25)];
      if (IsZeroByte(b27)) {
        Let b28 = M[000304];
        Let b29 = M[000305];
        SetByte 007684 b28;
        SetByte 007685 b29;
      } else {
        if (TestBit(b27,7)) {
          Let b30 = M[Offset(Address(loop_var25),1)];
          if (Equal(20,Widen(BwAnd(b27,63)))) {
            if (Equal(Widen(BwAnd(b30,63)),2)) {
              Let b31 = M[Offset(Address(loop_var25),2)];
              Let b32 = M[Offset(Offset(Address(loop_var25),2),1)];
              SetByte 007684 b31;
              SetByte 007685 b32;
            } else {
              Let b33 = M[Offset(Address(loop_var25),2)];
              SetByte 007684 HiByte(Widen(b33));
              SetByte 007685 LoByte(Widen(b33));
            }
          } else {
            Assign loop_var25 = DeAddress(Offset(Offset(Address(loop_var25),2),Widen(BwAnd(b30,63))));
            Goto: Label 26
          }
        } else {
          if (TestBit(b27,6)) {
            if (Equal(20,Widen(BwAnd(b27,63)))) {
              Let b34 = M[Offset(Address(loop_var25),1)];
              Let b35 = M[Offset(Offset(Address(loop_var25),1),1)];
              SetByte 007684 b34;
              SetByte 007685 b35;
            } else {
              Assign loop_var25 = DeAddress(Offset(Offset(Address(loop_var25),1),2));
              Goto: Label 26
            }
          } else {
            if (Equal(20,Widen(BwAnd(b27,63)))) {
              Let b36 = M[Offset(Address(loop_var25),1)];
              SetByte 007684 HiByte(Widen(b36));
              SetByte 007685 LoByte(Widen(b36));
            } else {
              Assign loop_var25 = DeAddress(Offset(Offset(Address(loop_var25),1),1));
              Goto: Label 26
            }
          }
        }
      }
    }
    TraceOperation 062467 (Push (Var (Global 239)));
    Let b37 = M[007684];
    Let b38 = M[007685];
    PushStack MakeHiLo(b37,b38);
    TraceOperation 062470 (Call (Floc 026172) [Var Sp,Con 14] Sp);
    PopStack popped39;
    PushFrame;
    PushReturnAddress 062470;
    SetLocal 1 popped39;
    SetLocal 2 14;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  }
LocReturn 062470:
  PushStack call_result;
  TraceOperation 062477 (Jz (Var Sp) (Branch T (Dloc 062489)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 062489
  } else {
    TraceOperation 062480 (Call (Floc 041040) [Con 64,Con 7,Var (Local 1)] Sp);
    PushFrame;
    PushReturnAddress 062480;
    SetLocal 1 64;
    SetLocal 2 7;
    SetLocal 3 GetLocal(1);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  }
LocReturn 062480:
  PushStack call_result;
  TraceOperation 062488 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 062489:
  TraceOperation 062489 (Jump 062503);
  Jump: 062503
LocOp 062492:
  TraceOperation 062492 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 062503)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 062496 (CallN (Floc 098228) [Con 15610,Con 1]);
    PushFrame;
    PushReturnAddress 062496;
    SetLocal 1 15610;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 062503
  }
LocReturn 062496:
  Jump: 062503
LocOp 062503:
  TraceOperation 062503 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 062504:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 062505
LocOp 062505:
  TraceOperation 062505 (Jz (Var (Global 36)) (Branch F (Dloc 062569)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 062509 (Jz (Var (Global 114)) (Branch T (Dloc 062518)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 062518
    } else {
      TraceOperation 062512 (CallN (Floc 098228) [Con 15626]);
      PushFrame;
      PushReturnAddress 062512;
      SetLocal 1 15626;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 062569
  }
LocReturn 062512:
  Jump: 062518
LocOp 062518:
  TraceOperation 062518 (Call (Floc 102620) [Var (Global 37),Var (Global 47)] (Local 1));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007300];
  Let b4 = M[007301];
  PushFrame;
  PushReturnAddress 062518;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 MakeHiLo(b3,b4);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 102621
LocReturn 062518:
  SetLocal 1 call_result;
  TraceOperation 062525 (Call (Floc 102468) [Var (Global 47)] (Local 2));
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 062525;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 1;
  Jump: 102469
LocReturn 062525:
  SetLocal 2 call_result;
  Jump: 062531
LocOp 062531:
  TraceOperation 062531 (Jz (Var (Local 2)) (Branch T (Dloc 062566)));
  if (IsZero(GetLocal(2))) {
    Jump: 062566
  } else {
    TraceOperation 062534 (Je [Var (Local 2),Var (Local 1)] (Branch T (Dloc 062566)));
    if (Equal(GetLocal(2),GetLocal(1))) {
      Jump: 062566
    } else {
      TraceOperation 062538 (Call (Floc 026172) [Var (Local 2),Con 20] Sp);
      PushFrame;
      PushReturnAddress 062538;
      SetLocal 1 GetLocal(2);
      SetLocal 2 20;
      MakeRoutineFrame 6;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      SetLocal 3 0;
      Jump: 026173
    }
  }
LocReturn 062538:
  PushStack call_result;
  TraceOperation 062545 (Jz (Var Sp) (Branch T (Dloc 062557)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 062557
  } else {
    TraceOperation 062548 (Call (Floc 041040) [Con 64,Con 6,Var (Local 2)] Sp);
    PushFrame;
    PushReturnAddress 062548;
    SetLocal 1 64;
    SetLocal 2 6;
    SetLocal 3 GetLocal(2);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  }
LocReturn 062548:
  PushStack call_result;
  TraceOperation 062556 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 062557:
  TraceOperation 062557 (Call (Floc 102468) [Var (Local 2)] (Local 2));
  PushFrame;
  PushReturnAddress 062557;
  SetLocal 1 GetLocal(2);
  MakeRoutineFrame 1;
  Jump: 102469
LocReturn 062557:
  SetLocal 2 call_result;
  TraceOperation 062563 (Jump 062531);
  Jump: 062531
LocOp 062566:
  TraceOperation 062566 (Jump 062580);
  Jump: 062580
LocOp 062569:
  TraceOperation 062569 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 062580)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 062573 (CallN (Floc 098228) [Con 15626,Con 1]);
    PushFrame;
    PushReturnAddress 062573;
    SetLocal 1 15626;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 062580
  }
LocReturn 062573:
  Jump: 062580
LocOp 062580:
  TraceOperation 062580 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 062584:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 062585
LocOp 062585:
  TraceOperation 062585 (Jz (Var (Global 36)) (Branch F (Dloc 062636)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 062588 (Jz (Var (Global 114)) (Branch T (Dloc 062597)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 062597
    } else {
      TraceOperation 062591 (CallN (Floc 098228) [Con 15646]);
      PushFrame;
      PushReturnAddress 062591;
      SetLocal 1 15646;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 062636
  }
LocReturn 062591:
  Jump: 062597
LocOp 062597:
  TraceOperation 062597 (Store (Con 1) (Var (Global 47)));
  Let b1 = M[007300];
  Let b2 = M[007301];
  SetLocal 1 MakeHiLo(b1,b2);
  Jump: 062600
LocOp 062600:
  TraceOperation 062600 (Jz (Var (Local 1)) (Branch T (Dloc 062621)));
  if (IsZero(GetLocal(1))) {
    Jump: 062621
  } else {
    TraceOperation 062603 (Call (Floc 108912) [Var (Local 1)] Sp);
    PushFrame;
    PushReturnAddress 062603;
    SetLocal 1 GetLocal(1);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 108913
  }
LocReturn 062603:
  PushStack call_result;
  TraceOperation 062609 (Jz (Var Sp) (Branch T (Dloc 062621)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 062621
  } else {
    TraceOperation 062612 (Call (Floc 102468) [Var (Local 1)] (Local 1));
    PushFrame;
    PushReturnAddress 062612;
    SetLocal 1 GetLocal(1);
    MakeRoutineFrame 1;
    Jump: 102469
  }
LocReturn 062612:
  SetLocal 1 call_result;
  TraceOperation 062618 (Jump 062600);
  Jump: 062600
LocOp 062621:
  TraceOperation 062621 (Jz (Var (Local 1)) (Branch F (Dloc 062633)));
  if (IsZero(GetLocal(1))) {
    TraceOperation 062624 (Call (Floc 041040) [Con 64,Con 8,Var (Global 47)] Sp);
    Let b1 = M[007300];
    Let b2 = M[007301];
    PushFrame;
    PushReturnAddress 062624;
    SetLocal 1 64;
    SetLocal 2 8;
    SetLocal 3 MakeHiLo(b1,b2);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  } else {
    Jump: 062633
  }
LocReturn 062624:
  PushStack call_result;
  TraceOperation 062632 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 062633:
  TraceOperation 062633 (Jump 062647);
  Jump: 062647
LocOp 062636:
  TraceOperation 062636 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 062647)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 062640 (CallN (Floc 098228) [Con 15646,Con 1]);
    PushFrame;
    PushReturnAddress 062640;
    SetLocal 1 15646;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 062647
  }
LocReturn 062640:
  Jump: 062647
LocOp 062647:
  TraceOperation 062647 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 062648:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 062649
LocOp 062649:
  TraceOperation 062649 (Jz (Var (Global 36)) (Branch F (Dloc 062684)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 062652 (Jz (Var (Global 114)) (Branch T (Dloc 062661)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 062661
    } else {
      TraceOperation 062655 (CallN (Floc 098228) [Con 15662]);
      PushFrame;
      PushReturnAddress 062655;
      SetLocal 1 15662;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 062684
  }
LocReturn 062655:
  Jump: 062661
LocOp 062661:
  TraceOperation 062661 (Call (Floc 102620) [Var (Global 37),Var (Global 47)] (Local 1));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007300];
  Let b4 = M[007301];
  PushFrame;
  PushReturnAddress 062661;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 MakeHiLo(b3,b4);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 102621
LocReturn 062661:
  SetLocal 1 call_result;
  TraceOperation 062668 (Je [Var (Local 1),Var (Global 47)] (Branch F (Dloc 062681)));
  Let b1 = M[007300];
  Let b2 = M[007301];
  if (Equal(GetLocal(1),MakeHiLo(b1,b2))) {
    TraceOperation 062672 (Call (Floc 041040) [Con 64,Con 4,Var (Global 47)] Sp);
    Let b3 = M[007300];
    Let b4 = M[007301];
    PushFrame;
    PushReturnAddress 062672;
    SetLocal 1 64;
    SetLocal 2 4;
    SetLocal 3 MakeHiLo(b3,b4);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  } else {
    Jump: 062681
  }
LocReturn 062672:
  PushStack call_result;
  TraceOperation 062680 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 062681:
  TraceOperation 062681 (Jump 062695);
  Jump: 062695
LocOp 062684:
  TraceOperation 062684 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 062695)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 062688 (CallN (Floc 098228) [Con 15662,Con 1]);
    PushFrame;
    PushReturnAddress 062688;
    SetLocal 1 15662;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 062695
  }
LocReturn 062688:
  Jump: 062695
LocOp 062695:
  TraceOperation 062695 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 062696:
  MakeRoutineFrame 0;
  Jump: 062697
LocOp 062697:
  TraceOperation 062697 (Jz (Var (Global 36)) (Branch F (Dloc 062750)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 062700 (Jz (Var (Global 114)) (Branch T (Dloc 062709)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 062709
    } else {
      TraceOperation 062703 (CallN (Floc 098228) [Con 15674]);
      PushFrame;
      PushReturnAddress 062703;
      SetLocal 1 15674;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 062750
  }
LocReturn 062703:
  Jump: 062709
LocOp 062709:
  TraceOperation 062709 (Call (Floc 102992) [Var (Global 47)] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 062709;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 102993
LocReturn 062709:
  PushStack call_result;
  TraceOperation 062715 (Je [Var (Global 37),Var Sp] (Branch F (Dloc 062728)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  PopStack popped3;
  if (Equal(MakeHiLo(b1,b2),popped3)) {
    TraceOperation 062719 (Call (Floc 041040) [Con 64,Con 5,Var (Global 47)] Sp);
    Let b4 = M[007300];
    Let b5 = M[007301];
    PushFrame;
    PushReturnAddress 062719;
    SetLocal 1 64;
    SetLocal 2 5;
    SetLocal 3 MakeHiLo(b4,b5);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  } else {
    Jump: 062728
  }
LocReturn 062719:
  PushStack call_result;
  TraceOperation 062727 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 062728:
  TraceOperation 062728 (Call (Floc 103016) [Var (Global 47)] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 062728;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 103017
LocReturn 062728:
  PushStack call_result;
  TraceOperation 062734 (Je [Var (Global 37),Var Sp] (Branch F (Dloc 062747)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  PopStack popped3;
  if (Equal(MakeHiLo(b1,b2),popped3)) {
    TraceOperation 062738 (Call (Floc 041040) [Con 64,Con 5,Var (Global 47)] Sp);
    Let b4 = M[007300];
    Let b5 = M[007301];
    PushFrame;
    PushReturnAddress 062738;
    SetLocal 1 64;
    SetLocal 2 5;
    SetLocal 3 MakeHiLo(b4,b5);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  } else {
    Jump: 062747
  }
LocReturn 062738:
  PushStack call_result;
  TraceOperation 062746 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 062747:
  TraceOperation 062747 (Jump 062761);
  Jump: 062761
LocOp 062750:
  TraceOperation 062750 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 062761)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 062754 (CallN (Floc 098228) [Con 15674,Con 1]);
    PushFrame;
    PushReturnAddress 062754;
    SetLocal 1 15674;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 062761
  }
LocReturn 062754:
  Jump: 062761
LocOp 062761:
  TraceOperation 062761 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 062764:
  MakeRoutineFrame 0;
  Jump: 062765
LocOp 062765:
  TraceOperation 062765 (Jz (Var (Global 36)) (Branch F (Dloc 062799)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 062768 (Jz (Var (Global 114)) (Branch T (Dloc 062777)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 062777
    } else {
      TraceOperation 062771 (CallN (Floc 098228) [Con 15691]);
      PushFrame;
      PushReturnAddress 062771;
      SetLocal 1 15691;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 062799
  }
LocReturn 062771:
  Jump: 062777
LocOp 062777:
  TraceOperation 062777 (Call (Floc 088304) [Var (Global 47),Con 15] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 062777;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 15;
  MakeRoutineFrame 2;
  Jump: 088305
LocReturn 062777:
  PushStack call_result;
  TraceOperation 062784 (Jz (Var Sp) (Branch T (Dloc 062796)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 062796
  } else {
    TraceOperation 062787 (Call (Floc 041040) [Con 64,Con 10,Var (Global 47)] Sp);
    Let b2 = M[007300];
    Let b3 = M[007301];
    PushFrame;
    PushReturnAddress 062787;
    SetLocal 1 64;
    SetLocal 2 10;
    SetLocal 3 MakeHiLo(b2,b3);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  }
LocReturn 062787:
  PushStack call_result;
  TraceOperation 062795 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 062796:
  TraceOperation 062796 (Jump 062810);
  Jump: 062810
LocOp 062799:
  TraceOperation 062799 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 062810)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 062803 (CallN (Floc 098228) [Con 15691,Con 1]);
    PushFrame;
    PushReturnAddress 062803;
    SetLocal 1 15691;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 062810
  }
LocReturn 062803:
  Jump: 062810
LocOp 062810:
  TraceOperation 062810 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 062812:
  MakeRoutineFrame 0;
  Jump: 062813
LocOp 062813:
  TraceOperation 062813 (Jz (Var (Global 36)) (Branch F (Dloc 062846)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 062816 (Jz (Var (Global 114)) (Branch T (Dloc 062825)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 062825
    } else {
      TraceOperation 062819 (CallN (Floc 098228) [Con 15703]);
      PushFrame;
      PushReturnAddress 062819;
      SetLocal 1 15703;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 062846
  }
LocReturn 062819:
  Jump: 062825
LocOp 062825:
  TraceOperation 062825 (Call (Floc 108952) [Var (Global 47)] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 062825;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 108953
LocReturn 062825:
  PushStack call_result;
  TraceOperation 062831 (Jz (Var Sp) (Branch T (Dloc 062843)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 062843
  } else {
    TraceOperation 062834 (Call (Floc 041040) [Con 64,Con 15,Var (Global 47)] Sp);
    Let b2 = M[007300];
    Let b3 = M[007301];
    PushFrame;
    PushReturnAddress 062834;
    SetLocal 1 64;
    SetLocal 2 15;
    SetLocal 3 MakeHiLo(b2,b3);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  }
LocReturn 062834:
  PushStack call_result;
  TraceOperation 062842 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 062843:
  TraceOperation 062843 (Jump 062857);
  Jump: 062857
LocOp 062846:
  TraceOperation 062846 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 062857)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 062850 (CallN (Floc 098228) [Con 15703,Con 1]);
    PushFrame;
    PushReturnAddress 062850;
    SetLocal 1 15703;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 062857
  }
LocReturn 062850:
  Jump: 062857
LocOp 062857:
  TraceOperation 062857 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 062860:
  MakeRoutineFrame 0;
  Jump: 062861
LocOp 062861:
  TraceOperation 062861 (Jz (Var (Global 36)) (Branch F (Dloc 062895)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 062864 (Jz (Var (Global 114)) (Branch T (Dloc 062873)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 062873
    } else {
      TraceOperation 062867 (CallN (Floc 098228) [Con 15715]);
      PushFrame;
      PushReturnAddress 062867;
      SetLocal 1 15715;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 062895
  }
LocReturn 062867:
  Jump: 062873
LocOp 062873:
  TraceOperation 062873 (Call (Floc 088304) [Var (Global 47),Con 16] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 062873;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 16;
  MakeRoutineFrame 2;
  Jump: 088305
LocReturn 062873:
  PushStack call_result;
  TraceOperation 062880 (Jz (Var Sp) (Branch T (Dloc 062892)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 062892
  } else {
    TraceOperation 062883 (Call (Floc 041040) [Con 64,Con 11,Var (Global 47)] Sp);
    Let b2 = M[007300];
    Let b3 = M[007301];
    PushFrame;
    PushReturnAddress 062883;
    SetLocal 1 64;
    SetLocal 2 11;
    SetLocal 3 MakeHiLo(b2,b3);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  }
LocReturn 062883:
  PushStack call_result;
  TraceOperation 062891 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 062892:
  TraceOperation 062892 (Jump 062906);
  Jump: 062906
LocOp 062895:
  TraceOperation 062895 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 062906)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 062899 (CallN (Floc 098228) [Con 15715,Con 1]);
    PushFrame;
    PushReturnAddress 062899;
    SetLocal 1 15715;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 062906
  }
LocReturn 062899:
  Jump: 062906
LocOp 062906:
  TraceOperation 062906 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 062908:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 062909
LocOp 062909:
  TraceOperation 062909 (Jz (Var (Global 36)) (Branch F (Dloc 063056)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 062913 (Jz (Var (Global 114)) (Branch T (Dloc 062922)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 062922
    } else {
      TraceOperation 062916 (CallN (Floc 098228) [Con 15727]);
      PushFrame;
      PushReturnAddress 062916;
      SetLocal 1 15727;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 063056
  }
LocReturn 062916:
  Jump: 062922
LocOp 062922:
  TraceOperation 062922 (Call (Floc 088436) [Var (Global 37),Con 18] Sp);
  Let b1 = M[007280];
  Let b2 = M[007281];
  PushFrame;
  PushReturnAddress 062922;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 18;
  MakeRoutineFrame 2;
  Jump: 088437
LocReturn 062922:
  PushStack call_result;
  TraceOperation 062929 (Call (Floc 108992) [Var (Global 37)] Sp);
  Let b1 = M[007280];
  Let b2 = M[007281];
  PushFrame;
  PushReturnAddress 062929;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 3;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 108993
LocReturn 062929:
  PushStack call_result;
  TraceOperation 062935 (Jl (Var Sp) (Var Sp) (Branch T (Dloc 063053)));
  PopStack popped1;
  PopStack popped2;
  if (LessThan(popped1,popped2)) {
    Jump: 063053
  } else {
    TraceOperation 062940 (Call (Floc 109040) [Var (Global 37)] Sp);
    Let b3 = M[007280];
    Let b4 = M[007281];
    PushFrame;
    PushReturnAddress 062940;
    SetLocal 1 MakeHiLo(b3,b4);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 109041
  }
LocReturn 062940:
  PushStack call_result;
  TraceOperation 062946 (Jz (Var Sp) (Branch T (Dloc 063053)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 063053
  } else {
    TraceOperation 062950 (Loadw (Con 7796) (Con 0) (Local 1));
    Let b2 = M[007796];
    Let b3 = M[007797];
    SetLocal 1 MakeHiLo(b2,b3);
    TraceOperation 062956 (Jz (Var (Local 1)) (Branch T (Dloc 063053)));
    if (IsZero(GetLocal(1))) {
      Jump: 063053
    } else {
      TraceOperation 062960 (Store (Con 2) (Con 0));
      SetLocal 2 0;
      TraceOperation 062963 (Call (Floc 109072) [Var (Global 37),Con 0] (Local 3));
      Let b4 = M[007280];
      Let b5 = M[007281];
      PushFrame;
      PushReturnAddress 062963;
      SetLocal 1 MakeHiLo(b4,b5);
      SetLocal 2 0;
      MakeRoutineFrame 2;
      Jump: 109073
    }
  }
LocReturn 062963:
  SetLocal 3 call_result;
  TraceOperation 062970 (Call (Floc 109072) [Var (Global 37),Var (Local 3)] (Local 4));
  Let b1 = M[007280];
  Let b2 = M[007281];
  PushFrame;
  PushReturnAddress 062970;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 GetLocal(3);
  MakeRoutineFrame 2;
  Jump: 109073
LocReturn 062970:
  SetLocal 4 call_result;
  TraceOperation 062977 (Jump 062990);
  Jump: 062990
--------------------------------------------------
LocRoutine 062982:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 062983
LocOp 062983:
  TraceOperation 062983 (Call (Floc 109072) [Var (Global 37),Var (Local 4)] (Local 4));
  Let b1 = M[007280];
  Let b2 = M[007281];
  PushFrame;
  PushReturnAddress 062983;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 GetLocal(4);
  MakeRoutineFrame 2;
  Jump: 109073
LocReturn 062983:
  SetLocal 4 call_result;
  Jump: 062990
LocOp 062990:
  TraceOperation 062990 (Jz (Var (Local 3)) (Branch T (Dloc 063013)));
  if (IsZero(GetLocal(3))) {
    Jump: 063013
  } else {
    TraceOperation 062993 (Call (Floc 088304) [Var (Local 3),Con 8] Sp);
    PushFrame;
    PushReturnAddress 062993;
    SetLocal 1 GetLocal(3);
    SetLocal 2 8;
    MakeRoutineFrame 2;
    Jump: 088305
  }
LocReturn 062993:
  PushStack call_result;
  TraceOperation 063000 (Jz (Var Sp) (Branch F (Dloc 063010)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 063003 (Je [Var (Local 3),Var (Local 1)] (Branch T (Dloc 063010)));
    if (Equal(GetLocal(3),GetLocal(1))) {
      Jump: 063010
    } else {
      TraceOperation 063007 (Store (Con 2) (Var (Local 3)));
      SetLocal 2 GetLocal(3);
      Jump: 063010
    }
  } else {
    Jump: 063010
  }
LocOp 063010:
  TraceOperation 063010 (Jump 062980);
  Jump: 062980
LocOp 063013:
  TraceOperation 063013 (Jz (Var (Local 2)) (Branch T (Dloc 063053)));
  if (IsZero(GetLocal(2))) {
    Jump: 063053
  } else {
    TraceOperation 063016 (CallN (Floc 041040) [Con 64,Con 13,Var (Local 2)]);
    PushFrame;
    PushReturnAddress 063016;
    SetLocal 1 64;
    SetLocal 2 13;
    SetLocal 3 GetLocal(2);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  }
LocReturn 063016:
  TraceOperation 063023 (Push (Var (Global 49)));
  Let b1 = M[007304];
  Let b2 = M[007305];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 063026 (Store (Con 65) (Con 1));
  SetByte 007304 0;
  SetByte 007305 1;
  TraceOperation 063029 (CallN (Floc 076180) [Con 0,Var (Global 37),Con 27,Var (Local 2),Var (Local 1)]);
  Let b3 = M[007280];
  Let b4 = M[007281];
  PushFrame;
  PushReturnAddress 063029;
  SetLocal 1 0;
  SetLocal 2 MakeHiLo(b3,b4);
  SetLocal 3 27;
  SetLocal 4 GetLocal(2);
  SetLocal 5 GetLocal(1);
  MakeRoutineFrame 9;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  Jump: 076181
LocReturn 063029:
  TraceOperation 063039 (Pull (Con 65));
  PopStack popped1;
  SetByte 007304 HiByte(popped1);
  SetByte 007305 LoByte(popped1);
  TraceOperation 063042 (Call (Floc 102816) [Var (Local 2)] Sp);
  PushFrame;
  PushReturnAddress 063042;
  SetLocal 1 GetLocal(2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 102817
LocReturn 063042:
  PushStack call_result;
  TraceOperation 063048 (Je [Var (Local 1),Var Sp] (Branch T (Dloc 063053)));
  PopStack popped1;
  if (Equal(GetLocal(1),popped1)) {
    Jump: 063053
  } else {
    TraceOperation 063052 Rtrue;
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  }
LocOp 063053:
  TraceOperation 063053 (Jump 063067);
  Jump: 063067
--------------------------------------------------
LocRoutine 063058:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 063059
LocOp 063059:
  TraceOperation 063059 (And (Var (Global 233)) (Con 7) (Global 79));
  Let b1 = M[007672];
  Let b2 = M[007673];
  SetByte 007364 HiByte(And(MakeHiLo(b1,b2),7));
  SetByte 007365 LoByte(And(MakeHiLo(b1,b2),7));
  TraceOperation 063063 (Erase_window (Con 28417));
  Note "Erase_window (Con 28417)";
  Jump: 063067
LocOp 063067:
  TraceOperation 063067 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 063068:
  MakeRoutineFrame 0;
  Jump: 063069
LocOp 063069:
  TraceOperation 063069 (Jz (Var (Global 36)) (Branch F (Dloc 063110)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 063072 (Jz (Var (Global 114)) (Branch T (Dloc 063081)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 063081
    } else {
      TraceOperation 063075 (CallN (Floc 098228) [Con 15767]);
      PushFrame;
      PushReturnAddress 063075;
      SetLocal 1 15767;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 063110
  }
LocReturn 063075:
  Jump: 063081
LocOp 063081:
  TraceOperation 063081 (Call (Floc 088436) [Var (Global 37),Con 18] Sp);
  Let b1 = M[007280];
  Let b2 = M[007281];
  PushFrame;
  PushReturnAddress 063081;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 18;
  MakeRoutineFrame 2;
  Jump: 088437
LocReturn 063081:
  PushStack call_result;
  TraceOperation 063088 (Call (Floc 109120) [Var (Global 37)] Sp);
  Let b1 = M[007280];
  Let b2 = M[007281];
  PushFrame;
  PushReturnAddress 063088;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 3;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 109121
LocReturn 063088:
  PushStack call_result;
  TraceOperation 063094 (Jl (Var Sp) (Var Sp) (Branch T (Dloc 063107)));
  PopStack popped1;
  PopStack popped2;
  if (LessThan(popped1,popped2)) {
    Jump: 063107
  } else {
    TraceOperation 063098 (Call (Floc 041040) [Con 64,Con 12,Var (Global 37)] Sp);
    Let b3 = M[007280];
    Let b4 = M[007281];
    PushFrame;
    PushReturnAddress 063098;
    SetLocal 1 64;
    SetLocal 2 12;
    SetLocal 3 MakeHiLo(b3,b4);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  }
LocReturn 063098:
  PushStack call_result;
  TraceOperation 063106 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 063107:
  TraceOperation 063107 (Jump 063121);
  Jump: 063121
LocOp 063110:
  TraceOperation 063110 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 063121)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 063114 (CallN (Floc 098228) [Con 15767,Con 1]);
    PushFrame;
    PushReturnAddress 063114;
    SetLocal 1 15767;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 063121
  }
LocReturn 063114:
  Jump: 063121
LocOp 063121:
  TraceOperation 063121 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 063124:
  MakeRoutineFrame 0;
  Jump: 063125
LocOp 063125:
  TraceOperation 063125 (Jz (Var (Global 36)) (Branch F (Dloc 063146)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 063128 (Jz (Var (Global 114)) (Branch T (Dloc 063137)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 063137
    } else {
      TraceOperation 063131 (CallN (Floc 098228) [Con 15781]);
      PushFrame;
      PushReturnAddress 063131;
      SetLocal 1 15781;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 063146
  }
LocReturn 063131:
  Jump: 063137
LocOp 063137:
  TraceOperation 063137 (CallN (Floc 103224) [Var (Global 47),Var (Global 37)]);
  Let b1 = M[007300];
  Let b2 = M[007301];
  Let b3 = M[007280];
  Let b4 = M[007281];
  PushFrame;
  PushReturnAddress 063137;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 MakeHiLo(b3,b4);
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 103225
LocReturn 063137:
  TraceOperation 063143 (Jump 063157);
  Jump: 063157
LocOp 063146:
  TraceOperation 063146 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 063157)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 063150 (CallN (Floc 098228) [Con 15781,Con 1]);
    PushFrame;
    PushReturnAddress 063150;
    SetLocal 1 15781;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 063157
  }
LocReturn 063150:
  Jump: 063157
LocOp 063157:
  TraceOperation 063157 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 063160:
  MakeRoutineFrame 0;
  Jump: 063161
LocOp 063161:
  TraceOperation 063161 (Jz (Var (Global 36)) (Branch F (Dloc 063197)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 063164 (Jz (Var (Global 114)) (Branch T (Dloc 063173)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 063173
    } else {
      TraceOperation 063167 (CallN (Floc 098228) [Con 15790]);
      PushFrame;
      PushReturnAddress 063167;
      SetLocal 1 15790;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 063197
  }
LocReturn 063167:
  Jump: 063173
LocOp 063173:
  TraceOperation 063173 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 063187)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 063177 (CallN (Floc 041040) [Con 64,Con 1,Var (Global 47)]);
    Let b5 = M[007300];
    Let b6 = M[007301];
    PushFrame;
    PushReturnAddress 063177;
    SetLocal 1 64;
    SetLocal 2 1;
    SetLocal 3 MakeHiLo(b5,b6);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  } else {
    Jump: 063187
  }
LocReturn 063177:
  TraceOperation 063184 (Jump 063194);
  Jump: 063194
LocOp 063187:
  TraceOperation 063187 (CallN (Floc 041060) [Con 64,Con 16,Var (Global 47)]);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 063187;
  SetLocal 1 64;
  SetLocal 2 16;
  SetLocal 3 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041061
LocReturn 063187:
  Jump: 063194
LocOp 063194:
  TraceOperation 063194 (Jump 063208);
  Jump: 063208
LocOp 063197:
  TraceOperation 063197 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 063208)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 063201 (CallN (Floc 098228) [Con 15790,Con 1]);
    PushFrame;
    PushReturnAddress 063201;
    SetLocal 1 15790;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 063208
  }
LocReturn 063201:
  Jump: 063208
LocOp 063208:
  TraceOperation 063208 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 063212:
  MakeRoutineFrame 0;
  Jump: 063213
LocOp 063213:
  TraceOperation 063213 (Jz (Var (Global 36)) (Branch F (Dloc 063257)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 063216 (Call (Floc 026172) [Var (Global 47),Con 14] Sp);
    Let b3 = M[007300];
    Let b4 = M[007301];
    PushFrame;
    PushReturnAddress 063216;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 14;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 063257
  }
LocReturn 063216:
  PushStack call_result;
  TraceOperation 063223 (Jz (Var Sp) (Branch T (Dloc 063257)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 063257
  } else {
    TraceOperation 063226 (Jz (Var (Global 114)) (Branch T (Dloc 063235)));
    Let b2 = M[007434];
    Let b3 = M[007435];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 063235
    } else {
      TraceOperation 063229 (CallN (Floc 098228) [Con 15803]);
      PushFrame;
      PushReturnAddress 063229;
      SetLocal 1 15803;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  }
LocReturn 063229:
  Jump: 063235
LocOp 063235:
  TraceOperation 063235 (Call (Floc 102384) [Var (Global 47)] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 063235;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 1;
  Jump: 102385
LocReturn 063235:
  PushStack call_result;
  TraceOperation 063241 (Je [Var Sp,Var (Global 48)] (Branch T (Dloc 063254)));
  PopStack popped1;
  Let b2 = M[007302];
  Let b3 = M[007303];
  if (Equal(popped1,MakeHiLo(b2,b3))) {
    Jump: 063254
  } else {
    TraceOperation 063245 (Call (Floc 041040) [Con 49,Con 2,Var (Global 47)] Sp);
    Let b4 = M[007300];
    Let b5 = M[007301];
    PushFrame;
    PushReturnAddress 063245;
    SetLocal 1 49;
    SetLocal 2 2;
    SetLocal 3 MakeHiLo(b4,b5);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  }
LocReturn 063245:
  PushStack call_result;
  TraceOperation 063253 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 063254:
  TraceOperation 063254 (Jump 063268);
  Jump: 063268
LocOp 063257:
  TraceOperation 063257 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 063268)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 063261 (CallN (Floc 098228) [Con 15803,Con 1]);
    PushFrame;
    PushReturnAddress 063261;
    SetLocal 1 15803;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 063268
  }
LocReturn 063261:
  Jump: 063268
LocOp 063268:
  TraceOperation 063268 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 063272:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 063273
LocOp 063273:
  TraceOperation 063273 (Jz (Var (Global 36)) (Branch F (Dloc 063332)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 063276 (Call (Floc 026172) [Var (Global 47),Con 14] Sp);
    Let b3 = M[007300];
    Let b4 = M[007301];
    PushFrame;
    PushReturnAddress 063276;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 14;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 063332
  }
LocReturn 063276:
  PushStack call_result;
  TraceOperation 063283 (Jz (Var Sp) (Branch T (Dloc 063332)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 063332
  } else {
    TraceOperation 063286 (Jz (Var (Global 114)) (Branch T (Dloc 063295)));
    Let b2 = M[007434];
    Let b3 = M[007435];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 063295
    } else {
      TraceOperation 063289 (CallN (Floc 098228) [Con 15818]);
      PushFrame;
      PushReturnAddress 063289;
      SetLocal 1 15818;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  }
LocReturn 063289:
  Jump: 063295
LocOp 063295:
  TraceOperation 063295 (Call (Floc 102384) [Var (Global 47)] (Local 1));
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 063295;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 1;
  Jump: 102385
LocReturn 063295:
  SetLocal 1 call_result;
  TraceOperation 063301 (Jz (Var (Local 1)) (Branch T (Dloc 063329)));
  if (IsZero(GetLocal(1))) {
    Jump: 063329
  } else {
    TraceOperation 063304 (Call (Floc 102384) [Var (Global 47)] Sp);
    Let b1 = M[007300];
    Let b2 = M[007301];
    PushFrame;
    PushReturnAddress 063304;
    SetLocal 1 MakeHiLo(b1,b2);
    MakeRoutineFrame 1;
    Jump: 102385
  }
LocReturn 063304:
  PushStack call_result;
  TraceOperation 063310 (Call (Floc 026172) [Var Sp,Con 20] Sp);
  PopStack popped1;
  PushFrame;
  PushReturnAddress 063310;
  SetLocal 1 popped1;
  SetLocal 2 20;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 063310:
  PushStack call_result;
  TraceOperation 063317 (Jz (Var Sp) (Branch T (Dloc 063329)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 063329
  } else {
    TraceOperation 063320 (Call (Floc 041040) [Con 64,Con 6,Var (Local 1)] Sp);
    PushFrame;
    PushReturnAddress 063320;
    SetLocal 1 64;
    SetLocal 2 6;
    SetLocal 3 GetLocal(1);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  }
LocReturn 063320:
  PushStack call_result;
  TraceOperation 063328 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 063329:
  TraceOperation 063329 (Jump 063343);
  Jump: 063343
LocOp 063332:
  TraceOperation 063332 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 063343)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 063336 (CallN (Floc 098228) [Con 15818,Con 1]);
    PushFrame;
    PushReturnAddress 063336;
    SetLocal 1 15818;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 063343
  }
LocReturn 063336:
  Jump: 063343
LocOp 063343:
  TraceOperation 063343 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 063344:
  MakeRoutineFrame 0;
  Jump: 063345
LocOp 063345:
  TraceOperation 063345 (Jz (Var (Global 36)) (Branch F (Dloc 063376)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 063348 (Call (Floc 026172) [Var (Global 47),Con 14] Sp);
    Let b3 = M[007300];
    Let b4 = M[007301];
    PushFrame;
    PushReturnAddress 063348;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 14;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 063376
  }
LocReturn 063348:
  PushStack call_result;
  TraceOperation 063355 (Jz (Var Sp) (Branch T (Dloc 063376)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 063376
  } else {
    TraceOperation 063358 (Jz (Var (Global 114)) (Branch T (Dloc 063367)));
    Let b2 = M[007434];
    Let b3 = M[007435];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 063367
    } else {
      TraceOperation 063361 (CallN (Floc 098228) [Con 15836]);
      PushFrame;
      PushReturnAddress 063361;
      SetLocal 1 15836;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  }
LocReturn 063361:
  Jump: 063367
LocOp 063367:
  TraceOperation 063367 (Call (Floc 076480) [Con 64,Var (Global 47),Con 0] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 063367;
  SetLocal 1 64;
  SetLocal 2 MakeHiLo(b1,b2);
  SetLocal 3 0;
  MakeRoutineFrame 3;
  Jump: 076481
LocReturn 063367:
  PushStack call_result;
  TraceOperation 063375 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 063376:
  TraceOperation 063376 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 063387)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 063380 (CallN (Floc 098228) [Con 15836,Con 1]);
    PushFrame;
    PushReturnAddress 063380;
    SetLocal 1 15836;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 063387
  }
LocReturn 063380:
  Jump: 063387
LocOp 063387:
  TraceOperation 063387 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 063388:
  MakeRoutineFrame 0;
  Jump: 063389
LocOp 063389:
  TraceOperation 063389 (Jz (Var (Global 36)) (Branch F (Dloc 063417)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 063392 (Jz (Var (Global 114)) (Branch T (Dloc 063401)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 063401
    } else {
      TraceOperation 063395 (CallN (Floc 098228) [Con 15847]);
      PushFrame;
      PushReturnAddress 063395;
      SetLocal 1 15847;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 063417
  }
LocReturn 063395:
  Jump: 063401
LocOp 063401:
  TraceOperation 063401 (Je [Var (Global 47),Var (Global 37)] (Branch F (Dloc 063414)));
  Let b1 = M[007300];
  Let b2 = M[007301];
  Let b3 = M[007280];
  Let b4 = M[007281];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 063405 (Call (Floc 041040) [Con 48,Con 4,Var (Global 47)] Sp);
    Let b5 = M[007300];
    Let b6 = M[007301];
    PushFrame;
    PushReturnAddress 063405;
    SetLocal 1 48;
    SetLocal 2 4;
    SetLocal 3 MakeHiLo(b5,b6);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  } else {
    Jump: 063414
  }
LocReturn 063405:
  PushStack call_result;
  TraceOperation 063413 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 063414:
  TraceOperation 063414 (Jump 063428);
  Jump: 063428
LocOp 063417:
  TraceOperation 063417 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 063428)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 063421 (CallN (Floc 098228) [Con 15847,Con 1]);
    PushFrame;
    PushReturnAddress 063421;
    SetLocal 1 15847;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 063428
  }
LocReturn 063421:
  Jump: 063428
LocOp 063428:
  TraceOperation 063428 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 063432:
  MakeRoutineFrame 0;
  Jump: 063433
LocOp 063433:
  TraceOperation 063433 (Jz (Var (Global 36)) (Branch F (Dloc 063473)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 063436 (Jz (Var (Global 114)) (Branch T (Dloc 063445)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 063445
    } else {
      TraceOperation 063439 (CallN (Floc 098228) [Con 15858]);
      PushFrame;
      PushReturnAddress 063439;
      SetLocal 1 15858;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 063473
  }
LocReturn 063439:
  Jump: 063445
LocOp 063445:
  TraceOperation 063445 (Call (Floc 102816) [Var (Global 47)] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 063445;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 102817
LocReturn 063445:
  PushStack call_result;
  TraceOperation 063451 (Call (Floc 102384) [Var (Global 37)] Sp);
  Let b1 = M[007280];
  Let b2 = M[007281];
  PushFrame;
  PushReturnAddress 063451;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 1;
  Jump: 102385
LocReturn 063451:
  PushStack call_result;
  TraceOperation 063457 (Je [Var Sp,Var Sp] (Branch F (Dloc 063470)));
  PopStack popped1;
  PopStack popped2;
  if (Equal(popped1,popped2)) {
    TraceOperation 063461 (Call (Floc 041040) [Con 19,Con 1,Var (Global 47)] Sp);
    Let b3 = M[007300];
    Let b4 = M[007301];
    PushFrame;
    PushReturnAddress 063461;
    SetLocal 1 19;
    SetLocal 2 1;
    SetLocal 3 MakeHiLo(b3,b4);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  } else {
    Jump: 063470
  }
LocReturn 063461:
  PushStack call_result;
  TraceOperation 063469 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 063470:
  TraceOperation 063470 (Jump 063484);
  Jump: 063484
LocOp 063473:
  TraceOperation 063473 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 063484)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 063477 (CallN (Floc 098228) [Con 15858,Con 1]);
    PushFrame;
    PushReturnAddress 063477;
    SetLocal 1 15858;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 063484
  }
LocReturn 063477:
  Jump: 063484
LocOp 063484:
  TraceOperation 063484 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 063488:
  MakeRoutineFrame 0;
  Jump: 063489
LocOp 063489:
  TraceOperation 063489 (Jz (Var (Global 36)) (Branch F (Dloc 063532)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 063492 (Jz (Var (Global 114)) (Branch T (Dloc 063501)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 063501
    } else {
      TraceOperation 063495 (CallN (Floc 098228) [Con 15872]);
      PushFrame;
      PushReturnAddress 063495;
      SetLocal 1 15872;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 063532
  }
LocReturn 063495:
  Jump: 063501
LocOp 063501:
  TraceOperation 063501 (Call (Floc 102992) [Var (Global 47)] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 063501;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 102993
LocReturn 063501:
  PushStack call_result;
  TraceOperation 063507 (Je [Var (Global 37),Var Sp] (Branch F (Dloc 063512)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  PopStack popped3;
  if (Equal(MakeHiLo(b1,b2),popped3)) {
    TraceOperation 063511 Rfalse;
    PopFrame;
    PopReturnAddress return_address_4;
    SetResult 0;
    JumpIndirect: (return) return_address_4
  } else {
    Jump: 063512
  }
LocOp 063512:
  TraceOperation 063512 (Call (Floc 103016) [Var (Global 47)] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 063512;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 103017
LocReturn 063512:
  PushStack call_result;
  TraceOperation 063518 (Je [Var (Global 37),Var Sp] (Branch F (Dloc 063523)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  PopStack popped3;
  if (Equal(MakeHiLo(b1,b2),popped3)) {
    TraceOperation 063522 Rfalse;
    PopFrame;
    PopReturnAddress return_address_4;
    SetResult 0;
    JumpIndirect: (return) return_address_4
  } else {
    Jump: 063523
  }
LocOp 063523:
  TraceOperation 063523 (Call (Floc 041040) [Con 19,Con 2,Var (Global 47)] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 063523;
  SetLocal 1 19;
  SetLocal 2 2;
  SetLocal 3 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041041
LocReturn 063523:
  PushStack call_result;
  TraceOperation 063531 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 063532:
  TraceOperation 063532 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 063543)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 063536 (CallN (Floc 098228) [Con 15872,Con 1]);
    PushFrame;
    PushReturnAddress 063536;
    SetLocal 1 15872;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 063543
  }
LocReturn 063536:
  Jump: 063543
LocOp 063543:
  TraceOperation 063543 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 063544:
  MakeRoutineFrame 0;
  Jump: 063545
LocOp 063545:
  TraceOperation 063545 (Jz (Var (Global 36)) (Branch F (Dloc 063608)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 063549 (Jz (Var (Global 114)) (Branch T (Dloc 063558)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 063558
    } else {
      TraceOperation 063552 (CallN (Floc 098228) [Con 15886]);
      PushFrame;
      PushReturnAddress 063552;
      SetLocal 1 15886;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 063608
  }
LocReturn 063552:
  Jump: 063558
LocOp 063558:
  TraceOperation 063558 (Call (Floc 103016) [Var (Global 47)] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 063558;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 103017
LocReturn 063558:
  PushStack call_result;
  TraceOperation 063564 (Je [Var (Global 37),Var Sp] (Branch F (Dloc 063605)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  PopStack popped3;
  if (Equal(MakeHiLo(b1,b2),popped3)) {
    TraceOperation 063568 (CallN (Floc 041040) [Con 19,Con 3,Var (Global 47)]);
    Let b4 = M[007300];
    Let b5 = M[007301];
    PushFrame;
    PushReturnAddress 063568;
    SetLocal 1 19;
    SetLocal 2 3;
    SetLocal 3 MakeHiLo(b4,b5);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  } else {
    Jump: 063605
  }
LocReturn 063568:
  TraceOperation 063575 (Push (Var (Global 49)));
  Let b1 = M[007304];
  Let b2 = M[007305];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 063578 (Store (Con 65) (Con 1));
  SetByte 007304 0;
  SetByte 007305 1;
  TraceOperation 063581 (CallN (Floc 076180) [Con 0,Var (Global 37),Con 17,Var (Global 47),Con 0]);
  Let b3 = M[007280];
  Let b4 = M[007281];
  Let b5 = M[007300];
  Let b6 = M[007301];
  PushFrame;
  PushReturnAddress 063581;
  SetLocal 1 0;
  SetLocal 2 MakeHiLo(b3,b4);
  SetLocal 3 17;
  SetLocal 4 MakeHiLo(b5,b6);
  SetLocal 5 0;
  MakeRoutineFrame 9;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  Jump: 076181
LocReturn 063581:
  TraceOperation 063591 (Pull (Con 65));
  PopStack popped1;
  SetByte 007304 HiByte(popped1);
  SetByte 007305 LoByte(popped1);
  TraceOperation 063594 (Call (Floc 103016) [Var (Global 47)] Sp);
  Let b2 = M[007300];
  Let b3 = M[007301];
  PushFrame;
  PushReturnAddress 063594;
  SetLocal 1 MakeHiLo(b2,b3);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 103017
LocReturn 063594:
  PushStack call_result;
  TraceOperation 063600 (Je [Var (Global 37),Var Sp] (Branch F (Dloc 063605)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  PopStack popped3;
  if (Equal(MakeHiLo(b1,b2),popped3)) {
    TraceOperation 063604 Rtrue;
    PopFrame;
    PopReturnAddress return_address_4;
    SetResult 1;
    JumpIndirect: (return) return_address_4
  } else {
    Jump: 063605
  }
LocOp 063605:
  TraceOperation 063605 (Jump 063619);
  Jump: 063619
LocOp 063608:
  TraceOperation 063608 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 063619)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 063612 (CallN (Floc 098228) [Con 15886,Con 1]);
    PushFrame;
    PushReturnAddress 063612;
    SetLocal 1 15886;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 063619
  }
LocReturn 063612:
  Jump: 063619
LocOp 063619:
  TraceOperation 063619 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 063620:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 063621
LocOp 063621:
  TraceOperation 063621 (Jz (Var (Global 36)) (Branch F (Dloc 063747)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 063625 (Jz (Var (Global 114)) (Branch T (Dloc 063634)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 063634
    } else {
      TraceOperation 063628 (CallN (Floc 098228) [Con 15905]);
      PushFrame;
      PushReturnAddress 063628;
      SetLocal 1 15905;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 063747
  }
LocReturn 063628:
  Jump: 063634
LocOp 063634:
  TraceOperation 063634 (Call (Floc 102384) [Var (Global 37)] (Local 1));
  Let b1 = M[007280];
  Let b2 = M[007281];
  PushFrame;
  PushReturnAddress 063634;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 1;
  Jump: 102385
LocReturn 063634:
  SetLocal 1 call_result;
  TraceOperation 063640 (Call (Floc 026172) [Var (Local 1),Con 13] Sp);
  PushFrame;
  PushReturnAddress 063640;
  SetLocal 1 GetLocal(1);
  SetLocal 2 13;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 063640:
  PushStack call_result;
  TraceOperation 063647 (Jz (Var Sp) (Branch T (Dloc 063651)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 063651
  } else {
    TraceOperation 063650 Rfalse;
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  }
LocOp 063651:
  TraceOperation 063651 (Call (Floc 088056) [Var (Local 1),Con 0,Con 18] Sp);
  PushFrame;
  PushReturnAddress 063651;
  SetLocal 1 GetLocal(1);
  SetLocal 2 0;
  SetLocal 3 18;
  MakeRoutineFrame 9;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 088057
LocReturn 063651:
  PushStack call_result;
  TraceOperation 063659 (Jz (Var Sp) (Branch T (Dloc 063744)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 063744
  } else {
    TraceOperation 063663 (Call (Floc 026172) [Var (Local 1),Con 18] Sp);
    PushFrame;
    PushReturnAddress 063663;
    SetLocal 1 GetLocal(1);
    SetLocal 2 18;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  }
LocReturn 063663:
  PushStack call_result;
  TraceOperation 063670 (Jz (Var Sp) (Branch T (Dloc 063705)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 063705
  } else {
    TraceOperation 063673 (Call (Floc 088436) [Var (Local 1),Con 18] Sp);
    PushFrame;
    PushReturnAddress 063673;
    SetLocal 1 GetLocal(1);
    SetLocal 2 18;
    MakeRoutineFrame 2;
    Jump: 088437
  }
LocReturn 063673:
  PushStack call_result;
  TraceOperation 063680 (Call (Floc 109168) [Var (Local 1)] Sp);
  PushFrame;
  PushReturnAddress 063680;
  SetLocal 1 GetLocal(1);
  MakeRoutineFrame 3;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 109169
LocReturn 063680:
  PushStack call_result;
  TraceOperation 063686 (Jl (Var Sp) (Var Sp) (Branch T (Dloc 063702)));
  PopStack popped1;
  PopStack popped2;
  if (LessThan(popped1,popped2)) {
    Jump: 063702
  } else {
    TraceOperation 063690 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 063701)));
    Let b3 = M[007280];
    Let b4 = M[007281];
    Let b5 = M[007268];
    Let b6 = M[007269];
    if (Equal(MakeHiLo(b3,b4),MakeHiLo(b5,b6))) {
      TraceOperation 063694 (CallN (Floc 041040) [Con 19,Con 5,Var (Local 1)]);
      PushFrame;
      PushReturnAddress 063694;
      SetLocal 1 19;
      SetLocal 2 5;
      SetLocal 3 GetLocal(1);
      MakeRoutineFrame 4;
      SetLocal 4 0;
      Jump: 041041
    } else {
      Jump: 063701
    }
  }
LocReturn 063694:
  Jump: 063701
LocOp 063701:
  TraceOperation 063701 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 063702:
  TraceOperation 063702 (Jump 063744);
  Jump: 063744
LocOp 063705:
  TraceOperation 063705 (Call (Floc 026172) [Var (Local 1),Con 17] Sp);
  PushFrame;
  PushReturnAddress 063705;
  SetLocal 1 GetLocal(1);
  SetLocal 2 17;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 063705:
  PushStack call_result;
  TraceOperation 063712 (Jz (Var Sp) (Branch T (Dloc 063744)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 063744
  } else {
    TraceOperation 063715 (Call (Floc 088436) [Var (Local 1),Con 18] Sp);
    PushFrame;
    PushReturnAddress 063715;
    SetLocal 1 GetLocal(1);
    SetLocal 2 18;
    MakeRoutineFrame 2;
    Jump: 088437
  }
LocReturn 063715:
  PushStack call_result;
  TraceOperation 063722 (Call (Floc 109216) [Var (Local 1)] Sp);
  PushFrame;
  PushReturnAddress 063722;
  SetLocal 1 GetLocal(1);
  MakeRoutineFrame 3;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 109217
LocReturn 063722:
  PushStack call_result;
  TraceOperation 063728 (Jl (Var Sp) (Var Sp) (Branch T (Dloc 063744)));
  PopStack popped1;
  PopStack popped2;
  if (LessThan(popped1,popped2)) {
    Jump: 063744
  } else {
    TraceOperation 063732 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 063743)));
    Let b3 = M[007280];
    Let b4 = M[007281];
    Let b5 = M[007268];
    Let b6 = M[007269];
    if (Equal(MakeHiLo(b3,b4),MakeHiLo(b5,b6))) {
      TraceOperation 063736 (CallN (Floc 041040) [Con 19,Con 6,Var (Local 1)]);
      PushFrame;
      PushReturnAddress 063736;
      SetLocal 1 19;
      SetLocal 2 6;
      SetLocal 3 GetLocal(1);
      MakeRoutineFrame 4;
      SetLocal 4 0;
      Jump: 041041
    } else {
      Jump: 063743
    }
  }
LocReturn 063736:
  Jump: 063743
LocOp 063743:
  TraceOperation 063743 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 063744:
  TraceOperation 063744 (Jump 063758);
  Jump: 063758
LocOp 063747:
  TraceOperation 063747 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 063758)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 063751 (CallN (Floc 098228) [Con 15905,Con 1]);
    PushFrame;
    PushReturnAddress 063751;
    SetLocal 1 15905;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 063758
  }
LocReturn 063751:
  Jump: 063758
LocOp 063758:
  TraceOperation 063758 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 063760:
  MakeRoutineFrame 0;
  Jump: 063761
LocOp 063761:
  TraceOperation 063761 (Jz (Var (Global 36)) (Branch F (Dloc 063788)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 063764 (Jz (Var (Global 114)) (Branch T (Dloc 063773)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 063773
    } else {
      TraceOperation 063767 (CallN (Floc 098228) [Con 15940]);
      PushFrame;
      PushReturnAddress 063767;
      SetLocal 1 15940;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 063788
  }
LocReturn 063767:
  Jump: 063773
LocOp 063773:
  TraceOperation 063773 (Call (Floc 102384) [Var (Global 37)] Sp);
  Let b1 = M[007280];
  Let b2 = M[007281];
  PushFrame;
  PushReturnAddress 063773;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 1;
  Jump: 102385
LocReturn 063773:
  PushStack call_result;
  TraceOperation 063779 (CallN (Floc 103224) [Var (Global 47),Var Sp]);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PopStack popped3;
  PushFrame;
  PushReturnAddress 063779;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 popped3;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 103225
LocReturn 063779:
  TraceOperation 063785 (Jump 063799);
  Jump: 063799
LocOp 063788:
  TraceOperation 063788 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 063799)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 063792 (CallN (Floc 098228) [Con 15940,Con 1]);
    PushFrame;
    PushReturnAddress 063792;
    SetLocal 1 15940;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 063799
  }
LocReturn 063792:
  Jump: 063799
LocOp 063799:
  TraceOperation 063799 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 063800:
  MakeRoutineFrame 0;
  Jump: 063801
LocOp 063801:
  TraceOperation 063801 (Jz (Var (Global 36)) (Branch F (Dloc 063837)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 063804 (Jz (Var (Global 114)) (Branch T (Dloc 063813)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 063813
    } else {
      TraceOperation 063807 (CallN (Floc 098228) [Con 15950]);
      PushFrame;
      PushReturnAddress 063807;
      SetLocal 1 15950;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 063837
  }
LocReturn 063807:
  Jump: 063813
LocOp 063813:
  TraceOperation 063813 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 063827)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 063817 (CallN (Floc 041040) [Con 19,Con 4,Var (Global 47)]);
    Let b5 = M[007300];
    Let b6 = M[007301];
    PushFrame;
    PushReturnAddress 063817;
    SetLocal 1 19;
    SetLocal 2 4;
    SetLocal 3 MakeHiLo(b5,b6);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  } else {
    Jump: 063827
  }
LocReturn 063817:
  TraceOperation 063824 (Jump 063834);
  Jump: 063834
LocOp 063827:
  TraceOperation 063827 (CallN (Floc 041060) [Con 19,Con 7,Var (Global 47)]);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 063827;
  SetLocal 1 19;
  SetLocal 2 7;
  SetLocal 3 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041061
LocReturn 063827:
  Jump: 063834
LocOp 063834:
  TraceOperation 063834 (Jump 063848);
  Jump: 063848
LocOp 063837:
  TraceOperation 063837 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 063848)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 063841 (CallN (Floc 098228) [Con 15950,Con 1]);
    PushFrame;
    PushReturnAddress 063841;
    SetLocal 1 15950;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 063848
  }
LocReturn 063841:
  Jump: 063848
LocOp 063848:
  TraceOperation 063848 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 063852:
  MakeRoutineFrame 0;
  Jump: 063853
LocOp 063853:
  TraceOperation 063853 (Jz (Var (Global 36)) (Branch F (Dloc 063901)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 063856 (Call (Floc 026172) [Var (Global 47),Con 14] Sp);
    Let b3 = M[007300];
    Let b4 = M[007301];
    PushFrame;
    PushReturnAddress 063856;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 14;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 063901
  }
LocReturn 063856:
  PushStack call_result;
  TraceOperation 063863 (Jz (Var Sp) (Branch T (Dloc 063901)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 063901
  } else {
    TraceOperation 063866 (Jz (Var (Global 114)) (Branch T (Dloc 063875)));
    Let b2 = M[007434];
    Let b3 = M[007435];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 063875
    } else {
      TraceOperation 063869 (CallN (Floc 098228) [Con 15963]);
      PushFrame;
      PushReturnAddress 063869;
      SetLocal 1 15963;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  }
LocReturn 063869:
  Jump: 063875
LocOp 063875:
  TraceOperation 063875 (Je [Var (Global 48),Con 38] (Branch T (Dloc 063889)));
  Let b1 = M[007302];
  Let b2 = M[007303];
  if (Equal(MakeHiLo(b1,b2),38)) {
    Jump: 063889
  } else {
    TraceOperation 063879 (Call (Floc 102968) [Var (Global 37)] Sp);
    Let b3 = M[007280];
    Let b4 = M[007281];
    PushFrame;
    PushReturnAddress 063879;
    SetLocal 1 MakeHiLo(b3,b4);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 102969
  }
LocReturn 063879:
  PushStack call_result;
  TraceOperation 063885 (Je [Var (Global 48),Var Sp] (Branch F (Dloc 063898)));
  Let b1 = M[007302];
  Let b2 = M[007303];
  PopStack popped3;
  if (Equal(MakeHiLo(b1,b2),popped3)) {
    Jump: 063889
  } else {
    Jump: 063898
  }
LocOp 063889:
  TraceOperation 063889 (Call (Floc 076480) [Con 19,Var (Global 47),Con 0] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 063889;
  SetLocal 1 19;
  SetLocal 2 MakeHiLo(b1,b2);
  SetLocal 3 0;
  MakeRoutineFrame 3;
  Jump: 076481
LocReturn 063889:
  PushStack call_result;
  TraceOperation 063897 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 063898:
  TraceOperation 063898 (Jump 063912);
  Jump: 063912
LocOp 063901:
  TraceOperation 063901 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 063912)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 063905 (CallN (Floc 098228) [Con 15963,Con 1]);
    PushFrame;
    PushReturnAddress 063905;
    SetLocal 1 15963;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 063912
  }
LocReturn 063905:
  Jump: 063912
LocOp 063912:
  TraceOperation 063912 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 063916:
  MakeRoutineFrame 0;
  Jump: 063917
LocOp 063917:
  TraceOperation 063917 (Jz (Var (Global 36)) (Branch F (Dloc 063970)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 063920 (Call (Floc 026172) [Var (Global 47),Con 14] Sp);
    Let b3 = M[007300];
    Let b4 = M[007301];
    PushFrame;
    PushReturnAddress 063920;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 14;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 063970
  }
LocReturn 063920:
  PushStack call_result;
  TraceOperation 063927 (Jz (Var Sp) (Branch T (Dloc 063970)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 063970
  } else {
    TraceOperation 063930 (Jz (Var (Global 114)) (Branch T (Dloc 063939)));
    Let b2 = M[007434];
    Let b3 = M[007435];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 063939
    } else {
      TraceOperation 063933 (CallN (Floc 098228) [Con 15979]);
      PushFrame;
      PushReturnAddress 063933;
      SetLocal 1 15979;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  }
LocReturn 063933:
  Jump: 063939
LocOp 063939:
  TraceOperation 063939 (Call (Floc 102992) [Var (Global 47)] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 063939;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 102993
LocReturn 063939:
  PushStack call_result;
  TraceOperation 063945 (Je [Var (Global 37),Var Sp] (Branch F (Dloc 063950)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  PopStack popped3;
  if (Equal(MakeHiLo(b1,b2),popped3)) {
    TraceOperation 063949 Rfalse;
    PopFrame;
    PopReturnAddress return_address_4;
    SetResult 0;
    JumpIndirect: (return) return_address_4
  } else {
    Jump: 063950
  }
LocOp 063950:
  TraceOperation 063950 (Call (Floc 103016) [Var (Global 47)] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 063950;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 103017
LocReturn 063950:
  PushStack call_result;
  TraceOperation 063956 (Je [Var (Global 37),Var Sp] (Branch F (Dloc 063961)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  PopStack popped3;
  if (Equal(MakeHiLo(b1,b2),popped3)) {
    TraceOperation 063960 Rfalse;
    PopFrame;
    PopReturnAddress return_address_4;
    SetResult 0;
    JumpIndirect: (return) return_address_4
  } else {
    Jump: 063961
  }
LocOp 063961:
  TraceOperation 063961 (Call (Floc 041040) [Con 48,Con 1,Var (Global 47)] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 063961;
  SetLocal 1 48;
  SetLocal 2 1;
  SetLocal 3 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041041
LocReturn 063961:
  PushStack call_result;
  TraceOperation 063969 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 063970:
  TraceOperation 063970 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 063981)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 063974 (CallN (Floc 098228) [Con 15979,Con 1]);
    PushFrame;
    PushReturnAddress 063974;
    SetLocal 1 15979;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 063981
  }
LocReturn 063974:
  Jump: 063981
LocOp 063981:
  TraceOperation 063981 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 063984:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 063985
LocOp 063985:
  TraceOperation 063985 (Jz (Var (Global 36)) (Branch F (Dloc 064042)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 063988 (Call (Floc 026172) [Var (Global 47),Con 14] Sp);
    Let b3 = M[007300];
    Let b4 = M[007301];
    PushFrame;
    PushReturnAddress 063988;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 14;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 064042
  }
LocReturn 063988:
  PushStack call_result;
  TraceOperation 063995 (Jz (Var Sp) (Branch T (Dloc 064042)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 064042
  } else {
    TraceOperation 063998 (Jz (Var (Global 114)) (Branch T (Dloc 064007)));
    Let b2 = M[007434];
    Let b3 = M[007435];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 064007
    } else {
      TraceOperation 064001 (CallN (Floc 098228) [Con 15996]);
      PushFrame;
      PushReturnAddress 064001;
      SetLocal 1 15996;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  }
LocReturn 064001:
  Jump: 064007
LocOp 064007:
  TraceOperation 064007 (Call (Floc 102432) [Var (Global 47)] (Local 1));
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 064007;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 1;
  Jump: 102433
LocReturn 064007:
  SetLocal 1 call_result;
  TraceOperation 064013 (Call (Floc 102432) [Var (Global 48)] (Local 2));
  Let b1 = M[007302];
  Let b2 = M[007303];
  PushFrame;
  PushReturnAddress 064013;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 1;
  Jump: 102433
LocReturn 064013:
  SetLocal 2 call_result;
  TraceOperation 064019 (Call (Floc 102620) [Var (Local 1),Var (Local 2)] (Local 3));
  PushFrame;
  PushReturnAddress 064019;
  SetLocal 1 GetLocal(1);
  SetLocal 2 GetLocal(2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 102621
LocReturn 064019:
  SetLocal 3 call_result;
  TraceOperation 064026 (Je [Var (Local 3),Var (Local 1)] (Branch F (Dloc 064039)));
  if (Equal(GetLocal(3),GetLocal(1))) {
    TraceOperation 064030 (Call (Floc 041040) [Con 48,Con 2,Var (Global 47)] Sp);
    Let b1 = M[007300];
    Let b2 = M[007301];
    PushFrame;
    PushReturnAddress 064030;
    SetLocal 1 48;
    SetLocal 2 2;
    SetLocal 3 MakeHiLo(b1,b2);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  } else {
    Jump: 064039
  }
LocReturn 064030:
  PushStack call_result;
  TraceOperation 064038 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 064039:
  TraceOperation 064039 (Jump 064053);
  Jump: 064053
LocOp 064042:
  TraceOperation 064042 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 064053)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 064046 (CallN (Floc 098228) [Con 15996,Con 1]);
    PushFrame;
    PushReturnAddress 064046;
    SetLocal 1 15996;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 064053
  }
LocReturn 064046:
  Jump: 064053
LocOp 064053:
  TraceOperation 064053 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 064056:
  MakeRoutineFrame 0;
  Jump: 064057
LocOp 064057:
  TraceOperation 064057 (Jz (Var (Global 36)) (Branch F (Dloc 064100)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 064060 (Call (Floc 026172) [Var (Global 47),Con 14] Sp);
    Let b3 = M[007300];
    Let b4 = M[007301];
    PushFrame;
    PushReturnAddress 064060;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 14;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 064100
  }
LocReturn 064060:
  PushStack call_result;
  TraceOperation 064067 (Jz (Var Sp) (Branch T (Dloc 064100)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 064100
  } else {
    TraceOperation 064070 (Jz (Var (Global 114)) (Branch T (Dloc 064079)));
    Let b2 = M[007434];
    Let b3 = M[007435];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 064079
    } else {
      TraceOperation 064073 (CallN (Floc 098228) [Con 16014]);
      PushFrame;
      PushReturnAddress 064073;
      SetLocal 1 16014;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  }
LocReturn 064073:
  Jump: 064079
LocOp 064079:
  TraceOperation 064079 (Call (Floc 109256) [Var (Global 48)] Sp);
  Let b1 = M[007302];
  Let b2 = M[007303];
  PushFrame;
  PushReturnAddress 064079;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 109257
LocReturn 064079:
  PushStack call_result;
  TraceOperation 064085 (Jz (Var Sp) (Branch T (Dloc 064097)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 064097
  } else {
    TraceOperation 064088 (Call (Floc 041040) [Con 48,Con 3,Var (Global 48)] Sp);
    Let b2 = M[007302];
    Let b3 = M[007303];
    PushFrame;
    PushReturnAddress 064088;
    SetLocal 1 48;
    SetLocal 2 3;
    SetLocal 3 MakeHiLo(b2,b3);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  }
LocReturn 064088:
  PushStack call_result;
  TraceOperation 064096 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 064097:
  TraceOperation 064097 (Jump 064111);
  Jump: 064111
LocOp 064100:
  TraceOperation 064100 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 064111)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 064104 (CallN (Floc 098228) [Con 16014,Con 1]);
    PushFrame;
    PushReturnAddress 064104;
    SetLocal 1 16014;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 064111
  }
LocReturn 064104:
  Jump: 064111
LocOp 064111:
  TraceOperation 064111 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 064112:
  MakeRoutineFrame 0;
  Jump: 064113
LocOp 064113:
  TraceOperation 064113 (Jz (Var (Global 36)) (Branch F (Dloc 064157)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 064116 (Call (Floc 026172) [Var (Global 47),Con 14] Sp);
    Let b3 = M[007300];
    Let b4 = M[007301];
    PushFrame;
    PushReturnAddress 064116;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 14;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 064157
  }
LocReturn 064116:
  PushStack call_result;
  TraceOperation 064123 (Jz (Var Sp) (Branch T (Dloc 064157)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 064157
  } else {
    TraceOperation 064126 (Jz (Var (Global 114)) (Branch T (Dloc 064135)));
    Let b2 = M[007434];
    Let b3 = M[007435];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 064135
    } else {
      TraceOperation 064129 (CallN (Floc 098228) [Con 16028]);
      PushFrame;
      PushReturnAddress 064129;
      SetLocal 1 16028;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  }
LocReturn 064129:
  Jump: 064135
LocOp 064135:
  TraceOperation 064135 (Call (Floc 102676) [Var (Global 37),Var (Global 48)] Sp);
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007302];
  Let b4 = M[007303];
  PushFrame;
  PushReturnAddress 064135;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 MakeHiLo(b3,b4);
  MakeRoutineFrame 2;
  Jump: 102677
LocReturn 064135:
  PushStack call_result;
  TraceOperation 064142 (Jz (Var Sp) (Branch T (Dloc 064154)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 064154
  } else {
    TraceOperation 064145 (Call (Floc 041040) [Con 48,Con 4,Var (Global 48)] Sp);
    Let b2 = M[007302];
    Let b3 = M[007303];
    PushFrame;
    PushReturnAddress 064145;
    SetLocal 1 48;
    SetLocal 2 4;
    SetLocal 3 MakeHiLo(b2,b3);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  }
LocReturn 064145:
  PushStack call_result;
  TraceOperation 064153 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 064154:
  TraceOperation 064154 (Jump 064168);
  Jump: 064168
LocOp 064157:
  TraceOperation 064157 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 064168)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 064161 (CallN (Floc 098228) [Con 16028,Con 1]);
    PushFrame;
    PushReturnAddress 064161;
    SetLocal 1 16028;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 064168
  }
LocReturn 064161:
  Jump: 064168
LocOp 064168:
  TraceOperation 064168 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 064172:
  MakeRoutineFrame 0;
  Jump: 064173
LocOp 064173:
  TraceOperation 064173 (Jz (Var (Global 36)) (Branch F (Dloc 064247)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 064177 (Call (Floc 026172) [Var (Global 47),Con 14] Sp);
    Let b3 = M[007300];
    Let b4 = M[007301];
    PushFrame;
    PushReturnAddress 064177;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 14;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 064247
  }
LocReturn 064177:
  PushStack call_result;
  TraceOperation 064184 (Jz (Var Sp) (Branch T (Dloc 064247)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 064247
  } else {
    TraceOperation 064188 (Jz (Var (Global 114)) (Branch T (Dloc 064197)));
    Let b2 = M[007434];
    Let b3 = M[007435];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 064197
    } else {
      TraceOperation 064191 (CallN (Floc 098228) [Con 16043]);
      PushFrame;
      PushReturnAddress 064191;
      SetLocal 1 16043;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  }
LocReturn 064191:
  Jump: 064197
LocOp 064197:
  TraceOperation 064197 (Call (Floc 103016) [Var (Global 47)] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 064197;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 103017
LocReturn 064197:
  PushStack call_result;
  TraceOperation 064203 (Je [Var (Global 37),Var Sp] (Branch F (Dloc 064244)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  PopStack popped3;
  if (Equal(MakeHiLo(b1,b2),popped3)) {
    TraceOperation 064207 (CallN (Floc 041040) [Con 48,Con 5,Var (Global 47)]);
    Let b4 = M[007300];
    Let b5 = M[007301];
    PushFrame;
    PushReturnAddress 064207;
    SetLocal 1 48;
    SetLocal 2 5;
    SetLocal 3 MakeHiLo(b4,b5);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  } else {
    Jump: 064244
  }
LocReturn 064207:
  TraceOperation 064214 (Push (Var (Global 49)));
  Let b1 = M[007304];
  Let b2 = M[007305];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 064217 (Store (Con 65) (Con 1));
  SetByte 007304 0;
  SetByte 007305 1;
  TraceOperation 064220 (CallN (Floc 076180) [Con 0,Var (Global 37),Con 17,Var (Global 47),Con 0]);
  Let b3 = M[007280];
  Let b4 = M[007281];
  Let b5 = M[007300];
  Let b6 = M[007301];
  PushFrame;
  PushReturnAddress 064220;
  SetLocal 1 0;
  SetLocal 2 MakeHiLo(b3,b4);
  SetLocal 3 17;
  SetLocal 4 MakeHiLo(b5,b6);
  SetLocal 5 0;
  MakeRoutineFrame 9;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  Jump: 076181
LocReturn 064220:
  TraceOperation 064230 (Pull (Con 65));
  PopStack popped1;
  SetByte 007304 HiByte(popped1);
  SetByte 007305 LoByte(popped1);
  TraceOperation 064233 (Call (Floc 103016) [Var (Global 47)] Sp);
  Let b2 = M[007300];
  Let b3 = M[007301];
  PushFrame;
  PushReturnAddress 064233;
  SetLocal 1 MakeHiLo(b2,b3);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 103017
LocReturn 064233:
  PushStack call_result;
  TraceOperation 064239 (Je [Var (Global 37),Var Sp] (Branch F (Dloc 064244)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  PopStack popped3;
  if (Equal(MakeHiLo(b1,b2),popped3)) {
    TraceOperation 064243 Rtrue;
    PopFrame;
    PopReturnAddress return_address_4;
    SetResult 1;
    JumpIndirect: (return) return_address_4
  } else {
    Jump: 064244
  }
LocOp 064244:
  TraceOperation 064244 (Jump 064258);
  Jump: 064258
LocOp 064247:
  TraceOperation 064247 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 064258)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 064251 (CallN (Floc 098228) [Con 16043,Con 1]);
    PushFrame;
    PushReturnAddress 064251;
    SetLocal 1 16043;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 064258
  }
LocReturn 064251:
  Jump: 064258
LocOp 064258:
  TraceOperation 064258 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 064260:
  MakeRoutineFrame 0;
  Jump: 064261
LocOp 064261:
  TraceOperation 064261 (Jz (Var (Global 36)) (Branch F (Dloc 064324)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 064265 (Call (Floc 026172) [Var (Global 47),Con 14] Sp);
    Let b3 = M[007300];
    Let b4 = M[007301];
    PushFrame;
    PushReturnAddress 064265;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 14;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 064324
  }
LocReturn 064265:
  PushStack call_result;
  TraceOperation 064272 (Jz (Var Sp) (Branch T (Dloc 064324)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 064324
  } else {
    TraceOperation 064275 (Jz (Var (Global 114)) (Branch T (Dloc 064284)));
    Let b2 = M[007434];
    Let b3 = M[007435];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 064284
    } else {
      TraceOperation 064278 (CallN (Floc 098228) [Con 16065]);
      PushFrame;
      PushReturnAddress 064278;
      SetLocal 1 16065;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  }
LocReturn 064278:
  Jump: 064284
LocOp 064284:
  TraceOperation 064284 (Call (Floc 088056) [Var (Global 48),Con 0,Con 18] Sp);
  Let b1 = M[007302];
  Let b2 = M[007303];
  PushFrame;
  PushReturnAddress 064284;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 0;
  SetLocal 3 18;
  MakeRoutineFrame 9;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 088057
LocReturn 064284:
  PushStack call_result;
  TraceOperation 064292 (Jz (Var Sp) (Branch T (Dloc 064321)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 064321
  } else {
    TraceOperation 064295 (Call (Floc 088436) [Var (Global 48),Con 18] Sp);
    Let b2 = M[007302];
    Let b3 = M[007303];
    PushFrame;
    PushReturnAddress 064295;
    SetLocal 1 MakeHiLo(b2,b3);
    SetLocal 2 18;
    MakeRoutineFrame 2;
    Jump: 088437
  }
LocReturn 064295:
  PushStack call_result;
  TraceOperation 064302 (Call (Floc 109296) [Var (Global 48)] Sp);
  Let b1 = M[007302];
  Let b2 = M[007303];
  PushFrame;
  PushReturnAddress 064302;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 3;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 109297
LocReturn 064302:
  PushStack call_result;
  TraceOperation 064308 (Jl (Var Sp) (Var Sp) (Branch T (Dloc 064321)));
  PopStack popped1;
  PopStack popped2;
  if (LessThan(popped1,popped2)) {
    Jump: 064321
  } else {
    TraceOperation 064312 (Call (Floc 041040) [Con 48,Con 6,Var (Global 48)] Sp);
    Let b3 = M[007302];
    Let b4 = M[007303];
    PushFrame;
    PushReturnAddress 064312;
    SetLocal 1 48;
    SetLocal 2 6;
    SetLocal 3 MakeHiLo(b3,b4);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  }
LocReturn 064312:
  PushStack call_result;
  TraceOperation 064320 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 064321:
  TraceOperation 064321 (Jump 064335);
  Jump: 064335
LocOp 064324:
  TraceOperation 064324 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 064335)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 064328 (CallN (Floc 098228) [Con 16065,Con 1]);
    PushFrame;
    PushReturnAddress 064328;
    SetLocal 1 16065;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 064335
  }
LocReturn 064328:
  Jump: 064335
LocOp 064335:
  TraceOperation 064335 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 064336:
  MakeRoutineFrame 0;
  Jump: 064337
LocOp 064337:
  TraceOperation 064337 (Jz (Var (Global 36)) (Branch F (Dloc 064368)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 064340 (Call (Floc 026172) [Var (Global 47),Con 14] Sp);
    Let b3 = M[007300];
    Let b4 = M[007301];
    PushFrame;
    PushReturnAddress 064340;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 14;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 064368
  }
LocReturn 064340:
  PushStack call_result;
  TraceOperation 064347 (Jz (Var Sp) (Branch T (Dloc 064368)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 064368
  } else {
    TraceOperation 064350 (Jz (Var (Global 114)) (Branch T (Dloc 064359)));
    Let b2 = M[007434];
    Let b3 = M[007435];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 064359
    } else {
      TraceOperation 064353 (CallN (Floc 098228) [Con 16084]);
      PushFrame;
      PushReturnAddress 064353;
      SetLocal 1 16084;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  }
LocReturn 064353:
  Jump: 064359
LocOp 064359:
  TraceOperation 064359 (CallN (Floc 103224) [Var (Global 47),Var (Global 48)]);
  Let b1 = M[007300];
  Let b2 = M[007301];
  Let b3 = M[007302];
  Let b4 = M[007303];
  PushFrame;
  PushReturnAddress 064359;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 MakeHiLo(b3,b4);
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 103225
LocReturn 064359:
  TraceOperation 064365 (Jump 064379);
  Jump: 064379
LocOp 064368:
  TraceOperation 064368 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 064379)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 064372 (CallN (Floc 098228) [Con 16084,Con 1]);
    PushFrame;
    PushReturnAddress 064372;
    SetLocal 1 16084;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 064379
  }
LocReturn 064372:
  Jump: 064379
LocOp 064379:
  TraceOperation 064379 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 064380:
  MakeRoutineFrame 0;
  Jump: 064381
LocOp 064381:
  TraceOperation 064381 (Jz (Var (Global 36)) (Branch F (Dloc 064424)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 064384 (Call (Floc 026172) [Var (Global 47),Con 14] Sp);
    Let b3 = M[007300];
    Let b4 = M[007301];
    PushFrame;
    PushReturnAddress 064384;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 14;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 064424
  }
LocReturn 064384:
  PushStack call_result;
  TraceOperation 064391 (Jz (Var Sp) (Branch T (Dloc 064424)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 064424
  } else {
    TraceOperation 064394 (Jz (Var (Global 114)) (Branch T (Dloc 064403)));
    Let b2 = M[007434];
    Let b3 = M[007435];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 064403
    } else {
      TraceOperation 064397 (CallN (Floc 098228) [Con 16095]);
      PushFrame;
      PushReturnAddress 064397;
      SetLocal 1 16095;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  }
LocReturn 064397:
  Jump: 064403
LocOp 064403:
  TraceOperation 064403 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 064420)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 064407 (Je [Var (Global 45),Con 1] (Branch F (Dloc 064420)));
    Let b5 = M[007296];
    Let b6 = M[007297];
    if (Equal(MakeHiLo(b5,b6),1)) {
      TraceOperation 064411 (Call (Floc 041040) [Con 48,Con 7,Var (Global 47)] Sp);
      Let b7 = M[007300];
      Let b8 = M[007301];
      PushFrame;
      PushReturnAddress 064411;
      SetLocal 1 48;
      SetLocal 2 7;
      SetLocal 3 MakeHiLo(b7,b8);
      MakeRoutineFrame 4;
      SetLocal 4 0;
      Jump: 041041
    } else {
      Jump: 064420
    }
  } else {
    Jump: 064420
  }
LocReturn 064411:
  PushStack call_result;
  TraceOperation 064419 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 064420:
  TraceOperation 064420 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 064422:
  MakeRoutineFrame 0;
  Jump: 064423
LocOp 064423:
  TraceOperation 064423 (Store (Con 67) (Con 130));
  SetByte 007308 0;
  SetByte 007309 130;
  TraceOperation 064426 (Je [Con 73,Con 249] (Branch F (Dloc 066316)));
  Jump: 066316
--------------------------------------------------
LocRoutine 064436:
  MakeRoutineFrame 0;
  Jump: 064437
LocOp 064437:
  TraceOperation 064437 (Jz (Var (Global 36)) (Branch F (Dloc 064483)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 064440 (Call (Floc 026172) [Var (Global 47),Con 14] Sp);
    Let b3 = M[007300];
    Let b4 = M[007301];
    PushFrame;
    PushReturnAddress 064440;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 14;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 064483
  }
LocReturn 064440:
  PushStack call_result;
  TraceOperation 064447 (Jz (Var Sp) (Branch T (Dloc 064483)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 064483
  } else {
    TraceOperation 064450 (Jz (Var (Global 114)) (Branch T (Dloc 064459)));
    Let b2 = M[007434];
    Let b3 = M[007435];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 064459
    } else {
      TraceOperation 064453 (CallN (Floc 098228) [Con 16109]);
      PushFrame;
      PushReturnAddress 064453;
      SetLocal 1 16109;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  }
LocReturn 064453:
  Jump: 064459
LocOp 064459:
  TraceOperation 064459 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 064473)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 064463 (CallN (Floc 041040) [Con 48,Con 8,Var (Global 47)]);
    Let b5 = M[007300];
    Let b6 = M[007301];
    PushFrame;
    PushReturnAddress 064463;
    SetLocal 1 48;
    SetLocal 2 8;
    SetLocal 3 MakeHiLo(b5,b6);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  } else {
    Jump: 064473
  }
LocReturn 064463:
  TraceOperation 064470 (Jump 064480);
  Jump: 064480
LocOp 064473:
  TraceOperation 064473 (CallN (Floc 041060) [Con 48,Con 9,Var (Global 47)]);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 064473;
  SetLocal 1 48;
  SetLocal 2 9;
  SetLocal 3 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041061
LocReturn 064473:
  Jump: 064480
LocOp 064480:
  TraceOperation 064480 (Jump 064494);
  Jump: 064494
LocOp 064483:
  TraceOperation 064483 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 064494)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 064487 (CallN (Floc 098228) [Con 16109,Con 1]);
    PushFrame;
    PushReturnAddress 064487;
    SetLocal 1 16109;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 064494
  }
LocReturn 064487:
  Jump: 064494
LocOp 064494:
  TraceOperation 064494 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 064496:
  MakeRoutineFrame 0;
  Jump: 064497
LocOp 064497:
  TraceOperation 064497 (Jz (Var (Global 36)) (Branch F (Dloc 064545)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 064500 (Call (Floc 026172) [Var (Global 47),Con 14] Sp);
    Let b3 = M[007300];
    Let b4 = M[007301];
    PushFrame;
    PushReturnAddress 064500;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 14;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 064545
  }
LocReturn 064500:
  PushStack call_result;
  TraceOperation 064507 (Jz (Var Sp) (Branch T (Dloc 064545)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 064545
  } else {
    TraceOperation 064510 (Jz (Var (Global 114)) (Branch T (Dloc 064519)));
    Let b2 = M[007434];
    Let b3 = M[007435];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 064519
    } else {
      TraceOperation 064513 (CallN (Floc 098228) [Con 16124]);
      PushFrame;
      PushReturnAddress 064513;
      SetLocal 1 16124;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  }
LocReturn 064513:
  Jump: 064519
LocOp 064519:
  TraceOperation 064519 (Je [Var (Global 48),Con 38] (Branch T (Dloc 064533)));
  Let b1 = M[007302];
  Let b2 = M[007303];
  if (Equal(MakeHiLo(b1,b2),38)) {
    Jump: 064533
  } else {
    TraceOperation 064523 (Call (Floc 102816) [Var (Global 37)] Sp);
    Let b3 = M[007280];
    Let b4 = M[007281];
    PushFrame;
    PushReturnAddress 064523;
    SetLocal 1 MakeHiLo(b3,b4);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 102817
  }
LocReturn 064523:
  PushStack call_result;
  TraceOperation 064529 (Je [Var (Global 48),Var Sp] (Branch F (Dloc 064542)));
  Let b1 = M[007302];
  Let b2 = M[007303];
  PopStack popped3;
  if (Equal(MakeHiLo(b1,b2),popped3)) {
    Jump: 064533
  } else {
    Jump: 064542
  }
LocOp 064533:
  TraceOperation 064533 (Call (Floc 076480) [Con 19,Var (Global 47),Con 0] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 064533;
  SetLocal 1 19;
  SetLocal 2 MakeHiLo(b1,b2);
  SetLocal 3 0;
  MakeRoutineFrame 3;
  Jump: 076481
LocReturn 064533:
  PushStack call_result;
  TraceOperation 064541 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 064542:
  TraceOperation 064542 (Jump 064556);
  Jump: 064556
LocOp 064545:
  TraceOperation 064545 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 064556)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 064549 (CallN (Floc 098228) [Con 16124,Con 1]);
    PushFrame;
    PushReturnAddress 064549;
    SetLocal 1 16124;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 064556
  }
LocReturn 064549:
  Jump: 064556
LocOp 064556:
  TraceOperation 064556 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 064560:
  MakeRoutineFrame 0;
  Jump: 064561
LocOp 064561:
  TraceOperation 064561 (Jz (Var (Global 36)) (Branch F (Dloc 064614)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 064564 (Call (Floc 026172) [Var (Global 47),Con 14] Sp);
    Let b3 = M[007300];
    Let b4 = M[007301];
    PushFrame;
    PushReturnAddress 064564;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 14;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 064614
  }
LocReturn 064564:
  PushStack call_result;
  TraceOperation 064571 (Jz (Var Sp) (Branch T (Dloc 064614)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 064614
  } else {
    TraceOperation 064574 (Jz (Var (Global 114)) (Branch T (Dloc 064583)));
    Let b2 = M[007434];
    Let b3 = M[007435];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 064583
    } else {
      TraceOperation 064577 (CallN (Floc 098228) [Con 16140]);
      PushFrame;
      PushReturnAddress 064577;
      SetLocal 1 16140;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  }
LocReturn 064577:
  Jump: 064583
LocOp 064583:
  TraceOperation 064583 (Call (Floc 102992) [Var (Global 47)] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 064583;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 102993
LocReturn 064583:
  PushStack call_result;
  TraceOperation 064589 (Je [Var (Global 37),Var Sp] (Branch F (Dloc 064594)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  PopStack popped3;
  if (Equal(MakeHiLo(b1,b2),popped3)) {
    TraceOperation 064593 Rfalse;
    PopFrame;
    PopReturnAddress return_address_4;
    SetResult 0;
    JumpIndirect: (return) return_address_4
  } else {
    Jump: 064594
  }
LocOp 064594:
  TraceOperation 064594 (Call (Floc 103016) [Var (Global 47)] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 064594;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 103017
LocReturn 064594:
  PushStack call_result;
  TraceOperation 064600 (Je [Var (Global 37),Var Sp] (Branch F (Dloc 064605)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  PopStack popped3;
  if (Equal(MakeHiLo(b1,b2),popped3)) {
    TraceOperation 064604 Rfalse;
    PopFrame;
    PopReturnAddress return_address_4;
    SetResult 0;
    JumpIndirect: (return) return_address_4
  } else {
    Jump: 064605
  }
LocOp 064605:
  TraceOperation 064605 (Call (Floc 041040) [Con 27,Con 1,Var (Global 47)] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 064605;
  SetLocal 1 27;
  SetLocal 2 1;
  SetLocal 3 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041041
LocReturn 064605:
  PushStack call_result;
  TraceOperation 064613 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 064614:
  TraceOperation 064614 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 064625)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 064618 (CallN (Floc 098228) [Con 16140,Con 1]);
    PushFrame;
    PushReturnAddress 064618;
    SetLocal 1 16140;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 064625
  }
LocReturn 064618:
  Jump: 064625
LocOp 064625:
  TraceOperation 064625 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 064628:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 064629
LocOp 064629:
  TraceOperation 064629 (Jz (Var (Global 36)) (Branch F (Dloc 064686)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 064632 (Call (Floc 026172) [Var (Global 47),Con 14] Sp);
    Let b3 = M[007300];
    Let b4 = M[007301];
    PushFrame;
    PushReturnAddress 064632;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 14;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 064686
  }
LocReturn 064632:
  PushStack call_result;
  TraceOperation 064639 (Jz (Var Sp) (Branch T (Dloc 064686)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 064686
  } else {
    TraceOperation 064642 (Jz (Var (Global 114)) (Branch T (Dloc 064651)));
    Let b2 = M[007434];
    Let b3 = M[007435];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 064651
    } else {
      TraceOperation 064645 (CallN (Floc 098228) [Con 16157]);
      PushFrame;
      PushReturnAddress 064645;
      SetLocal 1 16157;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  }
LocReturn 064645:
  Jump: 064651
LocOp 064651:
  TraceOperation 064651 (Call (Floc 102432) [Var (Global 47)] (Local 1));
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 064651;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 1;
  Jump: 102433
LocReturn 064651:
  SetLocal 1 call_result;
  TraceOperation 064657 (Call (Floc 102432) [Var (Global 48)] (Local 2));
  Let b1 = M[007302];
  Let b2 = M[007303];
  PushFrame;
  PushReturnAddress 064657;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 1;
  Jump: 102433
LocReturn 064657:
  SetLocal 2 call_result;
  TraceOperation 064663 (Call (Floc 102620) [Var (Local 1),Var (Local 2)] (Local 3));
  PushFrame;
  PushReturnAddress 064663;
  SetLocal 1 GetLocal(1);
  SetLocal 2 GetLocal(2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 102621
LocReturn 064663:
  SetLocal 3 call_result;
  TraceOperation 064670 (Je [Var (Local 3),Var (Local 1)] (Branch F (Dloc 064683)));
  if (Equal(GetLocal(3),GetLocal(1))) {
    TraceOperation 064674 (Call (Floc 041040) [Con 27,Con 5,Var (Global 47)] Sp);
    Let b1 = M[007300];
    Let b2 = M[007301];
    PushFrame;
    PushReturnAddress 064674;
    SetLocal 1 27;
    SetLocal 2 5;
    SetLocal 3 MakeHiLo(b1,b2);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  } else {
    Jump: 064683
  }
LocReturn 064674:
  PushStack call_result;
  TraceOperation 064682 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 064683:
  TraceOperation 064683 (Jump 064697);
  Jump: 064697
LocOp 064686:
  TraceOperation 064686 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 064697)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 064690 (CallN (Floc 098228) [Con 16157,Con 1]);
    PushFrame;
    PushReturnAddress 064690;
    SetLocal 1 16157;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 064697
  }
LocReturn 064690:
  Jump: 064697
LocOp 064697:
  TraceOperation 064697 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 064700:
  MakeRoutineFrame 0;
  Jump: 064701
LocOp 064701:
  TraceOperation 064701 (Jz (Var (Global 36)) (Branch F (Dloc 064755)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 064704 (Call (Floc 026172) [Var (Global 47),Con 14] Sp);
    Let b3 = M[007300];
    Let b4 = M[007301];
    PushFrame;
    PushReturnAddress 064704;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 14;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 064755
  }
LocReturn 064704:
  PushStack call_result;
  TraceOperation 064711 (Jz (Var Sp) (Branch T (Dloc 064755)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 064755
  } else {
    TraceOperation 064714 (Jz (Var (Global 114)) (Branch T (Dloc 064723)));
    Let b2 = M[007434];
    Let b3 = M[007435];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 064723
    } else {
      TraceOperation 064717 (CallN (Floc 098228) [Con 16175]);
      PushFrame;
      PushReturnAddress 064717;
      SetLocal 1 16175;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  }
LocReturn 064717:
  Jump: 064723
LocOp 064723:
  TraceOperation 064723 (Call (Floc 026172) [Var (Global 48),Con 17] Sp);
  Let b1 = M[007302];
  Let b2 = M[007303];
  PushFrame;
  PushReturnAddress 064723;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 17;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 064723:
  PushStack call_result;
  TraceOperation 064730 (Jz (Var Sp) (Branch T (Dloc 064752)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 064752
  } else {
    TraceOperation 064733 (Call (Floc 088304) [Var (Global 48),Con 13] Sp);
    Let b2 = M[007302];
    Let b3 = M[007303];
    PushFrame;
    PushReturnAddress 064733;
    SetLocal 1 MakeHiLo(b2,b3);
    SetLocal 2 13;
    MakeRoutineFrame 2;
    Jump: 088305
  }
LocReturn 064733:
  PushStack call_result;
  TraceOperation 064740 (Jz (Var Sp) (Branch F (Dloc 064752)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 064743 (Call (Floc 041040) [Con 27,Con 3,Var (Global 48)] Sp);
    Let b2 = M[007302];
    Let b3 = M[007303];
    PushFrame;
    PushReturnAddress 064743;
    SetLocal 1 27;
    SetLocal 2 3;
    SetLocal 3 MakeHiLo(b2,b3);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  } else {
    Jump: 064752
  }
LocReturn 064743:
  PushStack call_result;
  TraceOperation 064751 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 064752:
  TraceOperation 064752 (Jump 064766);
  Jump: 064766
LocOp 064755:
  TraceOperation 064755 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 064766)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 064759 (CallN (Floc 098228) [Con 16175,Con 1]);
    PushFrame;
    PushReturnAddress 064759;
    SetLocal 1 16175;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 064766
  }
LocReturn 064759:
  Jump: 064766
LocOp 064766:
  TraceOperation 064766 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 064768:
  MakeRoutineFrame 0;
  Jump: 064769
LocOp 064769:
  TraceOperation 064769 (Jz (Var (Global 36)) (Branch F (Dloc 064812)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 064772 (Call (Floc 026172) [Var (Global 47),Con 14] Sp);
    Let b3 = M[007300];
    Let b4 = M[007301];
    PushFrame;
    PushReturnAddress 064772;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 14;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 064812
  }
LocReturn 064772:
  PushStack call_result;
  TraceOperation 064779 (Jz (Var Sp) (Branch T (Dloc 064812)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 064812
  } else {
    TraceOperation 064782 (Jz (Var (Global 114)) (Branch T (Dloc 064791)));
    Let b2 = M[007434];
    Let b3 = M[007435];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 064791
    } else {
      TraceOperation 064785 (CallN (Floc 098228) [Con 16192]);
      PushFrame;
      PushReturnAddress 064785;
      SetLocal 1 16192;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  }
LocReturn 064785:
  Jump: 064791
LocOp 064791:
  TraceOperation 064791 (Call (Floc 109344) [Var (Global 48)] Sp);
  Let b1 = M[007302];
  Let b2 = M[007303];
  PushFrame;
  PushReturnAddress 064791;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 109345
LocReturn 064791:
  PushStack call_result;
  TraceOperation 064797 (Jz (Var Sp) (Branch T (Dloc 064809)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 064809
  } else {
    TraceOperation 064800 (Call (Floc 041040) [Con 27,Con 2,Var (Global 48)] Sp);
    Let b2 = M[007302];
    Let b3 = M[007303];
    PushFrame;
    PushReturnAddress 064800;
    SetLocal 1 27;
    SetLocal 2 2;
    SetLocal 3 MakeHiLo(b2,b3);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  }
LocReturn 064800:
  PushStack call_result;
  TraceOperation 064808 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 064809:
  TraceOperation 064809 (Jump 064823);
  Jump: 064823
LocOp 064812:
  TraceOperation 064812 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 064823)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 064816 (CallN (Floc 098228) [Con 16192,Con 1]);
    PushFrame;
    PushReturnAddress 064816;
    SetLocal 1 16192;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 064823
  }
LocReturn 064816:
  Jump: 064823
LocOp 064823:
  TraceOperation 064823 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 064824:
  MakeRoutineFrame 0;
  Jump: 064825
LocOp 064825:
  TraceOperation 064825 (Jz (Var (Global 36)) (Branch F (Dloc 064899)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 064829 (Call (Floc 026172) [Var (Global 47),Con 14] Sp);
    Let b3 = M[007300];
    Let b4 = M[007301];
    PushFrame;
    PushReturnAddress 064829;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 14;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 064899
  }
LocReturn 064829:
  PushStack call_result;
  TraceOperation 064836 (Jz (Var Sp) (Branch T (Dloc 064899)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 064899
  } else {
    TraceOperation 064840 (Jz (Var (Global 114)) (Branch T (Dloc 064849)));
    Let b2 = M[007434];
    Let b3 = M[007435];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 064849
    } else {
      TraceOperation 064843 (CallN (Floc 098228) [Con 16206]);
      PushFrame;
      PushReturnAddress 064843;
      SetLocal 1 16206;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  }
LocReturn 064843:
  Jump: 064849
LocOp 064849:
  TraceOperation 064849 (Call (Floc 103016) [Var (Global 47)] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 064849;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 103017
LocReturn 064849:
  PushStack call_result;
  TraceOperation 064855 (Je [Var (Global 37),Var Sp] (Branch F (Dloc 064896)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  PopStack popped3;
  if (Equal(MakeHiLo(b1,b2),popped3)) {
    TraceOperation 064859 (CallN (Floc 041040) [Con 27,Con 6,Var (Global 47)]);
    Let b4 = M[007300];
    Let b5 = M[007301];
    PushFrame;
    PushReturnAddress 064859;
    SetLocal 1 27;
    SetLocal 2 6;
    SetLocal 3 MakeHiLo(b4,b5);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  } else {
    Jump: 064896
  }
LocReturn 064859:
  TraceOperation 064866 (Push (Var (Global 49)));
  Let b1 = M[007304];
  Let b2 = M[007305];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 064869 (Store (Con 65) (Con 1));
  SetByte 007304 0;
  SetByte 007305 1;
  TraceOperation 064872 (CallN (Floc 076180) [Con 0,Var (Global 37),Con 17,Var (Global 47),Con 0]);
  Let b3 = M[007280];
  Let b4 = M[007281];
  Let b5 = M[007300];
  Let b6 = M[007301];
  PushFrame;
  PushReturnAddress 064872;
  SetLocal 1 0;
  SetLocal 2 MakeHiLo(b3,b4);
  SetLocal 3 17;
  SetLocal 4 MakeHiLo(b5,b6);
  SetLocal 5 0;
  MakeRoutineFrame 9;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  Jump: 076181
LocReturn 064872:
  TraceOperation 064882 (Pull (Con 65));
  PopStack popped1;
  SetByte 007304 HiByte(popped1);
  SetByte 007305 LoByte(popped1);
  TraceOperation 064885 (Call (Floc 103016) [Var (Global 47)] Sp);
  Let b2 = M[007300];
  Let b3 = M[007301];
  PushFrame;
  PushReturnAddress 064885;
  SetLocal 1 MakeHiLo(b2,b3);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 103017
LocReturn 064885:
  PushStack call_result;
  TraceOperation 064891 (Je [Var (Global 37),Var Sp] (Branch F (Dloc 064896)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  PopStack popped3;
  if (Equal(MakeHiLo(b1,b2),popped3)) {
    TraceOperation 064895 Rtrue;
    PopFrame;
    PopReturnAddress return_address_4;
    SetResult 1;
    JumpIndirect: (return) return_address_4
  } else {
    Jump: 064896
  }
LocOp 064896:
  TraceOperation 064896 (Jump 064910);
  Jump: 064910
LocOp 064899:
  TraceOperation 064899 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 064910)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 064903 (CallN (Floc 098228) [Con 16206,Con 1]);
    PushFrame;
    PushReturnAddress 064903;
    SetLocal 1 16206;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 064910
  }
LocReturn 064903:
  Jump: 064910
LocOp 064910:
  TraceOperation 064910 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 064912:
  MakeRoutineFrame 0;
  Jump: 064913
LocOp 064913:
  TraceOperation 064913 (Jz (Var (Global 36)) (Branch F (Dloc 064976)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 064917 (Call (Floc 026172) [Var (Global 47),Con 14] Sp);
    Let b3 = M[007300];
    Let b4 = M[007301];
    PushFrame;
    PushReturnAddress 064917;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 14;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 064976
  }
LocReturn 064917:
  PushStack call_result;
  TraceOperation 064924 (Jz (Var Sp) (Branch T (Dloc 064976)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 064976
  } else {
    TraceOperation 064927 (Jz (Var (Global 114)) (Branch T (Dloc 064936)));
    Let b2 = M[007434];
    Let b3 = M[007435];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 064936
    } else {
      TraceOperation 064930 (CallN (Floc 098228) [Con 16228]);
      PushFrame;
      PushReturnAddress 064930;
      SetLocal 1 16228;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  }
LocReturn 064930:
  Jump: 064936
LocOp 064936:
  TraceOperation 064936 (Call (Floc 088056) [Var (Global 48),Con 0,Con 18] Sp);
  Let b1 = M[007302];
  Let b2 = M[007303];
  PushFrame;
  PushReturnAddress 064936;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 0;
  SetLocal 3 18;
  MakeRoutineFrame 9;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 088057
LocReturn 064936:
  PushStack call_result;
  TraceOperation 064944 (Jz (Var Sp) (Branch T (Dloc 064973)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 064973
  } else {
    TraceOperation 064947 (Call (Floc 088436) [Var (Global 48),Con 18] Sp);
    Let b2 = M[007302];
    Let b3 = M[007303];
    PushFrame;
    PushReturnAddress 064947;
    SetLocal 1 MakeHiLo(b2,b3);
    SetLocal 2 18;
    MakeRoutineFrame 2;
    Jump: 088437
  }
LocReturn 064947:
  PushStack call_result;
  TraceOperation 064954 (Call (Floc 109384) [Var (Global 48)] Sp);
  Let b1 = M[007302];
  Let b2 = M[007303];
  PushFrame;
  PushReturnAddress 064954;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 3;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 109385
LocReturn 064954:
  PushStack call_result;
  TraceOperation 064960 (Jl (Var Sp) (Var Sp) (Branch T (Dloc 064973)));
  PopStack popped1;
  PopStack popped2;
  if (LessThan(popped1,popped2)) {
    Jump: 064973
  } else {
    TraceOperation 064964 (Call (Floc 041040) [Con 27,Con 7,Var (Global 48)] Sp);
    Let b3 = M[007302];
    Let b4 = M[007303];
    PushFrame;
    PushReturnAddress 064964;
    SetLocal 1 27;
    SetLocal 2 7;
    SetLocal 3 MakeHiLo(b3,b4);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  }
LocReturn 064964:
  PushStack call_result;
  TraceOperation 064972 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 064973:
  TraceOperation 064973 (Jump 064987);
  Jump: 064987
LocOp 064976:
  TraceOperation 064976 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 064987)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 064980 (CallN (Floc 098228) [Con 16228,Con 1]);
    PushFrame;
    PushReturnAddress 064980;
    SetLocal 1 16228;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 064987
  }
LocReturn 064980:
  Jump: 064987
LocOp 064987:
  TraceOperation 064987 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 064988:
  MakeRoutineFrame 0;
  Jump: 064989
LocOp 064989:
  TraceOperation 064989 (Jz (Var (Global 36)) (Branch F (Dloc 065020)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 064992 (Call (Floc 026172) [Var (Global 47),Con 14] Sp);
    Let b3 = M[007300];
    Let b4 = M[007301];
    PushFrame;
    PushReturnAddress 064992;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 14;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 065020
  }
LocReturn 064992:
  PushStack call_result;
  TraceOperation 064999 (Jz (Var Sp) (Branch T (Dloc 065020)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 065020
  } else {
    TraceOperation 065002 (Jz (Var (Global 114)) (Branch T (Dloc 065011)));
    Let b2 = M[007434];
    Let b3 = M[007435];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 065011
    } else {
      TraceOperation 065005 (CallN (Floc 098228) [Con 16247]);
      PushFrame;
      PushReturnAddress 065005;
      SetLocal 1 16247;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  }
LocReturn 065005:
  Jump: 065011
LocOp 065011:
  TraceOperation 065011 (CallN (Floc 103224) [Var (Global 47),Var (Global 48)]);
  Let b1 = M[007300];
  Let b2 = M[007301];
  Let b3 = M[007302];
  Let b4 = M[007303];
  PushFrame;
  PushReturnAddress 065011;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 MakeHiLo(b3,b4);
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 103225
LocReturn 065011:
  TraceOperation 065017 (Jump 065031);
  Jump: 065031
LocOp 065020:
  TraceOperation 065020 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 065031)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 065024 (CallN (Floc 098228) [Con 16247,Con 1]);
    PushFrame;
    PushReturnAddress 065024;
    SetLocal 1 16247;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 065031
  }
LocReturn 065024:
  Jump: 065031
LocOp 065031:
  TraceOperation 065031 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 065032:
  MakeRoutineFrame 0;
  Jump: 065033
LocOp 065033:
  TraceOperation 065033 (Jz (Var (Global 36)) (Branch F (Dloc 065076)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 065036 (Call (Floc 026172) [Var (Global 47),Con 14] Sp);
    Let b3 = M[007300];
    Let b4 = M[007301];
    PushFrame;
    PushReturnAddress 065036;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 14;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 065076
  }
LocReturn 065036:
  PushStack call_result;
  TraceOperation 065043 (Jz (Var Sp) (Branch T (Dloc 065076)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 065076
  } else {
    TraceOperation 065046 (Jz (Var (Global 114)) (Branch T (Dloc 065055)));
    Let b2 = M[007434];
    Let b3 = M[007435];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 065055
    } else {
      TraceOperation 065049 (CallN (Floc 098228) [Con 16258]);
      PushFrame;
      PushReturnAddress 065049;
      SetLocal 1 16258;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  }
LocReturn 065049:
  Jump: 065055
LocOp 065055:
  TraceOperation 065055 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 065072)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 065059 (Je [Var (Global 45),Con 1] (Branch F (Dloc 065072)));
    Let b5 = M[007296];
    Let b6 = M[007297];
    if (Equal(MakeHiLo(b5,b6),1)) {
      TraceOperation 065063 (Call (Floc 041040) [Con 27,Con 8,Var (Global 47)] Sp);
      Let b7 = M[007300];
      Let b8 = M[007301];
      PushFrame;
      PushReturnAddress 065063;
      SetLocal 1 27;
      SetLocal 2 8;
      SetLocal 3 MakeHiLo(b7,b8);
      MakeRoutineFrame 4;
      SetLocal 4 0;
      Jump: 041041
    } else {
      Jump: 065072
    }
  } else {
    Jump: 065072
  }
LocReturn 065063:
  PushStack call_result;
  TraceOperation 065071 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 065072:
  TraceOperation 065072 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 065074:
  MakeRoutineFrame 0;
  Jump: 065075
LocOp 065075:
  TraceOperation 065075 (Store (Con 67) (Con 130));
  SetByte 007308 0;
  SetByte 007309 130;
  TraceOperation 065078 (Je [Con 73,Con 249] (Branch F (Dloc 066968)));
  Jump: 066968
--------------------------------------------------
LocRoutine 065088:
  MakeRoutineFrame 0;
  Jump: 065089
LocOp 065089:
  TraceOperation 065089 (Jz (Var (Global 36)) (Branch F (Dloc 065135)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 065092 (Call (Floc 026172) [Var (Global 47),Con 14] Sp);
    Let b3 = M[007300];
    Let b4 = M[007301];
    PushFrame;
    PushReturnAddress 065092;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 14;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 065135
  }
LocReturn 065092:
  PushStack call_result;
  TraceOperation 065099 (Jz (Var Sp) (Branch T (Dloc 065135)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 065135
  } else {
    TraceOperation 065102 (Jz (Var (Global 114)) (Branch T (Dloc 065111)));
    Let b2 = M[007434];
    Let b3 = M[007435];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 065111
    } else {
      TraceOperation 065105 (CallN (Floc 098228) [Con 16272]);
      PushFrame;
      PushReturnAddress 065105;
      SetLocal 1 16272;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  }
LocReturn 065105:
  Jump: 065111
LocOp 065111:
  TraceOperation 065111 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 065125)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 065115 (CallN (Floc 041040) [Con 27,Con 9,Var (Global 47)]);
    Let b5 = M[007300];
    Let b6 = M[007301];
    PushFrame;
    PushReturnAddress 065115;
    SetLocal 1 27;
    SetLocal 2 9;
    SetLocal 3 MakeHiLo(b5,b6);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  } else {
    Jump: 065125
  }
LocReturn 065115:
  TraceOperation 065122 (Jump 065132);
  Jump: 065132
LocOp 065125:
  TraceOperation 065125 (CallN (Floc 041060) [Con 27,Con 10,Var (Global 47)]);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 065125;
  SetLocal 1 27;
  SetLocal 2 10;
  SetLocal 3 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041061
LocReturn 065125:
  Jump: 065132
LocOp 065132:
  TraceOperation 065132 (Jump 065146);
  Jump: 065146
LocOp 065135:
  TraceOperation 065135 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 065146)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 065139 (CallN (Floc 098228) [Con 16272,Con 1]);
    PushFrame;
    PushReturnAddress 065139;
    SetLocal 1 16272;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 065146
  }
LocReturn 065139:
  Jump: 065146
LocOp 065146:
  TraceOperation 065146 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 065148:
  MakeRoutineFrame 0;
  Jump: 065149
LocOp 065149:
  TraceOperation 065149 (Jz (Var (Global 36)) (Branch F (Dloc 065192)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 065152 (Jz (Var (Global 114)) (Branch T (Dloc 065161)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 065161
    } else {
      TraceOperation 065155 (CallN (Floc 098228) [Con 16287]);
      PushFrame;
      PushReturnAddress 065155;
      SetLocal 1 16287;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 065192
  }
LocReturn 065155:
  Jump: 065161
LocOp 065161:
  TraceOperation 065161 (Call (Floc 109424) [Var (Global 47)] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 065161;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 109425
LocReturn 065161:
  PushStack call_result;
  TraceOperation 065167 (Jz (Var Sp) (Branch F (Dloc 065180)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 065170 (Call (Floc 088304) [Var (Global 47),Con 6] Sp);
    Let b2 = M[007300];
    Let b3 = M[007301];
    PushFrame;
    PushReturnAddress 065170;
    SetLocal 1 MakeHiLo(b2,b3);
    SetLocal 2 6;
    MakeRoutineFrame 2;
    Jump: 088305
  } else {
    Jump: 065180
  }
LocReturn 065170:
  PushStack call_result;
  TraceOperation 065177 (Jz (Var Sp) (Branch F (Dloc 065189)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 065180
  } else {
    Jump: 065189
  }
LocOp 065180:
  TraceOperation 065180 (Call (Floc 041040) [Con 20,Con 1,Var (Global 47)] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 065180;
  SetLocal 1 20;
  SetLocal 2 1;
  SetLocal 3 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041041
LocReturn 065180:
  PushStack call_result;
  TraceOperation 065188 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 065189:
  TraceOperation 065189 (Jump 065203);
  Jump: 065203
LocOp 065192:
  TraceOperation 065192 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 065203)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 065196 (CallN (Floc 098228) [Con 16287,Con 1]);
    PushFrame;
    PushReturnAddress 065196;
    SetLocal 1 16287;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 065203
  }
LocReturn 065196:
  Jump: 065203
LocOp 065203:
  TraceOperation 065203 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 065204:
  MakeRoutineFrame 0;
  Jump: 065205
LocOp 065205:
  TraceOperation 065205 (Jz (Var (Global 36)) (Branch F (Dloc 065258)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 065208 (Jz (Var (Global 114)) (Branch T (Dloc 065217)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 065217
    } else {
      TraceOperation 065211 (CallN (Floc 098228) [Con 16301]);
      PushFrame;
      PushReturnAddress 065211;
      SetLocal 1 16301;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 065258
  }
LocReturn 065211:
  Jump: 065217
LocOp 065217:
  TraceOperation 065217 (Call (Floc 103016) [Var (Global 47)] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 065217;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 103017
LocReturn 065217:
  PushStack call_result;
  TraceOperation 065223 (Je [Var (Global 37),Var Sp] (Branch F (Dloc 065255)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  PopStack popped3;
  if (Equal(MakeHiLo(b1,b2),popped3)) {
    TraceOperation 065227 (CallN (Floc 041040) [Con 19,Con 3,Var (Global 47)]);
    Let b4 = M[007300];
    Let b5 = M[007301];
    PushFrame;
    PushReturnAddress 065227;
    SetLocal 1 19;
    SetLocal 2 3;
    SetLocal 3 MakeHiLo(b4,b5);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  } else {
    Jump: 065255
  }
LocReturn 065227:
  TraceOperation 065234 (CallN (Floc 076180) [Con 0,Var (Global 37),Con 17,Var (Global 47),Con 0]);
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007300];
  Let b4 = M[007301];
  PushFrame;
  PushReturnAddress 065234;
  SetLocal 1 0;
  SetLocal 2 MakeHiLo(b1,b2);
  SetLocal 3 17;
  SetLocal 4 MakeHiLo(b3,b4);
  SetLocal 5 0;
  MakeRoutineFrame 9;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  Jump: 076181
LocReturn 065234:
  TraceOperation 065244 (Call (Floc 103016) [Var (Global 47)] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 065244;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 103017
LocReturn 065244:
  PushStack call_result;
  TraceOperation 065250 (Je [Var (Global 37),Var Sp] (Branch F (Dloc 065255)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  PopStack popped3;
  if (Equal(MakeHiLo(b1,b2),popped3)) {
    TraceOperation 065254 Rtrue;
    PopFrame;
    PopReturnAddress return_address_4;
    SetResult 1;
    JumpIndirect: (return) return_address_4
  } else {
    Jump: 065255
  }
LocOp 065255:
  TraceOperation 065255 (Jump 065269);
  Jump: 065269
LocOp 065258:
  TraceOperation 065258 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 065269)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 065262 (CallN (Floc 098228) [Con 16301,Con 1]);
    PushFrame;
    PushReturnAddress 065262;
    SetLocal 1 16301;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 065269
  }
LocReturn 065262:
  Jump: 065269
LocOp 065269:
  TraceOperation 065269 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 065272:
  MakeRoutineFrame 0;
  Jump: 065273
LocOp 065273:
  TraceOperation 065273 (Jz (Var (Global 36)) (Branch F (Dloc 065293)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 065276 (Jz (Var (Global 114)) (Branch T (Dloc 065285)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 065285
    } else {
      TraceOperation 065279 (CallN (Floc 098228) [Con 16318]);
      PushFrame;
      PushReturnAddress 065279;
      SetLocal 1 16318;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 065293
  }
LocReturn 065279:
  Jump: 065285
LocOp 065285:
  TraceOperation 065285 (CallN (Floc 103408) [Var (Global 47)]);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 065285;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 1;
  Jump: 103409
LocReturn 065285:
  TraceOperation 065290 (Jump 065304);
  Jump: 065304
LocOp 065293:
  TraceOperation 065293 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 065304)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 065297 (CallN (Floc 098228) [Con 16318,Con 1]);
    PushFrame;
    PushReturnAddress 065297;
    SetLocal 1 16318;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 065304
  }
LocReturn 065297:
  Jump: 065304
LocOp 065304:
  TraceOperation 065304 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 065308:
  MakeRoutineFrame 0;
  Jump: 065309
LocOp 065309:
  TraceOperation 065309 (Jz (Var (Global 36)) (Branch F (Dloc 065345)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 065312 (Jz (Var (Global 114)) (Branch T (Dloc 065321)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 065321
    } else {
      TraceOperation 065315 (CallN (Floc 098228) [Con 16327]);
      PushFrame;
      PushReturnAddress 065315;
      SetLocal 1 16327;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 065345
  }
LocReturn 065315:
  Jump: 065321
LocOp 065321:
  TraceOperation 065321 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 065335)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 065325 (CallN (Floc 041040) [Con 20,Con 2,Var (Global 47)]);
    Let b5 = M[007300];
    Let b6 = M[007301];
    PushFrame;
    PushReturnAddress 065325;
    SetLocal 1 20;
    SetLocal 2 2;
    SetLocal 3 MakeHiLo(b5,b6);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  } else {
    Jump: 065335
  }
LocReturn 065325:
  TraceOperation 065332 (Jump 065342);
  Jump: 065342
LocOp 065335:
  TraceOperation 065335 (CallN (Floc 041060) [Con 20,Con 3,Var (Global 47)]);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 065335;
  SetLocal 1 20;
  SetLocal 2 3;
  SetLocal 3 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041061
LocReturn 065335:
  Jump: 065342
LocOp 065342:
  TraceOperation 065342 (Jump 065356);
  Jump: 065356
LocOp 065345:
  TraceOperation 065345 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 065356)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 065349 (CallN (Floc 098228) [Con 16327,Con 1]);
    PushFrame;
    PushReturnAddress 065349;
    SetLocal 1 16327;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 065356
  }
LocReturn 065349:
  Jump: 065356
LocOp 065356:
  TraceOperation 065356 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 065360:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 065361
LocOp 065361:
  TraceOperation 065361 (Jz (Var (Global 36)) (Branch F (Dloc 065427)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 065365 (Jz (Var (Global 114)) (Branch T (Dloc 065374)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 065374
    } else {
      TraceOperation 065368 (CallN (Floc 098228) [Con 16340]);
      PushFrame;
      PushReturnAddress 065368;
      SetLocal 1 16340;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 065427
  }
LocReturn 065368:
  Jump: 065374
LocOp 065374:
  TraceOperation 065374 (Call (Floc 102384) [Var (Global 37)] (Local 1));
  Let b1 = M[007280];
  Let b2 = M[007281];
  PushFrame;
  PushReturnAddress 065374;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 1;
  Jump: 102385
LocReturn 065374:
  SetLocal 1 call_result;
  TraceOperation 065380 (Call (Floc 079624) [Con 20007,Con 0] Sp);
  PushFrame;
  PushReturnAddress 065380;
  SetLocal 1 20007;
  SetLocal 2 0;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 079625
LocReturn 065380:
  PushStack call_result;
  TraceOperation 065388 (Loadw (Con 16625) (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(016625,Mul(2,popped1))];
  Let b3 = M[Offset(Offset(016625,Mul(2,popped1)),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 065394 (Je [Var (Local 1),Var Sp] (Branch F (Dloc 065399)));
  PopStack popped4;
  if (Equal(GetLocal(1),popped4)) {
    TraceOperation 065398 Rfalse;
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult 0;
    JumpIndirect: (return) return_address_5
  } else {
    Jump: 065399
  }
LocOp 065399:
  TraceOperation 065399 (Call (Floc 079624) [Con 20007,Con 3] Sp);
  PushFrame;
  PushReturnAddress 065399;
  SetLocal 1 20007;
  SetLocal 2 3;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 079625
LocReturn 065399:
  PushStack call_result;
  TraceOperation 065407 (Loadw (Con 16625) (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(016625,Mul(2,popped1))];
  Let b3 = M[Offset(Offset(016625,Mul(2,popped1)),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 065413 (Je [Var (Local 1),Var Sp] (Branch F (Dloc 065418)));
  PopStack popped4;
  if (Equal(GetLocal(1),popped4)) {
    TraceOperation 065417 Rfalse;
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult 0;
    JumpIndirect: (return) return_address_5
  } else {
    Jump: 065418
  }
LocOp 065418:
  TraceOperation 065418 (Call (Floc 041040) [Con 26,Con 1,Var (Local 1)] Sp);
  PushFrame;
  PushReturnAddress 065418;
  SetLocal 1 26;
  SetLocal 2 1;
  SetLocal 3 GetLocal(1);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041041
LocReturn 065418:
  PushStack call_result;
  TraceOperation 065426 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 065427:
  TraceOperation 065427 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 065438)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 065431 (CallN (Floc 098228) [Con 16340,Con 1]);
    PushFrame;
    PushReturnAddress 065431;
    SetLocal 1 16340;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 065438
  }
LocReturn 065431:
  Jump: 065438
LocOp 065438:
  TraceOperation 065438 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 065440:
  MakeRoutineFrame 0;
  Jump: 065441
LocOp 065441:
  TraceOperation 065441 (Jz (Var (Global 36)) (Branch F (Dloc 065521)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 065445 (Jz (Var (Global 114)) (Branch T (Dloc 065454)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 065454
    } else {
      TraceOperation 065448 (CallN (Floc 098228) [Con 16360]);
      PushFrame;
      PushReturnAddress 065448;
      SetLocal 1 16360;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 065521
  }
LocReturn 065448:
  Jump: 065454
LocOp 065454:
  TraceOperation 065454 (Call (Floc 079624) [Con 20007,Con 2] Sp);
  PushFrame;
  PushReturnAddress 065454;
  SetLocal 1 20007;
  SetLocal 2 2;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 079625
LocReturn 065454:
  PushStack call_result;
  TraceOperation 065462 (Loadw (Con 16625) (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(016625,Mul(2,popped1))];
  Let b3 = M[Offset(Offset(016625,Mul(2,popped1)),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 065468 (Jz (Var Sp) (Branch T (Dloc 065518)));
  PopStack popped4;
  if (IsZero(popped4)) {
    Jump: 065518
  } else {
    TraceOperation 065471 (Call (Floc 079624) [Con 20007,Con 2] Sp);
    PushFrame;
    PushReturnAddress 065471;
    SetLocal 1 20007;
    SetLocal 2 2;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 079625
  }
LocReturn 065471:
  PushStack call_result;
  TraceOperation 065479 (Loadw (Con 16625) (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(016625,Mul(2,popped1))];
  Let b3 = M[Offset(Offset(016625,Mul(2,popped1)),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 065485 (Call (Floc 088304) [Var Sp,Con 3] Sp);
  PopStack popped4;
  PushFrame;
  PushReturnAddress 065485;
  SetLocal 1 popped4;
  SetLocal 2 3;
  MakeRoutineFrame 2;
  Jump: 088305
LocReturn 065485:
  PushStack call_result;
  TraceOperation 065492 (Jz (Var Sp) (Branch T (Dloc 065518)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 065518
  } else {
    TraceOperation 065495 (Call (Floc 079624) [Con 20007,Con 0] Sp);
    PushFrame;
    PushReturnAddress 065495;
    SetLocal 1 20007;
    SetLocal 2 0;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 079625
  }
LocReturn 065495:
  PushStack call_result;
  TraceOperation 065503 (Loadw (Con 16625) (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(016625,Mul(2,popped1))];
  Let b3 = M[Offset(Offset(016625,Mul(2,popped1)),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 065509 (Call (Floc 041040) [Con 26,Con 2,Var Sp] Sp);
  PopStack popped4;
  PushFrame;
  PushReturnAddress 065509;
  SetLocal 1 26;
  SetLocal 2 2;
  SetLocal 3 popped4;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041041
LocReturn 065509:
  PushStack call_result;
  TraceOperation 065517 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 065518:
  TraceOperation 065518 (Jump 065532);
  Jump: 065532
LocOp 065521:
  TraceOperation 065521 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 065532)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 065525 (CallN (Floc 098228) [Con 16360,Con 1]);
    PushFrame;
    PushReturnAddress 065525;
    SetLocal 1 16360;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 065532
  }
LocReturn 065525:
  Jump: 065532
LocOp 065532:
  TraceOperation 065532 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 065536:
  MakeRoutineFrame 0;
  Jump: 065537
LocOp 065537:
  TraceOperation 065537 (Jz (Var (Global 36)) (Branch F (Dloc 065673)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 065541 (Jz (Var (Global 114)) (Branch T (Dloc 065550)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 065550
    } else {
      TraceOperation 065544 (CallN (Floc 098228) [Con 16384]);
      PushFrame;
      PushReturnAddress 065544;
      SetLocal 1 16384;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 065673
  }
LocReturn 065544:
  Jump: 065550
LocOp 065550:
  TraceOperation 065550 (Call (Floc 079624) [Con 20007,Con 2] Sp);
  PushFrame;
  PushReturnAddress 065550;
  SetLocal 1 20007;
  SetLocal 2 2;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 079625
LocReturn 065550:
  PushStack call_result;
  TraceOperation 065558 (Loadw (Con 16625) (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(016625,Mul(2,popped1))];
  Let b3 = M[Offset(Offset(016625,Mul(2,popped1)),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 065564 (Jz (Var Sp) (Branch T (Dloc 065670)));
  PopStack popped4;
  if (IsZero(popped4)) {
    Jump: 065670
  } else {
    TraceOperation 065568 (Call (Floc 079624) [Con 20007,Con 2] Sp);
    PushFrame;
    PushReturnAddress 065568;
    SetLocal 1 20007;
    SetLocal 2 2;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 079625
  }
LocReturn 065568:
  PushStack call_result;
  TraceOperation 065576 (Loadw (Con 16625) (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(016625,Mul(2,popped1))];
  Let b3 = M[Offset(Offset(016625,Mul(2,popped1)),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 065582 (Call (Floc 088304) [Var Sp,Con 13] Sp);
  PopStack popped4;
  PushFrame;
  PushReturnAddress 065582;
  SetLocal 1 popped4;
  SetLocal 2 13;
  MakeRoutineFrame 2;
  Jump: 088305
LocReturn 065582:
  PushStack call_result;
  TraceOperation 065589 (Jz (Var Sp) (Branch F (Dloc 065670)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 065593 (Je [Var (Global 47),Con 37] (Branch F (Dloc 065620)));
    Let b2 = M[007300];
    Let b3 = M[007301];
    if (Equal(MakeHiLo(b2,b3),37)) {
      TraceOperation 065597 (Call (Floc 079624) [Con 20007,Con 2] Sp);
      PushFrame;
      PushReturnAddress 065597;
      SetLocal 1 20007;
      SetLocal 2 2;
      MakeRoutineFrame 3;
      SetLocal 3 0;
      Jump: 079625
    } else {
      Jump: 065620
    }
  } else {
    Jump: 065670
  }
LocReturn 065597:
  PushStack call_result;
  TraceOperation 065605 (Loadw (Con 16625) (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(016625,Mul(2,popped1))];
  Let b3 = M[Offset(Offset(016625,Mul(2,popped1)),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 065611 (Call (Floc 041040) [Con 26,Con 3,Var Sp] Sp);
  PopStack popped4;
  PushFrame;
  PushReturnAddress 065611;
  SetLocal 1 26;
  SetLocal 2 3;
  SetLocal 3 popped4;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041041
LocReturn 065611:
  PushStack call_result;
  TraceOperation 065619 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 065620:
  TraceOperation 065620 (Je [Var (Global 47),Con 38] (Branch F (Dloc 065647)));
  Let b1 = M[007300];
  Let b2 = M[007301];
  if (Equal(MakeHiLo(b1,b2),38)) {
    TraceOperation 065624 (Call (Floc 079624) [Con 20007,Con 2] Sp);
    PushFrame;
    PushReturnAddress 065624;
    SetLocal 1 20007;
    SetLocal 2 2;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 079625
  } else {
    Jump: 065647
  }
LocReturn 065624:
  PushStack call_result;
  TraceOperation 065632 (Loadw (Con 16625) (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(016625,Mul(2,popped1))];
  Let b3 = M[Offset(Offset(016625,Mul(2,popped1)),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 065638 (Call (Floc 041040) [Con 26,Con 4,Var Sp] Sp);
  PopStack popped4;
  PushFrame;
  PushReturnAddress 065638;
  SetLocal 1 26;
  SetLocal 2 4;
  SetLocal 3 popped4;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041041
LocReturn 065638:
  PushStack call_result;
  TraceOperation 065646 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 065647:
  TraceOperation 065647 (Call (Floc 079624) [Con 20007,Con 2] Sp);
  PushFrame;
  PushReturnAddress 065647;
  SetLocal 1 20007;
  SetLocal 2 2;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 079625
LocReturn 065647:
  PushStack call_result;
  TraceOperation 065655 (Loadw (Con 16625) (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(016625,Mul(2,popped1))];
  Let b3 = M[Offset(Offset(016625,Mul(2,popped1)),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 065661 (Call (Floc 041040) [Con 26,Con 5,Var Sp] Sp);
  PopStack popped4;
  PushFrame;
  PushReturnAddress 065661;
  SetLocal 1 26;
  SetLocal 2 5;
  SetLocal 3 popped4;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041041
LocReturn 065661:
  PushStack call_result;
  TraceOperation 065669 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 065670:
  TraceOperation 065670 (Jump 065684);
  Jump: 065684
LocOp 065673:
  TraceOperation 065673 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 065684)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 065677 (CallN (Floc 098228) [Con 16384,Con 1]);
    PushFrame;
    PushReturnAddress 065677;
    SetLocal 1 16384;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 065684
  }
LocReturn 065677:
  Jump: 065684
LocOp 065684:
  TraceOperation 065684 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 065688:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 065689
LocOp 065689:
  TraceOperation 065689 (Jz (Var (Global 36)) (Branch F (Dloc 065813)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 065693 (Jz (Var (Global 114)) (Branch T (Dloc 065702)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 065702
    } else {
      TraceOperation 065696 (CallN (Floc 098228) [Con 16422]);
      PushFrame;
      PushReturnAddress 065696;
      SetLocal 1 16422;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 065813
  }
LocReturn 065696:
  Jump: 065702
LocOp 065702:
  TraceOperation 065702 (Store (Con 1) (Con 0));
  SetLocal 1 0;
  TraceOperation 065705 (Call (Floc 026172) [Var (Global 47),Con 15] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 065705;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 15;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 065705:
  PushStack call_result;
  TraceOperation 065712 (Jz (Var Sp) (Branch T (Dloc 065747)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 065747
  } else {
    TraceOperation 065715 (Store (Con 2) (Var (Global 47)));
    Let b2 = M[007300];
    Let b3 = M[007301];
    SetLocal 2 MakeHiLo(b2,b3);
    TraceOperation 065718 (Call (Floc 079624) [Con 20007,Con 0] Sp);
    PushFrame;
    PushReturnAddress 065718;
    SetLocal 1 20007;
    SetLocal 2 0;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 079625
  }
LocReturn 065718:
  PushStack call_result;
  TraceOperation 065726 (Loadw (Con 16625) (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(016625,Mul(2,popped1))];
  Let b3 = M[Offset(Offset(016625,Mul(2,popped1)),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 065732 (Call (Floc 109868) [Var (Local 2),Var Sp,Con 29694,Con 1764] (Local 1));
  PopStack popped4;
  PushFrame;
  PushReturnAddress 065732;
  SetLocal 1 GetLocal(2);
  SetLocal 2 popped4;
  SetLocal 3 29694;
  SetLocal 4 1764;
  MakeRoutineFrame 4;
  Jump: 109869
LocReturn 065732:
  SetLocal 1 call_result;
  TraceOperation 065744 (Jump 065760);
  Jump: 065760
LocOp 065747:
  TraceOperation 065747 (Call (Floc 026172) [Var (Global 47),Con 16] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 065747;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 16;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 065747:
  PushStack call_result;
  TraceOperation 065754 (Jz (Var Sp) (Branch T (Dloc 065760)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 065760
  } else {
    TraceOperation 065757 (Store (Con 1) (Var (Global 47)));
    Let b2 = M[007300];
    Let b3 = M[007301];
    SetLocal 1 MakeHiLo(b2,b3);
    Jump: 065760
  }
LocOp 065760:
  TraceOperation 065760 (Call (Floc 026172) [Var (Local 1),Con 16] Sp);
  PushFrame;
  PushReturnAddress 065760;
  SetLocal 1 GetLocal(1);
  SetLocal 2 16;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 065760:
  PushStack call_result;
  TraceOperation 065767 (Jz (Var Sp) (Branch T (Dloc 065796)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 065796
  } else {
    TraceOperation 065770 (Call (Floc 079624) [Con 20007,Con 0] Sp);
    PushFrame;
    PushReturnAddress 065770;
    SetLocal 1 20007;
    SetLocal 2 0;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 079625
  }
LocReturn 065770:
  PushStack call_result;
  TraceOperation 065778 (Loadw (Con 16625) (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(016625,Mul(2,popped1))];
  Let b3 = M[Offset(Offset(016625,Mul(2,popped1)),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 065784 (Call (Floc 109904) [Var (Local 1),Var Sp,Con 29695,Con 2816] (Local 1));
  PopStack popped4;
  PushFrame;
  PushReturnAddress 065784;
  SetLocal 1 GetLocal(1);
  SetLocal 2 popped4;
  SetLocal 3 29695;
  SetLocal 4 2816;
  MakeRoutineFrame 4;
  Jump: 109905
LocReturn 065784:
  SetLocal 1 call_result;
  Jump: 065796
LocOp 065796:
  TraceOperation 065796 (Call (Floc 079624) [Con 20007,Con 1] Sp);
  PushFrame;
  PushReturnAddress 065796;
  SetLocal 1 20007;
  SetLocal 2 1;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 079625
LocReturn 065796:
  PushStack call_result;
  TraceOperation 065804 (Storew (Con 16625) (Var Sp) (Var (Local 1)));
  PopStack popped1;
  SetByte Offset(016625,Mul(2,popped1)) HiByte(GetLocal(1));
  SetByte Offset(Offset(016625,Mul(2,popped1)),1) LoByte(GetLocal(1));
  TraceOperation 065810 (Jump 065824);
  Jump: 065824
LocOp 065813:
  TraceOperation 065813 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 065824)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 065817 (CallN (Floc 098228) [Con 16422,Con 1]);
    PushFrame;
    PushReturnAddress 065817;
    SetLocal 1 16422;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 065824
  }
LocReturn 065817:
  Jump: 065824
LocOp 065824:
  TraceOperation 065824 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 065828:
  MakeRoutineFrame 0;
  Jump: 065829
LocOp 065829:
  TraceOperation 065829 (Jz (Var (Global 36)) (Branch F (Dloc 065926)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 065833 (Jz (Var (Global 114)) (Branch T (Dloc 065842)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 065842
    } else {
      TraceOperation 065836 (CallN (Floc 098228) [Con 16457]);
      PushFrame;
      PushReturnAddress 065836;
      SetLocal 1 16457;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 065926
  }
LocReturn 065836:
  Jump: 065842
LocOp 065842:
  TraceOperation 065842 (Call (Floc 079624) [Con 20007,Con 1] Sp);
  PushFrame;
  PushReturnAddress 065842;
  SetLocal 1 20007;
  SetLocal 2 1;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 079625
LocReturn 065842:
  PushStack call_result;
  TraceOperation 065850 (Loadw (Con 16625) (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(016625,Mul(2,popped1))];
  Let b3 = M[Offset(Offset(016625,Mul(2,popped1)),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 065856 (Jz (Var Sp) (Branch F (Dloc 065923)));
  PopStack popped4;
  if (IsZero(popped4)) {
    TraceOperation 065860 (Call (Floc 079624) [Con 20007,Con 2] Sp);
    PushFrame;
    PushReturnAddress 065860;
    SetLocal 1 20007;
    SetLocal 2 2;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 079625
  } else {
    Jump: 065923
  }
LocReturn 065860:
  PushStack call_result;
  TraceOperation 065868 (Loadw (Con 16625) (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(016625,Mul(2,popped1))];
  Let b3 = M[Offset(Offset(016625,Mul(2,popped1)),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 065874 (Jz (Var Sp) (Branch F (Dloc 065900)));
  PopStack popped4;
  if (IsZero(popped4)) {
    TraceOperation 065877 (Call (Floc 079624) [Con 20007,Con 0] Sp);
    PushFrame;
    PushReturnAddress 065877;
    SetLocal 1 20007;
    SetLocal 2 0;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 079625
  } else {
    Jump: 065900
  }
LocReturn 065877:
  PushStack call_result;
  TraceOperation 065885 (Loadw (Con 16625) (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(016625,Mul(2,popped1))];
  Let b3 = M[Offset(Offset(016625,Mul(2,popped1)),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 065891 (Call (Floc 041040) [Con 26,Con 2,Var Sp] Sp);
  PopStack popped4;
  PushFrame;
  PushReturnAddress 065891;
  SetLocal 1 26;
  SetLocal 2 2;
  SetLocal 3 popped4;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041041
LocReturn 065891:
  PushStack call_result;
  TraceOperation 065899 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 065900:
  TraceOperation 065900 (Call (Floc 079624) [Con 20007,Con 2] Sp);
  PushFrame;
  PushReturnAddress 065900;
  SetLocal 1 20007;
  SetLocal 2 2;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 079625
LocReturn 065900:
  PushStack call_result;
  TraceOperation 065908 (Loadw (Con 16625) (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(016625,Mul(2,popped1))];
  Let b3 = M[Offset(Offset(016625,Mul(2,popped1)),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 065914 (Call (Floc 041040) [Con 26,Con 6,Var Sp] Sp);
  PopStack popped4;
  PushFrame;
  PushReturnAddress 065914;
  SetLocal 1 26;
  SetLocal 2 6;
  SetLocal 3 popped4;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041041
LocReturn 065914:
  PushStack call_result;
  TraceOperation 065922 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 065923:
  TraceOperation 065923 (Jump 065937);
  Jump: 065937
LocOp 065926:
  TraceOperation 065926 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 065937)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 065930 (CallN (Floc 098228) [Con 16457,Con 1]);
    PushFrame;
    PushReturnAddress 065930;
    SetLocal 1 16457;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 065937
  }
LocReturn 065930:
  Jump: 065937
LocOp 065937:
  TraceOperation 065937 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 065940:
  MakeRoutineFrame 0;
  Jump: 065941
LocOp 065941:
  TraceOperation 065941 (Jz (Var (Global 36)) (Branch F (Dloc 066031)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 065945 (Jz (Var (Global 114)) (Branch T (Dloc 065954)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 065954
    } else {
      TraceOperation 065948 (CallN (Floc 098228) [Con 16485]);
      PushFrame;
      PushReturnAddress 065948;
      SetLocal 1 16485;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 066031
  }
LocReturn 065948:
  Jump: 065954
LocOp 065954:
  TraceOperation 065954 (Call (Floc 079624) [Con 20007,Con 3] Sp);
  PushFrame;
  PushReturnAddress 065954;
  SetLocal 1 20007;
  SetLocal 2 3;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 079625
LocReturn 065954:
  PushStack call_result;
  TraceOperation 065962 (Loadw (Con 16625) (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(016625,Mul(2,popped1))];
  Let b3 = M[Offset(Offset(016625,Mul(2,popped1)),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 065968 (Jz (Var Sp) (Branch F (Dloc 065994)));
  PopStack popped4;
  if (IsZero(popped4)) {
    TraceOperation 065971 (Call (Floc 079624) [Con 20007,Con 1] Sp);
    PushFrame;
    PushReturnAddress 065971;
    SetLocal 1 20007;
    SetLocal 2 1;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 079625
  } else {
    Jump: 065994
  }
LocReturn 065971:
  PushStack call_result;
  TraceOperation 065979 (Loadw (Con 16625) (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(016625,Mul(2,popped1))];
  Let b3 = M[Offset(Offset(016625,Mul(2,popped1)),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 065985 (CallN (Floc 103628) [Var (Global 37),Var Sp]);
  Let b4 = M[007280];
  Let b5 = M[007281];
  PopStack popped6;
  PushFrame;
  PushReturnAddress 065985;
  SetLocal 1 MakeHiLo(b4,b5);
  SetLocal 2 popped6;
  MakeRoutineFrame 2;
  Jump: 103629
LocReturn 065985:
  TraceOperation 065991 (Jump 066028);
  Jump: 066028
LocOp 065994:
  TraceOperation 065994 (Call (Floc 079624) [Con 20007,Con 1] Sp);
  PushFrame;
  PushReturnAddress 065994;
  SetLocal 1 20007;
  SetLocal 2 1;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 079625
LocReturn 065994:
  PushStack call_result;
  TraceOperation 066002 (Loadw (Con 16625) (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(016625,Mul(2,popped1))];
  Let b3 = M[Offset(Offset(016625,Mul(2,popped1)),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 066008 (Call (Floc 079624) [Con 20007,Con 3] Sp);
  PushFrame;
  PushReturnAddress 066008;
  SetLocal 1 20007;
  SetLocal 2 3;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 079625
LocReturn 066008:
  PushStack call_result;
  TraceOperation 066016 (Loadw (Con 16625) (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(016625,Mul(2,popped1))];
  Let b3 = M[Offset(Offset(016625,Mul(2,popped1)),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 066022 (CallN (Floc 103628) [Var Sp,Var Sp]);
  PopStack popped4;
  PopStack popped5;
  PushFrame;
  PushReturnAddress 066022;
  SetLocal 1 popped4;
  SetLocal 2 popped5;
  MakeRoutineFrame 2;
  Jump: 103629
LocReturn 066022:
  Jump: 066028
LocOp 066028:
  TraceOperation 066028 (Jump 066042);
  Jump: 066042
LocOp 066031:
  TraceOperation 066031 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 066042)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 066035 (CallN (Floc 098228) [Con 16485,Con 1]);
    PushFrame;
    PushReturnAddress 066035;
    SetLocal 1 16485;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 066042
  }
LocReturn 066035:
  Jump: 066042
LocOp 066042:
  TraceOperation 066042 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 066044:
  MakeRoutineFrame 0;
  Jump: 066045
LocOp 066045:
  TraceOperation 066045 (Jz (Var (Global 36)) (Branch F (Dloc 066067)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 066048 (Jz (Var (Global 114)) (Branch T (Dloc 066057)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 066057
    } else {
      TraceOperation 066051 (CallN (Floc 098228) [Con 16511]);
      PushFrame;
      PushReturnAddress 066051;
      SetLocal 1 16511;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 066067
  }
LocReturn 066051:
  Jump: 066057
LocOp 066057:
  TraceOperation 066057 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 066064)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 066061 (CallN (Floc 103776) []);
    PushFrame;
    PushReturnAddress 066061;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    SetLocal 2 0;
    SetLocal 1 0;
    Jump: 103777
  } else {
    Jump: 066064
  }
LocReturn 066061:
  Jump: 066064
LocOp 066064:
  TraceOperation 066064 (Jump 066078);
  Jump: 066078
LocOp 066067:
  TraceOperation 066067 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 066078)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 066071 (CallN (Floc 098228) [Con 16511,Con 1]);
    PushFrame;
    PushReturnAddress 066071;
    SetLocal 1 16511;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 066078
  }
LocReturn 066071:
  Jump: 066078
LocOp 066078:
  TraceOperation 066078 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 066080:
  MakeRoutineFrame 0;
  Jump: 066081
LocOp 066081:
  TraceOperation 066081 (Jz (Var (Global 36)) (Branch F (Dloc 066103)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 066084 (Jz (Var (Global 114)) (Branch T (Dloc 066093)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 066093
    } else {
      TraceOperation 066087 (CallN (Floc 098228) [Con 16520]);
      PushFrame;
      PushReturnAddress 066087;
      SetLocal 1 16520;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 066103
  }
LocReturn 066087:
  Jump: 066093
LocOp 066093:
  TraceOperation 066093 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 066100)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 066097 (CallN (Floc 037120) []);
    PushFrame;
    PushReturnAddress 066097;
    MakeRoutineFrame 0;
    Jump: 037121
  } else {
    Jump: 066100
  }
LocReturn 066097:
  Jump: 066100
LocOp 066100:
  TraceOperation 066100 (Jump 066114);
  Jump: 066114
LocOp 066103:
  TraceOperation 066103 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 066114)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 066107 (CallN (Floc 098228) [Con 16520,Con 1]);
    PushFrame;
    PushReturnAddress 066107;
    SetLocal 1 16520;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 066114
  }
LocReturn 066107:
  Jump: 066114
LocOp 066114:
  TraceOperation 066114 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 066116:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 066117
LocOp 066117:
  TraceOperation 066117 (Jz (Var (Global 36)) (Branch F (Dloc 066839)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 066121 (Jz (Var (Global 114)) (Branch T (Dloc 066130)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 066130
    } else {
      TraceOperation 066124 (CallN (Floc 098228) [Con 16529]);
      PushFrame;
      PushReturnAddress 066124;
      SetLocal 1 16529;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 066839
  }
LocReturn 066124:
  Jump: 066130
LocOp 066130:
  TraceOperation 066130 (Je [Var (Global 31),Var (Global 37)] (Branch F (Dloc 066140)));
  Let b1 = M[007268];
  Let b2 = M[007269];
  Let b3 = M[007280];
  Let b4 = M[007281];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 066134 (CallN (Floc 076636) []);
    PushFrame;
    PushReturnAddress 066134;
    MakeRoutineFrame 0;
    Jump: 076637
  } else {
    Jump: 066140
  }
LocReturn 066134:
  TraceOperation 066137 (Jump 066836);
  Jump: 066836
LocOp 066140:
  TraceOperation 066140 (Call (Floc 026172) [Var (Global 47),Con 15] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 066140;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 15;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 066140:
  PushStack call_result;
  TraceOperation 066147 (Jz (Var Sp) (Branch T (Dloc 066442)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 066442
  } else {
    TraceOperation 066151 (Call (Floc 079624) [Con 20007,Con 0] Sp);
    PushFrame;
    PushReturnAddress 066151;
    SetLocal 1 20007;
    SetLocal 2 0;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 079625
  }
LocReturn 066151:
  PushStack call_result;
  TraceOperation 066159 (Loadw (Con 16625) (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(016625,Mul(2,popped1))];
  Let b3 = M[Offset(Offset(016625,Mul(2,popped1)),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 066165 (Je [Var (Global 32),Var Sp] (Branch F (Dloc 066226)));
  Let b4 = M[007270];
  Let b5 = M[007271];
  PopStack popped6;
  if (Equal(MakeHiLo(b4,b5),popped6)) {
    TraceOperation 066169 (Call (Floc 079624) [Con 20007,Con 1] Sp);
    PushFrame;
    PushReturnAddress 066169;
    SetLocal 1 20007;
    SetLocal 2 1;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 079625
  } else {
    Jump: 066226
  }
LocReturn 066169:
  PushStack call_result;
  TraceOperation 066177 (Loadw (Con 16625) (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(016625,Mul(2,popped1))];
  Let b3 = M[Offset(Offset(016625,Mul(2,popped1)),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 066183 (Je [Var (Global 32),Var Sp] (Branch F (Dloc 066188)));
  Let b4 = M[007270];
  Let b5 = M[007271];
  PopStack popped6;
  if (Equal(MakeHiLo(b4,b5),popped6)) {
    TraceOperation 066187 Rfalse;
    PopFrame;
    PopReturnAddress return_address_7;
    SetResult 0;
    JumpIndirect: (return) return_address_7
  } else {
    Jump: 066188
  }
LocOp 066188:
  TraceOperation 066188 (Je [Var (Global 47),Con 37] (Branch F (Dloc 066202)));
  Let b1 = M[007300];
  Let b2 = M[007301];
  if (Equal(MakeHiLo(b1,b2),37)) {
    TraceOperation 066192 (CallN (Floc 041060) [Con 26,Con 8,Var (Global 47)]);
    Let b3 = M[007300];
    Let b4 = M[007301];
    PushFrame;
    PushReturnAddress 066192;
    SetLocal 1 26;
    SetLocal 2 8;
    SetLocal 3 MakeHiLo(b3,b4);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041061
  } else {
    Jump: 066202
  }
LocReturn 066192:
  TraceOperation 066199 (Jump 066223);
  Jump: 066223
LocOp 066202:
  TraceOperation 066202 (Je [Var (Global 47),Con 38] (Branch F (Dloc 066216)));
  Let b1 = M[007300];
  Let b2 = M[007301];
  if (Equal(MakeHiLo(b1,b2),38)) {
    TraceOperation 066206 (CallN (Floc 041060) [Con 26,Con 9,Var (Global 47)]);
    Let b3 = M[007300];
    Let b4 = M[007301];
    PushFrame;
    PushReturnAddress 066206;
    SetLocal 1 26;
    SetLocal 2 9;
    SetLocal 3 MakeHiLo(b3,b4);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041061
  } else {
    Jump: 066216
  }
LocReturn 066206:
  TraceOperation 066213 (Jump 066223);
  Jump: 066223
LocOp 066216:
  TraceOperation 066216 (CallN (Floc 041060) [Con 26,Con 10,Var (Global 47)]);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 066216;
  SetLocal 1 26;
  SetLocal 2 10;
  SetLocal 3 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041061
LocReturn 066216:
  Jump: 066223
LocOp 066223:
  TraceOperation 066223 (Jump 066439);
  Jump: 066439
LocOp 066226:
  TraceOperation 066226 (Call (Floc 088436) [Var (Global 47),Con 74] (Local 1));
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 066226;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 74;
  MakeRoutineFrame 2;
  Jump: 088437
LocReturn 066226:
  SetLocal 1 call_result;
  TraceOperation 066233 (Call (Floc 079624) [Con 20007,Con 1] Sp);
  PushFrame;
  PushReturnAddress 066233;
  SetLocal 1 20007;
  SetLocal 2 1;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 079625
LocReturn 066233:
  PushStack call_result;
  TraceOperation 066241 (Loadw (Con 16625) (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(016625,Mul(2,popped1))];
  Let b3 = M[Offset(Offset(016625,Mul(2,popped1)),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 066247 (Je [Var (Global 32),Var Sp] (Branch F (Dloc 066360)));
  Let b4 = M[007270];
  Let b5 = M[007271];
  PopStack popped6;
  if (Equal(MakeHiLo(b4,b5),popped6)) {
    TraceOperation 066252 (Call (Floc 109940) [Var (Local 1),Var (Global 32),Con 29696,Con 1809] (Local 2));
    Let b7 = M[007270];
    Let b8 = M[007271];
    PushFrame;
    PushReturnAddress 066252;
    SetLocal 1 GetLocal(1);
    SetLocal 2 MakeHiLo(b7,b8);
    SetLocal 3 29696;
    SetLocal 4 1809;
    MakeRoutineFrame 4;
    Jump: 109941
  } else {
    Jump: 066360
  }
LocReturn 066252:
  SetLocal 2 call_result;
  TraceOperation 066264 (Call (Floc 079624) [Con 20007,Con 0] Sp);
  PushFrame;
  PushReturnAddress 066264;
  SetLocal 1 20007;
  SetLocal 2 0;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 079625
LocReturn 066264:
  PushStack call_result;
  TraceOperation 066272 (Loadw (Con 16625) (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(016625,Mul(2,popped1))];
  Let b3 = M[Offset(Offset(016625,Mul(2,popped1)),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 066278 (Call (Floc 109940) [Var (Global 47),Var Sp,Con 29697,Con 1811] (Local 3));
  Let b4 = M[007300];
  Let b5 = M[007301];
  PopStack popped6;
  PushFrame;
  PushReturnAddress 066278;
  SetLocal 1 MakeHiLo(b4,b5);
  SetLocal 2 popped6;
  SetLocal 3 29697;
  SetLocal 4 1811;
  MakeRoutineFrame 4;
  Jump: 109941
LocReturn 066278:
  SetLocal 3 call_result;
  TraceOperation 066290 (Call (Floc 079624) [Con 20007,Con 0] Sp);
  PushFrame;
  PushReturnAddress 066290;
  SetLocal 1 20007;
  SetLocal 2 0;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 079625
LocReturn 066290:
  PushStack call_result;
  TraceOperation 066298 (Loadw (Con 16625) (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(016625,Mul(2,popped1))];
  Let b3 = M[Offset(Offset(016625,Mul(2,popped1)),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 066304 (Je [Var (Local 2),Var Sp] (Branch T (Dloc 066312)));
  PopStack popped4;
  if (Equal(GetLocal(2),popped4)) {
    Jump: 066312
  } else {
    TraceOperation 066308 (Je [Var (Local 2),Var (Local 3)] (Branch F (Dloc 066350)));
    if (Equal(GetLocal(2),GetLocal(3))) {
      Jump: 066312
    } else {
      Jump: 066350
    }
  }
LocOp 066312:
  TraceOperation 066312 (Je [Var (Local 1),Con 37] (Branch F (Dloc 066326)));
  if (Equal(GetLocal(1),37)) {
    Jump: 066316
  } else {
    Jump: 066326
  }
LocOp 066316:
  TraceOperation 066316 (CallN (Floc 041060) [Con 26,Con 11,Var (Global 47)]);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 066316;
  SetLocal 1 26;
  SetLocal 2 11;
  SetLocal 3 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041061
LocReturn 066316:
  TraceOperation 066323 (Jump 066347);
  Jump: 066347
LocOp 066326:
  TraceOperation 066326 (Je [Var (Local 1),Con 38] (Branch F (Dloc 066340)));
  if (Equal(GetLocal(1),38)) {
    TraceOperation 066330 (CallN (Floc 041060) [Con 26,Con 12,Var (Global 47)]);
    Let b1 = M[007300];
    Let b2 = M[007301];
    PushFrame;
    PushReturnAddress 066330;
    SetLocal 1 26;
    SetLocal 2 12;
    SetLocal 3 MakeHiLo(b1,b2);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041061
  } else {
    Jump: 066340
  }
LocReturn 066330:
  TraceOperation 066337 (Jump 066347);
  Jump: 066347
LocOp 066340:
  TraceOperation 066340 (CallN (Floc 041060) [Con 26,Con 13,Var (Local 1)]);
  PushFrame;
  PushReturnAddress 066340;
  SetLocal 1 26;
  SetLocal 2 13;
  SetLocal 3 GetLocal(1);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041061
LocReturn 066340:
  Jump: 066347
LocOp 066347:
  TraceOperation 066347 (Jump 066357);
  Jump: 066357
LocOp 066350:
  TraceOperation 066350 (CallN (Floc 041060) [Con 26,Con 14,Var (Global 47)]);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 066350;
  SetLocal 1 26;
  SetLocal 2 14;
  SetLocal 3 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041061
LocReturn 066350:
  Jump: 066357
LocOp 066357:
  TraceOperation 066357 (Jump 066439);
  Jump: 066439
LocOp 066360:
  TraceOperation 066360 (Je [Var (Local 1),Con 37] (Branch F (Dloc 066388)));
  if (Equal(GetLocal(1),37)) {
    TraceOperation 066364 (Call (Floc 079624) [Con 20007,Con 1] Sp);
    PushFrame;
    PushReturnAddress 066364;
    SetLocal 1 20007;
    SetLocal 2 1;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 079625
  } else {
    Jump: 066388
  }
LocReturn 066364:
  PushStack call_result;
  TraceOperation 066372 (Loadw (Con 16625) (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(016625,Mul(2,popped1))];
  Let b3 = M[Offset(Offset(016625,Mul(2,popped1)),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 066378 (CallN (Floc 041060) [Con 26,Con 15,Var Sp]);
  PopStack popped4;
  PushFrame;
  PushReturnAddress 066378;
  SetLocal 1 26;
  SetLocal 2 15;
  SetLocal 3 popped4;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041061
LocReturn 066378:
  TraceOperation 066385 (Jump 066439);
  Jump: 066439
LocOp 066388:
  TraceOperation 066388 (Je [Var (Local 1),Con 38] (Branch F (Dloc 066416)));
  if (Equal(GetLocal(1),38)) {
    TraceOperation 066392 (Call (Floc 079624) [Con 20007,Con 1] Sp);
    PushFrame;
    PushReturnAddress 066392;
    SetLocal 1 20007;
    SetLocal 2 1;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 079625
  } else {
    Jump: 066416
  }
LocReturn 066392:
  PushStack call_result;
  TraceOperation 066400 (Loadw (Con 16625) (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(016625,Mul(2,popped1))];
  Let b3 = M[Offset(Offset(016625,Mul(2,popped1)),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 066406 (CallN (Floc 041060) [Con 26,Con 16,Var Sp]);
  PopStack popped4;
  PushFrame;
  PushReturnAddress 066406;
  SetLocal 1 26;
  SetLocal 2 16;
  SetLocal 3 popped4;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041061
LocReturn 066406:
  TraceOperation 066413 (Jump 066439);
  Jump: 066439
LocOp 066416:
  TraceOperation 066416 (Call (Floc 079624) [Con 20007,Con 1] Sp);
  PushFrame;
  PushReturnAddress 066416;
  SetLocal 1 20007;
  SetLocal 2 1;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 079625
LocReturn 066416:
  PushStack call_result;
  TraceOperation 066424 (Loadw (Con 16625) (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(016625,Mul(2,popped1))];
  Let b3 = M[Offset(Offset(016625,Mul(2,popped1)),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 066430 (CallN (Floc 041060) [Con 26,Con 17,Var Sp,Var (Local 1)]);
  PopStack popped4;
  PushFrame;
  PushReturnAddress 066430;
  SetLocal 1 26;
  SetLocal 2 17;
  SetLocal 3 popped4;
  SetLocal 4 GetLocal(1);
  MakeRoutineFrame 4;
  Jump: 041061
LocReturn 066430:
  Jump: 066439
LocOp 066439:
  TraceOperation 066439 (Jump 066477);
  Jump: 066477
LocOp 066442:
  TraceOperation 066442 (Call (Floc 079624) [Con 20007,Con 0] Sp);
  PushFrame;
  PushReturnAddress 066442;
  SetLocal 1 20007;
  SetLocal 2 0;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 079625
LocReturn 066442:
  PushStack call_result;
  TraceOperation 066450 (Loadw (Con 16625) (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(016625,Mul(2,popped1))];
  Let b3 = M[Offset(Offset(016625,Mul(2,popped1)),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 066456 (Je [Var (Global 32),Var Sp] (Branch F (Dloc 066470)));
  Let b4 = M[007270];
  Let b5 = M[007271];
  PopStack popped6;
  if (Equal(MakeHiLo(b4,b5),popped6)) {
    TraceOperation 066460 (CallN (Floc 041060) [Con 26,Con 18,Var (Global 47)]);
    Let b7 = M[007300];
    Let b8 = M[007301];
    PushFrame;
    PushReturnAddress 066460;
    SetLocal 1 26;
    SetLocal 2 18;
    SetLocal 3 MakeHiLo(b7,b8);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041061
  } else {
    Jump: 066470
  }
LocReturn 066460:
  TraceOperation 066467 (Jump 066477);
  Jump: 066477
LocOp 066470:
  TraceOperation 066470 (CallN (Floc 041060) [Con 26,Con 19,Var (Global 47)]);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 066470;
  SetLocal 1 26;
  SetLocal 2 19;
  SetLocal 3 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041061
LocReturn 066470:
  Jump: 066477
LocOp 066477:
  TraceOperation 066477 (Call (Floc 079624) [Con 20007,Con 3] Sp);
  PushFrame;
  PushReturnAddress 066477;
  SetLocal 1 20007;
  SetLocal 2 3;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 079625
LocReturn 066477:
  PushStack call_result;
  TraceOperation 066485 (Loadw (Con 16625) (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(016625,Mul(2,popped1))];
  Let b3 = M[Offset(Offset(016625,Mul(2,popped1)),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 066491 (Jz (Var Sp) (Branch T (Dloc 066573)));
  PopStack popped4;
  if (IsZero(popped4)) {
    Jump: 066573
  } else {
    TraceOperation 066495 (Store (Con 20) (Con 1));
    SetByte 007214 0;
    SetByte 007215 1;
    TraceOperation 066498 (CallN (Floc 080952) [Con -31944]);
    PushFrame;
    PushReturnAddress 066498;
    SetLocal 1 -31944;
    MakeRoutineFrame 1;
    Jump: 080953
  }
LocReturn 066498:
  TraceOperation 066504 (Call (Floc 079624) [Con 20007,Con 3] Sp);
  PushFrame;
  PushReturnAddress 066504;
  SetLocal 1 20007;
  SetLocal 2 3;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 079625
LocReturn 066504:
  PushStack call_result;
  TraceOperation 066512 (Loadw (Con 16625) (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(016625,Mul(2,popped1))];
  Let b3 = M[Offset(Offset(016625,Mul(2,popped1)),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 066518 (Call (Floc 026172) [Var Sp,Con 18] Sp);
  PopStack popped4;
  PushFrame;
  PushReturnAddress 066518;
  SetLocal 1 popped4;
  SetLocal 2 18;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 066518:
  PushStack call_result;
  TraceOperation 066525 (Jz (Var Sp) (Branch T (Dloc 066552)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 066552
  } else {
    TraceOperation 066528 (Call (Floc 079624) [Con 20007,Con 3] Sp);
    PushFrame;
    PushReturnAddress 066528;
    SetLocal 1 20007;
    SetLocal 2 3;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 079625
  }
LocReturn 066528:
  PushStack call_result;
  TraceOperation 066536 (Loadw (Con 16625) (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(016625,Mul(2,popped1))];
  Let b3 = M[Offset(Offset(016625,Mul(2,popped1)),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 066542 (CallN (Floc 041060) [Con 26,Con 20,Var Sp]);
  PopStack popped4;
  PushFrame;
  PushReturnAddress 066542;
  SetLocal 1 26;
  SetLocal 2 20;
  SetLocal 3 popped4;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041061
LocReturn 066542:
  TraceOperation 066549 (Jump 066573);
  Jump: 066573
LocOp 066552:
  TraceOperation 066552 (Call (Floc 079624) [Con 20007,Con 3] Sp);
  PushFrame;
  PushReturnAddress 066552;
  SetLocal 1 20007;
  SetLocal 2 3;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 079625
LocReturn 066552:
  PushStack call_result;
  TraceOperation 066560 (Loadw (Con 16625) (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(016625,Mul(2,popped1))];
  Let b3 = M[Offset(Offset(016625,Mul(2,popped1)),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 066566 (CallN (Floc 041060) [Con 26,Con 21,Var Sp]);
  PopStack popped4;
  PushFrame;
  PushReturnAddress 066566;
  SetLocal 1 26;
  SetLocal 2 21;
  SetLocal 3 popped4;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041061
LocReturn 066566:
  Jump: 066573
LocOp 066573:
  TraceOperation 066573 (Call (Floc 079624) [Con 20007,Con 4] Sp);
  PushFrame;
  PushReturnAddress 066573;
  SetLocal 1 20007;
  SetLocal 2 4;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 079625
LocReturn 066573:
  PushStack call_result;
  TraceOperation 066581 (Loadw (Con 16625) (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(016625,Mul(2,popped1))];
  Let b3 = M[Offset(Offset(016625,Mul(2,popped1)),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 066587 (Jz (Var Sp) (Branch T (Dloc 066750)));
  PopStack popped4;
  if (IsZero(popped4)) {
    Jump: 066750
  } else {
    TraceOperation 066591 (Call (Floc 102816) [Var (Global 31)] Sp);
    Let b5 = M[007268];
    Let b6 = M[007269];
    PushFrame;
    PushReturnAddress 066591;
    SetLocal 1 MakeHiLo(b5,b6);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 102817
  }
LocReturn 066591:
  PushStack call_result;
  TraceOperation 066597 (Call (Floc 079624) [Con 20007,Con 4] Sp);
  PushFrame;
  PushReturnAddress 066597;
  SetLocal 1 20007;
  SetLocal 2 4;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 079625
LocReturn 066597:
  PushStack call_result;
  TraceOperation 066605 (Loadw (Con 16625) (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(016625,Mul(2,popped1))];
  Let b3 = M[Offset(Offset(016625,Mul(2,popped1)),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 066611 (Je [Var Sp,Var Sp] (Branch F (Dloc 066639)));
  PopStack popped4;
  PopStack popped5;
  if (Equal(popped4,popped5)) {
    TraceOperation 066615 (Call (Floc 079624) [Con 20007,Con 4] Sp);
    PushFrame;
    PushReturnAddress 066615;
    SetLocal 1 20007;
    SetLocal 2 4;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 079625
  } else {
    Jump: 066639
  }
LocReturn 066615:
  PushStack call_result;
  TraceOperation 066623 (Loadw (Con 16625) (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(016625,Mul(2,popped1))];
  Let b3 = M[Offset(Offset(016625,Mul(2,popped1)),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 066629 (CallN (Floc 041060) [Con 26,Con 22,Var Sp]);
  PopStack popped4;
  PushFrame;
  PushReturnAddress 066629;
  SetLocal 1 26;
  SetLocal 2 22;
  SetLocal 3 popped4;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041061
LocReturn 066629:
  TraceOperation 066636 (Jump 066750);
  Jump: 066750
LocOp 066639:
  TraceOperation 066639 (Call (Floc 102816) [Var (Global 31)] Sp);
  Let b1 = M[007268];
  Let b2 = M[007269];
  PushFrame;
  PushReturnAddress 066639;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 102817
LocReturn 066639:
  PushStack call_result;
  TraceOperation 066645 (Call (Floc 079624) [Con 20007,Con 3] Sp);
  PushFrame;
  PushReturnAddress 066645;
  SetLocal 1 20007;
  SetLocal 2 3;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 079625
LocReturn 066645:
  PushStack call_result;
  TraceOperation 066653 (Loadw (Con 16625) (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(016625,Mul(2,popped1))];
  Let b3 = M[Offset(Offset(016625,Mul(2,popped1)),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 066659 (Je [Var Sp,Var Sp] (Branch F (Dloc 066687)));
  PopStack popped4;
  PopStack popped5;
  if (Equal(popped4,popped5)) {
    TraceOperation 066663 (Call (Floc 079624) [Con 20007,Con 4] Sp);
    PushFrame;
    PushReturnAddress 066663;
    SetLocal 1 20007;
    SetLocal 2 4;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 079625
  } else {
    Jump: 066687
  }
LocReturn 066663:
  PushStack call_result;
  TraceOperation 066671 (Loadw (Con 16625) (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(016625,Mul(2,popped1))];
  Let b3 = M[Offset(Offset(016625,Mul(2,popped1)),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 066677 (CallN (Floc 041060) [Con 26,Con 23,Var Sp]);
  PopStack popped4;
  PushFrame;
  PushReturnAddress 066677;
  SetLocal 1 26;
  SetLocal 2 23;
  SetLocal 3 popped4;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041061
LocReturn 066677:
  TraceOperation 066684 (Jump 066750);
  Jump: 066750
LocOp 066687:
  TraceOperation 066687 (Call (Floc 079624) [Con 20007,Con 0] Sp);
  PushFrame;
  PushReturnAddress 066687;
  SetLocal 1 20007;
  SetLocal 2 0;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 079625
LocReturn 066687:
  PushStack call_result;
  TraceOperation 066695 (Loadw (Con 16625) (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(016625,Mul(2,popped1))];
  Let b3 = M[Offset(Offset(016625,Mul(2,popped1)),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 066701 (Je [Var (Global 32),Var Sp] (Branch F (Dloc 066729)));
  Let b4 = M[007270];
  Let b5 = M[007271];
  PopStack popped6;
  if (Equal(MakeHiLo(b4,b5),popped6)) {
    TraceOperation 066705 (Call (Floc 079624) [Con 20007,Con 4] Sp);
    PushFrame;
    PushReturnAddress 066705;
    SetLocal 1 20007;
    SetLocal 2 4;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 079625
  } else {
    Jump: 066729
  }
LocReturn 066705:
  PushStack call_result;
  TraceOperation 066713 (Loadw (Con 16625) (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(016625,Mul(2,popped1))];
  Let b3 = M[Offset(Offset(016625,Mul(2,popped1)),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 066719 (CallN (Floc 041060) [Con 26,Con 24,Var Sp]);
  PopStack popped4;
  PushFrame;
  PushReturnAddress 066719;
  SetLocal 1 26;
  SetLocal 2 24;
  SetLocal 3 popped4;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041061
LocReturn 066719:
  TraceOperation 066726 (Jump 066750);
  Jump: 066750
LocOp 066729:
  TraceOperation 066729 (Call (Floc 079624) [Con 20007,Con 4] Sp);
  PushFrame;
  PushReturnAddress 066729;
  SetLocal 1 20007;
  SetLocal 2 4;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 079625
LocReturn 066729:
  PushStack call_result;
  TraceOperation 066737 (Loadw (Con 16625) (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(016625,Mul(2,popped1))];
  Let b3 = M[Offset(Offset(016625,Mul(2,popped1)),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 066743 (CallN (Floc 041060) [Con 26,Con 25,Var Sp]);
  PopStack popped4;
  PushFrame;
  PushReturnAddress 066743;
  SetLocal 1 26;
  SetLocal 2 25;
  SetLocal 3 popped4;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041061
LocReturn 066743:
  Jump: 066750
LocOp 066750:
  TraceOperation 066750 (Call (Floc 102816) [Var (Global 31)] Sp);
  Let b1 = M[007268];
  Let b2 = M[007269];
  PushFrame;
  PushReturnAddress 066750;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 102817
LocReturn 066750:
  PushStack call_result;
  TraceOperation 066756 (Call (Floc 079624) [Con 20007,Con 3] Sp);
  PushFrame;
  PushReturnAddress 066756;
  SetLocal 1 20007;
  SetLocal 2 3;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 079625
LocReturn 066756:
  PushStack call_result;
  TraceOperation 066764 (Loadw (Con 16625) (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(016625,Mul(2,popped1))];
  Let b3 = M[Offset(Offset(016625,Mul(2,popped1)),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 066770 (Je [Var Sp,Var Sp] (Branch F (Dloc 066826)));
  PopStack popped4;
  PopStack popped5;
  if (Equal(popped4,popped5)) {
    TraceOperation 066774 (Call (Floc 102816) [Var (Global 31)] Sp);
    Let b6 = M[007268];
    Let b7 = M[007269];
    PushFrame;
    PushReturnAddress 066774;
    SetLocal 1 MakeHiLo(b6,b7);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 102817
  } else {
    Jump: 066826
  }
LocReturn 066774:
  PushStack call_result;
  TraceOperation 066780 (Call (Floc 079624) [Con 20007,Con 4] Sp);
  PushFrame;
  PushReturnAddress 066780;
  SetLocal 1 20007;
  SetLocal 2 4;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 079625
LocReturn 066780:
  PushStack call_result;
  TraceOperation 066788 (Loadw (Con 16625) (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(016625,Mul(2,popped1))];
  Let b3 = M[Offset(Offset(016625,Mul(2,popped1)),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 066794 (Je [Var Sp,Var Sp] (Branch T (Dloc 066826)));
  PopStack popped4;
  PopStack popped5;
  if (Equal(popped4,popped5)) {
    Jump: 066826
  } else {
    TraceOperation 066798 (CallN (Floc 041060) [Con 26,Con 26,Var (Global 47)]);
    Let b6 = M[007300];
    Let b7 = M[007301];
    PushFrame;
    PushReturnAddress 066798;
    SetLocal 1 26;
    SetLocal 2 26;
    SetLocal 3 MakeHiLo(b6,b7);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041061
  }
LocReturn 066798:
  TraceOperation 066805 (Store (Con 20) (Con 1));
  SetByte 007214 0;
  SetByte 007215 1;
  TraceOperation 066808 (CallN (Floc 080952) [Con -31842]);
  PushFrame;
  PushReturnAddress 066808;
  SetLocal 1 -31842;
  MakeRoutineFrame 1;
  Jump: 080953
LocReturn 066808:
  TraceOperation 066814 New_line;
  GamePrint "\n";
  TraceOperation 066815 (CallN (Floc 076180) [Con 0,Var (Global 31),Con 7,Con 0,Con 0]);
  Let b1 = M[007268];
  Let b2 = M[007269];
  PushFrame;
  PushReturnAddress 066815;
  SetLocal 1 0;
  SetLocal 2 MakeHiLo(b1,b2);
  SetLocal 3 7;
  SetLocal 4 0;
  SetLocal 5 0;
  MakeRoutineFrame 9;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  Jump: 076181
LocReturn 066815:
  TraceOperation 066825 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
LocOp 066826:
  TraceOperation 066826 (Store (Con 20) (Con 1));
  SetByte 007214 0;
  SetByte 007215 1;
  TraceOperation 066829 (CallN (Floc 080952) [Con -31842]);
  PushFrame;
  PushReturnAddress 066829;
  SetLocal 1 -31842;
  MakeRoutineFrame 1;
  Jump: 080953
LocReturn 066829:
  TraceOperation 066835 New_line;
  GamePrint "\n";
  Jump: 066836
LocOp 066836:
  TraceOperation 066836 (Jump 066850);
  Jump: 066850
LocOp 066839:
  TraceOperation 066839 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 066850)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 066843 (CallN (Floc 098228) [Con 16529,Con 1]);
    PushFrame;
    PushReturnAddress 066843;
    SetLocal 1 16529;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 066850
  }
LocReturn 066843:
  Jump: 066850
LocOp 066850:
  TraceOperation 066850 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 066852:
  MakeRoutineFrame 0;
  Jump: 066853
LocOp 066853:
  TraceOperation 066853 (Jz (Var (Global 36)) (Branch F (Dloc 066887)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 066856 (Jz (Var (Global 114)) (Branch T (Dloc 066865)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 066865
    } else {
      TraceOperation 066859 (CallN (Floc 098228) [Con 16713]);
      PushFrame;
      PushReturnAddress 066859;
      SetLocal 1 16713;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 066887
  }
LocReturn 066859:
  Jump: 066865
LocOp 066865:
  TraceOperation 066865 (Call (Floc 026172) [Var (Global 47),Con 16] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 066865;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 16;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 066865:
  PushStack call_result;
  TraceOperation 066872 (Jz (Var Sp) (Branch T (Dloc 066884)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 066884
  } else {
    TraceOperation 066875 (Call (Floc 076480) [Con 26,Var (Global 47),Con 0] Sp);
    Let b2 = M[007300];
    Let b3 = M[007301];
    PushFrame;
    PushReturnAddress 066875;
    SetLocal 1 26;
    SetLocal 2 MakeHiLo(b2,b3);
    SetLocal 3 0;
    MakeRoutineFrame 3;
    Jump: 076481
  }
LocReturn 066875:
  PushStack call_result;
  TraceOperation 066883 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 066884:
  TraceOperation 066884 (Jump 066898);
  Jump: 066898
LocOp 066887:
  TraceOperation 066887 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 066898)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 066891 (CallN (Floc 098228) [Con 16713,Con 1]);
    PushFrame;
    PushReturnAddress 066891;
    SetLocal 1 16713;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 066898
  }
LocReturn 066891:
  Jump: 066898
LocOp 066898:
  TraceOperation 066898 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 066900:
  MakeRoutineFrame 0;
  Jump: 066901
LocOp 066901:
  TraceOperation 066901 (Jz (Var (Global 36)) (Branch F (Dloc 066935)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 066904 (Jz (Var (Global 114)) (Branch T (Dloc 066913)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 066913
    } else {
      TraceOperation 066907 (CallN (Floc 098228) [Con 16725]);
      PushFrame;
      PushReturnAddress 066907;
      SetLocal 1 16725;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 066935
  }
LocReturn 066907:
  Jump: 066913
LocOp 066913:
  TraceOperation 066913 (Call (Floc 026172) [Var (Global 47),Con 15] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 066913;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 15;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 066913:
  PushStack call_result;
  TraceOperation 066920 (Jz (Var Sp) (Branch T (Dloc 066932)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 066932
  } else {
    TraceOperation 066923 (Call (Floc 076480) [Con 26,Var (Global 47),Con 0] Sp);
    Let b2 = M[007300];
    Let b3 = M[007301];
    PushFrame;
    PushReturnAddress 066923;
    SetLocal 1 26;
    SetLocal 2 MakeHiLo(b2,b3);
    SetLocal 3 0;
    MakeRoutineFrame 3;
    Jump: 076481
  }
LocReturn 066923:
  PushStack call_result;
  TraceOperation 066931 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 066932:
  TraceOperation 066932 (Jump 066946);
  Jump: 066946
LocOp 066935:
  TraceOperation 066935 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 066946)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 066939 (CallN (Floc 098228) [Con 16725,Con 1]);
    PushFrame;
    PushReturnAddress 066939;
    SetLocal 1 16725;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 066946
  }
LocReturn 066939:
  Jump: 066946
LocOp 066946:
  TraceOperation 066946 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 066948:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 066949
LocOp 066949:
  TraceOperation 066949 (Jz (Var (Global 36)) (Branch F (Dloc 066984)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 066952 (Jz (Var (Global 114)) (Branch T (Dloc 066961)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 066961
    } else {
      TraceOperation 066955 (CallN (Floc 098228) [Con 16737]);
      PushFrame;
      PushReturnAddress 066955;
      SetLocal 1 16737;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 066984
  }
LocReturn 066955:
  Jump: 066961
LocOp 066961:
  TraceOperation 066961 (Call (Floc 102620) [Var (Global 37),Var (Global 47)] (Local 1));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007300];
  Let b4 = M[007301];
  PushFrame;
  PushReturnAddress 066961;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 MakeHiLo(b3,b4);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 102621
LocReturn 066961:
  SetLocal 1 call_result;
  Jump: 066968
LocOp 066968:
  TraceOperation 066968 (Je [Var (Local 1),Var (Global 47)] (Branch F (Dloc 066981)));
  Let b1 = M[007300];
  Let b2 = M[007301];
  if (Equal(GetLocal(1),MakeHiLo(b1,b2))) {
    TraceOperation 066972 (Call (Floc 041040) [Con 21,Con 1,Var (Global 47)] Sp);
    Let b3 = M[007300];
    Let b4 = M[007301];
    PushFrame;
    PushReturnAddress 066972;
    SetLocal 1 21;
    SetLocal 2 1;
    SetLocal 3 MakeHiLo(b3,b4);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  } else {
    Jump: 066981
  }
LocReturn 066972:
  PushStack call_result;
  TraceOperation 066980 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 066981:
  TraceOperation 066981 (Jump 066995);
  Jump: 066995
LocOp 066984:
  TraceOperation 066984 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 066995)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 066988 (CallN (Floc 098228) [Con 16737,Con 1]);
    PushFrame;
    PushReturnAddress 066988;
    SetLocal 1 16737;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 066995
  }
LocReturn 066988:
  Jump: 066995
LocOp 066995:
  TraceOperation 066995 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 066996:
  MakeRoutineFrame 0;
  Jump: 066997
LocOp 066997:
  TraceOperation 066997 (Jz (Var (Global 36)) (Branch F (Dloc 067031)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 067000 (Jz (Var (Global 114)) (Branch T (Dloc 067009)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 067009
    } else {
      TraceOperation 067003 (CallN (Floc 098228) [Con 16749]);
      PushFrame;
      PushReturnAddress 067003;
      SetLocal 1 16749;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 067031
  }
LocReturn 067003:
  Jump: 067009
LocOp 067009:
  TraceOperation 067009 (Call (Floc 088304) [Var (Global 47),Con 7] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 067009;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 7;
  MakeRoutineFrame 2;
  Jump: 088305
LocReturn 067009:
  PushStack call_result;
  TraceOperation 067016 (Jz (Var Sp) (Branch F (Dloc 067028)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 067019 (Call (Floc 041040) [Con 21,Con 2,Var (Global 47)] Sp);
    Let b2 = M[007300];
    Let b3 = M[007301];
    PushFrame;
    PushReturnAddress 067019;
    SetLocal 1 21;
    SetLocal 2 2;
    SetLocal 3 MakeHiLo(b2,b3);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  } else {
    Jump: 067028
  }
LocReturn 067019:
  PushStack call_result;
  TraceOperation 067027 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 067028:
  TraceOperation 067028 (Jump 067042);
  Jump: 067042
LocOp 067031:
  TraceOperation 067031 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 067042)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 067035 (CallN (Floc 098228) [Con 16749,Con 1]);
    PushFrame;
    PushReturnAddress 067035;
    SetLocal 1 16749;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 067042
  }
LocReturn 067035:
  Jump: 067042
LocOp 067042:
  TraceOperation 067042 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 067044:
  MakeRoutineFrame 0;
  Jump: 067045
LocOp 067045:
  TraceOperation 067045 (Jz (Var (Global 36)) (Branch F (Dloc 067089)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 067048 (Jz (Var (Global 114)) (Branch T (Dloc 067057)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 067057
    } else {
      TraceOperation 067051 (CallN (Floc 098228) [Con 16761]);
      PushFrame;
      PushReturnAddress 067051;
      SetLocal 1 16761;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 067089
  }
LocReturn 067051:
  Jump: 067057
LocOp 067057:
  TraceOperation 067057 (Call (Floc 026172) [Var (Global 47),Con 17] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 067057;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 17;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 067057:
  PushStack call_result;
  TraceOperation 067064 (Jz (Var Sp) (Branch T (Dloc 067086)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 067086
  } else {
    TraceOperation 067067 (Call (Floc 088304) [Var (Global 47),Con 13] Sp);
    Let b2 = M[007300];
    Let b3 = M[007301];
    PushFrame;
    PushReturnAddress 067067;
    SetLocal 1 MakeHiLo(b2,b3);
    SetLocal 2 13;
    MakeRoutineFrame 2;
    Jump: 088305
  }
LocReturn 067067:
  PushStack call_result;
  TraceOperation 067074 (Jz (Var Sp) (Branch F (Dloc 067086)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 067077 (Call (Floc 041040) [Con 21,Con 3,Var (Global 47)] Sp);
    Let b2 = M[007300];
    Let b3 = M[007301];
    PushFrame;
    PushReturnAddress 067077;
    SetLocal 1 21;
    SetLocal 2 3;
    SetLocal 3 MakeHiLo(b2,b3);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  } else {
    Jump: 067086
  }
LocReturn 067077:
  PushStack call_result;
  TraceOperation 067085 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 067086:
  TraceOperation 067086 (Jump 067100);
  Jump: 067100
LocOp 067089:
  TraceOperation 067089 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 067100)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 067093 (CallN (Floc 098228) [Con 16761,Con 1]);
    PushFrame;
    PushReturnAddress 067093;
    SetLocal 1 16761;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 067100
  }
LocReturn 067093:
  Jump: 067100
LocOp 067100:
  TraceOperation 067100 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 067104:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 067105
LocOp 067105:
  TraceOperation 067105 (Jz (Var (Global 36)) (Branch F (Dloc 067140)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 067108 (Jz (Var (Global 114)) (Branch T (Dloc 067117)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 067117
    } else {
      TraceOperation 067111 (CallN (Floc 098228) [Con 16776]);
      PushFrame;
      PushReturnAddress 067111;
      SetLocal 1 16776;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 067140
  }
LocReturn 067111:
  Jump: 067117
LocOp 067117:
  TraceOperation 067117 (Call (Floc 102620) [Var (Global 37),Var (Global 47)] (Local 1));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007300];
  Let b4 = M[007301];
  PushFrame;
  PushReturnAddress 067117;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 MakeHiLo(b3,b4);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 102621
LocReturn 067117:
  SetLocal 1 call_result;
  TraceOperation 067124 (Je [Var (Local 1),Var (Global 37)] (Branch F (Dloc 067137)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  if (Equal(GetLocal(1),MakeHiLo(b1,b2))) {
    TraceOperation 067128 (Call (Floc 041040) [Con 21,Con 4,Var (Global 47)] Sp);
    Let b3 = M[007300];
    Let b4 = M[007301];
    PushFrame;
    PushReturnAddress 067128;
    SetLocal 1 21;
    SetLocal 2 4;
    SetLocal 3 MakeHiLo(b3,b4);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  } else {
    Jump: 067137
  }
LocReturn 067128:
  PushStack call_result;
  TraceOperation 067136 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 067137:
  TraceOperation 067137 (Jump 067151);
  Jump: 067151
LocOp 067140:
  TraceOperation 067140 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 067151)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 067144 (CallN (Floc 098228) [Con 16776,Con 1]);
    PushFrame;
    PushReturnAddress 067144;
    SetLocal 1 16776;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 067151
  }
LocReturn 067144:
  Jump: 067151
LocOp 067151:
  TraceOperation 067151 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 067152:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 067153
LocOp 067153:
  TraceOperation 067153 (Jz (Var (Global 36)) (Branch F (Dloc 067377)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 067157 (Jz (Var (Global 114)) (Branch T (Dloc 067166)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 067166
    } else {
      TraceOperation 067160 (CallN (Floc 098228) [Con 16788]);
      PushFrame;
      PushReturnAddress 067160;
      SetLocal 1 16788;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 067377
  }
LocReturn 067160:
  Jump: 067166
LocOp 067166:
  TraceOperation 067166 (Call (Floc 102384) [Var (Global 47)] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 067166;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 1;
  Jump: 102385
LocReturn 067166:
  PushStack call_result;
  TraceOperation 067172 (Call (Floc 102384) [Var (Global 37)] Sp);
  Let b1 = M[007280];
  Let b2 = M[007281];
  PushFrame;
  PushReturnAddress 067172;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 1;
  Jump: 102385
LocReturn 067172:
  PushStack call_result;
  TraceOperation 067178 (Je [Var Sp,Var Sp] (Branch F (Dloc 067183)));
  PopStack popped1;
  PopStack popped2;
  if (Equal(popped1,popped2)) {
    TraceOperation 067182 Rfalse;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 067183
  }
LocOp 067183:
  TraceOperation 067183 (Call (Floc 102620) [Var (Global 37),Var (Global 47)] (Local 1));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007300];
  Let b4 = M[007301];
  PushFrame;
  PushReturnAddress 067183;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 MakeHiLo(b3,b4);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 102621
LocReturn 067183:
  SetLocal 1 call_result;
  Jump: 067190
LocOp 067190:
  TraceOperation 067190 (Call (Floc 102384) [Var (Global 37)] Sp);
  Let b1 = M[007280];
  Let b2 = M[007281];
  PushFrame;
  PushReturnAddress 067190;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 1;
  Jump: 102385
LocReturn 067190:
  PushStack call_result;
  TraceOperation 067196 (Je [Var Sp,Var (Local 1)] (Branch T (Dloc 067246)));
  PopStack popped1;
  if (Equal(popped1,GetLocal(1))) {
    Jump: 067246
  } else {
    TraceOperation 067200 (Call (Floc 102384) [Var (Global 37)] (Local 2));
    Let b2 = M[007280];
    Let b3 = M[007281];
    PushFrame;
    PushReturnAddress 067200;
    SetLocal 1 MakeHiLo(b2,b3);
    MakeRoutineFrame 1;
    Jump: 102385
  }
LocReturn 067200:
  SetLocal 2 call_result;
  TraceOperation 067206 (CallN (Floc 041040) [Con 21,Con 6,Var (Local 2)]);
  PushFrame;
  PushReturnAddress 067206;
  SetLocal 1 21;
  SetLocal 2 6;
  SetLocal 3 GetLocal(2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041041
LocReturn 067206:
  TraceOperation 067213 (Push (Var (Global 49)));
  Let b1 = M[007304];
  Let b2 = M[007305];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 067216 (Store (Con 65) (Con 1));
  SetByte 007304 0;
  SetByte 007305 1;
  TraceOperation 067219 (CallN (Floc 076180) [Con 0,Var (Global 37),Con 23,Con 0,Con 0]);
  Let b3 = M[007280];
  Let b4 = M[007281];
  PushFrame;
  PushReturnAddress 067219;
  SetLocal 1 0;
  SetLocal 2 MakeHiLo(b3,b4);
  SetLocal 3 23;
  SetLocal 4 0;
  SetLocal 5 0;
  MakeRoutineFrame 9;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  Jump: 076181
LocReturn 067219:
  TraceOperation 067229 (Pull (Con 65));
  PopStack popped1;
  SetByte 007304 HiByte(popped1);
  SetByte 007305 LoByte(popped1);
  TraceOperation 067232 (Call (Floc 102384) [Var (Global 37)] Sp);
  Let b2 = M[007280];
  Let b3 = M[007281];
  PushFrame;
  PushReturnAddress 067232;
  SetLocal 1 MakeHiLo(b2,b3);
  MakeRoutineFrame 1;
  Jump: 102385
LocReturn 067232:
  PushStack call_result;
  TraceOperation 067238 (Je [Var Sp,Var (Local 2)] (Branch F (Dloc 067243)));
  PopStack popped1;
  if (Equal(popped1,GetLocal(2))) {
    TraceOperation 067242 Rtrue;
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  } else {
    Jump: 067243
  }
LocOp 067243:
  TraceOperation 067243 (Jump 067190);
  Jump: 067190
LocOp 067246:
  TraceOperation 067246 (Call (Floc 102384) [Var (Global 37)] Sp);
  Let b1 = M[007280];
  Let b2 = M[007281];
  PushFrame;
  PushReturnAddress 067246;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 1;
  Jump: 102385
LocReturn 067246:
  PushStack call_result;
  TraceOperation 067252 (Je [Var Sp,Var (Global 47)] (Branch F (Dloc 067257)));
  PopStack popped1;
  Let b2 = M[007300];
  Let b3 = M[007301];
  if (Equal(popped1,MakeHiLo(b2,b3))) {
    TraceOperation 067256 Rtrue;
    PopFrame;
    PopReturnAddress return_address_4;
    SetResult 1;
    JumpIndirect: (return) return_address_4
  } else {
    Jump: 067257
  }
LocOp 067257:
  TraceOperation 067257 (Call (Floc 102384) [Var (Global 47)] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 067257;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 1;
  Jump: 102385
LocReturn 067257:
  PushStack call_result;
  TraceOperation 067263 (Call (Floc 102384) [Var (Global 37)] Sp);
  Let b1 = M[007280];
  Let b2 = M[007281];
  PushFrame;
  PushReturnAddress 067263;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 1;
  Jump: 102385
LocReturn 067263:
  PushStack call_result;
  TraceOperation 067269 (Je [Var Sp,Var Sp] (Branch F (Dloc 067274)));
  PopStack popped1;
  PopStack popped2;
  if (Equal(popped1,popped2)) {
    TraceOperation 067273 Rfalse;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 067274
  }
LocOp 067274:
  TraceOperation 067274 (Call (Floc 102384) [Var (Global 47)] (Local 2));
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 067274;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 1;
  Jump: 102385
LocReturn 067274:
  SetLocal 2 call_result;
  TraceOperation 067280 (Get_prop (Var (Global 47)) (Con 20) (Global 239));
  Let b1 = M[007300];
  Let b2 = M[007301];
  Let b3 = M[Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),12)];
  Let b4 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),12),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  Let loop_var6 = DeAddress(Offset(Address(MakeHiLo(b3,b4)),Add(Mul(2,Widen(b5)),1)));
  Label 7: {
    Let b8 = M[Address(loop_var6)];
    if (IsZeroByte(b8)) {
      Let b9 = M[000304];
      Let b10 = M[000305];
      SetByte 007684 b9;
      SetByte 007685 b10;
    } else {
      if (TestBit(b8,7)) {
        Let b11 = M[Offset(Address(loop_var6),1)];
        if (Equal(20,Widen(BwAnd(b8,63)))) {
          if (Equal(Widen(BwAnd(b11,63)),2)) {
            Let b12 = M[Offset(Address(loop_var6),2)];
            Let b13 = M[Offset(Offset(Address(loop_var6),2),1)];
            SetByte 007684 b12;
            SetByte 007685 b13;
          } else {
            Let b14 = M[Offset(Address(loop_var6),2)];
            SetByte 007684 HiByte(Widen(b14));
            SetByte 007685 LoByte(Widen(b14));
          }
        } else {
          Assign loop_var6 = DeAddress(Offset(Offset(Address(loop_var6),2),Widen(BwAnd(b11,63))));
          Goto: Label 7
        }
      } else {
        if (TestBit(b8,6)) {
          if (Equal(20,Widen(BwAnd(b8,63)))) {
            Let b15 = M[Offset(Address(loop_var6),1)];
            Let b16 = M[Offset(Offset(Address(loop_var6),1),1)];
            SetByte 007684 b15;
            SetByte 007685 b16;
          } else {
            Assign loop_var6 = DeAddress(Offset(Offset(Address(loop_var6),1),2));
            Goto: Label 7
          }
        } else {
          if (Equal(20,Widen(BwAnd(b8,63)))) {
            Let b17 = M[Offset(Address(loop_var6),1)];
            SetByte 007684 HiByte(Widen(b17));
            SetByte 007685 LoByte(Widen(b17));
          } else {
            Assign loop_var6 = DeAddress(Offset(Offset(Address(loop_var6),1),1));
            Goto: Label 7
          }
        }
      }
    }
  }
  TraceOperation 067284 (Push (Var (Global 239)));
  Let b18 = M[007684];
  Let b19 = M[007685];
  PushStack MakeHiLo(b18,b19);
  TraceOperation 067287 (Je [Var (Local 2),Var Sp] (Branch F (Dloc 067297)));
  PopStack popped20;
  if (Equal(GetLocal(2),popped20)) {
    TraceOperation 067291 (Call (Floc 102384) [Var (Local 2)] (Local 2));
    PushFrame;
    PushReturnAddress 067291;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 1;
    Jump: 102385
  } else {
    Jump: 067297
  }
LocReturn 067291:
  SetLocal 2 call_result;
  Jump: 067297
LocOp 067297:
  TraceOperation 067297 (Call (Floc 026172) [Var (Local 2),Con 14] Sp);
  PushFrame;
  PushReturnAddress 067297;
  SetLocal 1 GetLocal(2);
  SetLocal 2 14;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 067297:
  PushStack call_result;
  TraceOperation 067304 (Jz (Var Sp) (Branch T (Dloc 067374)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 067374
  } else {
    TraceOperation 067308 (Call (Floc 102384) [Var (Local 2)] Sp);
    PushFrame;
    PushReturnAddress 067308;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 1;
    Jump: 102385
  }
LocReturn 067308:
  PushStack call_result;
  TraceOperation 067314 (Je [Var Sp,Var (Local 1)] (Branch F (Dloc 067365)));
  PopStack popped1;
  if (Equal(popped1,GetLocal(1))) {
    TraceOperation 067318 (CallN (Floc 041040) [Con 21,Con 7,Var (Local 2)]);
    PushFrame;
    PushReturnAddress 067318;
    SetLocal 1 21;
    SetLocal 2 7;
    SetLocal 3 GetLocal(2);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  } else {
    Jump: 067365
  }
LocReturn 067318:
  TraceOperation 067325 (Push (Var (Global 49)));
  Let b1 = M[007304];
  Let b2 = M[007305];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 067328 (Store (Con 65) (Con 1));
  SetByte 007304 0;
  SetByte 007305 1;
  TraceOperation 067331 (CallN (Floc 076180) [Con 0,Var (Global 37),Con 21,Var (Local 2),Con 0]);
  Let b3 = M[007280];
  Let b4 = M[007281];
  PushFrame;
  PushReturnAddress 067331;
  SetLocal 1 0;
  SetLocal 2 MakeHiLo(b3,b4);
  SetLocal 3 21;
  SetLocal 4 GetLocal(2);
  SetLocal 5 0;
  MakeRoutineFrame 9;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  Jump: 076181
LocReturn 067331:
  TraceOperation 067341 (Pull (Con 65));
  PopStack popped1;
  SetByte 007304 HiByte(popped1);
  SetByte 007305 LoByte(popped1);
  TraceOperation 067344 (Call (Floc 102384) [Var (Global 37)] Sp);
  Let b2 = M[007280];
  Let b3 = M[007281];
  PushFrame;
  PushReturnAddress 067344;
  SetLocal 1 MakeHiLo(b2,b3);
  MakeRoutineFrame 1;
  Jump: 102385
LocReturn 067344:
  PushStack call_result;
  TraceOperation 067350 (Je [Var Sp,Var (Local 2)] (Branch T (Dloc 067355)));
  PopStack popped1;
  if (Equal(popped1,GetLocal(2))) {
    Jump: 067355
  } else {
    TraceOperation 067354 Rtrue;
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  }
LocOp 067355:
  TraceOperation 067355 (Call (Floc 076480) [Con 21,Var (Global 47),Con 0] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 067355;
  SetLocal 1 21;
  SetLocal 2 MakeHiLo(b1,b2);
  SetLocal 3 0;
  MakeRoutineFrame 3;
  Jump: 076481
LocReturn 067355:
  PushStack call_result;
  TraceOperation 067363 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 067370:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 067371
LocOp 067371:
  TraceOperation 067371 (Jump 067297);
  Jump: 067297
--------------------------------------------------
LocRoutine 067392:
  MakeRoutineFrame 0;
  Jump: 067393
LocOp 067393:
  TraceOperation 067393 (Jz (Var (Global 36)) (Branch F (Dloc 067411)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 067396 (Jz (Var (Global 114)) (Branch T (Dloc 067405)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 067405
    } else {
      TraceOperation 067399 (CallN (Floc 098228) [Con 16848]);
      PushFrame;
      PushReturnAddress 067399;
      SetLocal 1 16848;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 067411
  }
LocReturn 067399:
  Jump: 067405
LocOp 067405:
  TraceOperation 067405 (Insert_obj (Var (Global 37)) (Var (Global 47)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007300];
  Let b4 = M[007301];
  Let b5 = M[Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),6)];
  Let b6 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),6),1)];
  if (IsZero(MakeHiLo(b5,b6))) {} else {
    Let b7 = M[Offset(Offset(000378,Mul(MakeHiLo(b5,b6),14)),10)];
    Let b8 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b5,b6),14)),10),1)];
    if (Equal(MakeHiLo(b7,b8),MakeHiLo(b1,b2))) {
      Let b9 = M[Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),8)];
      Let b10 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),8),1)];
      SetByte Offset(Offset(000378,Mul(MakeHiLo(b5,b6),14)),10) b9;
      SetByte Offset(Offset(Offset(000378,Mul(MakeHiLo(b5,b6),14)),10),1) b10;
    } else {
      Let loop_var11 = MakeHiLo(b7,b8);
      Label 12: {
        Let b13 = M[Offset(Offset(000378,Mul(loop_var11,14)),8)];
        Let b14 = M[Offset(Offset(Offset(000378,Mul(loop_var11,14)),8),1)];
        if (Equal(MakeHiLo(b13,b14),MakeHiLo(b1,b2))) {
          Let b15 = M[Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),8)];
          Let b16 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),8),1)];
          SetByte Offset(Offset(000378,Mul(loop_var11,14)),8) b15;
          SetByte Offset(Offset(Offset(000378,Mul(loop_var11,14)),8),1) b16;
        } else {
          Assign loop_var11 = MakeHiLo(b13,b14);
          Goto: Label 12
        }
      }
    }
  }
  SetByte Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),6) b3;
  SetByte Offset(Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),6),1) b4;
  Let b17 = M[Offset(Offset(000378,Mul(MakeHiLo(b3,b4),14)),10)];
  Let b18 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b3,b4),14)),10),1)];
  SetByte Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),8) b17;
  SetByte Offset(Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),8),1) b18;
  SetByte Offset(Offset(000378,Mul(MakeHiLo(b3,b4),14)),10) b1;
  SetByte Offset(Offset(Offset(000378,Mul(MakeHiLo(b3,b4),14)),10),1) b2;
  TraceOperation 067408 (Jump 067422);
  Jump: 067422
LocOp 067411:
  TraceOperation 067411 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 067422)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 067415 (CallN (Floc 098228) [Con 16848,Con 1]);
    PushFrame;
    PushReturnAddress 067415;
    SetLocal 1 16848;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 067422
  }
LocReturn 067415:
  Jump: 067422
LocOp 067422:
  TraceOperation 067422 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 067424:
  MakeRoutineFrame 0;
  Jump: 067425
LocOp 067425:
  TraceOperation 067425 (Jz (Var (Global 36)) (Branch F (Dloc 067479)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 067428 (Jz (Var (Global 114)) (Branch T (Dloc 067437)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 067437
    } else {
      TraceOperation 067431 (CallN (Floc 098228) [Con 16856]);
      PushFrame;
      PushReturnAddress 067431;
      SetLocal 1 16856;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 067479
  }
LocReturn 067431:
  Jump: 067437
LocOp 067437:
  TraceOperation 067437 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 067451)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 067441 (CallN (Floc 041040) [Con 21,Con 5,Var (Global 47)]);
    Let b5 = M[007300];
    Let b6 = M[007301];
    PushFrame;
    PushReturnAddress 067441;
    SetLocal 1 21;
    SetLocal 2 5;
    SetLocal 3 MakeHiLo(b5,b6);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  } else {
    Jump: 067451
  }
LocReturn 067441:
  TraceOperation 067448 (Jump 067478);
  Jump: 067478
LocOp 067451:
  TraceOperation 067451 (Call (Floc 026172) [Var (Global 47),Con 17] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 067451;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 17;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 067451:
  PushStack call_result;
  TraceOperation 067458 (Jz (Var Sp) (Branch T (Dloc 067471)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 067471
  } else {
    TraceOperation 067461 (CallN (Floc 041060) [Con 21,Con 8,Var (Global 47)]);
    Let b2 = M[007300];
    Let b3 = M[007301];
    PushFrame;
    PushReturnAddress 067461;
    SetLocal 1 21;
    SetLocal 2 8;
    SetLocal 3 MakeHiLo(b2,b3);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041061
  }
LocReturn 067461:
  TraceOperation 067468 (Jump 067478);
  Jump: 067478
LocOp 067471:
  TraceOperation 067471 (CallN (Floc 041060) [Con 21,Con 9,Var (Global 47)]);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 067471;
  SetLocal 1 21;
  SetLocal 2 9;
  SetLocal 3 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041061
LocReturn 067471:
  Jump: 067478
LocOp 067478:
  TraceOperation 067478 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
LocOp 067479:
  TraceOperation 067479 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 067490)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 067483 (CallN (Floc 098228) [Con 16856,Con 1]);
    PushFrame;
    PushReturnAddress 067483;
    SetLocal 1 16856;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 067490
  }
LocReturn 067483:
  Jump: 067490
LocOp 067490:
  TraceOperation 067490 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 067492:
  MakeRoutineFrame 0;
  Jump: 067493
LocOp 067493:
  TraceOperation 067493 (Jz (Var (Global 36)) (Branch F (Dloc 067517)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 067496 (Jz (Var (Global 114)) (Branch T (Dloc 067505)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 067505
    } else {
      TraceOperation 067499 (CallN (Floc 098228) [Con 16873]);
      PushFrame;
      PushReturnAddress 067499;
      SetLocal 1 16873;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 067517
  }
LocReturn 067499:
  Jump: 067505
LocOp 067505:
  TraceOperation 067505 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 067514)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 067509 (CallN (Floc 056648) [Var (Global 47)]);
    Let b5 = M[007300];
    Let b6 = M[007301];
    PushFrame;
    PushReturnAddress 067509;
    SetLocal 1 MakeHiLo(b5,b6);
    MakeRoutineFrame 1;
    Jump: 056649
  } else {
    Jump: 067514
  }
LocReturn 067509:
  Jump: 067514
LocOp 067514:
  TraceOperation 067514 (Jump 067528);
  Jump: 067528
LocOp 067517:
  TraceOperation 067517 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 067528)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 067521 (CallN (Floc 098228) [Con 16873,Con 1]);
    PushFrame;
    PushReturnAddress 067521;
    SetLocal 1 16873;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 067528
  }
LocReturn 067521:
  Jump: 067528
LocOp 067528:
  TraceOperation 067528 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 067532:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 067533
LocOp 067533:
  TraceOperation 067533 (Jz (Var (Global 36)) (Branch F (Dloc 067597)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 067537 (Jz (Var (Global 114)) (Branch T (Dloc 067546)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 067546
    } else {
      TraceOperation 067540 (CallN (Floc 098228) [Con 16883]);
      PushFrame;
      PushReturnAddress 067540;
      SetLocal 1 16883;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 067597
  }
LocReturn 067540:
  Jump: 067546
LocOp 067546:
  TraceOperation 067546 (Call (Floc 102544) [Var (Global 37)] (Local 1));
  Let b1 = M[007280];
  Let b2 = M[007281];
  PushFrame;
  PushReturnAddress 067546;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 1;
  Jump: 102545
LocReturn 067546:
  SetLocal 1 call_result;
  TraceOperation 067552 (Call (Floc 079624) [Con 20009,Con 0] Sp);
  PushFrame;
  PushReturnAddress 067552;
  SetLocal 1 20009;
  SetLocal 2 0;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 079625
LocReturn 067552:
  PushStack call_result;
  TraceOperation 067560 (Loadw (Con 16625) (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(016625,Mul(2,popped1))];
  Let b3 = M[Offset(Offset(016625,Mul(2,popped1)),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 067566 (Je [Var Sp,Var (Local 1)] (Branch F (Dloc 067594)));
  PopStack popped4;
  if (Equal(popped4,GetLocal(1))) {
    TraceOperation 067570 (Call (Floc 109976) [Con 40,Var (Local 1),Con 29698,Con 2816] Sp);
    PushFrame;
    PushReturnAddress 067570;
    SetLocal 1 40;
    SetLocal 2 GetLocal(1);
    SetLocal 3 29698;
    SetLocal 4 2816;
    MakeRoutineFrame 4;
    Jump: 109977
  } else {
    Jump: 067594
  }
LocReturn 067570:
  PushStack call_result;
  TraceOperation 067582 (Jz (Var Sp) (Branch T (Dloc 067594)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 067594
  } else {
    TraceOperation 067585 (Call (Floc 076480) [Con 26,Con 40,Con 0] Sp);
    PushFrame;
    PushReturnAddress 067585;
    SetLocal 1 26;
    SetLocal 2 40;
    SetLocal 3 0;
    MakeRoutineFrame 3;
    Jump: 076481
  }
LocReturn 067585:
  PushStack call_result;
  TraceOperation 067593 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 067594:
  TraceOperation 067594 (Jump 067608);
  Jump: 067608
LocOp 067597:
  TraceOperation 067597 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 067608)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 067601 (CallN (Floc 098228) [Con 16883,Con 1]);
    PushFrame;
    PushReturnAddress 067601;
    SetLocal 1 16883;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 067608
  }
LocReturn 067601:
  Jump: 067608
LocOp 067608:
  TraceOperation 067608 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 067612:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 067613
LocOp 067613:
  TraceOperation 067613 (Jz (Var (Global 36)) (Branch F (Dloc 067661)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 067616 (Jz (Var (Global 114)) (Branch T (Dloc 067625)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 067625
    } else {
      TraceOperation 067619 (CallN (Floc 098228) [Con 16903]);
      PushFrame;
      PushReturnAddress 067619;
      SetLocal 1 16903;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 067661
  }
LocReturn 067619:
  Jump: 067625
LocOp 067625:
  TraceOperation 067625 (Call (Floc 102544) [Var (Global 37)] (Local 1));
  Let b1 = M[007280];
  Let b2 = M[007281];
  PushFrame;
  PushReturnAddress 067625;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 1;
  Jump: 102545
LocReturn 067625:
  SetLocal 1 call_result;
  TraceOperation 067631 (Call (Floc 079624) [Con 20009,Con 0] Sp);
  PushFrame;
  PushReturnAddress 067631;
  SetLocal 1 20009;
  SetLocal 2 0;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 079625
LocReturn 067631:
  PushStack call_result;
  TraceOperation 067639 (Loadw (Con 16625) (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(016625,Mul(2,popped1))];
  Let b3 = M[Offset(Offset(016625,Mul(2,popped1)),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 067645 (Je [Var Sp,Var (Local 1)] (Branch F (Dloc 067658)));
  PopStack popped4;
  if (Equal(popped4,GetLocal(1))) {
    TraceOperation 067649 (Call (Floc 041040) [Con 23,Con 1,Var (Global 37)] Sp);
    Let b5 = M[007280];
    Let b6 = M[007281];
    PushFrame;
    PushReturnAddress 067649;
    SetLocal 1 23;
    SetLocal 2 1;
    SetLocal 3 MakeHiLo(b5,b6);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  } else {
    Jump: 067658
  }
LocReturn 067649:
  PushStack call_result;
  TraceOperation 067657 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 067658:
  TraceOperation 067658 (Jump 067672);
  Jump: 067672
LocOp 067661:
  TraceOperation 067661 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 067672)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 067665 (CallN (Floc 098228) [Con 16903,Con 1]);
    PushFrame;
    PushReturnAddress 067665;
    SetLocal 1 16903;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 067672
  }
LocReturn 067665:
  Jump: 067672
LocOp 067672:
  TraceOperation 067672 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 067676:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 067677
LocOp 067677:
  TraceOperation 067677 (Jz (Var (Global 36)) (Branch F (Dloc 067743)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 067681 (Jz (Var (Global 114)) (Branch T (Dloc 067690)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 067690
    } else {
      TraceOperation 067684 (CallN (Floc 098228) [Con 16919]);
      PushFrame;
      PushReturnAddress 067684;
      SetLocal 1 16919;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 067743
  }
LocReturn 067684:
  Jump: 067690
LocOp 067690:
  TraceOperation 067690 (Call (Floc 102816) [Var (Global 37)] (Local 1));
  Let b1 = M[007280];
  Let b2 = M[007281];
  PushFrame;
  PushReturnAddress 067690;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 102817
LocReturn 067690:
  SetLocal 1 call_result;
  TraceOperation 067696 (Jz (Var (Local 1)) (Branch T (Dloc 067740)));
  if (IsZero(GetLocal(1))) {
    Jump: 067740
  } else {
    TraceOperation 067699 (Call (Floc 102816) [Var (Global 37)] Sp);
    Let b1 = M[007280];
    Let b2 = M[007281];
    PushFrame;
    PushReturnAddress 067699;
    SetLocal 1 MakeHiLo(b1,b2);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 102817
  }
LocReturn 067699:
  PushStack call_result;
  TraceOperation 067705 (Call (Floc 026172) [Var Sp,Con 17] Sp);
  PopStack popped1;
  PushFrame;
  PushReturnAddress 067705;
  SetLocal 1 popped1;
  SetLocal 2 17;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 067705:
  PushStack call_result;
  TraceOperation 067712 (Jz (Var Sp) (Branch T (Dloc 067740)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 067740
  } else {
    TraceOperation 067715 (Call (Floc 102816) [Var (Global 37)] Sp);
    Let b2 = M[007280];
    Let b3 = M[007281];
    PushFrame;
    PushReturnAddress 067715;
    SetLocal 1 MakeHiLo(b2,b3);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 102817
  }
LocReturn 067715:
  PushStack call_result;
  TraceOperation 067721 (Call (Floc 088304) [Var Sp,Con 13] Sp);
  PopStack popped1;
  PushFrame;
  PushReturnAddress 067721;
  SetLocal 1 popped1;
  SetLocal 2 13;
  MakeRoutineFrame 2;
  Jump: 088305
LocReturn 067721:
  PushStack call_result;
  TraceOperation 067728 (Jz (Var Sp) (Branch F (Dloc 067740)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 067731 (Call (Floc 041040) [Con 23,Con 2,Var (Local 1)] Sp);
    PushFrame;
    PushReturnAddress 067731;
    SetLocal 1 23;
    SetLocal 2 2;
    SetLocal 3 GetLocal(1);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  } else {
    Jump: 067740
  }
LocReturn 067731:
  PushStack call_result;
  TraceOperation 067739 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 067740:
  TraceOperation 067740 (Jump 067754);
  Jump: 067754
LocOp 067743:
  TraceOperation 067743 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 067754)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 067747 (CallN (Floc 098228) [Con 16919,Con 1]);
    PushFrame;
    PushReturnAddress 067747;
    SetLocal 1 16919;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 067754
  }
LocReturn 067747:
  Jump: 067754
LocOp 067754:
  TraceOperation 067754 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 067756:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 067757
LocOp 067757:
  TraceOperation 067757 (Jz (Var (Global 36)) (Branch F (Dloc 067806)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 067760 (Jz (Var (Global 114)) (Branch T (Dloc 067769)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 067769
    } else {
      TraceOperation 067763 (CallN (Floc 098228) [Con 16939]);
      PushFrame;
      PushReturnAddress 067763;
      SetLocal 1 16939;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 067806
  }
LocReturn 067763:
  Jump: 067769
LocOp 067769:
  TraceOperation 067769 (Call (Floc 102968) [Var (Global 37)] (Local 1));
  Let b1 = M[007280];
  Let b2 = M[007281];
  PushFrame;
  PushReturnAddress 067769;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 102969
LocReturn 067769:
  SetLocal 1 call_result;
  TraceOperation 067775 (Jz (Var (Local 1)) (Branch T (Dloc 067803)));
  if (IsZero(GetLocal(1))) {
    Jump: 067803
  } else {
    TraceOperation 067778 (Call (Floc 102968) [Var (Global 37)] Sp);
    Let b1 = M[007280];
    Let b2 = M[007281];
    PushFrame;
    PushReturnAddress 067778;
    SetLocal 1 MakeHiLo(b1,b2);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 102969
  }
LocReturn 067778:
  PushStack call_result;
  TraceOperation 067784 (Call (Floc 026172) [Var Sp,Con 18] Sp);
  PopStack popped1;
  PushFrame;
  PushReturnAddress 067784;
  SetLocal 1 popped1;
  SetLocal 2 18;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 067784:
  PushStack call_result;
  TraceOperation 067791 (Jz (Var Sp) (Branch T (Dloc 067803)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 067803
  } else {
    TraceOperation 067794 (Call (Floc 076480) [Con 24,Var (Local 1),Con 0] Sp);
    PushFrame;
    PushReturnAddress 067794;
    SetLocal 1 24;
    SetLocal 2 GetLocal(1);
    SetLocal 3 0;
    MakeRoutineFrame 3;
    Jump: 076481
  }
LocReturn 067794:
  PushStack call_result;
  TraceOperation 067802 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 067803:
  TraceOperation 067803 (Jump 067817);
  Jump: 067817
LocOp 067806:
  TraceOperation 067806 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 067817)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 067810 (CallN (Floc 098228) [Con 16939,Con 1]);
    PushFrame;
    PushReturnAddress 067810;
    SetLocal 1 16939;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 067817
  }
LocReturn 067810:
  Jump: 067817
LocOp 067817:
  TraceOperation 067817 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 067820:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 067821
LocOp 067821:
  TraceOperation 067821 (Jz (Var (Global 36)) (Branch F (Dloc 067859)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 067824 (Jz (Var (Global 114)) (Branch T (Dloc 067833)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 067833
    } else {
      TraceOperation 067827 (CallN (Floc 098228) [Con 16955]);
      PushFrame;
      PushReturnAddress 067827;
      SetLocal 1 16955;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 067859
  }
LocReturn 067827:
  Jump: 067833
LocOp 067833:
  TraceOperation 067833 (Call (Floc 079624) [Con 20009,Con 0] Sp);
  PushFrame;
  PushReturnAddress 067833;
  SetLocal 1 20009;
  SetLocal 2 0;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 079625
LocReturn 067833:
  PushStack call_result;
  TraceOperation 067841 (Loadw (Con 16625) (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(016625,Mul(2,popped1))];
  Let b3 = M[Offset(Offset(016625,Mul(2,popped1)),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 067847 (Call (Floc 102468) [Var Sp] (Local 1));
  PopStack popped4;
  PushFrame;
  PushReturnAddress 067847;
  SetLocal 1 popped4;
  MakeRoutineFrame 1;
  Jump: 102469
LocReturn 067847:
  SetLocal 1 call_result;
  TraceOperation 067853 (Insert_obj (Var (Global 37)) (Var (Local 1)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),6)];
  Let b4 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),6),1)];
  if (IsZero(MakeHiLo(b3,b4))) {} else {
    Let b5 = M[Offset(Offset(000378,Mul(MakeHiLo(b3,b4),14)),10)];
    Let b6 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b3,b4),14)),10),1)];
    if (Equal(MakeHiLo(b5,b6),MakeHiLo(b1,b2))) {
      Let b7 = M[Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),8)];
      Let b8 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),8),1)];
      SetByte Offset(Offset(000378,Mul(MakeHiLo(b3,b4),14)),10) b7;
      SetByte Offset(Offset(Offset(000378,Mul(MakeHiLo(b3,b4),14)),10),1) b8;
    } else {
      Let loop_var9 = MakeHiLo(b5,b6);
      Label 10: {
        Let b11 = M[Offset(Offset(000378,Mul(loop_var9,14)),8)];
        Let b12 = M[Offset(Offset(Offset(000378,Mul(loop_var9,14)),8),1)];
        if (Equal(MakeHiLo(b11,b12),MakeHiLo(b1,b2))) {
          Let b13 = M[Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),8)];
          Let b14 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),8),1)];
          SetByte Offset(Offset(000378,Mul(loop_var9,14)),8) b13;
          SetByte Offset(Offset(Offset(000378,Mul(loop_var9,14)),8),1) b14;
        } else {
          Assign loop_var9 = MakeHiLo(b11,b12);
          Goto: Label 10
        }
      }
    }
  }
  SetByte Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),6) HiByte(GetLocal(1));
  SetByte Offset(Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),6),1) LoByte(GetLocal(1));
  Let b15 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),10)];
  Let b16 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),10),1)];
  SetByte Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),8) b15;
  SetByte Offset(Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),8),1) b16;
  SetByte Offset(Offset(000378,Mul(GetLocal(1),14)),10) b1;
  SetByte Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),10),1) b2;
  TraceOperation 067856 (Jump 067870);
  Jump: 067870
LocOp 067859:
  TraceOperation 067859 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 067870)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 067863 (CallN (Floc 098228) [Con 16955,Con 1]);
    PushFrame;
    PushReturnAddress 067863;
    SetLocal 1 16955;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 067870
  }
LocReturn 067863:
  Jump: 067870
LocOp 067870:
  TraceOperation 067870 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 067872:
  MakeRoutineFrame 0;
  Jump: 067873
LocOp 067873:
  TraceOperation 067873 (Jz (Var (Global 36)) (Branch F (Dloc 067935)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 067876 (Jz (Var (Global 114)) (Branch T (Dloc 067885)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 067885
    } else {
      TraceOperation 067879 (CallN (Floc 098228) [Con 16968]);
      PushFrame;
      PushReturnAddress 067879;
      SetLocal 1 16968;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 067935
  }
LocReturn 067879:
  Jump: 067885
LocOp 067885:
  TraceOperation 067885 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 067913)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 067889 (Call (Floc 079624) [Con 20009,Con 0] Sp);
    PushFrame;
    PushReturnAddress 067889;
    SetLocal 1 20009;
    SetLocal 2 0;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 079625
  } else {
    Jump: 067913
  }
LocReturn 067889:
  PushStack call_result;
  TraceOperation 067897 (Loadw (Con 16625) (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(016625,Mul(2,popped1))];
  Let b3 = M[Offset(Offset(016625,Mul(2,popped1)),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 067903 (CallN (Floc 041040) [Con 23,Con 3,Var Sp]);
  PopStack popped4;
  PushFrame;
  PushReturnAddress 067903;
  SetLocal 1 23;
  SetLocal 2 3;
  SetLocal 3 popped4;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041041
LocReturn 067903:
  TraceOperation 067910 (Jump 067934);
  Jump: 067934
LocOp 067913:
  TraceOperation 067913 (Call (Floc 079624) [Con 20009,Con 0] Sp);
  PushFrame;
  PushReturnAddress 067913;
  SetLocal 1 20009;
  SetLocal 2 0;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 079625
LocReturn 067913:
  PushStack call_result;
  TraceOperation 067921 (Loadw (Con 16625) (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(016625,Mul(2,popped1))];
  Let b3 = M[Offset(Offset(016625,Mul(2,popped1)),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 067927 (CallN (Floc 041060) [Con 23,Con 6,Var Sp]);
  PopStack popped4;
  PushFrame;
  PushReturnAddress 067927;
  SetLocal 1 23;
  SetLocal 2 6;
  SetLocal 3 popped4;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041061
LocReturn 067927:
  Jump: 067934
LocOp 067934:
  TraceOperation 067934 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
LocOp 067935:
  TraceOperation 067935 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 067946)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 067939 (CallN (Floc 098228) [Con 16968,Con 1]);
    PushFrame;
    PushReturnAddress 067939;
    SetLocal 1 16968;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 067946
  }
LocReturn 067939:
  Jump: 067946
LocOp 067946:
  TraceOperation 067946 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 067948:
  MakeRoutineFrame 0;
  Jump: 067949
LocOp 067949:
  TraceOperation 067949 (Jz (Var (Global 36)) (Branch F (Dloc 067971)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 067952 (Jz (Var (Global 114)) (Branch T (Dloc 067961)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 067961
    } else {
      TraceOperation 067955 (CallN (Floc 098228) [Con 16987]);
      PushFrame;
      PushReturnAddress 067955;
      SetLocal 1 16987;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 067971
  }
LocReturn 067955:
  Jump: 067961
LocOp 067961:
  TraceOperation 067961 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 067968)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 067965 (CallN (Floc 076636) []);
    PushFrame;
    PushReturnAddress 067965;
    MakeRoutineFrame 0;
    Jump: 076637
  } else {
    Jump: 067968
  }
LocReturn 067965:
  Jump: 067968
LocOp 067968:
  TraceOperation 067968 (Jump 067982);
  Jump: 067982
LocOp 067971:
  TraceOperation 067971 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 067982)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 067975 (CallN (Floc 098228) [Con 16987,Con 1]);
    PushFrame;
    PushReturnAddress 067975;
    SetLocal 1 16987;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 067982
  }
LocReturn 067975:
  Jump: 067982
LocOp 067982:
  TraceOperation 067982 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 067984:
  MakeRoutineFrame 0;
  Jump: 067985
LocOp 067985:
  TraceOperation 067985 (Jz (Var (Global 36)) (Branch F (Dloc 068028)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 067988 (Jz (Var (Global 114)) (Branch T (Dloc 067997)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 067997
    } else {
      TraceOperation 067991 (CallN (Floc 098228) [Con 16996]);
      PushFrame;
      PushReturnAddress 067991;
      SetLocal 1 16996;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 068028
  }
LocReturn 067991:
  Jump: 067997
LocOp 067997:
  TraceOperation 067997 (Call (Floc 102968) [Var (Global 37)] Sp);
  Let b1 = M[007280];
  Let b2 = M[007281];
  PushFrame;
  PushReturnAddress 067997;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 102969
LocReturn 067997:
  PushStack call_result;
  TraceOperation 068003 (Je [Var (Global 47),Var Sp] (Branch F (Dloc 068008)));
  Let b1 = M[007300];
  Let b2 = M[007301];
  PopStack popped3;
  if (Equal(MakeHiLo(b1,b2),popped3)) {
    TraceOperation 068007 Rfalse;
    PopFrame;
    PopReturnAddress return_address_4;
    SetResult 0;
    JumpIndirect: (return) return_address_4
  } else {
    Jump: 068008
  }
LocOp 068008:
  TraceOperation 068008 (Call (Floc 102992) [Var (Global 37)] Sp);
  Let b1 = M[007280];
  Let b2 = M[007281];
  PushFrame;
  PushReturnAddress 068008;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 102993
LocReturn 068008:
  PushStack call_result;
  TraceOperation 068014 (Je [Var (Global 47),Var Sp] (Branch F (Dloc 068019)));
  Let b1 = M[007300];
  Let b2 = M[007301];
  PopStack popped3;
  if (Equal(MakeHiLo(b1,b2),popped3)) {
    TraceOperation 068018 Rfalse;
    PopFrame;
    PopReturnAddress return_address_4;
    SetResult 0;
    JumpIndirect: (return) return_address_4
  } else {
    Jump: 068019
  }
LocOp 068019:
  TraceOperation 068019 (Call (Floc 041040) [Con 24,Con 1,Var (Global 47)] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 068019;
  SetLocal 1 24;
  SetLocal 2 1;
  SetLocal 3 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041041
LocReturn 068019:
  PushStack call_result;
  TraceOperation 068027 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 068028:
  TraceOperation 068028 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 068039)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 068032 (CallN (Floc 098228) [Con 16996,Con 1]);
    PushFrame;
    PushReturnAddress 068032;
    SetLocal 1 16996;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 068039
  }
LocReturn 068032:
  Jump: 068039
LocOp 068039:
  TraceOperation 068039 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 068040:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 068041
LocOp 068041:
  TraceOperation 068041 (Jz (Var (Global 36)) (Branch F (Dloc 068065)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 068044 (Jz (Var (Global 114)) (Branch T (Dloc 068053)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 068053
    } else {
      TraceOperation 068047 (CallN (Floc 098228) [Con 17010]);
      PushFrame;
      PushReturnAddress 068047;
      SetLocal 1 17010;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 068065
  }
LocReturn 068047:
  Jump: 068053
LocOp 068053:
  TraceOperation 068053 (Call (Floc 102468) [Var (Global 47)] (Local 1));
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 068053;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 1;
  Jump: 102469
LocReturn 068053:
  SetLocal 1 call_result;
  TraceOperation 068059 (Insert_obj (Var (Global 37)) (Var (Local 1)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),6)];
  Let b4 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),6),1)];
  if (IsZero(MakeHiLo(b3,b4))) {} else {
    Let b5 = M[Offset(Offset(000378,Mul(MakeHiLo(b3,b4),14)),10)];
    Let b6 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b3,b4),14)),10),1)];
    if (Equal(MakeHiLo(b5,b6),MakeHiLo(b1,b2))) {
      Let b7 = M[Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),8)];
      Let b8 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),8),1)];
      SetByte Offset(Offset(000378,Mul(MakeHiLo(b3,b4),14)),10) b7;
      SetByte Offset(Offset(Offset(000378,Mul(MakeHiLo(b3,b4),14)),10),1) b8;
    } else {
      Let loop_var9 = MakeHiLo(b5,b6);
      Label 10: {
        Let b11 = M[Offset(Offset(000378,Mul(loop_var9,14)),8)];
        Let b12 = M[Offset(Offset(Offset(000378,Mul(loop_var9,14)),8),1)];
        if (Equal(MakeHiLo(b11,b12),MakeHiLo(b1,b2))) {
          Let b13 = M[Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),8)];
          Let b14 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),8),1)];
          SetByte Offset(Offset(000378,Mul(loop_var9,14)),8) b13;
          SetByte Offset(Offset(Offset(000378,Mul(loop_var9,14)),8),1) b14;
        } else {
          Assign loop_var9 = MakeHiLo(b11,b12);
          Goto: Label 10
        }
      }
    }
  }
  SetByte Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),6) HiByte(GetLocal(1));
  SetByte Offset(Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),6),1) LoByte(GetLocal(1));
  Let b15 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),10)];
  Let b16 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),10),1)];
  SetByte Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),8) b15;
  SetByte Offset(Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),8),1) b16;
  SetByte Offset(Offset(000378,Mul(GetLocal(1),14)),10) b1;
  SetByte Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),10),1) b2;
  TraceOperation 068062 (Jump 068076);
  Jump: 068076
LocOp 068065:
  TraceOperation 068065 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 068076)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 068069 (CallN (Floc 098228) [Con 17010,Con 1]);
    PushFrame;
    PushReturnAddress 068069;
    SetLocal 1 17010;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 068076
  }
LocReturn 068069:
  Jump: 068076
LocOp 068076:
  TraceOperation 068076 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 068080:
  MakeRoutineFrame 0;
  Jump: 068081
LocOp 068081:
  TraceOperation 068081 (Jz (Var (Global 36)) (Branch F (Dloc 068115)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 068084 (Jz (Var (Global 114)) (Branch T (Dloc 068093)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 068093
    } else {
      TraceOperation 068087 (CallN (Floc 098228) [Con 17020]);
      PushFrame;
      PushReturnAddress 068087;
      SetLocal 1 17020;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 068115
  }
LocReturn 068087:
  Jump: 068093
LocOp 068093:
  TraceOperation 068093 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 068107)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 068097 (CallN (Floc 041040) [Con 23,Con 3,Var (Global 47)]);
    Let b5 = M[007300];
    Let b6 = M[007301];
    PushFrame;
    PushReturnAddress 068097;
    SetLocal 1 23;
    SetLocal 2 3;
    SetLocal 3 MakeHiLo(b5,b6);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  } else {
    Jump: 068107
  }
LocReturn 068097:
  TraceOperation 068104 (Jump 068114);
  Jump: 068114
LocOp 068107:
  TraceOperation 068107 (CallN (Floc 041060) [Con 23,Con 5,Var (Global 47)]);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 068107;
  SetLocal 1 23;
  SetLocal 2 5;
  SetLocal 3 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041061
LocReturn 068107:
  Jump: 068114
LocOp 068114:
  TraceOperation 068114 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
LocOp 068115:
  TraceOperation 068115 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 068126)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 068119 (CallN (Floc 098228) [Con 17020,Con 1]);
    PushFrame;
    PushReturnAddress 068119;
    SetLocal 1 17020;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 068126
  }
LocReturn 068119:
  Jump: 068126
LocOp 068126:
  TraceOperation 068126 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 068128:
  MakeRoutineFrame 0;
  Jump: 068129
LocOp 068129:
  TraceOperation 068129 (Jz (Var (Global 36)) (Branch F (Dloc 068151)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 068132 (Jz (Var (Global 114)) (Branch T (Dloc 068141)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 068141
    } else {
      TraceOperation 068135 (CallN (Floc 098228) [Con 17032]);
      PushFrame;
      PushReturnAddress 068135;
      SetLocal 1 17032;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 068151
  }
LocReturn 068135:
  Jump: 068141
LocOp 068141:
  TraceOperation 068141 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 068148)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 068145 (CallN (Floc 076636) []);
    PushFrame;
    PushReturnAddress 068145;
    MakeRoutineFrame 0;
    Jump: 076637
  } else {
    Jump: 068148
  }
LocReturn 068145:
  Jump: 068148
LocOp 068148:
  TraceOperation 068148 (Jump 068162);
  Jump: 068162
LocOp 068151:
  TraceOperation 068151 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 068162)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 068155 (CallN (Floc 098228) [Con 17032,Con 1]);
    PushFrame;
    PushReturnAddress 068155;
    SetLocal 1 17032;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 068162
  }
LocReturn 068155:
  Jump: 068162
LocOp 068162:
  TraceOperation 068162 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 068164:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 068165
LocOp 068165:
  TraceOperation 068165 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 068360)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 068170 (Jz (Var (Global 114)) (Branch T (Dloc 068179)));
    Let b5 = M[007434];
    Let b6 = M[007435];
    if (IsZero(MakeHiLo(b5,b6))) {
      Jump: 068179
    } else {
      TraceOperation 068173 (CallN (Floc 098228) [Con 17041]);
      PushFrame;
      PushReturnAddress 068173;
      SetLocal 1 17041;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 068360
  }
LocReturn 068173:
  Jump: 068179
LocOp 068179:
  TraceOperation 068179 (Store (Con 20) (Con 1));
  SetByte 007214 0;
  SetByte 007215 1;
  TraceOperation 068182 (Set_text_style (Con 2));
  Note "(\"TextStyle\",(Reverse,True))";
  Note "(\"TextStyle\",(Bold,False))";
  Note "(\"TextStyle\",(Italic,False))";
  Note "(\"TextStyle\",(Fixed,False))";
  TraceOperation 068185 (Call (Floc 079624) [Con 20011,Con 2] Sp);
  PushFrame;
  PushReturnAddress 068185;
  SetLocal 1 20011;
  SetLocal 2 2;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 079625
LocReturn 068185:
  PushStack call_result;
  TraceOperation 068193 (Loadw (Con 16625) (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(016625,Mul(2,popped1))];
  Let b3 = M[Offset(Offset(016625,Mul(2,popped1)),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 068199 (Jz (Var Sp) (Branch F (Dloc 068231)));
  PopStack popped4;
  if (IsZero(popped4)) {
    TraceOperation 068202 (CallN (Floc 078848) [Con 8]);
    PushFrame;
    PushReturnAddress 068202;
    SetLocal 1 8;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 078849
  } else {
    Jump: 068231
  }
LocReturn 068202:
  TraceOperation 068207 (Call (Floc 078928) [Con 8] Sp);
  PushFrame;
  PushReturnAddress 068207;
  SetLocal 1 8;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 078929
LocReturn 068207:
  PushStack call_result;
  TraceOperation 068213 (Jz (Var Sp) (Branch F (Dloc 068223)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 068216 (CallN (Floc 041040) [Con 4097,Con 71]);
    PushFrame;
    PushReturnAddress 068216;
    SetLocal 1 4097;
    SetLocal 2 71;
    MakeRoutineFrame 4;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 041041
  } else {
    Jump: 068223
  }
LocReturn 068216:
  Jump: 068223
LocOp 068223:
  TraceOperation 068223 (CallN (Floc 078972) [Con 8]);
  PushFrame;
  PushReturnAddress 068223;
  SetLocal 1 8;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 078973
LocReturn 068223:
  TraceOperation 068228 (Jump 068296);
  Jump: 068296
LocOp 068231:
  TraceOperation 068231 (Call (Floc 079624) [Con 20011,Con 3] Sp);
  PushFrame;
  PushReturnAddress 068231;
  SetLocal 1 20011;
  SetLocal 2 3;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 079625
LocReturn 068231:
  PushStack call_result;
  TraceOperation 068239 (Loadw (Con 16625) (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(016625,Mul(2,popped1))];
  Let b3 = M[Offset(Offset(016625,Mul(2,popped1)),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 068245 (Je [Var Sp,Var (Global 32)] (Branch F (Dloc 068274)));
  PopStack popped4;
  Let b5 = M[007270];
  Let b6 = M[007271];
  if (Equal(popped4,MakeHiLo(b5,b6))) {
    TraceOperation 068249 (Store (Con 20) (Con 1));
    SetByte 007214 0;
    SetByte 007215 1;
    TraceOperation 068252 (Call (Floc 079624) [Con 20011,Con 3] Sp);
    PushFrame;
    PushReturnAddress 068252;
    SetLocal 1 20011;
    SetLocal 2 3;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 079625
  } else {
    Jump: 068274
  }
LocReturn 068252:
  PushStack call_result;
  TraceOperation 068260 (Loadw (Con 16625) (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(016625,Mul(2,popped1))];
  Let b3 = M[Offset(Offset(016625,Mul(2,popped1)),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 068266 (CallN (Floc 082048) [Var Sp]);
  PopStack popped4;
  PushFrame;
  PushReturnAddress 068266;
  SetLocal 1 popped4;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 082049
LocReturn 068266:
  TraceOperation 068271 (Jump 068296);
  Jump: 068296
LocOp 068274:
  TraceOperation 068274 (Store (Con 20) (Con 1));
  SetByte 007214 0;
  SetByte 007215 1;
  TraceOperation 068277 (Call (Floc 079624) [Con 20011,Con 3] Sp);
  PushFrame;
  PushReturnAddress 068277;
  SetLocal 1 20011;
  SetLocal 2 3;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 079625
LocReturn 068277:
  PushStack call_result;
  TraceOperation 068285 (Loadw (Con 16625) (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(016625,Mul(2,popped1))];
  Let b3 = M[Offset(Offset(016625,Mul(2,popped1)),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 068291 (CallN (Floc 081964) [Var Sp]);
  PopStack popped4;
  PushFrame;
  PushReturnAddress 068291;
  SetLocal 1 popped4;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 081965
LocReturn 068291:
  Jump: 068296
LocOp 068296:
  TraceOperation 068296 (Store (Con 20) (Con 1));
  SetByte 007214 0;
  SetByte 007215 1;
  TraceOperation 068299 (Set_text_style (Con 0));
  Note "(\"TextStyle\",(Reverse,False))";
  Note "(\"TextStyle\",(Bold,False))";
  Note "(\"TextStyle\",(Italic,False))";
  Note "(\"TextStyle\",(Fixed,False))";
  TraceOperation 068302 (Call (Floc 037168) [Var (Global 37)] (Local 1));
  Let b1 = M[007280];
  Let b2 = M[007281];
  PushFrame;
  PushReturnAddress 068302;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 1;
  Jump: 037169
LocReturn 068302:
  SetLocal 1 call_result;
  TraceOperation 068308 (Store (Con 2) (Con 2));
  SetLocal 2 2;
  Jump: 068311
LocOp 068311:
  TraceOperation 068311 (Call (Floc 079624) [Con 20011,Con 2] Sp);
  PushFrame;
  PushReturnAddress 068311;
  SetLocal 1 20011;
  SetLocal 2 2;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 079625
LocReturn 068311:
  PushStack call_result;
  TraceOperation 068319 (Loadw (Con 16625) (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(016625,Mul(2,popped1))];
  Let b3 = M[Offset(Offset(016625,Mul(2,popped1)),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 068325 (Jg (Var (Local 2)) (Var Sp) (Branch T (Dloc 068347)));
  PopStack popped4;
  if (GreaterThan(GetLocal(2),popped4)) {
    Jump: 068347
  } else {
    TraceOperation 068329 (CallN (Floc 041040) [Con 7,Con 8,Var (Local 1)]);
    PushFrame;
    PushReturnAddress 068329;
    SetLocal 1 7;
    SetLocal 2 8;
    SetLocal 3 GetLocal(1);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  }
LocReturn 068329:
  TraceOperation 068336 (Call (Floc 037168) [Var (Local 1)] (Local 1));
  PushFrame;
  PushReturnAddress 068336;
  SetLocal 1 GetLocal(1);
  MakeRoutineFrame 1;
  Jump: 037169
LocReturn 068336:
  SetLocal 1 call_result;
  TraceOperation 068342 (Inc (Con 2));
  SetLocal 2 Add(GetLocal(2),1);
  TraceOperation 068344 (Jump 068311);
  Jump: 068311
LocOp 068347:
  TraceOperation 068347 (Store (Con 20) (Con 1));
  SetByte 007214 0;
  SetByte 007215 1;
  TraceOperation 068350 New_line;
  GamePrint "\n";
  TraceOperation 068351 (Store (Con 20) (Con 1));
  SetByte 007214 0;
  SetByte 007215 1;
  TraceOperation 068354 (CallN (Floc 080392) []);
  PushFrame;
  PushReturnAddress 068354;
  MakeRoutineFrame 0;
  Jump: 080393
LocReturn 068354:
  TraceOperation 068357 (Jump 068371);
  Jump: 068371
LocOp 068360:
  TraceOperation 068360 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 068371)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 068364 (CallN (Floc 098228) [Con 17041,Con 1]);
    PushFrame;
    PushReturnAddress 068364;
    SetLocal 1 17041;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 068371
  }
LocReturn 068364:
  Jump: 068371
LocOp 068371:
  TraceOperation 068371 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 068372:
  MakeRoutineFrame 0;
  Jump: 068373
LocOp 068373:
  TraceOperation 068373 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 068537)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 068378 (Jz (Var (Global 114)) (Branch T (Dloc 068387)));
    Let b5 = M[007434];
    Let b6 = M[007435];
    if (IsZero(MakeHiLo(b5,b6))) {
      Jump: 068387
    } else {
      TraceOperation 068381 (CallN (Floc 098228) [Con 17093]);
      PushFrame;
      PushReturnAddress 068381;
      SetLocal 1 17093;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 068537
  }
LocReturn 068381:
  Jump: 068387
LocOp 068387:
  TraceOperation 068387 (Call (Floc 079624) [Con 20011,Con 2] Sp);
  PushFrame;
  PushReturnAddress 068387;
  SetLocal 1 20011;
  SetLocal 2 2;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 079625
LocReturn 068387:
  PushStack call_result;
  TraceOperation 068395 (Loadw (Con 16625) (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(016625,Mul(2,popped1))];
  Let b3 = M[Offset(Offset(016625,Mul(2,popped1)),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 068401 (Jz (Var Sp) (Branch F (Dloc 068472)));
  PopStack popped4;
  if (IsZero(popped4)) {
    TraceOperation 068405 (Je [Var (Global 92),Con 3] (Branch F (Dloc 068410)));
    Let b5 = M[007390];
    Let b6 = M[007391];
    if (Equal(MakeHiLo(b5,b6),3)) {
      TraceOperation 068409 Rfalse;
      PopFrame;
      PopReturnAddress return_address_7;
      SetResult 0;
      JumpIndirect: (return) return_address_7
    } else {
      Jump: 068410
    }
  } else {
    Jump: 068472
  }
LocOp 068410:
  TraceOperation 068410 (Je [Var (Global 92),Con 1] (Branch F (Dloc 068443)));
  Let b1 = M[007390];
  Let b2 = M[007391];
  if (Equal(MakeHiLo(b1,b2),1)) {
    TraceOperation 068414 (Call (Floc 079624) [Con 20011,Con 1] Sp);
    PushFrame;
    PushReturnAddress 068414;
    SetLocal 1 20011;
    SetLocal 2 1;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 079625
  } else {
    Jump: 068443
  }
LocReturn 068414:
  PushStack call_result;
  TraceOperation 068422 (Loadw (Con 16625) (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(016625,Mul(2,popped1))];
  Let b3 = M[Offset(Offset(016625,Mul(2,popped1)),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 068428 (Je [Var Sp,Con 1] (Branch F (Dloc 068443)));
  PopStack popped4;
  if (Equal(popped4,1)) {
    TraceOperation 068432 (Loadw (Con 11427) (Con 7) Sp);
    Let b5 = M[011441];
    Let b6 = M[011442];
    PushStack MakeHiLo(b5,b6);
    TraceOperation 068438 (Je [Var Sp,Con 1] (Branch F (Dloc 068443)));
    PopStack popped7;
    if (Equal(popped7,1)) {
      TraceOperation 068442 Rfalse;
      PopFrame;
      PopReturnAddress return_address_8;
      SetResult 0;
      JumpIndirect: (return) return_address_8
    } else {
      Jump: 068443
    }
  } else {
    Jump: 068443
  }
LocOp 068443:
  TraceOperation 068443 (CallN (Floc 078848) [Con 9]);
  PushFrame;
  PushReturnAddress 068443;
  SetLocal 1 9;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 078849
LocReturn 068443:
  TraceOperation 068448 (Call (Floc 078928) [Con 9] Sp);
  PushFrame;
  PushReturnAddress 068448;
  SetLocal 1 9;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 078929
LocReturn 068448:
  PushStack call_result;
  TraceOperation 068454 (Jz (Var Sp) (Branch F (Dloc 068464)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 068457 (CallN (Floc 041040) [Con 4097,Con 17]);
    PushFrame;
    PushReturnAddress 068457;
    SetLocal 1 4097;
    SetLocal 2 17;
    MakeRoutineFrame 4;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 041041
  } else {
    Jump: 068464
  }
LocReturn 068457:
  Jump: 068464
LocOp 068464:
  TraceOperation 068464 (CallN (Floc 078972) [Con 9]);
  PushFrame;
  PushReturnAddress 068464;
  SetLocal 1 9;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 078973
LocReturn 068464:
  TraceOperation 068469 (Jump 068534);
  Jump: 068534
LocOp 068472:
  TraceOperation 068472 (Call (Floc 079624) [Con 20011,Con 3] Sp);
  PushFrame;
  PushReturnAddress 068472;
  SetLocal 1 20011;
  SetLocal 2 3;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 079625
LocReturn 068472:
  PushStack call_result;
  TraceOperation 068480 (Loadw (Con 16625) (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(016625,Mul(2,popped1))];
  Let b3 = M[Offset(Offset(016625,Mul(2,popped1)),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 068486 (Je [Var Sp,Var (Global 32)] (Branch F (Dloc 068534)));
  PopStack popped4;
  Let b5 = M[007270];
  Let b6 = M[007271];
  if (Equal(popped4,MakeHiLo(b5,b6))) {
    TraceOperation 068490 (Je [Var (Global 92),Con 3] (Branch F (Dloc 068495)));
    Let b7 = M[007390];
    Let b8 = M[007391];
    if (Equal(MakeHiLo(b7,b8),3)) {
      TraceOperation 068494 Rfalse;
      PopFrame;
      PopReturnAddress return_address_9;
      SetResult 0;
      JumpIndirect: (return) return_address_9
    } else {
      Jump: 068495
    }
  } else {
    Jump: 068534
  }
LocOp 068495:
  TraceOperation 068495 (Je [Var (Global 92),Con 1] (Branch F (Dloc 068528)));
  Let b1 = M[007390];
  Let b2 = M[007391];
  if (Equal(MakeHiLo(b1,b2),1)) {
    TraceOperation 068499 (Call (Floc 079624) [Con 20011,Con 1] Sp);
    PushFrame;
    PushReturnAddress 068499;
    SetLocal 1 20011;
    SetLocal 2 1;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 079625
  } else {
    Jump: 068528
  }
LocReturn 068499:
  PushStack call_result;
  TraceOperation 068507 (Loadw (Con 16625) (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(016625,Mul(2,popped1))];
  Let b3 = M[Offset(Offset(016625,Mul(2,popped1)),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 068513 (Je [Var Sp,Con 1] (Branch F (Dloc 068528)));
  PopStack popped4;
  if (Equal(popped4,1)) {
    TraceOperation 068517 (Call (Floc 088304) [Var (Global 32),Con 21] Sp);
    Let b5 = M[007270];
    Let b6 = M[007271];
    PushFrame;
    PushReturnAddress 068517;
    SetLocal 1 MakeHiLo(b5,b6);
    SetLocal 2 21;
    MakeRoutineFrame 2;
    Jump: 088305
  } else {
    Jump: 068528
  }
LocReturn 068517:
  PushStack call_result;
  TraceOperation 068524 (Jz (Var Sp) (Branch T (Dloc 068528)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 068528
  } else {
    TraceOperation 068527 Rfalse;
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  }
LocOp 068528:
  TraceOperation 068528 (CallN (Floc 080988) [Var (Global 1),Con 22]);
  Let b1 = M[007208];
  Let b2 = M[007209];
  PushFrame;
  PushReturnAddress 068528;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 22;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 080989
LocReturn 068528:
  Jump: 068534
LocOp 068534:
  TraceOperation 068534 (Jump 068548);
  Jump: 068548
LocOp 068537:
  TraceOperation 068537 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 068548)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 068541 (CallN (Floc 098228) [Con 17093,Con 1]);
    PushFrame;
    PushReturnAddress 068541;
    SetLocal 1 17093;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 068548
  }
LocReturn 068541:
  Jump: 068548
LocOp 068548:
  TraceOperation 068548 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 068552:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 068553
LocOp 068553:
  TraceOperation 068553 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 068680)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 068558 (Jz (Var (Global 114)) (Branch T (Dloc 068567)));
    Let b5 = M[007434];
    Let b6 = M[007435];
    if (IsZero(MakeHiLo(b5,b6))) {
      Jump: 068567
    } else {
      TraceOperation 068561 (CallN (Floc 098228) [Con 17138]);
      PushFrame;
      PushReturnAddress 068561;
      SetLocal 1 17138;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 068680
  }
LocReturn 068561:
  Jump: 068567
LocOp 068567:
  TraceOperation 068567 (Call (Floc 079624) [Con 20011,Con 2] Sp);
  PushFrame;
  PushReturnAddress 068567;
  SetLocal 1 20011;
  SetLocal 2 2;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 079625
LocReturn 068567:
  PushStack call_result;
  TraceOperation 068575 (Loadw (Con 16625) (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(016625,Mul(2,popped1))];
  Let b3 = M[Offset(Offset(016625,Mul(2,popped1)),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 068581 (Jg (Var Sp) (Con 0) (Branch F (Dloc 068679)));
  PopStack popped4;
  if (GreaterThan(popped4,0)) {
    TraceOperation 068586 (Store (Con 1) (Var (Global 37)));
    Let b5 = M[007280];
    Let b6 = M[007281];
    SetLocal 1 MakeHiLo(b5,b6);
    TraceOperation 068589 (Call (Floc 079624) [Con 20011,Con 2] Sp);
    PushFrame;
    PushReturnAddress 068589;
    SetLocal 1 20011;
    SetLocal 2 2;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 079625
  } else {
    Jump: 068679
  }
LocReturn 068589:
  PushStack call_result;
  TraceOperation 068597 (Loadw (Con 16625) (Var Sp) (Local 2));
  PopStack popped1;
  Let b2 = M[Offset(016625,Mul(2,popped1))];
  Let b3 = M[Offset(Offset(016625,Mul(2,popped1)),1)];
  SetLocal 2 MakeHiLo(b2,b3);
  Jump: 068603
LocOp 068603:
  TraceOperation 068603 (Jg (Var (Local 2)) (Con 0) (Branch F (Dloc 068626)));
  if (GreaterThan(GetLocal(2),0)) {
    TraceOperation 068607 (CallN (Floc 088364) [Var (Local 1),Con 34]);
    PushFrame;
    PushReturnAddress 068607;
    SetLocal 1 GetLocal(1);
    SetLocal 2 34;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 088365
  } else {
    Jump: 068626
  }
LocReturn 068607:
  TraceOperation 068613 (Call (Floc 037168) [Var (Local 1)] (Local 1));
  PushFrame;
  PushReturnAddress 068613;
  SetLocal 1 GetLocal(1);
  MakeRoutineFrame 1;
  Jump: 037169
LocReturn 068613:
  SetLocal 1 call_result;
  TraceOperation 068619 (Sub (Var (Local 2)) (Con 1) (Local 2));
  SetLocal 2 Sub(GetLocal(2),1);
  TraceOperation 068623 (Jump 068603);
  Jump: 068603
LocOp 068626:
  TraceOperation 068626 (Call (Floc 079624) [Con 20011,Con 2] Sp);
  PushFrame;
  PushReturnAddress 068626;
  SetLocal 1 20011;
  SetLocal 2 2;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 079625
LocReturn 068626:
  PushStack call_result;
  TraceOperation 068634 (Loadw (Con 16625) (Var Sp) (Local 3));
  PopStack popped1;
  Let b2 = M[Offset(016625,Mul(2,popped1))];
  Let b3 = M[Offset(Offset(016625,Mul(2,popped1)),1)];
  SetLocal 3 MakeHiLo(b2,b3);
  Jump: 068640
LocOp 068640:
  TraceOperation 068640 (Jg (Var (Local 3)) (Con 0) (Branch F (Dloc 068679)));
  if (GreaterThan(GetLocal(3),0)) {
    TraceOperation 068644 (Store (Con 1) (Var (Global 37)));
    Let b1 = M[007280];
    Let b2 = M[007281];
    SetLocal 1 MakeHiLo(b1,b2);
    TraceOperation 068647 (Store (Con 2) (Con 0));
    SetLocal 2 0;
    Jump: 068650
  } else {
    Jump: 068679
  }
LocOp 068650:
  TraceOperation 068650 (Jl (Var (Local 2)) (Var (Local 3)) (Branch F (Dloc 068667)));
  if (LessThan(GetLocal(2),GetLocal(3))) {
    TraceOperation 068654 (Call (Floc 037168) [Var (Local 1)] (Local 1));
    PushFrame;
    PushReturnAddress 068654;
    SetLocal 1 GetLocal(1);
    MakeRoutineFrame 1;
    Jump: 037169
  } else {
    Jump: 068667
  }
LocReturn 068654:
  SetLocal 1 call_result;
  TraceOperation 068660 (Add (Var (Local 2)) (Con 1) (Local 2));
  SetLocal 2 Add(GetLocal(2),1);
  TraceOperation 068664 (Jump 068650);
  Jump: 068650
LocOp 068667:
  TraceOperation 068667 (CallN (Floc 056648) [Var (Local 1)]);
  PushFrame;
  PushReturnAddress 068667;
  SetLocal 1 GetLocal(1);
  MakeRoutineFrame 1;
  Jump: 056649
LocReturn 068667:
  TraceOperation 068672 (Sub (Var (Local 3)) (Con 1) (Local 3));
  SetLocal 3 Sub(GetLocal(3),1);
  TraceOperation 068676 (Jump 068640);
  Jump: 068640
LocOp 068679:
  TraceOperation 068679 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
LocOp 068680:
  TraceOperation 068680 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 068691)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 068684 (CallN (Floc 098228) [Con 17138,Con 1]);
    PushFrame;
    PushReturnAddress 068684;
    SetLocal 1 17138;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 068691
  }
LocReturn 068684:
  Jump: 068691
LocOp 068691:
  TraceOperation 068691 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 068692:
  MakeRoutineFrame 0;
  Jump: 068693
LocOp 068693:
  TraceOperation 068693 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 068738)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 068697 (Jz (Var (Global 114)) (Branch T (Dloc 068706)));
    Let b5 = M[007434];
    Let b6 = M[007435];
    if (IsZero(MakeHiLo(b5,b6))) {
      Jump: 068706
    } else {
      TraceOperation 068700 (CallN (Floc 098228) [Con 17173]);
      PushFrame;
      PushReturnAddress 068700;
      SetLocal 1 17173;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 068738
  }
LocReturn 068700:
  Jump: 068706
LocOp 068706:
  TraceOperation 068706 (Je [Var (Global 1),Con 8] (Branch F (Dloc 068719)));
  Let b1 = M[007208];
  Let b2 = M[007209];
  if (Equal(MakeHiLo(b1,b2),8)) {
    TraceOperation 068710 (Storew (Con 11427) (Con 7) (Con 1));
    SetByte 011441 0;
    SetByte 011442 1;
    TraceOperation 068716 (Jump 068735);
    Jump: 068735
  } else {
    Jump: 068719
  }
LocOp 068719:
  TraceOperation 068719 (Call (Floc 026172) [Var (Global 32),Con 13] Sp);
  Let b1 = M[007270];
  Let b2 = M[007271];
  PushFrame;
  PushReturnAddress 068719;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 13;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 068719:
  PushStack call_result;
  TraceOperation 068726 (Jz (Var Sp) (Branch T (Dloc 068735)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 068735
  } else {
    TraceOperation 068729 (CallN (Floc 088364) [Var (Global 32),Con 21]);
    Let b2 = M[007270];
    Let b3 = M[007271];
    PushFrame;
    PushReturnAddress 068729;
    SetLocal 1 MakeHiLo(b2,b3);
    SetLocal 2 21;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 088365
  }
LocReturn 068729:
  Jump: 068735
LocOp 068735:
  TraceOperation 068735 (Jump 068749);
  Jump: 068749
LocOp 068738:
  TraceOperation 068738 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 068749)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 068742 (CallN (Floc 098228) [Con 17173,Con 1]);
    PushFrame;
    PushReturnAddress 068742;
    SetLocal 1 17173;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 068749
  }
LocReturn 068742:
  Jump: 068749
LocOp 068749:
  TraceOperation 068749 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 068752:
  MakeRoutineFrame 0;
  Jump: 068753
LocOp 068753:
  TraceOperation 068753 (Jz (Var (Global 36)) (Branch F (Dloc 068779)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 068756 (Jz (Var (Global 114)) (Branch T (Dloc 068765)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 068765
    } else {
      TraceOperation 068759 (CallN (Floc 098228) [Con 17188]);
      PushFrame;
      PushReturnAddress 068759;
      SetLocal 1 17188;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 068779
  }
LocReturn 068759:
  Jump: 068765
LocOp 068765:
  TraceOperation 068765 (Je [Var (Global 37),Var (Global 31)] (Branch T (Dloc 068776)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    Jump: 068776
  } else {
    TraceOperation 068769 (CallN (Floc 041060) [Con 7,Con 9,Var (Global 47)]);
    Let b5 = M[007300];
    Let b6 = M[007301];
    PushFrame;
    PushReturnAddress 068769;
    SetLocal 1 7;
    SetLocal 2 9;
    SetLocal 3 MakeHiLo(b5,b6);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041061
  }
LocReturn 068769:
  Jump: 068776
LocOp 068776:
  TraceOperation 068776 (Jump 068790);
  Jump: 068790
LocOp 068779:
  TraceOperation 068779 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 068790)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 068783 (CallN (Floc 098228) [Con 17188,Con 1]);
    PushFrame;
    PushReturnAddress 068783;
    SetLocal 1 17188;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 068790
  }
LocReturn 068783:
  Jump: 068790
LocOp 068790:
  TraceOperation 068790 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 068792:
  MakeRoutineFrame 0;
  Jump: 068793
LocOp 068793:
  TraceOperation 068793 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 068838)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 068797 (Jz (Var (Global 114)) (Branch T (Dloc 068806)));
    Let b5 = M[007434];
    Let b6 = M[007435];
    if (IsZero(MakeHiLo(b5,b6))) {
      Jump: 068806
    } else {
      TraceOperation 068800 (CallN (Floc 098228) [Con 17198]);
      PushFrame;
      PushReturnAddress 068800;
      SetLocal 1 17198;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 068838
  }
LocReturn 068800:
  Jump: 068806
LocOp 068806:
  TraceOperation 068806 (Get_prop (Var (Global 47)) (Con 22) (Global 239));
  Let b1 = M[007300];
  Let b2 = M[007301];
  Let b3 = M[Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),12)];
  Let b4 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),12),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  Let loop_var6 = DeAddress(Offset(Address(MakeHiLo(b3,b4)),Add(Mul(2,Widen(b5)),1)));
  Label 7: {
    Let b8 = M[Address(loop_var6)];
    if (IsZeroByte(b8)) {
      Let b9 = M[000308];
      Let b10 = M[000309];
      SetByte 007684 b9;
      SetByte 007685 b10;
    } else {
      if (TestBit(b8,7)) {
        Let b11 = M[Offset(Address(loop_var6),1)];
        if (Equal(22,Widen(BwAnd(b8,63)))) {
          if (Equal(Widen(BwAnd(b11,63)),2)) {
            Let b12 = M[Offset(Address(loop_var6),2)];
            Let b13 = M[Offset(Offset(Address(loop_var6),2),1)];
            SetByte 007684 b12;
            SetByte 007685 b13;
          } else {
            Let b14 = M[Offset(Address(loop_var6),2)];
            SetByte 007684 HiByte(Widen(b14));
            SetByte 007685 LoByte(Widen(b14));
          }
        } else {
          Assign loop_var6 = DeAddress(Offset(Offset(Address(loop_var6),2),Widen(BwAnd(b11,63))));
          Goto: Label 7
        }
      } else {
        if (TestBit(b8,6)) {
          if (Equal(22,Widen(BwAnd(b8,63)))) {
            Let b15 = M[Offset(Address(loop_var6),1)];
            Let b16 = M[Offset(Offset(Address(loop_var6),1),1)];
            SetByte 007684 b15;
            SetByte 007685 b16;
          } else {
            Assign loop_var6 = DeAddress(Offset(Offset(Address(loop_var6),1),2));
            Goto: Label 7
          }
        } else {
          if (Equal(22,Widen(BwAnd(b8,63)))) {
            Let b17 = M[Offset(Address(loop_var6),1)];
            SetByte 007684 HiByte(Widen(b17));
            SetByte 007685 LoByte(Widen(b17));
          } else {
            Assign loop_var6 = DeAddress(Offset(Offset(Address(loop_var6),1),1));
            Goto: Label 7
          }
        }
      }
    }
  }
  TraceOperation 068810 (Push (Var (Global 239)));
  Let b18 = M[007684];
  Let b19 = M[007685];
  PushStack MakeHiLo(b18,b19);
  TraceOperation 068813 (Jz (Var Sp) (Branch F (Dloc 068835)));
  PopStack popped20;
  if (IsZero(popped20)) {
    TraceOperation 068816 (Call (Floc 026172) [Var (Global 47),Con 17] Sp);
    Let b21 = M[007300];
    Let b22 = M[007301];
    PushFrame;
    PushReturnAddress 068816;
    SetLocal 1 MakeHiLo(b21,b22);
    SetLocal 2 17;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 068835
  }
LocReturn 068816:
  PushStack call_result;
  TraceOperation 068823 (Jz (Var Sp) (Branch T (Dloc 068835)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 068835
  } else {
    TraceOperation 068826 (Call (Floc 076480) [Con 52,Var (Global 47),Con 0] Sp);
    Let b2 = M[007300];
    Let b3 = M[007301];
    PushFrame;
    PushReturnAddress 068826;
    SetLocal 1 52;
    SetLocal 2 MakeHiLo(b2,b3);
    SetLocal 3 0;
    MakeRoutineFrame 3;
    Jump: 076481
  }
LocReturn 068826:
  PushStack call_result;
  TraceOperation 068834 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 068835:
  TraceOperation 068835 (Jump 068849);
  Jump: 068849
LocOp 068838:
  TraceOperation 068838 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 068849)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 068842 (CallN (Floc 098228) [Con 17198,Con 1]);
    PushFrame;
    PushReturnAddress 068842;
    SetLocal 1 17198;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 068849
  }
LocReturn 068842:
  Jump: 068849
LocOp 068849:
  TraceOperation 068849 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 068852:
  MakeRoutineFrame 0;
  Jump: 068853
LocOp 068853:
  TraceOperation 068853 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 068898)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 068857 (Jz (Var (Global 114)) (Branch T (Dloc 068866)));
    Let b5 = M[007434];
    Let b6 = M[007435];
    if (IsZero(MakeHiLo(b5,b6))) {
      Jump: 068866
    } else {
      TraceOperation 068860 (CallN (Floc 098228) [Con 17213]);
      PushFrame;
      PushReturnAddress 068860;
      SetLocal 1 17213;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 068898
  }
LocReturn 068860:
  Jump: 068866
LocOp 068866:
  TraceOperation 068866 (Get_prop (Var (Global 47)) (Con 22) (Global 239));
  Let b1 = M[007300];
  Let b2 = M[007301];
  Let b3 = M[Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),12)];
  Let b4 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),12),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  Let loop_var6 = DeAddress(Offset(Address(MakeHiLo(b3,b4)),Add(Mul(2,Widen(b5)),1)));
  Label 7: {
    Let b8 = M[Address(loop_var6)];
    if (IsZeroByte(b8)) {
      Let b9 = M[000308];
      Let b10 = M[000309];
      SetByte 007684 b9;
      SetByte 007685 b10;
    } else {
      if (TestBit(b8,7)) {
        Let b11 = M[Offset(Address(loop_var6),1)];
        if (Equal(22,Widen(BwAnd(b8,63)))) {
          if (Equal(Widen(BwAnd(b11,63)),2)) {
            Let b12 = M[Offset(Address(loop_var6),2)];
            Let b13 = M[Offset(Offset(Address(loop_var6),2),1)];
            SetByte 007684 b12;
            SetByte 007685 b13;
          } else {
            Let b14 = M[Offset(Address(loop_var6),2)];
            SetByte 007684 HiByte(Widen(b14));
            SetByte 007685 LoByte(Widen(b14));
          }
        } else {
          Assign loop_var6 = DeAddress(Offset(Offset(Address(loop_var6),2),Widen(BwAnd(b11,63))));
          Goto: Label 7
        }
      } else {
        if (TestBit(b8,6)) {
          if (Equal(22,Widen(BwAnd(b8,63)))) {
            Let b15 = M[Offset(Address(loop_var6),1)];
            Let b16 = M[Offset(Offset(Address(loop_var6),1),1)];
            SetByte 007684 b15;
            SetByte 007685 b16;
          } else {
            Assign loop_var6 = DeAddress(Offset(Offset(Address(loop_var6),1),2));
            Goto: Label 7
          }
        } else {
          if (Equal(22,Widen(BwAnd(b8,63)))) {
            Let b17 = M[Offset(Address(loop_var6),1)];
            SetByte 007684 HiByte(Widen(b17));
            SetByte 007685 LoByte(Widen(b17));
          } else {
            Assign loop_var6 = DeAddress(Offset(Offset(Address(loop_var6),1),1));
            Goto: Label 7
          }
        }
      }
    }
  }
  TraceOperation 068870 (Push (Var (Global 239)));
  Let b18 = M[007684];
  Let b19 = M[007685];
  PushStack MakeHiLo(b18,b19);
  TraceOperation 068873 (Jz (Var Sp) (Branch F (Dloc 068895)));
  PopStack popped20;
  if (IsZero(popped20)) {
    TraceOperation 068876 (Call (Floc 026172) [Var (Global 47),Con 25] Sp);
    Let b21 = M[007300];
    Let b22 = M[007301];
    PushFrame;
    PushReturnAddress 068876;
    SetLocal 1 MakeHiLo(b21,b22);
    SetLocal 2 25;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 068895
  }
LocReturn 068876:
  PushStack call_result;
  TraceOperation 068883 (Jz (Var Sp) (Branch T (Dloc 068895)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 068895
  } else {
    TraceOperation 068886 (Call (Floc 041040) [Con 22,Con 3,Var (Global 47)] Sp);
    Let b2 = M[007300];
    Let b3 = M[007301];
    PushFrame;
    PushReturnAddress 068886;
    SetLocal 1 22;
    SetLocal 2 3;
    SetLocal 3 MakeHiLo(b2,b3);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  }
LocReturn 068886:
  PushStack call_result;
  TraceOperation 068894 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 068895:
  TraceOperation 068895 (Jump 068909);
  Jump: 068909
LocOp 068898:
  TraceOperation 068898 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 068909)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 068902 (CallN (Floc 098228) [Con 17213,Con 1]);
    PushFrame;
    PushReturnAddress 068902;
    SetLocal 1 17213;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 068909
  }
LocReturn 068902:
  Jump: 068909
LocOp 068909:
  TraceOperation 068909 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 068912:
  MakeRoutineFrame 0;
  Jump: 068913
LocOp 068913:
  TraceOperation 068913 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 068948)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 068917 (Jz (Var (Global 114)) (Branch T (Dloc 068926)));
    Let b5 = M[007434];
    Let b6 = M[007435];
    if (IsZero(MakeHiLo(b5,b6))) {
      Jump: 068926
    } else {
      TraceOperation 068920 (CallN (Floc 098228) [Con 17228]);
      PushFrame;
      PushReturnAddress 068920;
      SetLocal 1 17228;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 068948
  }
LocReturn 068920:
  Jump: 068926
LocOp 068926:
  TraceOperation 068926 (Get_prop (Var (Global 47)) (Con 22) (Global 239));
  Let b1 = M[007300];
  Let b2 = M[007301];
  Let b3 = M[Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),12)];
  Let b4 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),12),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  Let loop_var6 = DeAddress(Offset(Address(MakeHiLo(b3,b4)),Add(Mul(2,Widen(b5)),1)));
  Label 7: {
    Let b8 = M[Address(loop_var6)];
    if (IsZeroByte(b8)) {
      Let b9 = M[000308];
      Let b10 = M[000309];
      SetByte 007684 b9;
      SetByte 007685 b10;
    } else {
      if (TestBit(b8,7)) {
        Let b11 = M[Offset(Address(loop_var6),1)];
        if (Equal(22,Widen(BwAnd(b8,63)))) {
          if (Equal(Widen(BwAnd(b11,63)),2)) {
            Let b12 = M[Offset(Address(loop_var6),2)];
            Let b13 = M[Offset(Offset(Address(loop_var6),2),1)];
            SetByte 007684 b12;
            SetByte 007685 b13;
          } else {
            Let b14 = M[Offset(Address(loop_var6),2)];
            SetByte 007684 HiByte(Widen(b14));
            SetByte 007685 LoByte(Widen(b14));
          }
        } else {
          Assign loop_var6 = DeAddress(Offset(Offset(Address(loop_var6),2),Widen(BwAnd(b11,63))));
          Goto: Label 7
        }
      } else {
        if (TestBit(b8,6)) {
          if (Equal(22,Widen(BwAnd(b8,63)))) {
            Let b15 = M[Offset(Address(loop_var6),1)];
            Let b16 = M[Offset(Offset(Address(loop_var6),1),1)];
            SetByte 007684 b15;
            SetByte 007685 b16;
          } else {
            Assign loop_var6 = DeAddress(Offset(Offset(Address(loop_var6),1),2));
            Goto: Label 7
          }
        } else {
          if (Equal(22,Widen(BwAnd(b8,63)))) {
            Let b17 = M[Offset(Address(loop_var6),1)];
            SetByte 007684 HiByte(Widen(b17));
            SetByte 007685 LoByte(Widen(b17));
          } else {
            Assign loop_var6 = DeAddress(Offset(Offset(Address(loop_var6),1),1));
            Goto: Label 7
          }
        }
      }
    }
  }
  TraceOperation 068930 (Push (Var (Global 239)));
  Let b18 = M[007684];
  Let b19 = M[007685];
  PushStack MakeHiLo(b18,b19);
  TraceOperation 068933 (Jz (Var Sp) (Branch F (Dloc 068945)));
  PopStack popped20;
  if (IsZero(popped20)) {
    TraceOperation 068936 (Call (Floc 041040) [Con 22,Con 2,Var (Global 47)] Sp);
    Let b21 = M[007300];
    Let b22 = M[007301];
    PushFrame;
    PushReturnAddress 068936;
    SetLocal 1 22;
    SetLocal 2 2;
    SetLocal 3 MakeHiLo(b21,b22);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  } else {
    Jump: 068945
  }
LocReturn 068936:
  PushStack call_result;
  TraceOperation 068944 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 068945:
  TraceOperation 068945 (Jump 068959);
  Jump: 068959
LocOp 068948:
  TraceOperation 068948 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 068959)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 068952 (CallN (Floc 098228) [Con 17228,Con 1]);
    PushFrame;
    PushReturnAddress 068952;
    SetLocal 1 17228;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 068959
  }
LocReturn 068952:
  Jump: 068959
LocOp 068959:
  TraceOperation 068959 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 068960:
  MakeRoutineFrame 0;
  Jump: 068961
LocOp 068961:
  TraceOperation 068961 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 068996)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 068965 (Jz (Var (Global 114)) (Branch T (Dloc 068974)));
    Let b5 = M[007434];
    Let b6 = M[007435];
    if (IsZero(MakeHiLo(b5,b6))) {
      Jump: 068974
    } else {
      TraceOperation 068968 (CallN (Floc 098228) [Con 17240]);
      PushFrame;
      PushReturnAddress 068968;
      SetLocal 1 17240;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 068996
  }
LocReturn 068968:
  Jump: 068974
LocOp 068974:
  TraceOperation 068974 (Call (Floc 026172) [Var (Global 47),Con 15] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 068974;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 15;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 068974:
  PushStack call_result;
  TraceOperation 068981 (Jz (Var Sp) (Branch T (Dloc 068993)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 068993
  } else {
    TraceOperation 068984 (Call (Floc 041040) [Con 22,Con 5,Var (Global 47)] Sp);
    Let b2 = M[007300];
    Let b3 = M[007301];
    PushFrame;
    PushReturnAddress 068984;
    SetLocal 1 22;
    SetLocal 2 5;
    SetLocal 3 MakeHiLo(b2,b3);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  }
LocReturn 068984:
  PushStack call_result;
  TraceOperation 068992 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 068993:
  TraceOperation 068993 (Jump 069007);
  Jump: 069007
LocOp 068996:
  TraceOperation 068996 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 069007)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 069000 (CallN (Floc 098228) [Con 17240,Con 1]);
    PushFrame;
    PushReturnAddress 069000;
    SetLocal 1 17240;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 069007
  }
LocReturn 069000:
  Jump: 069007
LocOp 069007:
  TraceOperation 069007 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 069008:
  MakeRoutineFrame 0;
  Jump: 069009
LocOp 069009:
  TraceOperation 069009 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 069053)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 069013 (Jz (Var (Global 114)) (Branch T (Dloc 069022)));
    Let b5 = M[007434];
    Let b6 = M[007435];
    if (IsZero(MakeHiLo(b5,b6))) {
      Jump: 069022
    } else {
      TraceOperation 069016 (CallN (Floc 098228) [Con 17252]);
      PushFrame;
      PushReturnAddress 069016;
      SetLocal 1 17252;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 069053
  }
LocReturn 069016:
  Jump: 069022
LocOp 069022:
  TraceOperation 069022 (Store (Con 20) (Con 1));
  SetByte 007214 0;
  SetByte 007215 1;
  TraceOperation 069025 (Push (Var (Global 235)));
  Let b1 = M[007676];
  Let b2 = M[007677];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 069028 (Store (Con 251) (Var (Global 47)));
  Let b3 = M[007300];
  Let b4 = M[007301];
  SetByte 007676 b3;
  SetByte 007677 b4;
  TraceOperation 069031 (Push (Var (Global 235)));
  Let b5 = M[007676];
  Let b6 = M[007677];
  PushStack MakeHiLo(b5,b6);
  TraceOperation 069034 (Call (Floc 088436) [Var Sp,Con 22] Sp);
  PopStack popped7;
  PushFrame;
  PushReturnAddress 069034;
  SetLocal 1 popped7;
  SetLocal 2 22;
  MakeRoutineFrame 2;
  Jump: 088437
LocReturn 069034:
  PushStack call_result;
  TraceOperation 069041 (CallN (Floc 080952) [Var Sp]);
  PopStack popped1;
  PushFrame;
  PushReturnAddress 069041;
  SetLocal 1 popped1;
  MakeRoutineFrame 1;
  Jump: 080953
LocReturn 069041:
  TraceOperation 069046 (Pull (Con 251));
  PopStack popped1;
  SetByte 007676 HiByte(popped1);
  SetByte 007677 LoByte(popped1);
  TraceOperation 069049 New_line;
  GamePrint "\n";
  TraceOperation 069050 (Jump 069064);
  Jump: 069064
LocOp 069053:
  TraceOperation 069053 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 069064)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 069057 (CallN (Floc 098228) [Con 17252,Con 1]);
    PushFrame;
    PushReturnAddress 069057;
    SetLocal 1 17252;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 069064
  }
LocReturn 069057:
  Jump: 069064
LocOp 069064:
  TraceOperation 069064 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 069068:
  MakeRoutineFrame 0;
  Jump: 069069
LocOp 069069:
  TraceOperation 069069 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 069104)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 069073 (Jz (Var (Global 114)) (Branch T (Dloc 069082)));
    Let b5 = M[007434];
    Let b6 = M[007435];
    if (IsZero(MakeHiLo(b5,b6))) {
      Jump: 069082
    } else {
      TraceOperation 069076 (CallN (Floc 098228) [Con 17267]);
      PushFrame;
      PushReturnAddress 069076;
      SetLocal 1 17267;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 069104
  }
LocReturn 069076:
  Jump: 069082
LocOp 069082:
  TraceOperation 069082 (Call (Floc 026172) [Var (Global 47),Con 25] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 069082;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 25;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 069082:
  PushStack call_result;
  TraceOperation 069089 (Jz (Var Sp) (Branch T (Dloc 069101)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 069101
  } else {
    TraceOperation 069092 (Call (Floc 041040) [Con 22,Con 3,Var (Global 47)] Sp);
    Let b2 = M[007300];
    Let b3 = M[007301];
    PushFrame;
    PushReturnAddress 069092;
    SetLocal 1 22;
    SetLocal 2 3;
    SetLocal 3 MakeHiLo(b2,b3);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  }
LocReturn 069092:
  PushStack call_result;
  TraceOperation 069100 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 069101:
  TraceOperation 069101 (Jump 069115);
  Jump: 069115
LocOp 069104:
  TraceOperation 069104 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 069115)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 069108 (CallN (Floc 098228) [Con 17267,Con 1]);
    PushFrame;
    PushReturnAddress 069108;
    SetLocal 1 17267;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 069115
  }
LocReturn 069108:
  Jump: 069115
LocOp 069115:
  TraceOperation 069115 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 069116:
  MakeRoutineFrame 0;
  Jump: 069117
LocOp 069117:
  TraceOperation 069117 (Jz (Var (Global 36)) (Branch F (Dloc 069143)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 069120 (Jz (Var (Global 114)) (Branch T (Dloc 069129)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 069129
    } else {
      TraceOperation 069123 (CallN (Floc 098228) [Con 17279]);
      PushFrame;
      PushReturnAddress 069123;
      SetLocal 1 17279;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 069143
  }
LocReturn 069123:
  Jump: 069129
LocOp 069129:
  TraceOperation 069129 (Je [Var (Global 37),Var (Global 31)] (Branch T (Dloc 069140)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    Jump: 069140
  } else {
    TraceOperation 069133 (CallN (Floc 041060) [Con 22,Con 4,Var (Global 47)]);
    Let b5 = M[007300];
    Let b6 = M[007301];
    PushFrame;
    PushReturnAddress 069133;
    SetLocal 1 22;
    SetLocal 2 4;
    SetLocal 3 MakeHiLo(b5,b6);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041061
  }
LocReturn 069133:
  Jump: 069140
LocOp 069140:
  TraceOperation 069140 (Jump 069154);
  Jump: 069154
LocOp 069143:
  TraceOperation 069143 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 069154)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 069147 (CallN (Floc 098228) [Con 17279,Con 1]);
    PushFrame;
    PushReturnAddress 069147;
    SetLocal 1 17279;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 069154
  }
LocReturn 069147:
  Jump: 069154
LocOp 069154:
  TraceOperation 069154 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 069156:
  MakeRoutineFrame 0;
  Jump: 069157
LocOp 069157:
  TraceOperation 069157 (Jz (Var (Global 36)) (Branch F (Dloc 069178)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 069160 (Jz (Var (Global 114)) (Branch T (Dloc 069169)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 069169
    } else {
      TraceOperation 069163 (CallN (Floc 098228) [Con 17289]);
      PushFrame;
      PushReturnAddress 069163;
      SetLocal 1 17289;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 069178
  }
LocReturn 069163:
  Jump: 069169
LocOp 069169:
  TraceOperation 069169 (Call (Floc 041040) [Con 36,Con 2,Var (Global 47)] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 069169;
  SetLocal 1 36;
  SetLocal 2 2;
  SetLocal 3 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041041
LocReturn 069169:
  PushStack call_result;
  TraceOperation 069177 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 069178:
  TraceOperation 069178 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 069189)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 069182 (CallN (Floc 098228) [Con 17289,Con 1]);
    PushFrame;
    PushReturnAddress 069182;
    SetLocal 1 17289;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 069189
  }
LocReturn 069182:
  Jump: 069189
LocOp 069189:
  TraceOperation 069189 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 069192:
  MakeRoutineFrame 0;
  Jump: 069193
LocOp 069193:
  TraceOperation 069193 (Jz (Var (Global 36)) (Branch F (Dloc 069219)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 069196 (Jz (Var (Global 114)) (Branch T (Dloc 069205)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 069205
    } else {
      TraceOperation 069199 (CallN (Floc 098228) [Con 17298]);
      PushFrame;
      PushReturnAddress 069199;
      SetLocal 1 17298;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 069219
  }
LocReturn 069199:
  Jump: 069205
LocOp 069205:
  TraceOperation 069205 (Je [Var (Global 37),Var (Global 31)] (Branch T (Dloc 069216)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    Jump: 069216
  } else {
    TraceOperation 069209 (CallN (Floc 041060) [Con 36,Con 3,Var (Global 47)]);
    Let b5 = M[007300];
    Let b6 = M[007301];
    PushFrame;
    PushReturnAddress 069209;
    SetLocal 1 36;
    SetLocal 2 3;
    SetLocal 3 MakeHiLo(b5,b6);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041061
  }
LocReturn 069209:
  Jump: 069216
LocOp 069216:
  TraceOperation 069216 (Jump 069230);
  Jump: 069230
LocOp 069219:
  TraceOperation 069219 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 069230)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 069223 (CallN (Floc 098228) [Con 17298,Con 1]);
    PushFrame;
    PushReturnAddress 069223;
    SetLocal 1 17298;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 069230
  }
LocReturn 069223:
  Jump: 069230
LocOp 069230:
  TraceOperation 069230 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 069232:
  MakeRoutineFrame 0;
  Jump: 069233
LocOp 069233:
  TraceOperation 069233 (Jz (Var (Global 36)) (Branch F (Dloc 069275)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 069236 (Jz (Var (Global 114)) (Branch T (Dloc 069245)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 069245
    } else {
      TraceOperation 069239 (CallN (Floc 098228) [Con 17308]);
      PushFrame;
      PushReturnAddress 069239;
      SetLocal 1 17308;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 069275
  }
LocReturn 069239:
  Jump: 069245
LocOp 069245:
  TraceOperation 069245 (Call (Floc 109464) [Var (Global 47)] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 069245;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 109465
LocReturn 069245:
  PushStack call_result;
  TraceOperation 069251 (Jz (Var Sp) (Branch T (Dloc 069272)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 069272
  } else {
    TraceOperation 069254 (Call (Floc 109504) [Var (Global 47)] Sp);
    Let b2 = M[007300];
    Let b3 = M[007301];
    PushFrame;
    PushReturnAddress 069254;
    SetLocal 1 MakeHiLo(b2,b3);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 109505
  }
LocReturn 069254:
  PushStack call_result;
  TraceOperation 069260 (Jz (Var Sp) (Branch T (Dloc 069272)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 069272
  } else {
    TraceOperation 069263 (Call (Floc 041040) [Con 52,Con 4,Var (Global 47)] Sp);
    Let b2 = M[007300];
    Let b3 = M[007301];
    PushFrame;
    PushReturnAddress 069263;
    SetLocal 1 52;
    SetLocal 2 4;
    SetLocal 3 MakeHiLo(b2,b3);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  }
LocReturn 069263:
  PushStack call_result;
  TraceOperation 069271 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 069272:
  TraceOperation 069272 (Jump 069286);
  Jump: 069286
LocOp 069275:
  TraceOperation 069275 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 069286)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 069279 (CallN (Floc 098228) [Con 17308,Con 1]);
    PushFrame;
    PushReturnAddress 069279;
    SetLocal 1 17308;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 069286
  }
LocReturn 069279:
  Jump: 069286
LocOp 069286:
  TraceOperation 069286 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 069288:
  MakeRoutineFrame 0;
  Jump: 069289
LocOp 069289:
  TraceOperation 069289 (Jz (Var (Global 36)) (Branch F (Dloc 069343)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 069292 (Jz (Var (Global 114)) (Branch T (Dloc 069301)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 069301
    } else {
      TraceOperation 069295 (CallN (Floc 098228) [Con 17322]);
      PushFrame;
      PushReturnAddress 069295;
      SetLocal 1 17322;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 069343
  }
LocReturn 069295:
  Jump: 069301
LocOp 069301:
  TraceOperation 069301 (Call (Floc 026172) [Var (Global 47),Con 17] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 069301;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 17;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 069301:
  PushStack call_result;
  TraceOperation 069308 (Jz (Var Sp) (Branch T (Dloc 069340)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 069340
  } else {
    TraceOperation 069311 (Call (Floc 088304) [Var (Global 47),Con 13] Sp);
    Let b2 = M[007300];
    Let b3 = M[007301];
    PushFrame;
    PushReturnAddress 069311;
    SetLocal 1 MakeHiLo(b2,b3);
    SetLocal 2 13;
    MakeRoutineFrame 2;
    Jump: 088305
  }
LocReturn 069311:
  PushStack call_result;
  TraceOperation 069318 (Jz (Var Sp) (Branch F (Dloc 069340)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 069321 (Call (Floc 088304) [Var (Global 47),Con 20] Sp);
    Let b2 = M[007300];
    Let b3 = M[007301];
    PushFrame;
    PushReturnAddress 069321;
    SetLocal 1 MakeHiLo(b2,b3);
    SetLocal 2 20;
    MakeRoutineFrame 2;
    Jump: 088305
  } else {
    Jump: 069340
  }
LocReturn 069321:
  PushStack call_result;
  TraceOperation 069328 (Jz (Var Sp) (Branch F (Dloc 069340)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 069331 (Call (Floc 041040) [Con 52,Con 5,Var (Global 47)] Sp);
    Let b2 = M[007300];
    Let b3 = M[007301];
    PushFrame;
    PushReturnAddress 069331;
    SetLocal 1 52;
    SetLocal 2 5;
    SetLocal 3 MakeHiLo(b2,b3);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  } else {
    Jump: 069340
  }
LocReturn 069331:
  PushStack call_result;
  TraceOperation 069339 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 069340:
  TraceOperation 069340 (Jump 069354);
  Jump: 069354
LocOp 069343:
  TraceOperation 069343 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 069354)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 069347 (CallN (Floc 098228) [Con 17322,Con 1]);
    PushFrame;
    PushReturnAddress 069347;
    SetLocal 1 17322;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 069354
  }
LocReturn 069347:
  Jump: 069354
LocOp 069354:
  TraceOperation 069354 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 069356:
  MakeRoutineFrame 0;
  Jump: 069357
LocOp 069357:
  TraceOperation 069357 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 069409)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 069361 (Call (Floc 026172) [Var (Global 47),Con 17] Sp);
    Let b5 = M[007300];
    Let b6 = M[007301];
    PushFrame;
    PushReturnAddress 069361;
    SetLocal 1 MakeHiLo(b5,b6);
    SetLocal 2 17;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 069409
  }
LocReturn 069361:
  PushStack call_result;
  TraceOperation 069368 (Jz (Var Sp) (Branch T (Dloc 069409)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 069409
  } else {
    TraceOperation 069371 (Jz (Var (Global 114)) (Branch T (Dloc 069380)));
    Let b2 = M[007434];
    Let b3 = M[007435];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 069380
    } else {
      TraceOperation 069374 (CallN (Floc 098228) [Con 17339]);
      PushFrame;
      PushReturnAddress 069374;
      SetLocal 1 17339;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  }
LocReturn 069374:
  Jump: 069380
LocOp 069380:
  TraceOperation 069380 (Call (Floc 109544) [Var (Global 47)] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 069380;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 109545
LocReturn 069380:
  PushStack call_result;
  TraceOperation 069386 (Jz (Var Sp) (Branch T (Dloc 069399)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 069399
  } else {
    TraceOperation 069389 (CallN (Floc 041040) [Con 52,Con 7,Var (Global 47)]);
    Let b2 = M[007300];
    Let b3 = M[007301];
    PushFrame;
    PushReturnAddress 069389;
    SetLocal 1 52;
    SetLocal 2 7;
    SetLocal 3 MakeHiLo(b2,b3);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  }
LocReturn 069389:
  TraceOperation 069396 (Jump 069406);
  Jump: 069406
LocOp 069399:
  TraceOperation 069399 (CallN (Floc 041040) [Con 52,Con 6,Var (Global 47)]);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 069399;
  SetLocal 1 52;
  SetLocal 2 6;
  SetLocal 3 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041041
LocReturn 069399:
  Jump: 069406
LocOp 069406:
  TraceOperation 069406 (Jump 069420);
  Jump: 069420
LocOp 069409:
  TraceOperation 069409 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 069420)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 069413 (CallN (Floc 098228) [Con 17339,Con 1]);
    PushFrame;
    PushReturnAddress 069413;
    SetLocal 1 17339;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 069420
  }
LocReturn 069413:
  Jump: 069420
LocOp 069420:
  TraceOperation 069420 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 069424:
  MakeRoutineFrame 0;
  Jump: 069425
LocOp 069425:
  TraceOperation 069425 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 069477)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 069429 (Call (Floc 026172) [Var (Global 47),Con 18] Sp);
    Let b5 = M[007300];
    Let b6 = M[007301];
    PushFrame;
    PushReturnAddress 069429;
    SetLocal 1 MakeHiLo(b5,b6);
    SetLocal 2 18;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 069477
  }
LocReturn 069429:
  PushStack call_result;
  TraceOperation 069436 (Jz (Var Sp) (Branch T (Dloc 069477)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 069477
  } else {
    TraceOperation 069439 (Jz (Var (Global 114)) (Branch T (Dloc 069448)));
    Let b2 = M[007434];
    Let b3 = M[007435];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 069448
    } else {
      TraceOperation 069442 (CallN (Floc 098228) [Con 17356]);
      PushFrame;
      PushReturnAddress 069442;
      SetLocal 1 17356;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  }
LocReturn 069442:
  Jump: 069448
LocOp 069448:
  TraceOperation 069448 (Call (Floc 109600) [Var (Global 47)] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 069448;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 109601
LocReturn 069448:
  PushStack call_result;
  TraceOperation 069454 (Jz (Var Sp) (Branch T (Dloc 069467)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 069467
  } else {
    TraceOperation 069457 (CallN (Floc 041040) [Con 52,Con 3,Var (Global 47)]);
    Let b2 = M[007300];
    Let b3 = M[007301];
    PushFrame;
    PushReturnAddress 069457;
    SetLocal 1 52;
    SetLocal 2 3;
    SetLocal 3 MakeHiLo(b2,b3);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  }
LocReturn 069457:
  TraceOperation 069464 (Jump 069474);
  Jump: 069474
LocOp 069467:
  TraceOperation 069467 (CallN (Floc 041040) [Con 52,Con 2,Var (Global 47)]);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 069467;
  SetLocal 1 52;
  SetLocal 2 2;
  SetLocal 3 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041041
LocReturn 069467:
  Jump: 069474
LocOp 069474:
  TraceOperation 069474 (Jump 069488);
  Jump: 069488
LocOp 069477:
  TraceOperation 069477 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 069488)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 069481 (CallN (Floc 098228) [Con 17356,Con 1]);
    PushFrame;
    PushReturnAddress 069481;
    SetLocal 1 17356;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 069488
  }
LocReturn 069481:
  Jump: 069488
LocOp 069488:
  TraceOperation 069488 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 069492:
  MakeRoutineFrame 0;
  Jump: 069493
LocOp 069493:
  TraceOperation 069493 (Jz (Var (Global 36)) (Branch F (Dloc 069519)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 069496 (Jz (Var (Global 114)) (Branch T (Dloc 069505)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 069505
    } else {
      TraceOperation 069499 (CallN (Floc 098228) [Con 17373]);
      PushFrame;
      PushReturnAddress 069499;
      SetLocal 1 17373;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 069519
  }
LocReturn 069499:
  Jump: 069505
LocOp 069505:
  TraceOperation 069505 (Je [Var (Global 37),Var (Global 31)] (Branch T (Dloc 069516)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    Jump: 069516
  } else {
    TraceOperation 069509 (CallN (Floc 041060) [Con 52,Con 8,Var (Global 47)]);
    Let b5 = M[007300];
    Let b6 = M[007301];
    PushFrame;
    PushReturnAddress 069509;
    SetLocal 1 52;
    SetLocal 2 8;
    SetLocal 3 MakeHiLo(b5,b6);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041061
  }
LocReturn 069509:
  Jump: 069516
LocOp 069516:
  TraceOperation 069516 (Jump 069530);
  Jump: 069530
LocOp 069519:
  TraceOperation 069519 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 069530)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 069523 (CallN (Floc 098228) [Con 17373,Con 1]);
    PushFrame;
    PushReturnAddress 069523;
    SetLocal 1 17373;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 069530
  }
LocReturn 069523:
  Jump: 069530
LocOp 069530:
  TraceOperation 069530 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 069532:
  MakeRoutineFrame 0;
  Jump: 069533
LocOp 069533:
  TraceOperation 069533 (Jz (Var (Global 36)) (Branch F (Dloc 069579)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 069536 (Call (Floc 026172) [Var (Global 47),Con 14] Sp);
    Let b3 = M[007300];
    Let b4 = M[007301];
    PushFrame;
    PushReturnAddress 069536;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 14;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 069579
  }
LocReturn 069536:
  PushStack call_result;
  TraceOperation 069543 (Jz (Var Sp) (Branch T (Dloc 069579)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 069579
  } else {
    TraceOperation 069546 (Jz (Var (Global 114)) (Branch T (Dloc 069555)));
    Let b2 = M[007434];
    Let b3 = M[007435];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 069555
    } else {
      TraceOperation 069549 (CallN (Floc 098228) [Con 17383]);
      PushFrame;
      PushReturnAddress 069549;
      SetLocal 1 17383;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  }
LocReturn 069549:
  Jump: 069555
LocOp 069555:
  TraceOperation 069555 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 069569)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 069559 (CallN (Floc 041040) [Con 15,Con 1,Var (Global 47)]);
    Let b5 = M[007300];
    Let b6 = M[007301];
    PushFrame;
    PushReturnAddress 069559;
    SetLocal 1 15;
    SetLocal 2 1;
    SetLocal 3 MakeHiLo(b5,b6);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  } else {
    Jump: 069569
  }
LocReturn 069559:
  TraceOperation 069566 (Jump 069576);
  Jump: 069576
LocOp 069569:
  TraceOperation 069569 (CallN (Floc 041060) [Con 15,Con 2,Var (Global 47)]);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 069569;
  SetLocal 1 15;
  SetLocal 2 2;
  SetLocal 3 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041061
LocReturn 069569:
  Jump: 069576
LocOp 069576:
  TraceOperation 069576 (Jump 069590);
  Jump: 069590
LocOp 069579:
  TraceOperation 069579 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 069590)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 069583 (CallN (Floc 098228) [Con 17383,Con 1]);
    PushFrame;
    PushReturnAddress 069583;
    SetLocal 1 17383;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 069590
  }
LocReturn 069583:
  Jump: 069590
LocOp 069590:
  TraceOperation 069590 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 069592:
  MakeRoutineFrame 0;
  Jump: 069593
LocOp 069593:
  TraceOperation 069593 (Jz (Var (Global 36)) (Branch F (Dloc 069646)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 069596 (Call (Floc 026172) [Var (Global 47),Con 14] Sp);
    Let b3 = M[007300];
    Let b4 = M[007301];
    PushFrame;
    PushReturnAddress 069596;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 14;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 069646
  }
LocReturn 069596:
  PushStack call_result;
  TraceOperation 069603 (Jz (Var Sp) (Branch T (Dloc 069646)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 069646
  } else {
    TraceOperation 069606 (Jz (Var (Global 114)) (Branch T (Dloc 069615)));
    Let b2 = M[007434];
    Let b3 = M[007435];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 069615
    } else {
      TraceOperation 069609 (CallN (Floc 098228) [Con 17398]);
      PushFrame;
      PushReturnAddress 069609;
      SetLocal 1 17398;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  }
LocReturn 069609:
  Jump: 069615
LocOp 069615:
  TraceOperation 069615 (Call (Floc 088056) [Var (Global 47),Con 1,Con 9] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 069615;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  SetLocal 3 9;
  MakeRoutineFrame 9;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 088057
LocReturn 069615:
  PushStack call_result;
  TraceOperation 069623 (Jz (Var Sp) (Branch T (Dloc 069637)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 069637
  } else {
    TraceOperation 069626 (Call (Floc 088304) [Var (Global 47),Con 9] Sp);
    Let b2 = M[007300];
    Let b3 = M[007301];
    PushFrame;
    PushReturnAddress 069626;
    SetLocal 1 MakeHiLo(b2,b3);
    SetLocal 2 9;
    MakeRoutineFrame 2;
    Jump: 088305
  }
LocReturn 069626:
  PushStack call_result;
  TraceOperation 069633 (Jz (Var Sp) (Branch T (Dloc 069637)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 069637
  } else {
    TraceOperation 069636 Rfalse;
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  }
LocOp 069637:
  TraceOperation 069637 (Call (Floc 041040) [Con 35,Con 1,Var (Global 47)] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 069637;
  SetLocal 1 35;
  SetLocal 2 1;
  SetLocal 3 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041041
LocReturn 069637:
  PushStack call_result;
  TraceOperation 069645 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 069646:
  TraceOperation 069646 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 069657)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 069650 (CallN (Floc 098228) [Con 17398,Con 1]);
    PushFrame;
    PushReturnAddress 069650;
    SetLocal 1 17398;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 069657
  }
LocReturn 069650:
  Jump: 069657
LocOp 069657:
  TraceOperation 069657 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 069660:
  MakeRoutineFrame 0;
  Jump: 069661
LocOp 069661:
  TraceOperation 069661 (Jz (Var (Global 36)) (Branch F (Dloc 069705)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 069664 (Call (Floc 026172) [Var (Global 47),Con 14] Sp);
    Let b3 = M[007300];
    Let b4 = M[007301];
    PushFrame;
    PushReturnAddress 069664;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 14;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 069705
  }
LocReturn 069664:
  PushStack call_result;
  TraceOperation 069671 (Jz (Var Sp) (Branch T (Dloc 069705)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 069705
  } else {
    TraceOperation 069674 (Jz (Var (Global 114)) (Branch T (Dloc 069683)));
    Let b2 = M[007434];
    Let b3 = M[007435];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 069683
    } else {
      TraceOperation 069677 (CallN (Floc 098228) [Con 17415]);
      PushFrame;
      PushReturnAddress 069677;
      SetLocal 1 17415;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  }
LocReturn 069677:
  Jump: 069683
LocOp 069683:
  TraceOperation 069683 (Call (Floc 088304) [Var (Global 47),Con 10] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 069683;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 10;
  MakeRoutineFrame 2;
  Jump: 088305
LocReturn 069683:
  PushStack call_result;
  TraceOperation 069690 (Jz (Var Sp) (Branch T (Dloc 069702)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 069702
  } else {
    TraceOperation 069693 (Call (Floc 041040) [Con 35,Con 2,Var (Global 47)] Sp);
    Let b2 = M[007300];
    Let b3 = M[007301];
    PushFrame;
    PushReturnAddress 069693;
    SetLocal 1 35;
    SetLocal 2 2;
    SetLocal 3 MakeHiLo(b2,b3);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  }
LocReturn 069693:
  PushStack call_result;
  TraceOperation 069701 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 069702:
  TraceOperation 069702 (Jump 069716);
  Jump: 069716
LocOp 069705:
  TraceOperation 069705 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 069716)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 069709 (CallN (Floc 098228) [Con 17415,Con 1]);
    PushFrame;
    PushReturnAddress 069709;
    SetLocal 1 17415;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 069716
  }
LocReturn 069709:
  Jump: 069716
LocOp 069716:
  TraceOperation 069716 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 069720:
  MakeRoutineFrame 0;
  Jump: 069721
LocOp 069721:
  TraceOperation 069721 (Jz (Var (Global 36)) (Branch F (Dloc 069765)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 069724 (Call (Floc 026172) [Var (Global 47),Con 14] Sp);
    Let b3 = M[007300];
    Let b4 = M[007301];
    PushFrame;
    PushReturnAddress 069724;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 14;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 069765
  }
LocReturn 069724:
  PushStack call_result;
  TraceOperation 069731 (Jz (Var Sp) (Branch T (Dloc 069765)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 069765
  } else {
    TraceOperation 069734 (Jz (Var (Global 114)) (Branch T (Dloc 069743)));
    Let b2 = M[007434];
    Let b3 = M[007435];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 069743
    } else {
      TraceOperation 069737 (CallN (Floc 098228) [Con 17430]);
      PushFrame;
      PushReturnAddress 069737;
      SetLocal 1 17430;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  }
LocReturn 069737:
  Jump: 069743
LocOp 069743:
  TraceOperation 069743 (Call (Floc 088304) [Var (Global 47),Con 13] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 069743;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 13;
  MakeRoutineFrame 2;
  Jump: 088305
LocReturn 069743:
  PushStack call_result;
  TraceOperation 069750 (Jz (Var Sp) (Branch T (Dloc 069762)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 069762
  } else {
    TraceOperation 069753 (Call (Floc 041040) [Con 35,Con 3,Var (Global 47)] Sp);
    Let b2 = M[007300];
    Let b3 = M[007301];
    PushFrame;
    PushReturnAddress 069753;
    SetLocal 1 35;
    SetLocal 2 3;
    SetLocal 3 MakeHiLo(b2,b3);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  }
LocReturn 069753:
  PushStack call_result;
  TraceOperation 069761 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 069762:
  TraceOperation 069762 (Jump 069776);
  Jump: 069776
LocOp 069765:
  TraceOperation 069765 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 069776)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 069769 (CallN (Floc 098228) [Con 17430,Con 1]);
    PushFrame;
    PushReturnAddress 069769;
    SetLocal 1 17430;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 069776
  }
LocReturn 069769:
  Jump: 069776
LocOp 069776:
  TraceOperation 069776 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 069780:
  MakeRoutineFrame 0;
  Jump: 069781
LocOp 069781:
  TraceOperation 069781 (Jz (Var (Global 36)) (Branch F (Dloc 069848)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 069785 (Call (Floc 026172) [Var (Global 47),Con 14] Sp);
    Let b3 = M[007300];
    Let b4 = M[007301];
    PushFrame;
    PushReturnAddress 069785;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 14;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 069848
  }
LocReturn 069785:
  PushStack call_result;
  TraceOperation 069792 (Jz (Var Sp) (Branch T (Dloc 069848)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 069848
  } else {
    TraceOperation 069795 (Jz (Var (Global 114)) (Branch T (Dloc 069804)));
    Let b2 = M[007434];
    Let b3 = M[007435];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 069804
    } else {
      TraceOperation 069798 (CallN (Floc 098228) [Con 17445]);
      PushFrame;
      PushReturnAddress 069798;
      SetLocal 1 17445;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  }
LocReturn 069798:
  Jump: 069804
LocOp 069804:
  TraceOperation 069804 (Call (Floc 102384) [Var (Global 48)] Sp);
  Let b1 = M[007302];
  Let b2 = M[007303];
  PushFrame;
  PushReturnAddress 069804;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 1;
  Jump: 102385
LocReturn 069804:
  PushStack call_result;
  TraceOperation 069810 (Je [Var Sp,Var (Global 37)] (Branch F (Dloc 069836)));
  PopStack popped1;
  Let b2 = M[007280];
  Let b3 = M[007281];
  if (Equal(popped1,MakeHiLo(b2,b3))) {
    TraceOperation 069814 (Call (Floc 088056) [Var (Global 47),Con 0,Con 36] Sp);
    Let b4 = M[007300];
    Let b5 = M[007301];
    PushFrame;
    PushReturnAddress 069814;
    SetLocal 1 MakeHiLo(b4,b5);
    SetLocal 2 0;
    SetLocal 3 36;
    MakeRoutineFrame 9;
    SetLocal 9 0;
    SetLocal 8 0;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    Jump: 088057
  } else {
    Jump: 069836
  }
LocReturn 069814:
  PushStack call_result;
  TraceOperation 069822 (Jz (Var Sp) (Branch T (Dloc 069836)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 069836
  } else {
    TraceOperation 069825 (Call (Floc 088436) [Var (Global 47),Con 36] Sp);
    Let b2 = M[007300];
    Let b3 = M[007301];
    PushFrame;
    PushReturnAddress 069825;
    SetLocal 1 MakeHiLo(b2,b3);
    SetLocal 2 36;
    MakeRoutineFrame 2;
    Jump: 088437
  }
LocReturn 069825:
  PushStack call_result;
  TraceOperation 069832 (Je [Var Sp,Var (Global 48)] (Branch T (Dloc 069845)));
  PopStack popped1;
  Let b2 = M[007302];
  Let b3 = M[007303];
  if (Equal(popped1,MakeHiLo(b2,b3))) {
    Jump: 069845
  } else {
    Jump: 069836
  }
LocOp 069836:
  TraceOperation 069836 (Call (Floc 041040) [Con 35,Con 4,Var (Global 48)] Sp);
  Let b1 = M[007302];
  Let b2 = M[007303];
  PushFrame;
  PushReturnAddress 069836;
  SetLocal 1 35;
  SetLocal 2 4;
  SetLocal 3 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041041
LocReturn 069836:
  PushStack call_result;
  TraceOperation 069844 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 069845:
  TraceOperation 069845 (Jump 069859);
  Jump: 069859
LocOp 069848:
  TraceOperation 069848 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 069859)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 069852 (CallN (Floc 098228) [Con 17445,Con 1]);
    PushFrame;
    PushReturnAddress 069852;
    SetLocal 1 17445;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 069859
  }
LocReturn 069852:
  Jump: 069859
LocOp 069859:
  TraceOperation 069859 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 069860:
  MakeRoutineFrame 0;
  Jump: 069861
LocOp 069861:
  TraceOperation 069861 (Jz (Var (Global 36)) (Branch F (Dloc 069892)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 069864 (Call (Floc 026172) [Var (Global 47),Con 14] Sp);
    Let b3 = M[007300];
    Let b4 = M[007301];
    PushFrame;
    PushReturnAddress 069864;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 14;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 069892
  }
LocReturn 069864:
  PushStack call_result;
  TraceOperation 069871 (Jz (Var Sp) (Branch T (Dloc 069892)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 069892
  } else {
    TraceOperation 069874 (Jz (Var (Global 114)) (Branch T (Dloc 069883)));
    Let b2 = M[007434];
    Let b3 = M[007435];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 069883
    } else {
      TraceOperation 069877 (CallN (Floc 098228) [Con 17465]);
      PushFrame;
      PushReturnAddress 069877;
      SetLocal 1 17465;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  }
LocReturn 069877:
  Jump: 069883
LocOp 069883:
  TraceOperation 069883 (CallN (Floc 088364) [Var (Global 47),Con 10]);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 069883;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 10;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 088365
LocReturn 069883:
  TraceOperation 069889 (Jump 069903);
  Jump: 069903
LocOp 069892:
  TraceOperation 069892 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 069903)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 069896 (CallN (Floc 098228) [Con 17465,Con 1]);
    PushFrame;
    PushReturnAddress 069896;
    SetLocal 1 17465;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 069903
  }
LocReturn 069896:
  Jump: 069903
LocOp 069903:
  TraceOperation 069903 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 069904:
  MakeRoutineFrame 0;
  Jump: 069905
LocOp 069905:
  TraceOperation 069905 (Jz (Var (Global 36)) (Branch F (Dloc 069960)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 069908 (Call (Floc 026172) [Var (Global 47),Con 14] Sp);
    Let b3 = M[007300];
    Let b4 = M[007301];
    PushFrame;
    PushReturnAddress 069908;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 14;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 069960
  }
LocReturn 069908:
  PushStack call_result;
  TraceOperation 069915 (Jz (Var Sp) (Branch T (Dloc 069960)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 069960
  } else {
    TraceOperation 069918 (Jz (Var (Global 114)) (Branch T (Dloc 069927)));
    Let b2 = M[007434];
    Let b3 = M[007435];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 069927
    } else {
      TraceOperation 069921 (CallN (Floc 098228) [Con 17476]);
      PushFrame;
      PushReturnAddress 069921;
      SetLocal 1 17476;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  }
LocReturn 069921:
  Jump: 069927
LocOp 069927:
  TraceOperation 069927 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 069941)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 069931 (CallN (Floc 041040) [Con 35,Con 5,Var (Global 47)]);
    Let b5 = M[007300];
    Let b6 = M[007301];
    PushFrame;
    PushReturnAddress 069931;
    SetLocal 1 35;
    SetLocal 2 5;
    SetLocal 3 MakeHiLo(b5,b6);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  } else {
    Jump: 069941
  }
LocReturn 069931:
  TraceOperation 069938 (Jump 069957);
  Jump: 069957
LocOp 069941:
  TraceOperation 069941 (Call (Floc 075536) [Var (Global 37)] Sp);
  Let b1 = M[007280];
  Let b2 = M[007281];
  PushFrame;
  PushReturnAddress 069941;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 1;
  Jump: 075537
LocReturn 069941:
  PushStack call_result;
  TraceOperation 069947 (Jz (Var Sp) (Branch T (Dloc 069957)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 069957
  } else {
    TraceOperation 069950 (CallN (Floc 041060) [Con 35,Con 6,Var (Global 47)]);
    Let b2 = M[007300];
    Let b3 = M[007301];
    PushFrame;
    PushReturnAddress 069950;
    SetLocal 1 35;
    SetLocal 2 6;
    SetLocal 3 MakeHiLo(b2,b3);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041061
  }
LocReturn 069950:
  Jump: 069957
LocOp 069957:
  TraceOperation 069957 (Jump 069971);
  Jump: 069971
LocOp 069960:
  TraceOperation 069960 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 069971)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 069964 (CallN (Floc 098228) [Con 17476,Con 1]);
    PushFrame;
    PushReturnAddress 069964;
    SetLocal 1 17476;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 069971
  }
LocReturn 069964:
  Jump: 069971
LocOp 069971:
  TraceOperation 069971 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 069972:
  MakeRoutineFrame 0;
  Jump: 069973
LocOp 069973:
  TraceOperation 069973 (Jz (Var (Global 36)) (Branch F (Dloc 070026)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 069976 (Call (Floc 026172) [Var (Global 47),Con 14] Sp);
    Let b3 = M[007300];
    Let b4 = M[007301];
    PushFrame;
    PushReturnAddress 069976;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 14;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 070026
  }
LocReturn 069976:
  PushStack call_result;
  TraceOperation 069983 (Jz (Var Sp) (Branch T (Dloc 070026)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 070026
  } else {
    TraceOperation 069986 (Jz (Var (Global 114)) (Branch T (Dloc 069995)));
    Let b2 = M[007434];
    Let b3 = M[007435];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 069995
    } else {
      TraceOperation 069989 (CallN (Floc 098228) [Con 17493]);
      PushFrame;
      PushReturnAddress 069989;
      SetLocal 1 17493;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  }
LocReturn 069989:
  Jump: 069995
LocOp 069995:
  TraceOperation 069995 (Call (Floc 088056) [Var (Global 47),Con 1,Con 9] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 069995;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  SetLocal 3 9;
  MakeRoutineFrame 9;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 088057
LocReturn 069995:
  PushStack call_result;
  TraceOperation 070003 (Jz (Var Sp) (Branch T (Dloc 070017)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 070017
  } else {
    TraceOperation 070006 (Call (Floc 088304) [Var (Global 47),Con 9] Sp);
    Let b2 = M[007300];
    Let b3 = M[007301];
    PushFrame;
    PushReturnAddress 070006;
    SetLocal 1 MakeHiLo(b2,b3);
    SetLocal 2 9;
    MakeRoutineFrame 2;
    Jump: 088305
  }
LocReturn 070006:
  PushStack call_result;
  TraceOperation 070013 (Jz (Var Sp) (Branch T (Dloc 070017)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 070017
  } else {
    TraceOperation 070016 Rfalse;
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  }
LocOp 070017:
  TraceOperation 070017 (Call (Floc 041040) [Con 71,Con 1,Var (Global 47)] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 070017;
  SetLocal 1 71;
  SetLocal 2 1;
  SetLocal 3 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041041
LocReturn 070017:
  PushStack call_result;
  TraceOperation 070025 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 070026:
  TraceOperation 070026 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 070037)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 070030 (CallN (Floc 098228) [Con 17493,Con 1]);
    PushFrame;
    PushReturnAddress 070030;
    SetLocal 1 17493;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 070037
  }
LocReturn 070030:
  Jump: 070037
LocOp 070037:
  TraceOperation 070037 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 070040:
  MakeRoutineFrame 0;
  Jump: 070041
LocOp 070041:
  TraceOperation 070041 (Jz (Var (Global 36)) (Branch F (Dloc 070085)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 070044 (Call (Floc 026172) [Var (Global 47),Con 14] Sp);
    Let b3 = M[007300];
    Let b4 = M[007301];
    PushFrame;
    PushReturnAddress 070044;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 14;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 070085
  }
LocReturn 070044:
  PushStack call_result;
  TraceOperation 070051 (Jz (Var Sp) (Branch T (Dloc 070085)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 070085
  } else {
    TraceOperation 070054 (Jz (Var (Global 114)) (Branch T (Dloc 070063)));
    Let b2 = M[007434];
    Let b3 = M[007435];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 070063
    } else {
      TraceOperation 070057 (CallN (Floc 098228) [Con 17510]);
      PushFrame;
      PushReturnAddress 070057;
      SetLocal 1 17510;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  }
LocReturn 070057:
  Jump: 070063
LocOp 070063:
  TraceOperation 070063 (Call (Floc 088304) [Var (Global 47),Con 10] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 070063;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 10;
  MakeRoutineFrame 2;
  Jump: 088305
LocReturn 070063:
  PushStack call_result;
  TraceOperation 070070 (Jz (Var Sp) (Branch F (Dloc 070082)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 070073 (Call (Floc 041040) [Con 71,Con 2,Var (Global 47)] Sp);
    Let b2 = M[007300];
    Let b3 = M[007301];
    PushFrame;
    PushReturnAddress 070073;
    SetLocal 1 71;
    SetLocal 2 2;
    SetLocal 3 MakeHiLo(b2,b3);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  } else {
    Jump: 070082
  }
LocReturn 070073:
  PushStack call_result;
  TraceOperation 070081 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 070082:
  TraceOperation 070082 (Jump 070096);
  Jump: 070096
LocOp 070085:
  TraceOperation 070085 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 070096)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 070089 (CallN (Floc 098228) [Con 17510,Con 1]);
    PushFrame;
    PushReturnAddress 070089;
    SetLocal 1 17510;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 070096
  }
LocReturn 070089:
  Jump: 070096
LocOp 070096:
  TraceOperation 070096 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 070100:
  MakeRoutineFrame 0;
  Jump: 070101
LocOp 070101:
  TraceOperation 070101 (Jz (Var (Global 36)) (Branch F (Dloc 070168)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 070105 (Call (Floc 026172) [Var (Global 47),Con 14] Sp);
    Let b3 = M[007300];
    Let b4 = M[007301];
    PushFrame;
    PushReturnAddress 070105;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 14;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 070168
  }
LocReturn 070105:
  PushStack call_result;
  TraceOperation 070112 (Jz (Var Sp) (Branch T (Dloc 070168)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 070168
  } else {
    TraceOperation 070115 (Jz (Var (Global 114)) (Branch T (Dloc 070124)));
    Let b2 = M[007434];
    Let b3 = M[007435];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 070124
    } else {
      TraceOperation 070118 (CallN (Floc 098228) [Con 17525]);
      PushFrame;
      PushReturnAddress 070118;
      SetLocal 1 17525;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  }
LocReturn 070118:
  Jump: 070124
LocOp 070124:
  TraceOperation 070124 (Call (Floc 102384) [Var (Global 48)] Sp);
  Let b1 = M[007302];
  Let b2 = M[007303];
  PushFrame;
  PushReturnAddress 070124;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 1;
  Jump: 102385
LocReturn 070124:
  PushStack call_result;
  TraceOperation 070130 (Je [Var Sp,Var (Global 37)] (Branch F (Dloc 070156)));
  PopStack popped1;
  Let b2 = M[007280];
  Let b3 = M[007281];
  if (Equal(popped1,MakeHiLo(b2,b3))) {
    TraceOperation 070134 (Call (Floc 088056) [Var (Global 47),Con 0,Con 36] Sp);
    Let b4 = M[007300];
    Let b5 = M[007301];
    PushFrame;
    PushReturnAddress 070134;
    SetLocal 1 MakeHiLo(b4,b5);
    SetLocal 2 0;
    SetLocal 3 36;
    MakeRoutineFrame 9;
    SetLocal 9 0;
    SetLocal 8 0;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    Jump: 088057
  } else {
    Jump: 070156
  }
LocReturn 070134:
  PushStack call_result;
  TraceOperation 070142 (Jz (Var Sp) (Branch T (Dloc 070156)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 070156
  } else {
    TraceOperation 070145 (Call (Floc 088436) [Var (Global 47),Con 36] Sp);
    Let b2 = M[007300];
    Let b3 = M[007301];
    PushFrame;
    PushReturnAddress 070145;
    SetLocal 1 MakeHiLo(b2,b3);
    SetLocal 2 36;
    MakeRoutineFrame 2;
    Jump: 088437
  }
LocReturn 070145:
  PushStack call_result;
  TraceOperation 070152 (Je [Var Sp,Var (Global 48)] (Branch T (Dloc 070165)));
  PopStack popped1;
  Let b2 = M[007302];
  Let b3 = M[007303];
  if (Equal(popped1,MakeHiLo(b2,b3))) {
    Jump: 070165
  } else {
    Jump: 070156
  }
LocOp 070156:
  TraceOperation 070156 (Call (Floc 041040) [Con 71,Con 3,Var (Global 48)] Sp);
  Let b1 = M[007302];
  Let b2 = M[007303];
  PushFrame;
  PushReturnAddress 070156;
  SetLocal 1 71;
  SetLocal 2 3;
  SetLocal 3 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041041
LocReturn 070156:
  PushStack call_result;
  TraceOperation 070164 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 070165:
  TraceOperation 070165 (Jump 070179);
  Jump: 070179
LocOp 070168:
  TraceOperation 070168 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 070179)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 070172 (CallN (Floc 098228) [Con 17525,Con 1]);
    PushFrame;
    PushReturnAddress 070172;
    SetLocal 1 17525;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 070179
  }
LocReturn 070172:
  Jump: 070179
LocOp 070179:
  TraceOperation 070179 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 070180:
  MakeRoutineFrame 0;
  Jump: 070181
LocOp 070181:
  TraceOperation 070181 (Jz (Var (Global 36)) (Branch F (Dloc 070213)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 070184 (Call (Floc 026172) [Var (Global 47),Con 14] Sp);
    Let b3 = M[007300];
    Let b4 = M[007301];
    PushFrame;
    PushReturnAddress 070184;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 14;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 070213
  }
LocReturn 070184:
  PushStack call_result;
  TraceOperation 070191 (Jz (Var Sp) (Branch T (Dloc 070213)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 070213
  } else {
    TraceOperation 070194 (Jz (Var (Global 114)) (Branch T (Dloc 070203)));
    Let b2 = M[007434];
    Let b3 = M[007435];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 070203
    } else {
      TraceOperation 070197 (CallN (Floc 098228) [Con 17545]);
      PushFrame;
      PushReturnAddress 070197;
      SetLocal 1 17545;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  }
LocReturn 070197:
  Jump: 070203
LocOp 070203:
  TraceOperation 070203 (CallN (Floc 088364) [Var (Global 47),Con 10,Con 1]);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 070203;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 10;
  SetLocal 3 1;
  MakeRoutineFrame 3;
  Jump: 088365
LocReturn 070203:
  TraceOperation 070210 (Jump 070224);
  Jump: 070224
LocOp 070213:
  TraceOperation 070213 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 070224)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 070217 (CallN (Floc 098228) [Con 17545,Con 1]);
    PushFrame;
    PushReturnAddress 070217;
    SetLocal 1 17545;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 070224
  }
LocReturn 070217:
  Jump: 070224
LocOp 070224:
  TraceOperation 070224 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 070228:
  MakeRoutineFrame 0;
  Jump: 070229
LocOp 070229:
  TraceOperation 070229 (Jz (Var (Global 36)) (Branch F (Dloc 070284)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 070232 (Call (Floc 026172) [Var (Global 47),Con 14] Sp);
    Let b3 = M[007300];
    Let b4 = M[007301];
    PushFrame;
    PushReturnAddress 070232;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 14;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 070284
  }
LocReturn 070232:
  PushStack call_result;
  TraceOperation 070239 (Jz (Var Sp) (Branch T (Dloc 070284)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 070284
  } else {
    TraceOperation 070242 (Jz (Var (Global 114)) (Branch T (Dloc 070251)));
    Let b2 = M[007434];
    Let b3 = M[007435];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 070251
    } else {
      TraceOperation 070245 (CallN (Floc 098228) [Con 17557]);
      PushFrame;
      PushReturnAddress 070245;
      SetLocal 1 17557;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  }
LocReturn 070245:
  Jump: 070251
LocOp 070251:
  TraceOperation 070251 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 070265)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 070255 (CallN (Floc 041040) [Con 71,Con 4,Var (Global 47)]);
    Let b5 = M[007300];
    Let b6 = M[007301];
    PushFrame;
    PushReturnAddress 070255;
    SetLocal 1 71;
    SetLocal 2 4;
    SetLocal 3 MakeHiLo(b5,b6);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  } else {
    Jump: 070265
  }
LocReturn 070255:
  TraceOperation 070262 (Jump 070281);
  Jump: 070281
LocOp 070265:
  TraceOperation 070265 (Call (Floc 075536) [Var (Global 37)] Sp);
  Let b1 = M[007280];
  Let b2 = M[007281];
  PushFrame;
  PushReturnAddress 070265;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 1;
  Jump: 075537
LocReturn 070265:
  PushStack call_result;
  TraceOperation 070271 (Jz (Var Sp) (Branch T (Dloc 070281)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 070281
  } else {
    TraceOperation 070274 (CallN (Floc 041060) [Con 71,Con 5,Var (Global 47)]);
    Let b2 = M[007300];
    Let b3 = M[007301];
    PushFrame;
    PushReturnAddress 070274;
    SetLocal 1 71;
    SetLocal 2 5;
    SetLocal 3 MakeHiLo(b2,b3);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041061
  }
LocReturn 070274:
  Jump: 070281
LocOp 070281:
  TraceOperation 070281 (Jump 070295);
  Jump: 070295
LocOp 070284:
  TraceOperation 070284 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 070295)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 070288 (CallN (Floc 098228) [Con 17557,Con 1]);
    PushFrame;
    PushReturnAddress 070288;
    SetLocal 1 17557;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 070295
  }
LocReturn 070288:
  Jump: 070295
LocOp 070295:
  TraceOperation 070295 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 070296:
  MakeRoutineFrame 0;
  Jump: 070297
LocOp 070297:
  TraceOperation 070297 (Jz (Var (Global 36)) (Branch F (Dloc 070330)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 070300 (Jz (Var (Global 114)) (Branch T (Dloc 070309)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 070309
    } else {
      TraceOperation 070303 (CallN (Floc 098228) [Con 17574]);
      PushFrame;
      PushReturnAddress 070303;
      SetLocal 1 17574;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 070330
  }
LocReturn 070303:
  Jump: 070309
LocOp 070309:
  TraceOperation 070309 (Call (Floc 088056) [Var (Global 47),Con 1,Con 12] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 070309;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  SetLocal 3 12;
  MakeRoutineFrame 9;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 088057
LocReturn 070309:
  PushStack call_result;
  TraceOperation 070317 (Jz (Var Sp) (Branch T (Dloc 070321)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 070321
  } else {
    TraceOperation 070320 Rfalse;
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  }
LocOp 070321:
  TraceOperation 070321 (Call (Floc 041040) [Con 63,Con 1,Var (Global 47)] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 070321;
  SetLocal 1 63;
  SetLocal 2 1;
  SetLocal 3 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041041
LocReturn 070321:
  PushStack call_result;
  TraceOperation 070329 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 070330:
  TraceOperation 070330 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 070341)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 070334 (CallN (Floc 098228) [Con 17574,Con 1]);
    PushFrame;
    PushReturnAddress 070334;
    SetLocal 1 17574;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 070341
  }
LocReturn 070334:
  Jump: 070341
LocOp 070341:
  TraceOperation 070341 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 070344:
  MakeRoutineFrame 0;
  Jump: 070345
LocOp 070345:
  TraceOperation 070345 (Jz (Var (Global 36)) (Branch F (Dloc 070379)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 070348 (Jz (Var (Global 114)) (Branch T (Dloc 070357)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 070357
    } else {
      TraceOperation 070351 (CallN (Floc 098228) [Con 17586]);
      PushFrame;
      PushReturnAddress 070351;
      SetLocal 1 17586;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 070379
  }
LocReturn 070351:
  Jump: 070357
LocOp 070357:
  TraceOperation 070357 (Call (Floc 088304) [Var (Global 47),Con 12] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 070357;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 12;
  MakeRoutineFrame 2;
  Jump: 088305
LocReturn 070357:
  PushStack call_result;
  TraceOperation 070364 (Jz (Var Sp) (Branch T (Dloc 070376)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 070376
  } else {
    TraceOperation 070367 (Call (Floc 041040) [Con 63,Con 2,Var (Global 47)] Sp);
    Let b2 = M[007300];
    Let b3 = M[007301];
    PushFrame;
    PushReturnAddress 070367;
    SetLocal 1 63;
    SetLocal 2 2;
    SetLocal 3 MakeHiLo(b2,b3);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  }
LocReturn 070367:
  PushStack call_result;
  TraceOperation 070375 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 070376:
  TraceOperation 070376 (Jump 070390);
  Jump: 070390
LocOp 070379:
  TraceOperation 070379 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 070390)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 070383 (CallN (Floc 098228) [Con 17586,Con 1]);
    PushFrame;
    PushReturnAddress 070383;
    SetLocal 1 17586;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 070390
  }
LocReturn 070383:
  Jump: 070390
LocOp 070390:
  TraceOperation 070390 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 070392:
  MakeRoutineFrame 0;
  Jump: 070393
LocOp 070393:
  TraceOperation 070393 (Jz (Var (Global 36)) (Branch F (Dloc 070414)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 070396 (Jz (Var (Global 114)) (Branch T (Dloc 070405)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 070405
    } else {
      TraceOperation 070399 (CallN (Floc 098228) [Con 17598]);
      PushFrame;
      PushReturnAddress 070399;
      SetLocal 1 17598;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 070414
  }
LocReturn 070399:
  Jump: 070405
LocOp 070405:
  TraceOperation 070405 (CallN (Floc 088364) [Var (Global 47),Con 12]);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 070405;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 12;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 088365
LocReturn 070405:
  TraceOperation 070411 (Jump 070425);
  Jump: 070425
LocOp 070414:
  TraceOperation 070414 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 070425)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 070418 (CallN (Floc 098228) [Con 17598,Con 1]);
    PushFrame;
    PushReturnAddress 070418;
    SetLocal 1 17598;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 070425
  }
LocReturn 070418:
  Jump: 070425
LocOp 070425:
  TraceOperation 070425 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 070428:
  MakeRoutineFrame 0;
  Jump: 070429
LocOp 070429:
  TraceOperation 070429 (Jz (Var (Global 36)) (Branch F (Dloc 070465)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 070432 (Jz (Var (Global 114)) (Branch T (Dloc 070441)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 070441
    } else {
      TraceOperation 070435 (CallN (Floc 098228) [Con 17607]);
      PushFrame;
      PushReturnAddress 070435;
      SetLocal 1 17607;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 070465
  }
LocReturn 070435:
  Jump: 070441
LocOp 070441:
  TraceOperation 070441 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 070455)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 070445 (CallN (Floc 041040) [Con 63,Con 3,Var (Global 47)]);
    Let b5 = M[007300];
    Let b6 = M[007301];
    PushFrame;
    PushReturnAddress 070445;
    SetLocal 1 63;
    SetLocal 2 3;
    SetLocal 3 MakeHiLo(b5,b6);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  } else {
    Jump: 070455
  }
LocReturn 070445:
  TraceOperation 070452 (Jump 070462);
  Jump: 070462
LocOp 070455:
  TraceOperation 070455 (CallN (Floc 041060) [Con 63,Con 4,Var (Global 47)]);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 070455;
  SetLocal 1 63;
  SetLocal 2 4;
  SetLocal 3 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041061
LocReturn 070455:
  Jump: 070462
LocOp 070462:
  TraceOperation 070462 (Jump 070476);
  Jump: 070476
LocOp 070465:
  TraceOperation 070465 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 070476)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 070469 (CallN (Floc 098228) [Con 17607,Con 1]);
    PushFrame;
    PushReturnAddress 070469;
    SetLocal 1 17607;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 070476
  }
LocReturn 070469:
  Jump: 070476
LocOp 070476:
  TraceOperation 070476 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 070480:
  MakeRoutineFrame 0;
  Jump: 070481
LocOp 070481:
  TraceOperation 070481 (Jz (Var (Global 36)) (Branch F (Dloc 070514)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 070484 (Jz (Var (Global 114)) (Branch T (Dloc 070493)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 070493
    } else {
      TraceOperation 070487 (CallN (Floc 098228) [Con 17620]);
      PushFrame;
      PushReturnAddress 070487;
      SetLocal 1 17620;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 070514
  }
LocReturn 070487:
  Jump: 070493
LocOp 070493:
  TraceOperation 070493 (Call (Floc 088056) [Var (Global 47),Con 1,Con 12] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 070493;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  SetLocal 3 12;
  MakeRoutineFrame 9;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 088057
LocReturn 070493:
  PushStack call_result;
  TraceOperation 070501 (Jz (Var Sp) (Branch T (Dloc 070505)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 070505
  } else {
    TraceOperation 070504 Rfalse;
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  }
LocOp 070505:
  TraceOperation 070505 (Call (Floc 041040) [Con 62,Con 1,Var (Global 47)] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 070505;
  SetLocal 1 62;
  SetLocal 2 1;
  SetLocal 3 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041041
LocReturn 070505:
  PushStack call_result;
  TraceOperation 070513 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 070514:
  TraceOperation 070514 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 070525)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 070518 (CallN (Floc 098228) [Con 17620,Con 1]);
    PushFrame;
    PushReturnAddress 070518;
    SetLocal 1 17620;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 070525
  }
LocReturn 070518:
  Jump: 070525
LocOp 070525:
  TraceOperation 070525 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 070528:
  MakeRoutineFrame 0;
  Jump: 070529
LocOp 070529:
  TraceOperation 070529 (Jz (Var (Global 36)) (Branch F (Dloc 070563)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 070532 (Jz (Var (Global 114)) (Branch T (Dloc 070541)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 070541
    } else {
      TraceOperation 070535 (CallN (Floc 098228) [Con 17632]);
      PushFrame;
      PushReturnAddress 070535;
      SetLocal 1 17632;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 070563
  }
LocReturn 070535:
  Jump: 070541
LocOp 070541:
  TraceOperation 070541 (Call (Floc 088304) [Var (Global 47),Con 12] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 070541;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 12;
  MakeRoutineFrame 2;
  Jump: 088305
LocReturn 070541:
  PushStack call_result;
  TraceOperation 070548 (Jz (Var Sp) (Branch F (Dloc 070560)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 070551 (Call (Floc 041040) [Con 62,Con 2,Var (Global 47)] Sp);
    Let b2 = M[007300];
    Let b3 = M[007301];
    PushFrame;
    PushReturnAddress 070551;
    SetLocal 1 62;
    SetLocal 2 2;
    SetLocal 3 MakeHiLo(b2,b3);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  } else {
    Jump: 070560
  }
LocReturn 070551:
  PushStack call_result;
  TraceOperation 070559 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 070560:
  TraceOperation 070560 (Jump 070574);
  Jump: 070574
LocOp 070563:
  TraceOperation 070563 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 070574)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 070567 (CallN (Floc 098228) [Con 17632,Con 1]);
    PushFrame;
    PushReturnAddress 070567;
    SetLocal 1 17632;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 070574
  }
LocReturn 070567:
  Jump: 070574
LocOp 070574:
  TraceOperation 070574 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 070576:
  MakeRoutineFrame 0;
  Jump: 070577
LocOp 070577:
  TraceOperation 070577 (Jz (Var (Global 36)) (Branch F (Dloc 070599)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 070580 (Jz (Var (Global 114)) (Branch T (Dloc 070589)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 070589
    } else {
      TraceOperation 070583 (CallN (Floc 098228) [Con 17644]);
      PushFrame;
      PushReturnAddress 070583;
      SetLocal 1 17644;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 070599
  }
LocReturn 070583:
  Jump: 070589
LocOp 070589:
  TraceOperation 070589 (CallN (Floc 088364) [Var (Global 47),Con 12,Con 1]);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 070589;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 12;
  SetLocal 3 1;
  MakeRoutineFrame 3;
  Jump: 088365
LocReturn 070589:
  TraceOperation 070596 (Jump 070610);
  Jump: 070610
LocOp 070599:
  TraceOperation 070599 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 070610)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 070603 (CallN (Floc 098228) [Con 17644,Con 1]);
    PushFrame;
    PushReturnAddress 070603;
    SetLocal 1 17644;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 070610
  }
LocReturn 070603:
  Jump: 070610
LocOp 070610:
  TraceOperation 070610 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 070612:
  MakeRoutineFrame 0;
  Jump: 070613
LocOp 070613:
  TraceOperation 070613 (Jz (Var (Global 36)) (Branch F (Dloc 070649)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 070616 (Jz (Var (Global 114)) (Branch T (Dloc 070625)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 070625
    } else {
      TraceOperation 070619 (CallN (Floc 098228) [Con 17653]);
      PushFrame;
      PushReturnAddress 070619;
      SetLocal 1 17653;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 070649
  }
LocReturn 070619:
  Jump: 070625
LocOp 070625:
  TraceOperation 070625 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 070639)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 070629 (CallN (Floc 041040) [Con 62,Con 3,Var (Global 47)]);
    Let b5 = M[007300];
    Let b6 = M[007301];
    PushFrame;
    PushReturnAddress 070629;
    SetLocal 1 62;
    SetLocal 2 3;
    SetLocal 3 MakeHiLo(b5,b6);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  } else {
    Jump: 070639
  }
LocReturn 070629:
  TraceOperation 070636 (Jump 070646);
  Jump: 070646
LocOp 070639:
  TraceOperation 070639 (CallN (Floc 041060) [Con 62,Con 4,Var (Global 47)]);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 070639;
  SetLocal 1 62;
  SetLocal 2 4;
  SetLocal 3 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041061
LocReturn 070639:
  Jump: 070646
LocOp 070646:
  TraceOperation 070646 (Jump 070660);
  Jump: 070660
LocOp 070649:
  TraceOperation 070649 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 070660)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 070653 (CallN (Floc 098228) [Con 17653,Con 1]);
    PushFrame;
    PushReturnAddress 070653;
    SetLocal 1 17653;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 070660
  }
LocReturn 070653:
  Jump: 070660
LocOp 070660:
  TraceOperation 070660 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 070664:
  MakeRoutineFrame 0;
  Jump: 070665
LocOp 070665:
  TraceOperation 070665 (Jz (Var (Global 36)) (Branch F (Dloc 070708)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 070668 (Jz (Var (Global 114)) (Branch T (Dloc 070677)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 070677
    } else {
      TraceOperation 070671 (CallN (Floc 098228) [Con 17666]);
      PushFrame;
      PushReturnAddress 070671;
      SetLocal 1 17666;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 070708
  }
LocReturn 070671:
  Jump: 070677
LocOp 070677:
  TraceOperation 070677 (Call (Floc 088056) [Var (Global 47),Con 1,Con 14] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 070677;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  SetLocal 3 14;
  MakeRoutineFrame 9;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 088057
LocReturn 070677:
  PushStack call_result;
  TraceOperation 070685 (Jz (Var Sp) (Branch T (Dloc 070699)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 070699
  } else {
    TraceOperation 070688 (Call (Floc 088304) [Var (Global 47),Con 14] Sp);
    Let b2 = M[007300];
    Let b3 = M[007301];
    PushFrame;
    PushReturnAddress 070688;
    SetLocal 1 MakeHiLo(b2,b3);
    SetLocal 2 14;
    MakeRoutineFrame 2;
    Jump: 088305
  }
LocReturn 070688:
  PushStack call_result;
  TraceOperation 070695 (Jz (Var Sp) (Branch T (Dloc 070699)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 070699
  } else {
    TraceOperation 070698 Rfalse;
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  }
LocOp 070699:
  TraceOperation 070699 (Call (Floc 041040) [Con 42,Con 1,Var (Global 47)] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 070699;
  SetLocal 1 42;
  SetLocal 2 1;
  SetLocal 3 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041041
LocReturn 070699:
  PushStack call_result;
  TraceOperation 070707 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 070708:
  TraceOperation 070708 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 070719)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 070712 (CallN (Floc 098228) [Con 17666,Con 1]);
    PushFrame;
    PushReturnAddress 070712;
    SetLocal 1 17666;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 070719
  }
LocReturn 070712:
  Jump: 070719
LocOp 070719:
  TraceOperation 070719 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 070720:
  MakeRoutineFrame 0;
  Jump: 070721
LocOp 070721:
  TraceOperation 070721 (Jz (Var (Global 36)) (Branch F (Dloc 070766)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 070724 (Jz (Var (Global 114)) (Branch T (Dloc 070733)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 070733
    } else {
      TraceOperation 070727 (CallN (Floc 098228) [Con 17680]);
      PushFrame;
      PushReturnAddress 070727;
      SetLocal 1 17680;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 070766
  }
LocReturn 070727:
  Jump: 070733
LocOp 070733:
  TraceOperation 070733 (Call (Floc 088056) [Var (Global 47),Con 1,Con 9] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 070733;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  SetLocal 3 9;
  MakeRoutineFrame 9;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 088057
LocReturn 070733:
  PushStack call_result;
  TraceOperation 070741 (Jz (Var Sp) (Branch T (Dloc 070763)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 070763
  } else {
    TraceOperation 070744 (Call (Floc 088304) [Var (Global 47),Con 10] Sp);
    Let b2 = M[007300];
    Let b3 = M[007301];
    PushFrame;
    PushReturnAddress 070744;
    SetLocal 1 MakeHiLo(b2,b3);
    SetLocal 2 10;
    MakeRoutineFrame 2;
    Jump: 088305
  }
LocReturn 070744:
  PushStack call_result;
  TraceOperation 070751 (Jz (Var Sp) (Branch T (Dloc 070763)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 070763
  } else {
    TraceOperation 070754 (Call (Floc 041040) [Con 42,Con 2,Var (Global 47)] Sp);
    Let b2 = M[007300];
    Let b3 = M[007301];
    PushFrame;
    PushReturnAddress 070754;
    SetLocal 1 42;
    SetLocal 2 2;
    SetLocal 3 MakeHiLo(b2,b3);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  }
LocReturn 070754:
  PushStack call_result;
  TraceOperation 070762 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 070763:
  TraceOperation 070763 (Jump 070777);
  Jump: 070777
LocOp 070766:
  TraceOperation 070766 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 070777)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 070770 (CallN (Floc 098228) [Con 17680,Con 1]);
    PushFrame;
    PushReturnAddress 070770;
    SetLocal 1 17680;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 070777
  }
LocReturn 070770:
  Jump: 070777
LocOp 070777:
  TraceOperation 070777 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 070780:
  MakeRoutineFrame 0;
  Jump: 070781
LocOp 070781:
  TraceOperation 070781 (Jz (Var (Global 36)) (Branch F (Dloc 070815)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 070784 (Jz (Var (Global 114)) (Branch T (Dloc 070793)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 070793
    } else {
      TraceOperation 070787 (CallN (Floc 098228) [Con 17695]);
      PushFrame;
      PushReturnAddress 070787;
      SetLocal 1 17695;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 070815
  }
LocReturn 070787:
  Jump: 070793
LocOp 070793:
  TraceOperation 070793 (Call (Floc 088304) [Var (Global 47),Con 13] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 070793;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 13;
  MakeRoutineFrame 2;
  Jump: 088305
LocReturn 070793:
  PushStack call_result;
  TraceOperation 070800 (Jz (Var Sp) (Branch T (Dloc 070812)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 070812
  } else {
    TraceOperation 070803 (Call (Floc 041040) [Con 42,Con 3,Var (Global 47)] Sp);
    Let b2 = M[007300];
    Let b3 = M[007301];
    PushFrame;
    PushReturnAddress 070803;
    SetLocal 1 42;
    SetLocal 2 3;
    SetLocal 3 MakeHiLo(b2,b3);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  }
LocReturn 070803:
  PushStack call_result;
  TraceOperation 070811 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 070812:
  TraceOperation 070812 (Jump 070826);
  Jump: 070826
LocOp 070815:
  TraceOperation 070815 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 070826)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 070819 (CallN (Floc 098228) [Con 17695,Con 1]);
    PushFrame;
    PushReturnAddress 070819;
    SetLocal 1 17695;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 070826
  }
LocReturn 070819:
  Jump: 070826
LocOp 070826:
  TraceOperation 070826 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 070828:
  MakeRoutineFrame 0;
  Jump: 070829
LocOp 070829:
  TraceOperation 070829 (Jz (Var (Global 36)) (Branch F (Dloc 070850)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 070832 (Jz (Var (Global 114)) (Branch T (Dloc 070841)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 070841
    } else {
      TraceOperation 070835 (CallN (Floc 098228) [Con 17707]);
      PushFrame;
      PushReturnAddress 070835;
      SetLocal 1 17707;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 070850
  }
LocReturn 070835:
  Jump: 070841
LocOp 070841:
  TraceOperation 070841 (CallN (Floc 088364) [Var (Global 47),Con 13]);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 070841;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 13;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 088365
LocReturn 070841:
  TraceOperation 070847 (Jump 070861);
  Jump: 070861
LocOp 070850:
  TraceOperation 070850 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 070861)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 070854 (CallN (Floc 098228) [Con 17707,Con 1]);
    PushFrame;
    PushReturnAddress 070854;
    SetLocal 1 17707;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 070861
  }
LocReturn 070854:
  Jump: 070861
LocOp 070861:
  TraceOperation 070861 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 070864:
  MakeRoutineFrame 0;
  Jump: 070865
LocOp 070865:
  TraceOperation 070865 (Jz (Var (Global 36)) (Branch F (Dloc 070931)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 070869 (Jz (Var (Global 114)) (Branch T (Dloc 070878)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 070878
    } else {
      TraceOperation 070872 (CallN (Floc 098228) [Con 17716]);
      PushFrame;
      PushReturnAddress 070872;
      SetLocal 1 17716;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 070931
  }
LocReturn 070872:
  Jump: 070878
LocOp 070878:
  TraceOperation 070878 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 070928)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 070882 (Call (Floc 026172) [Var (Global 47),Con 17] Sp);
    Let b5 = M[007300];
    Let b6 = M[007301];
    PushFrame;
    PushReturnAddress 070882;
    SetLocal 1 MakeHiLo(b5,b6);
    SetLocal 2 17;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 070928
  }
LocReturn 070882:
  PushStack call_result;
  TraceOperation 070889 (Jz (Var Sp) (Branch T (Dloc 070928)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 070928
  } else {
    TraceOperation 070892 (Call (Floc 088304) [Var (Global 47),Con 20] Sp);
    Let b2 = M[007300];
    Let b3 = M[007301];
    PushFrame;
    PushReturnAddress 070892;
    SetLocal 1 MakeHiLo(b2,b3);
    SetLocal 2 20;
    MakeRoutineFrame 2;
    Jump: 088305
  }
LocReturn 070892:
  PushStack call_result;
  TraceOperation 070899 (Jz (Var Sp) (Branch F (Dloc 070928)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 070902 (Get_child (Var (Global 47)) Sp (Branch F (Dloc 070906)));
    Let b2 = M[007300];
    Let b3 = M[007301];
    Let b4 = M[Offset(Offset(000378,Mul(MakeHiLo(b2,b3),14)),10)];
    Let b5 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b2,b3),14)),10),1)];
    PushStack MakeHiLo(b4,b5);
    if (IsZero(MakeHiLo(b4,b5))) {
      Jump: 070906
    } else {
      Jump: 070906
    }
  } else {
    Jump: 070928
  }
LocOp 070906:
  TraceOperation 070906 (Jz (Var Sp) (Branch T (Dloc 070928)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 070928
  } else {
    TraceOperation 070909 (Call (Floc 102676) [Var (Global 47),Var (Global 37)] Sp);
    Let b2 = M[007300];
    Let b3 = M[007301];
    Let b4 = M[007280];
    Let b5 = M[007281];
    PushFrame;
    PushReturnAddress 070909;
    SetLocal 1 MakeHiLo(b2,b3);
    SetLocal 2 MakeHiLo(b4,b5);
    MakeRoutineFrame 2;
    Jump: 102677
  }
LocReturn 070909:
  PushStack call_result;
  TraceOperation 070916 (Jz (Var Sp) (Branch F (Dloc 070928)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 070919 (Call (Floc 041040) [Con 42,Con 4,Var (Global 47)] Sp);
    Let b2 = M[007300];
    Let b3 = M[007301];
    PushFrame;
    PushReturnAddress 070919;
    SetLocal 1 42;
    SetLocal 2 4;
    SetLocal 3 MakeHiLo(b2,b3);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  } else {
    Jump: 070928
  }
LocReturn 070919:
  PushStack call_result;
  TraceOperation 070927 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 070928:
  TraceOperation 070928 (Jump 070942);
  Jump: 070942
LocOp 070931:
  TraceOperation 070931 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 070942)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 070935 (CallN (Floc 098228) [Con 17716,Con 1]);
    PushFrame;
    PushReturnAddress 070935;
    SetLocal 1 17716;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 070942
  }
LocReturn 070935:
  Jump: 070942
LocOp 070942:
  TraceOperation 070942 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 070944:
  MakeRoutineFrame 0;
  Jump: 070945
LocOp 070945:
  TraceOperation 070945 (Jz (Var (Global 36)) (Branch F (Dloc 071001)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 070948 (Jz (Var (Global 114)) (Branch T (Dloc 070957)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 070957
    } else {
      TraceOperation 070951 (CallN (Floc 098228) [Con 17736]);
      PushFrame;
      PushReturnAddress 070951;
      SetLocal 1 17736;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 071001
  }
LocReturn 070951:
  Jump: 070957
LocOp 070957:
  TraceOperation 070957 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 070971)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 070961 (CallN (Floc 041040) [Con 42,Con 5,Var (Global 47)]);
    Let b5 = M[007300];
    Let b6 = M[007301];
    PushFrame;
    PushReturnAddress 070961;
    SetLocal 1 42;
    SetLocal 2 5;
    SetLocal 3 MakeHiLo(b5,b6);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  } else {
    Jump: 070971
  }
LocReturn 070961:
  TraceOperation 070968 (Jump 070998);
  Jump: 070998
LocOp 070971:
  TraceOperation 070971 (Call (Floc 104604) [Var (Global 31),Var (Global 37)] Sp);
  Let b1 = M[007268];
  Let b2 = M[007269];
  Let b3 = M[007280];
  Let b4 = M[007281];
  PushFrame;
  PushReturnAddress 070971;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 MakeHiLo(b3,b4);
  MakeRoutineFrame 2;
  Jump: 104605
LocReturn 070971:
  PushStack call_result;
  TraceOperation 070978 (Jz (Var Sp) (Branch T (Dloc 070991)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 070991
  } else {
    TraceOperation 070981 (CallN (Floc 041060) [Con 42,Con 6,Var (Global 47)]);
    Let b2 = M[007300];
    Let b3 = M[007301];
    PushFrame;
    PushReturnAddress 070981;
    SetLocal 1 42;
    SetLocal 2 6;
    SetLocal 3 MakeHiLo(b2,b3);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041061
  }
LocReturn 070981:
  TraceOperation 070988 (Jump 070998);
  Jump: 070998
LocOp 070991:
  TraceOperation 070991 (CallN (Floc 041060) [Con 42,Con 7,Var (Global 47)]);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 070991;
  SetLocal 1 42;
  SetLocal 2 7;
  SetLocal 3 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041061
LocReturn 070991:
  Jump: 070998
LocOp 070998:
  TraceOperation 070998 (Jump 071012);
  Jump: 071012
LocOp 071001:
  TraceOperation 071001 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 071012)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 071005 (CallN (Floc 098228) [Con 17736,Con 1]);
    PushFrame;
    PushReturnAddress 071005;
    SetLocal 1 17736;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 071012
  }
LocReturn 071005:
  Jump: 071012
LocOp 071012:
  TraceOperation 071012 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 071016:
  MakeRoutineFrame 0;
  Jump: 071017
LocOp 071017:
  TraceOperation 071017 (Jz (Var (Global 36)) (Branch F (Dloc 071060)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 071020 (Jz (Var (Global 114)) (Branch T (Dloc 071029)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 071029
    } else {
      TraceOperation 071023 (CallN (Floc 098228) [Con 17754]);
      PushFrame;
      PushReturnAddress 071023;
      SetLocal 1 17754;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 071060
  }
LocReturn 071023:
  Jump: 071029
LocOp 071029:
  TraceOperation 071029 (Call (Floc 088056) [Var (Global 47),Con 1,Con 14] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 071029;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  SetLocal 3 14;
  MakeRoutineFrame 9;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 088057
LocReturn 071029:
  PushStack call_result;
  TraceOperation 071037 (Jz (Var Sp) (Branch T (Dloc 071051)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 071051
  } else {
    TraceOperation 071040 (Call (Floc 088304) [Var (Global 47),Con 14] Sp);
    Let b2 = M[007300];
    Let b3 = M[007301];
    PushFrame;
    PushReturnAddress 071040;
    SetLocal 1 MakeHiLo(b2,b3);
    SetLocal 2 14;
    MakeRoutineFrame 2;
    Jump: 088305
  }
LocReturn 071040:
  PushStack call_result;
  TraceOperation 071047 (Jz (Var Sp) (Branch T (Dloc 071051)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 071051
  } else {
    TraceOperation 071050 Rfalse;
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  }
LocOp 071051:
  TraceOperation 071051 (Call (Floc 041040) [Con 14,Con 1,Var (Global 47)] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 071051;
  SetLocal 1 14;
  SetLocal 2 1;
  SetLocal 3 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041041
LocReturn 071051:
  PushStack call_result;
  TraceOperation 071059 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 071060:
  TraceOperation 071060 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 071071)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 071064 (CallN (Floc 098228) [Con 17754,Con 1]);
    PushFrame;
    PushReturnAddress 071064;
    SetLocal 1 17754;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 071071
  }
LocReturn 071064:
  Jump: 071071
LocOp 071071:
  TraceOperation 071071 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 071072:
  MakeRoutineFrame 0;
  Jump: 071073
LocOp 071073:
  TraceOperation 071073 (Jz (Var (Global 36)) (Branch F (Dloc 071107)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 071076 (Jz (Var (Global 114)) (Branch T (Dloc 071085)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 071085
    } else {
      TraceOperation 071079 (CallN (Floc 098228) [Con 17768]);
      PushFrame;
      PushReturnAddress 071079;
      SetLocal 1 17768;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 071107
  }
LocReturn 071079:
  Jump: 071085
LocOp 071085:
  TraceOperation 071085 (Call (Floc 088304) [Var (Global 47),Con 13] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 071085;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 13;
  MakeRoutineFrame 2;
  Jump: 088305
LocReturn 071085:
  PushStack call_result;
  TraceOperation 071092 (Jz (Var Sp) (Branch F (Dloc 071104)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 071095 (Call (Floc 041040) [Con 14,Con 2,Var (Global 47)] Sp);
    Let b2 = M[007300];
    Let b3 = M[007301];
    PushFrame;
    PushReturnAddress 071095;
    SetLocal 1 14;
    SetLocal 2 2;
    SetLocal 3 MakeHiLo(b2,b3);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  } else {
    Jump: 071104
  }
LocReturn 071095:
  PushStack call_result;
  TraceOperation 071103 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 071104:
  TraceOperation 071104 (Jump 071118);
  Jump: 071118
LocOp 071107:
  TraceOperation 071107 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 071118)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 071111 (CallN (Floc 098228) [Con 17768,Con 1]);
    PushFrame;
    PushReturnAddress 071111;
    SetLocal 1 17768;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 071118
  }
LocReturn 071111:
  Jump: 071118
LocOp 071118:
  TraceOperation 071118 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 071120:
  MakeRoutineFrame 0;
  Jump: 071121
LocOp 071121:
  TraceOperation 071121 (Jz (Var (Global 36)) (Branch F (Dloc 071143)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 071124 (Jz (Var (Global 114)) (Branch T (Dloc 071133)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 071133
    } else {
      TraceOperation 071127 (CallN (Floc 098228) [Con 17780]);
      PushFrame;
      PushReturnAddress 071127;
      SetLocal 1 17780;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 071143
  }
LocReturn 071127:
  Jump: 071133
LocOp 071133:
  TraceOperation 071133 (CallN (Floc 088364) [Var (Global 47),Con 13,Con 1]);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 071133;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 13;
  SetLocal 3 1;
  MakeRoutineFrame 3;
  Jump: 088365
LocReturn 071133:
  TraceOperation 071140 (Jump 071154);
  Jump: 071154
LocOp 071143:
  TraceOperation 071143 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 071154)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 071147 (CallN (Floc 098228) [Con 17780,Con 1]);
    PushFrame;
    PushReturnAddress 071147;
    SetLocal 1 17780;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 071154
  }
LocReturn 071147:
  Jump: 071154
LocOp 071154:
  TraceOperation 071154 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 071156:
  MakeRoutineFrame 0;
  Jump: 071157
LocOp 071157:
  TraceOperation 071157 (Jz (Var (Global 36)) (Branch F (Dloc 071213)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 071160 (Jz (Var (Global 114)) (Branch T (Dloc 071169)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 071169
    } else {
      TraceOperation 071163 (CallN (Floc 098228) [Con 17789]);
      PushFrame;
      PushReturnAddress 071163;
      SetLocal 1 17789;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 071213
  }
LocReturn 071163:
  Jump: 071169
LocOp 071169:
  TraceOperation 071169 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 071183)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 071173 (CallN (Floc 041040) [Con 14,Con 3,Var (Global 47)]);
    Let b5 = M[007300];
    Let b6 = M[007301];
    PushFrame;
    PushReturnAddress 071173;
    SetLocal 1 14;
    SetLocal 2 3;
    SetLocal 3 MakeHiLo(b5,b6);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  } else {
    Jump: 071183
  }
LocReturn 071173:
  TraceOperation 071180 (Jump 071210);
  Jump: 071210
LocOp 071183:
  TraceOperation 071183 (Call (Floc 104604) [Var (Global 31),Var (Global 37)] Sp);
  Let b1 = M[007268];
  Let b2 = M[007269];
  Let b3 = M[007280];
  Let b4 = M[007281];
  PushFrame;
  PushReturnAddress 071183;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 MakeHiLo(b3,b4);
  MakeRoutineFrame 2;
  Jump: 104605
LocReturn 071183:
  PushStack call_result;
  TraceOperation 071190 (Jz (Var Sp) (Branch T (Dloc 071203)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 071203
  } else {
    TraceOperation 071193 (CallN (Floc 041060) [Con 14,Con 4,Var (Global 47)]);
    Let b2 = M[007300];
    Let b3 = M[007301];
    PushFrame;
    PushReturnAddress 071193;
    SetLocal 1 14;
    SetLocal 2 4;
    SetLocal 3 MakeHiLo(b2,b3);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041061
  }
LocReturn 071193:
  TraceOperation 071200 (Jump 071210);
  Jump: 071210
LocOp 071203:
  TraceOperation 071203 (CallN (Floc 041060) [Con 14,Con 5,Var (Global 47)]);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 071203;
  SetLocal 1 14;
  SetLocal 2 5;
  SetLocal 3 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041061
LocReturn 071203:
  Jump: 071210
LocOp 071210:
  TraceOperation 071210 (Jump 071224);
  Jump: 071224
LocOp 071213:
  TraceOperation 071213 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 071224)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 071217 (CallN (Floc 098228) [Con 17789,Con 1]);
    PushFrame;
    PushReturnAddress 071217;
    SetLocal 1 17789;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 071224
  }
LocReturn 071217:
  Jump: 071224
LocOp 071224:
  TraceOperation 071224 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 071228:
  MakeRoutineFrame 0;
  Jump: 071229
LocOp 071229:
  TraceOperation 071229 (Jz (Var (Global 36)) (Branch F (Dloc 071272)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 071232 (Jz (Var (Global 114)) (Branch T (Dloc 071241)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 071241
    } else {
      TraceOperation 071235 (CallN (Floc 098228) [Con 17807]);
      PushFrame;
      PushReturnAddress 071235;
      SetLocal 1 17807;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 071272
  }
LocReturn 071235:
  Jump: 071241
LocOp 071241:
  TraceOperation 071241 (Call (Floc 109660) [Var (Global 47)] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 071241;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 109661
LocReturn 071241:
  PushStack call_result;
  TraceOperation 071247 (Jz (Var Sp) (Branch F (Dloc 071260)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 071250 (Call (Floc 088304) [Var (Global 47),Con 2] Sp);
    Let b2 = M[007300];
    Let b3 = M[007301];
    PushFrame;
    PushReturnAddress 071250;
    SetLocal 1 MakeHiLo(b2,b3);
    SetLocal 2 2;
    MakeRoutineFrame 2;
    Jump: 088305
  } else {
    Jump: 071260
  }
LocReturn 071250:
  PushStack call_result;
  TraceOperation 071257 (Jz (Var Sp) (Branch F (Dloc 071269)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 071260
  } else {
    Jump: 071269
  }
LocOp 071260:
  TraceOperation 071260 (Call (Floc 041040) [Con 77,Con 1,Var (Global 47)] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 071260;
  SetLocal 1 77;
  SetLocal 2 1;
  SetLocal 3 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041041
LocReturn 071260:
  PushStack call_result;
  TraceOperation 071268 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 071269:
  TraceOperation 071269 (Jump 071283);
  Jump: 071283
LocOp 071272:
  TraceOperation 071272 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 071283)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 071276 (CallN (Floc 098228) [Con 17807,Con 1]);
    PushFrame;
    PushReturnAddress 071276;
    SetLocal 1 17807;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 071283
  }
LocReturn 071276:
  Jump: 071283
LocOp 071283:
  TraceOperation 071283 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 071284:
  MakeRoutineFrame 0;
  Jump: 071285
LocOp 071285:
  TraceOperation 071285 (Jz (Var (Global 36)) (Branch F (Dloc 071319)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 071288 (Jz (Var (Global 114)) (Branch T (Dloc 071297)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 071297
    } else {
      TraceOperation 071291 (CallN (Floc 098228) [Con 17821]);
      PushFrame;
      PushReturnAddress 071291;
      SetLocal 1 17821;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 071319
  }
LocReturn 071291:
  Jump: 071297
LocOp 071297:
  TraceOperation 071297 (Call (Floc 102384) [Var (Global 47)] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 071297;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 1;
  Jump: 102385
LocReturn 071297:
  PushStack call_result;
  TraceOperation 071303 (Je [Var Sp,Var (Global 37)] (Branch T (Dloc 071316)));
  PopStack popped1;
  Let b2 = M[007280];
  Let b3 = M[007281];
  if (Equal(popped1,MakeHiLo(b2,b3))) {
    Jump: 071316
  } else {
    TraceOperation 071307 (Call (Floc 041040) [Con 77,Con 2,Var (Global 47)] Sp);
    Let b4 = M[007300];
    Let b5 = M[007301];
    PushFrame;
    PushReturnAddress 071307;
    SetLocal 1 77;
    SetLocal 2 2;
    SetLocal 3 MakeHiLo(b4,b5);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  }
LocReturn 071307:
  PushStack call_result;
  TraceOperation 071315 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 071316:
  TraceOperation 071316 (Jump 071330);
  Jump: 071330
LocOp 071319:
  TraceOperation 071319 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 071330)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 071323 (CallN (Floc 098228) [Con 17821,Con 1]);
    PushFrame;
    PushReturnAddress 071323;
    SetLocal 1 17821;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 071330
  }
LocReturn 071323:
  Jump: 071330
LocOp 071330:
  TraceOperation 071330 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 071332:
  MakeRoutineFrame 0;
  Jump: 071333
LocOp 071333:
  TraceOperation 071333 (Jz (Var (Global 36)) (Branch F (Dloc 071367)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 071336 (Jz (Var (Global 114)) (Branch T (Dloc 071345)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 071345
    } else {
      TraceOperation 071339 (CallN (Floc 098228) [Con 17833]);
      PushFrame;
      PushReturnAddress 071339;
      SetLocal 1 17833;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 071367
  }
LocReturn 071339:
  Jump: 071345
LocOp 071345:
  TraceOperation 071345 (Call (Floc 103016) [Var (Global 47)] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 071345;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 103017
LocReturn 071345:
  PushStack call_result;
  TraceOperation 071351 (Je [Var (Global 37),Var Sp] (Branch F (Dloc 071364)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  PopStack popped3;
  if (Equal(MakeHiLo(b1,b2),popped3)) {
    TraceOperation 071355 (Call (Floc 041040) [Con 77,Con 3,Var (Global 47)] Sp);
    Let b4 = M[007300];
    Let b5 = M[007301];
    PushFrame;
    PushReturnAddress 071355;
    SetLocal 1 77;
    SetLocal 2 3;
    SetLocal 3 MakeHiLo(b4,b5);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  } else {
    Jump: 071364
  }
LocReturn 071355:
  PushStack call_result;
  TraceOperation 071363 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 071364:
  TraceOperation 071364 (Jump 071378);
  Jump: 071378
LocOp 071367:
  TraceOperation 071367 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 071378)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 071371 (CallN (Floc 098228) [Con 17833,Con 1]);
    PushFrame;
    PushReturnAddress 071371;
    SetLocal 1 17833;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 071378
  }
LocReturn 071371:
  Jump: 071378
LocOp 071378:
  TraceOperation 071378 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 071380:
  MakeRoutineFrame 0;
  Jump: 071381
LocOp 071381:
  TraceOperation 071381 (Jz (Var (Global 36)) (Branch F (Dloc 071402)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 071384 (Jz (Var (Global 114)) (Branch T (Dloc 071393)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 071393
    } else {
      TraceOperation 071387 (CallN (Floc 098228) [Con 17845]);
      PushFrame;
      PushReturnAddress 071387;
      SetLocal 1 17845;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 071402
  }
LocReturn 071387:
  Jump: 071393
LocOp 071393:
  TraceOperation 071393 (CallN (Floc 103992) [Var (Global 47),Var (Global 37)]);
  Let b1 = M[007300];
  Let b2 = M[007301];
  Let b3 = M[007280];
  Let b4 = M[007281];
  PushFrame;
  PushReturnAddress 071393;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 MakeHiLo(b3,b4);
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 103993
LocReturn 071393:
  TraceOperation 071399 (Jump 071413);
  Jump: 071413
LocOp 071402:
  TraceOperation 071402 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 071413)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 071406 (CallN (Floc 098228) [Con 17845,Con 1]);
    PushFrame;
    PushReturnAddress 071406;
    SetLocal 1 17845;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 071413
  }
LocReturn 071406:
  Jump: 071413
LocOp 071413:
  TraceOperation 071413 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 071416:
  MakeRoutineFrame 0;
  Jump: 071417
LocOp 071417:
  TraceOperation 071417 (Jz (Var (Global 36)) (Branch F (Dloc 071453)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 071420 (Jz (Var (Global 114)) (Branch T (Dloc 071429)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 071429
    } else {
      TraceOperation 071423 (CallN (Floc 098228) [Con 17854]);
      PushFrame;
      PushReturnAddress 071423;
      SetLocal 1 17854;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 071453
  }
LocReturn 071423:
  Jump: 071429
LocOp 071429:
  TraceOperation 071429 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 071443)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 071433 (CallN (Floc 041040) [Con 77,Con 4,Var (Global 47)]);
    Let b5 = M[007300];
    Let b6 = M[007301];
    PushFrame;
    PushReturnAddress 071433;
    SetLocal 1 77;
    SetLocal 2 4;
    SetLocal 3 MakeHiLo(b5,b6);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  } else {
    Jump: 071443
  }
LocReturn 071433:
  TraceOperation 071440 (Jump 071450);
  Jump: 071450
LocOp 071443:
  TraceOperation 071443 (CallN (Floc 041060) [Con 77,Con 5,Var (Global 47)]);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 071443;
  SetLocal 1 77;
  SetLocal 2 5;
  SetLocal 3 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041061
LocReturn 071443:
  Jump: 071450
LocOp 071450:
  TraceOperation 071450 (Jump 071464);
  Jump: 071464
LocOp 071453:
  TraceOperation 071453 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 071464)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 071457 (CallN (Floc 098228) [Con 17854,Con 1]);
    PushFrame;
    PushReturnAddress 071457;
    SetLocal 1 17854;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 071464
  }
LocReturn 071457:
  Jump: 071464
LocOp 071464:
  TraceOperation 071464 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 071468:
  MakeRoutineFrame 0;
  Jump: 071469
LocOp 071469:
  TraceOperation 071469 (Jz (Var (Global 36)) (Branch F (Dloc 071503)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 071472 (Jz (Var (Global 114)) (Branch T (Dloc 071481)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 071481
    } else {
      TraceOperation 071475 (CallN (Floc 098228) [Con 17867]);
      PushFrame;
      PushReturnAddress 071475;
      SetLocal 1 17867;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 071503
  }
LocReturn 071475:
  Jump: 071481
LocOp 071481:
  TraceOperation 071481 (Call (Floc 103016) [Var (Global 47)] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 071481;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 103017
LocReturn 071481:
  PushStack call_result;
  TraceOperation 071487 (Je [Var (Global 37),Var Sp] (Branch T (Dloc 071500)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  PopStack popped3;
  if (Equal(MakeHiLo(b1,b2),popped3)) {
    Jump: 071500
  } else {
    TraceOperation 071491 (Call (Floc 041040) [Con 17,Con 1,Var (Global 47)] Sp);
    Let b4 = M[007300];
    Let b5 = M[007301];
    PushFrame;
    PushReturnAddress 071491;
    SetLocal 1 17;
    SetLocal 2 1;
    SetLocal 3 MakeHiLo(b4,b5);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  }
LocReturn 071491:
  PushStack call_result;
  TraceOperation 071499 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 071500:
  TraceOperation 071500 (Jump 071514);
  Jump: 071514
LocOp 071503:
  TraceOperation 071503 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 071514)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 071507 (CallN (Floc 098228) [Con 17867,Con 1]);
    PushFrame;
    PushReturnAddress 071507;
    SetLocal 1 17867;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 071514
  }
LocReturn 071507:
  Jump: 071514
LocOp 071514:
  TraceOperation 071514 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 071516:
  MakeRoutineFrame 0;
  Jump: 071517
LocOp 071517:
  TraceOperation 071517 (Jz (Var (Global 36)) (Branch F (Dloc 071538)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 071520 (Jz (Var (Global 114)) (Branch T (Dloc 071529)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 071529
    } else {
      TraceOperation 071523 (CallN (Floc 098228) [Con 17879]);
      PushFrame;
      PushReturnAddress 071523;
      SetLocal 1 17879;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 071538
  }
LocReturn 071523:
  Jump: 071529
LocOp 071529:
  TraceOperation 071529 (CallN (Floc 103224) [Var (Global 47),Var (Global 37)]);
  Let b1 = M[007300];
  Let b2 = M[007301];
  Let b3 = M[007280];
  Let b4 = M[007281];
  PushFrame;
  PushReturnAddress 071529;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 MakeHiLo(b3,b4);
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 103225
LocReturn 071529:
  TraceOperation 071535 (Jump 071549);
  Jump: 071549
LocOp 071538:
  TraceOperation 071538 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 071549)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 071542 (CallN (Floc 098228) [Con 17879,Con 1]);
    PushFrame;
    PushReturnAddress 071542;
    SetLocal 1 17879;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 071549
  }
LocReturn 071542:
  Jump: 071549
LocOp 071549:
  TraceOperation 071549 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 071552:
  MakeRoutineFrame 0;
  Jump: 071553
LocOp 071553:
  TraceOperation 071553 (Jz (Var (Global 36)) (Branch F (Dloc 071589)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 071556 (Jz (Var (Global 114)) (Branch T (Dloc 071565)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 071565
    } else {
      TraceOperation 071559 (CallN (Floc 098228) [Con 17888]);
      PushFrame;
      PushReturnAddress 071559;
      SetLocal 1 17888;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 071589
  }
LocReturn 071559:
  Jump: 071565
LocOp 071565:
  TraceOperation 071565 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 071579)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 071569 (CallN (Floc 041040) [Con 17,Con 2,Var (Global 47)]);
    Let b5 = M[007300];
    Let b6 = M[007301];
    PushFrame;
    PushReturnAddress 071569;
    SetLocal 1 17;
    SetLocal 2 2;
    SetLocal 3 MakeHiLo(b5,b6);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  } else {
    Jump: 071579
  }
LocReturn 071569:
  TraceOperation 071576 (Jump 071586);
  Jump: 071586
LocOp 071579:
  TraceOperation 071579 (CallN (Floc 041060) [Con 17,Con 3,Var (Global 47)]);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 071579;
  SetLocal 1 17;
  SetLocal 2 3;
  SetLocal 3 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041061
LocReturn 071579:
  Jump: 071586
LocOp 071586:
  TraceOperation 071586 (Jump 071600);
  Jump: 071600
LocOp 071589:
  TraceOperation 071589 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 071600)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 071593 (CallN (Floc 098228) [Con 17888,Con 1]);
    PushFrame;
    PushReturnAddress 071593;
    SetLocal 1 17888;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 071600
  }
LocReturn 071593:
  Jump: 071600
LocOp 071600:
  TraceOperation 071600 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 071604:
  MakeRoutineFrame 0;
  Jump: 071605
LocOp 071605:
  TraceOperation 071605 (Jz (Var (Global 36)) (Branch F (Dloc 071649)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 071608 (Call (Floc 026172) [Var (Global 47),Con 14] Sp);
    Let b3 = M[007300];
    Let b4 = M[007301];
    PushFrame;
    PushReturnAddress 071608;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 14;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 071649
  }
LocReturn 071608:
  PushStack call_result;
  TraceOperation 071615 (Jz (Var Sp) (Branch T (Dloc 071649)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 071649
  } else {
    TraceOperation 071618 (Jz (Var (Global 114)) (Branch T (Dloc 071627)));
    Let b2 = M[007434];
    Let b3 = M[007435];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 071627
    } else {
      TraceOperation 071621 (CallN (Floc 098228) [Con 17901]);
      PushFrame;
      PushReturnAddress 071621;
      SetLocal 1 17901;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  }
LocReturn 071621:
  Jump: 071627
LocOp 071627:
  TraceOperation 071627 (Call (Floc 102384) [Var (Global 47)] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 071627;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 1;
  Jump: 102385
LocReturn 071627:
  PushStack call_result;
  TraceOperation 071633 (Je [Var (Global 37),Var Sp] (Branch T (Dloc 071646)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  PopStack popped3;
  if (Equal(MakeHiLo(b1,b2),popped3)) {
    Jump: 071646
  } else {
    TraceOperation 071637 (Call (Floc 041040) [Con 25,Con 1,Var (Global 47)] Sp);
    Let b4 = M[007300];
    Let b5 = M[007301];
    PushFrame;
    PushReturnAddress 071637;
    SetLocal 1 25;
    SetLocal 2 1;
    SetLocal 3 MakeHiLo(b4,b5);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  }
LocReturn 071637:
  PushStack call_result;
  TraceOperation 071645 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 071646:
  TraceOperation 071646 (Jump 071660);
  Jump: 071660
LocOp 071649:
  TraceOperation 071649 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 071660)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 071653 (CallN (Floc 098228) [Con 17901,Con 1]);
    PushFrame;
    PushReturnAddress 071653;
    SetLocal 1 17901;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 071660
  }
LocReturn 071653:
  Jump: 071660
LocOp 071660:
  TraceOperation 071660 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 071664:
  MakeRoutineFrame 0;
  Jump: 071665
LocOp 071665:
  TraceOperation 071665 (Jz (Var (Global 36)) (Branch F (Dloc 071703)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 071668 (Call (Floc 026172) [Var (Global 47),Con 14] Sp);
    Let b3 = M[007300];
    Let b4 = M[007301];
    PushFrame;
    PushReturnAddress 071668;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 14;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 071703
  }
LocReturn 071668:
  PushStack call_result;
  TraceOperation 071675 (Jz (Var Sp) (Branch T (Dloc 071703)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 071703
  } else {
    TraceOperation 071678 (Jz (Var (Global 114)) (Branch T (Dloc 071687)));
    Let b2 = M[007434];
    Let b3 = M[007435];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 071687
    } else {
      TraceOperation 071681 (CallN (Floc 098228) [Con 17916]);
      PushFrame;
      PushReturnAddress 071681;
      SetLocal 1 17916;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  }
LocReturn 071681:
  Jump: 071687
LocOp 071687:
  TraceOperation 071687 (Je [Var (Global 37),Var (Global 48)] (Branch F (Dloc 071700)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007302];
  Let b4 = M[007303];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 071691 (Call (Floc 041040) [Con 25,Con 2,Var (Global 47)] Sp);
    Let b5 = M[007300];
    Let b6 = M[007301];
    PushFrame;
    PushReturnAddress 071691;
    SetLocal 1 25;
    SetLocal 2 2;
    SetLocal 3 MakeHiLo(b5,b6);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  } else {
    Jump: 071700
  }
LocReturn 071691:
  PushStack call_result;
  TraceOperation 071699 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 071700:
  TraceOperation 071700 (Jump 071714);
  Jump: 071714
LocOp 071703:
  TraceOperation 071703 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 071714)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 071707 (CallN (Floc 098228) [Con 17916,Con 1]);
    PushFrame;
    PushReturnAddress 071707;
    SetLocal 1 17916;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 071714
  }
LocReturn 071707:
  Jump: 071714
LocOp 071714:
  TraceOperation 071714 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 071716:
  MakeRoutineFrame 0;
  Jump: 071717
LocOp 071717:
  TraceOperation 071717 (Jz (Var (Global 36)) (Branch F (Dloc 071760)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 071720 (Call (Floc 026172) [Var (Global 47),Con 14] Sp);
    Let b3 = M[007300];
    Let b4 = M[007301];
    PushFrame;
    PushReturnAddress 071720;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 14;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 071760
  }
LocReturn 071720:
  PushStack call_result;
  TraceOperation 071727 (Jz (Var Sp) (Branch T (Dloc 071760)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 071760
  } else {
    TraceOperation 071730 (Jz (Var (Global 114)) (Branch T (Dloc 071739)));
    Let b2 = M[007434];
    Let b3 = M[007435];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 071739
    } else {
      TraceOperation 071733 (CallN (Floc 098228) [Con 17929]);
      PushFrame;
      PushReturnAddress 071733;
      SetLocal 1 17929;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  }
LocReturn 071733:
  Jump: 071739
LocOp 071739:
  TraceOperation 071739 (Call (Floc 109700) [Var (Global 48)] Sp);
  Let b1 = M[007302];
  Let b2 = M[007303];
  PushFrame;
  PushReturnAddress 071739;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 109701
LocReturn 071739:
  PushStack call_result;
  TraceOperation 071745 (Jz (Var Sp) (Branch T (Dloc 071757)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 071757
  } else {
    TraceOperation 071748 (Call (Floc 041040) [Con 25,Con 4,Var (Global 48)] Sp);
    Let b2 = M[007302];
    Let b3 = M[007303];
    PushFrame;
    PushReturnAddress 071748;
    SetLocal 1 25;
    SetLocal 2 4;
    SetLocal 3 MakeHiLo(b2,b3);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  }
LocReturn 071748:
  PushStack call_result;
  TraceOperation 071756 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 071757:
  TraceOperation 071757 (Jump 071771);
  Jump: 071771
LocOp 071760:
  TraceOperation 071760 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 071771)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 071764 (CallN (Floc 098228) [Con 17929,Con 1]);
    PushFrame;
    PushReturnAddress 071764;
    SetLocal 1 17929;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 071771
  }
LocReturn 071764:
  Jump: 071771
LocOp 071771:
  TraceOperation 071771 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 071772:
  MakeRoutineFrame 0;
  Jump: 071773
LocOp 071773:
  TraceOperation 071773 (Jz (Var (Global 36)) (Branch F (Dloc 071804)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 071776 (Call (Floc 026172) [Var (Global 47),Con 14] Sp);
    Let b3 = M[007300];
    Let b4 = M[007301];
    PushFrame;
    PushReturnAddress 071776;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 14;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 071804
  }
LocReturn 071776:
  PushStack call_result;
  TraceOperation 071783 (Jz (Var Sp) (Branch T (Dloc 071804)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 071804
  } else {
    TraceOperation 071786 (Jz (Var (Global 114)) (Branch T (Dloc 071795)));
    Let b2 = M[007434];
    Let b3 = M[007435];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 071795
    } else {
      TraceOperation 071789 (CallN (Floc 098228) [Con 17943]);
      PushFrame;
      PushReturnAddress 071789;
      SetLocal 1 17943;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  }
LocReturn 071789:
  Jump: 071795
LocOp 071795:
  TraceOperation 071795 (Call (Floc 041040) [Con 25,Con 3,Var (Global 48)] Sp);
  Let b1 = M[007302];
  Let b2 = M[007303];
  PushFrame;
  PushReturnAddress 071795;
  SetLocal 1 25;
  SetLocal 2 3;
  SetLocal 3 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041041
LocReturn 071795:
  PushStack call_result;
  TraceOperation 071803 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 071804:
  TraceOperation 071804 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 071815)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 071808 (CallN (Floc 098228) [Con 17943,Con 1]);
    PushFrame;
    PushReturnAddress 071808;
    SetLocal 1 17943;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 071815
  }
LocReturn 071808:
  Jump: 071815
LocOp 071815:
  TraceOperation 071815 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 071816:
  MakeRoutineFrame 0;
  Jump: 071817
LocOp 071817:
  TraceOperation 071817 (Jz (Var (Global 36)) (Branch F (Dloc 071851)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 071820 (Call (Floc 026172) [Var (Global 47),Con 14] Sp);
    Let b3 = M[007300];
    Let b4 = M[007301];
    PushFrame;
    PushReturnAddress 071820;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 14;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 071851
  }
LocReturn 071820:
  PushStack call_result;
  TraceOperation 071827 (Jz (Var Sp) (Branch T (Dloc 071851)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 071851
  } else {
    TraceOperation 071830 (Jz (Var (Global 114)) (Branch T (Dloc 071839)));
    Let b2 = M[007434];
    Let b3 = M[007435];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 071839
    } else {
      TraceOperation 071833 (CallN (Floc 098228) [Con 17954]);
      PushFrame;
      PushReturnAddress 071833;
      SetLocal 1 17954;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  }
LocReturn 071833:
  Jump: 071839
LocOp 071839:
  TraceOperation 071839 (CallN (Floc 103224) [Var (Global 47),Var (Global 48),Con 0,Con 0]);
  Let b1 = M[007300];
  Let b2 = M[007301];
  Let b3 = M[007302];
  Let b4 = M[007303];
  PushFrame;
  PushReturnAddress 071839;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 MakeHiLo(b3,b4);
  SetLocal 3 0;
  SetLocal 4 0;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  Jump: 103225
LocReturn 071839:
  TraceOperation 071848 (Jump 071862);
  Jump: 071862
LocOp 071851:
  TraceOperation 071851 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 071862)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 071855 (CallN (Floc 098228) [Con 17954,Con 1]);
    PushFrame;
    PushReturnAddress 071855;
    SetLocal 1 17954;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 071862
  }
LocReturn 071855:
  Jump: 071862
LocOp 071862:
  TraceOperation 071862 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 071864:
  MakeRoutineFrame 0;
  Jump: 071865
LocOp 071865:
  TraceOperation 071865 (Jz (Var (Global 36)) (Branch F (Dloc 071925)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 071868 (Call (Floc 026172) [Var (Global 47),Con 14] Sp);
    Let b3 = M[007300];
    Let b4 = M[007301];
    PushFrame;
    PushReturnAddress 071868;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 14;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 071925
  }
LocReturn 071868:
  PushStack call_result;
  TraceOperation 071875 (Jz (Var Sp) (Branch T (Dloc 071925)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 071925
  } else {
    TraceOperation 071878 (Jz (Var (Global 114)) (Branch T (Dloc 071887)));
    Let b2 = M[007434];
    Let b3 = M[007435];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 071887
    } else {
      TraceOperation 071881 (CallN (Floc 098228) [Con 17966]);
      PushFrame;
      PushReturnAddress 071881;
      SetLocal 1 17966;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  }
LocReturn 071881:
  Jump: 071887
LocOp 071887:
  TraceOperation 071887 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 071901)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 071891 (CallN (Floc 041040) [Con 25,Con 5,Var (Global 47)]);
    Let b5 = M[007300];
    Let b6 = M[007301];
    PushFrame;
    PushReturnAddress 071891;
    SetLocal 1 25;
    SetLocal 2 5;
    SetLocal 3 MakeHiLo(b5,b6);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  } else {
    Jump: 071901
  }
LocReturn 071891:
  TraceOperation 071898 (Jump 071922);
  Jump: 071922
LocOp 071901:
  TraceOperation 071901 (Je [Var (Global 48),Var (Global 31)] (Branch F (Dloc 071915)));
  Let b1 = M[007302];
  Let b2 = M[007303];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 071905 (CallN (Floc 041060) [Con 25,Con 6,Var (Global 47)]);
    Let b5 = M[007300];
    Let b6 = M[007301];
    PushFrame;
    PushReturnAddress 071905;
    SetLocal 1 25;
    SetLocal 2 6;
    SetLocal 3 MakeHiLo(b5,b6);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041061
  } else {
    Jump: 071915
  }
LocReturn 071905:
  TraceOperation 071912 (Jump 071922);
  Jump: 071922
LocOp 071915:
  TraceOperation 071915 (CallN (Floc 041060) [Con 25,Con 7,Var (Global 47)]);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 071915;
  SetLocal 1 25;
  SetLocal 2 7;
  SetLocal 3 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041061
LocReturn 071915:
  Jump: 071922
LocOp 071922:
  TraceOperation 071922 (Jump 071936);
  Jump: 071936
LocOp 071925:
  TraceOperation 071925 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 071936)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 071929 (CallN (Floc 098228) [Con 17966,Con 1]);
    PushFrame;
    PushReturnAddress 071929;
    SetLocal 1 17966;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 071936
  }
LocReturn 071929:
  Jump: 071936
LocOp 071936:
  TraceOperation 071936 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 071940:
  MakeRoutineFrame 0;
  Jump: 071941
LocOp 071941:
  TraceOperation 071941 (Jz (Var (Global 36)) (Branch F (Dloc 071985)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 071944 (Call (Floc 026172) [Var (Global 47),Con 14] Sp);
    Let b3 = M[007300];
    Let b4 = M[007301];
    PushFrame;
    PushReturnAddress 071944;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 14;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 071985
  }
LocReturn 071944:
  PushStack call_result;
  TraceOperation 071951 (Jz (Var Sp) (Branch T (Dloc 071985)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 071985
  } else {
    TraceOperation 071954 (Jz (Var (Global 114)) (Branch T (Dloc 071963)));
    Let b2 = M[007434];
    Let b3 = M[007435];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 071963
    } else {
      TraceOperation 071957 (CallN (Floc 098228) [Con 17985]);
      PushFrame;
      PushReturnAddress 071957;
      SetLocal 1 17985;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  }
LocReturn 071957:
  Jump: 071963
LocOp 071963:
  TraceOperation 071963 (Call (Floc 102384) [Var (Global 47)] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 071963;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 1;
  Jump: 102385
LocReturn 071963:
  PushStack call_result;
  TraceOperation 071969 (Je [Var (Global 37),Var Sp] (Branch T (Dloc 071982)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  PopStack popped3;
  if (Equal(MakeHiLo(b1,b2),popped3)) {
    Jump: 071982
  } else {
    TraceOperation 071973 (Call (Floc 041040) [Con 54,Con 1,Var (Global 47)] Sp);
    Let b4 = M[007300];
    Let b5 = M[007301];
    PushFrame;
    PushReturnAddress 071973;
    SetLocal 1 54;
    SetLocal 2 1;
    SetLocal 3 MakeHiLo(b4,b5);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  }
LocReturn 071973:
  PushStack call_result;
  TraceOperation 071981 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 071982:
  TraceOperation 071982 (Jump 071996);
  Jump: 071996
LocOp 071985:
  TraceOperation 071985 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 071996)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 071989 (CallN (Floc 098228) [Con 17985,Con 1]);
    PushFrame;
    PushReturnAddress 071989;
    SetLocal 1 17985;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 071996
  }
LocReturn 071989:
  Jump: 071996
LocOp 071996:
  TraceOperation 071996 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 072000:
  MakeRoutineFrame 0;
  Jump: 072001
LocOp 072001:
  TraceOperation 072001 (Jz (Var (Global 36)) (Branch F (Dloc 072039)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 072004 (Call (Floc 026172) [Var (Global 47),Con 14] Sp);
    Let b3 = M[007300];
    Let b4 = M[007301];
    PushFrame;
    PushReturnAddress 072004;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 14;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 072039
  }
LocReturn 072004:
  PushStack call_result;
  TraceOperation 072011 (Jz (Var Sp) (Branch T (Dloc 072039)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 072039
  } else {
    TraceOperation 072014 (Jz (Var (Global 114)) (Branch T (Dloc 072023)));
    Let b2 = M[007434];
    Let b3 = M[007435];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 072023
    } else {
      TraceOperation 072017 (CallN (Floc 098228) [Con 18000]);
      PushFrame;
      PushReturnAddress 072017;
      SetLocal 1 18000;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  }
LocReturn 072017:
  Jump: 072023
LocOp 072023:
  TraceOperation 072023 (Je [Var (Global 37),Var (Global 48)] (Branch F (Dloc 072036)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007302];
  Let b4 = M[007303];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 072027 (Call (Floc 076480) [Con 22,Var (Global 47),Con 0] Sp);
    Let b5 = M[007300];
    Let b6 = M[007301];
    PushFrame;
    PushReturnAddress 072027;
    SetLocal 1 22;
    SetLocal 2 MakeHiLo(b5,b6);
    SetLocal 3 0;
    MakeRoutineFrame 3;
    Jump: 076481
  } else {
    Jump: 072036
  }
LocReturn 072027:
  PushStack call_result;
  TraceOperation 072035 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 072036:
  TraceOperation 072036 (Jump 072050);
  Jump: 072050
LocOp 072039:
  TraceOperation 072039 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 072050)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 072043 (CallN (Floc 098228) [Con 18000,Con 1]);
    PushFrame;
    PushReturnAddress 072043;
    SetLocal 1 18000;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 072050
  }
LocReturn 072043:
  Jump: 072050
LocOp 072050:
  TraceOperation 072050 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 072052:
  MakeRoutineFrame 0;
  Jump: 072053
LocOp 072053:
  TraceOperation 072053 (Jz (Var (Global 36)) (Branch F (Dloc 072084)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 072056 (Call (Floc 026172) [Var (Global 47),Con 14] Sp);
    Let b3 = M[007300];
    Let b4 = M[007301];
    PushFrame;
    PushReturnAddress 072056;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 14;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 072084
  }
LocReturn 072056:
  PushStack call_result;
  TraceOperation 072063 (Jz (Var Sp) (Branch T (Dloc 072084)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 072084
  } else {
    TraceOperation 072066 (Jz (Var (Global 114)) (Branch T (Dloc 072075)));
    Let b2 = M[007434];
    Let b3 = M[007435];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 072075
    } else {
      TraceOperation 072069 (CallN (Floc 098228) [Con 18013]);
      PushFrame;
      PushReturnAddress 072069;
      SetLocal 1 18013;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  }
LocReturn 072069:
  Jump: 072075
LocOp 072075:
  TraceOperation 072075 (Call (Floc 041040) [Con 54,Con 2,Var (Global 48)] Sp);
  Let b1 = M[007302];
  Let b2 = M[007303];
  PushFrame;
  PushReturnAddress 072075;
  SetLocal 1 54;
  SetLocal 2 2;
  SetLocal 3 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041041
LocReturn 072075:
  PushStack call_result;
  TraceOperation 072083 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 072084:
  TraceOperation 072084 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 072095)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 072088 (CallN (Floc 098228) [Con 18013,Con 1]);
    PushFrame;
    PushReturnAddress 072088;
    SetLocal 1 18013;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 072095
  }
LocReturn 072088:
  Jump: 072095
LocOp 072095:
  TraceOperation 072095 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 072096:
  MakeRoutineFrame 0;
  Jump: 072097
LocOp 072097:
  TraceOperation 072097 (Jz (Var (Global 36)) (Branch F (Dloc 072118)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 072100 (Jz (Var (Global 114)) (Branch T (Dloc 072109)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 072109
    } else {
      TraceOperation 072103 (CallN (Floc 098228) [Con 18024]);
      PushFrame;
      PushReturnAddress 072103;
      SetLocal 1 18024;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 072118
  }
LocReturn 072103:
  Jump: 072109
LocOp 072109:
  TraceOperation 072109 (Call (Floc 041040) [Con 74,Con 1,Var (Global 47)] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 072109;
  SetLocal 1 74;
  SetLocal 2 1;
  SetLocal 3 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041041
LocReturn 072109:
  PushStack call_result;
  TraceOperation 072117 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 072118:
  TraceOperation 072118 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 072129)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 072122 (CallN (Floc 098228) [Con 18024,Con 1]);
    PushFrame;
    PushReturnAddress 072122;
    SetLocal 1 18024;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 072129
  }
LocReturn 072122:
  Jump: 072129
LocOp 072129:
  TraceOperation 072129 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 072132:
  MakeRoutineFrame 0;
  Jump: 072133
LocOp 072133:
  TraceOperation 072133 (Jz (Var (Global 36)) (Branch F (Dloc 072207)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 072137 (Call (Floc 026172) [Var (Global 47),Con 14] Sp);
    Let b3 = M[007300];
    Let b4 = M[007301];
    PushFrame;
    PushReturnAddress 072137;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 14;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 072207
  }
LocReturn 072137:
  PushStack call_result;
  TraceOperation 072144 (Jz (Var Sp) (Branch T (Dloc 072207)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 072207
  } else {
    TraceOperation 072148 (Jz (Var (Global 114)) (Branch T (Dloc 072157)));
    Let b2 = M[007434];
    Let b3 = M[007435];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 072157
    } else {
      TraceOperation 072151 (CallN (Floc 098228) [Con 18033]);
      PushFrame;
      PushReturnAddress 072151;
      SetLocal 1 18033;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  }
LocReturn 072151:
  Jump: 072157
LocOp 072157:
  TraceOperation 072157 (Call (Floc 103016) [Var (Global 47)] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 072157;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 103017
LocReturn 072157:
  PushStack call_result;
  TraceOperation 072163 (Je [Var (Global 37),Var Sp] (Branch F (Dloc 072204)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  PopStack popped3;
  if (Equal(MakeHiLo(b1,b2),popped3)) {
    TraceOperation 072167 (CallN (Floc 041040) [Con 19,Con 3,Var (Global 47)]);
    Let b4 = M[007300];
    Let b5 = M[007301];
    PushFrame;
    PushReturnAddress 072167;
    SetLocal 1 19;
    SetLocal 2 3;
    SetLocal 3 MakeHiLo(b4,b5);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  } else {
    Jump: 072204
  }
LocReturn 072167:
  TraceOperation 072174 (Push (Var (Global 49)));
  Let b1 = M[007304];
  Let b2 = M[007305];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 072177 (Store (Con 65) (Con 1));
  SetByte 007304 0;
  SetByte 007305 1;
  TraceOperation 072180 (CallN (Floc 076180) [Con 0,Var (Global 37),Con 17,Var (Global 47),Con 0]);
  Let b3 = M[007280];
  Let b4 = M[007281];
  Let b5 = M[007300];
  Let b6 = M[007301];
  PushFrame;
  PushReturnAddress 072180;
  SetLocal 1 0;
  SetLocal 2 MakeHiLo(b3,b4);
  SetLocal 3 17;
  SetLocal 4 MakeHiLo(b5,b6);
  SetLocal 5 0;
  MakeRoutineFrame 9;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  Jump: 076181
LocReturn 072180:
  TraceOperation 072190 (Pull (Con 65));
  PopStack popped1;
  SetByte 007304 HiByte(popped1);
  SetByte 007305 LoByte(popped1);
  TraceOperation 072193 (Call (Floc 103016) [Var (Global 47)] Sp);
  Let b2 = M[007300];
  Let b3 = M[007301];
  PushFrame;
  PushReturnAddress 072193;
  SetLocal 1 MakeHiLo(b2,b3);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 103017
LocReturn 072193:
  PushStack call_result;
  TraceOperation 072199 (Je [Var (Global 37),Var Sp] (Branch F (Dloc 072204)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  PopStack popped3;
  if (Equal(MakeHiLo(b1,b2),popped3)) {
    TraceOperation 072203 Rtrue;
    PopFrame;
    PopReturnAddress return_address_4;
    SetResult 1;
    JumpIndirect: (return) return_address_4
  } else {
    Jump: 072204
  }
LocOp 072204:
  TraceOperation 072204 (Jump 072218);
  Jump: 072218
LocOp 072207:
  TraceOperation 072207 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 072218)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 072211 (CallN (Floc 098228) [Con 18033,Con 1]);
    PushFrame;
    PushReturnAddress 072211;
    SetLocal 1 18033;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 072218
  }
LocReturn 072211:
  Jump: 072218
LocOp 072218:
  TraceOperation 072218 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 072220:
  MakeRoutineFrame 0;
  Jump: 072221
LocOp 072221:
  TraceOperation 072221 (Jz (Var (Global 36)) (Branch F (Dloc 072264)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 072224 (Call (Floc 026172) [Var (Global 47),Con 14] Sp);
    Let b3 = M[007300];
    Let b4 = M[007301];
    PushFrame;
    PushReturnAddress 072224;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 14;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 072264
  }
LocReturn 072224:
  PushStack call_result;
  TraceOperation 072231 (Jz (Var Sp) (Branch T (Dloc 072264)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 072264
  } else {
    TraceOperation 072234 (Jz (Var (Global 114)) (Branch T (Dloc 072243)));
    Let b2 = M[007434];
    Let b3 = M[007435];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 072243
    } else {
      TraceOperation 072237 (CallN (Floc 098228) [Con 18055]);
      PushFrame;
      PushReturnAddress 072237;
      SetLocal 1 18055;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  }
LocReturn 072237:
  Jump: 072243
LocOp 072243:
  TraceOperation 072243 (Call (Floc 109740) [Var (Global 48)] Sp);
  Let b1 = M[007302];
  Let b2 = M[007303];
  PushFrame;
  PushReturnAddress 072243;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 109741
LocReturn 072243:
  PushStack call_result;
  TraceOperation 072249 (Jz (Var Sp) (Branch T (Dloc 072261)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 072261
  } else {
    TraceOperation 072252 (Call (Floc 041040) [Con 68,Con 1,Var (Global 48)] Sp);
    Let b2 = M[007302];
    Let b3 = M[007303];
    PushFrame;
    PushReturnAddress 072252;
    SetLocal 1 68;
    SetLocal 2 1;
    SetLocal 3 MakeHiLo(b2,b3);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  }
LocReturn 072252:
  PushStack call_result;
  TraceOperation 072260 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 072261:
  TraceOperation 072261 (Jump 072275);
  Jump: 072275
LocOp 072264:
  TraceOperation 072264 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 072275)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 072268 (CallN (Floc 098228) [Con 18055,Con 1]);
    PushFrame;
    PushReturnAddress 072268;
    SetLocal 1 18055;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 072275
  }
LocReturn 072268:
  Jump: 072275
LocOp 072275:
  TraceOperation 072275 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 072276:
  MakeRoutineFrame 0;
  Jump: 072277
LocOp 072277:
  TraceOperation 072277 (Jz (Var (Global 36)) (Branch F (Dloc 072308)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 072280 (Call (Floc 026172) [Var (Global 47),Con 14] Sp);
    Let b3 = M[007300];
    Let b4 = M[007301];
    PushFrame;
    PushReturnAddress 072280;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 14;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 072308
  }
LocReturn 072280:
  PushStack call_result;
  TraceOperation 072287 (Jz (Var Sp) (Branch T (Dloc 072308)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 072308
  } else {
    TraceOperation 072290 (Jz (Var (Global 114)) (Branch T (Dloc 072299)));
    Let b2 = M[007434];
    Let b3 = M[007435];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 072299
    } else {
      TraceOperation 072293 (CallN (Floc 098228) [Con 18069]);
      PushFrame;
      PushReturnAddress 072293;
      SetLocal 1 18069;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  }
LocReturn 072293:
  Jump: 072299
LocOp 072299:
  TraceOperation 072299 (Call (Floc 041040) [Con 68,Con 2,Var (Global 47)] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 072299;
  SetLocal 1 68;
  SetLocal 2 2;
  SetLocal 3 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041041
LocReturn 072299:
  PushStack call_result;
  TraceOperation 072307 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 072308:
  TraceOperation 072308 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 072319)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 072312 (CallN (Floc 098228) [Con 18069,Con 1]);
    PushFrame;
    PushReturnAddress 072312;
    SetLocal 1 18069;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 072319
  }
LocReturn 072312:
  Jump: 072319
LocOp 072319:
  TraceOperation 072319 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 072320:
  MakeRoutineFrame 0;
  Jump: 072321
LocOp 072321:
  TraceOperation 072321 (Jz (Var (Global 36)) (Branch F (Dloc 072342)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 072324 (Jz (Var (Global 114)) (Branch T (Dloc 072333)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 072333
    } else {
      TraceOperation 072327 (CallN (Floc 098228) [Con 18080]);
      PushFrame;
      PushReturnAddress 072327;
      SetLocal 1 18080;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 072342
  }
LocReturn 072327:
  Jump: 072333
LocOp 072333:
  TraceOperation 072333 (Call (Floc 041040) [Con 10,Con 1,Var (Global 47)] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 072333;
  SetLocal 1 10;
  SetLocal 2 1;
  SetLocal 3 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041041
LocReturn 072333:
  PushStack call_result;
  TraceOperation 072341 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 072342:
  TraceOperation 072342 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 072353)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 072346 (CallN (Floc 098228) [Con 18080,Con 1]);
    PushFrame;
    PushReturnAddress 072346;
    SetLocal 1 18080;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 072353
  }
LocReturn 072346:
  Jump: 072353
LocOp 072353:
  TraceOperation 072353 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 072356:
  MakeRoutineFrame 0;
  Jump: 072357
LocOp 072357:
  TraceOperation 072357 (Jz (Var (Global 36)) (Branch F (Dloc 072385)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 072360 (Jz (Var (Global 114)) (Branch T (Dloc 072369)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 072369
    } else {
      TraceOperation 072363 (CallN (Floc 098228) [Con 18089]);
      PushFrame;
      PushReturnAddress 072363;
      SetLocal 1 18089;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 072385
  }
LocReturn 072363:
  Jump: 072369
LocOp 072369:
  TraceOperation 072369 (Je [Var (Global 47),Var (Global 37)] (Branch F (Dloc 072382)));
  Let b1 = M[007300];
  Let b2 = M[007301];
  Let b3 = M[007280];
  Let b4 = M[007281];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 072373 (Call (Floc 041040) [Con 70,Con 3,Var (Global 47)] Sp);
    Let b5 = M[007300];
    Let b6 = M[007301];
    PushFrame;
    PushReturnAddress 072373;
    SetLocal 1 70;
    SetLocal 2 3;
    SetLocal 3 MakeHiLo(b5,b6);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  } else {
    Jump: 072382
  }
LocReturn 072373:
  PushStack call_result;
  TraceOperation 072381 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 072382:
  TraceOperation 072382 (Jump 072396);
  Jump: 072396
LocOp 072385:
  TraceOperation 072385 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 072396)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 072389 (CallN (Floc 098228) [Con 18089,Con 1]);
    PushFrame;
    PushReturnAddress 072389;
    SetLocal 1 18089;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 072396
  }
LocReturn 072389:
  Jump: 072396
LocOp 072396:
  TraceOperation 072396 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 072400:
  MakeRoutineFrame 0;
  Jump: 072401
LocOp 072401:
  TraceOperation 072401 (Jz (Var (Global 36)) (Branch F (Dloc 072422)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 072404 (Jz (Var (Global 114)) (Branch T (Dloc 072413)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 072413
    } else {
      TraceOperation 072407 (CallN (Floc 098228) [Con 18100]);
      PushFrame;
      PushReturnAddress 072407;
      SetLocal 1 18100;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 072422
  }
LocReturn 072407:
  Jump: 072413
LocOp 072413:
  TraceOperation 072413 (Call (Floc 041040) [Con 30,Con 1,Var (Global 47)] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 072413;
  SetLocal 1 30;
  SetLocal 2 1;
  SetLocal 3 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041041
LocReturn 072413:
  PushStack call_result;
  TraceOperation 072421 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 072422:
  TraceOperation 072422 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 072433)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 072426 (CallN (Floc 098228) [Con 18100,Con 1]);
    PushFrame;
    PushReturnAddress 072426;
    SetLocal 1 18100;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 072433
  }
LocReturn 072426:
  Jump: 072433
LocOp 072433:
  TraceOperation 072433 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 072436:
  MakeRoutineFrame 0;
  Jump: 072437
LocOp 072437:
  TraceOperation 072437 (Jz (Var (Global 36)) (Branch F (Dloc 072468)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 072440 (Call (Floc 026172) [Var (Global 47),Con 14] Sp);
    Let b3 = M[007300];
    Let b4 = M[007301];
    PushFrame;
    PushReturnAddress 072440;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 14;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 072468
  }
LocReturn 072440:
  PushStack call_result;
  TraceOperation 072447 (Jz (Var Sp) (Branch T (Dloc 072468)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 072468
  } else {
    TraceOperation 072450 (Jz (Var (Global 114)) (Branch T (Dloc 072459)));
    Let b2 = M[007434];
    Let b3 = M[007435];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 072459
    } else {
      TraceOperation 072453 (CallN (Floc 098228) [Con 18109]);
      PushFrame;
      PushReturnAddress 072453;
      SetLocal 1 18109;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  }
LocReturn 072453:
  Jump: 072459
LocOp 072459:
  TraceOperation 072459 (Call (Floc 041040) [Con 8,Con 1,Var (Global 47)] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 072459;
  SetLocal 1 8;
  SetLocal 2 1;
  SetLocal 3 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041041
LocReturn 072459:
  PushStack call_result;
  TraceOperation 072467 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 072468:
  TraceOperation 072468 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 072479)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 072472 (CallN (Floc 098228) [Con 18109,Con 1]);
    PushFrame;
    PushReturnAddress 072472;
    SetLocal 1 18109;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 072479
  }
LocReturn 072472:
  Jump: 072479
LocOp 072479:
  TraceOperation 072479 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 072480:
  MakeRoutineFrame 0;
  Jump: 072481
LocOp 072481:
  TraceOperation 072481 (Jz (Var (Global 36)) (Branch F (Dloc 072519)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 072484 (Call (Floc 026172) [Var (Global 47),Con 14] Sp);
    Let b3 = M[007300];
    Let b4 = M[007301];
    PushFrame;
    PushReturnAddress 072484;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 14;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 072519
  }
LocReturn 072484:
  PushStack call_result;
  TraceOperation 072491 (Jz (Var Sp) (Branch T (Dloc 072519)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 072519
  } else {
    TraceOperation 072494 (Jz (Var (Global 114)) (Branch T (Dloc 072503)));
    Let b2 = M[007434];
    Let b3 = M[007435];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 072503
    } else {
      TraceOperation 072497 (CallN (Floc 098228) [Con 18120]);
      PushFrame;
      PushReturnAddress 072497;
      SetLocal 1 18120;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  }
LocReturn 072497:
  Jump: 072503
LocOp 072503:
  TraceOperation 072503 (Je [Var (Global 37),Var (Global 47)] (Branch F (Dloc 072516)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007300];
  Let b4 = M[007301];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 072507 (Call (Floc 041040) [Con 66,Con 1,Var (Global 47)] Sp);
    Let b5 = M[007300];
    Let b6 = M[007301];
    PushFrame;
    PushReturnAddress 072507;
    SetLocal 1 66;
    SetLocal 2 1;
    SetLocal 3 MakeHiLo(b5,b6);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  } else {
    Jump: 072516
  }
LocReturn 072507:
  PushStack call_result;
  TraceOperation 072515 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 072516:
  TraceOperation 072516 (Jump 072530);
  Jump: 072530
LocOp 072519:
  TraceOperation 072519 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 072530)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 072523 (CallN (Floc 098228) [Con 18120,Con 1]);
    PushFrame;
    PushReturnAddress 072523;
    SetLocal 1 18120;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 072530
  }
LocReturn 072523:
  Jump: 072530
LocOp 072530:
  TraceOperation 072530 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 072532:
  MakeRoutineFrame 0;
  Jump: 072533
LocOp 072533:
  TraceOperation 072533 (Jz (Var (Global 36)) (Branch F (Dloc 072564)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 072536 (Call (Floc 026172) [Var (Global 47),Con 14] Sp);
    Let b3 = M[007300];
    Let b4 = M[007301];
    PushFrame;
    PushReturnAddress 072536;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 14;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 072564
  }
LocReturn 072536:
  PushStack call_result;
  TraceOperation 072543 (Jz (Var Sp) (Branch T (Dloc 072564)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 072564
  } else {
    TraceOperation 072546 (Jz (Var (Global 114)) (Branch T (Dloc 072555)));
    Let b2 = M[007434];
    Let b3 = M[007435];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 072555
    } else {
      TraceOperation 072549 (CallN (Floc 098228) [Con 18133]);
      PushFrame;
      PushReturnAddress 072549;
      SetLocal 1 18133;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  }
LocReturn 072549:
  Jump: 072555
LocOp 072555:
  TraceOperation 072555 (Call (Floc 041040) [Con 66,Con 2,Var (Global 47)] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 072555;
  SetLocal 1 66;
  SetLocal 2 2;
  SetLocal 3 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041041
LocReturn 072555:
  PushStack call_result;
  TraceOperation 072563 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 072564:
  TraceOperation 072564 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 072575)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 072568 (CallN (Floc 098228) [Con 18133,Con 1]);
    PushFrame;
    PushReturnAddress 072568;
    SetLocal 1 18133;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 072575
  }
LocReturn 072568:
  Jump: 072575
LocOp 072575:
  TraceOperation 072575 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 072576:
  MakeRoutineFrame 0;
  Jump: 072577
LocOp 072577:
  TraceOperation 072577 (Jz (Var (Global 36)) (Branch F (Dloc 072608)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 072580 (Call (Floc 026172) [Var (Global 47),Con 14] Sp);
    Let b3 = M[007300];
    Let b4 = M[007301];
    PushFrame;
    PushReturnAddress 072580;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 14;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 072608
  }
LocReturn 072580:
  PushStack call_result;
  TraceOperation 072587 (Jz (Var Sp) (Branch T (Dloc 072608)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 072608
  } else {
    TraceOperation 072590 (Jz (Var (Global 114)) (Branch T (Dloc 072599)));
    Let b2 = M[007434];
    Let b3 = M[007435];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 072599
    } else {
      TraceOperation 072593 (CallN (Floc 098228) [Con 18144]);
      PushFrame;
      PushReturnAddress 072593;
      SetLocal 1 18144;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  }
LocReturn 072593:
  Jump: 072599
LocOp 072599:
  TraceOperation 072599 (Call (Floc 041040) [Con 9,Con 1,Var (Global 47)] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 072599;
  SetLocal 1 9;
  SetLocal 2 1;
  SetLocal 3 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041041
LocReturn 072599:
  PushStack call_result;
  TraceOperation 072607 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 072608:
  TraceOperation 072608 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 072619)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 072612 (CallN (Floc 098228) [Con 18144,Con 1]);
    PushFrame;
    PushReturnAddress 072612;
    SetLocal 1 18144;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 072619
  }
LocReturn 072612:
  Jump: 072619
LocOp 072619:
  TraceOperation 072619 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 072620:
  MakeRoutineFrame 0;
  Jump: 072621
LocOp 072621:
  TraceOperation 072621 (Jz (Var (Global 36)) (Branch F (Dloc 072665)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 072624 (Call (Floc 026172) [Var (Global 47),Con 14] Sp);
    Let b3 = M[007300];
    Let b4 = M[007301];
    PushFrame;
    PushReturnAddress 072624;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 14;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 072665
  }
LocReturn 072624:
  PushStack call_result;
  TraceOperation 072631 (Jz (Var Sp) (Branch T (Dloc 072665)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 072665
  } else {
    TraceOperation 072634 (Jz (Var (Global 114)) (Branch T (Dloc 072643)));
    Let b2 = M[007434];
    Let b3 = M[007435];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 072643
    } else {
      TraceOperation 072637 (CallN (Floc 098228) [Con 18155]);
      PushFrame;
      PushReturnAddress 072637;
      SetLocal 1 18155;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  }
LocReturn 072637:
  Jump: 072643
LocOp 072643:
  TraceOperation 072643 (Je [Var (Global 37),Var (Global 47)] (Branch F (Dloc 072662)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007300];
  Let b4 = M[007301];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 072647 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 072662)));
    Let b5 = M[007280];
    Let b6 = M[007281];
    Let b7 = M[007268];
    Let b8 = M[007269];
    if (Equal(MakeHiLo(b5,b6),MakeHiLo(b7,b8))) {
      TraceOperation 072651 (CallN (Floc 076180) [Con 0,Var (Global 31),Con 28,Con 0,Con 0]);
      Let b9 = M[007268];
      Let b10 = M[007269];
      PushFrame;
      PushReturnAddress 072651;
      SetLocal 1 0;
      SetLocal 2 MakeHiLo(b9,b10);
      SetLocal 3 28;
      SetLocal 4 0;
      SetLocal 5 0;
      MakeRoutineFrame 9;
      SetLocal 9 0;
      SetLocal 8 0;
      SetLocal 7 0;
      SetLocal 6 0;
      Jump: 076181
    } else {
      Jump: 072662
    }
  } else {
    Jump: 072662
  }
LocReturn 072651:
  TraceOperation 072661 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 072662:
  TraceOperation 072662 (Jump 072676);
  Jump: 072676
LocOp 072665:
  TraceOperation 072665 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 072676)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 072669 (CallN (Floc 098228) [Con 18155,Con 1]);
    PushFrame;
    PushReturnAddress 072669;
    SetLocal 1 18155;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 072676
  }
LocReturn 072669:
  Jump: 072676
LocOp 072676:
  TraceOperation 072676 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 072680:
  MakeRoutineFrame 0;
  Jump: 072681
LocOp 072681:
  TraceOperation 072681 (Jz (Var (Global 36)) (Branch F (Dloc 072714)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 072684 (Call (Floc 026172) [Var (Global 47),Con 14] Sp);
    Let b3 = M[007300];
    Let b4 = M[007301];
    PushFrame;
    PushReturnAddress 072684;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 14;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 072714
  }
LocReturn 072684:
  PushStack call_result;
  TraceOperation 072691 (Jz (Var Sp) (Branch T (Dloc 072714)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 072714
  } else {
    TraceOperation 072694 (Jz (Var (Global 114)) (Branch T (Dloc 072703)));
    Let b2 = M[007434];
    Let b3 = M[007435];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 072703
    } else {
      TraceOperation 072697 (CallN (Floc 098228) [Con 18170]);
      PushFrame;
      PushReturnAddress 072697;
      SetLocal 1 18170;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  }
LocReturn 072697:
  Jump: 072703
LocOp 072703:
  TraceOperation 072703 (CallN (Floc 076180) [Con 1,Var (Global 47),Con 25,Var (Global 48),Var (Global 37)]);
  Let b1 = M[007300];
  Let b2 = M[007301];
  Let b3 = M[007302];
  Let b4 = M[007303];
  Let b5 = M[007280];
  Let b6 = M[007281];
  PushFrame;
  PushReturnAddress 072703;
  SetLocal 1 1;
  SetLocal 2 MakeHiLo(b1,b2);
  SetLocal 3 25;
  SetLocal 4 MakeHiLo(b3,b4);
  SetLocal 5 MakeHiLo(b5,b6);
  MakeRoutineFrame 9;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  Jump: 076181
LocReturn 072703:
  TraceOperation 072713 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 072714:
  TraceOperation 072714 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 072725)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 072718 (CallN (Floc 098228) [Con 18170,Con 1]);
    PushFrame;
    PushReturnAddress 072718;
    SetLocal 1 18170;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 072725
  }
LocReturn 072718:
  Jump: 072725
LocOp 072725:
  TraceOperation 072725 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 072728:
  MakeRoutineFrame 0;
  Jump: 072729
LocOp 072729:
  TraceOperation 072729 (Jz (Var (Global 36)) (Branch F (Dloc 072764)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 072732 (Jz (Var (Global 114)) (Branch T (Dloc 072741)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 072741
    } else {
      TraceOperation 072735 (CallN (Floc 098228) [Con 18182]);
      PushFrame;
      PushReturnAddress 072735;
      SetLocal 1 18182;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 072764
  }
LocReturn 072735:
  Jump: 072741
LocOp 072741:
  TraceOperation 072741 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 072754)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 072745 (Call (Floc 041040) [Con 72,Con 1,Var (Global 37)] Sp);
    Let b5 = M[007280];
    Let b6 = M[007281];
    PushFrame;
    PushReturnAddress 072745;
    SetLocal 1 72;
    SetLocal 2 1;
    SetLocal 3 MakeHiLo(b5,b6);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  } else {
    Jump: 072754
  }
LocReturn 072745:
  PushStack call_result;
  TraceOperation 072753 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 072754:
  TraceOperation 072754 (CallN (Floc 041060) [Con 72,Con 2,Var (Global 47)]);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 072754;
  SetLocal 1 72;
  SetLocal 2 2;
  SetLocal 3 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041061
LocReturn 072754:
  TraceOperation 072761 (Jump 072775);
  Jump: 072775
LocOp 072764:
  TraceOperation 072764 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 072775)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 072768 (CallN (Floc 098228) [Con 18182,Con 1]);
    PushFrame;
    PushReturnAddress 072768;
    SetLocal 1 18182;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 072775
  }
LocReturn 072768:
  Jump: 072775
LocOp 072775:
  TraceOperation 072775 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 072776:
  MakeRoutineFrame 0;
  Jump: 072777
LocOp 072777:
  TraceOperation 072777 (Jz (Var (Global 36)) (Branch F (Dloc 072816)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 072780 (Jz (Var (Global 114)) (Branch T (Dloc 072789)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 072789
    } else {
      TraceOperation 072783 (CallN (Floc 098228) [Con 18194]);
      PushFrame;
      PushReturnAddress 072783;
      SetLocal 1 18194;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 072816
  }
LocReturn 072783:
  Jump: 072789
LocOp 072789:
  TraceOperation 072789 (Je [Var (Global 47),Var (Global 37)] (Branch F (Dloc 072815)));
  Let b1 = M[007300];
  Let b2 = M[007301];
  Let b3 = M[007280];
  Let b4 = M[007281];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 072793 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 072807)));
    Let b5 = M[007280];
    Let b6 = M[007281];
    Let b7 = M[007268];
    Let b8 = M[007269];
    if (Equal(MakeHiLo(b5,b6),MakeHiLo(b7,b8))) {
      TraceOperation 072797 (CallN (Floc 041040) [Con 70,Con 3,Var (Global 47)]);
      Let b9 = M[007300];
      Let b10 = M[007301];
      PushFrame;
      PushReturnAddress 072797;
      SetLocal 1 70;
      SetLocal 2 3;
      SetLocal 3 MakeHiLo(b9,b10);
      MakeRoutineFrame 4;
      SetLocal 4 0;
      Jump: 041041
    } else {
      Jump: 072807
    }
  } else {
    Jump: 072815
  }
LocReturn 072797:
  TraceOperation 072804 (Jump 072814);
  Jump: 072814
LocOp 072807:
  TraceOperation 072807 (CallN (Floc 041060) [Con 70,Con 4,Var (Global 47)]);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 072807;
  SetLocal 1 70;
  SetLocal 2 4;
  SetLocal 3 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041061
LocReturn 072807:
  Jump: 072814
LocOp 072814:
  TraceOperation 072814 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 072815:
  TraceOperation 072815 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
LocOp 072816:
  TraceOperation 072816 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 072827)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 072820 (CallN (Floc 098228) [Con 18194,Con 1]);
    PushFrame;
    PushReturnAddress 072820;
    SetLocal 1 18194;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 072827
  }
LocReturn 072820:
  Jump: 072827
LocOp 072827:
  TraceOperation 072827 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 072828:
  MakeRoutineFrame 0;
  Jump: 072829
LocOp 072829:
  TraceOperation 072829 (Jz (Var (Global 36)) (Branch F (Dloc 072888)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 072832 (Jz (Var (Global 114)) (Branch T (Dloc 072841)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 072841
    } else {
      TraceOperation 072835 (CallN (Floc 098228) [Con 18207]);
      PushFrame;
      PushReturnAddress 072835;
      SetLocal 1 18207;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 072888
  }
LocReturn 072835:
  Jump: 072841
LocOp 072841:
  TraceOperation 072841 (Call (Floc 026172) [Var (Global 47),Con 20] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 072841;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 20;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 072841:
  PushStack call_result;
  TraceOperation 072848 (Jz (Var Sp) (Branch T (Dloc 072887)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 072887
  } else {
    TraceOperation 072851 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 072865)));
    Let b2 = M[007280];
    Let b3 = M[007281];
    Let b4 = M[007268];
    Let b5 = M[007269];
    if (Equal(MakeHiLo(b2,b3),MakeHiLo(b4,b5))) {
      TraceOperation 072855 (CallN (Floc 041040) [Con 70,Con 1,Var (Global 47)]);
      Let b6 = M[007300];
      Let b7 = M[007301];
      PushFrame;
      PushReturnAddress 072855;
      SetLocal 1 70;
      SetLocal 2 1;
      SetLocal 3 MakeHiLo(b6,b7);
      MakeRoutineFrame 4;
      SetLocal 4 0;
      Jump: 041041
    } else {
      Jump: 072865
    }
  }
LocReturn 072855:
  TraceOperation 072862 (Jump 072886);
  Jump: 072886
LocOp 072865:
  TraceOperation 072865 (Je [Var (Global 47),Var (Global 31)] (Branch F (Dloc 072879)));
  Let b1 = M[007300];
  Let b2 = M[007301];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 072869 (CallN (Floc 041060) [Con 70,Con 5,Var (Global 47)]);
    Let b5 = M[007300];
    Let b6 = M[007301];
    PushFrame;
    PushReturnAddress 072869;
    SetLocal 1 70;
    SetLocal 2 5;
    SetLocal 3 MakeHiLo(b5,b6);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041061
  } else {
    Jump: 072879
  }
LocReturn 072869:
  TraceOperation 072876 (Jump 072886);
  Jump: 072886
LocOp 072879:
  TraceOperation 072879 (CallN (Floc 041060) [Con 70,Con 6,Var (Global 47)]);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 072879;
  SetLocal 1 70;
  SetLocal 2 6;
  SetLocal 3 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041061
LocReturn 072879:
  Jump: 072886
LocOp 072886:
  TraceOperation 072886 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 072887:
  TraceOperation 072887 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
LocOp 072888:
  TraceOperation 072888 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 072899)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 072892 (CallN (Floc 098228) [Con 18207,Con 1]);
    PushFrame;
    PushReturnAddress 072892;
    SetLocal 1 18207;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 072899
  }
LocReturn 072892:
  Jump: 072899
LocOp 072899:
  TraceOperation 072899 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 072900:
  MakeRoutineFrame 0;
  Jump: 072901
LocOp 072901:
  TraceOperation 072901 (Jz (Var (Global 36)) (Branch F (Dloc 072937)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 072904 (Jz (Var (Global 114)) (Branch T (Dloc 072913)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 072913
    } else {
      TraceOperation 072907 (CallN (Floc 098228) [Con 18225]);
      PushFrame;
      PushReturnAddress 072907;
      SetLocal 1 18225;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 072937
  }
LocReturn 072907:
  Jump: 072913
LocOp 072913:
  TraceOperation 072913 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 072927)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 072917 (CallN (Floc 041040) [Con 70,Con 2,Var (Global 47)]);
    Let b5 = M[007300];
    Let b6 = M[007301];
    PushFrame;
    PushReturnAddress 072917;
    SetLocal 1 70;
    SetLocal 2 2;
    SetLocal 3 MakeHiLo(b5,b6);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  } else {
    Jump: 072927
  }
LocReturn 072917:
  TraceOperation 072924 (Jump 072934);
  Jump: 072934
LocOp 072927:
  TraceOperation 072927 (CallN (Floc 041060) [Con 70,Con 6,Var (Global 47)]);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 072927;
  SetLocal 1 70;
  SetLocal 2 6;
  SetLocal 3 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041061
LocReturn 072927:
  Jump: 072934
LocOp 072934:
  TraceOperation 072934 (Jump 072948);
  Jump: 072948
LocOp 072937:
  TraceOperation 072937 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 072948)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 072941 (CallN (Floc 098228) [Con 18225,Con 1]);
    PushFrame;
    PushReturnAddress 072941;
    SetLocal 1 18225;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 072948
  }
LocReturn 072941:
  Jump: 072948
LocOp 072948:
  TraceOperation 072948 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 072952:
  MakeRoutineFrame 0;
  Jump: 072953
LocOp 072953:
  TraceOperation 072953 (Jz (Var (Global 36)) (Branch F (Dloc 072987)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 072956 (Jz (Var (Global 114)) (Branch T (Dloc 072965)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 072965
    } else {
      TraceOperation 072959 (CallN (Floc 098228) [Con 18238]);
      PushFrame;
      PushReturnAddress 072959;
      SetLocal 1 18238;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 072987
  }
LocReturn 072959:
  Jump: 072965
LocOp 072965:
  TraceOperation 072965 (Call (Floc 102384) [Var (Global 47)] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 072965;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 1;
  Jump: 102385
LocReturn 072965:
  PushStack call_result;
  TraceOperation 072971 (Je [Var (Global 37),Var Sp] (Branch T (Dloc 072984)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  PopStack popped3;
  if (Equal(MakeHiLo(b1,b2),popped3)) {
    Jump: 072984
  } else {
    TraceOperation 072975 (Call (Floc 041040) [Con 75,Con 1,Var (Global 47)] Sp);
    Let b4 = M[007300];
    Let b5 = M[007301];
    PushFrame;
    PushReturnAddress 072975;
    SetLocal 1 75;
    SetLocal 2 1;
    SetLocal 3 MakeHiLo(b4,b5);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  }
LocReturn 072975:
  PushStack call_result;
  TraceOperation 072983 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 072984:
  TraceOperation 072984 (Jump 072998);
  Jump: 072998
LocOp 072987:
  TraceOperation 072987 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 072998)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 072991 (CallN (Floc 098228) [Con 18238,Con 1]);
    PushFrame;
    PushReturnAddress 072991;
    SetLocal 1 18238;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 072998
  }
LocReturn 072991:
  Jump: 072998
LocOp 072998:
  TraceOperation 072998 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 073000:
  MakeRoutineFrame 0;
  Jump: 073001
LocOp 073001:
  TraceOperation 073001 (Jz (Var (Global 36)) (Branch F (Dloc 073037)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 073004 (Jz (Var (Global 114)) (Branch T (Dloc 073013)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 073013
    } else {
      TraceOperation 073007 (CallN (Floc 098228) [Con 18250]);
      PushFrame;
      PushReturnAddress 073007;
      SetLocal 1 18250;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 073037
  }
LocReturn 073007:
  Jump: 073013
LocOp 073013:
  TraceOperation 073013 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 073027)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 073017 (CallN (Floc 041040) [Con 75,Con 2,Var (Global 47)]);
    Let b5 = M[007300];
    Let b6 = M[007301];
    PushFrame;
    PushReturnAddress 073017;
    SetLocal 1 75;
    SetLocal 2 2;
    SetLocal 3 MakeHiLo(b5,b6);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  } else {
    Jump: 073027
  }
LocReturn 073017:
  TraceOperation 073024 (Jump 073034);
  Jump: 073034
LocOp 073027:
  TraceOperation 073027 (CallN (Floc 041060) [Con 75,Con 3,Var (Global 47)]);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 073027;
  SetLocal 1 75;
  SetLocal 2 3;
  SetLocal 3 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041061
LocReturn 073027:
  Jump: 073034
LocOp 073034:
  TraceOperation 073034 (Jump 073048);
  Jump: 073048
LocOp 073037:
  TraceOperation 073037 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 073048)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 073041 (CallN (Floc 098228) [Con 18250,Con 1]);
    PushFrame;
    PushReturnAddress 073041;
    SetLocal 1 18250;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 073048
  }
LocReturn 073041:
  Jump: 073048
LocOp 073048:
  TraceOperation 073048 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 073052:
  MakeRoutineFrame 0;
  Jump: 073053
LocOp 073053:
  TraceOperation 073053 (Jz (Var (Global 36)) (Branch F (Dloc 073087)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 073056 (Jz (Var (Global 114)) (Branch T (Dloc 073065)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 073065
    } else {
      TraceOperation 073059 (CallN (Floc 098228) [Con 18263]);
      PushFrame;
      PushReturnAddress 073059;
      SetLocal 1 18263;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 073087
  }
LocReturn 073059:
  Jump: 073065
LocOp 073065:
  TraceOperation 073065 (Call (Floc 088304) [Var (Global 47),Con 16] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 073065;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 16;
  MakeRoutineFrame 2;
  Jump: 088305
LocReturn 073065:
  PushStack call_result;
  TraceOperation 073072 (Jz (Var Sp) (Branch T (Dloc 073084)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 073084
  } else {
    TraceOperation 073075 (Call (Floc 041040) [Con 44,Con 1,Var (Global 47)] Sp);
    Let b2 = M[007300];
    Let b3 = M[007301];
    PushFrame;
    PushReturnAddress 073075;
    SetLocal 1 44;
    SetLocal 2 1;
    SetLocal 3 MakeHiLo(b2,b3);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  }
LocReturn 073075:
  PushStack call_result;
  TraceOperation 073083 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 073084:
  TraceOperation 073084 (Jump 073098);
  Jump: 073098
LocOp 073087:
  TraceOperation 073087 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 073098)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 073091 (CallN (Floc 098228) [Con 18263,Con 1]);
    PushFrame;
    PushReturnAddress 073091;
    SetLocal 1 18263;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 073098
  }
LocReturn 073091:
  Jump: 073098
LocOp 073098:
  TraceOperation 073098 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 073100:
  MakeRoutineFrame 0;
  Jump: 073101
LocOp 073101:
  TraceOperation 073101 (Jz (Var (Global 36)) (Branch F (Dloc 073135)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 073104 (Jz (Var (Global 114)) (Branch T (Dloc 073113)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 073113
    } else {
      TraceOperation 073107 (CallN (Floc 098228) [Con 18275]);
      PushFrame;
      PushReturnAddress 073107;
      SetLocal 1 18275;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 073135
  }
LocReturn 073107:
  Jump: 073113
LocOp 073113:
  TraceOperation 073113 (Call (Floc 088304) [Var (Global 47),Con 15] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 073113;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 15;
  MakeRoutineFrame 2;
  Jump: 088305
LocReturn 073113:
  PushStack call_result;
  TraceOperation 073120 (Jz (Var Sp) (Branch T (Dloc 073132)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 073132
  } else {
    TraceOperation 073123 (Call (Floc 041040) [Con 44,Con 2,Var (Global 47)] Sp);
    Let b2 = M[007300];
    Let b3 = M[007301];
    PushFrame;
    PushReturnAddress 073123;
    SetLocal 1 44;
    SetLocal 2 2;
    SetLocal 3 MakeHiLo(b2,b3);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  }
LocReturn 073123:
  PushStack call_result;
  TraceOperation 073131 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 073132:
  TraceOperation 073132 (Jump 073146);
  Jump: 073146
LocOp 073135:
  TraceOperation 073135 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 073146)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 073139 (CallN (Floc 098228) [Con 18275,Con 1]);
    PushFrame;
    PushReturnAddress 073139;
    SetLocal 1 18275;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 073146
  }
LocReturn 073139:
  Jump: 073146
LocOp 073146:
  TraceOperation 073146 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 073148:
  MakeRoutineFrame 0;
  Jump: 073149
LocOp 073149:
  TraceOperation 073149 (Jz (Var (Global 36)) (Branch F (Dloc 073183)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 073152 (Jz (Var (Global 114)) (Branch T (Dloc 073161)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 073161
    } else {
      TraceOperation 073155 (CallN (Floc 098228) [Con 18287]);
      PushFrame;
      PushReturnAddress 073155;
      SetLocal 1 18287;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 073183
  }
LocReturn 073155:
  Jump: 073161
LocOp 073161:
  TraceOperation 073161 (Call (Floc 026172) [Var (Global 47),Con 20] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 073161;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 20;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 073161:
  PushStack call_result;
  TraceOperation 073168 (Jz (Var Sp) (Branch T (Dloc 073180)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 073180
  } else {
    TraceOperation 073171 (Call (Floc 041040) [Con 44,Con 4,Var (Global 47)] Sp);
    Let b2 = M[007300];
    Let b3 = M[007301];
    PushFrame;
    PushReturnAddress 073171;
    SetLocal 1 44;
    SetLocal 2 4;
    SetLocal 3 MakeHiLo(b2,b3);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  }
LocReturn 073171:
  PushStack call_result;
  TraceOperation 073179 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 073180:
  TraceOperation 073180 (Jump 073194);
  Jump: 073194
LocOp 073183:
  TraceOperation 073183 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 073194)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 073187 (CallN (Floc 098228) [Con 18287,Con 1]);
    PushFrame;
    PushReturnAddress 073187;
    SetLocal 1 18287;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 073194
  }
LocReturn 073187:
  Jump: 073194
LocOp 073194:
  TraceOperation 073194 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 073196:
  MakeRoutineFrame 0;
  Jump: 073197
LocOp 073197:
  TraceOperation 073197 (Jz (Var (Global 36)) (Branch F (Dloc 073233)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 073200 (Jz (Var (Global 114)) (Branch T (Dloc 073209)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 073209
    } else {
      TraceOperation 073203 (CallN (Floc 098228) [Con 18299]);
      PushFrame;
      PushReturnAddress 073203;
      SetLocal 1 18299;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 073233
  }
LocReturn 073203:
  Jump: 073209
LocOp 073209:
  TraceOperation 073209 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 073223)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 073213 (CallN (Floc 041040) [Con 44,Con 3,Var (Global 47)]);
    Let b5 = M[007300];
    Let b6 = M[007301];
    PushFrame;
    PushReturnAddress 073213;
    SetLocal 1 44;
    SetLocal 2 3;
    SetLocal 3 MakeHiLo(b5,b6);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  } else {
    Jump: 073223
  }
LocReturn 073213:
  TraceOperation 073220 (Jump 073230);
  Jump: 073230
LocOp 073223:
  TraceOperation 073223 (CallN (Floc 041060) [Con 44,Con 5,Var (Global 47)]);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 073223;
  SetLocal 1 44;
  SetLocal 2 5;
  SetLocal 3 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041061
LocReturn 073223:
  Jump: 073230
LocOp 073230:
  TraceOperation 073230 (Jump 073244);
  Jump: 073244
LocOp 073233:
  TraceOperation 073233 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 073244)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 073237 (CallN (Floc 098228) [Con 18299,Con 1]);
    PushFrame;
    PushReturnAddress 073237;
    SetLocal 1 18299;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 073244
  }
LocReturn 073237:
  Jump: 073244
LocOp 073244:
  TraceOperation 073244 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 073248:
  MakeRoutineFrame 0;
  Jump: 073249
LocOp 073249:
  TraceOperation 073249 (Jz (Var (Global 36)) (Branch F (Dloc 073293)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 073252 (Call (Floc 026172) [Var (Global 47),Con 14] Sp);
    Let b3 = M[007300];
    Let b4 = M[007301];
    PushFrame;
    PushReturnAddress 073252;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 14;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 073293
  }
LocReturn 073252:
  PushStack call_result;
  TraceOperation 073259 (Jz (Var Sp) (Branch T (Dloc 073293)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 073293
  } else {
    TraceOperation 073262 (Jz (Var (Global 114)) (Branch T (Dloc 073271)));
    Let b2 = M[007434];
    Let b3 = M[007435];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 073271
    } else {
      TraceOperation 073265 (CallN (Floc 098228) [Con 18312]);
      PushFrame;
      PushReturnAddress 073265;
      SetLocal 1 18312;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  }
LocReturn 073265:
  Jump: 073271
LocOp 073271:
  TraceOperation 073271 (Call (Floc 088304) [Var (Global 47),Con 16] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 073271;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 16;
  MakeRoutineFrame 2;
  Jump: 088305
LocReturn 073271:
  PushStack call_result;
  TraceOperation 073278 (Jz (Var Sp) (Branch T (Dloc 073290)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 073290
  } else {
    TraceOperation 073281 (Call (Floc 041040) [Con 45,Con 1,Var (Global 47)] Sp);
    Let b2 = M[007300];
    Let b3 = M[007301];
    PushFrame;
    PushReturnAddress 073281;
    SetLocal 1 45;
    SetLocal 2 1;
    SetLocal 3 MakeHiLo(b2,b3);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  }
LocReturn 073281:
  PushStack call_result;
  TraceOperation 073289 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 073290:
  TraceOperation 073290 (Jump 073304);
  Jump: 073304
LocOp 073293:
  TraceOperation 073293 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 073304)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 073297 (CallN (Floc 098228) [Con 18312,Con 1]);
    PushFrame;
    PushReturnAddress 073297;
    SetLocal 1 18312;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 073304
  }
LocReturn 073297:
  Jump: 073304
LocOp 073304:
  TraceOperation 073304 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 073308:
  MakeRoutineFrame 0;
  Jump: 073309
LocOp 073309:
  TraceOperation 073309 (Jz (Var (Global 36)) (Branch F (Dloc 073353)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 073312 (Call (Floc 026172) [Var (Global 47),Con 14] Sp);
    Let b3 = M[007300];
    Let b4 = M[007301];
    PushFrame;
    PushReturnAddress 073312;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 14;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 073353
  }
LocReturn 073312:
  PushStack call_result;
  TraceOperation 073319 (Jz (Var Sp) (Branch T (Dloc 073353)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 073353
  } else {
    TraceOperation 073322 (Jz (Var (Global 114)) (Branch T (Dloc 073331)));
    Let b2 = M[007434];
    Let b3 = M[007435];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 073331
    } else {
      TraceOperation 073325 (CallN (Floc 098228) [Con 18327]);
      PushFrame;
      PushReturnAddress 073325;
      SetLocal 1 18327;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  }
LocReturn 073325:
  Jump: 073331
LocOp 073331:
  TraceOperation 073331 (Call (Floc 088304) [Var (Global 47),Con 15] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 073331;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 15;
  MakeRoutineFrame 2;
  Jump: 088305
LocReturn 073331:
  PushStack call_result;
  TraceOperation 073338 (Jz (Var Sp) (Branch T (Dloc 073350)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 073350
  } else {
    TraceOperation 073341 (Call (Floc 041040) [Con 45,Con 2,Var (Global 47)] Sp);
    Let b2 = M[007300];
    Let b3 = M[007301];
    PushFrame;
    PushReturnAddress 073341;
    SetLocal 1 45;
    SetLocal 2 2;
    SetLocal 3 MakeHiLo(b2,b3);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  }
LocReturn 073341:
  PushStack call_result;
  TraceOperation 073349 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 073350:
  TraceOperation 073350 (Jump 073364);
  Jump: 073364
LocOp 073353:
  TraceOperation 073353 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 073364)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 073357 (CallN (Floc 098228) [Con 18327,Con 1]);
    PushFrame;
    PushReturnAddress 073357;
    SetLocal 1 18327;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 073364
  }
LocReturn 073357:
  Jump: 073364
LocOp 073364:
  TraceOperation 073364 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 073368:
  MakeRoutineFrame 0;
  Jump: 073369
LocOp 073369:
  TraceOperation 073369 (Jz (Var (Global 36)) (Branch F (Dloc 073413)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 073372 (Call (Floc 026172) [Var (Global 47),Con 14] Sp);
    Let b3 = M[007300];
    Let b4 = M[007301];
    PushFrame;
    PushReturnAddress 073372;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 14;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 073413
  }
LocReturn 073372:
  PushStack call_result;
  TraceOperation 073379 (Jz (Var Sp) (Branch T (Dloc 073413)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 073413
  } else {
    TraceOperation 073382 (Jz (Var (Global 114)) (Branch T (Dloc 073391)));
    Let b2 = M[007434];
    Let b3 = M[007435];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 073391
    } else {
      TraceOperation 073385 (CallN (Floc 098228) [Con 18342]);
      PushFrame;
      PushReturnAddress 073385;
      SetLocal 1 18342;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  }
LocReturn 073385:
  Jump: 073391
LocOp 073391:
  TraceOperation 073391 (Call (Floc 026172) [Var (Global 47),Con 20] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 073391;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 20;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 073391:
  PushStack call_result;
  TraceOperation 073398 (Jz (Var Sp) (Branch T (Dloc 073410)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 073410
  } else {
    TraceOperation 073401 (Call (Floc 041040) [Con 45,Con 4,Var (Global 47)] Sp);
    Let b2 = M[007300];
    Let b3 = M[007301];
    PushFrame;
    PushReturnAddress 073401;
    SetLocal 1 45;
    SetLocal 2 4;
    SetLocal 3 MakeHiLo(b2,b3);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  }
LocReturn 073401:
  PushStack call_result;
  TraceOperation 073409 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 073410:
  TraceOperation 073410 (Jump 073424);
  Jump: 073424
LocOp 073413:
  TraceOperation 073413 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 073424)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 073417 (CallN (Floc 098228) [Con 18342,Con 1]);
    PushFrame;
    PushReturnAddress 073417;
    SetLocal 1 18342;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 073424
  }
LocReturn 073417:
  Jump: 073424
LocOp 073424:
  TraceOperation 073424 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 073428:
  MakeRoutineFrame 0;
  Jump: 073429
LocOp 073429:
  TraceOperation 073429 (Jz (Var (Global 36)) (Branch F (Dloc 073475)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 073432 (Call (Floc 026172) [Var (Global 47),Con 14] Sp);
    Let b3 = M[007300];
    Let b4 = M[007301];
    PushFrame;
    PushReturnAddress 073432;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 14;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 073475
  }
LocReturn 073432:
  PushStack call_result;
  TraceOperation 073439 (Jz (Var Sp) (Branch T (Dloc 073475)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 073475
  } else {
    TraceOperation 073442 (Jz (Var (Global 114)) (Branch T (Dloc 073451)));
    Let b2 = M[007434];
    Let b3 = M[007435];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 073451
    } else {
      TraceOperation 073445 (CallN (Floc 098228) [Con 18357]);
      PushFrame;
      PushReturnAddress 073445;
      SetLocal 1 18357;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  }
LocReturn 073445:
  Jump: 073451
LocOp 073451:
  TraceOperation 073451 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 073465)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 073455 (CallN (Floc 041040) [Con 45,Con 3,Var (Global 47)]);
    Let b5 = M[007300];
    Let b6 = M[007301];
    PushFrame;
    PushReturnAddress 073455;
    SetLocal 1 45;
    SetLocal 2 3;
    SetLocal 3 MakeHiLo(b5,b6);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  } else {
    Jump: 073465
  }
LocReturn 073455:
  TraceOperation 073462 (Jump 073472);
  Jump: 073472
LocOp 073465:
  TraceOperation 073465 (CallN (Floc 041060) [Con 45,Con 6,Var (Global 47)]);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 073465;
  SetLocal 1 45;
  SetLocal 2 6;
  SetLocal 3 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041061
LocReturn 073465:
  Jump: 073472
LocOp 073472:
  TraceOperation 073472 (Jump 073486);
  Jump: 073486
LocOp 073475:
  TraceOperation 073475 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 073486)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 073479 (CallN (Floc 098228) [Con 18357,Con 1]);
    PushFrame;
    PushReturnAddress 073479;
    SetLocal 1 18357;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 073486
  }
LocReturn 073479:
  Jump: 073486
LocOp 073486:
  TraceOperation 073486 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 073488:
  MakeRoutineFrame 0;
  Jump: 073489
LocOp 073489:
  TraceOperation 073489 (Jz (Var (Global 36)) (Branch F (Dloc 073523)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 073492 (Jz (Var (Global 114)) (Branch T (Dloc 073501)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 073501
    } else {
      TraceOperation 073495 (CallN (Floc 098228) [Con 18372]);
      PushFrame;
      PushReturnAddress 073495;
      SetLocal 1 18372;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 073523
  }
LocReturn 073495:
  Jump: 073501
LocOp 073501:
  TraceOperation 073501 (Call (Floc 088304) [Var (Global 47),Con 16] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 073501;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 16;
  MakeRoutineFrame 2;
  Jump: 088305
LocReturn 073501:
  PushStack call_result;
  TraceOperation 073508 (Jz (Var Sp) (Branch T (Dloc 073520)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 073520
  } else {
    TraceOperation 073511 (Call (Floc 041040) [Con 46,Con 1,Var (Global 47)] Sp);
    Let b2 = M[007300];
    Let b3 = M[007301];
    PushFrame;
    PushReturnAddress 073511;
    SetLocal 1 46;
    SetLocal 2 1;
    SetLocal 3 MakeHiLo(b2,b3);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  }
LocReturn 073511:
  PushStack call_result;
  TraceOperation 073519 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 073520:
  TraceOperation 073520 (Jump 073534);
  Jump: 073534
LocOp 073523:
  TraceOperation 073523 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 073534)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 073527 (CallN (Floc 098228) [Con 18372,Con 1]);
    PushFrame;
    PushReturnAddress 073527;
    SetLocal 1 18372;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 073534
  }
LocReturn 073527:
  Jump: 073534
LocOp 073534:
  TraceOperation 073534 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 073536:
  MakeRoutineFrame 0;
  Jump: 073537
LocOp 073537:
  TraceOperation 073537 (Jz (Var (Global 36)) (Branch F (Dloc 073571)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 073540 (Jz (Var (Global 114)) (Branch T (Dloc 073549)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 073549
    } else {
      TraceOperation 073543 (CallN (Floc 098228) [Con 18384]);
      PushFrame;
      PushReturnAddress 073543;
      SetLocal 1 18384;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 073571
  }
LocReturn 073543:
  Jump: 073549
LocOp 073549:
  TraceOperation 073549 (Call (Floc 088304) [Var (Global 47),Con 15] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 073549;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 15;
  MakeRoutineFrame 2;
  Jump: 088305
LocReturn 073549:
  PushStack call_result;
  TraceOperation 073556 (Jz (Var Sp) (Branch T (Dloc 073568)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 073568
  } else {
    TraceOperation 073559 (Call (Floc 041040) [Con 46,Con 2,Var (Global 47)] Sp);
    Let b2 = M[007300];
    Let b3 = M[007301];
    PushFrame;
    PushReturnAddress 073559;
    SetLocal 1 46;
    SetLocal 2 2;
    SetLocal 3 MakeHiLo(b2,b3);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  }
LocReturn 073559:
  PushStack call_result;
  TraceOperation 073567 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 073568:
  TraceOperation 073568 (Jump 073582);
  Jump: 073582
LocOp 073571:
  TraceOperation 073571 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 073582)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 073575 (CallN (Floc 098228) [Con 18384,Con 1]);
    PushFrame;
    PushReturnAddress 073575;
    SetLocal 1 18384;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 073582
  }
LocReturn 073575:
  Jump: 073582
LocOp 073582:
  TraceOperation 073582 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 073584:
  MakeRoutineFrame 0;
  Jump: 073585
LocOp 073585:
  TraceOperation 073585 (Jz (Var (Global 36)) (Branch F (Dloc 073619)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 073588 (Jz (Var (Global 114)) (Branch T (Dloc 073597)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 073597
    } else {
      TraceOperation 073591 (CallN (Floc 098228) [Con 18396]);
      PushFrame;
      PushReturnAddress 073591;
      SetLocal 1 18396;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 073619
  }
LocReturn 073591:
  Jump: 073597
LocOp 073597:
  TraceOperation 073597 (Call (Floc 026172) [Var (Global 47),Con 20] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 073597;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 20;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 073597:
  PushStack call_result;
  TraceOperation 073604 (Jz (Var Sp) (Branch T (Dloc 073616)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 073616
  } else {
    TraceOperation 073607 (Call (Floc 041040) [Con 46,Con 4,Var (Global 47)] Sp);
    Let b2 = M[007300];
    Let b3 = M[007301];
    PushFrame;
    PushReturnAddress 073607;
    SetLocal 1 46;
    SetLocal 2 4;
    SetLocal 3 MakeHiLo(b2,b3);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  }
LocReturn 073607:
  PushStack call_result;
  TraceOperation 073615 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 073616:
  TraceOperation 073616 (Jump 073630);
  Jump: 073630
LocOp 073619:
  TraceOperation 073619 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 073630)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 073623 (CallN (Floc 098228) [Con 18396,Con 1]);
    PushFrame;
    PushReturnAddress 073623;
    SetLocal 1 18396;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 073630
  }
LocReturn 073623:
  Jump: 073630
LocOp 073630:
  TraceOperation 073630 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 073632:
  MakeRoutineFrame 0;
  Jump: 073633
LocOp 073633:
  TraceOperation 073633 (Jz (Var (Global 36)) (Branch F (Dloc 073669)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 073636 (Jz (Var (Global 114)) (Branch T (Dloc 073645)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 073645
    } else {
      TraceOperation 073639 (CallN (Floc 098228) [Con 18408]);
      PushFrame;
      PushReturnAddress 073639;
      SetLocal 1 18408;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 073669
  }
LocReturn 073639:
  Jump: 073645
LocOp 073645:
  TraceOperation 073645 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 073659)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 073649 (CallN (Floc 041040) [Con 46,Con 3,Var (Global 47)]);
    Let b5 = M[007300];
    Let b6 = M[007301];
    PushFrame;
    PushReturnAddress 073649;
    SetLocal 1 46;
    SetLocal 2 3;
    SetLocal 3 MakeHiLo(b5,b6);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  } else {
    Jump: 073659
  }
LocReturn 073649:
  TraceOperation 073656 (Jump 073666);
  Jump: 073666
LocOp 073659:
  TraceOperation 073659 (CallN (Floc 041060) [Con 46,Con 7,Var (Global 47)]);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 073659;
  SetLocal 1 46;
  SetLocal 2 7;
  SetLocal 3 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041061
LocReturn 073659:
  Jump: 073666
LocOp 073666:
  TraceOperation 073666 (Jump 073680);
  Jump: 073680
LocOp 073669:
  TraceOperation 073669 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 073680)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 073673 (CallN (Floc 098228) [Con 18408,Con 1]);
    PushFrame;
    PushReturnAddress 073673;
    SetLocal 1 18408;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 073680
  }
LocReturn 073673:
  Jump: 073680
LocOp 073680:
  TraceOperation 073680 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 073684:
  MakeRoutineFrame 0;
  Jump: 073685
LocOp 073685:
  TraceOperation 073685 (Jz (Var (Global 36)) (Branch F (Dloc 073729)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 073688 (Call (Floc 026172) [Var (Global 47),Con 14] Sp);
    Let b3 = M[007300];
    Let b4 = M[007301];
    PushFrame;
    PushReturnAddress 073688;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 14;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 073729
  }
LocReturn 073688:
  PushStack call_result;
  TraceOperation 073695 (Jz (Var Sp) (Branch T (Dloc 073729)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 073729
  } else {
    TraceOperation 073698 (Jz (Var (Global 114)) (Branch T (Dloc 073707)));
    Let b2 = M[007434];
    Let b3 = M[007435];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 073707
    } else {
      TraceOperation 073701 (CallN (Floc 098228) [Con 18421]);
      PushFrame;
      PushReturnAddress 073701;
      SetLocal 1 18421;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  }
LocReturn 073701:
  Jump: 073707
LocOp 073707:
  TraceOperation 073707 (Call (Floc 088304) [Var (Global 47),Con 31] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 073707;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 31;
  MakeRoutineFrame 2;
  Jump: 088305
LocReturn 073707:
  PushStack call_result;
  TraceOperation 073714 (Jz (Var Sp) (Branch F (Dloc 073726)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 073717 (Call (Floc 041040) [Con 47,Con 1,Var (Global 47)] Sp);
    Let b2 = M[007300];
    Let b3 = M[007301];
    PushFrame;
    PushReturnAddress 073717;
    SetLocal 1 47;
    SetLocal 2 1;
    SetLocal 3 MakeHiLo(b2,b3);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  } else {
    Jump: 073726
  }
LocReturn 073717:
  PushStack call_result;
  TraceOperation 073725 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 073726:
  TraceOperation 073726 (Jump 073740);
  Jump: 073740
LocOp 073729:
  TraceOperation 073729 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 073740)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 073733 (CallN (Floc 098228) [Con 18421,Con 1]);
    PushFrame;
    PushReturnAddress 073733;
    SetLocal 1 18421;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 073740
  }
LocReturn 073733:
  Jump: 073740
LocOp 073740:
  TraceOperation 073740 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 073744:
  MakeRoutineFrame 0;
  Jump: 073745
LocOp 073745:
  TraceOperation 073745 (Jz (Var (Global 36)) (Branch F (Dloc 073788)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 073748 (Call (Floc 026172) [Var (Global 47),Con 14] Sp);
    Let b3 = M[007300];
    Let b4 = M[007301];
    PushFrame;
    PushReturnAddress 073748;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 14;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 073788
  }
LocReturn 073748:
  PushStack call_result;
  TraceOperation 073755 (Jz (Var Sp) (Branch T (Dloc 073788)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 073788
  } else {
    TraceOperation 073758 (Jz (Var (Global 114)) (Branch T (Dloc 073767)));
    Let b2 = M[007434];
    Let b3 = M[007435];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 073767
    } else {
      TraceOperation 073761 (CallN (Floc 098228) [Con 18436]);
      PushFrame;
      PushReturnAddress 073761;
      SetLocal 1 18436;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  }
LocReturn 073761:
  Jump: 073767
LocOp 073767:
  TraceOperation 073767 (Call (Floc 109780) [Var (Global 48)] Sp);
  Let b1 = M[007302];
  Let b2 = M[007303];
  PushFrame;
  PushReturnAddress 073767;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 109781
LocReturn 073767:
  PushStack call_result;
  TraceOperation 073773 (Jz (Var Sp) (Branch T (Dloc 073785)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 073785
  } else {
    TraceOperation 073776 (Call (Floc 041040) [Con 47,Con 2,Var (Global 47)] Sp);
    Let b2 = M[007300];
    Let b3 = M[007301];
    PushFrame;
    PushReturnAddress 073776;
    SetLocal 1 47;
    SetLocal 2 2;
    SetLocal 3 MakeHiLo(b2,b3);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  }
LocReturn 073776:
  PushStack call_result;
  TraceOperation 073784 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 073785:
  TraceOperation 073785 (Jump 073799);
  Jump: 073799
LocOp 073788:
  TraceOperation 073788 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 073799)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 073792 (CallN (Floc 098228) [Con 18436,Con 1]);
    PushFrame;
    PushReturnAddress 073792;
    SetLocal 1 18436;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 073799
  }
LocReturn 073792:
  Jump: 073799
LocOp 073799:
  TraceOperation 073799 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 073800:
  MakeRoutineFrame 0;
  Jump: 073801
LocOp 073801:
  TraceOperation 073801 (Jz (Var (Global 36)) (Branch F (Dloc 073843)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 073804 (Call (Floc 026172) [Var (Global 47),Con 14] Sp);
    Let b3 = M[007300];
    Let b4 = M[007301];
    PushFrame;
    PushReturnAddress 073804;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 14;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 073843
  }
LocReturn 073804:
  PushStack call_result;
  TraceOperation 073811 (Jz (Var Sp) (Branch T (Dloc 073843)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 073843
  } else {
    TraceOperation 073814 (Jz (Var (Global 114)) (Branch T (Dloc 073823)));
    Let b2 = M[007434];
    Let b3 = M[007435];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 073823
    } else {
      TraceOperation 073817 (CallN (Floc 098228) [Con 18450]);
      PushFrame;
      PushReturnAddress 073817;
      SetLocal 1 18450;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  }
LocReturn 073817:
  Jump: 073823
LocOp 073823:
  TraceOperation 073823 (Je [Var (Global 48),Con 37] (Branch T (Dloc 073831)));
  Let b1 = M[007302];
  Let b2 = M[007303];
  if (Equal(MakeHiLo(b1,b2),37)) {
    Jump: 073831
  } else {
    TraceOperation 073827 (Je [Var (Global 48),Con 38] (Branch F (Dloc 073840)));
    Let b3 = M[007302];
    Let b4 = M[007303];
    if (Equal(MakeHiLo(b3,b4),38)) {
      Jump: 073831
    } else {
      Jump: 073840
    }
  }
LocOp 073831:
  TraceOperation 073831 (Call (Floc 041040) [Con 47,Con 3,Var (Global 47)] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 073831;
  SetLocal 1 47;
  SetLocal 2 3;
  SetLocal 3 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041041
LocReturn 073831:
  PushStack call_result;
  TraceOperation 073839 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 073840:
  TraceOperation 073840 (Jump 073854);
  Jump: 073854
LocOp 073843:
  TraceOperation 073843 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 073854)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 073847 (CallN (Floc 098228) [Con 18450,Con 1]);
    PushFrame;
    PushReturnAddress 073847;
    SetLocal 1 18450;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 073854
  }
LocReturn 073847:
  Jump: 073854
LocOp 073854:
  TraceOperation 073854 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 073856:
  MakeRoutineFrame 0;
  Jump: 073857
LocOp 073857:
  TraceOperation 073857 (Jz (Var (Global 36)) (Branch F (Dloc 073883)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 073860 (Call (Floc 026172) [Var (Global 47),Con 14] Sp);
    Let b3 = M[007300];
    Let b4 = M[007301];
    PushFrame;
    PushReturnAddress 073860;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 14;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 073883
  }
LocReturn 073860:
  PushStack call_result;
  TraceOperation 073867 (Jz (Var Sp) (Branch T (Dloc 073883)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 073883
  } else {
    TraceOperation 073870 (Jz (Var (Global 114)) (Branch T (Dloc 073879)));
    Let b2 = M[007434];
    Let b3 = M[007435];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 073879
    } else {
      TraceOperation 073873 (CallN (Floc 098228) [Con 18464]);
      PushFrame;
      PushReturnAddress 073873;
      SetLocal 1 18464;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  }
LocReturn 073873:
  Jump: 073879
LocOp 073879:
  TraceOperation 073879 (CallN (Floc 076492) []);
  PushFrame;
  PushReturnAddress 073879;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  SetLocal 1 0;
  Jump: 076493
LocReturn 073879:
  TraceOperation 073882 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 073883:
  TraceOperation 073883 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 073894)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 073887 (CallN (Floc 098228) [Con 18464,Con 1]);
    PushFrame;
    PushReturnAddress 073887;
    SetLocal 1 18464;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 073894
  }
LocReturn 073887:
  Jump: 073894
LocOp 073894:
  TraceOperation 073894 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 073896:
  MakeRoutineFrame 0;
  Jump: 073897
LocOp 073897:
  TraceOperation 073897 (Jz (Var (Global 36)) (Branch F (Dloc 073928)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 073900 (Call (Floc 026172) [Var (Global 47),Con 14] Sp);
    Let b3 = M[007300];
    Let b4 = M[007301];
    PushFrame;
    PushReturnAddress 073900;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 14;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 073928
  }
LocReturn 073900:
  PushStack call_result;
  TraceOperation 073907 (Jz (Var Sp) (Branch T (Dloc 073928)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 073928
  } else {
    TraceOperation 073910 (Jz (Var (Global 114)) (Branch T (Dloc 073919)));
    Let b2 = M[007434];
    Let b3 = M[007435];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 073919
    } else {
      TraceOperation 073913 (CallN (Floc 098228) [Con 18474]);
      PushFrame;
      PushReturnAddress 073913;
      SetLocal 1 18474;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  }
LocReturn 073913:
  Jump: 073919
LocOp 073919:
  TraceOperation 073919 (Call (Floc 041040) [Con 47,Con 1,Var (Global 47)] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 073919;
  SetLocal 1 47;
  SetLocal 2 1;
  SetLocal 3 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041041
LocReturn 073919:
  PushStack call_result;
  TraceOperation 073927 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 073928:
  TraceOperation 073928 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 073939)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 073932 (CallN (Floc 098228) [Con 18474,Con 1]);
    PushFrame;
    PushReturnAddress 073932;
    SetLocal 1 18474;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 073939
  }
LocReturn 073932:
  Jump: 073939
LocOp 073939:
  TraceOperation 073939 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 073940:
  MakeRoutineFrame 0;
  Jump: 073941
LocOp 073941:
  TraceOperation 073941 (Jz (Var (Global 36)) (Branch F (Dloc 073975)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 073944 (Jz (Var (Global 114)) (Branch T (Dloc 073953)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 073953
    } else {
      TraceOperation 073947 (CallN (Floc 098228) [Con 18485]);
      PushFrame;
      PushReturnAddress 073947;
      SetLocal 1 18485;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 073975
  }
LocReturn 073947:
  Jump: 073953
LocOp 073953:
  TraceOperation 073953 (Call (Floc 026172) [Var (Global 47),Con 20] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 073953;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 20;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 073953:
  PushStack call_result;
  TraceOperation 073960 (Jz (Var Sp) (Branch T (Dloc 073972)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 073972
  } else {
    TraceOperation 073963 (Call (Floc 041040) [Con 59,Con 1,Var (Global 47)] Sp);
    Let b2 = M[007300];
    Let b3 = M[007301];
    PushFrame;
    PushReturnAddress 073963;
    SetLocal 1 59;
    SetLocal 2 1;
    SetLocal 3 MakeHiLo(b2,b3);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  }
LocReturn 073963:
  PushStack call_result;
  TraceOperation 073971 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 073972:
  TraceOperation 073972 (Jump 073986);
  Jump: 073986
LocOp 073975:
  TraceOperation 073975 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 073986)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 073979 (CallN (Floc 098228) [Con 18485,Con 1]);
    PushFrame;
    PushReturnAddress 073979;
    SetLocal 1 18485;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 073986
  }
LocReturn 073979:
  Jump: 073986
LocOp 073986:
  TraceOperation 073986 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 073988:
  MakeRoutineFrame 0;
  Jump: 073989
LocOp 073989:
  TraceOperation 073989 (Jz (Var (Global 36)) (Branch F (Dloc 074025)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 073992 (Jz (Var (Global 114)) (Branch T (Dloc 074001)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 074001
    } else {
      TraceOperation 073995 (CallN (Floc 098228) [Con 18497]);
      PushFrame;
      PushReturnAddress 073995;
      SetLocal 1 18497;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 074025
  }
LocReturn 073995:
  Jump: 074001
LocOp 074001:
  TraceOperation 074001 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 074015)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 074005 (CallN (Floc 041040) [Con 59,Con 2,Var (Global 47)]);
    Let b5 = M[007300];
    Let b6 = M[007301];
    PushFrame;
    PushReturnAddress 074005;
    SetLocal 1 59;
    SetLocal 2 2;
    SetLocal 3 MakeHiLo(b5,b6);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 041041
  } else {
    Jump: 074015
  }
LocReturn 074005:
  TraceOperation 074012 (Jump 074022);
  Jump: 074022
LocOp 074015:
  TraceOperation 074015 (CallN (Floc 041060) [Con 59,Con 3,Var (Global 47)]);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 074015;
  SetLocal 1 59;
  SetLocal 2 3;
  SetLocal 3 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041061
LocReturn 074015:
  Jump: 074022
LocOp 074022:
  TraceOperation 074022 (Jump 074036);
  Jump: 074036
LocOp 074025:
  TraceOperation 074025 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 074036)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 074029 (CallN (Floc 098228) [Con 18497,Con 1]);
    PushFrame;
    PushReturnAddress 074029;
    SetLocal 1 18497;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 074036
  }
LocReturn 074029:
  Jump: 074036
LocOp 074036:
  TraceOperation 074036 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 074040:
  MakeRoutineFrame 0;
  Jump: 074041
LocOp 074041:
  TraceOperation 074041 (Jz (Var (Global 36)) (Branch F (Dloc 074062)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 074044 (Jz (Var (Global 114)) (Branch T (Dloc 074053)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 074053
    } else {
      TraceOperation 074047 (CallN (Floc 098228) [Con 18510]);
      PushFrame;
      PushReturnAddress 074047;
      SetLocal 1 18510;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 074062
  }
LocReturn 074047:
  Jump: 074053
LocOp 074053:
  TraceOperation 074053 (Call (Floc 041040) [Con 39,Con 1,Var (Global 47)] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 074053;
  SetLocal 1 39;
  SetLocal 2 1;
  SetLocal 3 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041041
LocReturn 074053:
  PushStack call_result;
  TraceOperation 074061 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 074062:
  TraceOperation 074062 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 074073)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 074066 (CallN (Floc 098228) [Con 18510,Con 1]);
    PushFrame;
    PushReturnAddress 074066;
    SetLocal 1 18510;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 074073
  }
LocReturn 074066:
  Jump: 074073
LocOp 074073:
  TraceOperation 074073 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 074076:
  MakeRoutineFrame 0;
  Jump: 074077
LocOp 074077:
  TraceOperation 074077 (Jz (Var (Global 36)) (Branch F (Dloc 074098)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 074080 (Jz (Var (Global 114)) (Branch T (Dloc 074089)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 074089
    } else {
      TraceOperation 074083 (CallN (Floc 098228) [Con 18519]);
      PushFrame;
      PushReturnAddress 074083;
      SetLocal 1 18519;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 074098
  }
LocReturn 074083:
  Jump: 074089
LocOp 074089:
  TraceOperation 074089 (Call (Floc 041040) [Con 38,Con 1,Var (Global 47)] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 074089;
  SetLocal 1 38;
  SetLocal 2 1;
  SetLocal 3 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041041
LocReturn 074089:
  PushStack call_result;
  TraceOperation 074097 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 074098:
  TraceOperation 074098 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 074109)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 074102 (CallN (Floc 098228) [Con 18519,Con 1]);
    PushFrame;
    PushReturnAddress 074102;
    SetLocal 1 18519;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 074109
  }
LocReturn 074102:
  Jump: 074109
LocOp 074109:
  TraceOperation 074109 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 074112:
  MakeRoutineFrame 0;
  Jump: 074113
LocOp 074113:
  TraceOperation 074113 (Jz (Var (Global 36)) (Branch F (Dloc 074134)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 074116 (Jz (Var (Global 114)) (Branch T (Dloc 074125)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 074125
    } else {
      TraceOperation 074119 (CallN (Floc 098228) [Con 18528]);
      PushFrame;
      PushReturnAddress 074119;
      SetLocal 1 18528;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 074134
  }
LocReturn 074119:
  Jump: 074125
LocOp 074125:
  TraceOperation 074125 (Call (Floc 041040) [Con 11,Con 1,Var (Global 47)] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 074125;
  SetLocal 1 11;
  SetLocal 2 1;
  SetLocal 3 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041041
LocReturn 074125:
  PushStack call_result;
  TraceOperation 074133 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 074134:
  TraceOperation 074134 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 074145)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 074138 (CallN (Floc 098228) [Con 18528,Con 1]);
    PushFrame;
    PushReturnAddress 074138;
    SetLocal 1 18528;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 074145
  }
LocReturn 074138:
  Jump: 074145
LocOp 074145:
  TraceOperation 074145 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 074148:
  MakeRoutineFrame 0;
  Jump: 074149
LocOp 074149:
  TraceOperation 074149 (Jz (Var (Global 36)) (Branch F (Dloc 074170)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 074152 (Jz (Var (Global 114)) (Branch T (Dloc 074161)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 074161
    } else {
      TraceOperation 074155 (CallN (Floc 098228) [Con 18537]);
      PushFrame;
      PushReturnAddress 074155;
      SetLocal 1 18537;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 074170
  }
LocReturn 074155:
  Jump: 074161
LocOp 074161:
  TraceOperation 074161 (Call (Floc 041040) [Con 73,Con 1,Var (Global 47)] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 074161;
  SetLocal 1 73;
  SetLocal 2 1;
  SetLocal 3 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041041
LocReturn 074161:
  PushStack call_result;
  TraceOperation 074169 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 074170:
  TraceOperation 074170 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 074181)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 074174 (CallN (Floc 098228) [Con 18537,Con 1]);
    PushFrame;
    PushReturnAddress 074174;
    SetLocal 1 18537;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 074181
  }
LocReturn 074174:
  Jump: 074181
LocOp 074181:
  TraceOperation 074181 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 074184:
  MakeRoutineFrame 0;
  Jump: 074185
LocOp 074185:
  TraceOperation 074185 (Jz (Var (Global 36)) (Branch F (Dloc 074206)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 074188 (Jz (Var (Global 114)) (Branch T (Dloc 074197)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 074197
    } else {
      TraceOperation 074191 (CallN (Floc 098228) [Con 18546]);
      PushFrame;
      PushReturnAddress 074191;
      SetLocal 1 18546;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 074206
  }
LocReturn 074191:
  Jump: 074197
LocOp 074197:
  TraceOperation 074197 (Call (Floc 041040) [Con 67,Con 1,Var (Global 47)] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 074197;
  SetLocal 1 67;
  SetLocal 2 1;
  SetLocal 3 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041041
LocReturn 074197:
  PushStack call_result;
  TraceOperation 074205 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 074206:
  TraceOperation 074206 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 074217)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 074210 (CallN (Floc 098228) [Con 18546,Con 1]);
    PushFrame;
    PushReturnAddress 074210;
    SetLocal 1 18546;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 074217
  }
LocReturn 074210:
  Jump: 074217
LocOp 074217:
  TraceOperation 074217 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 074220:
  MakeRoutineFrame 0;
  Jump: 074221
LocOp 074221:
  TraceOperation 074221 (Jz (Var (Global 36)) (Branch F (Dloc 074242)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 074224 (Jz (Var (Global 114)) (Branch T (Dloc 074233)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 074233
    } else {
      TraceOperation 074227 (CallN (Floc 098228) [Con 18555]);
      PushFrame;
      PushReturnAddress 074227;
      SetLocal 1 18555;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 074242
  }
LocReturn 074227:
  Jump: 074233
LocOp 074233:
  TraceOperation 074233 (Call (Floc 041040) [Con 57,Con 1,Var (Global 47)] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 074233;
  SetLocal 1 57;
  SetLocal 2 1;
  SetLocal 3 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041041
LocReturn 074233:
  PushStack call_result;
  TraceOperation 074241 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 074242:
  TraceOperation 074242 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 074253)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 074246 (CallN (Floc 098228) [Con 18555,Con 1]);
    PushFrame;
    PushReturnAddress 074246;
    SetLocal 1 18555;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 074253
  }
LocReturn 074246:
  Jump: 074253
LocOp 074253:
  TraceOperation 074253 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 074256:
  MakeRoutineFrame 0;
  Jump: 074257
LocOp 074257:
  TraceOperation 074257 (Jz (Var (Global 36)) (Branch F (Dloc 074278)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 074260 (Jz (Var (Global 114)) (Branch T (Dloc 074269)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 074269
    } else {
      TraceOperation 074263 (CallN (Floc 098228) [Con 18564]);
      PushFrame;
      PushReturnAddress 074263;
      SetLocal 1 18564;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 074278
  }
LocReturn 074263:
  Jump: 074269
LocOp 074269:
  TraceOperation 074269 (Call (Floc 041040) [Con 31,Con 1,Var (Global 47)] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 074269;
  SetLocal 1 31;
  SetLocal 2 1;
  SetLocal 3 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041041
LocReturn 074269:
  PushStack call_result;
  TraceOperation 074277 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 074278:
  TraceOperation 074278 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 074289)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 074282 (CallN (Floc 098228) [Con 18564,Con 1]);
    PushFrame;
    PushReturnAddress 074282;
    SetLocal 1 18564;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 074289
  }
LocReturn 074282:
  Jump: 074289
LocOp 074289:
  TraceOperation 074289 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 074292:
  MakeRoutineFrame 0;
  Jump: 074293
LocOp 074293:
  TraceOperation 074293 (Jz (Var (Global 36)) (Branch F (Dloc 074314)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 074296 (Jz (Var (Global 114)) (Branch T (Dloc 074305)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 074305
    } else {
      TraceOperation 074299 (CallN (Floc 098228) [Con 18573]);
      PushFrame;
      PushReturnAddress 074299;
      SetLocal 1 18573;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 074314
  }
LocReturn 074299:
  Jump: 074305
LocOp 074305:
  TraceOperation 074305 (Call (Floc 041040) [Con 65,Con 1,Var (Global 47)] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 074305;
  SetLocal 1 65;
  SetLocal 2 1;
  SetLocal 3 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041041
LocReturn 074305:
  PushStack call_result;
  TraceOperation 074313 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 074314:
  TraceOperation 074314 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 074325)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 074318 (CallN (Floc 098228) [Con 18573,Con 1]);
    PushFrame;
    PushReturnAddress 074318;
    SetLocal 1 18573;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 074325
  }
LocReturn 074318:
  Jump: 074325
LocOp 074325:
  TraceOperation 074325 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 074328:
  MakeRoutineFrame 0;
  Jump: 074329
LocOp 074329:
  TraceOperation 074329 (Jz (Var (Global 36)) (Branch F (Dloc 074350)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 074332 (Jz (Var (Global 114)) (Branch T (Dloc 074341)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 074341
    } else {
      TraceOperation 074335 (CallN (Floc 098228) [Con 18582]);
      PushFrame;
      PushReturnAddress 074335;
      SetLocal 1 18582;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 074350
  }
LocReturn 074335:
  Jump: 074341
LocOp 074341:
  TraceOperation 074341 (Call (Floc 041040) [Con 16,Con 1,Var (Global 47)] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 074341;
  SetLocal 1 16;
  SetLocal 2 1;
  SetLocal 3 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041041
LocReturn 074341:
  PushStack call_result;
  TraceOperation 074349 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 074350:
  TraceOperation 074350 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 074361)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 074354 (CallN (Floc 098228) [Con 18582,Con 1]);
    PushFrame;
    PushReturnAddress 074354;
    SetLocal 1 18582;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 074361
  }
LocReturn 074354:
  Jump: 074361
LocOp 074361:
  TraceOperation 074361 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 074364:
  MakeRoutineFrame 0;
  Jump: 074365
LocOp 074365:
  TraceOperation 074365 (Jz (Var (Global 36)) (Branch F (Dloc 074386)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 074368 (Jz (Var (Global 114)) (Branch T (Dloc 074377)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 074377
    } else {
      TraceOperation 074371 (CallN (Floc 098228) [Con 18591]);
      PushFrame;
      PushReturnAddress 074371;
      SetLocal 1 18591;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 074386
  }
LocReturn 074371:
  Jump: 074377
LocOp 074377:
  TraceOperation 074377 (Call (Floc 041040) [Con 29,Con 1,Var (Global 47)] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 074377;
  SetLocal 1 29;
  SetLocal 2 1;
  SetLocal 3 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041041
LocReturn 074377:
  PushStack call_result;
  TraceOperation 074385 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 074386:
  TraceOperation 074386 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 074397)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 074390 (CallN (Floc 098228) [Con 18591,Con 1]);
    PushFrame;
    PushReturnAddress 074390;
    SetLocal 1 18591;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 074397
  }
LocReturn 074390:
  Jump: 074397
LocOp 074397:
  TraceOperation 074397 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 074400:
  MakeRoutineFrame 0;
  Jump: 074401
LocOp 074401:
  TraceOperation 074401 (Jz (Var (Global 36)) (Branch F (Dloc 074422)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 074404 (Jz (Var (Global 114)) (Branch T (Dloc 074413)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 074413
    } else {
      TraceOperation 074407 (CallN (Floc 098228) [Con 18600]);
      PushFrame;
      PushReturnAddress 074407;
      SetLocal 1 18600;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 074422
  }
LocReturn 074407:
  Jump: 074413
LocOp 074413:
  TraceOperation 074413 (Call (Floc 041040) [Con 69,Con 1,Var (Global 47)] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 074413;
  SetLocal 1 69;
  SetLocal 2 1;
  SetLocal 3 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041041
LocReturn 074413:
  PushStack call_result;
  TraceOperation 074421 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 074422:
  TraceOperation 074422 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 074433)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 074426 (CallN (Floc 098228) [Con 18600,Con 1]);
    PushFrame;
    PushReturnAddress 074426;
    SetLocal 1 18600;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 074433
  }
LocReturn 074426:
  Jump: 074433
LocOp 074433:
  TraceOperation 074433 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 074436:
  MakeRoutineFrame 0;
  Jump: 074437
LocOp 074437:
  TraceOperation 074437 (Jz (Var (Global 36)) (Branch F (Dloc 074458)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 074440 (Jz (Var (Global 114)) (Branch T (Dloc 074449)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 074449
    } else {
      TraceOperation 074443 (CallN (Floc 098228) [Con 18609]);
      PushFrame;
      PushReturnAddress 074443;
      SetLocal 1 18609;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 074458
  }
LocReturn 074443:
  Jump: 074449
LocOp 074449:
  TraceOperation 074449 (Call (Floc 041040) [Con 18,Con 1,Var (Global 47)] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 074449;
  SetLocal 1 18;
  SetLocal 2 1;
  SetLocal 3 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041041
LocReturn 074449:
  PushStack call_result;
  TraceOperation 074457 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 074458:
  TraceOperation 074458 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 074469)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 074462 (CallN (Floc 098228) [Con 18609,Con 1]);
    PushFrame;
    PushReturnAddress 074462;
    SetLocal 1 18609;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 074469
  }
LocReturn 074462:
  Jump: 074469
LocOp 074469:
  TraceOperation 074469 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 074472:
  MakeRoutineFrame 0;
  Jump: 074473
LocOp 074473:
  TraceOperation 074473 (Jz (Var (Global 36)) (Branch F (Dloc 074494)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 074476 (Jz (Var (Global 114)) (Branch T (Dloc 074485)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 074485
    } else {
      TraceOperation 074479 (CallN (Floc 098228) [Con 18618]);
      PushFrame;
      PushReturnAddress 074479;
      SetLocal 1 18618;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 074494
  }
LocReturn 074479:
  Jump: 074485
LocOp 074485:
  TraceOperation 074485 (Call (Floc 041040) [Con 58,Con 1,Var (Global 47)] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 074485;
  SetLocal 1 58;
  SetLocal 2 1;
  SetLocal 3 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041041
LocReturn 074485:
  PushStack call_result;
  TraceOperation 074493 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 074494:
  TraceOperation 074494 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 074505)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 074498 (CallN (Floc 098228) [Con 18618,Con 1]);
    PushFrame;
    PushReturnAddress 074498;
    SetLocal 1 18618;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 074505
  }
LocReturn 074498:
  Jump: 074505
LocOp 074505:
  TraceOperation 074505 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 074508:
  MakeRoutineFrame 0;
  Jump: 074509
LocOp 074509:
  TraceOperation 074509 (Jz (Var (Global 36)) (Branch F (Dloc 074530)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 074512 (Jz (Var (Global 114)) (Branch T (Dloc 074521)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 074521
    } else {
      TraceOperation 074515 (CallN (Floc 098228) [Con 18627]);
      PushFrame;
      PushReturnAddress 074515;
      SetLocal 1 18627;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 074530
  }
LocReturn 074515:
  Jump: 074521
LocOp 074521:
  TraceOperation 074521 (Call (Floc 041040) [Con 60,Con 1,Var (Global 47)] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 074521;
  SetLocal 1 60;
  SetLocal 2 1;
  SetLocal 3 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041041
LocReturn 074521:
  PushStack call_result;
  TraceOperation 074529 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 074530:
  TraceOperation 074530 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 074541)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 074534 (CallN (Floc 098228) [Con 18627,Con 1]);
    PushFrame;
    PushReturnAddress 074534;
    SetLocal 1 18627;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 074541
  }
LocReturn 074534:
  Jump: 074541
LocOp 074541:
  TraceOperation 074541 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 074544:
  MakeRoutineFrame 0;
  Jump: 074545
LocOp 074545:
  TraceOperation 074545 (Jz (Var (Global 36)) (Branch F (Dloc 074566)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 074548 (Jz (Var (Global 114)) (Branch T (Dloc 074557)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 074557
    } else {
      TraceOperation 074551 (CallN (Floc 098228) [Con 18636]);
      PushFrame;
      PushReturnAddress 074551;
      SetLocal 1 18636;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 074566
  }
LocReturn 074551:
  Jump: 074557
LocOp 074557:
  TraceOperation 074557 (Call (Floc 041040) [Con 37,Con 1,Var (Global 47)] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 074557;
  SetLocal 1 37;
  SetLocal 2 1;
  SetLocal 3 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041041
LocReturn 074557:
  PushStack call_result;
  TraceOperation 074565 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 074566:
  TraceOperation 074566 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 074577)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 074570 (CallN (Floc 098228) [Con 18636,Con 1]);
    PushFrame;
    PushReturnAddress 074570;
    SetLocal 1 18636;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 074577
  }
LocReturn 074570:
  Jump: 074577
LocOp 074577:
  TraceOperation 074577 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 074580:
  MakeRoutineFrame 0;
  Jump: 074581
LocOp 074581:
  TraceOperation 074581 (Jz (Var (Global 36)) (Branch F (Dloc 074602)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 074584 (Jz (Var (Global 114)) (Branch T (Dloc 074593)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 074593
    } else {
      TraceOperation 074587 (CallN (Floc 098228) [Con 18645]);
      PushFrame;
      PushReturnAddress 074587;
      SetLocal 1 18645;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 074602
  }
LocReturn 074587:
  Jump: 074593
LocOp 074593:
  TraceOperation 074593 (Call (Floc 041040) [Con 61,Con 1,Var (Global 47)] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 074593;
  SetLocal 1 61;
  SetLocal 2 1;
  SetLocal 3 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041041
LocReturn 074593:
  PushStack call_result;
  TraceOperation 074601 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 074602:
  TraceOperation 074602 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 074613)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 074606 (CallN (Floc 098228) [Con 18645,Con 1]);
    PushFrame;
    PushReturnAddress 074606;
    SetLocal 1 18645;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 074613
  }
LocReturn 074606:
  Jump: 074613
LocOp 074613:
  TraceOperation 074613 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 074616:
  MakeRoutineFrame 0;
  Jump: 074617
LocOp 074617:
  TraceOperation 074617 (Jz (Var (Global 36)) (Branch F (Dloc 074638)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 074620 (Jz (Var (Global 114)) (Branch T (Dloc 074629)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 074629
    } else {
      TraceOperation 074623 (CallN (Floc 098228) [Con 18654]);
      PushFrame;
      PushReturnAddress 074623;
      SetLocal 1 18654;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 074638
  }
LocReturn 074623:
  Jump: 074629
LocOp 074629:
  TraceOperation 074629 (Call (Floc 041040) [Con 50,Con 1,Var (Global 47)] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 074629;
  SetLocal 1 50;
  SetLocal 2 1;
  SetLocal 3 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041041
LocReturn 074629:
  PushStack call_result;
  TraceOperation 074637 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 074638:
  TraceOperation 074638 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 074649)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 074642 (CallN (Floc 098228) [Con 18654,Con 1]);
    PushFrame;
    PushReturnAddress 074642;
    SetLocal 1 18654;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 074649
  }
LocReturn 074642:
  Jump: 074649
LocOp 074649:
  TraceOperation 074649 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 074652:
  MakeRoutineFrame 0;
  Jump: 074653
LocOp 074653:
  TraceOperation 074653 (Jz (Var (Global 36)) (Branch F (Dloc 074684)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 074656 (Call (Floc 026172) [Var (Global 47),Con 14] Sp);
    Let b3 = M[007300];
    Let b4 = M[007301];
    PushFrame;
    PushReturnAddress 074656;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 14;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 074684
  }
LocReturn 074656:
  PushStack call_result;
  TraceOperation 074663 (Jz (Var Sp) (Branch T (Dloc 074684)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 074684
  } else {
    TraceOperation 074666 (Jz (Var (Global 114)) (Branch T (Dloc 074675)));
    Let b2 = M[007434];
    Let b3 = M[007435];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 074675
    } else {
      TraceOperation 074669 (CallN (Floc 098228) [Con 18663]);
      PushFrame;
      PushReturnAddress 074669;
      SetLocal 1 18663;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  }
LocReturn 074669:
  Jump: 074675
LocOp 074675:
  TraceOperation 074675 (Call (Floc 041040) [Con 53,Con 1,Var (Global 47)] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 074675;
  SetLocal 1 53;
  SetLocal 2 1;
  SetLocal 3 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041041
LocReturn 074675:
  PushStack call_result;
  TraceOperation 074683 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 074684:
  TraceOperation 074684 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 074695)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 074688 (CallN (Floc 098228) [Con 18663,Con 1]);
    PushFrame;
    PushReturnAddress 074688;
    SetLocal 1 18663;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 074695
  }
LocReturn 074688:
  Jump: 074695
LocOp 074695:
  TraceOperation 074695 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 074696:
  MakeRoutineFrame 0;
  Jump: 074697
LocOp 074697:
  TraceOperation 074697 (Jz (Var (Global 36)) (Branch F (Dloc 074718)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 074700 (Jz (Var (Global 114)) (Branch T (Dloc 074709)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 074709
    } else {
      TraceOperation 074703 (CallN (Floc 098228) [Con 18674]);
      PushFrame;
      PushReturnAddress 074703;
      SetLocal 1 18674;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 074718
  }
LocReturn 074703:
  Jump: 074709
LocOp 074709:
  TraceOperation 074709 (Call (Floc 041040) [Con 76,Con 1,Var (Global 47)] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 074709;
  SetLocal 1 76;
  SetLocal 2 1;
  SetLocal 3 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041041
LocReturn 074709:
  PushStack call_result;
  TraceOperation 074717 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 074718:
  TraceOperation 074718 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 074729)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 074722 (CallN (Floc 098228) [Con 18674,Con 1]);
    PushFrame;
    PushReturnAddress 074722;
    SetLocal 1 18674;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 074729
  }
LocReturn 074722:
  Jump: 074729
LocOp 074729:
  TraceOperation 074729 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 074732:
  MakeRoutineFrame 0;
  Jump: 074733
LocOp 074733:
  TraceOperation 074733 (Jz (Var (Global 36)) (Branch F (Dloc 074754)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 074736 (Jz (Var (Global 114)) (Branch T (Dloc 074745)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 074745
    } else {
      TraceOperation 074739 (CallN (Floc 098228) [Con 18683]);
      PushFrame;
      PushReturnAddress 074739;
      SetLocal 1 18683;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 074754
  }
LocReturn 074739:
  Jump: 074745
LocOp 074745:
  TraceOperation 074745 (Call (Floc 041040) [Con 12,Con 1,Var (Global 47)] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 074745;
  SetLocal 1 12;
  SetLocal 2 1;
  SetLocal 3 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041041
LocReturn 074745:
  PushStack call_result;
  TraceOperation 074753 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 074754:
  TraceOperation 074754 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 074765)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 074758 (CallN (Floc 098228) [Con 18683,Con 1]);
    PushFrame;
    PushReturnAddress 074758;
    SetLocal 1 18683;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 074765
  }
LocReturn 074758:
  Jump: 074765
LocOp 074765:
  TraceOperation 074765 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 074768:
  MakeRoutineFrame 0;
  Jump: 074769
LocOp 074769:
  TraceOperation 074769 (Jz (Var (Global 36)) (Branch F (Dloc 074790)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 074772 (Jz (Var (Global 114)) (Branch T (Dloc 074781)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 074781
    } else {
      TraceOperation 074775 (CallN (Floc 098228) [Con 18692]);
      PushFrame;
      PushReturnAddress 074775;
      SetLocal 1 18692;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 074790
  }
LocReturn 074775:
  Jump: 074781
LocOp 074781:
  TraceOperation 074781 (Call (Floc 041040) [Con 55,Con 1,Var (Global 47)] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 074781;
  SetLocal 1 55;
  SetLocal 2 1;
  SetLocal 3 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041041
LocReturn 074781:
  PushStack call_result;
  TraceOperation 074789 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 074790:
  TraceOperation 074790 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 074801)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 074794 (CallN (Floc 098228) [Con 18692,Con 1]);
    PushFrame;
    PushReturnAddress 074794;
    SetLocal 1 18692;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 074801
  }
LocReturn 074794:
  Jump: 074801
LocOp 074801:
  TraceOperation 074801 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 074804:
  MakeRoutineFrame 0;
  Jump: 074805
LocOp 074805:
  TraceOperation 074805 (Jz (Var (Global 36)) (Branch F (Dloc 074826)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 074808 (Jz (Var (Global 114)) (Branch T (Dloc 074817)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 074817
    } else {
      TraceOperation 074811 (CallN (Floc 098228) [Con 18701]);
      PushFrame;
      PushReturnAddress 074811;
      SetLocal 1 18701;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 074826
  }
LocReturn 074811:
  Jump: 074817
LocOp 074817:
  TraceOperation 074817 (Call (Floc 041040) [Con 13,Con 1,Var (Global 47)] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 074817;
  SetLocal 1 13;
  SetLocal 2 1;
  SetLocal 3 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041041
LocReturn 074817:
  PushStack call_result;
  TraceOperation 074825 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 074826:
  TraceOperation 074826 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 074837)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 074830 (CallN (Floc 098228) [Con 18701,Con 1]);
    PushFrame;
    PushReturnAddress 074830;
    SetLocal 1 18701;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 074837
  }
LocReturn 074830:
  Jump: 074837
LocOp 074837:
  TraceOperation 074837 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 074840:
  MakeRoutineFrame 0;
  Jump: 074841
LocOp 074841:
  TraceOperation 074841 (Jz (Var (Global 36)) (Branch F (Dloc 074862)));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 074844 (Jz (Var (Global 114)) (Branch T (Dloc 074853)));
    Let b3 = M[007434];
    Let b4 = M[007435];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 074853
    } else {
      TraceOperation 074847 (CallN (Floc 098228) [Con 18710]);
      PushFrame;
      PushReturnAddress 074847;
      SetLocal 1 18710;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 074862
  }
LocReturn 074847:
  Jump: 074853
LocOp 074853:
  TraceOperation 074853 (Call (Floc 041040) [Con 56,Con 1,Var (Global 47)] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 074853;
  SetLocal 1 56;
  SetLocal 2 1;
  SetLocal 3 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 041041
LocReturn 074853:
  PushStack call_result;
  TraceOperation 074861 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 074862:
  TraceOperation 074862 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 074873)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 074866 (CallN (Floc 098228) [Con 18710,Con 1]);
    PushFrame;
    PushReturnAddress 074866;
    SetLocal 1 18710;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 074873
  }
LocReturn 074866:
  Jump: 074873
LocOp 074873:
  TraceOperation 074873 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 074876:
  MakeRoutineFrame 0;
  Jump: 074877
LocOp 074877:
  TraceOperation 074877 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 074985)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 074882 (Jz (Var (Global 114)) (Branch T (Dloc 074891)));
    Let b5 = M[007434];
    Let b6 = M[007435];
    if (IsZero(MakeHiLo(b5,b6))) {
      Jump: 074891
    } else {
      TraceOperation 074885 (CallN (Floc 098228) [Con 18719]);
      PushFrame;
      PushReturnAddress 074885;
      SetLocal 1 18719;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 074985
  }
LocReturn 074885:
  Jump: 074891
LocOp 074891:
  TraceOperation 074891 (Je [Var (Global 47),Con 47] (Branch T (Dloc 074906)));
  Let b1 = M[007300];
  Let b2 = M[007301];
  if (Equal(MakeHiLo(b1,b2),47)) {
    Jump: 074906
  } else {
    TraceOperation 074895 (Store (Con 20) (Con 1));
    SetByte 007214 0;
    SetByte 007215 1;
    TraceOperation 074898 (CallN (Floc 080952) [Con -31493]);
    PushFrame;
    PushReturnAddress 074898;
    SetLocal 1 -31493;
    MakeRoutineFrame 1;
    Jump: 080953
  }
LocReturn 074898:
  TraceOperation 074904 New_line;
  GamePrint "\n";
  TraceOperation 074905 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 074906:
  TraceOperation 074906 (Call (Floc 102384) [Var (Global 47)] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 074906;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 1;
  Jump: 102385
LocReturn 074906:
  PushStack call_result;
  TraceOperation 074912 (Je [Var (Global 31),Var Sp] (Branch T (Dloc 074931)));
  Let b1 = M[007268];
  Let b2 = M[007269];
  PopStack popped3;
  if (Equal(MakeHiLo(b1,b2),popped3)) {
    Jump: 074931
  } else {
    TraceOperation 074916 (Store (Con 20) (Con 1));
    SetByte 007214 0;
    SetByte 007215 1;
    TraceOperation 074919 (CallN (Floc 080952) [Con -31286]);
    PushFrame;
    PushReturnAddress 074919;
    SetLocal 1 -31286;
    MakeRoutineFrame 1;
    Jump: 080953
  }
LocReturn 074919:
  TraceOperation 074925 (CallN (Floc 081916) [Var (Global 47)]);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 074925;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 081917
LocReturn 074925:
  TraceOperation 074930 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 074931:
  TraceOperation 074931 (Call (Floc 088304) [Var (Global 47),Con 36] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 074931;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 36;
  MakeRoutineFrame 2;
  Jump: 088305
LocReturn 074931:
  PushStack call_result;
  TraceOperation 074938 (Jz (Var Sp) (Branch T (Dloc 074957)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 074957
  } else {
    TraceOperation 074941 (Store (Con 20) (Con 1));
    SetByte 007214 0;
    SetByte 007215 1;
    TraceOperation 074944 (CallN (Floc 081964) [Var (Global 47)]);
    Let b2 = M[007300];
    Let b3 = M[007301];
    PushFrame;
    PushReturnAddress 074944;
    SetLocal 1 MakeHiLo(b2,b3);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 081965
  }
LocReturn 074944:
  TraceOperation 074949 (CallN (Floc 080952) [Con -31934]);
  PushFrame;
  PushReturnAddress 074949;
  SetLocal 1 -31934;
  MakeRoutineFrame 1;
  Jump: 080953
LocReturn 074949:
  TraceOperation 074955 New_line;
  GamePrint "\n";
  TraceOperation 074956 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 074957:
  TraceOperation 074957 (Call (Floc 075824) [Var (Global 47)] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 074957;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 1;
  Jump: 075825
LocReturn 074957:
  PushStack call_result;
  TraceOperation 074963 (Jz (Var Sp) (Branch F (Dloc 074982)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 074966 (Store (Con 20) (Con 1));
    SetByte 007214 0;
    SetByte 007215 1;
    TraceOperation 074969 (CallN (Floc 081964) [Var (Global 47)]);
    Let b2 = M[007300];
    Let b3 = M[007301];
    PushFrame;
    PushReturnAddress 074969;
    SetLocal 1 MakeHiLo(b2,b3);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 081965
  } else {
    Jump: 074982
  }
LocReturn 074969:
  TraceOperation 074974 (CallN (Floc 080952) [Con -31910]);
  PushFrame;
  PushReturnAddress 074974;
  SetLocal 1 -31910;
  MakeRoutineFrame 1;
  Jump: 080953
LocReturn 074974:
  TraceOperation 074980 New_line;
  GamePrint "\n";
  TraceOperation 074981 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 074982:
  TraceOperation 074982 (Jump 074996);
  Jump: 074996
LocOp 074985:
  TraceOperation 074985 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 074996)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 074989 (CallN (Floc 098228) [Con 18719,Con 1]);
    PushFrame;
    PushReturnAddress 074989;
    SetLocal 1 18719;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 074996
  }
LocReturn 074989:
  Jump: 074996
LocOp 074996:
  TraceOperation 074996 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 075000:
  MakeRoutineFrame 0;
  Jump: 075001
LocOp 075001:
  TraceOperation 075001 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 075023)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 075005 (Jz (Var (Global 114)) (Branch T (Dloc 075014)));
    Let b5 = M[007434];
    Let b6 = M[007435];
    if (IsZero(MakeHiLo(b5,b6))) {
      Jump: 075014
    } else {
      TraceOperation 075008 (CallN (Floc 098228) [Con 18750]);
      PushFrame;
      PushReturnAddress 075008;
      SetLocal 1 18750;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 075023
  }
LocReturn 075008:
  Jump: 075014
LocOp 075014:
  TraceOperation 075014 (CallN (Floc 088364) [Var (Global 47),Con 36]);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 075014;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 36;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 088365
LocReturn 075014:
  TraceOperation 075020 (Jump 075034);
  Jump: 075034
LocOp 075023:
  TraceOperation 075023 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 075034)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 075027 (CallN (Floc 098228) [Con 18750,Con 1]);
    PushFrame;
    PushReturnAddress 075027;
    SetLocal 1 18750;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 075034
  }
LocReturn 075027:
  Jump: 075034
LocOp 075034:
  TraceOperation 075034 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 075036:
  MakeRoutineFrame 0;
  Jump: 075037
LocOp 075037:
  TraceOperation 075037 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 075068)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 075041 (Jz (Var (Global 114)) (Branch T (Dloc 075050)));
    Let b5 = M[007434];
    Let b6 = M[007435];
    if (IsZero(MakeHiLo(b5,b6))) {
      Jump: 075050
    } else {
      TraceOperation 075044 (CallN (Floc 098228) [Con 18759]);
      PushFrame;
      PushReturnAddress 075044;
      SetLocal 1 18759;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 075068
  }
LocReturn 075044:
  Jump: 075050
LocOp 075050:
  TraceOperation 075050 (Store (Con 20) (Con 1));
  SetByte 007214 0;
  SetByte 007215 1;
  TraceOperation 075053 (CallN (Floc 081964) [Var (Global 47)]);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 075053;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 081965
LocReturn 075053:
  TraceOperation 075058 (CallN (Floc 080952) [Con -31927]);
  PushFrame;
  PushReturnAddress 075058;
  SetLocal 1 -31927;
  MakeRoutineFrame 1;
  Jump: 080953
LocReturn 075058:
  TraceOperation 075064 New_line;
  GamePrint "\n";
  TraceOperation 075065 (Jump 075079);
  Jump: 075079
LocOp 075068:
  TraceOperation 075068 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 075079)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 075072 (CallN (Floc 098228) [Con 18759,Con 1]);
    PushFrame;
    PushReturnAddress 075072;
    SetLocal 1 18759;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 075079
  }
LocReturn 075072:
  Jump: 075079
LocOp 075079:
  TraceOperation 075079 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 075080:
  MakeRoutineFrame 0;
  Jump: 075081
LocOp 075081:
  TraceOperation 075081 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 075262)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 075086 (Jz (Var (Global 114)) (Branch T (Dloc 075095)));
    Let b5 = M[007434];
    Let b6 = M[007435];
    if (IsZero(MakeHiLo(b5,b6))) {
      Jump: 075095
    } else {
      TraceOperation 075089 (CallN (Floc 098228) [Con 18770]);
      PushFrame;
      PushReturnAddress 075089;
      SetLocal 1 18770;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 075262
  }
LocReturn 075089:
  Jump: 075095
LocOp 075095:
  TraceOperation 075095 (Call (Floc 102384) [Var (Global 47)] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 075095;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 1;
  Jump: 102385
LocReturn 075095:
  PushStack call_result;
  TraceOperation 075101 (Je [Var (Global 31),Var Sp] (Branch T (Dloc 075148)));
  Let b1 = M[007268];
  Let b2 = M[007269];
  PopStack popped3;
  if (Equal(MakeHiLo(b1,b2),popped3)) {
    Jump: 075148
  } else {
    TraceOperation 075105 (Call (Floc 102384) [Var (Global 48)] Sp);
    Let b4 = M[007302];
    Let b5 = M[007303];
    PushFrame;
    PushReturnAddress 075105;
    SetLocal 1 MakeHiLo(b4,b5);
    MakeRoutineFrame 1;
    Jump: 102385
  }
LocReturn 075105:
  PushStack call_result;
  TraceOperation 075111 (Je [Var (Global 31),Var Sp] (Branch T (Dloc 075148)));
  Let b1 = M[007268];
  Let b2 = M[007269];
  PopStack popped3;
  if (Equal(MakeHiLo(b1,b2),popped3)) {
    Jump: 075148
  } else {
    TraceOperation 075115 (Store (Con 20) (Con 1));
    SetByte 007214 0;
    SetByte 007215 1;
    TraceOperation 075118 (CallN (Floc 080952) [Con -31282]);
    PushFrame;
    PushReturnAddress 075118;
    SetLocal 1 -31282;
    MakeRoutineFrame 1;
    Jump: 080953
  }
LocReturn 075118:
  TraceOperation 075124 (CallN (Floc 081916) [Var (Global 47)]);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 075124;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 081917
LocReturn 075124:
  TraceOperation 075129 (CallN (Floc 080952) [Con -31917]);
  PushFrame;
  PushReturnAddress 075129;
  SetLocal 1 -31917;
  MakeRoutineFrame 1;
  Jump: 080953
LocReturn 075129:
  TraceOperation 075135 (CallN (Floc 082048) [Var (Global 48)]);
  Let b1 = M[007302];
  Let b2 = M[007303];
  PushFrame;
  PushReturnAddress 075135;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 082049
LocReturn 075135:
  TraceOperation 075140 (CallN (Floc 080952) [Con -31842]);
  PushFrame;
  PushReturnAddress 075140;
  SetLocal 1 -31842;
  MakeRoutineFrame 1;
  Jump: 080953
LocReturn 075140:
  TraceOperation 075146 New_line;
  GamePrint "\n";
  TraceOperation 075147 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 075148:
  TraceOperation 075148 (Call (Floc 088304) [Var (Global 48),Con 36] Sp);
  Let b1 = M[007302];
  Let b2 = M[007303];
  PushFrame;
  PushReturnAddress 075148;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 36;
  MakeRoutineFrame 2;
  Jump: 088305
LocReturn 075148:
  PushStack call_result;
  TraceOperation 075155 (Jz (Var Sp) (Branch F (Dloc 075208)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 075158 (Store (Con 20) (Con 1));
    SetByte 007214 0;
    SetByte 007215 1;
    TraceOperation 075161 (CallN (Floc 081964) [Var (Global 48)]);
    Let b2 = M[007302];
    Let b3 = M[007303];
    PushFrame;
    PushReturnAddress 075161;
    SetLocal 1 MakeHiLo(b2,b3);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 081965
  } else {
    Jump: 075208
  }
LocReturn 075161:
  TraceOperation 075166 (CallN (Floc 080952) [Con -31944]);
  PushFrame;
  PushReturnAddress 075166;
  SetLocal 1 -31944;
  MakeRoutineFrame 1;
  Jump: 080953
LocReturn 075166:
  TraceOperation 075172 (Call (Floc 088304) [Var (Global 48),Con 26] Sp);
  Let b1 = M[007302];
  Let b2 = M[007303];
  PushFrame;
  PushReturnAddress 075172;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 26;
  MakeRoutineFrame 2;
  Jump: 088305
LocReturn 075172:
  PushStack call_result;
  TraceOperation 075179 (Jz (Var Sp) (Branch F (Dloc 075185)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 075182 (Jump 075194);
    Jump: 075194
  } else {
    Jump: 075185
  }
LocOp 075185:
  TraceOperation 075185 (CallN (Floc 080952) [Con -31273]);
  PushFrame;
  PushReturnAddress 075185;
  SetLocal 1 -31273;
  MakeRoutineFrame 1;
  Jump: 080953
LocReturn 075185:
  TraceOperation 075191 (Jump 075200);
  Jump: 075200
LocOp 075194:
  TraceOperation 075194 (CallN (Floc 080952) [Con -31269]);
  PushFrame;
  PushReturnAddress 075194;
  SetLocal 1 -31269;
  MakeRoutineFrame 1;
  Jump: 080953
LocReturn 075194:
  Jump: 075200
LocOp 075200:
  TraceOperation 075200 (CallN (Floc 080952) [Con -31921]);
  PushFrame;
  PushReturnAddress 075200;
  SetLocal 1 -31921;
  MakeRoutineFrame 1;
  Jump: 080953
LocReturn 075200:
  TraceOperation 075206 New_line;
  GamePrint "\n";
  TraceOperation 075207 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 075208:
  TraceOperation 075208 (Call (Floc 088304) [Var (Global 47),Con 36] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 075208;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 36;
  MakeRoutineFrame 2;
  Jump: 088305
LocReturn 075208:
  PushStack call_result;
  TraceOperation 075215 (Jz (Var Sp) (Branch T (Dloc 075234)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 075234
  } else {
    TraceOperation 075218 (Store (Con 20) (Con 1));
    SetByte 007214 0;
    SetByte 007215 1;
    TraceOperation 075221 (CallN (Floc 081964) [Var (Global 47)]);
    Let b2 = M[007300];
    Let b3 = M[007301];
    PushFrame;
    PushReturnAddress 075221;
    SetLocal 1 MakeHiLo(b2,b3);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 081965
  }
LocReturn 075221:
  TraceOperation 075226 (CallN (Floc 080952) [Con -31934]);
  PushFrame;
  PushReturnAddress 075226;
  SetLocal 1 -31934;
  MakeRoutineFrame 1;
  Jump: 080953
LocReturn 075226:
  TraceOperation 075232 New_line;
  GamePrint "\n";
  TraceOperation 075233 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 075234:
  TraceOperation 075234 (Call (Floc 075824) [Var (Global 47)] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 075234;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 1;
  Jump: 075825
LocReturn 075234:
  PushStack call_result;
  TraceOperation 075240 (Jz (Var Sp) (Branch F (Dloc 075259)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 075243 (Store (Con 20) (Con 1));
    SetByte 007214 0;
    SetByte 007215 1;
    TraceOperation 075246 (CallN (Floc 081964) [Var (Global 47)]);
    Let b2 = M[007300];
    Let b3 = M[007301];
    PushFrame;
    PushReturnAddress 075246;
    SetLocal 1 MakeHiLo(b2,b3);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 081965
  } else {
    Jump: 075259
  }
LocReturn 075246:
  TraceOperation 075251 (CallN (Floc 080952) [Con -31910]);
  PushFrame;
  PushReturnAddress 075251;
  SetLocal 1 -31910;
  MakeRoutineFrame 1;
  Jump: 080953
LocReturn 075251:
  TraceOperation 075257 New_line;
  GamePrint "\n";
  TraceOperation 075258 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 075259:
  TraceOperation 075259 (Jump 075273);
  Jump: 075273
LocOp 075262:
  TraceOperation 075262 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 075273)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 075266 (CallN (Floc 098228) [Con 18770,Con 1]);
    PushFrame;
    PushReturnAddress 075266;
    SetLocal 1 18770;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 075273
  }
LocReturn 075266:
  Jump: 075273
LocOp 075273:
  TraceOperation 075273 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 075276:
  MakeRoutineFrame 0;
  Jump: 075277
LocOp 075277:
  TraceOperation 075277 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 075299)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 075281 (Jz (Var (Global 114)) (Branch T (Dloc 075290)));
    Let b5 = M[007434];
    Let b6 = M[007435];
    if (IsZero(MakeHiLo(b5,b6))) {
      Jump: 075290
    } else {
      TraceOperation 075284 (CallN (Floc 098228) [Con 18819]);
      PushFrame;
      PushReturnAddress 075284;
      SetLocal 1 18819;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 075299
  }
LocReturn 075284:
  Jump: 075290
LocOp 075290:
  TraceOperation 075290 (CallN (Floc 088364) [Var (Global 47),Con 36]);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 075290;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 36;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 088365
LocReturn 075290:
  TraceOperation 075296 (Jump 075310);
  Jump: 075310
LocOp 075299:
  TraceOperation 075299 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 075310)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 075303 (CallN (Floc 098228) [Con 18819,Con 1]);
    PushFrame;
    PushReturnAddress 075303;
    SetLocal 1 18819;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 075310
  }
LocReturn 075303:
  Jump: 075310
LocOp 075310:
  TraceOperation 075310 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 075312:
  MakeRoutineFrame 0;
  Jump: 075313
LocOp 075313:
  TraceOperation 075313 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 075344)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 075317 (Jz (Var (Global 114)) (Branch T (Dloc 075326)));
    Let b5 = M[007434];
    Let b6 = M[007435];
    if (IsZero(MakeHiLo(b5,b6))) {
      Jump: 075326
    } else {
      TraceOperation 075320 (CallN (Floc 098228) [Con 18828]);
      PushFrame;
      PushReturnAddress 075320;
      SetLocal 1 18828;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 075344
  }
LocReturn 075320:
  Jump: 075326
LocOp 075326:
  TraceOperation 075326 (Store (Con 20) (Con 1));
  SetByte 007214 0;
  SetByte 007215 1;
  TraceOperation 075329 (CallN (Floc 081964) [Var (Global 47)]);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 075329;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 081965
LocReturn 075329:
  TraceOperation 075334 (CallN (Floc 080952) [Con -31927]);
  PushFrame;
  PushReturnAddress 075334;
  SetLocal 1 -31927;
  MakeRoutineFrame 1;
  Jump: 080953
LocReturn 075334:
  TraceOperation 075340 New_line;
  GamePrint "\n";
  TraceOperation 075341 (Jump 075355);
  Jump: 075355
LocOp 075344:
  TraceOperation 075344 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 075355)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 075348 (CallN (Floc 098228) [Con 18828,Con 1]);
    PushFrame;
    PushReturnAddress 075348;
    SetLocal 1 18828;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 075355
  }
LocReturn 075348:
  Jump: 075355
LocOp 075355:
  TraceOperation 075355 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 075356:
  MakeRoutineFrame 0;
  Jump: 075357
LocOp 075357:
  TraceOperation 075357 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 075399)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 075361 (Jz (Var (Global 114)) (Branch T (Dloc 075370)));
    Let b5 = M[007434];
    Let b6 = M[007435];
    if (IsZero(MakeHiLo(b5,b6))) {
      Jump: 075370
    } else {
      TraceOperation 075364 (CallN (Floc 098228) [Con 18839]);
      PushFrame;
      PushReturnAddress 075364;
      SetLocal 1 18839;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 075399
  }
LocReturn 075364:
  Jump: 075370
LocOp 075370:
  TraceOperation 075370 (Call (Floc 088304) [Var (Global 47),Con 36] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 075370;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 36;
  MakeRoutineFrame 2;
  Jump: 088305
LocReturn 075370:
  PushStack call_result;
  TraceOperation 075377 (Jz (Var Sp) (Branch F (Dloc 075396)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 075380 (Store (Con 20) (Con 1));
    SetByte 007214 0;
    SetByte 007215 1;
    TraceOperation 075383 (CallN (Floc 081964) [Var (Global 47)]);
    Let b2 = M[007300];
    Let b3 = M[007301];
    PushFrame;
    PushReturnAddress 075383;
    SetLocal 1 MakeHiLo(b2,b3);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 081965
  } else {
    Jump: 075396
  }
LocReturn 075383:
  TraceOperation 075388 (CallN (Floc 080952) [Con -31930]);
  PushFrame;
  PushReturnAddress 075388;
  SetLocal 1 -31930;
  MakeRoutineFrame 1;
  Jump: 080953
LocReturn 075388:
  TraceOperation 075394 New_line;
  GamePrint "\n";
  TraceOperation 075395 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 075396:
  TraceOperation 075396 (Jump 075410);
  Jump: 075410
LocOp 075399:
  TraceOperation 075399 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 075410)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 075403 (CallN (Floc 098228) [Con 18839,Con 1]);
    PushFrame;
    PushReturnAddress 075403;
    SetLocal 1 18839;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 075410
  }
LocReturn 075403:
  Jump: 075410
LocOp 075410:
  TraceOperation 075410 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 075412:
  MakeRoutineFrame 0;
  Jump: 075413
LocOp 075413:
  TraceOperation 075413 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 075436)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 075417 (Jz (Var (Global 114)) (Branch T (Dloc 075426)));
    Let b5 = M[007434];
    Let b6 = M[007435];
    if (IsZero(MakeHiLo(b5,b6))) {
      Jump: 075426
    } else {
      TraceOperation 075420 (CallN (Floc 098228) [Con 18853]);
      PushFrame;
      PushReturnAddress 075420;
      SetLocal 1 18853;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 075436
  }
LocReturn 075420:
  Jump: 075426
LocOp 075426:
  TraceOperation 075426 (CallN (Floc 088364) [Var (Global 47),Con 36,Con 1]);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 075426;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 36;
  SetLocal 3 1;
  MakeRoutineFrame 3;
  Jump: 088365
LocReturn 075426:
  TraceOperation 075433 (Jump 075447);
  Jump: 075447
LocOp 075436:
  TraceOperation 075436 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 075447)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 075440 (CallN (Floc 098228) [Con 18853,Con 1]);
    PushFrame;
    PushReturnAddress 075440;
    SetLocal 1 18853;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 075447
  }
LocReturn 075440:
  Jump: 075447
LocOp 075447:
  TraceOperation 075447 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 075448:
  MakeRoutineFrame 0;
  Jump: 075449
LocOp 075449:
  TraceOperation 075449 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 075480)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 075453 (Jz (Var (Global 114)) (Branch T (Dloc 075462)));
    Let b5 = M[007434];
    Let b6 = M[007435];
    if (IsZero(MakeHiLo(b5,b6))) {
      Jump: 075462
    } else {
      TraceOperation 075456 (CallN (Floc 098228) [Con 18862]);
      PushFrame;
      PushReturnAddress 075456;
      SetLocal 1 18862;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 098229
    }
  } else {
    Jump: 075480
  }
LocReturn 075456:
  Jump: 075462
LocOp 075462:
  TraceOperation 075462 (Store (Con 20) (Con 1));
  SetByte 007214 0;
  SetByte 007215 1;
  TraceOperation 075465 (CallN (Floc 081964) [Var (Global 47)]);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 075465;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 081965
LocReturn 075465:
  TraceOperation 075470 (CallN (Floc 080952) [Con -31924]);
  PushFrame;
  PushReturnAddress 075470;
  SetLocal 1 -31924;
  MakeRoutineFrame 1;
  Jump: 080953
LocReturn 075470:
  TraceOperation 075476 New_line;
  GamePrint "\n";
  TraceOperation 075477 (Jump 075491);
  Jump: 075491
LocOp 075480:
  TraceOperation 075480 (Jg (Var (Global 114)) (Con 1) (Branch F (Dloc 075491)));
  Let b1 = M[007434];
  Let b2 = M[007435];
  if (GreaterThan(MakeHiLo(b1,b2),1)) {
    TraceOperation 075484 (CallN (Floc 098228) [Con 18862,Con 1]);
    PushFrame;
    PushReturnAddress 075484;
    SetLocal 1 18862;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 098229
  } else {
    Jump: 075491
  }
LocReturn 075484:
  Jump: 075491
LocOp 075491:
  TraceOperation 075491 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 075492:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 075493
LocOp 075493:
  TraceOperation 075493 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 075496:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 075497
LocOp 075497:
  TraceOperation 075497 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 075500:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 075501
LocOp 075501:
  TraceOperation 075501 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 075504:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 075505
LocOp 075505:
  TraceOperation 075505 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 075508:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 075509
LocOp 075509:
  TraceOperation 075509 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 075512:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 075513
LocOp 075513:
  TraceOperation 075513 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 075516:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 075517
LocOp 075517:
  TraceOperation 075517 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 075520:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 075521
LocOp 075521:
  TraceOperation 075521 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 075524:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 075525
LocOp 075525:
  TraceOperation 075525 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 075528:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 075529
LocOp 075529:
  TraceOperation 075529 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 075532:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 075533
LocOp 075533:
  TraceOperation 075533 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 075536:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 075537
LocOp 075537:
  TraceOperation 075537 (Call (Floc 026172) [Var (Local 1),Con 14] Sp);
  PushFrame;
  PushReturnAddress 075537;
  SetLocal 1 GetLocal(1);
  SetLocal 2 14;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 075537:
  PushStack call_result;
  TraceOperation 075544 (Jz (Var Sp) (Branch T (Dloc 075555)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 075555
  } else {
    TraceOperation 075547 (Call (Floc 104604) [Var (Global 31),Var (Local 1)] Sp);
    Let b2 = M[007268];
    Let b3 = M[007269];
    PushFrame;
    PushReturnAddress 075547;
    SetLocal 1 MakeHiLo(b2,b3);
    SetLocal 2 GetLocal(1);
    MakeRoutineFrame 2;
    Jump: 104605
  }
LocReturn 075547:
  PushStack call_result;
  TraceOperation 075554 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 075555:
  TraceOperation 075555 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 075556:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 075557
LocOp 075557:
  TraceOperation 075557 (Call (Floc 026172) [Var (Local 1),Con 14] Sp);
  PushFrame;
  PushReturnAddress 075557;
  SetLocal 1 GetLocal(1);
  SetLocal 2 14;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 075557:
  PushStack call_result;
  TraceOperation 075564 (Jz (Var Sp) (Branch T (Dloc 075575)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 075575
  } else {
    TraceOperation 075567 (Call (Floc 104636) [Var (Global 31),Var (Local 1)] Sp);
    Let b2 = M[007268];
    Let b3 = M[007269];
    PushFrame;
    PushReturnAddress 075567;
    SetLocal 1 MakeHiLo(b2,b3);
    SetLocal 2 GetLocal(1);
    MakeRoutineFrame 2;
    Jump: 104637
  }
LocReturn 075567:
  PushStack call_result;
  TraceOperation 075574 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 075575:
  TraceOperation 075575 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 075576:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 075577
LocOp 075577:
  TraceOperation 075577 (Call (Floc 026172) [Var (Local 1),Con 14] Sp);
  PushFrame;
  PushReturnAddress 075577;
  SetLocal 1 GetLocal(1);
  SetLocal 2 14;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 075577:
  PushStack call_result;
  TraceOperation 075584 (Jz (Var Sp) (Branch T (Dloc 075607)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 075607
  } else {
    TraceOperation 075587 (Call (Floc 104604) [Var (Global 31),Var (Local 1)] Sp);
    Let b2 = M[007268];
    Let b3 = M[007269];
    PushFrame;
    PushReturnAddress 075587;
    SetLocal 1 MakeHiLo(b2,b3);
    SetLocal 2 GetLocal(1);
    MakeRoutineFrame 2;
    Jump: 104605
  }
LocReturn 075587:
  PushStack call_result;
  TraceOperation 075594 (Jz (Var Sp) (Branch T (Dloc 075603)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 075603
  } else {
    TraceOperation 075597 (Push (Con 0));
    PushStack 0;
    TraceOperation 075600 (Jump 075606);
    Jump: 075606
  }
LocOp 075603:
  TraceOperation 075603 (Push (Con 1));
  PushStack 1;
  Jump: 075606
LocOp 075606:
  TraceOperation 075606 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 075607:
  TraceOperation 075607 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 075608:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 075609
LocOp 075609:
  TraceOperation 075609 (Call (Floc 026172) [Var (Local 1),Con 14] Sp);
  PushFrame;
  PushReturnAddress 075609;
  SetLocal 1 GetLocal(1);
  SetLocal 2 14;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 075609:
  PushStack call_result;
  TraceOperation 075616 (Jz (Var Sp) (Branch T (Dloc 075639)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 075639
  } else {
    TraceOperation 075619 (Call (Floc 104636) [Var (Global 31),Var (Local 1)] Sp);
    Let b2 = M[007268];
    Let b3 = M[007269];
    PushFrame;
    PushReturnAddress 075619;
    SetLocal 1 MakeHiLo(b2,b3);
    SetLocal 2 GetLocal(1);
    MakeRoutineFrame 2;
    Jump: 104637
  }
LocReturn 075619:
  PushStack call_result;
  TraceOperation 075626 (Jz (Var Sp) (Branch T (Dloc 075635)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 075635
  } else {
    TraceOperation 075629 (Push (Con 0));
    PushStack 0;
    TraceOperation 075632 (Jump 075638);
    Jump: 075638
  }
LocOp 075635:
  TraceOperation 075635 (Push (Con 1));
  PushStack 1;
  Jump: 075638
LocOp 075638:
  TraceOperation 075638 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 075639:
  TraceOperation 075639 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 075640:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 075641
LocOp 075641:
  TraceOperation 075641 (Call (Floc 026172) [Var (Local 1),Con 14] Sp);
  PushFrame;
  PushReturnAddress 075641;
  SetLocal 1 GetLocal(1);
  SetLocal 2 14;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 075641:
  PushStack call_result;
  TraceOperation 075648 (Jz (Var Sp) (Branch T (Dloc 075665)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 075665
  } else {
    TraceOperation 075651 (Call (Floc 102384) [Var (Local 1)] Sp);
    PushFrame;
    PushReturnAddress 075651;
    SetLocal 1 GetLocal(1);
    MakeRoutineFrame 1;
    Jump: 102385
  }
LocReturn 075651:
  PushStack call_result;
  TraceOperation 075657 (Call (Floc 104664) [Var Sp,Var (Local 1)] Sp);
  PopStack popped1;
  PushFrame;
  PushReturnAddress 075657;
  SetLocal 1 popped1;
  SetLocal 2 GetLocal(1);
  MakeRoutineFrame 2;
  Jump: 104665
LocReturn 075657:
  PushStack call_result;
  TraceOperation 075664 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 075665:
  TraceOperation 075665 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 075668:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 075669
LocOp 075669:
  TraceOperation 075669 (Call (Floc 026172) [Var (Local 1),Con 14] Sp);
  PushFrame;
  PushReturnAddress 075669;
  SetLocal 1 GetLocal(1);
  SetLocal 2 14;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 075669:
  PushStack call_result;
  TraceOperation 075676 (Jz (Var Sp) (Branch T (Dloc 075705)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 075705
  } else {
    TraceOperation 075679 (Call (Floc 102384) [Var (Local 1)] Sp);
    PushFrame;
    PushReturnAddress 075679;
    SetLocal 1 GetLocal(1);
    MakeRoutineFrame 1;
    Jump: 102385
  }
LocReturn 075679:
  PushStack call_result;
  TraceOperation 075685 (Call (Floc 104664) [Var Sp,Var (Local 1)] Sp);
  PopStack popped1;
  PushFrame;
  PushReturnAddress 075685;
  SetLocal 1 popped1;
  SetLocal 2 GetLocal(1);
  MakeRoutineFrame 2;
  Jump: 104665
LocReturn 075685:
  PushStack call_result;
  TraceOperation 075692 (Jz (Var Sp) (Branch T (Dloc 075701)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 075701
  } else {
    TraceOperation 075695 (Push (Con 0));
    PushStack 0;
    TraceOperation 075698 (Jump 075704);
    Jump: 075704
  }
LocOp 075701:
  TraceOperation 075701 (Push (Con 1));
  PushStack 1;
  Jump: 075704
LocOp 075704:
  TraceOperation 075704 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 075705:
  TraceOperation 075705 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 075708:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 075709
LocOp 075709:
  TraceOperation 075709 (Call (Floc 026172) [Var (Local 1),Con 14] Sp);
  PushFrame;
  PushReturnAddress 075709;
  SetLocal 1 GetLocal(1);
  SetLocal 2 14;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 075709:
  PushStack call_result;
  TraceOperation 075716 (Jz (Var Sp) (Branch T (Dloc 075726)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 075726
  } else {
    TraceOperation 075719 (Call (Floc 103472) [Var (Local 1)] Sp);
    PushFrame;
    PushReturnAddress 075719;
    SetLocal 1 GetLocal(1);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 103473
  }
LocReturn 075719:
  PushStack call_result;
  TraceOperation 075725 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 075726:
  TraceOperation 075726 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 075728:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 075729
LocOp 075729:
  TraceOperation 075729 (Call (Floc 026172) [Var (Local 1),Con 14] Sp);
  PushFrame;
  PushReturnAddress 075729;
  SetLocal 1 GetLocal(1);
  SetLocal 2 14;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 075729:
  PushStack call_result;
  TraceOperation 075736 (Jz (Var Sp) (Branch T (Dloc 075758)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 075758
  } else {
    TraceOperation 075739 (Call (Floc 103472) [Var (Local 1)] Sp);
    PushFrame;
    PushReturnAddress 075739;
    SetLocal 1 GetLocal(1);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 103473
  }
LocReturn 075739:
  PushStack call_result;
  TraceOperation 075745 (Jz (Var Sp) (Branch T (Dloc 075754)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 075754
  } else {
    TraceOperation 075748 (Push (Con 0));
    PushStack 0;
    TraceOperation 075751 (Jump 075757);
    Jump: 075757
  }
LocOp 075754:
  TraceOperation 075754 (Push (Con 1));
  PushStack 1;
  Jump: 075757
LocOp 075757:
  TraceOperation 075757 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 075758:
  TraceOperation 075758 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 075760:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 075761
LocOp 075761:
  TraceOperation 075761 (Call (Floc 026172) [Var (Local 1),Con 13] Sp);
  PushFrame;
  PushReturnAddress 075761;
  SetLocal 1 GetLocal(1);
  SetLocal 2 13;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 075761:
  PushStack call_result;
  TraceOperation 075768 (Jz (Var Sp) (Branch T (Dloc 075779)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 075779
  } else {
    TraceOperation 075771 (Call (Floc 104336) [Var (Global 32),Var (Local 1)] Sp);
    Let b2 = M[007270];
    Let b3 = M[007271];
    PushFrame;
    PushReturnAddress 075771;
    SetLocal 1 MakeHiLo(b2,b3);
    SetLocal 2 GetLocal(1);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 104337
  }
LocReturn 075771:
  PushStack call_result;
  TraceOperation 075778 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 075779:
  TraceOperation 075779 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 075780:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 075781
LocOp 075781:
  TraceOperation 075781 (Call (Floc 026172) [Var (Local 1),Con 14] Sp);
  PushFrame;
  PushReturnAddress 075781;
  SetLocal 1 GetLocal(1);
  SetLocal 2 14;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 075781:
  PushStack call_result;
  TraceOperation 075788 (Jz (Var Sp) (Branch T (Dloc 075821)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 075821
  } else {
    TraceOperation 075791 (Call (Floc 088304) [Var (Local 1),Con 15] Sp);
    PushFrame;
    PushReturnAddress 075791;
    SetLocal 1 GetLocal(1);
    SetLocal 2 15;
    MakeRoutineFrame 2;
    Jump: 088305
  }
LocReturn 075791:
  PushStack call_result;
  TraceOperation 075798 (Jz (Var Sp) (Branch F (Dloc 075817)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 075801 (Call (Floc 088304) [Var (Local 1),Con 30] Sp);
    PushFrame;
    PushReturnAddress 075801;
    SetLocal 1 GetLocal(1);
    SetLocal 2 30;
    MakeRoutineFrame 2;
    Jump: 088305
  } else {
    Jump: 075817
  }
LocReturn 075801:
  PushStack call_result;
  TraceOperation 075808 (Jz (Var Sp) (Branch F (Dloc 075817)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 075811 (Push (Con 1));
    PushStack 1;
    TraceOperation 075814 (Jump 075820);
    Jump: 075820
  } else {
    Jump: 075817
  }
LocOp 075817:
  TraceOperation 075817 (Push (Con 0));
  PushStack 0;
  Jump: 075820
LocOp 075820:
  TraceOperation 075820 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 075821:
  TraceOperation 075821 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 075824:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 075825
LocOp 075825:
  TraceOperation 075825 (Call (Floc 026172) [Var (Local 1),Con 14] Sp);
  PushFrame;
  PushReturnAddress 075825;
  SetLocal 1 GetLocal(1);
  SetLocal 2 14;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 075825:
  PushStack call_result;
  TraceOperation 075832 (Jz (Var Sp) (Branch T (Dloc 075859)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 075859
  } else {
    TraceOperation 075835 (Call (Floc 088436) [Var (Local 1),Con 72] Sp);
    PushFrame;
    PushReturnAddress 075835;
    SetLocal 1 GetLocal(1);
    SetLocal 2 72;
    MakeRoutineFrame 2;
    Jump: 088437
  }
LocReturn 075835:
  PushStack call_result;
  TraceOperation 075842 (Jg (Var Sp) (Con 0) (Branch F (Dloc 075855)));
  PopStack popped1;
  if (GreaterThan(popped1,0)) {
    TraceOperation 075846 (Jz (Con 1) (Branch T (Dloc 075855)));
    TraceOperation 075849 (Push (Con 1));
    PushStack 1;
    TraceOperation 075852 (Jump 075858);
    Jump: 075858
  } else {
    Jump: 075855
  }
LocOp 075855:
  TraceOperation 075855 (Push (Con 0));
  PushStack 0;
  Jump: 075858
LocOp 075858:
  TraceOperation 075858 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 075859:
  TraceOperation 075859 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 075860:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 075861
LocOp 075861:
  TraceOperation 075861 (Loadw (Con 8320) (Con 0) Sp);
  Let b1 = M[008320];
  Let b2 = M[008321];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 075867 (Je [Var Sp,Con 1] (Branch F (Dloc 075950)));
  PopStack popped3;
  if (Equal(popped3,1)) {
    TraceOperation 075872 (Jz (Var (Global 21)) (Branch T (Dloc 075950)));
    Let b4 = M[007248];
    Let b5 = M[007249];
    if (IsZero(MakeHiLo(b4,b5))) {
      Jump: 075950
    } else {
      TraceOperation 075876 (Inc (Con 3));
      SetLocal 3 Add(GetLocal(3),1);
      TraceOperation 075878 (Jz (Var (Global 115)) (Branch T (Dloc 075908)));
      Let b6 = M[007436];
      Let b7 = M[007437];
      if (IsZero(MakeHiLo(b6,b7))) {
        Jump: 075908
      } else {
        TraceOperation 075881 (Print "[Scene 'Entire Game' ends]\n");
        GamePrint "[Scene 'Entire Game' ends]\n";
        Jump: 075908
      }
    }
  } else {
    Jump: 075950
  }
LocOp 075908:
  TraceOperation 075908 (Storew (Con 8320) (Con 0) (Con 2));
  SetByte 008320 0;
  SetByte 008321 2;
  TraceOperation 075914 (CallN (Floc 088936) [Con 26]);
  PushFrame;
  PushReturnAddress 075914;
  SetLocal 1 26;
  MakeRoutineFrame 14;
  SetLocal 14 0;
  SetLocal 13 0;
  SetLocal 12 0;
  SetLocal 11 0;
  SetLocal 10 0;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 088937
LocReturn 075914:
  TraceOperation 075919 (Storew (Con 8314) (Con 0) (Var (Global 24)));
  Let b1 = M[007254];
  Let b2 = M[007255];
  SetByte 008314 b1;
  SetByte 008315 b2;
  TraceOperation 075925 (Loadw (Con 8326) (Con 0) Sp);
  Let b3 = M[008326];
  Let b4 = M[008327];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 075931 (Or (Var Sp) (Con 2) Sp);
  PopStack popped5;
  PushStack Or(popped5,2);
  TraceOperation 075935 (Storew (Con 8326) (Con 0) (Var Sp));
  PopStack popped6;
  SetByte 008326 HiByte(popped6);
  SetByte 008327 LoByte(popped6);
  TraceOperation 075941 (Storew (Con 8332) (Con 0) (Con 1));
  SetByte 008332 0;
  SetByte 008333 1;
  TraceOperation 075947 (Jump 076040);
  Jump: 076040
LocOp 075950:
  TraceOperation 075950 (Loadw (Con 8320) (Con 0) Sp);
  Let b1 = M[008320];
  Let b2 = M[008321];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 075956 (Jz (Var Sp) (Branch F (Dloc 076040)));
  PopStack popped3;
  if (IsZero(popped3)) {
    TraceOperation 075960 (Jz (Var (Global 21)) (Branch F (Dloc 076040)));
    Let b4 = M[007248];
    Let b5 = M[007249];
    if (IsZero(MakeHiLo(b4,b5))) {
      TraceOperation 075964 (Inc (Con 3));
      SetLocal 3 Add(GetLocal(3),1);
      TraceOperation 075966 (Jz (Var (Global 115)) (Branch T (Dloc 075998)));
      Let b6 = M[007436];
      Let b7 = M[007437];
      if (IsZero(MakeHiLo(b6,b7))) {
        Jump: 075998
      } else {
        TraceOperation 075969 (Print "[Scene 'Entire Game' begins]\n");
        GamePrint "[Scene 'Entire Game' begins]\n";
        Jump: 075998
      }
    } else {
      Jump: 076040
    }
  } else {
    Jump: 076040
  }
LocOp 075998:
  TraceOperation 075998 (Storew (Con 8320) (Con 0) (Con 1));
  SetByte 008320 0;
  SetByte 008321 1;
  TraceOperation 076004 (CallN (Floc 088936) [Con 25]);
  PushFrame;
  PushReturnAddress 076004;
  SetLocal 1 25;
  MakeRoutineFrame 14;
  SetLocal 14 0;
  SetLocal 13 0;
  SetLocal 12 0;
  SetLocal 11 0;
  SetLocal 10 0;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 088937
LocReturn 076004:
  TraceOperation 076009 (Storew (Con 8308) (Con 0) (Var (Global 24)));
  Let b1 = M[007254];
  Let b2 = M[007255];
  SetByte 008308 b1;
  SetByte 008309 b2;
  TraceOperation 076015 (Loadw (Con 8326) (Con 0) Sp);
  Let b3 = M[008326];
  Let b4 = M[008327];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 076021 (Or (Var Sp) (Con 1) Sp);
  PopStack popped5;
  PushStack Or(popped5,1);
  TraceOperation 076025 (Storew (Con 8326) (Con 0) (Var Sp));
  PopStack popped6;
  SetByte 008326 HiByte(popped6);
  SetByte 008327 LoByte(popped6);
  TraceOperation 076031 (Storew (Con 8332) (Con 0) (Con 0));
  SetByte 008332 0;
  SetByte 008333 0;
  TraceOperation 076037 (Jump 076040);
  Jump: 076040
LocOp 076040:
  TraceOperation 076040 (Jg (Var (Local 1)) (Con 10) (Branch F (Dloc 076049)));
  if (GreaterThan(GetLocal(1),10)) {
    TraceOperation 076044 (Print_paddr (Con 29699));
    Note "<static Gettext address>";
    GamePrint ">--> The scene change machinery is stuck.";
    TraceOperation 076047 New_line;
    GamePrint "\n";
    TraceOperation 076048 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 076049
  }
LocOp 076049:
  TraceOperation 076049 (Jg (Var (Local 3)) (Con 0) (Branch F (Dloc 076063)));
  if (GreaterThan(GetLocal(3),0)) {
    TraceOperation 076053 (Inc (Con 1));
    SetLocal 1 Add(GetLocal(1),1);
    TraceOperation 076055 (Push (Var (Local 1)));
    PushStack GetLocal(1);
    TraceOperation 076058 (CallN (Floc 075860) [Var Sp]);
    PopStack popped1;
    PushFrame;
    PushReturnAddress 076058;
    SetLocal 1 popped1;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 075861
  } else {
    Jump: 076063
  }
LocReturn 076058:
  Jump: 076063
LocOp 076063:
  TraceOperation 076063 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 076064:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 076065
LocOp 076065:
  TraceOperation 076065 (Je [Var (Local 1),Con -1] (Branch F (Dloc 076074)));
  if (Equal(GetLocal(1),-1)) {
    TraceOperation 076071 (Store (Con 1) (Var (Global 40)));
    Let b1 = M[007286];
    Let b2 = M[007287];
    SetLocal 1 MakeHiLo(b1,b2);
    Jump: 076074
  } else {
    Jump: 076074
  }
LocOp 076074:
  TraceOperation 076074 (Store (Con 2) (Con 1));
  SetLocal 2 1;
  Jump: 076077
LocOp 076077:
  TraceOperation 076077 (Loadw (Con 12693) (Con 0) Sp);
  Let b1 = M[012693];
  Let b2 = M[012694];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 076083 (Jg (Var (Local 2)) (Var Sp) (Branch T (Dloc 076106)));
  PopStack popped3;
  if (GreaterThan(GetLocal(2),popped3)) {
    Jump: 076106
  } else {
    TraceOperation 076087 (Loadw (Con 12693) (Var (Local 2)) Sp);
    Let b4 = M[Offset(012693,Mul(2,GetLocal(2)))];
    Let b5 = M[Offset(Offset(012693,Mul(2,GetLocal(2))),1)];
    PushStack MakeHiLo(b4,b5);
    TraceOperation 076093 (Je [Var (Local 1),Var Sp] (Branch F (Dloc 076099)));
    PopStack popped6;
    if (Equal(GetLocal(1),popped6)) {
      TraceOperation 076097 (Ret (Var (Local 2)));
      PopFrame;
      PopReturnAddress return_address_7;
      SetResult GetLocal(2);
      JumpIndirect: (return) return_address_7
    } else {
      Jump: 076099
    }
  }
LocOp 076099:
  TraceOperation 076099 (Add (Var (Local 2)) (Con 11) (Local 2));
  SetLocal 2 Add(GetLocal(2),11);
  TraceOperation 076103 (Jump 076077);
  Jump: 076077
LocOp 076106:
  TraceOperation 076106 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 076108:
  MakeRoutineFrame 0;
  Jump: 076109
LocOp 076109:
  TraceOperation 076109 (Call (Floc 076148) [Con 64] Sp);
  PushFrame;
  PushReturnAddress 076109;
  SetLocal 1 64;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 076149
LocReturn 076109:
  PushStack call_result;
  TraceOperation 076115 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 076116:
  MakeRoutineFrame 0;
  Jump: 076117
LocOp 076117:
  TraceOperation 076117 (Call (Floc 076148) [Con 128] Sp);
  PushFrame;
  PushReturnAddress 076117;
  SetLocal 1 128;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 076149
LocReturn 076117:
  PushStack call_result;
  TraceOperation 076123 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 076124:
  MakeRoutineFrame 0;
  Jump: 076125
LocOp 076125:
  TraceOperation 076125 (Call (Floc 076148) [Con 1] Sp);
  PushFrame;
  PushReturnAddress 076125;
  SetLocal 1 1;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 076149
LocReturn 076125:
  PushStack call_result;
  TraceOperation 076131 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 076132:
  MakeRoutineFrame 0;
  Jump: 076133
LocOp 076133:
  TraceOperation 076133 (Call (Floc 076148) [Con 2] Sp);
  PushFrame;
  PushReturnAddress 076133;
  SetLocal 1 2;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 076149
LocReturn 076133:
  PushStack call_result;
  TraceOperation 076139 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 076140:
  MakeRoutineFrame 0;
  Jump: 076141
LocOp 076141:
  TraceOperation 076141 (Call (Floc 076148) [Con 4] Sp);
  PushFrame;
  PushReturnAddress 076141;
  SetLocal 1 4;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 076149
LocReturn 076141:
  PushStack call_result;
  TraceOperation 076147 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 076148:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 076149
LocOp 076149:
  TraceOperation 076149 (Call (Floc 076064) [Con -1] (Local 3));
  PushFrame;
  PushReturnAddress 076149;
  SetLocal 1 -1;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 076065
LocReturn 076149:
  SetLocal 3 call_result;
  TraceOperation 076156 (Jz (Var (Local 3)) (Branch T Dfalse));
  if (IsZero(GetLocal(3))) {
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 0;
    JumpIndirect: (return) return_address_1
  } else {
    TraceOperation 076159 (Add (Var (Local 3)) (Con 1) Sp);
    PushStack Add(GetLocal(3),1);
    TraceOperation 076163 (Loadw (Con 12693) (Var Sp) (Local 2));
    PopStack popped2;
    Let b3 = M[Offset(012693,Mul(2,popped2))];
    Let b4 = M[Offset(Offset(012693,Mul(2,popped2)),1)];
    SetLocal 2 MakeHiLo(b3,b4);
    TraceOperation 076169 (And (Var (Local 2)) (Var (Local 1)) Sp);
    PushStack And(GetLocal(2),GetLocal(1));
    TraceOperation 076173 (Jz (Var Sp) (Branch F Dtrue));
    PopStack popped5;
    if (IsZero(popped5)) {
      TraceOperation 076176 Rfalse;
      PopFrame;
      PopReturnAddress return_address_6;
      SetResult 0;
      JumpIndirect: (return) return_address_6
    } else {
      PopFrame;
      PopReturnAddress return_address_7;
      SetResult 1;
      JumpIndirect: (return) return_address_7
    }
  }
--------------------------------------------------
LocRoutine 076180:
  MakeRoutineFrame 9;
  if (LessThanByte(num_actuals,9)) {
    SetLocal 9 0;
    if (LessThanByte(num_actuals,8)) {
      SetLocal 8 0;
      if (LessThanByte(num_actuals,7)) {
        SetLocal 7 0;
        if (LessThanByte(num_actuals,6)) {
          SetLocal 6 0;
          if (LessThanByte(num_actuals,5)) {
            SetLocal 5 0;
            if (LessThanByte(num_actuals,4)) {
              SetLocal 4 0;
              if (LessThanByte(num_actuals,3)) {
                SetLocal 3 0;
                if (LessThanByte(num_actuals,2)) {
                  SetLocal 2 0;
                  if (LessThanByte(num_actuals,1)) {
                    SetLocal 1 0;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  Jump: 076181
LocOp 076181:
  TraceOperation 076181 (Jz (Var (Local 6)) (Branch T (Dloc 076197)));
  if (IsZero(GetLocal(6))) {
    Jump: 076197
  } else {
    TraceOperation 076184 (Call (Floc 110064) [Var (Local 3),Var (Local 4),Var (Local 5),Var (Local 2),Var (Local 1),Var (Local 6)] Sp);
    PushFrame;
    PushReturnAddress 076184;
    SetLocal 1 GetLocal(3);
    SetLocal 2 GetLocal(4);
    SetLocal 3 GetLocal(5);
    SetLocal 4 GetLocal(2);
    SetLocal 5 GetLocal(1);
    SetLocal 6 GetLocal(6);
    MakeRoutineFrame 6;
    Jump: 110065
  }
LocReturn 076184:
  PushStack call_result;
  TraceOperation 076196 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 076197:
  TraceOperation 076197 (And (Var (Local 1)) (Con 48) (Local 7));
  SetLocal 7 And(GetLocal(1),48);
  TraceOperation 076201 (And (Var (Local 1)) (Con 1) (Local 1));
  SetLocal 1 And(GetLocal(1),1);
  TraceOperation 076205 (Push (Var (Global 37)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 076208 (Push (Var (Global 36)));
  Let b3 = M[007278];
  Let b4 = M[007279];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 076211 (Push (Var (Global 42)));
  Let b5 = M[007290];
  Let b6 = M[007291];
  PushStack MakeHiLo(b5,b6);
  TraceOperation 076214 (Push (Var (Global 43)));
  Let b7 = M[007292];
  Let b8 = M[007293];
  PushStack MakeHiLo(b7,b8);
  TraceOperation 076217 (Push (Var (Global 58)));
  Let b9 = M[007322];
  Let b10 = M[007323];
  PushStack MakeHiLo(b9,b10);
  TraceOperation 076220 (Store (Con 53) (Var (Local 2)));
  SetByte 007280 HiByte(GetLocal(2));
  SetByte 007281 LoByte(GetLocal(2));
  TraceOperation 076223 (Jz (Var (Local 1)) (Branch T (Dloc 076232)));
  if (IsZero(GetLocal(1))) {
    Jump: 076232
  } else {
    TraceOperation 076226 (Store (Con 52) (Var (Global 31)));
    Let b11 = M[007268];
    Let b12 = M[007269];
    SetByte 007278 b11;
    SetByte 007279 b12;
    TraceOperation 076229 (Jump 076235);
    Jump: 076235
  }
LocOp 076232:
  TraceOperation 076232 (Store (Con 52) (Con 0));
  SetByte 007278 0;
  SetByte 007279 0;
  Jump: 076235
LocOp 076235:
  TraceOperation 076235 (Call (Floc 076064) [Var (Local 3)] (Local 2));
  PushFrame;
  PushReturnAddress 076235;
  SetLocal 1 GetLocal(3);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 076065
LocReturn 076235:
  SetLocal 2 call_result;
  TraceOperation 076241 (Jz (Var (Local 2)) (Branch T (Dloc 076400)));
  if (IsZero(GetLocal(2))) {
    Jump: 076400
  } else {
    TraceOperation 076245 (Add (Var (Local 2)) (Con 2) Sp);
    PushStack Add(GetLocal(2),2);
    TraceOperation 076249 (Loadw (Con 12693) (Var Sp) Sp);
    PopStack popped1;
    Let b2 = M[Offset(012693,Mul(2,popped1))];
    Let b3 = M[Offset(Offset(012693,Mul(2,popped1)),1)];
    PushStack MakeHiLo(b2,b3);
    TraceOperation 076255 (Je [Var Sp,Con 61] (Branch F (Dloc 076265)));
    PopStack popped4;
    if (Equal(popped4,61)) {
      TraceOperation 076259 (Store (Con 58) (Var (Local 4)));
      SetByte 007290 HiByte(GetLocal(4));
      SetByte 007291 LoByte(GetLocal(4));
      TraceOperation 076262 (Jump 076271);
      Jump: 076271
    } else {
      Jump: 076265
    }
  }
LocOp 076265:
  TraceOperation 076265 (Store (Con 58) (Con 1));
  SetByte 007290 0;
  SetByte 007291 1;
  TraceOperation 076268 (Store (Con 74) (Var (Local 4)));
  SetByte 007322 HiByte(GetLocal(4));
  SetByte 007323 LoByte(GetLocal(4));
  Jump: 076271
LocOp 076271:
  TraceOperation 076271 (Add (Var (Local 2)) (Con 3) Sp);
  PushStack Add(GetLocal(2),3);
  TraceOperation 076275 (Loadw (Con 12693) (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(012693,Mul(2,popped1))];
  Let b3 = M[Offset(Offset(012693,Mul(2,popped1)),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 076281 (Je [Var Sp,Con 61] (Branch F (Dloc 076291)));
  PopStack popped4;
  if (Equal(popped4,61)) {
    TraceOperation 076285 (Store (Con 59) (Var (Local 5)));
    SetByte 007292 HiByte(GetLocal(5));
    SetByte 007293 LoByte(GetLocal(5));
    TraceOperation 076288 (Jump 076297);
    Jump: 076297
  } else {
    Jump: 076291
  }
LocOp 076291:
  TraceOperation 076291 (Store (Con 59) (Con 1));
  SetByte 007292 0;
  SetByte 007293 1;
  TraceOperation 076294 (Store (Con 74) (Var (Local 5)));
  SetByte 007322 HiByte(GetLocal(5));
  SetByte 007323 LoByte(GetLocal(5));
  Jump: 076297
LocOp 076297:
  TraceOperation 076297 (Add (Var (Local 2)) (Con 2) Sp);
  PushStack Add(GetLocal(2),2);
  TraceOperation 076301 (Loadw (Con 12693) (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(012693,Mul(2,popped1))];
  Let b3 = M[Offset(Offset(012693,Mul(2,popped1)),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 076307 (Je [Var Sp,Con 74] (Branch T (Dloc 076326)));
  PopStack popped4;
  if (Equal(popped4,74)) {
    Jump: 076326
  } else {
    TraceOperation 076311 (Add (Var (Local 2)) (Con 3) Sp);
    PushStack Add(GetLocal(2),3);
    TraceOperation 076315 (Loadw (Con 12693) (Var Sp) Sp);
    PopStack popped5;
    Let b6 = M[Offset(012693,Mul(2,popped5))];
    Let b7 = M[Offset(Offset(012693,Mul(2,popped5)),1)];
    PushStack MakeHiLo(b6,b7);
    TraceOperation 076321 (Je [Var Sp,Con 74] (Branch F (Dloc 076400)));
    PopStack popped8;
    if (Equal(popped8,74)) {
      Jump: 076326
    } else {
      Jump: 076400
    }
  }
LocOp 076326:
  TraceOperation 076326 (Jz (Var (Local 7)) (Branch T (Dloc 076400)));
  if (IsZero(GetLocal(7))) {
    Jump: 076400
  } else {
    TraceOperation 076330 (Call (Floc 110052) [] (Local 8));
    PushFrame;
    PushReturnAddress 076330;
    MakeRoutineFrame 0;
    Jump: 110053
  }
LocReturn 076330:
  SetLocal 8 call_result;
  TraceOperation 076334 (CallN (Floc 110056) [Var (Global 64),Con 59,Var (Local 8)]);
  Let b1 = M[007334];
  Let b2 = M[007335];
  PushFrame;
  PushReturnAddress 076334;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 59;
  SetLocal 3 GetLocal(8);
  MakeRoutineFrame 3;
  Jump: 110057
LocReturn 076334:
  TraceOperation 076341 (Call (Floc 110052) [] (Local 9));
  PushFrame;
  PushReturnAddress 076341;
  MakeRoutineFrame 0;
  Jump: 110053
LocReturn 076341:
  SetLocal 9 call_result;
  TraceOperation 076345 (CallN (Floc 110056) [Var (Global 58),Con 56,Var (Local 9)]);
  Let b1 = M[007322];
  Let b2 = M[007323];
  PushFrame;
  PushReturnAddress 076345;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 56;
  SetLocal 3 GetLocal(9);
  MakeRoutineFrame 3;
  Jump: 110057
LocReturn 076345:
  TraceOperation 076352 (CallN (Floc 110048) [Var (Local 9)]);
  PushFrame;
  PushReturnAddress 076352;
  SetLocal 1 GetLocal(9);
  MakeRoutineFrame 1;
  Jump: 110049
LocReturn 076352:
  TraceOperation 076357 (Je [Var (Local 7),Con 16] (Branch F (Dloc 076373)));
  if (Equal(GetLocal(7),16)) {
    TraceOperation 076361 (Store (Con 4) (Var (Global 64)));
    Let b1 = M[007334];
    Let b2 = M[007335];
    SetLocal 4 MakeHiLo(b1,b2);
    TraceOperation 076364 (Store (Con 58) (Con 1));
    SetByte 007290 0;
    SetByte 007291 1;
    TraceOperation 076367 (Store (Con 74) (Var (Global 64)));
    Let b3 = M[007334];
    Let b4 = M[007335];
    SetByte 007322 b3;
    SetByte 007323 b4;
    TraceOperation 076370 (Jump 076382);
    Jump: 076382
  } else {
    Jump: 076373
  }
LocOp 076373:
  TraceOperation 076373 (Store (Con 5) (Var (Global 64)));
  Let b1 = M[007334];
  Let b2 = M[007335];
  SetLocal 5 MakeHiLo(b1,b2);
  TraceOperation 076376 (Store (Con 59) (Con 1));
  SetByte 007292 0;
  SetByte 007293 1;
  TraceOperation 076379 (Store (Con 74) (Var (Global 64)));
  Let b3 = M[007334];
  Let b4 = M[007335];
  SetByte 007322 b3;
  SetByte 007323 b4;
  Jump: 076382
LocOp 076382:
  TraceOperation 076382 (CallN (Floc 110012) [Var (Local 9)]);
  PushFrame;
  PushReturnAddress 076382;
  SetLocal 1 GetLocal(9);
  MakeRoutineFrame 0;
  Jump: 110013
LocReturn 076382:
  TraceOperation 076387 (Push (Var (Global 56)));
  Let b1 = M[007318];
  Let b2 = M[007319];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 076390 (Push (Var (Global 57)));
  Let b3 = M[007320];
  Let b4 = M[007321];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 076393 (Store (Con 72) (Con 1));
  SetByte 007318 0;
  SetByte 007319 1;
  TraceOperation 076396 (Sub (Var (Global 58)) (Con 100) (Global 57));
  Let b5 = M[007322];
  Let b6 = M[007323];
  SetByte 007320 HiByte(Sub(MakeHiLo(b5,b6),100));
  SetByte 007321 LoByte(Sub(MakeHiLo(b5,b6),100));
  Jump: 076400
LocOp 076400:
  TraceOperation 076400 (CallN (Floc 076760) [Var (Local 3),Var (Local 4),Var (Local 5),Con 0,Con 1]);
  PushFrame;
  PushReturnAddress 076400;
  SetLocal 1 GetLocal(3);
  SetLocal 2 GetLocal(4);
  SetLocal 3 GetLocal(5);
  SetLocal 4 0;
  SetLocal 5 1;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  Jump: 076761
LocReturn 076400:
  TraceOperation 076410 (Jz (Var (Local 8)) (Branch T (Dloc 076429)));
  if (IsZero(GetLocal(8))) {
    Jump: 076429
  } else {
    TraceOperation 076413 (Pull (Con 73));
    PopStack popped1;
    SetByte 007320 HiByte(popped1);
    SetByte 007321 LoByte(popped1);
    TraceOperation 076416 (Pull (Con 72));
    PopStack popped2;
    SetByte 007318 HiByte(popped2);
    SetByte 007319 LoByte(popped2);
    TraceOperation 076419 (CallN (Floc 110048) [Var (Local 8)]);
    PushFrame;
    PushReturnAddress 076419;
    SetLocal 1 GetLocal(8);
    MakeRoutineFrame 1;
    Jump: 110049
  }
LocReturn 076419:
  TraceOperation 076424 (CallN (Floc 110012) [Var (Local 8)]);
  PushFrame;
  PushReturnAddress 076424;
  SetLocal 1 GetLocal(8);
  MakeRoutineFrame 0;
  Jump: 110013
LocReturn 076424:
  Jump: 076429
LocOp 076429:
  TraceOperation 076429 (Pull (Con 74));
  PopStack popped1;
  SetByte 007322 HiByte(popped1);
  SetByte 007323 LoByte(popped1);
  TraceOperation 076432 (Pull (Con 59));
  PopStack popped2;
  SetByte 007292 HiByte(popped2);
  SetByte 007293 LoByte(popped2);
  TraceOperation 076435 (Pull (Con 58));
  PopStack popped3;
  SetByte 007290 HiByte(popped3);
  SetByte 007291 LoByte(popped3);
  TraceOperation 076438 (Pull (Con 52));
  PopStack popped4;
  SetByte 007278 HiByte(popped4);
  SetByte 007279 LoByte(popped4);
  TraceOperation 076441 (Pull (Con 53));
  PopStack popped5;
  SetByte 007280 HiByte(popped5);
  SetByte 007281 LoByte(popped5);
  TraceOperation 076444 (CallN (Floc 106600) [Con 1]);
  PushFrame;
  PushReturnAddress 076444;
  SetLocal 1 1;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 106601
LocReturn 076444:
  TraceOperation 076449 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 076452:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 076453
LocOp 076453:
  TraceOperation 076453 (Push (Var (Global 42)));
  Let b1 = M[007290];
  Let b2 = M[007291];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 076456 (Push (Var (Global 43)));
  Let b3 = M[007292];
  Let b4 = M[007293];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 076459 (Store (Con 58) (Var (Local 2)));
  SetByte 007290 HiByte(GetLocal(2));
  SetByte 007291 LoByte(GetLocal(2));
  TraceOperation 076462 (Store (Con 59) (Var (Local 3)));
  SetByte 007292 HiByte(GetLocal(3));
  SetByte 007293 LoByte(GetLocal(3));
  TraceOperation 076465 (CallN (Floc 076760) [Var (Local 1),Var (Local 2),Var (Local 3)]);
  PushFrame;
  PushReturnAddress 076465;
  SetLocal 1 GetLocal(1);
  SetLocal 2 GetLocal(2);
  SetLocal 3 GetLocal(3);
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 076761
LocReturn 076465:
  TraceOperation 076472 (Pull (Con 59));
  PopStack popped1;
  SetByte 007292 HiByte(popped1);
  SetByte 007293 LoByte(popped1);
  TraceOperation 076475 (Pull (Con 58));
  PopStack popped2;
  SetByte 007290 HiByte(popped2);
  SetByte 007291 LoByte(popped2);
  TraceOperation 076478 Rtrue;
  PopFrame;
  PopReturnAddress return_address_3;
  SetResult 1;
  JumpIndirect: (return) return_address_3
--------------------------------------------------
LocRoutine 076480:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 076481
LocOp 076481:
  TraceOperation 076481 (Call (Floc 076760) [Var (Local 1),Var (Local 2),Var (Local 3)] (Global 182));
  PushFrame;
  PushReturnAddress 076481;
  SetLocal 1 GetLocal(1);
  SetLocal 2 GetLocal(2);
  SetLocal 3 GetLocal(3);
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 076761
LocReturn 076481:
  SetByte 007570 HiByte(call_result);
  SetByte 007571 LoByte(call_result);
  TraceOperation 076489 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 076492:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 076493
LocOp 076493:
  TraceOperation 076493 (Store (Con 1) (Var (Global 47)));
  Let b1 = M[007300];
  Let b2 = M[007301];
  SetLocal 1 MakeHiLo(b1,b2);
  TraceOperation 076496 (Jin (Var (Global 37)) (Var (Global 47)) (Branch T (Dloc 076506)));
  Let b3 = M[007280];
  Let b4 = M[007281];
  Let b5 = M[007300];
  Let b6 = M[007301];
  Let b7 = M[Offset(Offset(000378,Mul(MakeHiLo(b3,b4),14)),6)];
  Let b8 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b3,b4),14)),6),1)];
  if (Equal(MakeHiLo(b5,b6),MakeHiLo(b7,b8))) {
    Jump: 076506
  } else {
    TraceOperation 076500 (Insert_obj (Var (Local 1)) (Var (Global 37)));
    Let b9 = M[007280];
    Let b10 = M[007281];
    Let b11 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),6)];
    Let b12 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),6),1)];
    if (IsZero(MakeHiLo(b11,b12))) {} else {
      Let b13 = M[Offset(Offset(000378,Mul(MakeHiLo(b11,b12),14)),10)];
      Let b14 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b11,b12),14)),10),1)];
      if (Equal(MakeHiLo(b13,b14),GetLocal(1))) {
        Let b15 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),8)];
        Let b16 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),8),1)];
        SetByte Offset(Offset(000378,Mul(MakeHiLo(b11,b12),14)),10) b15;
        SetByte Offset(Offset(Offset(000378,Mul(MakeHiLo(b11,b12),14)),10),1) b16;
      } else {
        Let loop_var17 = MakeHiLo(b13,b14);
        Label 18: {
          Let b19 = M[Offset(Offset(000378,Mul(loop_var17,14)),8)];
          Let b20 = M[Offset(Offset(Offset(000378,Mul(loop_var17,14)),8),1)];
          if (Equal(MakeHiLo(b19,b20),GetLocal(1))) {
            Let b21 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),8)];
            Let b22 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),8),1)];
            SetByte Offset(Offset(000378,Mul(loop_var17,14)),8) b21;
            SetByte Offset(Offset(Offset(000378,Mul(loop_var17,14)),8),1) b22;
          } else {
            Assign loop_var17 = MakeHiLo(b19,b20);
            Goto: Label 18
          }
        }
      }
    }
    SetByte Offset(Offset(000378,Mul(GetLocal(1),14)),6) b9;
    SetByte Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),6),1) b10;
    Let b23 = M[Offset(Offset(000378,Mul(MakeHiLo(b9,b10),14)),10)];
    Let b24 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b9,b10),14)),10),1)];
    SetByte Offset(Offset(000378,Mul(GetLocal(1),14)),8) b23;
    SetByte Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),8),1) b24;
    SetByte Offset(Offset(000378,Mul(MakeHiLo(b9,b10),14)),10) HiByte(GetLocal(1));
    SetByte Offset(Offset(Offset(000378,Mul(MakeHiLo(b9,b10),14)),10),1) LoByte(GetLocal(1));
    TraceOperation 076503 (Store (Con 4) (Con 1));
    SetLocal 4 1;
    Jump: 076506
  }
LocOp 076506:
  TraceOperation 076506 (Store (Con 103) (Var (Local 1)));
  SetByte 007380 HiByte(GetLocal(1));
  SetByte 007381 LoByte(GetLocal(1));
  TraceOperation 076509 (Call (Floc 102544) [Var (Global 47)] (Local 2));
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 076509;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 1;
  Jump: 102545
LocReturn 076509:
  SetLocal 2 call_result;
  TraceOperation 076515 (CallN (Floc 076760) [Con 26,Var (Global 48)]);
  Let b1 = M[007302];
  Let b2 = M[007303];
  PushFrame;
  PushReturnAddress 076515;
  SetLocal 1 26;
  SetLocal 2 MakeHiLo(b1,b2);
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 076761
LocReturn 076515:
  TraceOperation 076521 (Call (Floc 102544) [Var (Global 37)] (Local 3));
  Let b1 = M[007280];
  Let b2 = M[007281];
  PushFrame;
  PushReturnAddress 076521;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 1;
  Jump: 102545
LocReturn 076521:
  SetLocal 3 call_result;
  TraceOperation 076527 (Store (Con 103) (Con 0));
  SetByte 007380 0;
  SetByte 007381 0;
  TraceOperation 076530 (Insert_obj (Var (Local 1)) (Var (Local 3)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),6)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),6),1)];
  if (IsZero(MakeHiLo(b1,b2))) {} else {
    Let b3 = M[Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),10)];
    Let b4 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),10),1)];
    if (Equal(MakeHiLo(b3,b4),GetLocal(1))) {
      Let b5 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),8)];
      Let b6 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),8),1)];
      SetByte Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),10) b5;
      SetByte Offset(Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),10),1) b6;
    } else {
      Let loop_var7 = MakeHiLo(b3,b4);
      Label 8: {
        Let b9 = M[Offset(Offset(000378,Mul(loop_var7,14)),8)];
        Let b10 = M[Offset(Offset(Offset(000378,Mul(loop_var7,14)),8),1)];
        if (Equal(MakeHiLo(b9,b10),GetLocal(1))) {
          Let b11 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),8)];
          Let b12 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),8),1)];
          SetByte Offset(Offset(000378,Mul(loop_var7,14)),8) b11;
          SetByte Offset(Offset(Offset(000378,Mul(loop_var7,14)),8),1) b12;
        } else {
          Assign loop_var7 = MakeHiLo(b9,b10);
          Goto: Label 8
        }
      }
    }
  }
  SetByte Offset(Offset(000378,Mul(GetLocal(1),14)),6) HiByte(GetLocal(3));
  SetByte Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),6),1) LoByte(GetLocal(3));
  Let b13 = M[Offset(Offset(000378,Mul(GetLocal(3),14)),10)];
  Let b14 = M[Offset(Offset(Offset(000378,Mul(GetLocal(3),14)),10),1)];
  SetByte Offset(Offset(000378,Mul(GetLocal(1),14)),8) b13;
  SetByte Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),8),1) b14;
  SetByte Offset(Offset(000378,Mul(GetLocal(3),14)),10) HiByte(GetLocal(1));
  SetByte Offset(Offset(Offset(000378,Mul(GetLocal(3),14)),10),1) LoByte(GetLocal(1));
  TraceOperation 076533 (Je [Var (Local 3),Var (Local 2)] (Branch T (Dloc 076563)));
  if (Equal(GetLocal(3),GetLocal(2))) {
    Jump: 076563
  } else {
    TraceOperation 076537 (Call (Floc 102676) [Var (Local 1),Var (Global 31)] Sp);
    Let b15 = M[007268];
    Let b16 = M[007269];
    PushFrame;
    PushReturnAddress 076537;
    SetLocal 1 GetLocal(1);
    SetLocal 2 MakeHiLo(b15,b16);
    MakeRoutineFrame 2;
    Jump: 102677
  }
LocReturn 076537:
  PushStack call_result;
  TraceOperation 076544 (Jz (Var Sp) (Branch T (Dloc 076557)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 076557
  } else {
    TraceOperation 076547 (CallN (Floc 076180) [Con 0,Var (Global 31),Con 7,Con 0,Con 0]);
    Let b2 = M[007268];
    Let b3 = M[007269];
    PushFrame;
    PushReturnAddress 076547;
    SetLocal 1 0;
    SetLocal 2 MakeHiLo(b2,b3);
    SetLocal 3 7;
    SetLocal 4 0;
    SetLocal 5 0;
    MakeRoutineFrame 9;
    SetLocal 9 0;
    SetLocal 8 0;
    SetLocal 7 0;
    SetLocal 6 0;
    Jump: 076181
  }
LocReturn 076547:
  Jump: 076557
LocOp 076557:
  TraceOperation 076557 (CallN (Floc 089744) []);
  PushFrame;
  PushReturnAddress 076557;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  SetLocal 1 0;
  Jump: 089745
LocReturn 076557:
  TraceOperation 076560 (Jump 076566);
  Jump: 076566
LocOp 076563:
  TraceOperation 076563 (CallN (Floc 089760) []);
  PushFrame;
  PushReturnAddress 076563;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  SetLocal 1 0;
  Jump: 089761
LocReturn 076563:
  Jump: 076566
LocOp 076566:
  TraceOperation 076566 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 076568:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 076569
LocOp 076569:
  TraceOperation 076569 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 076584)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 076573 (CallN (Floc 036596) [Con 4097,Con 69,Var (Local 1)]);
    PushFrame;
    PushReturnAddress 076573;
    SetLocal 1 4097;
    SetLocal 2 69;
    SetLocal 3 GetLocal(1);
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    Jump: 036597
  } else {
    Jump: 076584
  }
LocReturn 076573:
  TraceOperation 076581 (Jump 076592);
  Jump: 076592
LocOp 076584:
  TraceOperation 076584 (CallN (Floc 036596) [Con 4097,Con 68,Var (Local 1)]);
  PushFrame;
  PushReturnAddress 076584;
  SetLocal 1 4097;
  SetLocal 2 68;
  SetLocal 3 GetLocal(1);
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 036597
LocReturn 076584:
  Jump: 076592
LocOp 076592:
  TraceOperation 076592 (CallN (Floc 080308) []);
  PushFrame;
  PushReturnAddress 076592;
  MakeRoutineFrame 0;
  Jump: 080309
LocReturn 076592:
  TraceOperation 076595 (Push (Var (Global 49)));
  Let b1 = M[007304];
  Let b2 = M[007305];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 076598 (Store (Con 65) (Con 1));
  SetByte 007304 0;
  SetByte 007305 1;
  TraceOperation 076601 (Jz (Var (Global 36)) (Branch T (Dloc 076617)));
  Let b3 = M[007278];
  Let b4 = M[007279];
  if (IsZero(MakeHiLo(b3,b4))) {
    Jump: 076617
  } else {
    TraceOperation 076604 (CallN (Floc 076180) [Con 1,Var (Global 37),Con 64,Var (Local 1),Con 0]);
    Let b5 = M[007280];
    Let b6 = M[007281];
    PushFrame;
    PushReturnAddress 076604;
    SetLocal 1 1;
    SetLocal 2 MakeHiLo(b5,b6);
    SetLocal 3 64;
    SetLocal 4 GetLocal(1);
    SetLocal 5 0;
    MakeRoutineFrame 9;
    SetLocal 9 0;
    SetLocal 8 0;
    SetLocal 7 0;
    SetLocal 6 0;
    Jump: 076181
  }
LocReturn 076604:
  TraceOperation 076614 (Jump 076627);
  Jump: 076627
LocOp 076617:
  TraceOperation 076617 (CallN (Floc 076180) [Con 0,Var (Global 37),Con 64,Var (Local 1),Con 0]);
  Let b1 = M[007280];
  Let b2 = M[007281];
  PushFrame;
  PushReturnAddress 076617;
  SetLocal 1 0;
  SetLocal 2 MakeHiLo(b1,b2);
  SetLocal 3 64;
  SetLocal 4 GetLocal(1);
  SetLocal 5 0;
  MakeRoutineFrame 9;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  Jump: 076181
LocReturn 076617:
  Jump: 076627
LocOp 076627:
  TraceOperation 076627 (Pull (Con 65));
  PopStack popped1;
  SetByte 007304 HiByte(popped1);
  SetByte 007305 LoByte(popped1);
  TraceOperation 076630 (Jin (Var (Local 1)) (Var (Global 37)) (Branch T Dtrue));
  Let b2 = M[007280];
  Let b3 = M[007281];
  Let b4 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),6)];
  Let b5 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),6),1)];
  if (Equal(MakeHiLo(b2,b3),MakeHiLo(b4,b5))) {
    PopFrame;
    PopReturnAddress return_address_6;
    SetResult 1;
    JumpIndirect: (return) return_address_6
  } else {
    TraceOperation 076634 Rfalse;
    PopFrame;
    PopReturnAddress return_address_7;
    SetResult 0;
    JumpIndirect: (return) return_address_7
  }
--------------------------------------------------
LocRoutine 076636:
  MakeRoutineFrame 0;
  Jump: 076637
LocOp 076637:
  TraceOperation 076637 (CallN (Floc 080352) []);
  PushFrame;
  PushReturnAddress 076637;
  MakeRoutineFrame 0;
  Jump: 080353
LocReturn 076637:
  TraceOperation 076640 (CallN (Floc 076644) []);
  PushFrame;
  PushReturnAddress 076640;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  SetLocal 2 0;
  SetLocal 1 0;
  Jump: 076645
LocReturn 076640:
  TraceOperation 076643 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 076644:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 076645
LocOp 076645:
  TraceOperation 076645 (Store (Con 1) (Var (Global 40)));
  Let b1 = M[007286];
  Let b2 = M[007287];
  SetLocal 1 MakeHiLo(b1,b2);
  TraceOperation 076648 (Store (Con 56) (Con 7));
  SetByte 007286 0;
  SetByte 007287 7;
  TraceOperation 076651 (Call (Floc 076064) [Con 7] (Local 2));
  PushFrame;
  PushReturnAddress 076651;
  SetLocal 1 7;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 076065
LocReturn 076651:
  SetLocal 2 call_result;
  TraceOperation 076657 (Jz (Var (Local 2)) (Branch T (Dloc 076731)));
  if (IsZero(GetLocal(2))) {
    Jump: 076731
  } else {
    TraceOperation 076661 (Add (Var (Local 2)) (Con 9) Sp);
    PushStack Add(GetLocal(2),9);
    TraceOperation 076665 (Loadw (Con 12693) (Var Sp) Sp);
    PopStack popped1;
    Let b2 = M[Offset(012693,Mul(2,popped1))];
    Let b3 = M[Offset(Offset(012693,Mul(2,popped1)),1)];
    PushStack MakeHiLo(b2,b3);
    TraceOperation 076671 (Jz (Var Sp) (Branch T (Dloc 076731)));
    PopStack popped4;
    if (IsZero(popped4)) {
      Jump: 076731
    } else {
      TraceOperation 076674 (Add (Var (Local 2)) (Con 10) Sp);
      PushStack Add(GetLocal(2),10);
      TraceOperation 076678 (Loadw (Con 12693) (Var Sp) (Local 3));
      PopStack popped5;
      Let b6 = M[Offset(012693,Mul(2,popped5))];
      Let b7 = M[Offset(Offset(012693,Mul(2,popped5)),1)];
      SetLocal 3 MakeHiLo(b6,b7);
      TraceOperation 076684 (Add (Var (Local 2)) (Con 9) Sp);
      PushStack Add(GetLocal(2),9);
      TraceOperation 076688 (Loadw (Con 12693) (Var Sp) Sp);
      PopStack popped8;
      Let b9 = M[Offset(012693,Mul(2,popped8))];
      Let b10 = M[Offset(Offset(012693,Mul(2,popped8)),1)];
      PushStack MakeHiLo(b9,b10);
      TraceOperation 076694 (CallN (Floc 079320) [Var Sp,Var (Local 3)]);
      PopStack popped11;
      PushFrame;
      PushReturnAddress 076694;
      SetLocal 1 popped11;
      SetLocal 2 GetLocal(3);
      MakeRoutineFrame 3;
      SetLocal 3 0;
      Jump: 079321
    }
  }
LocReturn 076694:
  TraceOperation 076700 (CallN (Floc 088936) [Con 9]);
  PushFrame;
  PushReturnAddress 076700;
  SetLocal 1 9;
  MakeRoutineFrame 14;
  SetLocal 14 0;
  SetLocal 13 0;
  SetLocal 12 0;
  SetLocal 11 0;
  SetLocal 10 0;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 088937
LocReturn 076700:
  TraceOperation 076705 (Call (Floc 079624) [Var (Local 3),Con 0] Sp);
  PushFrame;
  PushReturnAddress 076705;
  SetLocal 1 GetLocal(3);
  SetLocal 2 0;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 079625
LocReturn 076705:
  PushStack call_result;
  TraceOperation 076712 (Storew (Con 16625) (Var Sp) (Var (Local 1)));
  PopStack popped1;
  SetByte Offset(016625,Mul(2,popped1)) HiByte(GetLocal(1));
  SetByte Offset(Offset(016625,Mul(2,popped1)),1) LoByte(GetLocal(1));
  TraceOperation 076718 (Call (Floc 079624) [Var (Local 3),Con 1] Sp);
  PushFrame;
  PushReturnAddress 076718;
  SetLocal 1 GetLocal(3);
  SetLocal 2 1;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 079625
LocReturn 076718:
  PushStack call_result;
  TraceOperation 076725 (Storew (Con 16625) (Var Sp) (Con 1));
  PopStack popped1;
  SetByte Offset(016625,Mul(2,popped1)) 0;
  SetByte Offset(Offset(016625,Mul(2,popped1)),1) 1;
  Jump: 076731
LocOp 076731:
  TraceOperation 076731 (CallN (Floc 055432) []);
  PushFrame;
  PushReturnAddress 076731;
  MakeRoutineFrame 0;
  Jump: 055433
LocReturn 076731:
  TraceOperation 076734 (Jz (Var (Local 3)) (Branch T (Dloc 076753)));
  if (IsZero(GetLocal(3))) {
    Jump: 076753
  } else {
    TraceOperation 076737 (Add (Var (Local 2)) (Con 9) Sp);
    PushStack Add(GetLocal(2),9);
    TraceOperation 076741 (Loadw (Con 12693) (Var Sp) Sp);
    PopStack popped1;
    Let b2 = M[Offset(012693,Mul(2,popped1))];
    Let b3 = M[Offset(Offset(012693,Mul(2,popped1)),1)];
    PushStack MakeHiLo(b2,b3);
    TraceOperation 076747 (CallN (Floc 079388) [Var Sp,Var (Local 3)]);
    PopStack popped4;
    PushFrame;
    PushReturnAddress 076747;
    SetLocal 1 popped4;
    SetLocal 2 GetLocal(3);
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 079389
  }
LocReturn 076747:
  Jump: 076753
LocOp 076753:
  TraceOperation 076753 (Store (Con 56) (Var (Local 1)));
  SetByte 007286 HiByte(GetLocal(1));
  SetByte 007287 LoByte(GetLocal(1));
  TraceOperation 076756 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 076760:
  MakeRoutineFrame 6;
  if (LessThanByte(num_actuals,6)) {
    SetLocal 6 0;
    if (LessThanByte(num_actuals,5)) {
      SetLocal 5 0;
      if (LessThanByte(num_actuals,4)) {
        SetLocal 4 0;
        if (LessThanByte(num_actuals,3)) {
          SetLocal 3 0;
          if (LessThanByte(num_actuals,2)) {
            SetLocal 2 0;
            if (LessThanByte(num_actuals,1)) {
              SetLocal 1 0;
            }
          }
        }
      }
    }
  }
  Jump: 076761
LocOp 076761:
  TraceOperation 076761 (CallN (Floc 106256) []);
  PushFrame;
  PushReturnAddress 076761;
  MakeRoutineFrame 1;
  SetLocal 1 0;
  Jump: 106257
LocReturn 076761:
  TraceOperation 076764 (Push (Var (Global 40)));
  Let b1 = M[007286];
  Let b2 = M[007287];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 076767 (Push (Var (Global 47)));
  Let b3 = M[007300];
  Let b4 = M[007301];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 076770 (Push (Var (Global 48)));
  Let b5 = M[007302];
  Let b6 = M[007303];
  PushStack MakeHiLo(b5,b6);
  TraceOperation 076773 (Push (Var (Global 235)));
  Let b7 = M[007676];
  Let b8 = M[007677];
  PushStack MakeHiLo(b7,b8);
  TraceOperation 076776 (Push (Var (Global 46)));
  Let b9 = M[007298];
  Let b10 = M[007299];
  PushStack MakeHiLo(b9,b10);
  TraceOperation 076779 (Store (Con 56) (Var (Local 1)));
  SetByte 007286 HiByte(GetLocal(1));
  SetByte 007287 LoByte(GetLocal(1));
  TraceOperation 076782 (Store (Con 63) (Var (Local 2)));
  SetByte 007300 HiByte(GetLocal(2));
  SetByte 007301 LoByte(GetLocal(2));
  TraceOperation 076785 (Store (Con 64) (Var (Local 3)));
  SetByte 007302 HiByte(GetLocal(3));
  SetByte 007303 LoByte(GetLocal(3));
  TraceOperation 076788 (Store (Con 251) (Var (Global 47)));
  Let b11 = M[007300];
  Let b12 = M[007301];
  SetByte 007676 b11;
  SetByte 007677 b12;
  TraceOperation 076791 (Store (Con 62) (Var (Local 4)));
  SetByte 007298 HiByte(GetLocal(4));
  SetByte 007299 LoByte(GetLocal(4));
  TraceOperation 076794 (Jl (Var (Global 40)) (Con 4096) (Branch F (Dloc 076804)));
  Let b13 = M[007286];
  Let b14 = M[007287];
  if (LessThan(MakeHiLo(b13,b14),4096)) {
    TraceOperation 076800 (Call (Floc 076832) [] (Local 6));
    PushFrame;
    PushReturnAddress 076800;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    SetLocal 2 0;
    SetLocal 1 0;
    Jump: 076833
  } else {
    Jump: 076804
  }
LocReturn 076800:
  SetLocal 6 call_result;
  Jump: 076804
LocOp 076804:
  TraceOperation 076804 (Pull (Con 62));
  PopStack popped1;
  SetByte 007298 HiByte(popped1);
  SetByte 007299 LoByte(popped1);
  TraceOperation 076807 (Pull (Con 251));
  PopStack popped2;
  SetByte 007676 HiByte(popped2);
  SetByte 007677 LoByte(popped2);
  TraceOperation 076810 (Pull (Con 64));
  PopStack popped3;
  SetByte 007302 HiByte(popped3);
  SetByte 007303 LoByte(popped3);
  TraceOperation 076813 (Pull (Con 63));
  PopStack popped4;
  SetByte 007300 HiByte(popped4);
  SetByte 007301 LoByte(popped4);
  TraceOperation 076816 (Pull (Con 56));
  PopStack popped5;
  SetByte 007286 HiByte(popped5);
  SetByte 007287 LoByte(popped5);
  TraceOperation 076819 (Jz (Var (Local 5)) (Branch F (Dloc 076827)));
  if (IsZero(GetLocal(5))) {
    TraceOperation 076822 (CallN (Floc 106600) [Con 1]);
    PushFrame;
    PushReturnAddress 076822;
    SetLocal 1 1;
    MakeRoutineFrame 4;
    SetLocal 4 0;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 106601
  } else {
    Jump: 076827
  }
LocReturn 076822:
  Jump: 076827
LocOp 076827:
  TraceOperation 076827 (Ret (Var (Local 6)));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult GetLocal(6);
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 077032:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 077033
LocOp 077033:
  TraceOperation 077033 (Call (Floc 076064) [Con -1] (Local 4));
  PushFrame;
  PushReturnAddress 077033;
  SetLocal 1 -1;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 076065
LocReturn 077033:
  SetLocal 4 call_result;
  TraceOperation 077040 (Jz (Var (Local 4)) (Branch T Dfalse));
  if (IsZero(GetLocal(4))) {
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 0;
    JumpIndirect: (return) return_address_1
  } else {
    TraceOperation 077043 (Add (Var (Local 4)) (Con 1) Sp);
    PushStack Add(GetLocal(4),1);
    TraceOperation 077047 (Loadw (Con 12693) (Var Sp) (Local 1));
    PopStack popped2;
    Let b3 = M[Offset(012693,Mul(2,popped2))];
    Let b4 = M[Offset(Offset(012693,Mul(2,popped2)),1)];
    SetLocal 1 MakeHiLo(b3,b4);
    TraceOperation 077053 (And (Var (Local 1)) (Con 32) Sp);
    PushStack And(GetLocal(1),32);
    TraceOperation 077057 (Jz (Var Sp) (Branch T (Dloc 077064)));
    PopStack popped5;
    if (IsZero(popped5)) {
      Jump: 077064
    } else {
      TraceOperation 077060 (Store (Con 57) (Con 1));
      SetByte 007288 0;
      SetByte 007289 1;
      TraceOperation 077063 Rfalse;
      PopFrame;
      PopReturnAddress return_address_6;
      SetResult 0;
      JumpIndirect: (return) return_address_6
    }
  }
LocOp 077064:
  TraceOperation 077064 (Add (Var (Local 4)) (Con 2) Sp);
  PushStack Add(GetLocal(4),2);
  TraceOperation 077068 (Loadw (Con 12693) (Var Sp) (Local 2));
  PopStack popped1;
  Let b2 = M[Offset(012693,Mul(2,popped1))];
  Let b3 = M[Offset(Offset(012693,Mul(2,popped1)),1)];
  SetLocal 2 MakeHiLo(b2,b3);
  TraceOperation 077074 (Add (Var (Local 4)) (Con 3) Sp);
  PushStack Add(GetLocal(4),3);
  TraceOperation 077078 (Loadw (Con 12693) (Var Sp) (Local 3));
  PopStack popped4;
  Let b5 = M[Offset(012693,Mul(2,popped4))];
  Let b6 = M[Offset(Offset(012693,Mul(2,popped4)),1)];
  SetLocal 3 MakeHiLo(b5,b6);
  TraceOperation 077084 (Je [Var (Local 2),Con 59,Con 74] (Branch F (Dloc 077114)));
  if (LogOr(Equal(GetLocal(2),59),Equal(GetLocal(2),74))) {
    TraceOperation 077090 (Je [Var (Global 42),Con 1] (Branch T (Dloc 077100)));
    Let b7 = M[007290];
    Let b8 = M[007291];
    if (Equal(MakeHiLo(b7,b8),1)) {
      Jump: 077100
    } else {
      TraceOperation 077094 (Store (Con 59) (Var (Global 42)));
      Let b9 = M[007290];
      Let b10 = M[007291];
      SetByte 007292 b9;
      SetByte 007293 b10;
      TraceOperation 077097 (Store (Con 64) (Var (Global 47)));
      Let b11 = M[007300];
      Let b12 = M[007301];
      SetByte 007302 b11;
      SetByte 007303 b12;
      Jump: 077100
    }
  } else {
    Jump: 077114
  }
LocOp 077100:
  TraceOperation 077100 (Mul (Con 100) (Var (Global 56)) Sp);
  Let b1 = M[007318];
  Let b2 = M[007319];
  PushStack Mul(100,MakeHiLo(b1,b2));
  TraceOperation 077104 (Add (Var Sp) (Var (Global 57)) (Global 58));
  PopStack popped3;
  Let b4 = M[007320];
  Let b5 = M[007321];
  SetByte 007322 HiByte(Add(popped3,MakeHiLo(b4,b5)));
  SetByte 007323 LoByte(Add(popped3,MakeHiLo(b4,b5)));
  TraceOperation 077108 (Store (Con 58) (Con 1));
  SetByte 007290 0;
  SetByte 007291 1;
  TraceOperation 077111 (Store (Con 63) (Var (Global 58)));
  Let b6 = M[007322];
  Let b7 = M[007323];
  SetByte 007300 b6;
  SetByte 007301 b7;
  Jump: 077114
LocOp 077114:
  TraceOperation 077114 (Je [Var (Local 3),Con 59,Con 74] (Branch F (Dloc 077134)));
  if (LogOr(Equal(GetLocal(3),59),Equal(GetLocal(3),74))) {
    TraceOperation 077120 (Mul (Con 100) (Var (Global 56)) Sp);
    Let b1 = M[007318];
    Let b2 = M[007319];
    PushStack Mul(100,MakeHiLo(b1,b2));
    TraceOperation 077124 (Add (Var Sp) (Var (Global 57)) (Global 58));
    PopStack popped3;
    Let b4 = M[007320];
    Let b5 = M[007321];
    SetByte 007322 HiByte(Add(popped3,MakeHiLo(b4,b5)));
    SetByte 007323 LoByte(Add(popped3,MakeHiLo(b4,b5)));
    TraceOperation 077128 (Store (Con 59) (Con 1));
    SetByte 007292 0;
    SetByte 007293 1;
    TraceOperation 077131 (Store (Con 64) (Var (Global 58)));
    Let b6 = M[007322];
    Let b7 = M[007323];
    SetByte 007302 b6;
    SetByte 007303 b7;
    Jump: 077134
  } else {
    Jump: 077134
  }
LocOp 077134:
  TraceOperation 077134 (Je [Var (Global 42),Con 1] (Branch F (Dloc 077154)));
  Let b1 = M[007290];
  Let b2 = M[007291];
  if (Equal(MakeHiLo(b1,b2),1)) {
    TraceOperation 077138 (Je [Var (Local 2),Con 61] (Branch F (Dloc 077151)));
    if (Equal(GetLocal(2),61)) {
      TraceOperation 077142 (Call (Floc 036596) [Con 4097,Con 61] Sp);
      PushFrame;
      PushReturnAddress 077142;
      SetLocal 1 4097;
      SetLocal 2 61;
      MakeRoutineFrame 6;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      SetLocal 3 0;
      Jump: 036597
    } else {
      Jump: 077151
    }
  } else {
    Jump: 077154
  }
LocReturn 077142:
  PushStack call_result;
  TraceOperation 077150 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 077151:
  TraceOperation 077151 (Jump 077225);
  Jump: 077225
LocOp 077154:
  TraceOperation 077154 (Je [Var (Local 2),Con 61] (Branch T (Dloc 077167)));
  if (Equal(GetLocal(2),61)) {
    Jump: 077167
  } else {
    TraceOperation 077158 (Call (Floc 036596) [Con 4097,Con 62] Sp);
    PushFrame;
    PushReturnAddress 077158;
    SetLocal 1 4097;
    SetLocal 2 62;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 036597
  }
LocReturn 077158:
  PushStack call_result;
  TraceOperation 077166 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 077167:
  TraceOperation 077167 (And (Var (Local 1)) (Con 8) Sp);
  PushStack And(GetLocal(1),8);
  TraceOperation 077171 (Jz (Var Sp) (Branch T (Dloc 077206)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 077206
  } else {
    TraceOperation 077174 (Jz (Var (Global 47)) (Branch F (Dloc 077206)));
    Let b2 = M[007300];
    Let b3 = M[007301];
    if (IsZero(MakeHiLo(b2,b3))) {
      TraceOperation 077177 (Push (Var (Global 36)));
      Let b4 = M[007278];
      Let b5 = M[007279];
      PushStack MakeHiLo(b4,b5);
      TraceOperation 077180 (Store (Con 52) (Con 0));
      SetByte 007278 0;
      SetByte 007279 0;
      TraceOperation 077183 (CallN (Floc 078824) [Con 22]);
      PushFrame;
      PushReturnAddress 077183;
      SetLocal 1 22;
      MakeRoutineFrame 3;
      SetLocal 3 0;
      SetLocal 2 0;
      Jump: 078825
    } else {
      Jump: 077206
    }
  }
LocReturn 077183:
  TraceOperation 077188 (Pull (Con 52));
  PopStack popped1;
  SetByte 007278 HiByte(popped1);
  SetByte 007279 LoByte(popped1);
  TraceOperation 077191 (Jz (Var (Global 47)) (Branch F (Dloc 077206)));
  Let b2 = M[007300];
  Let b3 = M[007301];
  if (IsZero(MakeHiLo(b2,b3))) {
    TraceOperation 077194 (Jz (Var (Global 4)) (Branch F Dtrue));
    Let b4 = M[007214];
    Let b5 = M[007215];
    if (IsZero(MakeHiLo(b4,b5))) {
      TraceOperation 077197 (Call (Floc 036596) [Con 4097,Con 59] Sp);
      PushFrame;
      PushReturnAddress 077197;
      SetLocal 1 4097;
      SetLocal 2 59;
      MakeRoutineFrame 6;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      SetLocal 3 0;
      Jump: 036597
    } else {
      PopFrame;
      PopReturnAddress return_address_6;
      SetResult 1;
      JumpIndirect: (return) return_address_6
    }
  } else {
    Jump: 077206
  }
LocReturn 077197:
  PushStack call_result;
  TraceOperation 077205 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 077206:
  TraceOperation 077206 (And (Var (Local 1)) (Con 8) Sp);
  PushStack And(GetLocal(1),8);
  TraceOperation 077210 (Jz (Var Sp) (Branch F (Dloc 077225)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 077213 (Jz (Var (Global 47)) (Branch T (Dloc 077225)));
    Let b2 = M[007300];
    Let b3 = M[007301];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 077225
    } else {
      TraceOperation 077216 (Call (Floc 036596) [Con 4097,Con 60] Sp);
      PushFrame;
      PushReturnAddress 077216;
      SetLocal 1 4097;
      SetLocal 2 60;
      MakeRoutineFrame 6;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      SetLocal 3 0;
      Jump: 036597
    }
  } else {
    Jump: 077225
  }
LocReturn 077216:
  PushStack call_result;
  TraceOperation 077224 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 077225:
  TraceOperation 077225 (Je [Var (Global 43),Con 1] (Branch F (Dloc 077245)));
  Let b1 = M[007292];
  Let b2 = M[007293];
  if (Equal(MakeHiLo(b1,b2),1)) {
    TraceOperation 077229 (Je [Var (Local 3),Con 61] (Branch F (Dloc 077242)));
    if (Equal(GetLocal(3),61)) {
      TraceOperation 077233 (Call (Floc 036596) [Con 4097,Con 63] Sp);
      PushFrame;
      PushReturnAddress 077233;
      SetLocal 1 4097;
      SetLocal 2 63;
      MakeRoutineFrame 6;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      SetLocal 3 0;
      Jump: 036597
    } else {
      Jump: 077242
    }
  } else {
    Jump: 077245
  }
LocReturn 077233:
  PushStack call_result;
  TraceOperation 077241 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 077242:
  TraceOperation 077242 (Jump 077316);
  Jump: 077316
LocOp 077245:
  TraceOperation 077245 (Je [Var (Local 3),Con 61] (Branch T (Dloc 077258)));
  if (Equal(GetLocal(3),61)) {
    Jump: 077258
  } else {
    TraceOperation 077249 (Call (Floc 036596) [Con 4097,Con 64] Sp);
    PushFrame;
    PushReturnAddress 077249;
    SetLocal 1 4097;
    SetLocal 2 64;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 036597
  }
LocReturn 077249:
  PushStack call_result;
  TraceOperation 077257 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 077258:
  TraceOperation 077258 (And (Var (Local 1)) (Con 16) Sp);
  PushStack And(GetLocal(1),16);
  TraceOperation 077262 (Jz (Var Sp) (Branch T (Dloc 077297)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 077297
  } else {
    TraceOperation 077265 (Jz (Var (Global 48)) (Branch F (Dloc 077297)));
    Let b2 = M[007302];
    Let b3 = M[007303];
    if (IsZero(MakeHiLo(b2,b3))) {
      TraceOperation 077268 (Push (Var (Global 36)));
      Let b4 = M[007278];
      Let b5 = M[007279];
      PushStack MakeHiLo(b4,b5);
      TraceOperation 077271 (Store (Con 52) (Con 0));
      SetByte 007278 0;
      SetByte 007279 0;
      TraceOperation 077274 (CallN (Floc 078824) [Con 23]);
      PushFrame;
      PushReturnAddress 077274;
      SetLocal 1 23;
      MakeRoutineFrame 3;
      SetLocal 3 0;
      SetLocal 2 0;
      Jump: 078825
    } else {
      Jump: 077297
    }
  }
LocReturn 077274:
  TraceOperation 077279 (Pull (Con 52));
  PopStack popped1;
  SetByte 007278 HiByte(popped1);
  SetByte 007279 LoByte(popped1);
  TraceOperation 077282 (Jz (Var (Global 48)) (Branch F (Dloc 077297)));
  Let b2 = M[007302];
  Let b3 = M[007303];
  if (IsZero(MakeHiLo(b2,b3))) {
    TraceOperation 077285 (Jz (Var (Global 4)) (Branch F Dtrue));
    Let b4 = M[007214];
    Let b5 = M[007215];
    if (IsZero(MakeHiLo(b4,b5))) {
      TraceOperation 077288 (Call (Floc 036596) [Con 4097,Con 65] Sp);
      PushFrame;
      PushReturnAddress 077288;
      SetLocal 1 4097;
      SetLocal 2 65;
      MakeRoutineFrame 6;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      SetLocal 3 0;
      Jump: 036597
    } else {
      PopFrame;
      PopReturnAddress return_address_6;
      SetResult 1;
      JumpIndirect: (return) return_address_6
    }
  } else {
    Jump: 077297
  }
LocReturn 077288:
  PushStack call_result;
  TraceOperation 077296 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 077297:
  TraceOperation 077297 (And (Var (Local 1)) (Con 16) Sp);
  PushStack And(GetLocal(1),16);
  TraceOperation 077301 (Jz (Var Sp) (Branch F (Dloc 077316)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 077304 (Jz (Var (Global 48)) (Branch T (Dloc 077316)));
    Let b2 = M[007302];
    Let b3 = M[007303];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 077316
    } else {
      TraceOperation 077307 (Call (Floc 036596) [Con 4097,Con 66] Sp);
      PushFrame;
      PushReturnAddress 077307;
      SetLocal 1 4097;
      SetLocal 2 66;
      MakeRoutineFrame 6;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      SetLocal 3 0;
      Jump: 036597
    }
  } else {
    Jump: 077316
  }
LocReturn 077307:
  PushStack call_result;
  TraceOperation 077315 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 077316:
  TraceOperation 077316 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 077320:
  MakeRoutineFrame 0;
  Jump: 077321
LocOp 077321:
  TraceOperation 077321 (Jz (Var (Global 36)) (Branch F Dfalse));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 077324 (Call (Floc 076140) [] Sp);
    PushFrame;
    PushReturnAddress 077324;
    MakeRoutineFrame 0;
    Jump: 076141
  } else {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  }
LocReturn 077324:
  PushStack call_result;
  TraceOperation 077328 (Jz (Var Sp) (Branch T (Dloc 077386)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 077386
  } else {
    TraceOperation 077331 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 077386)));
    Let b2 = M[007280];
    Let b3 = M[007281];
    Let b4 = M[007268];
    Let b5 = M[007269];
    if (Equal(MakeHiLo(b2,b3),MakeHiLo(b4,b5))) {
      TraceOperation 077335 (Call (Floc 088936) [Con 15] Sp);
      PushFrame;
      PushReturnAddress 077335;
      SetLocal 1 15;
      MakeRoutineFrame 14;
      SetLocal 14 0;
      SetLocal 13 0;
      SetLocal 12 0;
      SetLocal 11 0;
      SetLocal 10 0;
      SetLocal 9 0;
      SetLocal 8 0;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      SetLocal 3 0;
      SetLocal 2 0;
      Jump: 088937
    } else {
      Jump: 077386
    }
  }
LocReturn 077335:
  PushStack call_result;
  TraceOperation 077341 (Jz (Var Sp) (Branch T (Dloc 077386)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 077386
  } else {
    TraceOperation 077344 (Call (Floc 089832) [] Sp);
    PushFrame;
    PushReturnAddress 077344;
    MakeRoutineFrame 0;
    Jump: 089833
  }
LocReturn 077344:
  PushStack call_result;
  TraceOperation 077348 (Jz (Var Sp) (Branch T (Dloc 077386)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 077386
  } else {
    TraceOperation 077351 (CallN (Floc 078848) [Con 12]);
    PushFrame;
    PushReturnAddress 077351;
    SetLocal 1 12;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 078849
  }
LocReturn 077351:
  TraceOperation 077356 (Call (Floc 078928) [Con 12] Sp);
  PushFrame;
  PushReturnAddress 077356;
  SetLocal 1 12;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 078929
LocReturn 077356:
  PushStack call_result;
  TraceOperation 077362 (Jz (Var Sp) (Branch F (Dloc 077372)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 077365 (CallN (Floc 036596) [Con 4097,Con 17]);
    PushFrame;
    PushReturnAddress 077365;
    SetLocal 1 4097;
    SetLocal 2 17;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 036597
  } else {
    Jump: 077372
  }
LocReturn 077365:
  Jump: 077372
LocOp 077372:
  TraceOperation 077372 (CallN (Floc 078972) [Con 12]);
  PushFrame;
  PushReturnAddress 077372;
  SetLocal 1 12;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 078973
LocReturn 077372:
  TraceOperation 077377 (Store (Con 82) (Con 19330));
  SetByte 007338 75;
  SetByte 007339 130;
  TraceOperation 077382 (CallN (Floc 089760) []);
  PushFrame;
  PushReturnAddress 077382;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  SetLocal 1 0;
  Jump: 089761
LocReturn 077382:
  TraceOperation 077385 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 077386:
  TraceOperation 077386 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 077388:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 077389
LocOp 077389:
  TraceOperation 077389 (Jz (Var (Global 36)) (Branch F Dfalse));
  Let b1 = M[007278];
  Let b2 = M[007279];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 077392 (Call (Floc 076064) [Con -1] (Local 2));
    PushFrame;
    PushReturnAddress 077392;
    SetLocal 1 -1;
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 076065
  } else {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  }
LocReturn 077392:
  SetLocal 2 call_result;
  TraceOperation 077399 (Jz (Var (Local 2)) (Branch T Dfalse));
  if (IsZero(GetLocal(2))) {
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 0;
    JumpIndirect: (return) return_address_1
  } else {
    TraceOperation 077402 (Add (Var (Local 2)) (Con 1) Sp);
    PushStack Add(GetLocal(2),1);
    TraceOperation 077406 (Loadw (Con 12693) (Var Sp) (Local 1));
    PopStack popped2;
    Let b3 = M[Offset(012693,Mul(2,popped2))];
    Let b4 = M[Offset(Offset(012693,Mul(2,popped2)),1)];
    SetLocal 1 MakeHiLo(b3,b4);
    TraceOperation 077412 (And (Var (Local 1)) (Con 1) Sp);
    PushStack And(GetLocal(1),1);
    TraceOperation 077416 (Jz (Var Sp) (Branch T (Dloc 077489)));
    PopStack popped5;
    if (IsZero(popped5)) {
      Jump: 077489
    } else {
      TraceOperation 077420 (Jz (Var (Global 47)) (Branch T (Dloc 077489)));
      Let b6 = M[007300];
      Let b7 = M[007301];
      if (IsZero(MakeHiLo(b6,b7))) {
        Jump: 077489
      } else {
        TraceOperation 077424 (Je [Var (Global 42),Con 1] (Branch T (Dloc 077489)));
        Let b8 = M[007290];
        Let b9 = M[007291];
        if (Equal(MakeHiLo(b8,b9),1)) {
          Jump: 077489
        } else {
          TraceOperation 077429 (Jin (Var (Global 47)) (Con 6) (Branch F (Dloc 077454)));
          Let b10 = M[007300];
          Let b11 = M[007301];
          Let b12 = M[Offset(Offset(000378,Mul(MakeHiLo(b10,b11),14)),6)];
          Let b13 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b10,b11),14)),6),1)];
          if (Equal(6,MakeHiLo(b12,b13))) {
            TraceOperation 077433 (CallN (Floc 089760) []);
            PushFrame;
            PushReturnAddress 077433;
            MakeRoutineFrame 2;
            SetLocal 2 0;
            SetLocal 1 0;
            Jump: 089761
          } else {
            Jump: 077454
          }
        }
      }
    }
  }
LocReturn 077433:
  TraceOperation 077436 (Store (Con 82) (Con 19347));
  SetByte 007338 75;
  SetByte 007339 147;
  TraceOperation 077441 (Je [Var (Global 37),Var (Global 31)] (Branch F Dtrue));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 077445 (Call (Floc 036596) [Con 4097,Con 67] Sp);
    PushFrame;
    PushReturnAddress 077445;
    SetLocal 1 4097;
    SetLocal 2 67;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 036597
  } else {
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult 1;
    JumpIndirect: (return) return_address_5
  }
LocReturn 077445:
  PushStack call_result;
  TraceOperation 077453 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 077454:
  TraceOperation 077454 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 077464)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 077458 (Push (Con 0));
    PushStack 0;
    TraceOperation 077461 (Jump 077467);
    Jump: 077467
  } else {
    Jump: 077464
  }
LocOp 077464:
  TraceOperation 077464 (Push (Con 1));
  PushStack 1;
  Jump: 077467
LocOp 077467:
  TraceOperation 077467 (Call (Floc 037280) [Var (Global 47),Var Sp,Con 0,Var (Global 37)] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PopStack popped3;
  Let b4 = M[007280];
  Let b5 = M[007281];
  PushFrame;
  PushReturnAddress 077467;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 popped3;
  SetLocal 3 0;
  SetLocal 4 MakeHiLo(b4,b5);
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  Jump: 037281
LocReturn 077467:
  PushStack call_result;
  TraceOperation 077477 (Jz (Var Sp) (Branch T (Dloc 077489)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 077489
  } else {
    TraceOperation 077480 (CallN (Floc 089760) []);
    PushFrame;
    PushReturnAddress 077480;
    MakeRoutineFrame 2;
    SetLocal 2 0;
    SetLocal 1 0;
    Jump: 089761
  }
LocReturn 077480:
  TraceOperation 077483 (Store (Con 82) (Con 19347));
  SetByte 007338 75;
  SetByte 007339 147;
  TraceOperation 077488 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 077489:
  TraceOperation 077489 (And (Var (Local 1)) (Con 2) Sp);
  PushStack And(GetLocal(1),2);
  TraceOperation 077493 (Jz (Var Sp) (Branch T (Dloc 077566)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 077566
  } else {
    TraceOperation 077497 (Jz (Var (Global 48)) (Branch T (Dloc 077566)));
    Let b2 = M[007302];
    Let b3 = M[007303];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 077566
    } else {
      TraceOperation 077501 (Je [Var (Global 43),Con 1] (Branch T (Dloc 077566)));
      Let b4 = M[007292];
      Let b5 = M[007293];
      if (Equal(MakeHiLo(b4,b5),1)) {
        Jump: 077566
      } else {
        TraceOperation 077506 (Jin (Var (Global 48)) (Con 6) (Branch F (Dloc 077531)));
        Let b6 = M[007302];
        Let b7 = M[007303];
        Let b8 = M[Offset(Offset(000378,Mul(MakeHiLo(b6,b7),14)),6)];
        Let b9 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b6,b7),14)),6),1)];
        if (Equal(6,MakeHiLo(b8,b9))) {
          TraceOperation 077510 (CallN (Floc 089760) []);
          PushFrame;
          PushReturnAddress 077510;
          MakeRoutineFrame 2;
          SetLocal 2 0;
          SetLocal 1 0;
          Jump: 089761
        } else {
          Jump: 077531
        }
      }
    }
  }
LocReturn 077510:
  TraceOperation 077513 (Store (Con 82) (Con 19347));
  SetByte 007338 75;
  SetByte 007339 147;
  TraceOperation 077518 (Je [Var (Global 37),Var (Global 31)] (Branch F Dtrue));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 077522 (Call (Floc 036596) [Con 4097,Con 67] Sp);
    PushFrame;
    PushReturnAddress 077522;
    SetLocal 1 4097;
    SetLocal 2 67;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 036597
  } else {
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult 1;
    JumpIndirect: (return) return_address_5
  }
LocReturn 077522:
  PushStack call_result;
  TraceOperation 077530 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 077531:
  TraceOperation 077531 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 077541)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 077535 (Push (Con 0));
    PushStack 0;
    TraceOperation 077538 (Jump 077544);
    Jump: 077544
  } else {
    Jump: 077541
  }
LocOp 077541:
  TraceOperation 077541 (Push (Con 1));
  PushStack 1;
  Jump: 077544
LocOp 077544:
  TraceOperation 077544 (Call (Floc 037280) [Var (Global 48),Var Sp,Con 0,Var (Global 37)] Sp);
  Let b1 = M[007302];
  Let b2 = M[007303];
  PopStack popped3;
  Let b4 = M[007280];
  Let b5 = M[007281];
  PushFrame;
  PushReturnAddress 077544;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 popped3;
  SetLocal 3 0;
  SetLocal 4 MakeHiLo(b4,b5);
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  Jump: 037281
LocReturn 077544:
  PushStack call_result;
  TraceOperation 077554 (Jz (Var Sp) (Branch T (Dloc 077566)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 077566
  } else {
    TraceOperation 077557 (CallN (Floc 089760) []);
    PushFrame;
    PushReturnAddress 077557;
    MakeRoutineFrame 2;
    SetLocal 2 0;
    SetLocal 1 0;
    Jump: 089761
  }
LocReturn 077557:
  TraceOperation 077560 (Store (Con 82) (Con 19347));
  SetByte 007338 75;
  SetByte 007339 147;
  TraceOperation 077565 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 077566:
  TraceOperation 077566 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 077568:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 077569
LocOp 077569:
  TraceOperation 077569 (Call (Floc 076064) [Con -1] (Local 2));
  PushFrame;
  PushReturnAddress 077569;
  SetLocal 1 -1;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 076065
LocReturn 077569:
  SetLocal 2 call_result;
  TraceOperation 077576 (Jz (Var (Local 2)) (Branch T Dfalse));
  if (IsZero(GetLocal(2))) {
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 0;
    JumpIndirect: (return) return_address_1
  } else {
    TraceOperation 077579 (Add (Var (Local 2)) (Con 1) Sp);
    PushStack Add(GetLocal(2),1);
    TraceOperation 077583 (Loadw (Con 12693) (Var Sp) (Local 1));
    PopStack popped2;
    Let b3 = M[Offset(012693,Mul(2,popped2))];
    Let b4 = M[Offset(Offset(012693,Mul(2,popped2)),1)];
    SetLocal 1 MakeHiLo(b3,b4);
    TraceOperation 077589 (And (Var (Local 1)) (Con 1) Sp);
    PushStack And(GetLocal(1),1);
    TraceOperation 077593 (Jz (Var Sp) (Branch T (Dloc 077655)));
    PopStack popped5;
    if (IsZero(popped5)) {
      Jump: 077655
    } else {
      TraceOperation 077597 (Jz (Var (Global 47)) (Branch T (Dloc 077655)));
      Let b6 = M[007300];
      Let b7 = M[007301];
      if (IsZero(MakeHiLo(b6,b7))) {
        Jump: 077655
      } else {
        TraceOperation 077600 (Je [Var (Global 42),Con 1] (Branch T (Dloc 077655)));
        Let b8 = M[007290];
        Let b9 = M[007291];
        if (Equal(MakeHiLo(b8,b9),1)) {
          Jump: 077655
        } else {
          TraceOperation 077604 (And (Var (Local 1)) (Con 64) Sp);
          PushStack And(GetLocal(1),64);
          TraceOperation 077608 (Jz (Var Sp) (Branch T (Dloc 077655)));
          PopStack popped10;
          if (IsZero(popped10)) {
            Jump: 077655
          } else {
            TraceOperation 077611 (Jin (Var (Global 47)) (Var (Global 37)) (Branch T (Dloc 077655)));
            Let b11 = M[007300];
            Let b12 = M[007301];
            Let b13 = M[007280];
            Let b14 = M[007281];
            Let b15 = M[Offset(Offset(000378,Mul(MakeHiLo(b11,b12),14)),6)];
            Let b16 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b11,b12),14)),6),1)];
            if (Equal(MakeHiLo(b13,b14),MakeHiLo(b15,b16))) {
              Jump: 077655
            } else {
              TraceOperation 077615 (CallN (Floc 078848) [Con 24,Var (Global 47)]);
              Let b17 = M[007300];
              Let b18 = M[007301];
              PushFrame;
              PushReturnAddress 077615;
              SetLocal 1 24;
              SetLocal 2 MakeHiLo(b17,b18);
              MakeRoutineFrame 3;
              SetLocal 3 0;
              Jump: 078849
            }
          }
        }
      }
    }
  }
LocReturn 077615:
  TraceOperation 077621 (Call (Floc 078928) [Con 24,Var (Global 47)] Sp);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 077621;
  SetLocal 1 24;
  SetLocal 2 MakeHiLo(b1,b2);
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 078929
LocReturn 077621:
  PushStack call_result;
  TraceOperation 077628 (Jz (Var Sp) (Branch F (Dloc 077636)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 077631 (CallN (Floc 076568) [Var (Global 47)]);
    Let b2 = M[007300];
    Let b3 = M[007301];
    PushFrame;
    PushReturnAddress 077631;
    SetLocal 1 MakeHiLo(b2,b3);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 076569
  } else {
    Jump: 077636
  }
LocReturn 077631:
  Jump: 077636
LocOp 077636:
  TraceOperation 077636 (CallN (Floc 078972) [Con 24,Var (Global 47)]);
  Let b1 = M[007300];
  Let b2 = M[007301];
  PushFrame;
  PushReturnAddress 077636;
  SetLocal 1 24;
  SetLocal 2 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 078973
LocReturn 077636:
  TraceOperation 077642 (Jin (Var (Global 47)) (Var (Global 37)) (Branch T (Dloc 077655)));
  Let b1 = M[007300];
  Let b2 = M[007301];
  Let b3 = M[007280];
  Let b4 = M[007281];
  Let b5 = M[Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),6)];
  Let b6 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),6),1)];
  if (Equal(MakeHiLo(b3,b4),MakeHiLo(b5,b6))) {
    Jump: 077655
  } else {
    TraceOperation 077646 (CallN (Floc 089760) []);
    PushFrame;
    PushReturnAddress 077646;
    MakeRoutineFrame 2;
    SetLocal 2 0;
    SetLocal 1 0;
    Jump: 089761
  }
LocReturn 077646:
  TraceOperation 077649 (Store (Con 82) (Con 19392));
  SetByte 007338 75;
  SetByte 007339 192;
  TraceOperation 077654 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 077655:
  TraceOperation 077655 (And (Var (Local 1)) (Con 2) Sp);
  PushStack And(GetLocal(1),2);
  TraceOperation 077659 (Jz (Var Sp) (Branch T (Dloc 077721)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 077721
  } else {
    TraceOperation 077663 (Jz (Var (Global 48)) (Branch T (Dloc 077721)));
    Let b2 = M[007302];
    Let b3 = M[007303];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 077721
    } else {
      TraceOperation 077666 (Je [Var (Global 43),Con 1] (Branch T (Dloc 077721)));
      Let b4 = M[007292];
      Let b5 = M[007293];
      if (Equal(MakeHiLo(b4,b5),1)) {
        Jump: 077721
      } else {
        TraceOperation 077670 (And (Var (Local 1)) (Con 128) Sp);
        PushStack And(GetLocal(1),128);
        TraceOperation 077674 (Jz (Var Sp) (Branch T (Dloc 077721)));
        PopStack popped6;
        if (IsZero(popped6)) {
          Jump: 077721
        } else {
          TraceOperation 077677 (Jin (Var (Global 48)) (Var (Global 37)) (Branch T (Dloc 077721)));
          Let b7 = M[007302];
          Let b8 = M[007303];
          Let b9 = M[007280];
          Let b10 = M[007281];
          Let b11 = M[Offset(Offset(000378,Mul(MakeHiLo(b7,b8),14)),6)];
          Let b12 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b7,b8),14)),6),1)];
          if (Equal(MakeHiLo(b9,b10),MakeHiLo(b11,b12))) {
            Jump: 077721
          } else {
            TraceOperation 077681 (CallN (Floc 078848) [Con 24,Var (Global 48)]);
            Let b13 = M[007302];
            Let b14 = M[007303];
            PushFrame;
            PushReturnAddress 077681;
            SetLocal 1 24;
            SetLocal 2 MakeHiLo(b13,b14);
            MakeRoutineFrame 3;
            SetLocal 3 0;
            Jump: 078849
          }
        }
      }
    }
  }
LocReturn 077681:
  TraceOperation 077687 (Call (Floc 078928) [Con 24,Var (Global 48)] Sp);
  Let b1 = M[007302];
  Let b2 = M[007303];
  PushFrame;
  PushReturnAddress 077687;
  SetLocal 1 24;
  SetLocal 2 MakeHiLo(b1,b2);
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 078929
LocReturn 077687:
  PushStack call_result;
  TraceOperation 077694 (Jz (Var Sp) (Branch F (Dloc 077702)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 077697 (CallN (Floc 076568) [Var (Global 48)]);
    Let b2 = M[007302];
    Let b3 = M[007303];
    PushFrame;
    PushReturnAddress 077697;
    SetLocal 1 MakeHiLo(b2,b3);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 076569
  } else {
    Jump: 077702
  }
LocReturn 077697:
  Jump: 077702
LocOp 077702:
  TraceOperation 077702 (CallN (Floc 078972) [Con 24,Var (Global 48)]);
  Let b1 = M[007302];
  Let b2 = M[007303];
  PushFrame;
  PushReturnAddress 077702;
  SetLocal 1 24;
  SetLocal 2 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 078973
LocReturn 077702:
  TraceOperation 077708 (Jin (Var (Global 48)) (Var (Global 37)) (Branch T (Dloc 077721)));
  Let b1 = M[007302];
  Let b2 = M[007303];
  Let b3 = M[007280];
  Let b4 = M[007281];
  Let b5 = M[Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),6)];
  Let b6 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),6),1)];
  if (Equal(MakeHiLo(b3,b4),MakeHiLo(b5,b6))) {
    Jump: 077721
  } else {
    TraceOperation 077712 (CallN (Floc 089760) []);
    PushFrame;
    PushReturnAddress 077712;
    MakeRoutineFrame 2;
    SetLocal 2 0;
    SetLocal 1 0;
    Jump: 089761
  }
LocReturn 077712:
  TraceOperation 077715 (Store (Con 82) (Con 19392));
  SetByte 007338 75;
  SetByte 007339 192;
  TraceOperation 077720 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 077721:
  TraceOperation 077721 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 077724:
  MakeRoutineFrame 0;
  Jump: 077725
LocOp 077725:
  TraceOperation 077725 (Je [Var (Global 37),Var (Global 31)] (Branch T (Dloc 077768)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    Jump: 077768
  } else {
    TraceOperation 077729 (Jz (Var (Global 36)) (Branch T (Dloc 077768)));
    Let b5 = M[007278];
    Let b6 = M[007279];
    if (IsZero(MakeHiLo(b5,b6))) {
      Jump: 077768
    } else {
      TraceOperation 077732 (Push (Var (Global 4)));
      Let b7 = M[007214];
      Let b8 = M[007215];
      PushStack MakeHiLo(b7,b8);
      TraceOperation 077735 (Store (Con 20) (Con 0));
      SetByte 007214 0;
      SetByte 007215 0;
      TraceOperation 077738 (CallN (Floc 088936) [Con 16]);
      PushFrame;
      PushReturnAddress 077738;
      SetLocal 1 16;
      MakeRoutineFrame 14;
      SetLocal 14 0;
      SetLocal 13 0;
      SetLocal 12 0;
      SetLocal 11 0;
      SetLocal 10 0;
      SetLocal 9 0;
      SetLocal 8 0;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      SetLocal 3 0;
      SetLocal 2 0;
      Jump: 088937
    }
  }
LocReturn 077738:
  TraceOperation 077743 (Call (Floc 089832) [] Sp);
  PushFrame;
  PushReturnAddress 077743;
  MakeRoutineFrame 0;
  Jump: 089833
LocReturn 077743:
  PushStack call_result;
  TraceOperation 077747 (Jz (Var Sp) (Branch F (Dloc 077765)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 077750 (Jz (Var (Global 4)) (Branch F (Dloc 077761)));
    Let b2 = M[007214];
    Let b3 = M[007215];
    if (IsZero(MakeHiLo(b2,b3))) {
      TraceOperation 077753 (CallN (Floc 036596) [Con 4097,Con 72,Var (Global 37)]);
      Let b4 = M[007280];
      Let b5 = M[007281];
      PushFrame;
      PushReturnAddress 077753;
      SetLocal 1 4097;
      SetLocal 2 72;
      SetLocal 3 MakeHiLo(b4,b5);
      MakeRoutineFrame 6;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      Jump: 036597
    } else {
      Jump: 077761
    }
  } else {
    Jump: 077765
  }
LocReturn 077753:
  Jump: 077761
LocOp 077761:
  TraceOperation 077761 (CallN (Floc 089760) []);
  PushFrame;
  PushReturnAddress 077761;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  SetLocal 1 0;
  Jump: 089761
LocReturn 077761:
  TraceOperation 077764 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 077765:
  TraceOperation 077765 (Pull (Con 20));
  PopStack popped1;
  SetByte 007214 HiByte(popped1);
  SetByte 007215 LoByte(popped1);
  Jump: 077768
LocOp 077768:
  TraceOperation 077768 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 077772:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 077773
LocOp 077773:
  TraceOperation 077773 (Je [Var (Global 37),Var (Global 31)] (Branch T (Dloc 077823)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    Jump: 077823
  } else {
    TraceOperation 077777 (Jz (Var (Global 36)) (Branch T (Dloc 077823)));
    Let b5 = M[007278];
    Let b6 = M[007279];
    if (IsZero(MakeHiLo(b5,b6))) {
      Jump: 077823
    } else {
      TraceOperation 077780 (Push (Var (Global 36)));
      Let b7 = M[007278];
      Let b8 = M[007279];
      PushStack MakeHiLo(b7,b8);
      TraceOperation 077783 (Store (Con 52) (Con 0));
      SetByte 007278 0;
      SetByte 007279 0;
      TraceOperation 077786 (Call (Floc 076760) [Var (Global 40),Var (Global 47),Var (Global 48)] (Local 1));
      Let b9 = M[007286];
      Let b10 = M[007287];
      Let b11 = M[007300];
      Let b12 = M[007301];
      Let b13 = M[007302];
      Let b14 = M[007303];
      PushFrame;
      PushReturnAddress 077786;
      SetLocal 1 MakeHiLo(b9,b10);
      SetLocal 2 MakeHiLo(b11,b12);
      SetLocal 3 MakeHiLo(b13,b14);
      MakeRoutineFrame 6;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      Jump: 076761
    }
  }
LocReturn 077786:
  SetLocal 1 call_result;
  TraceOperation 077794 (Jz (Var (Global 41)) (Branch F (Dloc 077800)));
  Let b1 = M[007288];
  Let b2 = M[007289];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 077797 (Jz (Var (Local 1)) (Branch F (Dloc 077816)));
    if (IsZero(GetLocal(1))) {
      Jump: 077800
    } else {
      Jump: 077816
    }
  } else {
    Jump: 077800
  }
LocOp 077800:
  TraceOperation 077800 (Call (Floc 088936) [Con 17] Sp);
  PushFrame;
  PushReturnAddress 077800;
  SetLocal 1 17;
  MakeRoutineFrame 14;
  SetLocal 14 0;
  SetLocal 13 0;
  SetLocal 12 0;
  SetLocal 11 0;
  SetLocal 10 0;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 088937
LocReturn 077800:
  PushStack call_result;
  TraceOperation 077806 (Jz (Var Sp) (Branch F (Dloc 077816)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 077809 (CallN (Floc 036596) [Con 4097,Con 58]);
    PushFrame;
    PushReturnAddress 077809;
    SetLocal 1 4097;
    SetLocal 2 58;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 036597
  } else {
    Jump: 077816
  }
LocReturn 077809:
  Jump: 077816
LocOp 077816:
  TraceOperation 077816 (Pull (Con 52));
  PopStack popped1;
  SetByte 007278 HiByte(popped1);
  SetByte 007279 LoByte(popped1);
  TraceOperation 077819 (CallN (Floc 089720) []);
  PushFrame;
  PushReturnAddress 077819;
  MakeRoutineFrame 1;
  SetLocal 1 0;
  Jump: 089721
LocReturn 077819:
  TraceOperation 077822 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 077823:
  TraceOperation 077823 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 077824:
  MakeRoutineFrame 5;
  if (LessThanByte(num_actuals,5)) {
    SetLocal 5 0;
    if (LessThanByte(num_actuals,4)) {
      SetLocal 4 0;
      if (LessThanByte(num_actuals,3)) {
        SetLocal 3 0;
        if (LessThanByte(num_actuals,2)) {
          SetLocal 2 0;
          if (LessThanByte(num_actuals,1)) {
            SetLocal 1 0;
          }
        }
      }
    }
  }
  Jump: 077825
LocOp 077825:
  TraceOperation 077825 (Push (Var (Global 182)));
  Let b1 = M[007570];
  Let b2 = M[007571];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 077828 (Store (Con 198) (Con -1));
  SetByte 007570 255;
  SetByte 007571 255;
  TraceOperation 077833 (Storew (Con 16529) (Con 0) (Con 1));
  SetByte 016529 0;
  SetByte 016530 1;
  TraceOperation 077839 (Jz (Var (Global 41)) (Branch T (Dloc 077848)));
  Let b3 = M[007288];
  Let b4 = M[007289];
  if (IsZero(MakeHiLo(b3,b4))) {
    Jump: 077848
  } else {
    TraceOperation 077842 (Storew (Con 16529) (Con 0) (Con 0));
    SetByte 016529 0;
    SetByte 016530 0;
    Jump: 077848
  }
LocOp 077848:
  TraceOperation 077848 (Storew (Con 16529) (Con 1) (Var (Global 49)));
  Let b1 = M[007304];
  Let b2 = M[007305];
  SetByte 016531 b1;
  SetByte 016532 b2;
  TraceOperation 077854 (Storew (Con 16529) (Con 2) (Var (Local 1)));
  SetByte 016533 HiByte(GetLocal(1));
  SetByte 016534 LoByte(GetLocal(1));
  TraceOperation 077860 (Storew (Con 16529) (Con 3) (Var (Local 2)));
  SetByte 016535 HiByte(GetLocal(2));
  SetByte 016536 LoByte(GetLocal(2));
  TraceOperation 077866 (Storew (Con 16529) (Con 4) (Var (Local 3)));
  SetByte 016537 HiByte(GetLocal(3));
  SetByte 016538 LoByte(GetLocal(3));
  TraceOperation 077872 (CallN (Floc 088936) [Con 10,Con 0,Con 1]);
  PushFrame;
  PushReturnAddress 077872;
  SetLocal 1 10;
  SetLocal 2 0;
  SetLocal 3 1;
  MakeRoutineFrame 14;
  SetLocal 14 0;
  SetLocal 13 0;
  SetLocal 12 0;
  SetLocal 11 0;
  SetLocal 10 0;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 088937
LocReturn 077872:
  TraceOperation 077879 (Call (Floc 089820) [] Sp);
  PushFrame;
  PushReturnAddress 077879;
  MakeRoutineFrame 0;
  Jump: 089821
LocReturn 077879:
  PushStack call_result;
  TraceOperation 077883 (Jz (Var Sp) (Branch T (Dloc 077893)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 077893
  } else {
    TraceOperation 077886 (Je [Var (Global 182),Con 1] (Branch F (Dloc 077893)));
    Let b2 = M[007570];
    Let b3 = M[007571];
    if (Equal(MakeHiLo(b2,b3),1)) {
      TraceOperation 077890 (CallN (Floc 089720) []);
      PushFrame;
      PushReturnAddress 077890;
      MakeRoutineFrame 1;
      SetLocal 1 0;
      Jump: 089721
    } else {
      Jump: 077893
    }
  }
LocReturn 077890:
  Jump: 077893
LocOp 077893:
  TraceOperation 077893 (Pull (Con 198));
  PopStack popped1;
  SetByte 007570 HiByte(popped1);
  SetByte 007571 LoByte(popped1);
  TraceOperation 077896 Rtrue;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult 1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 077900:
  MakeRoutineFrame 0;
  Jump: 077901
LocOp 077901:
  TraceOperation 077901 (Loadw (Con 16529) (Con 0) Sp);
  Let b1 = M[016529];
  Let b2 = M[016530];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 077907 (Call (Floc 079624) [Con 10,Con 0] Sp);
  PushFrame;
  PushReturnAddress 077907;
  SetLocal 1 10;
  SetLocal 2 0;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 079625
LocReturn 077907:
  PushStack call_result;
  TraceOperation 077914 (Storew (Con 16625) (Var Sp) (Var Sp));
  PopStack popped1;
  PopStack popped2;
  SetByte Offset(016625,Mul(2,popped1)) HiByte(popped2);
  SetByte Offset(Offset(016625,Mul(2,popped1)),1) LoByte(popped2);
  TraceOperation 077920 (Loadw (Con 16529) (Con 1) Sp);
  Let b3 = M[016531];
  Let b4 = M[016532];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 077926 (Call (Floc 079624) [Con 10,Con 1] Sp);
  PushFrame;
  PushReturnAddress 077926;
  SetLocal 1 10;
  SetLocal 2 1;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 079625
LocReturn 077926:
  PushStack call_result;
  TraceOperation 077933 (Storew (Con 16625) (Var Sp) (Var Sp));
  PopStack popped1;
  PopStack popped2;
  SetByte Offset(016625,Mul(2,popped1)) HiByte(popped2);
  SetByte Offset(Offset(016625,Mul(2,popped1)),1) LoByte(popped2);
  TraceOperation 077939 (Loadw (Con 16529) (Con 2) Sp);
  Let b3 = M[016533];
  Let b4 = M[016534];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 077945 (Call (Floc 079624) [Con 10,Con 2] Sp);
  PushFrame;
  PushReturnAddress 077945;
  SetLocal 1 10;
  SetLocal 2 2;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 079625
LocReturn 077945:
  PushStack call_result;
  TraceOperation 077952 (Storew (Con 16625) (Var Sp) (Var Sp));
  PopStack popped1;
  PopStack popped2;
  SetByte Offset(016625,Mul(2,popped1)) HiByte(popped2);
  SetByte Offset(Offset(016625,Mul(2,popped1)),1) LoByte(popped2);
  TraceOperation 077958 (Loadw (Con 16529) (Con 3) Sp);
  Let b3 = M[016535];
  Let b4 = M[016536];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 077964 (Call (Floc 079624) [Con 10,Con 3] Sp);
  PushFrame;
  PushReturnAddress 077964;
  SetLocal 1 10;
  SetLocal 2 3;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 079625
LocReturn 077964:
  PushStack call_result;
  TraceOperation 077971 (Storew (Con 16625) (Var Sp) (Var Sp));
  PopStack popped1;
  PopStack popped2;
  SetByte Offset(016625,Mul(2,popped1)) HiByte(popped2);
  SetByte Offset(Offset(016625,Mul(2,popped1)),1) LoByte(popped2);
  TraceOperation 077977 (Loadw (Con 16529) (Con 4) Sp);
  Let b3 = M[016537];
  Let b4 = M[016538];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 077983 (Call (Floc 079624) [Con 10,Con 4] Sp);
  PushFrame;
  PushReturnAddress 077983;
  SetLocal 1 10;
  SetLocal 2 4;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 079625
LocReturn 077983:
  PushStack call_result;
  TraceOperation 077990 (Storew (Con 16625) (Var Sp) (Var Sp));
  PopStack popped1;
  PopStack popped2;
  SetByte Offset(016625,Mul(2,popped1)) HiByte(popped2);
  SetByte Offset(Offset(016625,Mul(2,popped1)),1) LoByte(popped2);
  TraceOperation 077996 Rfalse;
  PopFrame;
  PopReturnAddress return_address_3;
  SetResult 0;
  JumpIndirect: (return) return_address_3
--------------------------------------------------
LocRoutine 078000:
  MakeRoutineFrame 6;
  if (LessThanByte(num_actuals,6)) {
    SetLocal 6 0;
    if (LessThanByte(num_actuals,5)) {
      SetLocal 5 0;
      if (LessThanByte(num_actuals,4)) {
        SetLocal 4 0;
        if (LessThanByte(num_actuals,3)) {
          SetLocal 3 0;
          if (LessThanByte(num_actuals,2)) {
            SetLocal 2 0;
            if (LessThanByte(num_actuals,1)) {
              SetLocal 1 0;
            }
          }
        }
      }
    }
  }
  Jump: 078001
LocOp 078001:
  TraceOperation 078001 (Jz (Var (Local 1)) (Branch F (Dloc 078012)));
  if (IsZero(GetLocal(1))) {
    TraceOperation 078004 (Store (Con 6) (Con 14711));
    SetLocal 6 14711;
    TraceOperation 078009 (Jump 078029);
    Jump: 078029
  } else {
    Jump: 078012
  }
LocOp 078012:
  TraceOperation 078012 (Call (Floc 111316) [Var (Local 1),Con 73] Sp);
  PushFrame;
  PushReturnAddress 078012;
  SetLocal 1 GetLocal(1);
  SetLocal 2 73;
  MakeRoutineFrame 2;
  Jump: 111317
LocReturn 078012:
  PushStack call_result;
  TraceOperation 078019 (Jz (Var Sp) (Branch T Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  } else {
    TraceOperation 078022 (Call (Floc 110912) [Var (Local 1),Con 73] (Local 6));
    PushFrame;
    PushReturnAddress 078022;
    SetLocal 1 GetLocal(1);
    SetLocal 2 73;
    MakeRoutineFrame 5;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 110913
  }
LocReturn 078022:
  SetLocal 6 call_result;
  Jump: 078029
LocOp 078029:
  TraceOperation 078029 (Je [Var (Local 2),Con -1] (Branch F (Dloc 078056)));
  if (Equal(GetLocal(2),-1)) {
    TraceOperation 078035 (Loadb (Var (Local 6)) (Con 0) Sp);
    Let b1 = M[Offset(Address(GetLocal(6)),0)];
    PushStack Widen(b1);
    TraceOperation 078039 (And (Var Sp) (Con 1) Sp);
    PopStack popped2;
    PushStack And(popped2,1);
    TraceOperation 078043 (Jz (Var Sp) (Branch F (Dloc 078052)));
    PopStack popped3;
    if (IsZero(popped3)) {
      TraceOperation 078046 (Push (Con 0));
      PushStack 0;
      TraceOperation 078049 (Jump 078055);
      Jump: 078055
    } else {
      Jump: 078052
    }
  } else {
    Jump: 078056
  }
LocOp 078052:
  TraceOperation 078052 (Push (Con 1));
  PushStack 1;
  Jump: 078055
LocOp 078055:
  TraceOperation 078055 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 078056:
  TraceOperation 078056 (Store (Con 3) (Con 0));
  SetLocal 3 0;
  TraceOperation 078059 (Store (Con 5) (Con 2));
  SetLocal 5 2;
  Jump: 078062
LocOp 078062:
  TraceOperation 078062 (Jl (Var (Local 3)) (Con 84) (Branch F (Dloc 078117)));
  if (LessThan(GetLocal(3),84)) {
    TraceOperation 078066 (Loadw (Con 14543) (Var (Local 3)) Sp);
    Let b1 = M[Offset(014543,Mul(2,GetLocal(3)))];
    Let b2 = M[Offset(Offset(014543,Mul(2,GetLocal(3))),1)];
    PushStack MakeHiLo(b1,b2);
    TraceOperation 078072 (Je [Var (Local 2),Var Sp] (Branch F (Dloc 078097)));
    PopStack popped3;
    if (Equal(GetLocal(2),popped3)) {
      TraceOperation 078076 (Loadb (Var (Local 6)) (Var (Local 4)) Sp);
      Let b4 = M[Offset(Address(GetLocal(6)),GetLocal(4))];
      PushStack Widen(b4);
      TraceOperation 078080 (And (Var Sp) (Var (Local 5)) Sp);
      PopStack popped5;
      PushStack And(popped5,GetLocal(5));
      TraceOperation 078084 (Jz (Var Sp) (Branch F (Dloc 078093)));
      PopStack popped6;
      if (IsZero(popped6)) {
        TraceOperation 078087 (Push (Con 0));
        PushStack 0;
        TraceOperation 078090 (Jump 078096);
        Jump: 078096
      } else {
        Jump: 078093
      }
    } else {
      Jump: 078097
    }
  } else {
    Jump: 078117
  }
LocOp 078093:
  TraceOperation 078093 (Push (Con 1));
  PushStack 1;
  Jump: 078096
LocOp 078096:
  TraceOperation 078096 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 078097:
  TraceOperation 078097 (Mul (Var (Local 5)) (Con 2) (Local 5));
  SetLocal 5 Mul(GetLocal(5),2);
  TraceOperation 078101 (Je [Var (Local 5),Con 256] (Branch F (Dloc 078112)));
  if (Equal(GetLocal(5),256)) {
    TraceOperation 078107 (Store (Con 5) (Con 1));
    SetLocal 5 1;
    TraceOperation 078110 (Inc (Con 4));
    SetLocal 4 Add(GetLocal(4),1);
    Jump: 078112
  } else {
    Jump: 078112
  }
LocOp 078112:
  TraceOperation 078112 (Inc (Con 3));
  SetLocal 3 Add(GetLocal(3),1);
  TraceOperation 078114 (Jump 078062);
  Jump: 078062
LocOp 078117:
  TraceOperation 078117 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 078120:
  MakeRoutineFrame 0;
  Jump: 078121
LocOp 078121:
  TraceOperation 078121 (CallN (Floc 078140) [Var (Global 47),Var (Global 40)]);
  Let b1 = M[007300];
  Let b2 = M[007301];
  Let b3 = M[007286];
  Let b4 = M[007287];
  PushFrame;
  PushReturnAddress 078121;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 MakeHiLo(b3,b4);
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 078141
LocReturn 078121:
  TraceOperation 078127 (Je [Var (Global 40),Con 26] (Branch F (Dloc 078137)));
  Let b1 = M[007286];
  Let b2 = M[007287];
  if (Equal(MakeHiLo(b1,b2),26)) {
    TraceOperation 078131 (CallN (Floc 078140) [Var (Global 1),Con 21]);
    Let b3 = M[007208];
    Let b4 = M[007209];
    PushFrame;
    PushReturnAddress 078131;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 21;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 078141
  } else {
    Jump: 078137
  }
LocReturn 078131:
  Jump: 078137
LocOp 078137:
  TraceOperation 078137 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 078140:
  MakeRoutineFrame 6;
  if (LessThanByte(num_actuals,6)) {
    SetLocal 6 0;
    if (LessThanByte(num_actuals,5)) {
      SetLocal 5 0;
      if (LessThanByte(num_actuals,4)) {
        SetLocal 4 0;
        if (LessThanByte(num_actuals,3)) {
          SetLocal 3 0;
          if (LessThanByte(num_actuals,2)) {
            SetLocal 2 0;
            if (LessThanByte(num_actuals,1)) {
              SetLocal 1 0;
            }
          }
        }
      }
    }
  }
  Jump: 078141
LocOp 078141:
  TraceOperation 078141 (Store (Con 3) (Con 0));
  SetLocal 3 0;
  TraceOperation 078144 (Store (Con 5) (Con 2));
  SetLocal 5 2;
  Jump: 078147
LocOp 078147:
  TraceOperation 078147 (Jl (Var (Local 3)) (Con 84) (Branch F (Dloc 078258)));
  if (LessThan(GetLocal(3),84)) {
    TraceOperation 078152 (Loadw (Con 14543) (Var (Local 3)) Sp);
    Let b1 = M[Offset(014543,Mul(2,GetLocal(3)))];
    Let b2 = M[Offset(Offset(014543,Mul(2,GetLocal(3))),1)];
    PushStack MakeHiLo(b1,b2);
    TraceOperation 078158 (Je [Var (Local 2),Var Sp] (Branch F (Dloc 078238)));
    PopStack popped3;
    if (Equal(GetLocal(2),popped3)) {
      TraceOperation 078163 (Call (Floc 111316) [Var (Local 1),Con 73] Sp);
      PushFrame;
      PushReturnAddress 078163;
      SetLocal 1 GetLocal(1);
      SetLocal 2 73;
      MakeRoutineFrame 2;
      Jump: 111317
    } else {
      Jump: 078238
    }
  } else {
    Jump: 078258
  }
LocReturn 078163:
  PushStack call_result;
  TraceOperation 078170 (Jz (Var Sp) (Branch T (Dloc 078206)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 078206
  } else {
    TraceOperation 078173 (Call (Floc 110912) [Var (Local 1),Con 73] (Local 6));
    PushFrame;
    PushReturnAddress 078173;
    SetLocal 1 GetLocal(1);
    SetLocal 2 73;
    MakeRoutineFrame 5;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 110913
  }
LocReturn 078173:
  SetLocal 6 call_result;
  TraceOperation 078180 (Loadb (Var (Local 6)) (Con 0) Sp);
  Let b1 = M[Offset(Address(GetLocal(6)),0)];
  PushStack Widen(b1);
  TraceOperation 078184 (Or (Var Sp) (Con 1) Sp);
  PopStack popped2;
  PushStack Or(popped2,1);
  TraceOperation 078188 (Storeb (Var (Local 6)) (Con 0) (Var Sp));
  PopStack popped3;
  SetByte Offset(Address(GetLocal(6)),0) LoByte(popped3);
  TraceOperation 078193 (Loadb (Var (Local 6)) (Var (Local 4)) Sp);
  Let b4 = M[Offset(Address(GetLocal(6)),GetLocal(4))];
  PushStack Widen(b4);
  TraceOperation 078197 (Or (Var Sp) (Var (Local 5)) Sp);
  PopStack popped5;
  PushStack Or(popped5,GetLocal(5));
  TraceOperation 078201 (Storeb (Var (Local 6)) (Var (Local 4)) (Var Sp));
  PopStack popped6;
  SetByte Offset(Address(GetLocal(6)),GetLocal(4)) LoByte(popped6);
  Jump: 078206
LocOp 078206:
  TraceOperation 078206 (Loadb (Con 14711) (Con 0) Sp);
  Let b1 = M[014711];
  PushStack Widen(b1);
  TraceOperation 078212 (Or (Var Sp) (Con 1) Sp);
  PopStack popped2;
  PushStack Or(popped2,1);
  TraceOperation 078216 (Storeb (Con 14711) (Con 0) (Var Sp));
  PopStack popped3;
  SetByte 014711 LoByte(popped3);
  TraceOperation 078222 (Loadb (Con 14711) (Var (Local 4)) Sp);
  Let b4 = M[Offset(014711,GetLocal(4))];
  PushStack Widen(b4);
  TraceOperation 078228 (Or (Var Sp) (Var (Local 5)) Sp);
  PopStack popped5;
  PushStack Or(popped5,GetLocal(5));
  TraceOperation 078232 (Storeb (Con 14711) (Var (Local 4)) (Var Sp));
  PopStack popped6;
  SetByte Offset(014711,GetLocal(4)) LoByte(popped6);
  Jump: 078238
LocOp 078238:
  TraceOperation 078238 (Mul (Var (Local 5)) (Con 2) (Local 5));
  SetLocal 5 Mul(GetLocal(5),2);
  TraceOperation 078242 (Je [Var (Local 5),Con 256] (Branch F (Dloc 078253)));
  if (Equal(GetLocal(5),256)) {
    TraceOperation 078248 (Store (Con 5) (Con 1));
    SetLocal 5 1;
    TraceOperation 078251 (Inc (Con 4));
    SetLocal 4 Add(GetLocal(4),1);
    Jump: 078253
  } else {
    Jump: 078253
  }
LocOp 078253:
  TraceOperation 078253 (Inc (Con 3));
  SetLocal 3 Add(GetLocal(3),1);
  TraceOperation 078255 (Jump 078147);
  Jump: 078147
LocOp 078258:
  TraceOperation 078258 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 078260:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 078261
LocOp 078261:
  TraceOperation 078261 (CallN (Floc 078416) [Con 0,Con 0,Var (Local 1),Con 0,Con 0,Con 2]);
  PushFrame;
  PushReturnAddress 078261;
  SetLocal 1 0;
  SetLocal 2 0;
  SetLocal 3 GetLocal(1);
  SetLocal 4 0;
  SetLocal 5 0;
  SetLocal 6 2;
  MakeRoutineFrame 12;
  SetLocal 12 0;
  SetLocal 11 0;
  SetLocal 10 0;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  Jump: 078417
LocReturn 078261:
  TraceOperation 078272 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 078276:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 078277
LocOp 078277:
  TraceOperation 078277 (Call (Floc 026172) [Var (Local 1),Con 15] Sp);
  PushFrame;
  PushReturnAddress 078277;
  SetLocal 1 GetLocal(1);
  SetLocal 2 15;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 078277:
  PushStack call_result;
  TraceOperation 078284 (Jz (Var Sp) (Branch T (Dloc 078295)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 078295
  } else {
    TraceOperation 078287 (CallN (Floc 082048) [Var (Local 1)]);
    PushFrame;
    PushReturnAddress 078287;
    SetLocal 1 GetLocal(1);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 082049
  }
LocReturn 078287:
  TraceOperation 078292 (Jump 078300);
  Jump: 078300
LocOp 078295:
  TraceOperation 078295 (CallN (Floc 081916) [Var (Local 1)]);
  PushFrame;
  PushReturnAddress 078295;
  SetLocal 1 GetLocal(1);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 081917
LocReturn 078295:
  Jump: 078300
LocOp 078300:
  TraceOperation 078300 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 078328:
  MakeRoutineFrame 8;
  if (LessThanByte(num_actuals,8)) {
    SetLocal 8 0;
    if (LessThanByte(num_actuals,7)) {
      SetLocal 7 0;
      if (LessThanByte(num_actuals,6)) {
        SetLocal 6 0;
        if (LessThanByte(num_actuals,5)) {
          SetLocal 5 0;
          if (LessThanByte(num_actuals,4)) {
            SetLocal 4 0;
            if (LessThanByte(num_actuals,3)) {
              SetLocal 3 0;
              if (LessThanByte(num_actuals,2)) {
                SetLocal 2 0;
                if (LessThanByte(num_actuals,1)) {
                  SetLocal 1 0;
                }
              }
            }
          }
        }
      }
    }
  }
  Jump: 078329
LocOp 078329:
  TraceOperation 078329 (Mul (Var (Global 29)) (Var (Global 75)) (Local 2));
  Let b1 = M[007264];
  Let b2 = M[007265];
  Let b3 = M[007356];
  Let b4 = M[007357];
  SetLocal 2 Mul(MakeHiLo(b1,b2),MakeHiLo(b3,b4));
  TraceOperation 078333 (Call (Floc 041084) [Var (Local 2)] (Local 3));
  PushFrame;
  PushReturnAddress 078333;
  SetLocal 1 GetLocal(2);
  MakeRoutineFrame 1;
  Jump: 041085
LocReturn 078333:
  SetLocal 3 call_result;
  TraceOperation 078339 (Call (Floc 041108) [Var (Local 2)] (Local 4));
  PushFrame;
  PushReturnAddress 078339;
  SetLocal 1 GetLocal(2);
  MakeRoutineFrame 1;
  Jump: 041109
LocReturn 078339:
  SetLocal 4 call_result;
  TraceOperation 078345 (Store (Con 6) (Var (Local 3)));
  SetLocal 6 GetLocal(3);
  Jump: 078348
LocOp 078348:
  TraceOperation 078348 (Add (Var (Local 3)) (Var (Local 4)) Sp);
  PushStack Add(GetLocal(3),GetLocal(4));
  TraceOperation 078352 (Jl (Var (Local 6)) (Var Sp) (Branch F (Dloc 078368)));
  PopStack popped1;
  if (LessThan(GetLocal(6),popped1)) {
    TraceOperation 078356 (Loadb (Con 0) (Var (Local 6)) Sp);
    Let b2 = M[Offset(000000,GetLocal(6))];
    PushStack Widen(b2);
    TraceOperation 078360 (Print_char (Var Sp));
    PopStack popped3;
    GamePrint SingleChar(popped3);
    TraceOperation 078363 (Inc (Con 6));
    SetLocal 6 Add(GetLocal(6),1);
    TraceOperation 078365 (Jump 078348);
    Jump: 078348
  } else {
    Jump: 078368
  }
LocOp 078368:
  TraceOperation 078368 (Sub (Var (Local 8)) (Con 1) Sp);
  PushStack Sub(GetLocal(8),1);
  TraceOperation 078372 (Jl (Var (Local 5)) (Var Sp) (Branch F (Dloc 078379)));
  PopStack popped1;
  if (LessThan(GetLocal(5),popped1)) {
    TraceOperation 078376 (Print " ");
    GamePrint " ";
    Jump: 078379
  } else {
    Jump: 078379
  }
LocOp 078379:
  TraceOperation 078379 (Jump 078322);
  Jump: 078322
--------------------------------------------------
LocRoutine 078388:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 078389
LocOp 078389:
  TraceOperation 078389 (Print_num (Var (Local 1)));
  GamePrint ShowNumber(GetLocal(1));
  TraceOperation 078392 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 078396:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 078397
LocOp 078397:
  TraceOperation 078397 (Jz (Var (Local 1)) (Branch F (Dloc 078408)));
  if (IsZero(GetLocal(1))) {
    TraceOperation 078400 (Print "false");
    GamePrint "false";
    TraceOperation 078405 (Jump 078413);
    Jump: 078413
  } else {
    Jump: 078408
  }
LocOp 078408:
  TraceOperation 078408 (Print "true");
  GamePrint "true";
  Jump: 078413
LocOp 078413:
  TraceOperation 078413 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 078416:
  MakeRoutineFrame 12;
  if (LessThanByte(num_actuals,12)) {
    SetLocal 12 0;
    if (LessThanByte(num_actuals,11)) {
      SetLocal 11 0;
      if (LessThanByte(num_actuals,10)) {
        SetLocal 10 0;
        if (LessThanByte(num_actuals,9)) {
          SetLocal 9 0;
          if (LessThanByte(num_actuals,8)) {
            SetLocal 8 0;
            if (LessThanByte(num_actuals,7)) {
              SetLocal 7 0;
              if (LessThanByte(num_actuals,6)) {
                SetLocal 6 0;
                if (LessThanByte(num_actuals,5)) {
                  SetLocal 5 0;
                  if (LessThanByte(num_actuals,4)) {
                    SetLocal 4 0;
                    if (LessThanByte(num_actuals,3)) {
                      SetLocal 3 0;
                      if (LessThanByte(num_actuals,2)) {
                        SetLocal 2 0;
                        if (LessThanByte(num_actuals,1)) {
                          SetLocal 1 0;
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  Jump: 078417
LocOp 078417:
  TraceOperation 078417 (Jz (Var (Local 6)) (Branch F (Dloc 078433)));
  if (IsZero(GetLocal(6))) {
    TraceOperation 078420 (Jg (Var (Global 116)) (Con 0) (Branch F (Dloc 078433)));
    Let b1 = M[007438];
    Let b2 = M[007439];
    if (GreaterThan(MakeHiLo(b1,b2),0)) {
      TraceOperation 078424 (Print "(");
      GamePrint "(";
      TraceOperation 078427 (Print_num (Var (Global 116)));
      Let b3 = M[007438];
      Let b4 = M[007439];
      GamePrint ShowNumber(MakeHiLo(b3,b4));
      TraceOperation 078430 (Print ") ");
      GamePrint ") ";
      Jump: 078433
    } else {
      Jump: 078433
    }
  } else {
    Jump: 078433
  }
LocOp 078433:
  TraceOperation 078433 (Je [Var (Local 1),Var (Global 31)] (Branch T (Dloc 078474)));
  Let b1 = M[007268];
  Let b2 = M[007269];
  if (Equal(GetLocal(1),MakeHiLo(b1,b2))) {
    Jump: 078474
  } else {
    TraceOperation 078437 (Je [Var (Local 6),Con 2] (Branch T (Dloc 078474)));
    if (Equal(GetLocal(6),2)) {
      Jump: 078474
    } else {
      TraceOperation 078441 (Jz (Var (Local 2)) (Branch T (Dloc 078466)));
      if (IsZero(GetLocal(2))) {
        Jump: 078466
      } else {
        TraceOperation 078444 (Print "asking ");
        GamePrint "asking ";
        TraceOperation 078451 (CallN (Floc 081916) [Var (Local 1)]);
        PushFrame;
        PushReturnAddress 078451;
        SetLocal 1 GetLocal(1);
        MakeRoutineFrame 2;
        SetLocal 2 0;
        Jump: 081917
      }
    }
  }
LocReturn 078451:
  TraceOperation 078456 (Print " to try ");
  GamePrint " to try ";
  TraceOperation 078463 (Jump 078474);
  Jump: 078474
LocOp 078466:
  TraceOperation 078466 (CallN (Floc 081916) [Var (Local 1)]);
  PushFrame;
  PushReturnAddress 078466;
  SetLocal 1 GetLocal(1);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 081917
LocReturn 078466:
  TraceOperation 078471 (Print " ");
  GamePrint " ";
  Jump: 078474
LocOp 078474:
  TraceOperation 078474 (Call (Floc 076064) [Var (Local 3)] (Local 7));
  PushFrame;
  PushReturnAddress 078474;
  SetLocal 1 GetLocal(3);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 076065
LocReturn 078474:
  SetLocal 7 call_result;
  TraceOperation 078480 (Jz (Var (Local 7)) (Branch T (Dloc 078624)));
  if (IsZero(GetLocal(7))) {
    Jump: 078624
  } else {
    TraceOperation 078484 (Add (Var (Local 7)) (Con 4) (Local 7));
    SetLocal 7 Add(GetLocal(7),4);
    TraceOperation 078488 (Add (Var (Local 7)) (Con 5) (Local 8));
    SetLocal 8 Add(GetLocal(7),5);
    Jump: 078492
  }
LocOp 078492:
  TraceOperation 078492 (Loadw (Con 12693) (Var (Local 7)) (Local 10));
  Let b1 = M[Offset(012693,Mul(2,GetLocal(7)))];
  Let b2 = M[Offset(Offset(012693,Mul(2,GetLocal(7))),1)];
  SetLocal 10 MakeHiLo(b1,b2);
  TraceOperation 078498 (Je [Var (Local 10),Con -1] (Branch T (Dloc 078609)));
  if (Equal(GetLocal(10),-1)) {
    Jump: 078609
  } else {
    TraceOperation 078505 (Call (Floc 026172) [Var (Local 10),Con 3] Sp);
    PushFrame;
    PushReturnAddress 078505;
    SetLocal 1 GetLocal(10);
    SetLocal 2 3;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  }
LocReturn 078505:
  PushStack call_result;
  TraceOperation 078512 (Jz (Var Sp) (Branch T (Dloc 078583)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 078583
  } else {
    TraceOperation 078516 (Je [Var (Local 6),Con 2] (Branch F (Dloc 078554)));
    if (Equal(GetLocal(6),2)) {
      TraceOperation 078520 (Add (Var (Local 7)) (Con 1) Sp);
      PushStack Add(GetLocal(7),1);
      TraceOperation 078524 (Loadw (Con 12693) (Var Sp) Sp);
      PopStack popped2;
      Let b3 = M[Offset(012693,Mul(2,popped2))];
      Let b4 = M[Offset(Offset(012693,Mul(2,popped2)),1)];
      PushStack MakeHiLo(b3,b4);
      TraceOperation 078530 (Je [Var Sp,Con -1] (Branch T (Dloc 078551)));
      PopStack popped5;
      if (Equal(popped5,-1)) {
        Jump: 078551
      } else {
        TraceOperation 078536 (Push (Var (Local 12)));
        PushStack GetLocal(12);
        TraceOperation 078539 (Inc (Con 12));
        SetLocal 12 Add(GetLocal(12),1);
        TraceOperation 078541 (Jg (Var Sp) (Con 0) (Branch F (Dloc 078548)));
        PopStack popped6;
        if (GreaterThan(popped6,0)) {
          TraceOperation 078545 (Print " ");
          GamePrint " ";
          Jump: 078548
        } else {
          Jump: 078548
        }
      }
    } else {
      Jump: 078554
    }
  }
LocOp 078548:
  TraceOperation 078548 (Print "it");
  GamePrint "it";
  Jump: 078551
LocOp 078551:
  TraceOperation 078551 (Jump 078580);
  Jump: 078580
LocOp 078554:
  TraceOperation 078554 (Push (Var (Local 12)));
  PushStack GetLocal(12);
  TraceOperation 078557 (Inc (Con 12));
  SetLocal 12 Add(GetLocal(12),1);
  TraceOperation 078559 (Jg (Var Sp) (Con 0) (Branch F (Dloc 078566)));
  PopStack popped1;
  if (GreaterThan(popped1,0)) {
    TraceOperation 078563 (Print " ");
    GamePrint " ";
    Jump: 078566
  } else {
    Jump: 078566
  }
LocOp 078566:
  TraceOperation 078566 (Jz (Var (Local 11)) (Branch F (Dloc 078575)));
  if (IsZero(GetLocal(11))) {
    TraceOperation 078569 (CallN (Fvar (Local 10)) [Var (Local 4)]);
    if (IsZeroAddress(PackedAddress Z5(GetLocal(10)))) {
      Jump: 078572
    } else {
      PushFrame;
      PushReturnAddress 078569;
      SetLocal 1 GetLocal(4);
      SetNumberActuals 1;
      JumpIndirect: (routine) PackedAddress Z5(GetLocal(10))
    }
  } else {
    Jump: 078575
  }
LocReturn 078569:
  Jump: 078572
LocOp 078572:
  TraceOperation 078572 (Jump 078578);
  Jump: 078578
LocOp 078575:
  TraceOperation 078575 (CallN (Fvar (Local 10)) [Var (Local 5)]);
  if (IsZeroAddress(PackedAddress Z5(GetLocal(10)))) {
    Jump: 078578
  } else {
    PushFrame;
    PushReturnAddress 078575;
    SetLocal 1 GetLocal(5);
    SetNumberActuals 1;
    JumpIndirect: (routine) PackedAddress Z5(GetLocal(10))
  }
LocReturn 078575:
  Jump: 078578
LocOp 078578:
  TraceOperation 078578 (Inc (Con 11));
  SetLocal 11 Add(GetLocal(11),1);
  Jump: 078580
LocOp 078580:
  TraceOperation 078580 (Jump 078597);
  Jump: 078597
LocOp 078583:
  TraceOperation 078583 (Push (Var (Local 12)));
  PushStack GetLocal(12);
  TraceOperation 078586 (Inc (Con 12));
  SetLocal 12 Add(GetLocal(12),1);
  TraceOperation 078588 (Jg (Var Sp) (Con 0) (Branch F (Dloc 078595)));
  PopStack popped1;
  if (GreaterThan(popped1,0)) {
    TraceOperation 078592 (Print " ");
    GamePrint " ";
    Jump: 078595
  } else {
    Jump: 078595
  }
LocOp 078595:
  TraceOperation 078595 (Print_paddr (Var (Local 10)));
  GamePrint GetText(PackedAddress Z5(GetLocal(10)));
  Jump: 078597
LocOp 078597:
  TraceOperation 078597 (Inc (Con 7));
  SetLocal 7 Add(GetLocal(7),1);
  TraceOperation 078599 (Je [Var (Local 7),Var (Local 8)] (Branch F (Dloc 078606)));
  if (Equal(GetLocal(7),GetLocal(8))) {
    TraceOperation 078603 (Jump 078609);
    Jump: 078609
  } else {
    Jump: 078606
  }
LocOp 078606:
  TraceOperation 078606 (Jump 078492);
  Jump: 078492
LocOp 078609:
  TraceOperation 078609 (Jz (Var (Global 49)) (Branch T (Dloc 078624)));
  Let b1 = M[007304];
  Let b2 = M[007305];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 078624
  } else {
    TraceOperation 078612 (Jz (Var (Local 6)) (Branch F (Dloc 078624)));
    if (IsZero(GetLocal(6))) {
      TraceOperation 078615 (Print " - silently");
      GamePrint " - silently";
      Jump: 078624
    } else {
      Jump: 078624
    }
  }
LocOp 078624:
  TraceOperation 078624 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 078628:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 078629
LocOp 078629:
  TraceOperation 078629 (Store (Con 1) (Con 0));
  SetLocal 1 0;
  Jump: 078632
LocOp 078632:
  TraceOperation 078632 (Jl (Var (Local 1)) (Var (Global 183)) (Branch F (Dloc 078663)));
  Let b1 = M[007572];
  Let b2 = M[007573];
  if (LessThan(GetLocal(1),MakeHiLo(b1,b2))) {
    TraceOperation 078636 (Loadw (Con 16539) (Var (Local 1)) (Local 2));
    Let b3 = M[Offset(016539,Mul(2,GetLocal(1)))];
    Let b4 = M[Offset(Offset(016539,Mul(2,GetLocal(1))),1)];
    SetLocal 2 MakeHiLo(b3,b4);
    TraceOperation 078642 (Je [Var (Local 2),Con 0,Con 1,Con 3] (Branch T (Dloc 078655)));
    if (LogOr(LogOr(Equal(GetLocal(2),0),Equal(GetLocal(2),1)),Equal(GetLocal(2),3))) {
      Jump: 078655
    } else {
      TraceOperation 078649 (Je [Var (Local 2),Con 4,Con 5] (Branch F (Dloc 078658)));
      if (LogOr(Equal(GetLocal(2),4),Equal(GetLocal(2),5))) {
        Jump: 078655
      } else {
        Jump: 078658
      }
    }
  } else {
    Jump: 078663
  }
LocOp 078655:
  TraceOperation 078655 (Store (Con 3) (Con 1));
  SetLocal 3 1;
  Jump: 078658
LocOp 078658:
  TraceOperation 078658 (Inc (Con 1));
  SetLocal 1 Add(GetLocal(1),1);
  TraceOperation 078660 (Jump 078632);
  Jump: 078632
LocOp 078663:
  TraceOperation 078663 (Jz (Var (Global 184)) (Branch F (Dloc 078675)));
  Let b1 = M[007574];
  Let b2 = M[007575];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 078666 (Jz (Var (Local 3)) (Branch T (Dloc 078675)));
    if (IsZero(GetLocal(3))) {
      Jump: 078675
    } else {
      TraceOperation 078669 (Store (Con 201) (Var (Global 114)));
      Let b3 = M[007434];
      Let b4 = M[007435];
      SetByte 007576 b3;
      SetByte 007577 b4;
      TraceOperation 078672 (Store (Con 130) (Con 0));
      SetByte 007434 0;
      SetByte 007435 0;
      Jump: 078675
    }
  } else {
    Jump: 078675
  }
LocOp 078675:
  TraceOperation 078675 (Jz (Var (Global 184)) (Branch T (Dloc 078684)));
  Let b1 = M[007574];
  Let b2 = M[007575];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 078684
  } else {
    TraceOperation 078678 (Jz (Var (Local 3)) (Branch F (Dloc 078684)));
    if (IsZero(GetLocal(3))) {
      TraceOperation 078681 (Store (Con 130) (Var (Global 185)));
      Let b3 = M[007576];
      Let b4 = M[007577];
      SetByte 007434 b3;
      SetByte 007435 b4;
      Jump: 078684
    } else {
      Jump: 078684
    }
  }
LocOp 078684:
  TraceOperation 078684 (Store (Con 200) (Var (Local 3)));
  SetByte 007574 HiByte(GetLocal(3));
  SetByte 007575 LoByte(GetLocal(3));
  TraceOperation 078687 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 078688:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 078689
LocOp 078689:
  TraceOperation 078689 (Store (Con 3) (Con 0));
  SetLocal 3 0;
  Jump: 078692
LocOp 078692:
  TraceOperation 078692 (Jl (Var (Local 3)) (Var (Global 183)) (Branch F (Dloc 078727)));
  Let b1 = M[007572];
  Let b2 = M[007573];
  if (LessThan(GetLocal(3),MakeHiLo(b1,b2))) {
    TraceOperation 078696 (Loadw (Con 16539) (Var (Local 3)) Sp);
    Let b3 = M[Offset(016539,Mul(2,GetLocal(3)))];
    Let b4 = M[Offset(Offset(016539,Mul(2,GetLocal(3))),1)];
    PushStack MakeHiLo(b3,b4);
    TraceOperation 078702 (Je [Var Sp,Var (Local 1)] (Branch F (Dloc 078722)));
    PopStack popped5;
    if (Equal(popped5,GetLocal(1))) {
      TraceOperation 078706 (Jz (Var (Local 2)) (Branch T Dtrue));
      if (IsZero(GetLocal(2))) {
        PopFrame;
        PopReturnAddress return_address_6;
        SetResult 1;
        JumpIndirect: (return) return_address_6
      } else {
        TraceOperation 078709 (Loadw (Con 16579) (Var (Local 3)) Sp);
        Let b7 = M[Offset(016579,Mul(2,GetLocal(3)))];
        Let b8 = M[Offset(Offset(016579,Mul(2,GetLocal(3))),1)];
        PushStack MakeHiLo(b7,b8);
        TraceOperation 078715 (Call (Fvar (Local 2)) [Var Sp] Sp);
        if (IsZeroAddress(PackedAddress Z5(GetLocal(2)))) {
          PushStack 0;
          Jump: 078719
        } else {
          PopStack popped9;
          PushFrame;
          PushReturnAddress 078715;
          SetLocal 1 popped9;
          SetNumberActuals 1;
          JumpIndirect: (routine) PackedAddress Z5(GetLocal(2))
        }
      }
    } else {
      Jump: 078722
    }
  } else {
    Jump: 078727
  }
LocReturn 078715:
  PushStack call_result;
  Jump: 078719
LocOp 078719:
  TraceOperation 078719 (Jz (Var Sp) (Branch F Dtrue));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 078722
  } else {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  }
LocOp 078722:
  TraceOperation 078722 (Inc (Con 3));
  SetLocal 3 Add(GetLocal(3),1);
  TraceOperation 078724 (Jump 078692);
  Jump: 078692
LocOp 078727:
  TraceOperation 078727 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 078728:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 078729
LocOp 078729:
  TraceOperation 078729 (Loadw (Con 11559) (Var (Local 1)) (Local 2));
  Let b1 = M[Offset(011559,Mul(2,GetLocal(1)))];
  Let b2 = M[Offset(Offset(011559,Mul(2,GetLocal(1))),1)];
  SetLocal 2 MakeHiLo(b1,b2);
  TraceOperation 078735 (Loadw (Con 14735) (Var (Local 2)) Sp);
  Let b3 = M[Offset(014735,Mul(2,GetLocal(2)))];
  Let b4 = M[Offset(Offset(014735,Mul(2,GetLocal(2))),1)];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 078741 (Loadw (Var Sp) (Con 0) Sp);
  PopStack popped5;
  Let b6 = M[Offset(Address(popped5),0)];
  Let b7 = M[Offset(Offset(Address(popped5),0),1)];
  PushStack MakeHiLo(b6,b7);
  TraceOperation 078745 (Je [Var Sp,Con -1] (Branch F Dfalse));
  PopStack popped8;
  if (Equal(popped8,-1)) {
    TraceOperation 078751 (Loadw (Con 11625) (Var (Local 1)) (Local 2));
    Let b9 = M[Offset(011625,Mul(2,GetLocal(1)))];
    Let b10 = M[Offset(Offset(011625,Mul(2,GetLocal(1))),1)];
    SetLocal 2 MakeHiLo(b9,b10);
    TraceOperation 078757 (Loadw (Con 14735) (Var (Local 2)) Sp);
    Let b11 = M[Offset(014735,Mul(2,GetLocal(2)))];
    Let b12 = M[Offset(Offset(014735,Mul(2,GetLocal(2))),1)];
    PushStack MakeHiLo(b11,b12);
    TraceOperation 078763 (Loadw (Var Sp) (Con 0) Sp);
    PopStack popped13;
    Let b14 = M[Offset(Address(popped13),0)];
    Let b15 = M[Offset(Offset(Address(popped13),0),1)];
    PushStack MakeHiLo(b14,b15);
    TraceOperation 078767 (Je [Var Sp,Con -1] (Branch F Dfalse));
    PopStack popped16;
    if (Equal(popped16,-1)) {
      TraceOperation 078773 (Loadw (Con 11691) (Var (Local 1)) (Local 2));
      Let b17 = M[Offset(011691,Mul(2,GetLocal(1)))];
      Let b18 = M[Offset(Offset(011691,Mul(2,GetLocal(1))),1)];
      SetLocal 2 MakeHiLo(b17,b18);
      TraceOperation 078779 (Loadw (Con 14735) (Var (Local 2)) Sp);
      Let b19 = M[Offset(014735,Mul(2,GetLocal(2)))];
      Let b20 = M[Offset(Offset(014735,Mul(2,GetLocal(2))),1)];
      PushStack MakeHiLo(b19,b20);
      TraceOperation 078785 (Loadw (Var Sp) (Con 0) Sp);
      PopStack popped21;
      Let b22 = M[Offset(Address(popped21),0)];
      Let b23 = M[Offset(Offset(Address(popped21),0),1)];
      PushStack MakeHiLo(b22,b23);
      TraceOperation 078789 (Je [Var Sp,Con -1] (Branch F Dfalse));
      PopStack popped24;
      if (Equal(popped24,-1)) {
        TraceOperation 078795 Rtrue;
        PopFrame;
        PopReturnAddress return_address_25;
        SetResult 1;
        JumpIndirect: (return) return_address_25
      } else {
        PopFrame;
        PopReturnAddress return_address_26;
        SetResult 0;
        JumpIndirect: (return) return_address_26
      }
    } else {
      PopFrame;
      PopReturnAddress return_address_27;
      SetResult 0;
      JumpIndirect: (return) return_address_27
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_28;
    SetResult 0;
    JumpIndirect: (return) return_address_28
  }
--------------------------------------------------
LocRoutine 078796:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 078797
LocOp 078797:
  TraceOperation 078797 (Push (Var (Global 235)));
  Let b1 = M[007676];
  Let b2 = M[007677];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 078800 (Jz (Var (Local 2)) (Branch T (Dloc 078806)));
  if (IsZero(GetLocal(2))) {
    Jump: 078806
  } else {
    TraceOperation 078803 (Store (Con 251) (Var (Local 2)));
    SetByte 007676 HiByte(GetLocal(2));
    SetByte 007677 LoByte(GetLocal(2));
    Jump: 078806
  }
LocOp 078806:
  TraceOperation 078806 (Call (Floc 088936) [Var (Local 1),Var (Local 2),Con 1] (Local 3));
  PushFrame;
  PushReturnAddress 078806;
  SetLocal 1 GetLocal(1);
  SetLocal 2 GetLocal(2);
  SetLocal 3 1;
  MakeRoutineFrame 14;
  SetLocal 14 0;
  SetLocal 13 0;
  SetLocal 12 0;
  SetLocal 11 0;
  SetLocal 10 0;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 088937
LocReturn 078806:
  SetLocal 3 call_result;
  TraceOperation 078814 (Pull (Con 251));
  PopStack popped1;
  SetByte 007676 HiByte(popped1);
  SetByte 007677 LoByte(popped1);
  TraceOperation 078817 (Jz (Var (Local 3)) (Branch F Dtrue));
  if (IsZero(GetLocal(3))) {
    TraceOperation 078820 Rfalse;
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  } else {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  }
--------------------------------------------------
LocRoutine 078824:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 078825
LocOp 078825:
  TraceOperation 078825 (CallN (Floc 078848) [Var (Local 1),Var (Local 2)]);
  PushFrame;
  PushReturnAddress 078825;
  SetLocal 1 GetLocal(1);
  SetLocal 2 GetLocal(2);
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 078849
LocReturn 078825:
  TraceOperation 078831 (Call (Floc 078928) [Var (Local 1),Var (Local 2)] (Local 3));
  PushFrame;
  PushReturnAddress 078831;
  SetLocal 1 GetLocal(1);
  SetLocal 2 GetLocal(2);
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 078929
LocReturn 078831:
  SetLocal 3 call_result;
  TraceOperation 078838 (CallN (Floc 078972) [Var (Local 1),Var (Local 2)]);
  PushFrame;
  PushReturnAddress 078838;
  SetLocal 1 GetLocal(1);
  SetLocal 2 GetLocal(2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 078973
LocReturn 078838:
  TraceOperation 078844 (Ret (Var (Local 3)));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult GetLocal(3);
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 078848:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 078849
LocOp 078849:
  TraceOperation 078849 (Je [Var (Global 183),Con 20] (Branch F (Dloc 078860)));
  Let b1 = M[007572];
  Let b2 = M[007573];
  if (Equal(MakeHiLo(b1,b2),20)) {
    TraceOperation 078853 (Call (Floc 086692) [Con 12] Sp);
    PushFrame;
    PushReturnAddress 078853;
    SetLocal 1 12;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 086693
  } else {
    Jump: 078860
  }
LocReturn 078853:
  PushStack call_result;
  TraceOperation 078859 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 078860:
  TraceOperation 078860 (Storew (Con 16579) (Var (Global 183)) (Var (Local 2)));
  Let b1 = M[007572];
  Let b2 = M[007573];
  SetByte Offset(016579,Mul(2,MakeHiLo(b1,b2))) HiByte(GetLocal(2));
  SetByte Offset(Offset(016579,Mul(2,MakeHiLo(b1,b2))),1) LoByte(GetLocal(2));
  TraceOperation 078866 (Push (Var (Global 183)));
  Let b3 = M[007572];
  Let b4 = M[007573];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 078869 (Inc (Con 199));
  Let b5 = M[007572];
  Let b6 = M[007573];
  SetByte 007572 HiByte(Add(MakeHiLo(b5,b6),1));
  SetByte 007573 LoByte(Add(MakeHiLo(b5,b6),1));
  TraceOperation 078871 (Storew (Con 16539) (Var Sp) (Var (Local 1)));
  PopStack popped7;
  SetByte Offset(016539,Mul(2,popped7)) HiByte(GetLocal(1));
  SetByte Offset(Offset(016539,Mul(2,popped7)),1) LoByte(GetLocal(1));
  TraceOperation 078877 (CallN (Floc 078628) []);
  PushFrame;
  PushReturnAddress 078877;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  SetLocal 2 0;
  SetLocal 1 0;
  Jump: 078629
LocReturn 078877:
  TraceOperation 078880 (CallN (Floc 079924) [Var (Local 1)]);
  PushFrame;
  PushReturnAddress 078880;
  SetLocal 1 GetLocal(1);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 079925
LocReturn 078880:
  TraceOperation 078885 (Loadb (Con 11757) (Var (Local 1)) Sp);
  Let b1 = M[Offset(011757,GetLocal(1))];
  PushStack Widen(b1);
  TraceOperation 078891 (Jz (Var Sp) (Branch T (Dloc 078900)));
  PopStack popped2;
  if (IsZero(popped2)) {
    Jump: 078900
  } else {
    TraceOperation 078894 (Store (Con 3) (Var (Global 40)));
    Let b3 = M[007286];
    Let b4 = M[007287];
    SetLocal 3 MakeHiLo(b3,b4);
    TraceOperation 078897 (Store (Con 56) (Var (Global 73)));
    Let b5 = M[007352];
    Let b6 = M[007353];
    SetByte 007286 b5;
    SetByte 007287 b6;
    Jump: 078900
  }
LocOp 078900:
  TraceOperation 078900 (Loadw (Con 11559) (Var (Local 1)) Sp);
  Let b1 = M[Offset(011559,Mul(2,GetLocal(1)))];
  Let b2 = M[Offset(Offset(011559,Mul(2,GetLocal(1))),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 078906 (Call (Floc 078796) [Var Sp,Var (Local 2)] (Local 2));
  PopStack popped3;
  PushFrame;
  PushReturnAddress 078906;
  SetLocal 1 popped3;
  SetLocal 2 GetLocal(2);
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 078797
LocReturn 078906:
  SetLocal 2 call_result;
  TraceOperation 078913 (Loadb (Con 11757) (Var (Local 1)) Sp);
  Let b1 = M[Offset(011757,GetLocal(1))];
  PushStack Widen(b1);
  TraceOperation 078919 (Jz (Var Sp) (Branch T (Dloc 078925)));
  PopStack popped2;
  if (IsZero(popped2)) {
    Jump: 078925
  } else {
    TraceOperation 078922 (Store (Con 56) (Var (Local 3)));
    SetByte 007286 HiByte(GetLocal(3));
    SetByte 007287 LoByte(GetLocal(3));
    Jump: 078925
  }
LocOp 078925:
  TraceOperation 078925 (Ret (Var (Local 2)));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult GetLocal(2);
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 078928:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 078929
LocOp 078929:
  TraceOperation 078929 (Loadb (Con 11757) (Var (Local 1)) Sp);
  Let b1 = M[Offset(011757,GetLocal(1))];
  PushStack Widen(b1);
  TraceOperation 078935 (Jz (Var Sp) (Branch T (Dloc 078944)));
  PopStack popped2;
  if (IsZero(popped2)) {
    Jump: 078944
  } else {
    TraceOperation 078938 (Store (Con 3) (Var (Global 40)));
    Let b3 = M[007286];
    Let b4 = M[007287];
    SetLocal 3 MakeHiLo(b3,b4);
    TraceOperation 078941 (Store (Con 56) (Var (Global 73)));
    Let b5 = M[007352];
    Let b6 = M[007353];
    SetByte 007286 b5;
    SetByte 007287 b6;
    Jump: 078944
  }
LocOp 078944:
  TraceOperation 078944 (Loadw (Con 11625) (Var (Local 1)) Sp);
  Let b1 = M[Offset(011625,Mul(2,GetLocal(1)))];
  Let b2 = M[Offset(Offset(011625,Mul(2,GetLocal(1))),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 078950 (Call (Floc 078796) [Var Sp,Var (Local 2)] (Local 2));
  PopStack popped3;
  PushFrame;
  PushReturnAddress 078950;
  SetLocal 1 popped3;
  SetLocal 2 GetLocal(2);
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 078797
LocReturn 078950:
  SetLocal 2 call_result;
  TraceOperation 078957 (Loadb (Con 11757) (Var (Local 1)) Sp);
  Let b1 = M[Offset(011757,GetLocal(1))];
  PushStack Widen(b1);
  TraceOperation 078963 (Jz (Var Sp) (Branch T (Dloc 078969)));
  PopStack popped2;
  if (IsZero(popped2)) {
    Jump: 078969
  } else {
    TraceOperation 078966 (Store (Con 56) (Var (Local 3)));
    SetByte 007286 HiByte(GetLocal(3));
    SetByte 007287 LoByte(GetLocal(3));
    Jump: 078969
  }
LocOp 078969:
  TraceOperation 078969 (Ret (Var (Local 2)));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult GetLocal(2);
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 078972:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 078973
LocOp 078973:
  TraceOperation 078973 (Jg (Var (Global 183)) (Con 0) (Branch F (Dloc 079044)));
  Let b1 = M[007572];
  Let b2 = M[007573];
  if (GreaterThan(MakeHiLo(b1,b2),0)) {
    TraceOperation 078978 (Sub (Var (Global 183)) (Con 1) Sp);
    Let b3 = M[007572];
    Let b4 = M[007573];
    PushStack Sub(MakeHiLo(b3,b4),1);
    TraceOperation 078982 (Loadw (Con 16539) (Var Sp) Sp);
    PopStack popped5;
    Let b6 = M[Offset(016539,Mul(2,popped5))];
    Let b7 = M[Offset(Offset(016539,Mul(2,popped5)),1)];
    PushStack MakeHiLo(b6,b7);
    TraceOperation 078988 (Je [Var Sp,Var (Local 1)] (Branch F (Dloc 079044)));
    PopStack popped8;
    if (Equal(popped8,GetLocal(1))) {
      TraceOperation 078992 (Loadb (Con 11757) (Var (Local 1)) Sp);
      Let b9 = M[Offset(011757,GetLocal(1))];
      PushStack Widen(b9);
      TraceOperation 078998 (Jz (Var Sp) (Branch T (Dloc 079007)));
      PopStack popped10;
      if (IsZero(popped10)) {
        Jump: 079007
      } else {
        TraceOperation 079001 (Store (Con 4) (Var (Global 40)));
        Let b11 = M[007286];
        Let b12 = M[007287];
        SetLocal 4 MakeHiLo(b11,b12);
        TraceOperation 079004 (Store (Con 56) (Var (Global 73)));
        Let b13 = M[007352];
        Let b14 = M[007353];
        SetByte 007286 b13;
        SetByte 007287 b14;
        Jump: 079007
      }
    } else {
      Jump: 079044
    }
  } else {
    Jump: 079044
  }
LocOp 079007:
  TraceOperation 079007 (Loadw (Con 11691) (Var (Local 1)) Sp);
  Let b1 = M[Offset(011691,Mul(2,GetLocal(1)))];
  Let b2 = M[Offset(Offset(011691,Mul(2,GetLocal(1))),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 079013 (Call (Floc 078796) [Var Sp,Var (Local 2)] (Local 3));
  PopStack popped3;
  PushFrame;
  PushReturnAddress 079013;
  SetLocal 1 popped3;
  SetLocal 2 GetLocal(2);
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 078797
LocReturn 079013:
  SetLocal 3 call_result;
  TraceOperation 079020 (Loadb (Con 11757) (Var (Local 1)) Sp);
  Let b1 = M[Offset(011757,GetLocal(1))];
  PushStack Widen(b1);
  TraceOperation 079026 (Jz (Var Sp) (Branch T (Dloc 079032)));
  PopStack popped2;
  if (IsZero(popped2)) {
    Jump: 079032
  } else {
    TraceOperation 079029 (Store (Con 56) (Var (Local 4)));
    SetByte 007286 HiByte(GetLocal(4));
    SetByte 007287 LoByte(GetLocal(4));
    Jump: 079032
  }
LocOp 079032:
  TraceOperation 079032 (Dec (Con 199));
  Let b1 = M[007572];
  Let b2 = M[007573];
  SetByte 007572 HiByte(Sub(MakeHiLo(b1,b2),1));
  SetByte 007573 LoByte(Sub(MakeHiLo(b1,b2),1));
  TraceOperation 079034 (CallN (Floc 078628) []);
  PushFrame;
  PushReturnAddress 079034;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  SetLocal 2 0;
  SetLocal 1 0;
  Jump: 078629
LocReturn 079034:
  TraceOperation 079037 (CallN (Floc 079948) [Var (Local 1)]);
  PushFrame;
  PushReturnAddress 079037;
  SetLocal 1 GetLocal(1);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 079949
LocReturn 079037:
  TraceOperation 079042 (Ret (Var (Local 3)));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult GetLocal(3);
  JumpIndirect: (return) return_address_1
LocOp 079044:
  TraceOperation 079044 (Call (Floc 086692) [Con 13] Sp);
  PushFrame;
  PushReturnAddress 079044;
  SetLocal 1 13;
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 086693
LocReturn 079044:
  PushStack call_result;
  TraceOperation 079050 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 079052:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 079053
LocOp 079053:
  TraceOperation 079053 (Jg (Var (Global 183)) (Con 0) (Branch F (Dloc 079082)));
  Let b1 = M[007572];
  Let b2 = M[007573];
  if (GreaterThan(MakeHiLo(b1,b2),0)) {
    TraceOperation 079057 (Sub (Var (Global 183)) (Con 1) Sp);
    Let b3 = M[007572];
    Let b4 = M[007573];
    PushStack Sub(MakeHiLo(b3,b4),1);
    TraceOperation 079061 (Loadw (Con 16539) (Var Sp) Sp);
    PopStack popped5;
    Let b6 = M[Offset(016539,Mul(2,popped5))];
    Let b7 = M[Offset(Offset(016539,Mul(2,popped5)),1)];
    PushStack MakeHiLo(b6,b7);
    TraceOperation 079067 (Je [Var Sp,Var (Local 1)] (Branch F (Dloc 079082)));
    PopStack popped8;
    if (Equal(popped8,GetLocal(1))) {
      TraceOperation 079071 (Dec (Con 199));
      Let b9 = M[007572];
      Let b10 = M[007573];
      SetByte 007572 HiByte(Sub(MakeHiLo(b9,b10),1));
      SetByte 007573 LoByte(Sub(MakeHiLo(b9,b10),1));
      TraceOperation 079073 (CallN (Floc 078628) []);
      PushFrame;
      PushReturnAddress 079073;
      MakeRoutineFrame 3;
      SetLocal 3 0;
      SetLocal 2 0;
      SetLocal 1 0;
      Jump: 078629
    } else {
      Jump: 079082
    }
  } else {
    Jump: 079082
  }
LocReturn 079073:
  TraceOperation 079076 (CallN (Floc 079948) [Var (Local 1)]);
  PushFrame;
  PushReturnAddress 079076;
  SetLocal 1 GetLocal(1);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 079949
LocReturn 079076:
  TraceOperation 079081 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 079082:
  TraceOperation 079082 (Call (Floc 086692) [Con 14] Sp);
  PushFrame;
  PushReturnAddress 079082;
  SetLocal 1 14;
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 086693
LocReturn 079082:
  PushStack call_result;
  TraceOperation 079088 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 079092:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 079093
LocOp 079093:
  TraceOperation 079093 (Jz (Var (Local 2)) (Branch T (Dloc 079106)));
  if (IsZero(GetLocal(2))) {
    Jump: 079106
  } else {
    TraceOperation 079096 (Loadb (Con 16619) (Var (Local 1)) Sp);
    Let b1 = M[Offset(016619,GetLocal(1))];
    PushStack Widen(b1);
    TraceOperation 079102 (Jz (Var Sp) (Branch T (Dloc 079106)));
    PopStack popped2;
    if (IsZero(popped2)) {
      Jump: 079106
    } else {
      TraceOperation 079105 Rtrue;
      PopFrame;
      PopReturnAddress return_address_3;
      SetResult 1;
      JumpIndirect: (return) return_address_3
    }
  }
LocOp 079106:
  TraceOperation 079106 (Storeb (Con 16619) (Var (Local 1)) (Con 1));
  SetByte Offset(016619,GetLocal(1)) 1;
  TraceOperation 079112 (Print "\n");
  GamePrint "\n";
  TraceOperation 079115 (CallN (Floc 025168) [Var (Local 1)]);
  PushFrame;
  PushReturnAddress 079115;
  SetLocal 1 GetLocal(1);
  MakeRoutineFrame 1;
  Jump: 025169
LocReturn 079115:
  TraceOperation 079120 (Print "\n");
  GamePrint "\n";
  TraceOperation 079123 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 079124:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 079125
LocOp 079125:
  TraceOperation 079125 (Jz (Var (Local 2)) (Branch T (Dloc 079138)));
  if (IsZero(GetLocal(2))) {
    Jump: 079138
  } else {
    TraceOperation 079128 (Loadb (Con 16619) (Var (Local 1)) Sp);
    Let b1 = M[Offset(016619,GetLocal(1))];
    PushStack Widen(b1);
    TraceOperation 079134 (Jz (Var Sp) (Branch T (Dloc 079138)));
    PopStack popped2;
    if (IsZero(popped2)) {
      Jump: 079138
    } else {
      TraceOperation 079137 Rtrue;
      PopFrame;
      PopReturnAddress return_address_3;
      SetResult 1;
      JumpIndirect: (return) return_address_3
    }
  }
LocOp 079138:
  TraceOperation 079138 (Storeb (Con 16619) (Var (Local 1)) (Con 1));
  SetByte Offset(016619,GetLocal(1)) 1;
  TraceOperation 079144 (CallN (Floc 025172) [Var (Local 1)]);
  PushFrame;
  PushReturnAddress 079144;
  SetLocal 1 GetLocal(1);
  MakeRoutineFrame 1;
  Jump: 025173
LocReturn 079144:
  TraceOperation 079149 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 079152:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 079153
LocOp 079153:
  TraceOperation 079153 (Jz (Var (Local 1)) (Branch T (Dloc 079166)));
  if (IsZero(GetLocal(1))) {
    Jump: 079166
  } else {
    TraceOperation 079156 (Loadw (Var (Local 1)) (Con 0) Sp);
    Let b1 = M[Offset(Address(GetLocal(1)),0)];
    Let b2 = M[Offset(Offset(Address(GetLocal(1)),0),1)];
    PushStack MakeHiLo(b1,b2);
    TraceOperation 079160 (Je [Var Sp,Con 16339] (Branch T (Dloc 079211)));
    PopStack popped3;
    if (Equal(popped3,16339)) {
      Jump: 079211
    } else {
      Jump: 079166
    }
  }
LocOp 079166:
  TraceOperation 079166 (Print "\n*** Error on unknown file: ");
  GamePrint "\n*** Error on unknown file: ";
  TraceOperation 079195 (Print_paddr (Var (Local 2)));
  GamePrint GetText(PackedAddress Z5(GetLocal(2)));
  TraceOperation 079197 (Print " ***\n");
  GamePrint " ***\n";
  TraceOperation 079208 (Jump 079258);
  Jump: 079258
LocOp 079211:
  TraceOperation 079211 (Print "\n*** Error on file '");
  GamePrint "\n*** Error on file '";
  TraceOperation 079234 (Loadw (Var (Local 1)) (Con 5) Sp);
  Let b1 = M[Offset(Address(GetLocal(1)),10)];
  Let b2 = M[Offset(Offset(Address(GetLocal(1)),10),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 079238 (Print_paddr (Var Sp));
  PopStack popped3;
  GamePrint GetText(PackedAddress Z5(popped3));
  TraceOperation 079240 (Print "': ");
  GamePrint "': ";
  TraceOperation 079245 (Print_paddr (Var (Local 2)));
  GamePrint GetText(PackedAddress Z5(GetLocal(2)));
  TraceOperation 079247 (Print " ***\n");
  GamePrint " ***\n";
  Jump: 079258
LocOp 079258:
  TraceOperation 079258 (CallN (Floc 086692) [Con 48]);
  PushFrame;
  PushReturnAddress 079258;
  SetLocal 1 48;
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 086693
LocReturn 079258:
  TraceOperation 079263 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 079264:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 079265
LocOp 079265:
  TraceOperation 079265 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 079268:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 079269
LocOp 079269:
  TraceOperation 079269 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 079272:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 079273
LocOp 079273:
  TraceOperation 079273 (Ret (Con -1));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult -1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 079276:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 079277
LocOp 079277:
  TraceOperation 079277 (Call (Floc 079152) [Var (Local 1),Con 29708] Sp);
  PushFrame;
  PushReturnAddress 079277;
  SetLocal 1 GetLocal(1);
  SetLocal 2 29708;
  MakeRoutineFrame 2;
  Jump: 079153
LocReturn 079277:
  PushStack call_result;
  TraceOperation 079285 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 079288:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 079289
LocOp 079289:
  TraceOperation 079289 (CallN (Floc 079276) [Var (Local 1)]);
  PushFrame;
  PushReturnAddress 079289;
  SetLocal 1 GetLocal(1);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 079277
LocReturn 079289:
  TraceOperation 079294 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 079296:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 079297
LocOp 079297:
  TraceOperation 079297 (CallN (Floc 079276) [Var (Local 1)]);
  PushFrame;
  PushReturnAddress 079297;
  SetLocal 1 GetLocal(1);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 079277
LocReturn 079297:
  TraceOperation 079302 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 079304:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 079305
LocOp 079305:
  TraceOperation 079305 (CallN (Floc 079276) [Var (Local 1)]);
  PushFrame;
  PushReturnAddress 079305;
  SetLocal 1 GetLocal(1);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 079277
LocReturn 079305:
  TraceOperation 079310 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 079312:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 079313
LocOp 079313:
  TraceOperation 079313 (CallN (Floc 079276) [Var (Local 1)]);
  PushFrame;
  PushReturnAddress 079313;
  SetLocal 1 GetLocal(1);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 079277
LocReturn 079313:
  TraceOperation 079318 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 079320:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 079321
LocOp 079321:
  TraceOperation 079321 (Jz (Var (Local 1)) (Branch T Dfalse));
  if (IsZero(GetLocal(1))) {
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 0;
    JumpIndirect: (return) return_address_1
  } else {
    TraceOperation 079324 (Add (Var (Global 186)) (Con 2) Sp);
    Let b2 = M[007578];
    Let b3 = M[007579];
    PushStack Add(MakeHiLo(b2,b3),2);
    TraceOperation 079328 (Call (Floc 110196) [Var (Local 1),Con 69,Var Sp,Con 1] (Local 3));
    PopStack popped4;
    PushFrame;
    PushReturnAddress 079328;
    SetLocal 1 GetLocal(1);
    SetLocal 2 69;
    SetLocal 3 popped4;
    SetLocal 4 1;
    MakeRoutineFrame 15;
    SetLocal 15 0;
    SetLocal 14 0;
    SetLocal 13 0;
    SetLocal 12 0;
    SetLocal 11 0;
    SetLocal 10 0;
    SetLocal 9 0;
    SetLocal 8 0;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    Jump: 110197
  }
LocReturn 079328:
  SetLocal 3 call_result;
  TraceOperation 079338 (Jz (Var (Local 3)) (Branch T Dfalse));
  if (IsZero(GetLocal(3))) {
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 0;
    JumpIndirect: (return) return_address_1
  } else {
    TraceOperation 079341 (Add (Var (Global 186)) (Con 8) Sp);
    Let b2 = M[007578];
    Let b3 = M[007579];
    PushStack Add(MakeHiLo(b2,b3),8);
    TraceOperation 079345 (Jl (Var Sp) (Con 162) (Branch T (Dloc 079359)));
    PopStack popped4;
    if (LessThan(popped4,162)) {
      Jump: 079359
    } else {
      TraceOperation 079349 (CallN (Floc 086692) [Con 46,Con 160]);
      PushFrame;
      PushReturnAddress 079349;
      SetLocal 1 46;
      SetLocal 2 160;
      MakeRoutineFrame 7;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      SetLocal 3 0;
      Jump: 086693
    }
  }
LocReturn 079349:
  TraceOperation 079355 (CallN (Floc 079472) []);
  PushFrame;
  PushReturnAddress 079355;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  SetLocal 1 0;
  Jump: 079473
LocReturn 079355:
  TraceOperation 079358 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
LocOp 079359:
  TraceOperation 079359 (Inc (Con 202));
  Let b1 = M[007578];
  Let b2 = M[007579];
  SetByte 007578 HiByte(Add(MakeHiLo(b1,b2),1));
  SetByte 007579 LoByte(Add(MakeHiLo(b1,b2),1));
  TraceOperation 079361 (Storew (Con 16625) (Var (Global 186)) (Var (Local 2)));
  Let b3 = M[007578];
  Let b4 = M[007579];
  SetByte Offset(016625,Mul(2,MakeHiLo(b3,b4))) HiByte(GetLocal(2));
  SetByte Offset(Offset(016625,Mul(2,MakeHiLo(b3,b4))),1) LoByte(GetLocal(2));
  TraceOperation 079367 (Inc (Con 202));
  Let b5 = M[007578];
  Let b6 = M[007579];
  SetByte 007578 HiByte(Add(MakeHiLo(b5,b6),1));
  SetByte 007579 LoByte(Add(MakeHiLo(b5,b6),1));
  TraceOperation 079369 (Add (Var (Global 186)) (Var (Local 3)) (Global 186));
  Let b7 = M[007578];
  Let b8 = M[007579];
  SetByte 007578 HiByte(Add(MakeHiLo(b7,b8),GetLocal(3)));
  SetByte 007579 LoByte(Add(MakeHiLo(b7,b8),GetLocal(3)));
  TraceOperation 079373 (Add (Var (Local 3)) (Con 2) Sp);
  PushStack Add(GetLocal(3),2);
  TraceOperation 079377 (Sub (Con 0) (Var Sp) Sp);
  PopStack popped9;
  PushStack Sub(0,popped9);
  TraceOperation 079381 (Storew (Con 16625) (Var (Global 186)) (Var Sp));
  Let b10 = M[007578];
  Let b11 = M[007579];
  PopStack popped12;
  SetByte Offset(016625,Mul(2,MakeHiLo(b10,b11))) HiByte(popped12);
  SetByte Offset(Offset(016625,Mul(2,MakeHiLo(b10,b11))),1) LoByte(popped12);
  TraceOperation 079387 Rtrue;
  PopFrame;
  PopReturnAddress return_address_13;
  SetResult 1;
  JumpIndirect: (return) return_address_13
--------------------------------------------------
LocRoutine 079388:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 079389
LocOp 079389:
  TraceOperation 079389 (Call (Floc 079416) [Var (Local 2)] (Local 3));
  PushFrame;
  PushReturnAddress 079389;
  SetLocal 1 GetLocal(2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 079417
LocReturn 079389:
  SetLocal 3 call_result;
  TraceOperation 079395 (Jz (Var (Local 3)) (Branch T Dfalse));
  if (IsZero(GetLocal(3))) {
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 0;
    JumpIndirect: (return) return_address_1
  } else {
    TraceOperation 079398 (Sub (Var (Local 3)) (Con 2) (Global 186));
    SetByte 007578 HiByte(Sub(GetLocal(3),2));
    SetByte 007579 LoByte(Sub(GetLocal(3),2));
    TraceOperation 079402 (Jz (Var (Local 1)) (Branch T (Dloc 079415)));
    if (IsZero(GetLocal(1))) {
      Jump: 079415
    } else {
      TraceOperation 079405 (CallN (Floc 110196) [Var (Local 1),Con 69,Var (Local 3),Con -1]);
      PushFrame;
      PushReturnAddress 079405;
      SetLocal 1 GetLocal(1);
      SetLocal 2 69;
      SetLocal 3 GetLocal(3);
      SetLocal 4 -1;
      MakeRoutineFrame 15;
      SetLocal 15 0;
      SetLocal 14 0;
      SetLocal 13 0;
      SetLocal 12 0;
      SetLocal 11 0;
      SetLocal 10 0;
      SetLocal 9 0;
      SetLocal 8 0;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      Jump: 110197
    }
  }
LocReturn 079405:
  Jump: 079415
LocOp 079415:
  TraceOperation 079415 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 079416:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 079417
LocOp 079417:
  TraceOperation 079417 (Store (Con 2) (Var (Global 186)));
  Let b1 = M[007578];
  Let b2 = M[007579];
  SetLocal 2 MakeHiLo(b1,b2);
  Jump: 079420
LocOp 079420:
  TraceOperation 079420 (Loadw (Con 16625) (Var (Local 2)) Sp);
  Let b1 = M[Offset(016625,Mul(2,GetLocal(2)))];
  Let b2 = M[Offset(Offset(016625,Mul(2,GetLocal(2))),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 079426 (Jz (Var Sp) (Branch T (Dloc 079467)));
  PopStack popped3;
  if (IsZero(popped3)) {
    Jump: 079467
  } else {
    TraceOperation 079429 (Loadw (Con 16625) (Var (Local 2)) (Global 187));
    Let b4 = M[Offset(016625,Mul(2,GetLocal(2)))];
    Let b5 = M[Offset(Offset(016625,Mul(2,GetLocal(2))),1)];
    SetByte 007580 b4;
    SetByte 007581 b5;
    TraceOperation 079435 (Add (Var (Local 2)) (Var (Global 187)) (Local 2));
    Let b6 = M[007580];
    Let b7 = M[007581];
    SetLocal 2 Add(GetLocal(2),MakeHiLo(b6,b7));
    TraceOperation 079439 (Sub (Con -2) (Var (Global 187)) (Global 187));
    Let b8 = M[007580];
    Let b9 = M[007581];
    SetByte 007580 HiByte(Sub(-2,MakeHiLo(b8,b9)));
    SetByte 007581 LoByte(Sub(-2,MakeHiLo(b8,b9)));
    TraceOperation 079445 (Add (Var (Local 2)) (Con 1) Sp);
    PushStack Add(GetLocal(2),1);
    TraceOperation 079449 (Loadw (Con 16625) (Var Sp) Sp);
    PopStack popped10;
    Let b11 = M[Offset(016625,Mul(2,popped10))];
    Let b12 = M[Offset(Offset(016625,Mul(2,popped10)),1)];
    PushStack MakeHiLo(b11,b12);
    TraceOperation 079455 (Je [Var Sp,Var (Local 1)] (Branch F (Dloc 079464)));
    PopStack popped13;
    if (Equal(popped13,GetLocal(1))) {
      TraceOperation 079459 (Add (Var (Local 2)) (Con 2) Sp);
      PushStack Add(GetLocal(2),2);
      TraceOperation 079463 Ret_popped;
      PopStack popped14;
      PopFrame;
      PopReturnAddress return_address_15;
      SetResult popped14;
      JumpIndirect: (return) return_address_15
    } else {
      Jump: 079464
    }
  }
LocOp 079464:
  TraceOperation 079464 (Jump 079420);
  Jump: 079420
LocOp 079467:
  TraceOperation 079467 (Store (Con 203) (Con 0));
  SetByte 007580 0;
  SetByte 007581 0;
  TraceOperation 079470 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 079472:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 079473
LocOp 079473:
  TraceOperation 079473 (Print "Mstack backtrace: size ");
  GamePrint "Mstack backtrace: size ";
  TraceOperation 079492 (Add (Var (Global 186)) (Con 1) Sp);
  Let b1 = M[007578];
  Let b2 = M[007579];
  PushStack Add(MakeHiLo(b1,b2),1);
  TraceOperation 079496 (Print_num (Var Sp));
  PopStack popped3;
  GamePrint ShowNumber(popped3);
  TraceOperation 079499 (Print " words\n");
  GamePrint " words\n";
  TraceOperation 079506 (Store (Con 1) (Var (Global 186)));
  Let b4 = M[007578];
  Let b5 = M[007579];
  SetLocal 1 MakeHiLo(b4,b5);
  Jump: 079509
LocOp 079509:
  TraceOperation 079509 (Loadw (Con 16625) (Var (Local 1)) Sp);
  Let b1 = M[Offset(016625,Mul(2,GetLocal(1)))];
  Let b2 = M[Offset(Offset(016625,Mul(2,GetLocal(1))),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 079515 (Jz (Var Sp) (Branch T (Dloc 079622)));
  PopStack popped3;
  if (IsZero(popped3)) {
    Jump: 079622
  } else {
    TraceOperation 079519 (Loadw (Con 16625) (Var (Local 1)) (Global 187));
    Let b4 = M[Offset(016625,Mul(2,GetLocal(1)))];
    Let b5 = M[Offset(Offset(016625,Mul(2,GetLocal(1))),1)];
    SetByte 007580 b4;
    SetByte 007581 b5;
    TraceOperation 079525 (Add (Var (Local 1)) (Var (Global 187)) (Local 1));
    Let b6 = M[007580];
    Let b7 = M[007581];
    SetLocal 1 Add(GetLocal(1),MakeHiLo(b6,b7));
    TraceOperation 079529 (Sub (Con -2) (Var (Global 187)) (Global 187));
    Let b8 = M[007580];
    Let b9 = M[007581];
    SetByte 007580 HiByte(Sub(-2,MakeHiLo(b8,b9)));
    SetByte 007581 LoByte(Sub(-2,MakeHiLo(b8,b9)));
    TraceOperation 079535 (Print "Block at ");
    GamePrint "Block at ";
    TraceOperation 079544 (Add (Var (Local 1)) (Con 2) Sp);
    PushStack Add(GetLocal(1),2);
    TraceOperation 079548 (Print_num (Var Sp));
    PopStack popped10;
    GamePrint ShowNumber(popped10);
    TraceOperation 079551 (Print " owner ID ");
    GamePrint " owner ID ";
    TraceOperation 079560 (Add (Var (Local 1)) (Con 1) Sp);
    PushStack Add(GetLocal(1),1);
    TraceOperation 079564 (Loadw (Con 16625) (Var Sp) Sp);
    PopStack popped11;
    Let b12 = M[Offset(016625,Mul(2,popped11))];
    Let b13 = M[Offset(Offset(016625,Mul(2,popped11)),1)];
    PushStack MakeHiLo(b12,b13);
    TraceOperation 079570 (Print_num (Var Sp));
    PopStack popped14;
    GamePrint ShowNumber(popped14);
    TraceOperation 079573 (Print " size ");
    GamePrint " size ";
    TraceOperation 079578 (Print_num (Var (Global 187)));
    Let b15 = M[007580];
    Let b16 = M[007581];
    GamePrint ShowNumber(MakeHiLo(b15,b16));
    TraceOperation 079581 (Print "\n");
    GamePrint "\n";
    TraceOperation 079584 (Store (Con 2) (Con 0));
    SetLocal 2 0;
    Jump: 079587
  }
LocOp 079587:
  TraceOperation 079587 (Jl (Var (Local 2)) (Var (Global 187)) (Branch F (Dloc 079616)));
  Let b1 = M[007580];
  Let b2 = M[007581];
  if (LessThan(GetLocal(2),MakeHiLo(b1,b2))) {
    TraceOperation 079591 (Add (Var (Local 1)) (Con 2) Sp);
    PushStack Add(GetLocal(1),2);
    TraceOperation 079595 (Add (Var Sp) (Var (Local 2)) Sp);
    PopStack popped3;
    PushStack Add(popped3,GetLocal(2));
    TraceOperation 079599 (Loadw (Con 16625) (Var Sp) Sp);
    PopStack popped4;
    Let b5 = M[Offset(016625,Mul(2,popped4))];
    Let b6 = M[Offset(Offset(016625,Mul(2,popped4)),1)];
    PushStack MakeHiLo(b5,b6);
    TraceOperation 079605 (Print_num (Var Sp));
    PopStack popped7;
    GamePrint ShowNumber(popped7);
    TraceOperation 079608 (Print " ");
    GamePrint " ";
    TraceOperation 079611 (Inc (Con 2));
    SetLocal 2 Add(GetLocal(2),1);
    TraceOperation 079613 (Jump 079587);
    Jump: 079587
  } else {
    Jump: 079616
  }
LocOp 079616:
  TraceOperation 079616 (Print "\n");
  GamePrint "\n";
  TraceOperation 079619 (Jump 079509);
  Jump: 079509
LocOp 079622:
  TraceOperation 079622 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 079624:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 079625
LocOp 079625:
  TraceOperation 079625 (Call (Floc 079416) [Var (Local 1)] (Local 3));
  PushFrame;
  PushReturnAddress 079625;
  SetLocal 1 GetLocal(1);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 079417
LocReturn 079625:
  SetLocal 3 call_result;
  TraceOperation 079631 (Jz (Var (Local 3)) (Branch F (Dloc 079664)));
  if (IsZero(GetLocal(3))) {
    TraceOperation 079634 (Print "Variable unavailable: ");
    GamePrint "Variable unavailable: ";
    TraceOperation 079651 (Print_num (Var (Local 1)));
    GamePrint ShowNumber(GetLocal(1));
    TraceOperation 079654 (Print "/");
    GamePrint "/";
    TraceOperation 079657 (Print_num (Var (Local 2)));
    GamePrint ShowNumber(GetLocal(2));
    TraceOperation 079660 (Print "\n");
    GamePrint "\n";
    TraceOperation 079663 Rfalse;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 0;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 079664
  }
LocOp 079664:
  TraceOperation 079664 (Jl (Var (Local 2)) (Con 0) (Branch T (Dloc 079672)));
  if (LessThan(GetLocal(2),0)) {
    Jump: 079672
  } else {
    TraceOperation 079668 (Jl (Var (Local 2)) (Var (Global 187)) (Branch T (Dloc 079716)));
    Let b1 = M[007580];
    Let b2 = M[007581];
    if (LessThan(GetLocal(2),MakeHiLo(b1,b2))) {
      Jump: 079716
    } else {
      Jump: 079672
    }
  }
LocOp 079672:
  TraceOperation 079672 (Print "Variable stack offset wrong: ");
  GamePrint "Variable stack offset wrong: ";
  TraceOperation 079695 (Print_num (Var (Local 1)));
  GamePrint ShowNumber(GetLocal(1));
  TraceOperation 079698 (Print "/");
  GamePrint "/";
  TraceOperation 079701 (Print_num (Var (Local 2)));
  GamePrint ShowNumber(GetLocal(2));
  TraceOperation 079704 (Print " at ");
  GamePrint " at ";
  TraceOperation 079709 (Print_num (Var (Local 3)));
  GamePrint ShowNumber(GetLocal(3));
  TraceOperation 079712 (Print "\n");
  GamePrint "\n";
  TraceOperation 079715 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
LocOp 079716:
  TraceOperation 079716 (Add (Var (Local 3)) (Var (Local 2)) Sp);
  PushStack Add(GetLocal(3),GetLocal(2));
  TraceOperation 079720 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 079724:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 079725
LocOp 079725:
  TraceOperation 079725 (Call (Floc 079416) [Var (Local 1)] (Local 3));
  PushFrame;
  PushReturnAddress 079725;
  SetLocal 1 GetLocal(1);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 079417
LocReturn 079725:
  SetLocal 3 call_result;
  TraceOperation 079731 (Jz (Var (Local 3)) (Branch F (Dloc 079735)));
  if (IsZero(GetLocal(3))) {
    TraceOperation 079734 Rfalse;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 0;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 079735
  }
LocOp 079735:
  TraceOperation 079735 (Jl (Var (Local 2)) (Con 0) (Branch T (Dloc 079743)));
  if (LessThan(GetLocal(2),0)) {
    Jump: 079743
  } else {
    TraceOperation 079739 (Jl (Var (Local 2)) (Var (Global 187)) (Branch T (Dloc 079787)));
    Let b1 = M[007580];
    Let b2 = M[007581];
    if (LessThan(GetLocal(2),MakeHiLo(b1,b2))) {
      Jump: 079787
    } else {
      Jump: 079743
    }
  }
LocOp 079743:
  TraceOperation 079743 (Print "Variable stack offset wrong: ");
  GamePrint "Variable stack offset wrong: ";
  TraceOperation 079766 (Print_num (Var (Local 1)));
  GamePrint ShowNumber(GetLocal(1));
  TraceOperation 079769 (Print "/");
  GamePrint "/";
  TraceOperation 079772 (Print_num (Var (Local 2)));
  GamePrint ShowNumber(GetLocal(2));
  TraceOperation 079775 (Print " at ");
  GamePrint " at ";
  TraceOperation 079780 (Print_num (Var (Local 3)));
  GamePrint ShowNumber(GetLocal(3));
  TraceOperation 079783 (Print "\n");
  GamePrint "\n";
  TraceOperation 079786 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
LocOp 079787:
  TraceOperation 079787 (Add (Var (Local 3)) (Var (Local 2)) Sp);
  PushStack Add(GetLocal(3),GetLocal(2));
  TraceOperation 079791 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 079792:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 079793
LocOp 079793:
  TraceOperation 079793 (Je [Var (Local 2),Con 1] (Branch F (Dloc 079808)));
  if (Equal(GetLocal(2),1)) {
    TraceOperation 079797 (Storew (Con 16625) (Var (Local 1)) (Con 41));
    SetByte Offset(016625,Mul(2,GetLocal(1))) 0;
    SetByte Offset(Offset(016625,Mul(2,GetLocal(1))),1) 41;
    TraceOperation 079803 (Inc (Con 1));
    SetLocal 1 Add(GetLocal(1),1);
    TraceOperation 079805 (Jump 079810);
    Jump: 079810
  } else {
    Jump: 079808
  }
LocOp 079808:
  TraceOperation 079808 (Inc (Con 1));
  SetLocal 1 Add(GetLocal(1),1);
  Jump: 079810
LocOp 079810:
  TraceOperation 079810 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 079812:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 079813
LocOp 079813:
  TraceOperation 079813 (Je [Var (Local 2),Con 1] (Branch F (Dloc 079868)));
  if (Equal(GetLocal(2),1)) {
    TraceOperation 079817 (Storew (Con 16625) (Var (Local 1)) (Con 0));
    SetByte Offset(016625,Mul(2,GetLocal(1))) 0;
    SetByte Offset(Offset(016625,Mul(2,GetLocal(1))),1) 0;
    TraceOperation 079823 (Inc (Con 1));
    SetLocal 1 Add(GetLocal(1),1);
    TraceOperation 079825 (Storew (Con 16625) (Var (Local 1)) (Con 0));
    SetByte Offset(016625,Mul(2,GetLocal(1))) 0;
    SetByte Offset(Offset(016625,Mul(2,GetLocal(1))),1) 0;
    TraceOperation 079831 (Inc (Con 1));
    SetLocal 1 Add(GetLocal(1),1);
    TraceOperation 079833 (Storew (Con 16625) (Var (Local 1)) (Con 0));
    SetByte Offset(016625,Mul(2,GetLocal(1))) 0;
    SetByte Offset(Offset(016625,Mul(2,GetLocal(1))),1) 0;
    TraceOperation 079839 (Inc (Con 1));
    SetLocal 1 Add(GetLocal(1),1);
    TraceOperation 079841 (Storew (Con 16625) (Var (Local 1)) (Con 0));
    SetByte Offset(016625,Mul(2,GetLocal(1))) 0;
    SetByte Offset(Offset(016625,Mul(2,GetLocal(1))),1) 0;
    TraceOperation 079847 (Inc (Con 1));
    SetLocal 1 Add(GetLocal(1),1);
    TraceOperation 079849 (Storew (Con 16625) (Var (Local 1)) (Con 0));
    SetByte Offset(016625,Mul(2,GetLocal(1))) 0;
    SetByte Offset(Offset(016625,Mul(2,GetLocal(1))),1) 0;
    TraceOperation 079855 (Inc (Con 1));
    SetLocal 1 Add(GetLocal(1),1);
    TraceOperation 079857 (Storew (Con 16625) (Var (Local 1)) (Con 0));
    SetByte Offset(016625,Mul(2,GetLocal(1))) 0;
    SetByte Offset(Offset(016625,Mul(2,GetLocal(1))),1) 0;
    TraceOperation 079863 (Inc (Con 1));
    SetLocal 1 Add(GetLocal(1),1);
    TraceOperation 079865 (Jump 079880);
    Jump: 079880
  } else {
    Jump: 079868
  }
LocOp 079868:
  TraceOperation 079868 (Inc (Con 1));
  SetLocal 1 Add(GetLocal(1),1);
  TraceOperation 079870 (Inc (Con 1));
  SetLocal 1 Add(GetLocal(1),1);
  TraceOperation 079872 (Inc (Con 1));
  SetLocal 1 Add(GetLocal(1),1);
  TraceOperation 079874 (Inc (Con 1));
  SetLocal 1 Add(GetLocal(1),1);
  TraceOperation 079876 (Inc (Con 1));
  SetLocal 1 Add(GetLocal(1),1);
  TraceOperation 079878 (Inc (Con 1));
  SetLocal 1 Add(GetLocal(1),1);
  Jump: 079880
LocOp 079880:
  TraceOperation 079880 (Ret (Con 6));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 6;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 079884:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 079885
LocOp 079885:
  TraceOperation 079885 (Loadw (Con 16945) (Var (Local 1)) (Local 2));
  Let b1 = M[Offset(016945,Mul(2,GetLocal(1)))];
  Let b2 = M[Offset(Offset(016945,Mul(2,GetLocal(1))),1)];
  SetLocal 2 MakeHiLo(b1,b2);
  TraceOperation 079891 (Jz (Var (Local 2)) (Branch F (Dloc 079895)));
  if (IsZero(GetLocal(2))) {
    TraceOperation 079894 Rtrue;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 079895
  }
LocOp 079895:
  TraceOperation 079895 (CallN (Floc 079320) [Var (Local 2),Var (Local 1)]);
  PushFrame;
  PushReturnAddress 079895;
  SetLocal 1 GetLocal(2);
  SetLocal 2 GetLocal(1);
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 079321
LocReturn 079895:
  TraceOperation 079901 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 079904:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 079905
LocOp 079905:
  TraceOperation 079905 (Loadw (Con 16945) (Var (Local 1)) (Local 2));
  Let b1 = M[Offset(016945,Mul(2,GetLocal(1)))];
  Let b2 = M[Offset(Offset(016945,Mul(2,GetLocal(1))),1)];
  SetLocal 2 MakeHiLo(b1,b2);
  TraceOperation 079911 (Jz (Var (Local 2)) (Branch F (Dloc 079915)));
  if (IsZero(GetLocal(2))) {
    TraceOperation 079914 Rtrue;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 079915
  }
LocOp 079915:
  TraceOperation 079915 (CallN (Floc 079388) [Var (Local 2),Var (Local 1)]);
  PushFrame;
  PushReturnAddress 079915;
  SetLocal 1 GetLocal(2);
  SetLocal 2 GetLocal(1);
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 079389
LocReturn 079915:
  TraceOperation 079921 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 079924:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 079925
LocOp 079925:
  TraceOperation 079925 (Loadw (Con 17697) (Var (Local 1)) (Local 2));
  Let b1 = M[Offset(017697,Mul(2,GetLocal(1)))];
  Let b2 = M[Offset(Offset(017697,Mul(2,GetLocal(1))),1)];
  SetLocal 2 MakeHiLo(b1,b2);
  TraceOperation 079931 (Jz (Var (Local 2)) (Branch F (Dloc 079935)));
  if (IsZero(GetLocal(2))) {
    TraceOperation 079934 Rtrue;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 079935
  }
LocOp 079935:
  TraceOperation 079935 (Add (Var (Local 1)) (Con 10000) Sp);
  PushStack Add(GetLocal(1),10000);
  TraceOperation 079941 (CallN (Floc 079320) [Var (Local 2),Var Sp]);
  PopStack popped1;
  PushFrame;
  PushReturnAddress 079941;
  SetLocal 1 GetLocal(2);
  SetLocal 2 popped1;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 079321
LocReturn 079941:
  TraceOperation 079947 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 079948:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 079949
LocOp 079949:
  TraceOperation 079949 (Loadw (Con 17697) (Var (Local 1)) (Local 2));
  Let b1 = M[Offset(017697,Mul(2,GetLocal(1)))];
  Let b2 = M[Offset(Offset(017697,Mul(2,GetLocal(1))),1)];
  SetLocal 2 MakeHiLo(b1,b2);
  TraceOperation 079955 (Jz (Var (Local 2)) (Branch F (Dloc 079959)));
  if (IsZero(GetLocal(2))) {
    TraceOperation 079958 Rtrue;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 079959
  }
LocOp 079959:
  TraceOperation 079959 (Add (Var (Local 1)) (Con 10000) Sp);
  PushStack Add(GetLocal(1),10000);
  TraceOperation 079965 (CallN (Floc 079388) [Var (Local 2),Var Sp]);
  PopStack popped1;
  PushFrame;
  PushReturnAddress 079965;
  SetLocal 1 GetLocal(2);
  SetLocal 2 popped1;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 079389
LocReturn 079965:
  TraceOperation 079971 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 079972:
  MakeRoutineFrame 0;
  Jump: 079973
LocOp 079973:
  TraceOperation 079973 (Je [Var (Global 23),Con 1] (Branch F (Dloc 079985)));
  Let b1 = M[007252];
  Let b2 = M[007253];
  if (Equal(MakeHiLo(b1,b2),1)) {
    TraceOperation 079977 (CallN (Floc 036596) [Con 4097,Con 11]);
    PushFrame;
    PushReturnAddress 079977;
    SetLocal 1 4097;
    SetLocal 2 11;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 036597
  } else {
    Jump: 079985
  }
LocReturn 079977:
  TraceOperation 079984 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 079985:
  TraceOperation 079985 (Jz (Var (Global 20)) (Branch F (Dloc 079996)));
  Let b1 = M[007246];
  Let b2 = M[007247];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 079988 (CallN (Floc 036596) [Con 4097,Con 6]);
    PushFrame;
    PushReturnAddress 079988;
    SetLocal 1 4097;
    SetLocal 2 6;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 036597
  } else {
    Jump: 079996
  }
LocReturn 079988:
  TraceOperation 079995 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 079996:
  TraceOperation 079996 (Je [Var (Global 20),Con 1] (Branch F (Dloc 080008)));
  Let b1 = M[007246];
  Let b2 = M[007247];
  if (Equal(MakeHiLo(b1,b2),1)) {
    TraceOperation 080000 (CallN (Floc 036596) [Con 4097,Con 7]);
    PushFrame;
    PushReturnAddress 080000;
    SetLocal 1 4097;
    SetLocal 2 7;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 036597
  } else {
    Jump: 080008
  }
LocReturn 080000:
  TraceOperation 080007 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 080008:
  TraceOperation 080008 (Call (Floc 025656) [] Sp);
  PushFrame;
  PushReturnAddress 080008;
  MakeRoutineFrame 1;
  SetLocal 1 0;
  Jump: 025657
LocReturn 080008:
  PushStack call_result;
  TraceOperation 080012 (Jz (Var Sp) (Branch F (Dloc 080022)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 080015 (CallN (Floc 036596) [Con 4097,Con 7]);
    PushFrame;
    PushReturnAddress 080015;
    SetLocal 1 4097;
    SetLocal 2 7;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 036597
  } else {
    Jump: 080022
  }
LocReturn 080015:
  Jump: 080022
LocOp 080022:
  TraceOperation 080022 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 080024:
  MakeRoutineFrame 0;
  Jump: 080025
LocOp 080025:
  TraceOperation 080025 (Je [Var (Global 37),Var (Global 31)] (Branch F Dfalse));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 080029 (CallN (Floc 041040) [Con 51]);
    PushFrame;
    PushReturnAddress 080029;
    SetLocal 1 51;
    MakeRoutineFrame 4;
    SetLocal 4 0;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 041041
  } else {
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult 0;
    JumpIndirect: (return) return_address_5
  }
LocReturn 080029:
  TraceOperation 080034 (CallN (Floc 102280) []);
  PushFrame;
  PushReturnAddress 080034;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  SetLocal 2 0;
  SetLocal 1 0;
  Jump: 102281
LocReturn 080034:
  TraceOperation 080037 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 080040:
  MakeRoutineFrame 0;
  Jump: 080041
LocOp 080041:
  TraceOperation 080041 (Je [Var (Global 37),Var (Global 31)] (Branch F Dfalse));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 080045 (Store (Con 44) (Con 1));
    SetByte 007262 0;
    SetByte 007263 1;
    TraceOperation 080048 (CallN (Floc 041040) [Con 41]);
    PushFrame;
    PushReturnAddress 080048;
    SetLocal 1 41;
    MakeRoutineFrame 4;
    SetLocal 4 0;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 041041
  } else {
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult 0;
    JumpIndirect: (return) return_address_5
  }
LocReturn 080048:
  TraceOperation 080053 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 080056:
  MakeRoutineFrame 0;
  Jump: 080057
LocOp 080057:
  TraceOperation 080057 (Je [Var (Global 37),Var (Global 31)] (Branch F Dfalse));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 080061 (Store (Con 44) (Con 0));
    SetByte 007262 0;
    SetByte 007263 0;
    TraceOperation 080064 (CallN (Floc 041040) [Con 40]);
    PushFrame;
    PushReturnAddress 080064;
    SetLocal 1 40;
    MakeRoutineFrame 4;
    SetLocal 4 0;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 041041
  } else {
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult 0;
    JumpIndirect: (return) return_address_5
  }
LocReturn 080064:
  TraceOperation 080069 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 080072:
  MakeRoutineFrame 0;
  Jump: 080073
LocOp 080073:
  TraceOperation 080073 (Je [Var (Global 37),Var (Global 31)] (Branch F Dfalse));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 080077 (Store (Con 108) (Con 1));
    SetByte 007390 0;
    SetByte 007391 1;
    TraceOperation 080080 (Print_paddr (Con -31632));
    Note "<static Gettext address>";
    GamePrint "Judo Night";
    TraceOperation 080083 (CallN (Floc 041040) [Con 32]);
    PushFrame;
    PushReturnAddress 080083;
    SetLocal 1 32;
    MakeRoutineFrame 4;
    SetLocal 4 0;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 041041
  } else {
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult 0;
    JumpIndirect: (return) return_address_5
  }
LocReturn 080083:
  TraceOperation 080088 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 080092:
  MakeRoutineFrame 0;
  Jump: 080093
LocOp 080093:
  TraceOperation 080093 (Je [Var (Global 37),Var (Global 31)] (Branch F Dfalse));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 080097 (Store (Con 108) (Con 2));
    SetByte 007390 0;
    SetByte 007391 2;
    TraceOperation 080100 (Print_paddr (Con -31632));
    Note "<static Gettext address>";
    GamePrint "Judo Night";
    TraceOperation 080103 (CallN (Floc 041040) [Con 33]);
    PushFrame;
    PushReturnAddress 080103;
    SetLocal 1 33;
    MakeRoutineFrame 4;
    SetLocal 4 0;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 041041
  } else {
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult 0;
    JumpIndirect: (return) return_address_5
  }
LocReturn 080103:
  TraceOperation 080108 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 080112:
  MakeRoutineFrame 0;
  Jump: 080113
LocOp 080113:
  TraceOperation 080113 (Je [Var (Global 37),Var (Global 31)] (Branch F Dfalse));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 080117 (Store (Con 108) (Con 3));
    SetByte 007390 0;
    SetByte 007391 3;
    TraceOperation 080120 (Print_paddr (Con -31632));
    Note "<static Gettext address>";
    GamePrint "Judo Night";
    TraceOperation 080123 (CallN (Floc 041040) [Con 34]);
    PushFrame;
    PushReturnAddress 080123;
    SetLocal 1 34;
    MakeRoutineFrame 4;
    SetLocal 4 0;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 041041
  } else {
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult 0;
    JumpIndirect: (return) return_address_5
  }
LocReturn 080123:
  TraceOperation 080128 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 080152:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 080153
LocOp 080153:
  TraceOperation 080153 (Je [Var (Global 31),Con 41] (Branch T (Dloc 080159)));
  Let b1 = M[007268];
  Let b2 = M[007269];
  if (Equal(MakeHiLo(b1,b2),41)) {
    Jump: 080159
  } else {
    TraceOperation 080157 (Inc (Con 3));
    SetLocal 3 Add(GetLocal(3),1);
    Jump: 080159
  }
LocOp 080159:
  TraceOperation 080159 (Jz (Var (Local 3)) (Branch F (Dloc 080170)));
  if (IsZero(GetLocal(3))) {
    TraceOperation 080162 (Call (Floc 041040) [Con 43,Con 4] Sp);
    PushFrame;
    PushReturnAddress 080162;
    SetLocal 1 43;
    SetLocal 2 4;
    MakeRoutineFrame 4;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 041041
  } else {
    Jump: 080170
  }
LocReturn 080162:
  PushStack call_result;
  TraceOperation 080169 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 080170:
  TraceOperation 080170 (Store (Con 1) (Con 1));
  SetLocal 1 1;
  TraceOperation 080173 (Store (Con 4) (Con 0));
  SetLocal 4 0;
  TraceOperation 080176 (Jump 080183);
  Jump: 080183
--------------------------------------------------
LocRoutine 080300:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 080301
LocOp 080301:
  TraceOperation 080301 (Store (Con 47) (Var (Local 3)));
  SetByte 007268 HiByte(GetLocal(3));
  SetByte 007269 LoByte(GetLocal(3));
  TraceOperation 080304 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 080308:
  MakeRoutineFrame 0;
  Jump: 080309
LocOp 080309:
  TraceOperation 080309 (Store (Con 20) (Con 0));
  SetByte 007214 0;
  SetByte 007215 0;
  TraceOperation 080312 (Store (Con 21) (Con 0));
  SetByte 007216 0;
  SetByte 007217 0;
  TraceOperation 080315 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 080316:
  MakeRoutineFrame 0;
  Jump: 080317
LocOp 080317:
  TraceOperation 080317 (Jz (Var (Global 4)) (Branch T (Dloc 080350)));
  Let b1 = M[007214];
  Let b2 = M[007215];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 080350
  } else {
    TraceOperation 080320 New_line;
    GamePrint "\n";
    TraceOperation 080321 (Store (Con 20) (Con 0));
    SetByte 007214 0;
    SetByte 007215 0;
    TraceOperation 080324 (Or (Var (Global 5)) (Con 1) (Global 5));
    Let b3 = M[007216];
    Let b4 = M[007217];
    SetByte 007216 HiByte(Or(MakeHiLo(b3,b4),1));
    SetByte 007217 LoByte(Or(MakeHiLo(b3,b4),1));
    TraceOperation 080328 (And (Var (Global 5)) (Con 2) Sp);
    Let b5 = M[007216];
    Let b6 = M[007217];
    PushStack And(MakeHiLo(b5,b6),2);
    TraceOperation 080332 (Jz (Var Sp) (Branch T (Dloc 080339)));
    PopStack popped7;
    if (IsZero(popped7)) {
      Jump: 080339
    } else {
      TraceOperation 080335 (Sub (Var (Global 5)) (Con 2) (Global 5));
      Let b8 = M[007216];
      Let b9 = M[007217];
      SetByte 007216 HiByte(Sub(MakeHiLo(b8,b9),2));
      SetByte 007217 LoByte(Sub(MakeHiLo(b8,b9),2));
      Jump: 080339
    }
  }
LocOp 080339:
  TraceOperation 080339 (And (Var (Global 5)) (Con 4) Sp);
  Let b1 = M[007216];
  Let b2 = M[007217];
  PushStack And(MakeHiLo(b1,b2),4);
  TraceOperation 080343 (Jz (Var Sp) (Branch T (Dloc 080350)));
  PopStack popped3;
  if (IsZero(popped3)) {
    Jump: 080350
  } else {
    TraceOperation 080346 (Sub (Var (Global 5)) (Con 4) (Global 5));
    Let b4 = M[007216];
    Let b5 = M[007217];
    SetByte 007216 HiByte(Sub(MakeHiLo(b4,b5),4));
    SetByte 007217 LoByte(Sub(MakeHiLo(b4,b5),4));
    Jump: 080350
  }
LocOp 080350:
  TraceOperation 080350 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 080352:
  MakeRoutineFrame 0;
  Jump: 080353
LocOp 080353:
  TraceOperation 080353 (And (Var (Global 5)) (Con 1) Sp);
  Let b1 = M[007216];
  Let b2 = M[007217];
  PushStack And(MakeHiLo(b1,b2),1);
  TraceOperation 080357 (Jz (Var Sp) (Branch F (Dloc 080361)));
  PopStack popped3;
  if (IsZero(popped3)) {
    TraceOperation 080360 New_line;
    GamePrint "\n";
    Jump: 080361
  } else {
    Jump: 080361
  }
LocOp 080361:
  TraceOperation 080361 (CallN (Floc 080308) []);
  PushFrame;
  PushReturnAddress 080361;
  MakeRoutineFrame 0;
  Jump: 080309
LocReturn 080361:
  TraceOperation 080364 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 080368:
  MakeRoutineFrame 0;
  Jump: 080369
LocOp 080369:
  TraceOperation 080369 New_line;
  GamePrint "\n";
  TraceOperation 080370 (CallN (Floc 080308) []);
  PushFrame;
  PushReturnAddress 080370;
  MakeRoutineFrame 0;
  Jump: 080309
LocReturn 080370:
  TraceOperation 080373 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 080376:
  MakeRoutineFrame 0;
  Jump: 080377
LocOp 080377:
  TraceOperation 080377 (Store (Con 20) (Con 0));
  SetByte 007214 0;
  SetByte 007215 0;
  TraceOperation 080380 (Or (Var (Global 5)) (Con 2) (Global 5));
  Let b1 = M[007216];
  Let b2 = M[007217];
  SetByte 007216 HiByte(Or(MakeHiLo(b1,b2),2));
  SetByte 007217 LoByte(Or(MakeHiLo(b1,b2),2));
  TraceOperation 080384 (Or (Var (Global 5)) (Con 4) (Global 5));
  Let b3 = M[007216];
  Let b4 = M[007217];
  SetByte 007216 HiByte(Or(MakeHiLo(b3,b4),4));
  SetByte 007217 LoByte(Or(MakeHiLo(b3,b4),4));
  TraceOperation 080388 Rtrue;
  PopFrame;
  PopReturnAddress return_address_5;
  SetResult 1;
  JumpIndirect: (return) return_address_5
--------------------------------------------------
LocRoutine 080392:
  MakeRoutineFrame 0;
  Jump: 080393
LocOp 080393:
  TraceOperation 080393 (Store (Con 20) (Con 0));
  SetByte 007214 0;
  SetByte 007215 0;
  TraceOperation 080396 (Or (Var (Global 5)) (Con 2) (Global 5));
  Let b1 = M[007216];
  Let b2 = M[007217];
  SetByte 007216 HiByte(Or(MakeHiLo(b1,b2),2));
  SetByte 007217 LoByte(Or(MakeHiLo(b1,b2),2));
  TraceOperation 080400 Rtrue;
  PopFrame;
  PopReturnAddress return_address_3;
  SetResult 1;
  JumpIndirect: (return) return_address_3
--------------------------------------------------
LocRoutine 080404:
  MakeRoutineFrame 0;
  Jump: 080405
LocOp 080405:
  TraceOperation 080405 (Jz (Var (Global 4)) (Branch F (Dloc 080422)));
  Let b1 = M[007214];
  Let b2 = M[007215];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 080408 (And (Var (Global 5)) (Con 2) Sp);
    Let b3 = M[007216];
    Let b4 = M[007217];
    PushStack And(MakeHiLo(b3,b4),2);
    TraceOperation 080412 (Jz (Var Sp) (Branch T (Dloc 080423)));
    PopStack popped5;
    if (IsZero(popped5)) {
      Jump: 080423
    } else {
      TraceOperation 080415 (And (Var (Global 5)) (Con 4) Sp);
      Let b6 = M[007216];
      Let b7 = M[007217];
      PushStack And(MakeHiLo(b6,b7),4);
      TraceOperation 080419 (Jz (Var Sp) (Branch F (Dloc 080423)));
      PopStack popped8;
      if (IsZero(popped8)) {
        Jump: 080422
      } else {
        Jump: 080423
      }
    }
  } else {
    Jump: 080422
  }
LocOp 080422:
  TraceOperation 080422 New_line;
  GamePrint "\n";
  Jump: 080423
LocOp 080423:
  TraceOperation 080423 (CallN (Floc 080308) []);
  PushFrame;
  PushReturnAddress 080423;
  MakeRoutineFrame 0;
  Jump: 080309
LocReturn 080423:
  TraceOperation 080426 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 080428:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 080429
LocOp 080429:
  TraceOperation 080429 (Store (Con 20) (Con 1));
  SetByte 007214 0;
  SetByte 007215 1;
  TraceOperation 080432 (Or (Var (Global 5)) (Con 8) (Global 5));
  Let b1 = M[007216];
  Let b2 = M[007217];
  SetByte 007216 HiByte(Or(MakeHiLo(b1,b2),8));
  SetByte 007217 LoByte(Or(MakeHiLo(b1,b2),8));
  TraceOperation 080436 (CallN (Floc 080952) [Var (Local 1)]);
  PushFrame;
  PushReturnAddress 080436;
  SetLocal 1 GetLocal(1);
  MakeRoutineFrame 1;
  Jump: 080953
LocReturn 080436:
  TraceOperation 080441 (CallN (Floc 080316) []);
  PushFrame;
  PushReturnAddress 080441;
  MakeRoutineFrame 0;
  Jump: 080317
LocReturn 080441:
  TraceOperation 080444 (Store (Con 21) (Con 0));
  SetByte 007216 0;
  SetByte 007217 0;
  TraceOperation 080447 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 080448:
  MakeRoutineFrame 0;
  Jump: 080449
LocOp 080449:
  TraceOperation 080449 (Je [Var (Global 6),Con 1] (Branch T (Dloc 080456)));
  Let b1 = M[007218];
  Let b2 = M[007219];
  if (Equal(MakeHiLo(b1,b2),1)) {
    Jump: 080456
  } else {
    TraceOperation 080453 (Print "s");
    GamePrint "s";
    Jump: 080456
  }
LocOp 080456:
  TraceOperation 080456 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 080460:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 080461
LocOp 080461:
  TraceOperation 080461 (Set_text_style (Con 0));
  Note "(\"TextStyle\",(Reverse,False))";
  Note "(\"TextStyle\",(Bold,False))";
  Note "(\"TextStyle\",(Italic,False))";
  Note "(\"TextStyle\",(Fixed,False))";
  TraceOperation 080464 (CallN (Floc 080404) []);
  PushFrame;
  PushReturnAddress 080464;
  MakeRoutineFrame 0;
  Jump: 080405
LocReturn 080464:
  TraceOperation 080467 (Loadw (Con 11427) (Con 21) Sp);
  Let b1 = M[011469];
  Let b2 = M[011470];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 080473 (CallN (Floc 080952) [Var Sp]);
  PopStack popped3;
  PushFrame;
  PushReturnAddress 080473;
  SetLocal 1 popped3;
  MakeRoutineFrame 1;
  Jump: 080953
LocReturn 080473:
  TraceOperation 080478 (CallN (Floc 080496) []);
  PushFrame;
  PushReturnAddress 080478;
  MakeRoutineFrame 1;
  SetLocal 1 0;
  Jump: 080497
LocReturn 080478:
  TraceOperation 080481 (CallN (Floc 080308) []);
  PushFrame;
  PushReturnAddress 080481;
  MakeRoutineFrame 0;
  Jump: 080309
LocReturn 080481:
  TraceOperation 080484 (Store (Con 32) (Con 1));
  SetByte 007238 0;
  SetByte 007239 1;
  TraceOperation 080487 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 080488:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 080489
LocOp 080489:
  TraceOperation 080489 (Store (Con 204) (Var (Local 1)));
  SetByte 007582 HiByte(GetLocal(1));
  SetByte 007583 LoByte(GetLocal(1));
  TraceOperation 080492 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 080496:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 080497
LocOp 080497:
  TraceOperation 080497 (Jz (Var (Global 188)) (Branch T (Dloc 080548)));
  Let b1 = M[007582];
  Let b2 = M[007583];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 080548
  } else {
    TraceOperation 080500 (Store (Con 1) (Con 0));
    SetLocal 1 0;
    Jump: 080503
  }
LocOp 080503:
  TraceOperation 080503 (Loadw (Con 19866) (Var (Local 1)) Sp);
  Let b1 = M[Offset(019866,Mul(2,GetLocal(1)))];
  Let b2 = M[Offset(Offset(019866,Mul(2,GetLocal(1))),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 080509 (Jz (Var Sp) (Branch T (Dloc 080531)));
  PopStack popped3;
  if (IsZero(popped3)) {
    Jump: 080531
  } else {
    TraceOperation 080512 (Loadw (Con 19866) (Var (Local 1)) Sp);
    Let b4 = M[Offset(019866,Mul(2,GetLocal(1)))];
    Let b5 = M[Offset(Offset(019866,Mul(2,GetLocal(1))),1)];
    PushStack MakeHiLo(b4,b5);
    TraceOperation 080518 (Je [Var Sp,Var (Global 188)] (Branch F (Dloc 080526)));
    PopStack popped6;
    Let b7 = M[007582];
    Let b8 = M[007583];
    if (Equal(popped6,MakeHiLo(b7,b8))) {
      TraceOperation 080522 (Store (Con 204) (Con 0));
      SetByte 007582 0;
      SetByte 007583 0;
      TraceOperation 080525 Rtrue;
      PopFrame;
      PopReturnAddress return_address_9;
      SetResult 1;
      JumpIndirect: (return) return_address_9
    } else {
      Jump: 080526
    }
  }
LocOp 080526:
  TraceOperation 080526 (Inc (Con 1));
  SetLocal 1 Add(GetLocal(1),1);
  TraceOperation 080528 (Jump 080503);
  Jump: 080503
LocOp 080531:
  TraceOperation 080531 (Storew (Con 19866) (Var (Local 1)) (Var (Global 188)));
  Let b1 = M[007582];
  Let b2 = M[007583];
  SetByte Offset(019866,Mul(2,GetLocal(1))) b1;
  SetByte Offset(Offset(019866,Mul(2,GetLocal(1))),1) b2;
  TraceOperation 080537 (CallN (Floc 080308) []);
  PushFrame;
  PushReturnAddress 080537;
  MakeRoutineFrame 0;
  Jump: 080309
LocReturn 080537:
  TraceOperation 080540 (CallN (Fvar (Global 188)) []);
  Let b1 = M[007582];
  Let b2 = M[007583];
  if (IsZeroAddress(PackedAddress Z5(MakeHiLo(b1,b2)))) {
    Jump: 080542
  } else {
    PushFrame;
    PushReturnAddress 080540;
    SetNumberActuals 0;
    JumpIndirect: (routine) PackedAddress Z5(MakeHiLo(b1,b2))
  }
LocReturn 080540:
  Jump: 080542
LocOp 080542:
  TraceOperation 080542 (CallN (Floc 080308) []);
  PushFrame;
  PushReturnAddress 080542;
  MakeRoutineFrame 0;
  Jump: 080309
LocReturn 080542:
  TraceOperation 080545 (Store (Con 204) (Con 0));
  SetByte 007582 0;
  SetByte 007583 0;
  Jump: 080548
LocOp 080548:
  TraceOperation 080548 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 080552:
  MakeRoutineFrame 0;
  Jump: 080553
LocOp 080553:
  TraceOperation 080553 (Je [Var (Global 28),Con 1] (Branch F (Dloc 080594)));
  Let b1 = M[007262];
  Let b2 = M[007263];
  if (Equal(MakeHiLo(b1,b2),1)) {
    TraceOperation 080557 (CallN (Floc 080316) []);
    PushFrame;
    PushReturnAddress 080557;
    MakeRoutineFrame 0;
    Jump: 080317
  } else {
    Jump: 080594
  }
LocReturn 080557:
  TraceOperation 080560 (CallN (Floc 025176) [Con 6]);
  PushFrame;
  PushReturnAddress 080560;
  SetLocal 1 6;
  MakeRoutineFrame 1;
  Jump: 025177
LocReturn 080560:
  TraceOperation 080565 (Print "[");
  GamePrint "[";
  TraceOperation 080570 (Sub (Var (Global 26)) (Var (Global 27)) Sp);
  Let b1 = M[007258];
  Let b2 = M[007259];
  Let b3 = M[007260];
  Let b4 = M[007261];
  PushStack Sub(MakeHiLo(b1,b2),MakeHiLo(b3,b4));
  TraceOperation 080574 (CallN (Floc 036596) [Con 4097,Con 50,Var Sp]);
  PopStack popped5;
  PushFrame;
  PushReturnAddress 080574;
  SetLocal 1 4097;
  SetLocal 2 50;
  SetLocal 3 popped5;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 036597
LocReturn 080574:
  TraceOperation 080582 (Print ".]\n");
  GamePrint ".]\n";
  TraceOperation 080589 (CallN (Floc 025176) [Con 0]);
  PushFrame;
  PushReturnAddress 080589;
  SetLocal 1 0;
  MakeRoutineFrame 1;
  Jump: 025177
LocReturn 080589:
  Jump: 080594
LocOp 080594:
  TraceOperation 080594 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 080596:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 080597
LocOp 080597:
  TraceOperation 080597 (Push (Var (Global 4)));
  Let b1 = M[007214];
  Let b2 = M[007215];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 080600 (Push (Var (Global 5)));
  Let b3 = M[007216];
  Let b4 = M[007217];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 080603 (CallN (Floc 078848) [Con 13]);
  PushFrame;
  PushReturnAddress 080603;
  SetLocal 1 13;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 078849
LocReturn 080603:
  TraceOperation 080608 (CallN (Floc 025644) [Con 1]);
  PushFrame;
  PushReturnAddress 080608;
  SetLocal 1 1;
  MakeRoutineFrame 1;
  Jump: 025645
LocReturn 080608:
  TraceOperation 080613 (CallN (Floc 025604) [Con 1,Con 1]);
  PushFrame;
  PushReturnAddress 080613;
  SetLocal 1 1;
  SetLocal 2 1;
  MakeRoutineFrame 2;
  Jump: 025605
LocReturn 080613:
  TraceOperation 080619 (Call (Floc 025480) [] (Local 1));
  PushFrame;
  PushReturnAddress 080619;
  MakeRoutineFrame 0;
  Jump: 025481
LocReturn 080619:
  SetLocal 1 call_result;
  TraceOperation 080623 (Sub (Var (Local 1)) (Con 15) (Local 2));
  SetLocal 2 Sub(GetLocal(1),15);
  TraceOperation 080627 (Store (Con 255) (Var (Local 1)));
  SetByte 007684 HiByte(GetLocal(1));
  SetByte 007685 LoByte(GetLocal(1));
  TraceOperation 080630 (Jl (Var (Global 239)) (Con 1) (Branch T (Dloc 080643)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (LessThan(MakeHiLo(b1,b2),1)) {
    Jump: 080643
  } else {
    Jump: 080634
  }
LocOp 080634:
  TraceOperation 080634 (Print_char (Con 32));
  GamePrint " ";
  TraceOperation 080637 (Dec (Con 255));
  Let b1 = M[007684];
  Let b2 = M[007685];
  SetByte 007684 HiByte(Sub(MakeHiLo(b1,b2),1));
  SetByte 007685 LoByte(Sub(MakeHiLo(b1,b2),1));
  TraceOperation 080639 (Jz (Var (Global 239)) (Branch F (Dloc 080634)));
  Let b3 = M[007684];
  Let b4 = M[007685];
  if (IsZero(MakeHiLo(b3,b4))) {
    Jump: 080643
  } else {
    Jump: 080634
  }
LocOp 080643:
  TraceOperation 080643 (CallN (Floc 080308) []);
  PushFrame;
  PushReturnAddress 080643;
  MakeRoutineFrame 0;
  Jump: 080309
LocReturn 080643:
  TraceOperation 080646 (Call (Floc 078928) [Con 13] Sp);
  PushFrame;
  PushReturnAddress 080646;
  SetLocal 1 13;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 078929
LocReturn 080646:
  PushStack call_result;
  TraceOperation 080652 (Jz (Var Sp) (Branch F (Dloc 080716)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 080656 (CallN (Floc 025604) [Con 1,Con 2]);
    PushFrame;
    PushReturnAddress 080656;
    SetLocal 1 1;
    SetLocal 2 2;
    MakeRoutineFrame 2;
    Jump: 025605
  } else {
    Jump: 080716
  }
LocReturn 080656:
  TraceOperation 080662 (Call (Floc 112940) [Var (Global 29)] Sp);
  Let b1 = M[007264];
  Let b2 = M[007265];
  PushFrame;
  PushReturnAddress 080662;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 1;
  Jump: 112941
LocReturn 080662:
  PushStack call_result;
  TraceOperation 080668 (Pull (Con 255));
  PopStack popped1;
  SetByte 007684 HiByte(popped1);
  SetByte 007685 LoByte(popped1);
  TraceOperation 080671 (Je [Var (Global 239),Con 4] (Branch F (Dloc 080680)));
  Let b2 = M[007684];
  Let b3 = M[007685];
  if (Equal(MakeHiLo(b2,b3),4)) {
    TraceOperation 080675 (Print_paddr (Var (Global 29)));
    Let b4 = M[007264];
    Let b5 = M[007265];
    GamePrint GetText(PackedAddress Z5(MakeHiLo(b4,b5)));
    TraceOperation 080677 (Jump 080686);
    Jump: 080686
  } else {
    Jump: 080680
  }
LocOp 080680:
  TraceOperation 080680 (Je [Var (Global 239),Con 3] (Branch F (Dloc 080686)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),3)) {
    TraceOperation 080684 (CallN (Fvar (Global 29)) []);
    Let b3 = M[007264];
    Let b4 = M[007265];
    if (IsZeroAddress(PackedAddress Z5(MakeHiLo(b3,b4)))) {
      Jump: 080686
    } else {
      PushFrame;
      PushReturnAddress 080684;
      SetNumberActuals 0;
      JumpIndirect: (routine) PackedAddress Z5(MakeHiLo(b3,b4))
    }
  } else {
    Jump: 080686
  }
LocReturn 080684:
  Jump: 080686
LocOp 080686:
  TraceOperation 080686 (CallN (Floc 025604) [Con 1,Var (Local 2)]);
  PushFrame;
  PushReturnAddress 080686;
  SetLocal 1 1;
  SetLocal 2 GetLocal(2);
  MakeRoutineFrame 2;
  Jump: 025605
LocReturn 080686:
  TraceOperation 080692 (Call (Floc 112940) [Var (Global 30)] Sp);
  Let b1 = M[007266];
  Let b2 = M[007267];
  PushFrame;
  PushReturnAddress 080692;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 1;
  Jump: 112941
LocReturn 080692:
  PushStack call_result;
  TraceOperation 080698 (Pull (Con 255));
  PopStack popped1;
  SetByte 007684 HiByte(popped1);
  SetByte 007685 LoByte(popped1);
  TraceOperation 080701 (Je [Var (Global 239),Con 4] (Branch F (Dloc 080710)));
  Let b2 = M[007684];
  Let b3 = M[007685];
  if (Equal(MakeHiLo(b2,b3),4)) {
    TraceOperation 080705 (Print_paddr (Var (Global 30)));
    Let b4 = M[007266];
    Let b5 = M[007267];
    GamePrint GetText(PackedAddress Z5(MakeHiLo(b4,b5)));
    TraceOperation 080707 (Jump 080716);
    Jump: 080716
  } else {
    Jump: 080710
  }
LocOp 080710:
  TraceOperation 080710 (Je [Var (Global 239),Con 3] (Branch F (Dloc 080716)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),3)) {
    TraceOperation 080714 (CallN (Fvar (Global 30)) []);
    Let b3 = M[007266];
    Let b4 = M[007267];
    if (IsZeroAddress(PackedAddress Z5(MakeHiLo(b3,b4)))) {
      Jump: 080716
    } else {
      PushFrame;
      PushReturnAddress 080714;
      SetNumberActuals 0;
      JumpIndirect: (routine) PackedAddress Z5(MakeHiLo(b3,b4))
    }
  } else {
    Jump: 080716
  }
LocReturn 080714:
  Jump: 080716
LocOp 080716:
  TraceOperation 080716 (CallN (Floc 025604) [Con 1,Con 1]);
  PushFrame;
  PushReturnAddress 080716;
  SetLocal 1 1;
  SetLocal 2 1;
  MakeRoutineFrame 2;
  Jump: 025605
LocReturn 080716:
  TraceOperation 080722 (CallN (Floc 025576) []);
  PushFrame;
  PushReturnAddress 080722;
  MakeRoutineFrame 0;
  Jump: 025577
LocReturn 080722:
  TraceOperation 080725 (CallN (Floc 080308) []);
  PushFrame;
  PushReturnAddress 080725;
  MakeRoutineFrame 0;
  Jump: 080309
LocReturn 080725:
  TraceOperation 080728 (CallN (Floc 078972) [Con 13]);
  PushFrame;
  PushReturnAddress 080728;
  SetLocal 1 13;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 078973
LocReturn 080728:
  TraceOperation 080733 (Pull (Con 21));
  PopStack popped1;
  SetByte 007216 HiByte(popped1);
  SetByte 007217 LoByte(popped1);
  TraceOperation 080736 (Pull (Con 20));
  PopStack popped2;
  SetByte 007214 HiByte(popped2);
  SetByte 007215 LoByte(popped2);
  TraceOperation 080739 Rtrue;
  PopFrame;
  PopReturnAddress return_address_3;
  SetResult 1;
  JumpIndirect: (return) return_address_3
--------------------------------------------------
LocRoutine 080740:
  MakeRoutineFrame 0;
  Jump: 080741
LocOp 080741:
  TraceOperation 080741 (Jz (Var (Global 22)) (Branch T (Dloc 080745)));
  Let b1 = M[007250];
  Let b2 = M[007251];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 080745
  } else {
    TraceOperation 080744 Rtrue;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  }
LocOp 080745:
  TraceOperation 080745 (Print_num (Var (Global 2)));
  Let b1 = M[007210];
  Let b2 = M[007211];
  GamePrint ShowNumber(MakeHiLo(b1,b2));
  TraceOperation 080748 (Print "/");
  GamePrint "/";
  TraceOperation 080751 (Print_num (Var (Global 3)));
  Let b3 = M[007212];
  Let b4 = M[007213];
  GamePrint ShowNumber(MakeHiLo(b3,b4));
  TraceOperation 080754 Rtrue;
  PopFrame;
  PopReturnAddress return_address_5;
  SetResult 1;
  JumpIndirect: (return) return_address_5
--------------------------------------------------
LocRoutine 080756:
  MakeRoutineFrame 0;
  Jump: 080757
LocOp 080757:
  TraceOperation 080757 (Jz (Var (Global 22)) (Branch T (Dloc 080761)));
  Let b1 = M[007250];
  Let b2 = M[007251];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 080761
  } else {
    TraceOperation 080760 Rtrue;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  }
LocOp 080761:
  TraceOperation 080761 (Je [Var (Global 1),Con 8] (Branch F (Dloc 080794)));
  Let b1 = M[007208];
  Let b2 = M[007209];
  if (Equal(MakeHiLo(b1,b2),8)) {
    TraceOperation 080765 (CallN (Floc 078848) [Con 8]);
    PushFrame;
    PushReturnAddress 080765;
    SetLocal 1 8;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 078849
  } else {
    Jump: 080794
  }
LocReturn 080765:
  TraceOperation 080770 (Call (Floc 078928) [Con 8] Sp);
  PushFrame;
  PushReturnAddress 080770;
  SetLocal 1 8;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 078929
LocReturn 080770:
  PushStack call_result;
  TraceOperation 080776 (Jz (Var Sp) (Branch F (Dloc 080786)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 080779 (CallN (Floc 036596) [Con 4097,Con 71]);
    PushFrame;
    PushReturnAddress 080779;
    SetLocal 1 4097;
    SetLocal 2 71;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 036597
  } else {
    Jump: 080786
  }
LocReturn 080779:
  Jump: 080786
LocOp 080786:
  TraceOperation 080786 (CallN (Floc 078972) [Con 8]);
  PushFrame;
  PushReturnAddress 080786;
  SetLocal 1 8;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 078973
LocReturn 080786:
  TraceOperation 080791 (Jump 080814);
  Jump: 080814
LocOp 080794:
  TraceOperation 080794 (CallN (Floc 037196) []);
  PushFrame;
  PushReturnAddress 080794;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  SetLocal 1 0;
  Jump: 037197
LocReturn 080794:
  TraceOperation 080797 (Je [Var (Global 33),Var (Global 1)] (Branch F (Dloc 080809)));
  Let b1 = M[007272];
  Let b2 = M[007273];
  Let b3 = M[007208];
  Let b4 = M[007209];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 080801 (CallN (Floc 082048) [Var (Global 1)]);
    Let b5 = M[007208];
    Let b6 = M[007209];
    PushFrame;
    PushReturnAddress 080801;
    SetLocal 1 MakeHiLo(b5,b6);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 082049
  } else {
    Jump: 080809
  }
LocReturn 080801:
  TraceOperation 080806 (Jump 080814);
  Jump: 080814
LocOp 080809:
  TraceOperation 080809 (CallN (Floc 081964) [Var (Global 33)]);
  Let b1 = M[007272];
  Let b2 = M[007273];
  PushFrame;
  PushReturnAddress 080809;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 081965
LocReturn 080809:
  Jump: 080814
LocOp 080814:
  TraceOperation 080814 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 080816:
  MakeRoutineFrame 0;
  Jump: 080817
LocOp 080817:
  TraceOperation 080817 (CallN (Floc 078848) [Con 14]);
  PushFrame;
  PushReturnAddress 080817;
  SetLocal 1 14;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 078849
LocReturn 080817:
  TraceOperation 080822 (Call (Floc 078928) [Con 14] Sp);
  PushFrame;
  PushReturnAddress 080822;
  SetLocal 1 14;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 078929
LocReturn 080822:
  PushStack call_result;
  TraceOperation 080828 (Jz (Var Sp) (Branch F (Dloc 080929)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 080832 (CallN (Floc 025176) [Con 3]);
    PushFrame;
    PushReturnAddress 080832;
    SetLocal 1 3;
    MakeRoutineFrame 1;
    Jump: 025177
  } else {
    Jump: 080929
  }
LocReturn 080832:
  TraceOperation 080837 (Print_paddr (Con -31632));
  Note "<static Gettext address>";
  GamePrint "Judo Night";
  TraceOperation 080840 (CallN (Floc 025176) [Con 0]);
  PushFrame;
  PushReturnAddress 080840;
  SetLocal 1 0;
  MakeRoutineFrame 1;
  Jump: 025177
LocReturn 080840:
  TraceOperation 080845 New_line;
  GamePrint "\n";
  TraceOperation 080846 (Print_paddr (Con 28413));
  Note "<static Gettext address>";
  GamePrint "An Interactive Fiction";
  TraceOperation 080849 (Print " by ");
  GamePrint " by ";
  TraceOperation 080854 (Print_paddr (Con -31596));
  Note "<static Gettext address>";
  GamePrint "Nick Chapman";
  TraceOperation 080857 New_line;
  GamePrint "\n";
  TraceOperation 080858 (CallN (Floc 024680) []);
  PushFrame;
  PushReturnAddress 080858;
  MakeRoutineFrame 1;
  SetLocal 1 0;
  Jump: 024681
LocReturn 080858:
  TraceOperation 080861 (Print " / Inform 7 build ");
  GamePrint " / Inform 7 build ";
  TraceOperation 080876 (Print_paddr (Con 28407));
  Note "<static Gettext address>";
  GamePrint "5T18";
  TraceOperation 080879 (Print " ");
  GamePrint " ";
  TraceOperation 080882 (Print "(I6/v");
  GamePrint "(I6/v";
  TraceOperation 080889 (Loadb (Con 0) (Con 60) (Global 239));
  SetByte 007684 0;
  SetByte 007685 54;
  TraceOperation 080893 (Print_char (Var (Global 239)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  GamePrint SingleChar(MakeHiLo(b1,b2));
  TraceOperation 080896 (Loadb (Con 0) (Con 61) (Global 239));
  SetByte 007684 0;
  SetByte 007685 46;
  TraceOperation 080900 (Print_char (Var (Global 239)));
  Let b3 = M[007684];
  Let b4 = M[007685];
  GamePrint SingleChar(MakeHiLo(b3,b4));
  TraceOperation 080903 (Loadb (Con 0) (Con 62) (Global 239));
  SetByte 007684 0;
  SetByte 007685 51;
  TraceOperation 080907 (Print_char (Var (Global 239)));
  Let b5 = M[007684];
  Let b6 = M[007685];
  GamePrint SingleChar(MakeHiLo(b5,b6));
  TraceOperation 080910 (Loadb (Con 0) (Con 63) (Global 239));
  SetByte 007684 0;
  SetByte 007685 49;
  TraceOperation 080914 (Print_char (Var (Global 239)));
  Let b7 = M[007684];
  Let b8 = M[007685];
  GamePrint SingleChar(MakeHiLo(b7,b8));
  TraceOperation 080917 (Print " lib ");
  GamePrint " lib ";
  TraceOperation 080922 (Print_paddr (Con 28411));
  Note "<static Gettext address>";
  GamePrint "6/12N";
  TraceOperation 080925 (Print ") ");
  GamePrint ") ";
  TraceOperation 080928 New_line;
  GamePrint "\n";
  Jump: 080929
LocOp 080929:
  TraceOperation 080929 (CallN (Floc 078972) [Con 14]);
  PushFrame;
  PushReturnAddress 080929;
  SetLocal 1 14;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 078973
LocReturn 080929:
  TraceOperation 080934 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 080936:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 080937
LocOp 080937:
  TraceOperation 080937 (Print_num (Var (Local 1)));
  GamePrint ShowNumber(GetLocal(1));
  TraceOperation 080940 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 080944:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 080945
LocOp 080945:
  TraceOperation 080945 (CallN (Floc 026364) [Var (Local 1)]);
  PushFrame;
  PushReturnAddress 080945;
  SetLocal 1 GetLocal(1);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 026365
LocReturn 080945:
  TraceOperation 080950 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 080952:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 080953
LocOp 080953:
  TraceOperation 080953 (Call (Floc 026172) [Var (Local 1),Con 4] Sp);
  PushFrame;
  PushReturnAddress 080953;
  SetLocal 1 GetLocal(1);
  SetLocal 2 4;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 080953:
  PushStack call_result;
  TraceOperation 080960 (Jz (Var Sp) (Branch T (Dloc 080965)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 080965
  } else {
    TraceOperation 080963 (Print_paddr (Var (Local 1)));
    GamePrint GetText(PackedAddress Z5(GetLocal(1)));
    Jump: 080965
  }
LocOp 080965:
  TraceOperation 080965 (Call (Floc 026172) [Var (Local 1),Con 3] Sp);
  PushFrame;
  PushReturnAddress 080965;
  SetLocal 1 GetLocal(1);
  SetLocal 2 3;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 080965:
  PushStack call_result;
  TraceOperation 080972 (Jz (Var Sp) (Branch T (Dloc 080977)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 080977
  } else {
    TraceOperation 080975 (CallN (Fvar (Local 1)) []);
    if (IsZeroAddress(PackedAddress Z5(GetLocal(1)))) {
      Jump: 080977
    } else {
      PushFrame;
      PushReturnAddress 080975;
      SetNumberActuals 0;
      JumpIndirect: (routine) PackedAddress Z5(GetLocal(1))
    }
  }
LocReturn 080975:
  Jump: 080977
LocOp 080977:
  TraceOperation 080977 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 080980:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 080981
LocOp 080981:
  TraceOperation 080981 (CallN (Floc 080952) [Var (Local 1)]);
  PushFrame;
  PushReturnAddress 080981;
  SetLocal 1 GetLocal(1);
  MakeRoutineFrame 1;
  Jump: 080953
LocReturn 080981:
  TraceOperation 080986 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 080988:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 080989
LocOp 080989:
  TraceOperation 080989 (Jz (Var (Local 2)) (Branch F (Dloc 081003)));
  if (IsZero(GetLocal(2))) {
    TraceOperation 080992 (CallN (Floc 082048) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 080992;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 082049
  } else {
    Jump: 081003
  }
LocReturn 080992:
  TraceOperation 080997 (Store (Con 4) (Con 1));
  SetLocal 4 1;
  TraceOperation 081000 (Jump 081059);
  Jump: 081059
LocOp 081003:
  TraceOperation 081003 (Call (Floc 110116) [Var (Local 1),Var (Local 2)] Sp);
  PushFrame;
  PushReturnAddress 081003;
  SetLocal 1 GetLocal(1);
  SetLocal 2 GetLocal(2);
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 110117
LocReturn 081003:
  PushStack call_result;
  TraceOperation 081010 (Call (Floc 112940) [Var Sp] Sp);
  PopStack popped1;
  PushFrame;
  PushReturnAddress 081010;
  SetLocal 1 popped1;
  MakeRoutineFrame 1;
  Jump: 112941
LocReturn 081010:
  PushStack call_result;
  TraceOperation 081016 (Pull (Con 255));
  PopStack popped1;
  SetByte 007684 HiByte(popped1);
  SetByte 007685 LoByte(popped1);
  TraceOperation 081019 (Je [Var (Global 239),Con 0] (Branch F (Dloc 081029)));
  Let b2 = M[007684];
  Let b3 = M[007685];
  if (Equal(MakeHiLo(b2,b3),0)) {
    TraceOperation 081023 (Store (Con 4) (Con 0));
    SetLocal 4 0;
    TraceOperation 081026 (Jump 081059);
    Jump: 081059
  } else {
    Jump: 081029
  }
LocOp 081029:
  TraceOperation 081029 (Je [Var (Global 239),Con 4] (Branch F (Dloc 081048)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),4)) {
    TraceOperation 081033 (Call (Floc 110116) [Var (Local 1),Var (Local 2)] Sp);
    PushFrame;
    PushReturnAddress 081033;
    SetLocal 1 GetLocal(1);
    SetLocal 2 GetLocal(2);
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 110117
  } else {
    Jump: 081048
  }
LocReturn 081033:
  PushStack call_result;
  TraceOperation 081040 (Print_paddr (Var Sp));
  PopStack popped1;
  GamePrint GetText(PackedAddress Z5(popped1));
  TraceOperation 081042 (Store (Con 4) (Con 1));
  SetLocal 4 1;
  TraceOperation 081045 (Jump 081059);
  Jump: 081059
LocOp 081048:
  TraceOperation 081048 (Je [Var (Global 239),Con 3] (Branch F (Dloc 081059)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),3)) {
    TraceOperation 081052 (Call (Floc 040828) [Var (Local 1),Var (Local 2)] (Local 4));
    PushFrame;
    PushReturnAddress 081052;
    SetLocal 1 GetLocal(1);
    SetLocal 2 GetLocal(2);
    MakeRoutineFrame 2;
    Jump: 040829
  } else {
    Jump: 081059
  }
LocReturn 081052:
  SetLocal 4 call_result;
  Jump: 081059
LocOp 081059:
  TraceOperation 081059 (Jz (Var (Local 4)) (Branch T (Dloc 081072)));
  if (IsZero(GetLocal(4))) {
    Jump: 081072
  } else {
    TraceOperation 081062 (Store (Con 20) (Con 1));
    SetByte 007214 0;
    SetByte 007215 1;
    TraceOperation 081065 (Jz (Var (Local 3)) (Branch F (Dloc 081072)));
    if (IsZero(GetLocal(3))) {
      TraceOperation 081068 New_line;
      GamePrint "\n";
      TraceOperation 081069 (CallN (Floc 080316) []);
      PushFrame;
      PushReturnAddress 081069;
      MakeRoutineFrame 0;
      Jump: 080317
    } else {
      Jump: 081072
    }
  }
LocReturn 081069:
  Jump: 081072
LocOp 081072:
  TraceOperation 081072 (Ret (Var (Local 4)));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult GetLocal(4);
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 081076:
  MakeRoutineFrame 5;
  if (LessThanByte(num_actuals,5)) {
    SetLocal 5 0;
    if (LessThanByte(num_actuals,4)) {
      SetLocal 4 0;
      if (LessThanByte(num_actuals,3)) {
        SetLocal 3 0;
        if (LessThanByte(num_actuals,2)) {
          SetLocal 2 0;
          if (LessThanByte(num_actuals,1)) {
            SetLocal 1 0;
          }
        }
      }
    }
  }
  Jump: 081077
LocOp 081077:
  TraceOperation 081077 (Call (Floc 026172) [Var (Local 1),Con 4] Sp);
  PushFrame;
  PushReturnAddress 081077;
  SetLocal 1 GetLocal(1);
  SetLocal 2 4;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 081077:
  PushStack call_result;
  TraceOperation 081084 (Jz (Var Sp) (Branch F (Dloc 081100)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 081087 (Call (Floc 026172) [Var (Local 1),Con 3] Sp);
    PushFrame;
    PushReturnAddress 081087;
    SetLocal 1 GetLocal(1);
    SetLocal 2 3;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 081100
  }
LocReturn 081087:
  PushStack call_result;
  TraceOperation 081094 (Jz (Var Sp) (Branch F (Dloc 081100)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 081097 (Jz (Var (Local 2)) (Branch F (Dloc 081111)));
    if (IsZero(GetLocal(2))) {
      Jump: 081100
    } else {
      Jump: 081111
    }
  } else {
    Jump: 081100
  }
LocOp 081100:
  TraceOperation 081100 (CallN (Floc 024812) [Con 17763,Con 160,Var (Local 1)]);
  PushFrame;
  PushReturnAddress 081100;
  SetLocal 1 17763;
  SetLocal 2 160;
  SetLocal 3 GetLocal(1);
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 024813
LocReturn 081100:
  TraceOperation 081108 (Jump 081165);
  Jump: 081165
LocOp 081111:
  TraceOperation 081111 (Call (Floc 110116) [Var (Local 1),Var (Local 2)] Sp);
  PushFrame;
  PushReturnAddress 081111;
  SetLocal 1 GetLocal(1);
  SetLocal 2 GetLocal(2);
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 110117
LocReturn 081111:
  PushStack call_result;
  TraceOperation 081118 (Je [Var Sp,Con -1] (Branch T Dfalse));
  PopStack popped1;
  if (Equal(popped1,-1)) {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  } else {
    TraceOperation 081124 (Call (Floc 110116) [Var (Local 1),Var (Local 2)] Sp);
    PushFrame;
    PushReturnAddress 081124;
    SetLocal 1 GetLocal(1);
    SetLocal 2 GetLocal(2);
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 110117
  }
LocReturn 081124:
  PushStack call_result;
  TraceOperation 081131 (Call (Floc 112940) [Var Sp] Sp);
  PopStack popped1;
  PushFrame;
  PushReturnAddress 081131;
  SetLocal 1 popped1;
  MakeRoutineFrame 1;
  Jump: 112941
LocReturn 081131:
  PushStack call_result;
  TraceOperation 081137 (Je [Var Sp,Con 3,Con 4] (Branch F (Dloc 081156)));
  PopStack popped1;
  if (LogOr(Equal(popped1,3),Equal(popped1,4))) {
    TraceOperation 081143 (CallN (Floc 024812) [Con 17763,Con 160,Var (Local 1),Var (Local 2)]);
    PushFrame;
    PushReturnAddress 081143;
    SetLocal 1 17763;
    SetLocal 2 160;
    SetLocal 3 GetLocal(1);
    SetLocal 4 GetLocal(2);
    MakeRoutineFrame 5;
    SetLocal 5 0;
    Jump: 024813
  } else {
    Jump: 081156
  }
LocReturn 081143:
  TraceOperation 081153 (Jump 081165);
  Jump: 081165
LocOp 081156:
  TraceOperation 081156 (Call (Floc 087960) [Con 2,Var (Local 1),Var (Local 2)] Sp);
  PushFrame;
  PushReturnAddress 081156;
  SetLocal 1 2;
  SetLocal 2 GetLocal(1);
  SetLocal 3 GetLocal(2);
  MakeRoutineFrame 3;
  Jump: 087961
LocReturn 081156:
  PushStack call_result;
  TraceOperation 081164 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 081165:
  TraceOperation 081165 (Loadw (Con 17763) (Con 0) (Local 4));
  Let b1 = M[017763];
  Let b2 = M[017764];
  SetLocal 4 MakeHiLo(b1,b2);
  TraceOperation 081171 (Loadb (Con 17763) (Con 2) Sp);
  Let b3 = M[017765];
  PushStack Widen(b3);
  TraceOperation 081177 (Call (Floc 025324) [Var Sp] Sp);
  PopStack popped4;
  PushFrame;
  PushReturnAddress 081177;
  SetLocal 1 popped4;
  MakeRoutineFrame 1;
  Jump: 025325
LocReturn 081177:
  PushStack call_result;
  TraceOperation 081183 (Storeb (Con 17763) (Con 2) (Var Sp));
  PopStack popped1;
  SetByte 017765 LoByte(popped1);
  TraceOperation 081189 (Store (Con 5) (Con 2));
  SetLocal 5 2;
  Jump: 081192
LocOp 081192:
  TraceOperation 081192 (Add (Var (Local 4)) (Con 2) Sp);
  PushStack Add(GetLocal(4),2);
  TraceOperation 081196 (Jl (Var (Local 5)) (Var Sp) (Branch F (Dloc 081214)));
  PopStack popped1;
  if (LessThan(GetLocal(5),popped1)) {
    TraceOperation 081200 (Loadb (Con 17763) (Var (Local 5)) Sp);
    Let b2 = M[Offset(017763,GetLocal(5))];
    PushStack Widen(b2);
    TraceOperation 081206 (Print_char (Var Sp));
    PopStack popped3;
    GamePrint SingleChar(popped3);
    TraceOperation 081209 (Inc (Con 5));
    SetLocal 5 Add(GetLocal(5),1);
    TraceOperation 081211 (Jump 081192);
    Jump: 081192
  } else {
    Jump: 081214
  }
LocOp 081214:
  TraceOperation 081214 (Jg (Var (Local 5)) (Con 2) (Branch F (Dloc 081221)));
  if (GreaterThan(GetLocal(5),2)) {
    TraceOperation 081218 (Store (Con 20) (Con 1));
    SetByte 007214 0;
    SetByte 007215 1;
    Jump: 081221
  } else {
    Jump: 081221
  }
LocOp 081221:
  TraceOperation 081221 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 081224:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 081225
LocOp 081225:
  TraceOperation 081225 (Jz (Var (Local 2)) (Branch T (Dloc 081233)));
  if (IsZero(GetLocal(2))) {
    Jump: 081233
  } else {
    TraceOperation 081228 (Print_paddr (Var (Local 1)));
    GamePrint GetText(PackedAddress Z5(GetLocal(1)));
    TraceOperation 081230 (Jump 081239);
    Jump: 081239
  }
LocOp 081233:
  TraceOperation 081233 (CallN (Floc 081076) [Var (Local 1),Con 0]);
  PushFrame;
  PushReturnAddress 081233;
  SetLocal 1 GetLocal(1);
  SetLocal 2 0;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 081077
LocReturn 081233:
  Jump: 081239
LocOp 081239:
  TraceOperation 081239 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 081240:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 081241
LocOp 081241:
  TraceOperation 081241 (Jz (Var (Local 1)) (Branch F (Dloc 081248)));
  if (IsZero(GetLocal(1))) {
    TraceOperation 081244 (Print_paddr (Con 28510));
    Note "<static Gettext address>";
    GamePrint "nothing";
    TraceOperation 081247 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 081248
  }
LocOp 081248:
  TraceOperation 081248 (Call (Floc 112940) [Var (Local 1)] Sp);
  PushFrame;
  PushReturnAddress 081248;
  SetLocal 1 GetLocal(1);
  MakeRoutineFrame 1;
  Jump: 112941
LocReturn 081248:
  PushStack call_result;
  TraceOperation 081254 (Pull (Con 255));
  PopStack popped1;
  SetByte 007684 HiByte(popped1);
  SetByte 007685 LoByte(popped1);
  TraceOperation 081257 (Je [Var (Global 239),Con 3] (Branch F (Dloc 081279)));
  Let b2 = M[007684];
  Let b3 = M[007685];
  if (Equal(MakeHiLo(b2,b3),3)) {
    TraceOperation 081261 (Print "<routine ");
    GamePrint "<routine ";
    TraceOperation 081270 (Print_num (Var (Local 1)));
    GamePrint ShowNumber(GetLocal(1));
    TraceOperation 081273 (Print ">");
    GamePrint ">";
    TraceOperation 081278 Rtrue;
    PopFrame;
    PopReturnAddress return_address_4;
    SetResult 1;
    JumpIndirect: (return) return_address_4
  } else {
    Jump: 081279
  }
LocOp 081279:
  TraceOperation 081279 (Je [Var (Global 239),Con 4] (Branch F (Dloc 081302)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),4)) {
    TraceOperation 081283 (Print "<string \"");
    GamePrint "<string \"";
    TraceOperation 081294 (Print_paddr (Var (Local 1)));
    GamePrint GetText(PackedAddress Z5(GetLocal(1)));
    TraceOperation 081296 (Print "\">");
    GamePrint "\">";
    TraceOperation 081301 Rtrue;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 081302
  }
LocOp 081302:
  TraceOperation 081302 (Je [Var (Global 239),Con 0] (Branch F (Dloc 081334)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),0)) {
    TraceOperation 081306 (Print "<illegal object number ");
    GamePrint "<illegal object number ";
    TraceOperation 081325 (Print_num (Var (Local 1)));
    GamePrint ShowNumber(GetLocal(1));
    TraceOperation 081328 (Print ">");
    GamePrint ">";
    TraceOperation 081333 Rtrue;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 081334
  }
LocOp 081334:
  TraceOperation 081334 (CallN (Floc 078824) [Con 0,Var (Local 1)]);
  PushFrame;
  PushReturnAddress 081334;
  SetLocal 1 0;
  SetLocal 2 GetLocal(1);
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 078825
LocReturn 081334:
  TraceOperation 081340 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 081344:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 081345
LocOp 081345:
  TraceOperation 081345 (Store (Con 1) (Var (Global 11)));
  Let b1 = M[007228];
  Let b2 = M[007229];
  SetLocal 1 MakeHiLo(b1,b2);
  TraceOperation 081348 (Jz (Var (Local 1)) (Branch F (Dloc 081355)));
  if (IsZero(GetLocal(1))) {
    TraceOperation 081351 (Print_paddr (Con 28510));
    Note "<static Gettext address>";
    GamePrint "nothing";
    TraceOperation 081354 Rtrue;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 081355
  }
LocOp 081355:
  TraceOperation 081355 (Call (Floc 112940) [Var (Local 1)] Sp);
  PushFrame;
  PushReturnAddress 081355;
  SetLocal 1 GetLocal(1);
  MakeRoutineFrame 1;
  Jump: 112941
LocReturn 081355:
  PushStack call_result;
  TraceOperation 081361 (Pull (Con 255));
  PopStack popped1;
  SetByte 007684 HiByte(popped1);
  SetByte 007685 LoByte(popped1);
  TraceOperation 081364 (Je [Var (Global 239),Con 3] (Branch F (Dloc 081386)));
  Let b2 = M[007684];
  Let b3 = M[007685];
  if (Equal(MakeHiLo(b2,b3),3)) {
    TraceOperation 081368 (Print "<routine ");
    GamePrint "<routine ";
    TraceOperation 081377 (Print_num (Var (Local 1)));
    GamePrint ShowNumber(GetLocal(1));
    TraceOperation 081380 (Print ">");
    GamePrint ">";
    TraceOperation 081385 Rtrue;
    PopFrame;
    PopReturnAddress return_address_4;
    SetResult 1;
    JumpIndirect: (return) return_address_4
  } else {
    Jump: 081386
  }
LocOp 081386:
  TraceOperation 081386 (Je [Var (Global 239),Con 4] (Branch F (Dloc 081409)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),4)) {
    TraceOperation 081390 (Print "<string \"");
    GamePrint "<string \"";
    TraceOperation 081401 (Print_paddr (Var (Local 1)));
    GamePrint GetText(PackedAddress Z5(GetLocal(1)));
    TraceOperation 081403 (Print "\">");
    GamePrint "\">";
    TraceOperation 081408 Rtrue;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 081409
  }
LocOp 081409:
  TraceOperation 081409 (Je [Var (Global 239),Con 0] (Branch F (Dloc 081441)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),0)) {
    TraceOperation 081413 (Print "<illegal object number ");
    GamePrint "<illegal object number ";
    TraceOperation 081432 (Print_num (Var (Local 1)));
    GamePrint ShowNumber(GetLocal(1));
    TraceOperation 081435 (Print ">");
    GamePrint ">";
    TraceOperation 081440 Rtrue;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 081441
  }
LocOp 081441:
  TraceOperation 081441 (Je [Var (Local 1),Var (Global 31)] (Branch F (Dloc 081463)));
  Let b1 = M[007268];
  Let b2 = M[007269];
  if (Equal(GetLocal(1),MakeHiLo(b1,b2))) {
    TraceOperation 081445 (Je [Var (Global 162),Con -1] (Branch F (Dloc 081460)));
    Let b3 = M[007530];
    Let b4 = M[007531];
    if (Equal(MakeHiLo(b3,b4),-1)) {
      TraceOperation 081451 (Jz (Var (Global 189)) (Branch T (Dloc 081460)));
      Let b5 = M[007584];
      Let b6 = M[007585];
      if (IsZero(MakeHiLo(b5,b6))) {
        Jump: 081460
      } else {
        TraceOperation 081454 (Print_paddr (Con 28503));
        Note "<static Gettext address>";
        GamePrint "You";
        TraceOperation 081457 (Jump 081462);
        Jump: 081462
      }
    } else {
      Jump: 081460
    }
  } else {
    Jump: 081463
  }
LocOp 081460:
  TraceOperation 081460 (Print_paddr (Var (Global 125)));
  Let b1 = M[007456];
  Let b2 = M[007457];
  GamePrint GetText(PackedAddress Z5(MakeHiLo(b1,b2)));
  Jump: 081462
LocOp 081462:
  TraceOperation 081462 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 081463:
  TraceOperation 081463 (Jz (Var (Global 162)) (Branch T (Dloc 081488)));
  Let b1 = M[007530];
  Let b2 = M[007531];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 081488
  } else {
    TraceOperation 081466 (Get_prop_addr (Var (Local 1)) (Con 40) (Global 239));
    Let b3 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),12)];
    Let b4 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),12),1)];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    Let loop_var6 = DeAddress(Offset(Address(MakeHiLo(b3,b4)),Add(Mul(2,Widen(b5)),1)));
    Label 7: {
      Let b8 = M[Address(loop_var6)];
      if (IsZeroByte(b8)) {
        SetByte 007684 0;
        SetByte 007685 0;
      } else {
        if (TestBit(b8,7)) {
          Let b9 = M[Offset(Address(loop_var6),1)];
          if (Equal(40,Widen(BwAnd(b8,63)))) {
            SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var6),2)));
            SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var6),2)));
          } else {
            Assign loop_var6 = DeAddress(Offset(Offset(Address(loop_var6),2),Widen(BwAnd(b9,63))));
            Goto: Label 7
          }
        } else {
          if (TestBit(b8,6)) {
            if (Equal(40,Widen(BwAnd(b8,63)))) {
              SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var6),1)));
              SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var6),1)));
            } else {
              Assign loop_var6 = DeAddress(Offset(Offset(Address(loop_var6),1),2));
              Goto: Label 7
            }
          } else {
            if (Equal(40,Widen(BwAnd(b8,63)))) {
              SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var6),1)));
              SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var6),1)));
            } else {
              Assign loop_var6 = DeAddress(Offset(Offset(Address(loop_var6),1),1));
              Goto: Label 7
            }
          }
        }
      }
    }
    TraceOperation 081470 (Push (Var (Global 239)));
    Let b10 = M[007684];
    Let b11 = M[007685];
    PushStack MakeHiLo(b10,b11);
    TraceOperation 081473 (Jz (Var Sp) (Branch T (Dloc 081488)));
    PopStack popped12;
    if (IsZero(popped12)) {
      Jump: 081488
    } else {
      TraceOperation 081476 (Call (Floc 080988) [Var (Local 1),Con 40,Con 1] Sp);
      PushFrame;
      PushReturnAddress 081476;
      SetLocal 1 GetLocal(1);
      SetLocal 2 40;
      SetLocal 3 1;
      MakeRoutineFrame 4;
      SetLocal 4 0;
      Jump: 080989
    }
  }
LocReturn 081476:
  PushStack call_result;
  TraceOperation 081484 (Jz (Var Sp) (Branch T (Dloc 081488)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 081488
  } else {
    TraceOperation 081487 Rtrue;
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  }
LocOp 081488:
  TraceOperation 081488 (Jz (Var (Global 189)) (Branch T (Dloc 081518)));
  Let b1 = M[007584];
  Let b2 = M[007585];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 081518
  } else {
    TraceOperation 081491 (Call (Floc 110912) [Var (Local 1),Con 34] Sp);
    PushFrame;
    PushReturnAddress 081491;
    SetLocal 1 GetLocal(1);
    SetLocal 2 34;
    MakeRoutineFrame 5;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 110913
  }
LocReturn 081491:
  PushStack call_result;
  TraceOperation 081499 (Jz (Var Sp) (Branch T (Dloc 081518)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 081518
  } else {
    TraceOperation 081502 (Call (Floc 080988) [Var (Local 1),Con 34,Con 1] Sp);
    PushFrame;
    PushReturnAddress 081502;
    SetLocal 1 GetLocal(1);
    SetLocal 2 34;
    SetLocal 3 1;
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 080989
  }
LocReturn 081502:
  PushStack call_result;
  TraceOperation 081511 (Jz (Var Sp) (Branch T (Dloc 081518)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 081518
  } else {
    TraceOperation 081514 (Store (Con 205) (Con 0));
    SetByte 007584 0;
    SetByte 007585 0;
    TraceOperation 081517 Rtrue;
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  }
LocOp 081518:
  TraceOperation 081518 (Get_prop_addr (Var (Local 1)) (Con 34) (Global 239));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),12)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),12),1)];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let loop_var4 = DeAddress(Offset(Address(MakeHiLo(b1,b2)),Add(Mul(2,Widen(b3)),1)));
  Label 5: {
    Let b6 = M[Address(loop_var4)];
    if (IsZeroByte(b6)) {
      SetByte 007684 0;
      SetByte 007685 0;
    } else {
      if (TestBit(b6,7)) {
        Let b7 = M[Offset(Address(loop_var4),1)];
        if (Equal(34,Widen(BwAnd(b6,63)))) {
          SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var4),2)));
          SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var4),2)));
        } else {
          Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),2),Widen(BwAnd(b7,63))));
          Goto: Label 5
        }
      } else {
        if (TestBit(b6,6)) {
          if (Equal(34,Widen(BwAnd(b6,63)))) {
            SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var4),1)));
            SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var4),1)));
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),2));
            Goto: Label 5
          }
        } else {
          if (Equal(34,Widen(BwAnd(b6,63)))) {
            SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var4),1)));
            SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var4),1)));
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),1));
            Goto: Label 5
          }
        }
      }
    }
  }
  TraceOperation 081522 (Push (Var (Global 239)));
  Let b8 = M[007684];
  Let b9 = M[007685];
  PushStack MakeHiLo(b8,b9);
  TraceOperation 081525 (Jz (Var Sp) (Branch T (Dloc 081540)));
  PopStack popped10;
  if (IsZero(popped10)) {
    Jump: 081540
  } else {
    TraceOperation 081528 (Call (Floc 080988) [Var (Local 1),Con 34,Con 1] Sp);
    PushFrame;
    PushReturnAddress 081528;
    SetLocal 1 GetLocal(1);
    SetLocal 2 34;
    SetLocal 3 1;
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 080989
  }
LocReturn 081528:
  PushStack call_result;
  TraceOperation 081536 (Jz (Var Sp) (Branch T (Dloc 081540)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 081540
  } else {
    TraceOperation 081539 Rtrue;
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  }
LocOp 081540:
  TraceOperation 081540 (Print_obj (Var (Local 1)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),12)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),12),1)];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let ite_res4 = Ite((IsZeroByte(b3),"",GetText(Offset(Address(MakeHiLo(b1,b2)),1))));
  GamePrint ite_res4;
  TraceOperation 081542 Rtrue;
  PopFrame;
  PopReturnAddress return_address_5;
  SetResult 1;
  JumpIndirect: (return) return_address_5
--------------------------------------------------
LocRoutine 081544:
  MakeRoutineFrame 8;
  if (LessThanByte(num_actuals,8)) {
    SetLocal 8 0;
    if (LessThanByte(num_actuals,7)) {
      SetLocal 7 0;
      if (LessThanByte(num_actuals,6)) {
        SetLocal 6 0;
        if (LessThanByte(num_actuals,5)) {
          SetLocal 5 0;
          if (LessThanByte(num_actuals,4)) {
            SetLocal 4 0;
            if (LessThanByte(num_actuals,3)) {
              SetLocal 3 0;
              if (LessThanByte(num_actuals,2)) {
                SetLocal 2 0;
                if (LessThanByte(num_actuals,1)) {
                  SetLocal 1 0;
                }
              }
            }
          }
        }
      }
    }
  }
  Jump: 081545
LocOp 081545:
  TraceOperation 081545 (Call (Floc 111316) [Var (Local 1),Con 37] Sp);
  PushFrame;
  PushReturnAddress 081545;
  SetLocal 1 GetLocal(1);
  SetLocal 2 37;
  MakeRoutineFrame 2;
  Jump: 111317
LocReturn 081545:
  PushStack call_result;
  TraceOperation 081552 (Jz (Var Sp) (Branch T (Dloc 081603)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 081603
  } else {
    TraceOperation 081555 (Mul (Var (Global 190)) (Con 1) Sp);
    Let b2 = M[007586];
    Let b3 = M[007587];
    PushStack Mul(MakeHiLo(b2,b3),1);
    TraceOperation 081559 (Add (Var (Local 2)) (Var Sp) Sp);
    PopStack popped4;
    PushStack Add(GetLocal(2),popped4);
    TraceOperation 081563 (Get_prop_addr (Var (Local 1)) (Con 37) (Global 239));
    Let b5 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),12)];
    Let b6 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),12),1)];
    Let b7 = M[Address(MakeHiLo(b5,b6))];
    Let loop_var8 = DeAddress(Offset(Address(MakeHiLo(b5,b6)),Add(Mul(2,Widen(b7)),1)));
    Label 9: {
      Let b10 = M[Address(loop_var8)];
      if (IsZeroByte(b10)) {
        SetByte 007684 0;
        SetByte 007685 0;
      } else {
        if (TestBit(b10,7)) {
          Let b11 = M[Offset(Address(loop_var8),1)];
          if (Equal(37,Widen(BwAnd(b10,63)))) {
            SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var8),2)));
            SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var8),2)));
          } else {
            Assign loop_var8 = DeAddress(Offset(Offset(Address(loop_var8),2),Widen(BwAnd(b11,63))));
            Goto: Label 9
          }
        } else {
          if (TestBit(b10,6)) {
            if (Equal(37,Widen(BwAnd(b10,63)))) {
              SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var8),1)));
              SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var8),1)));
            } else {
              Assign loop_var8 = DeAddress(Offset(Offset(Address(loop_var8),1),2));
              Goto: Label 9
            }
          } else {
            if (Equal(37,Widen(BwAnd(b10,63)))) {
              SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var8),1)));
              SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var8),1)));
            } else {
              Assign loop_var8 = DeAddress(Offset(Offset(Address(loop_var8),1),1));
              Goto: Label 9
            }
          }
        }
      }
    }
    TraceOperation 081567 (Push (Var (Global 239)));
    Let b12 = M[007684];
    Let b13 = M[007685];
    PushStack MakeHiLo(b12,b13);
    TraceOperation 081570 (Loadw (Var Sp) (Var Sp) (Local 8));
    PopStack popped14;
    PopStack popped15;
    Let b16 = M[Offset(Address(popped14),Mul(2,popped15))];
    Let b17 = M[Offset(Offset(Address(popped14),Mul(2,popped15)),1)];
    SetLocal 8 MakeHiLo(b16,b17);
    TraceOperation 081574 (Jz (Var (Local 4)) (Branch T (Dloc 081588)));
    if (IsZero(GetLocal(4))) {
      Jump: 081588
    } else {
      TraceOperation 081577 (CallN (Floc 081224) [Var (Local 8)]);
      PushFrame;
      PushReturnAddress 081577;
      SetLocal 1 GetLocal(8);
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 081225
    }
  }
LocReturn 081577:
  TraceOperation 081582 (Print " ");
  GamePrint " ";
  TraceOperation 081585 (Jump 081593);
  Jump: 081593
LocOp 081588:
  TraceOperation 081588 (Print_paddr (Var (Local 8)));
  GamePrint GetText(PackedAddress Z5(GetLocal(8)));
  TraceOperation 081590 (Print " ");
  GamePrint " ";
  Jump: 081593
LocOp 081593:
  TraceOperation 081593 (Jz (Var (Local 3)) (Branch T (Dloc 081597)));
  if (IsZero(GetLocal(3))) {
    Jump: 081597
  } else {
    TraceOperation 081596 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  }
LocOp 081597:
  TraceOperation 081597 (CallN (Floc 081240) [Var (Local 1)]);
  PushFrame;
  PushReturnAddress 081597;
  SetLocal 1 GetLocal(1);
  MakeRoutineFrame 1;
  Jump: 081241
LocReturn 081597:
  TraceOperation 081602 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 081603:
  TraceOperation 081603 (Call (Floc 051528) [Var (Local 1)] (Local 5));
  PushFrame;
  PushReturnAddress 081603;
  SetLocal 1 GetLocal(1);
  MakeRoutineFrame 3;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 051529
LocReturn 081603:
  SetLocal 5 call_result;
  TraceOperation 081609 (Jz (Var (Local 3)) (Branch T (Dloc 081628)));
  if (IsZero(GetLocal(3))) {
    Jump: 081628
  } else {
    TraceOperation 081612 (Jl (Var (Local 5)) (Con 3) (Branch T (Dloc 081624)));
    if (LessThan(GetLocal(5),3)) {
      Jump: 081624
    } else {
      TraceOperation 081616 (Jl (Var (Local 5)) (Con 6) (Branch T (Dloc 081628)));
      if (LessThan(GetLocal(5),6)) {
        Jump: 081628
      } else {
        TraceOperation 081620 (Jl (Var (Local 5)) (Con 9) (Branch F (Dloc 081628)));
        if (LessThan(GetLocal(5),9)) {
          Jump: 081624
        } else {
          Jump: 081628
        }
      }
    }
  }
LocOp 081624:
  TraceOperation 081624 (Add (Var (Local 5)) (Con 3) (Local 5));
  SetLocal 5 Add(GetLocal(5),3);
  Jump: 081628
LocOp 081628:
  TraceOperation 081628 (Loadw (Con 9299) (Var (Local 5)) (Local 5));
  Let b1 = M[Offset(009299,Mul(2,GetLocal(5)))];
  Let b2 = M[Offset(Offset(009299,Mul(2,GetLocal(5))),1)];
  SetLocal 5 MakeHiLo(b1,b2);
  TraceOperation 081634 (Mul (Var (Local 5)) (Con 1) Sp);
  PushStack Mul(GetLocal(5),1);
  TraceOperation 081638 (Add (Var (Global 190)) (Var Sp) Sp);
  Let b3 = M[007586];
  Let b4 = M[007587];
  PopStack popped5;
  PushStack Add(MakeHiLo(b3,b4),popped5);
  TraceOperation 081642 (Mul (Con 12) (Var Sp) Sp);
  PopStack popped6;
  PushStack Mul(12,popped6);
  TraceOperation 081646 (Add (Con 9275) (Var Sp) (Local 6));
  PopStack popped7;
  SetLocal 6 Add(9275,popped7);
  TraceOperation 081652 (Add (Var (Local 2)) (Con 3) Sp);
  PushStack Add(GetLocal(2),3);
  TraceOperation 081656 (Loadw (Var (Local 6)) (Var Sp) Sp);
  PopStack popped8;
  Let b9 = M[Offset(Address(GetLocal(6)),Mul(2,popped8))];
  Let b10 = M[Offset(Offset(Address(GetLocal(6)),Mul(2,popped8)),1)];
  PushStack MakeHiLo(b9,b10);
  TraceOperation 081660 (Loadw (Var (Local 6)) (Var (Local 2)) Sp);
  Let b11 = M[Offset(Address(GetLocal(6)),Mul(2,GetLocal(2)))];
  Let b12 = M[Offset(Offset(Address(GetLocal(6)),Mul(2,GetLocal(2))),1)];
  PushStack MakeHiLo(b11,b12);
  TraceOperation 081664 (Je [Var Sp,Var Sp] (Branch T (Dloc 081671)));
  PopStack popped13;
  PopStack popped14;
  if (Equal(popped13,popped14)) {
    Jump: 081671
  } else {
    TraceOperation 081668 (Store (Con 7) (Con 1));
    SetLocal 7 1;
    Jump: 081671
  }
LocOp 081671:
  TraceOperation 081671 (Jz (Var (Global 19)) (Branch T (Dloc 081728)));
  Let b1 = M[007244];
  Let b2 = M[007245];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 081728
  } else {
    TraceOperation 081674 (Jz (Var (Local 7)) (Branch T (Dloc 081728)));
    if (IsZero(GetLocal(7))) {
      Jump: 081728
    } else {
      TraceOperation 081677 (Storew (Con 17763) (Con 0) (Con 160));
      SetByte 017763 0;
      SetByte 017764 160;
      TraceOperation 081683 (Output_stream (Con 3) (Just (Con 17763)));
      Note "Output_stream (Con 3) (Just (Con 17763))";
      TraceOperation 081688 (Jz (Var (Local 3)) (Branch T (Dloc 081699)));
      if (IsZero(GetLocal(3))) {
        Jump: 081699
      } else {
        TraceOperation 081691 (CallN (Floc 080944) [Var (Local 3)]);
        PushFrame;
        PushReturnAddress 081691;
        SetLocal 1 GetLocal(3);
        MakeRoutineFrame 1;
        Jump: 080945
      }
    }
  }
LocReturn 081691:
  TraceOperation 081696 (Jump 081704);
  Jump: 081704
LocOp 081699:
  TraceOperation 081699 (CallN (Floc 081240) [Var (Local 1)]);
  PushFrame;
  PushReturnAddress 081699;
  SetLocal 1 GetLocal(1);
  MakeRoutineFrame 1;
  Jump: 081241
LocReturn 081699:
  Jump: 081704
LocOp 081704:
  TraceOperation 081704 (Output_stream (Con -3) Nothing);
  Note "Output_stream (Con -3) Nothing";
  TraceOperation 081708 (Add (Con 17763) (Con 2) Sp);
  PushStack 17765;
  TraceOperation 081714 (Call (Floc 027056) [Var Sp] Sp);
  PopStack popped1;
  PushFrame;
  PushReturnAddress 081714;
  SetLocal 1 popped1;
  MakeRoutineFrame 1;
  Jump: 027057
LocReturn 081714:
  PushStack call_result;
  TraceOperation 081720 (Mul (Con 3) (Var Sp) Sp);
  PopStack popped1;
  PushStack Mul(3,popped1);
  TraceOperation 081724 (Add (Var (Local 2)) (Var Sp) (Local 2));
  PopStack popped2;
  SetLocal 2 Add(GetLocal(2),popped2);
  Jump: 081728
LocOp 081728:
  TraceOperation 081728 (Jz (Var (Local 4)) (Branch T (Dloc 081737)));
  if (IsZero(GetLocal(4))) {
    Jump: 081737
  } else {
    TraceOperation 081731 (Push (Con 0));
    PushStack 0;
    TraceOperation 081734 (Jump 081740);
    Jump: 081740
  }
LocOp 081737:
  TraceOperation 081737 (Push (Con 1));
  PushStack 1;
  Jump: 081740
LocOp 081740:
  TraceOperation 081740 (Loadw (Var (Local 6)) (Var (Local 2)) Sp);
  Let b1 = M[Offset(Address(GetLocal(6)),Mul(2,GetLocal(2)))];
  Let b2 = M[Offset(Offset(Address(GetLocal(6)),Mul(2,GetLocal(2))),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 081744 (CallN (Floc 081224) [Var Sp,Var Sp]);
  PopStack popped3;
  PopStack popped4;
  PushFrame;
  PushReturnAddress 081744;
  SetLocal 1 popped3;
  SetLocal 2 popped4;
  MakeRoutineFrame 2;
  Jump: 081225
LocReturn 081744:
  TraceOperation 081750 (Jz (Var (Local 3)) (Branch T (Dloc 081754)));
  if (IsZero(GetLocal(3))) {
    Jump: 081754
  } else {
    TraceOperation 081753 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  }
LocOp 081754:
  TraceOperation 081754 (CallN (Floc 081240) [Var (Local 1)]);
  PushFrame;
  PushReturnAddress 081754;
  SetLocal 1 GetLocal(1);
  MakeRoutineFrame 1;
  Jump: 081241
LocReturn 081754:
  TraceOperation 081759 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 081760:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 081761
LocOp 081761:
  TraceOperation 081761 (Jz (Var (Local 1)) (Branch F (Dloc 081768)));
  if (IsZero(GetLocal(1))) {
    TraceOperation 081764 (Print_paddr (Con 28510));
    Note "<static Gettext address>";
    GamePrint "nothing";
    TraceOperation 081767 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 081768
  }
LocOp 081768:
  TraceOperation 081768 (Store (Con 2) (Var (Global 162)));
  Let b1 = M[007530];
  Let b2 = M[007531];
  SetLocal 2 MakeHiLo(b1,b2);
  TraceOperation 081771 (Store (Con 178) (Con 1));
  SetByte 007530 0;
  SetByte 007531 1;
  TraceOperation 081774 (Test_attr (Var (Local 1)) (Con 27) (Branch F (Dloc 081792)));
  Let b3 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),3)];
  if (TestBit(b3,4)) {
    TraceOperation 081778 (Store (Con 178) (Con -1));
    SetByte 007530 255;
    SetByte 007531 255;
    TraceOperation 081783 (CallN (Floc 081240) [Var (Local 1)]);
    PushFrame;
    PushReturnAddress 081783;
    SetLocal 1 GetLocal(1);
    MakeRoutineFrame 1;
    Jump: 081241
  } else {
    Jump: 081792
  }
LocReturn 081783:
  TraceOperation 081788 (Store (Con 178) (Var (Local 2)));
  SetByte 007530 HiByte(GetLocal(2));
  SetByte 007531 LoByte(GetLocal(2));
  TraceOperation 081791 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 081792:
  TraceOperation 081792 (Call (Floc 111316) [Var (Local 1),Con 17] Sp);
  PushFrame;
  PushReturnAddress 081792;
  SetLocal 1 GetLocal(1);
  SetLocal 2 17;
  MakeRoutineFrame 2;
  Jump: 111317
LocReturn 081792:
  PushStack call_result;
  TraceOperation 081799 (Jz (Var Sp) (Branch T (Dloc 081821)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 081821
  } else {
    TraceOperation 081802 (CallN (Floc 080988) [Var (Local 1),Con 17,Con 1]);
    PushFrame;
    PushReturnAddress 081802;
    SetLocal 1 GetLocal(1);
    SetLocal 2 17;
    SetLocal 3 1;
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 080989
  }
LocReturn 081802:
  TraceOperation 081809 (Print " ");
  GamePrint " ";
  TraceOperation 081812 (CallN (Floc 081240) [Var (Local 1)]);
  PushFrame;
  PushReturnAddress 081812;
  SetLocal 1 GetLocal(1);
  MakeRoutineFrame 1;
  Jump: 081241
LocReturn 081812:
  TraceOperation 081817 (Store (Con 178) (Var (Local 2)));
  SetByte 007530 HiByte(GetLocal(2));
  SetByte 007531 LoByte(GetLocal(2));
  TraceOperation 081820 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 081821:
  TraceOperation 081821 (CallN (Floc 081544) [Var (Local 1),Con 2]);
  PushFrame;
  PushReturnAddress 081821;
  SetLocal 1 GetLocal(1);
  SetLocal 2 2;
  MakeRoutineFrame 8;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 081545
LocReturn 081821:
  TraceOperation 081827 (Store (Con 178) (Var (Local 2)));
  SetByte 007530 HiByte(GetLocal(2));
  SetByte 007531 LoByte(GetLocal(2));
  TraceOperation 081830 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 081832:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 081833
LocOp 081833:
  TraceOperation 081833 (Jz (Var (Local 1)) (Branch F (Dloc 081844)));
  if (IsZero(GetLocal(1))) {
    TraceOperation 081836 (CallN (Floc 081076) [Con 28510,Con 0]);
    PushFrame;
    PushReturnAddress 081836;
    SetLocal 1 28510;
    SetLocal 2 0;
    MakeRoutineFrame 5;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 081077
  } else {
    Jump: 081844
  }
LocReturn 081836:
  TraceOperation 081843 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 081844:
  TraceOperation 081844 (Store (Con 2) (Var (Global 162)));
  Let b1 = M[007530];
  Let b2 = M[007531];
  SetLocal 2 MakeHiLo(b1,b2);
  TraceOperation 081847 (Store (Con 178) (Con 1));
  SetByte 007530 0;
  SetByte 007531 1;
  TraceOperation 081850 (Test_attr (Var (Local 1)) (Con 27) (Branch F (Dloc 081874)));
  Let b3 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),3)];
  if (TestBit(b3,4)) {
    TraceOperation 081854 (Store (Con 178) (Con -1));
    SetByte 007530 255;
    SetByte 007531 255;
    TraceOperation 081859 (Store (Con 205) (Con 1));
    SetByte 007584 0;
    SetByte 007585 1;
    TraceOperation 081862 (CallN (Floc 081240) [Var (Local 1)]);
    PushFrame;
    PushReturnAddress 081862;
    SetLocal 1 GetLocal(1);
    MakeRoutineFrame 1;
    Jump: 081241
  } else {
    Jump: 081874
  }
LocReturn 081862:
  TraceOperation 081867 (Store (Con 178) (Var (Local 2)));
  SetByte 007530 HiByte(GetLocal(2));
  SetByte 007531 LoByte(GetLocal(2));
  TraceOperation 081870 (Store (Con 205) (Con 0));
  SetByte 007584 0;
  SetByte 007585 0;
  TraceOperation 081873 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 081874:
  TraceOperation 081874 (Call (Floc 111316) [Var (Local 1),Con 17] Sp);
  PushFrame;
  PushReturnAddress 081874;
  SetLocal 1 GetLocal(1);
  SetLocal 2 17;
  MakeRoutineFrame 2;
  Jump: 111317
LocReturn 081874:
  PushStack call_result;
  TraceOperation 081881 (Jz (Var Sp) (Branch T (Dloc 081902)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 081902
  } else {
    TraceOperation 081884 (CallN (Floc 081076) [Var (Local 1),Con 17]);
    PushFrame;
    PushReturnAddress 081884;
    SetLocal 1 GetLocal(1);
    SetLocal 2 17;
    MakeRoutineFrame 5;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 081077
  }
LocReturn 081884:
  TraceOperation 081890 (Print " ");
  GamePrint " ";
  TraceOperation 081893 (CallN (Floc 081240) [Var (Local 1)]);
  PushFrame;
  PushReturnAddress 081893;
  SetLocal 1 GetLocal(1);
  MakeRoutineFrame 1;
  Jump: 081241
LocReturn 081893:
  TraceOperation 081898 (Store (Con 178) (Var (Local 2)));
  SetByte 007530 HiByte(GetLocal(2));
  SetByte 007531 LoByte(GetLocal(2));
  TraceOperation 081901 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 081902:
  TraceOperation 081902 (CallN (Floc 081544) [Var (Local 1),Con 2,Con 0,Con 1]);
  PushFrame;
  PushReturnAddress 081902;
  SetLocal 1 GetLocal(1);
  SetLocal 2 2;
  SetLocal 3 0;
  SetLocal 4 1;
  MakeRoutineFrame 8;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  Jump: 081545
LocReturn 081902:
  TraceOperation 081911 (Store (Con 178) (Var (Local 2)));
  SetByte 007530 HiByte(GetLocal(2));
  SetByte 007531 LoByte(GetLocal(2));
  TraceOperation 081914 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 081916:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 081917
LocOp 081917:
  TraceOperation 081917 (Store (Con 2) (Var (Global 162)));
  Let b1 = M[007530];
  Let b2 = M[007531];
  SetLocal 2 MakeHiLo(b1,b2);
  TraceOperation 081920 (Store (Con 178) (Con 0));
  SetByte 007530 0;
  SetByte 007531 0;
  TraceOperation 081923 (Call (Floc 026172) [Var (Local 1),Con 2] Sp);
  PushFrame;
  PushReturnAddress 081923;
  SetLocal 1 GetLocal(1);
  SetLocal 2 2;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 081923:
  PushStack call_result;
  TraceOperation 081930 (Jz (Var Sp) (Branch T (Dloc 081937)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 081937
  } else {
    TraceOperation 081933 (Test_attr (Var (Local 1)) (Con 27) (Branch F (Dloc 081951)));
    Let b2 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),3)];
    if (TestBit(b2,4)) {
      Jump: 081937
    } else {
      Jump: 081951
    }
  }
LocOp 081937:
  TraceOperation 081937 (Store (Con 178) (Con -1));
  SetByte 007530 255;
  SetByte 007531 255;
  TraceOperation 081942 (CallN (Floc 081240) [Var (Local 1)]);
  PushFrame;
  PushReturnAddress 081942;
  SetLocal 1 GetLocal(1);
  MakeRoutineFrame 1;
  Jump: 081241
LocReturn 081942:
  TraceOperation 081947 (Store (Con 178) (Var (Local 2)));
  SetByte 007530 HiByte(GetLocal(2));
  SetByte 007531 LoByte(GetLocal(2));
  TraceOperation 081950 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 081951:
  TraceOperation 081951 (CallN (Floc 081544) [Var (Local 1),Con 1]);
  PushFrame;
  PushReturnAddress 081951;
  SetLocal 1 GetLocal(1);
  SetLocal 2 1;
  MakeRoutineFrame 8;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 081545
LocReturn 081951:
  TraceOperation 081957 (Store (Con 178) (Var (Local 2)));
  SetByte 007530 HiByte(GetLocal(2));
  SetByte 007531 LoByte(GetLocal(2));
  TraceOperation 081960 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 081964:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 081965
LocOp 081965:
  TraceOperation 081965 (Store (Con 2) (Var (Global 162)));
  Let b1 = M[007530];
  Let b2 = M[007531];
  SetLocal 2 MakeHiLo(b1,b2);
  TraceOperation 081968 (Store (Con 178) (Con 0));
  SetByte 007530 0;
  SetByte 007531 0;
  TraceOperation 081971 (Call (Floc 026172) [Var (Local 1),Con 2] Sp);
  PushFrame;
  PushReturnAddress 081971;
  SetLocal 1 GetLocal(1);
  SetLocal 2 2;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 081971:
  PushStack call_result;
  TraceOperation 081978 (Jz (Var Sp) (Branch T (Dloc 082009)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 082009
  } else {
    TraceOperation 081981 (Test_attr (Var (Local 1)) (Con 27) (Branch T (Dloc 081989)));
    Let b2 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),3)];
    if (TestBit(b2,4)) {
      Jump: 081989
    } else {
      TraceOperation 081985 (Je [Var (Local 1),Var (Global 31)] (Branch F (Dloc 082009)));
      Let b3 = M[007268];
      Let b4 = M[007269];
      if (Equal(GetLocal(1),MakeHiLo(b3,b4))) {
        Jump: 081989
      } else {
        Jump: 082009
      }
    }
  }
LocOp 081989:
  TraceOperation 081989 (Store (Con 178) (Con -1));
  SetByte 007530 255;
  SetByte 007531 255;
  TraceOperation 081994 (Store (Con 205) (Con 1));
  SetByte 007584 0;
  SetByte 007585 1;
  TraceOperation 081997 (CallN (Floc 081240) [Var (Local 1)]);
  PushFrame;
  PushReturnAddress 081997;
  SetLocal 1 GetLocal(1);
  MakeRoutineFrame 1;
  Jump: 081241
LocReturn 081997:
  TraceOperation 082002 (Store (Con 178) (Var (Local 2)));
  SetByte 007530 HiByte(GetLocal(2));
  SetByte 007531 LoByte(GetLocal(2));
  TraceOperation 082005 (Store (Con 205) (Con 0));
  SetByte 007584 0;
  SetByte 007585 0;
  TraceOperation 082008 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 082009:
  TraceOperation 082009 (Call (Floc 026172) [Var (Local 1),Con 2] Sp);
  PushFrame;
  PushReturnAddress 082009;
  SetLocal 1 GetLocal(1);
  SetLocal 2 2;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 082009:
  PushStack call_result;
  TraceOperation 082016 (Jz (Var Sp) (Branch T (Dloc 082023)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 082023
  } else {
    TraceOperation 082019 (Test_attr (Var (Local 1)) (Con 27) (Branch F (Dloc 082037)));
    Let b2 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),3)];
    if (TestBit(b2,4)) {
      Jump: 082023
    } else {
      Jump: 082037
    }
  }
LocOp 082023:
  TraceOperation 082023 (Store (Con 178) (Con -1));
  SetByte 007530 255;
  SetByte 007531 255;
  TraceOperation 082028 (CallN (Floc 081240) [Var (Local 1)]);
  PushFrame;
  PushReturnAddress 082028;
  SetLocal 1 GetLocal(1);
  MakeRoutineFrame 1;
  Jump: 081241
LocReturn 082028:
  TraceOperation 082033 (Store (Con 178) (Var (Local 2)));
  SetByte 007530 HiByte(GetLocal(2));
  SetByte 007531 LoByte(GetLocal(2));
  TraceOperation 082036 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 082037:
  TraceOperation 082037 (CallN (Floc 081544) [Var (Local 1),Con 0]);
  PushFrame;
  PushReturnAddress 082037;
  SetLocal 1 GetLocal(1);
  SetLocal 2 0;
  MakeRoutineFrame 8;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 081545
LocReturn 082037:
  TraceOperation 082043 (Store (Con 178) (Var (Local 2)));
  SetByte 007530 HiByte(GetLocal(2));
  SetByte 007531 LoByte(GetLocal(2));
  TraceOperation 082046 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 082048:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 082049
LocOp 082049:
  TraceOperation 082049 (Store (Con 2) (Var (Global 162)));
  Let b1 = M[007530];
  Let b2 = M[007531];
  SetLocal 2 MakeHiLo(b1,b2);
  TraceOperation 082052 (Store (Con 178) (Con -1));
  SetByte 007530 255;
  SetByte 007531 255;
  TraceOperation 082057 (CallN (Floc 081240) [Var (Local 1)]);
  PushFrame;
  PushReturnAddress 082057;
  SetLocal 1 GetLocal(1);
  MakeRoutineFrame 1;
  Jump: 081241
LocReturn 082057:
  TraceOperation 082062 (Store (Con 178) (Var (Local 2)));
  SetByte 007530 HiByte(GetLocal(2));
  SetByte 007531 LoByte(GetLocal(2));
  TraceOperation 082065 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 082068:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 082069
LocOp 082069:
  TraceOperation 082069 (Jg (Var (Local 2)) (Con 1) (Branch T (Dloc 082075)));
  if (GreaterThan(GetLocal(2),1)) {
    Jump: 082075
  } else {
    TraceOperation 082073 (Ret (Var (Local 2)));
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult GetLocal(2);
    JumpIndirect: (return) return_address_1
  }
LocOp 082075:
  TraceOperation 082075 (Random (Var (Local 2)) Sp);
  LetRandom random1 GetLocal(2);
  PushStack random1;
  TraceOperation 082079 Ret_popped;
  PopStack popped2;
  PopFrame;
  PopReturnAddress return_address_3;
  SetResult popped2;
  JumpIndirect: (return) return_address_3
--------------------------------------------------
LocRoutine 082080:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 082081
LocOp 082081:
  TraceOperation 082081 (Jg (Var (Local 2)) (Con 1) (Branch T (Dloc 082087)));
  if (GreaterThan(GetLocal(2),1)) {
    Jump: 082087
  } else {
    TraceOperation 082085 (Ret (Var (Local 2)));
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult GetLocal(2);
    JumpIndirect: (return) return_address_1
  }
LocOp 082087:
  TraceOperation 082087 (Store (Con 3) (Var (Local 1)));
  SetLocal 3 GetLocal(1);
  Jump: 082090
LocOp 082090:
  TraceOperation 082090 (Je [Var (Local 3),Var (Local 1)] (Branch F (Dloc 082101)));
  if (Equal(GetLocal(3),GetLocal(1))) {
    TraceOperation 082094 (Random (Var (Local 2)) (Local 3));
    LetRandom random1 GetLocal(2);
    SetLocal 3 random1;
    TraceOperation 082098 (Jump 082090);
    Jump: 082090
  } else {
    Jump: 082101
  }
LocOp 082101:
  TraceOperation 082101 (Ret (Var (Local 3)));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult GetLocal(3);
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 082104:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 082105
LocOp 082105:
  TraceOperation 082105 (Jz (Var (Local 1)) (Branch T (Dloc 082110)));
  if (IsZero(GetLocal(1))) {
    Jump: 082110
  } else {
    TraceOperation 082108 (Ret (Var (Local 1)));
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult GetLocal(1);
    JumpIndirect: (return) return_address_1
  }
LocOp 082110:
  TraceOperation 082110 (Call (Floc 082068) [Var (Local 1),Var (Local 2)] Sp);
  PushFrame;
  PushReturnAddress 082110;
  SetLocal 1 GetLocal(1);
  SetLocal 2 GetLocal(2);
  MakeRoutineFrame 2;
  Jump: 082069
LocReturn 082110:
  PushStack call_result;
  TraceOperation 082117 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 082120:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 082121
LocOp 082121:
  TraceOperation 082121 (Inc (Con 1));
  SetLocal 1 Add(GetLocal(1),1);
  TraceOperation 082123 (Jg (Var (Local 1)) (Var (Local 2)) (Branch F (Dloc 082130)));
  if (GreaterThan(GetLocal(1),GetLocal(2))) {
    TraceOperation 082127 (Store (Con 1) (Con 1));
    SetLocal 1 1;
    Jump: 082130
  } else {
    Jump: 082130
  }
LocOp 082130:
  TraceOperation 082130 (Ret (Var (Local 1)));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult GetLocal(1);
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 082132:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 082133
LocOp 082133:
  TraceOperation 082133 (Inc (Con 1));
  SetLocal 1 Add(GetLocal(1),1);
  TraceOperation 082135 (Jg (Var (Local 1)) (Var (Local 2)) (Branch F (Dloc 082142)));
  if (GreaterThan(GetLocal(1),GetLocal(2))) {
    TraceOperation 082139 (Store (Con 1) (Var (Local 2)));
    SetLocal 1 GetLocal(2);
    Jump: 082142
  } else {
    Jump: 082142
  }
LocOp 082142:
  TraceOperation 082142 (Ret (Var (Local 1)));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult GetLocal(1);
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 082144:
  MakeRoutineFrame 5;
  if (LessThanByte(num_actuals,5)) {
    SetLocal 5 0;
    if (LessThanByte(num_actuals,4)) {
      SetLocal 4 0;
      if (LessThanByte(num_actuals,3)) {
        SetLocal 3 0;
        if (LessThanByte(num_actuals,2)) {
          SetLocal 2 0;
          if (LessThanByte(num_actuals,1)) {
            SetLocal 1 0;
          }
        }
      }
    }
  }
  Jump: 082145
LocOp 082145:
  TraceOperation 082145 (Jg (Var (Local 2)) (Con 1) (Branch T (Dloc 082151)));
  if (GreaterThan(GetLocal(2),1)) {
    Jump: 082151
  } else {
    TraceOperation 082149 (Ret (Var (Local 2)));
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult GetLocal(2);
    JumpIndirect: (return) return_address_1
  }
LocOp 082151:
  TraceOperation 082151 (Add (Var (Local 2)) (Con 1) Sp);
  PushStack Add(GetLocal(2),1);
  TraceOperation 082155 (Mul (Var (Local 2)) (Var Sp) Sp);
  PopStack popped1;
  PushStack Mul(GetLocal(2),popped1);
  TraceOperation 082159 (Div (Var Sp) (Con 2) (Local 3));
  PopStack popped2;
  SetLocal 3 Div(popped2,2);
  TraceOperation 082163 (Random (Var (Local 3)) (Local 4));
  LetRandom random3 GetLocal(3);
  SetLocal 4 random3;
  TraceOperation 082167 (Store (Con 5) (Con 1));
  SetLocal 5 1;
  Jump: 082170
LocOp 082170:
  TraceOperation 082170 (Jg (Var (Local 5)) (Var (Local 2)) (Branch T (Dloc 082196)));
  if (GreaterThan(GetLocal(5),GetLocal(2))) {
    Jump: 082196
  } else {
    TraceOperation 082174 (Sub (Var (Local 4)) (Var (Local 5)) (Local 4));
    SetLocal 4 Sub(GetLocal(4),GetLocal(5));
    TraceOperation 082178 (Jg (Var (Local 4)) (Con 0) (Branch T (Dloc 082191)));
    if (GreaterThan(GetLocal(4),0)) {
      Jump: 082191
    } else {
      TraceOperation 082182 (Sub (Var (Local 2)) (Var (Local 5)) Sp);
      PushStack Sub(GetLocal(2),GetLocal(5));
      TraceOperation 082186 (Add (Var Sp) (Con 1) Sp);
      PopStack popped1;
      PushStack Add(popped1,1);
      TraceOperation 082190 Ret_popped;
      PopStack popped2;
      PopFrame;
      PopReturnAddress return_address_3;
      SetResult popped2;
      JumpIndirect: (return) return_address_3
    }
  }
LocOp 082191:
  TraceOperation 082191 (Inc (Con 5));
  SetLocal 5 Add(GetLocal(5),1);
  TraceOperation 082193 (Jump 082170);
  Jump: 082170
LocOp 082196:
  TraceOperation 082196 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 082200:
  MakeRoutineFrame 12;
  if (LessThanByte(num_actuals,12)) {
    SetLocal 12 0;
    if (LessThanByte(num_actuals,11)) {
      SetLocal 11 0;
      if (LessThanByte(num_actuals,10)) {
        SetLocal 10 0;
        if (LessThanByte(num_actuals,9)) {
          SetLocal 9 0;
          if (LessThanByte(num_actuals,8)) {
            SetLocal 8 0;
            if (LessThanByte(num_actuals,7)) {
              SetLocal 7 0;
              if (LessThanByte(num_actuals,6)) {
                SetLocal 6 0;
                if (LessThanByte(num_actuals,5)) {
                  SetLocal 5 0;
                  if (LessThanByte(num_actuals,4)) {
                    SetLocal 4 0;
                    if (LessThanByte(num_actuals,3)) {
                      SetLocal 3 0;
                      if (LessThanByte(num_actuals,2)) {
                        SetLocal 2 0;
                        if (LessThanByte(num_actuals,1)) {
                          SetLocal 1 0;
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  Jump: 082201
LocOp 082201:
  TraceOperation 082201 (Add (Var (Local 2)) (Con 1) (Local 12));
  SetLocal 12 Add(GetLocal(2),1);
  TraceOperation 082205 (Mod (Var (Local 1)) (Var (Local 12)) (Local 5));
  SetLocal 5 Mod(GetLocal(1),GetLocal(12));
  TraceOperation 082209 (Div (Var (Local 1)) (Var (Local 12)) (Local 1));
  SetLocal 1 Div(GetLocal(1),GetLocal(12));
  TraceOperation 082213 (Mod (Var (Local 1)) (Var (Local 12)) (Local 4));
  SetLocal 4 Mod(GetLocal(1),GetLocal(12));
  TraceOperation 082217 (Div (Var (Local 1)) (Var (Local 12)) (Local 3));
  SetLocal 3 Div(GetLocal(1),GetLocal(12));
  TraceOperation 082221 (Jg (Var (Local 2)) (Con 32) (Branch F (Dloc 082233)));
  if (GreaterThan(GetLocal(2),32)) {
    TraceOperation 082225 (Call (Floc 082068) [Var (Local 1),Var (Local 2)] Sp);
    PushFrame;
    PushReturnAddress 082225;
    SetLocal 1 GetLocal(1);
    SetLocal 2 GetLocal(2);
    MakeRoutineFrame 2;
    Jump: 082069
  } else {
    Jump: 082233
  }
LocReturn 082225:
  PushStack call_result;
  TraceOperation 082232 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 082233:
  TraceOperation 082233 (Jg (Var (Local 2)) (Con 1) (Branch T (Dloc 082243)));
  if (GreaterThan(GetLocal(2),1)) {
    Jump: 082243
  } else {
    TraceOperation 082237 (Store (Con 5) (Var (Local 2)));
    SetLocal 5 GetLocal(2);
    TraceOperation 082240 (Jump 082401);
    Jump: 082401
  }
LocOp 082243:
  TraceOperation 082243 (Mul (Var (Local 12)) (Var (Local 12)) (Local 11));
  SetLocal 11 Mul(GetLocal(12),GetLocal(12));
  TraceOperation 082247 (Div (Con 32767) (Var (Local 11)) Sp);
  PushStack Div(32767,GetLocal(11));
  TraceOperation 082253 (Sub (Var Sp) (Var (Local 11)) Sp);
  PopStack popped1;
  PushStack Sub(popped1,GetLocal(11));
  TraceOperation 082257 (Sub (Var Sp) (Var (Local 12)) (Local 10));
  PopStack popped2;
  SetLocal 10 Sub(popped2,GetLocal(12));
  TraceOperation 082261 (Mod (Var (Local 10)) (Con 2) Sp);
  PushStack Mod(GetLocal(10),2);
  TraceOperation 082265 (Jz (Var Sp) (Branch F (Dloc 082270)));
  PopStack popped3;
  if (IsZero(popped3)) {
    TraceOperation 082268 (Dec (Con 10));
    SetLocal 10 Sub(GetLocal(10),1);
    Jump: 082270
  } else {
    Jump: 082270
  }
LocOp 082270:
  TraceOperation 082270 (Jl (Var (Local 10)) (Con 0) (Branch F (Dloc 082278)));
  if (LessThan(GetLocal(10),0)) {
    TraceOperation 082274 (Sub (Con 0) (Var (Local 10)) (Local 10));
    SetLocal 10 Sub(0,GetLocal(10));
    Jump: 082278
  } else {
    Jump: 082278
  }
LocOp 082278:
  TraceOperation 082278 (Jz (Var (Local 3)) (Branch F (Dloc 082288)));
  if (IsZero(GetLocal(3))) {
    TraceOperation 082281 (Random (Var (Local 10)) (Local 3));
    LetRandom random1 GetLocal(10);
    SetLocal 3 random1;
    TraceOperation 082285 (Store (Con 4) (Con 0));
    SetLocal 4 0;
    Jump: 082288
  } else {
    Jump: 082288
  }
LocOp 082288:
  TraceOperation 082288 (Store (Con 6) (Con 0));
  SetLocal 6 0;
  Jump: 082291
LocOp 082291:
  TraceOperation 082291 (Jl (Var (Local 6)) (Var (Local 2)) (Branch F (Dloc 082306)));
  if (LessThan(GetLocal(6),GetLocal(2))) {
    TraceOperation 082295 (Storeb (Con 18015) (Var (Local 6)) (Var (Local 6)));
    SetByte Offset(018015,GetLocal(6)) LoByte(GetLocal(6));
    TraceOperation 082301 (Inc (Con 6));
    SetLocal 6 Add(GetLocal(6),1);
    TraceOperation 082303 (Jump 082291);
    Jump: 082291
  } else {
    Jump: 082306
  }
LocOp 082306:
  TraceOperation 082306 (Store (Con 9) (Var (Local 3)));
  SetLocal 9 GetLocal(3);
  TraceOperation 082309 (Store (Con 6) (Con 0));
  SetLocal 6 0;
  Jump: 082312
LocOp 082312:
  TraceOperation 082312 (Sub (Var (Local 2)) (Con 1) Sp);
  PushStack Sub(GetLocal(2),1);
  TraceOperation 082316 (Jl (Var (Local 6)) (Var Sp) (Branch F (Dloc 082379)));
  PopStack popped1;
  if (LessThan(GetLocal(6),popped1)) {
    TraceOperation 082320 (Sub (Var (Local 2)) (Var (Local 6)) Sp);
    PushStack Sub(GetLocal(2),GetLocal(6));
    TraceOperation 082324 (Mod (Var (Local 3)) (Var Sp) Sp);
    PopStack popped2;
    PushStack Mod(GetLocal(3),popped2);
    TraceOperation 082328 (Add (Var Sp) (Var (Local 6)) (Local 7));
    PopStack popped3;
    SetLocal 7 Add(popped3,GetLocal(6));
    TraceOperation 082332 (Mul (Var (Local 3)) (Con 31973) Sp);
    PushStack Mul(GetLocal(3),31973);
    TraceOperation 082338 (Add (Var Sp) (Con 17) (Local 3));
    PopStack popped4;
    SetLocal 3 Add(popped4,17);
    TraceOperation 082342 (Jl (Var (Local 3)) (Con 0) (Branch F (Dloc 082350)));
    if (LessThan(GetLocal(3),0)) {
      TraceOperation 082346 (Sub (Con 0) (Var (Local 3)) (Local 3));
      SetLocal 3 Sub(0,GetLocal(3));
      Jump: 082350
    } else {
      Jump: 082350
    }
  } else {
    Jump: 082379
  }
LocOp 082350:
  TraceOperation 082350 (Loadb (Con 18015) (Var (Local 7)) (Local 8));
  Let b1 = M[Offset(018015,GetLocal(7))];
  SetLocal 8 Widen(b1);
  TraceOperation 082356 (Loadb (Con 18015) (Var (Local 6)) Sp);
  Let b2 = M[Offset(018015,GetLocal(6))];
  PushStack Widen(b2);
  TraceOperation 082362 (Storeb (Con 18015) (Var (Local 7)) (Var Sp));
  PopStack popped3;
  SetByte Offset(018015,GetLocal(7)) LoByte(popped3);
  TraceOperation 082368 (Storeb (Con 18015) (Var (Local 6)) (Var (Local 8)));
  SetByte Offset(018015,GetLocal(6)) LoByte(GetLocal(8));
  TraceOperation 082374 (Inc (Con 6));
  SetLocal 6 Add(GetLocal(6),1);
  TraceOperation 082376 (Jump 082312);
  Jump: 082312
LocOp 082379:
  TraceOperation 082379 (Loadb (Con 18015) (Var (Local 4)) Sp);
  Let b1 = M[Offset(018015,GetLocal(4))];
  PushStack Widen(b1);
  TraceOperation 082385 (Add (Var Sp) (Con 1) (Local 5));
  PopStack popped2;
  SetLocal 5 Add(popped2,1);
  TraceOperation 082389 (Inc (Con 4));
  SetLocal 4 Add(GetLocal(4),1);
  TraceOperation 082391 (Jl (Var (Local 4)) (Var (Local 2)) (Branch T (Dloc 082401)));
  if (LessThan(GetLocal(4),GetLocal(2))) {
    Jump: 082401
  } else {
    TraceOperation 082395 (Store (Con 4) (Con 0));
    SetLocal 4 0;
    TraceOperation 082398 (Store (Con 9) (Con 0));
    SetLocal 9 0;
    Jump: 082401
  }
LocOp 082401:
  TraceOperation 082401 (Mul (Var (Local 9)) (Var (Local 12)) Sp);
  PushStack Mul(GetLocal(9),GetLocal(12));
  TraceOperation 082405 (Mul (Var Sp) (Var (Local 12)) Sp);
  PopStack popped1;
  PushStack Mul(popped1,GetLocal(12));
  TraceOperation 082409 (Mul (Var (Local 4)) (Var (Local 12)) Sp);
  PushStack Mul(GetLocal(4),GetLocal(12));
  TraceOperation 082413 (Add (Var (Local 5)) (Var Sp) Sp);
  PopStack popped2;
  PushStack Add(GetLocal(5),popped2);
  TraceOperation 082417 (Add (Var Sp) (Var Sp) Sp);
  PopStack popped3;
  PopStack popped4;
  PushStack Add(popped3,popped4);
  TraceOperation 082421 Ret_popped;
  PopStack popped5;
  PopFrame;
  PopReturnAddress return_address_6;
  SetResult popped5;
  JumpIndirect: (return) return_address_6
--------------------------------------------------
LocRoutine 082424:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 082425
LocOp 082425:
  TraceOperation 082425 (Jz (Var (Local 3)) (Branch T (Dloc 082470)));
  if (IsZero(GetLocal(3))) {
    Jump: 082470
  } else {
    TraceOperation 082428 (Store (Con 4) (Con 1));
    SetLocal 4 1;
    Jump: 082431
  }
LocOp 082431:
  TraceOperation 082431 (Call (Floc 111316) [Var (Local 4),Var (Local 2)] Sp);
  PushFrame;
  PushReturnAddress 082431;
  SetLocal 1 GetLocal(4);
  SetLocal 2 GetLocal(2);
  MakeRoutineFrame 2;
  Jump: 111317
LocReturn 082431:
  PushStack call_result;
  TraceOperation 082438 (Jz (Var Sp) (Branch T (Dloc 082459)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 082459
  } else {
    TraceOperation 082441 (Call (Floc 110116) [Var (Local 4),Var (Local 2)] Sp);
    PushFrame;
    PushReturnAddress 082441;
    SetLocal 1 GetLocal(4);
    SetLocal 2 GetLocal(2);
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 110117
  }
LocReturn 082441:
  PushStack call_result;
  TraceOperation 082448 (Je [Var Sp,Var (Local 3)] (Branch F (Dloc 082459)));
  PopStack popped1;
  if (Equal(popped1,GetLocal(3))) {
    TraceOperation 082452 (CallN (Floc 110088) [Var (Local 4),Var (Local 2),Con 0]);
    PushFrame;
    PushReturnAddress 082452;
    SetLocal 1 GetLocal(4);
    SetLocal 2 GetLocal(2);
    SetLocal 3 0;
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 110089
  } else {
    Jump: 082459
  }
LocReturn 082452:
  Jump: 082459
LocOp 082459:
  TraceOperation 082459 (Inc (Con 4));
  SetLocal 4 Add(GetLocal(4),1);
  TraceOperation 082461 (Jg (Var (Local 4)) (Con 72) (Branch T (Dloc 082470)));
  if (GreaterThan(GetLocal(4),72)) {
    Jump: 082470
  } else {
    TraceOperation 082467 (Jump 082431);
    Jump: 082431
  }
LocOp 082470:
  TraceOperation 082470 (Jz (Var (Local 1)) (Branch T (Dloc 082480)));
  if (IsZero(GetLocal(1))) {
    Jump: 082480
  } else {
    TraceOperation 082473 (CallN (Floc 110088) [Var (Local 1),Var (Local 2),Var (Local 3)]);
    PushFrame;
    PushReturnAddress 082473;
    SetLocal 1 GetLocal(1);
    SetLocal 2 GetLocal(2);
    SetLocal 3 GetLocal(3);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 110089
  }
LocReturn 082473:
  Jump: 082480
LocOp 082480:
  TraceOperation 082480 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 082484:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 082485
LocOp 082485:
  TraceOperation 082485 (Jz (Var (Local 1)) (Branch T (Dloc 082506)));
  if (IsZero(GetLocal(1))) {
    Jump: 082506
  } else {
    TraceOperation 082488 (Call (Floc 110116) [Var (Local 1),Var (Local 2)] Sp);
    PushFrame;
    PushReturnAddress 082488;
    SetLocal 1 GetLocal(1);
    SetLocal 2 GetLocal(2);
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 110117
  }
LocReturn 082488:
  PushStack call_result;
  TraceOperation 082495 (Je [Var Sp,Var (Local 3)] (Branch F (Dloc 082506)));
  PopStack popped1;
  if (Equal(popped1,GetLocal(3))) {
    TraceOperation 082499 (CallN (Floc 110088) [Var (Local 1),Var (Local 2),Con 0]);
    PushFrame;
    PushReturnAddress 082499;
    SetLocal 1 GetLocal(1);
    SetLocal 2 GetLocal(2);
    SetLocal 3 0;
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 110089
  } else {
    Jump: 082506
  }
LocReturn 082499:
  Jump: 082506
LocOp 082506:
  TraceOperation 082506 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 082508:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 082509
LocOp 082509:
  TraceOperation 082509 (Call (Floc 026172) [Var (Local 1),Con 2] Sp);
  PushFrame;
  PushReturnAddress 082509;
  SetLocal 1 GetLocal(1);
  SetLocal 2 2;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 082509:
  PushStack call_result;
  TraceOperation 082516 (Jz (Var Sp) (Branch T (Dloc 082615)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 082615
  } else {
    TraceOperation 082520 (Call (Floc 111316) [Var (Local 1),Var (Local 2)] Sp);
    PushFrame;
    PushReturnAddress 082520;
    SetLocal 1 GetLocal(1);
    SetLocal 2 GetLocal(2);
    MakeRoutineFrame 2;
    Jump: 111317
  }
LocReturn 082520:
  PushStack call_result;
  TraceOperation 082527 (Jz (Var Sp) (Branch T (Dloc 082615)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 082615
  } else {
    TraceOperation 082531 (Call (Floc 026172) [Var (Local 3),Con 2] Sp);
    PushFrame;
    PushReturnAddress 082531;
    SetLocal 1 GetLocal(3);
    SetLocal 2 2;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  }
LocReturn 082531:
  PushStack call_result;
  TraceOperation 082538 (Jz (Var Sp) (Branch T (Dloc 082615)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 082615
  } else {
    TraceOperation 082542 (Call (Floc 111316) [Var (Local 3),Var (Local 2)] Sp);
    PushFrame;
    PushReturnAddress 082542;
    SetLocal 1 GetLocal(3);
    SetLocal 2 GetLocal(2);
    MakeRoutineFrame 2;
    Jump: 111317
  }
LocReturn 082542:
  PushStack call_result;
  TraceOperation 082549 (Jz (Var Sp) (Branch T (Dloc 082615)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 082615
  } else {
    TraceOperation 082553 (Call (Floc 110116) [Var (Local 1),Var (Local 2)] Sp);
    PushFrame;
    PushReturnAddress 082553;
    SetLocal 1 GetLocal(1);
    SetLocal 2 GetLocal(2);
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 110117
  }
LocReturn 082553:
  PushStack call_result;
  TraceOperation 082560 (Jz (Var Sp) (Branch T (Dloc 082577)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 082577
  } else {
    TraceOperation 082563 (Call (Floc 110116) [Var (Local 1),Var (Local 2)] Sp);
    PushFrame;
    PushReturnAddress 082563;
    SetLocal 1 GetLocal(1);
    SetLocal 2 GetLocal(2);
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 110117
  }
LocReturn 082563:
  PushStack call_result;
  TraceOperation 082570 (CallN (Floc 110088) [Var Sp,Var (Local 2),Con 0]);
  PopStack popped1;
  PushFrame;
  PushReturnAddress 082570;
  SetLocal 1 popped1;
  SetLocal 2 GetLocal(2);
  SetLocal 3 0;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 110089
LocReturn 082570:
  Jump: 082577
LocOp 082577:
  TraceOperation 082577 (Call (Floc 110116) [Var (Local 3),Var (Local 2)] Sp);
  PushFrame;
  PushReturnAddress 082577;
  SetLocal 1 GetLocal(3);
  SetLocal 2 GetLocal(2);
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 110117
LocReturn 082577:
  PushStack call_result;
  TraceOperation 082584 (Jz (Var Sp) (Branch T (Dloc 082601)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 082601
  } else {
    TraceOperation 082587 (Call (Floc 110116) [Var (Local 3),Var (Local 2)] Sp);
    PushFrame;
    PushReturnAddress 082587;
    SetLocal 1 GetLocal(3);
    SetLocal 2 GetLocal(2);
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 110117
  }
LocReturn 082587:
  PushStack call_result;
  TraceOperation 082594 (CallN (Floc 110088) [Var Sp,Var (Local 2),Con 0]);
  PopStack popped1;
  PushFrame;
  PushReturnAddress 082594;
  SetLocal 1 popped1;
  SetLocal 2 GetLocal(2);
  SetLocal 3 0;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 110089
LocReturn 082594:
  Jump: 082601
LocOp 082601:
  TraceOperation 082601 (CallN (Floc 110088) [Var (Local 1),Var (Local 2),Var (Local 3)]);
  PushFrame;
  PushReturnAddress 082601;
  SetLocal 1 GetLocal(1);
  SetLocal 2 GetLocal(2);
  SetLocal 3 GetLocal(3);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 110089
LocReturn 082601:
  TraceOperation 082608 (CallN (Floc 110088) [Var (Local 3),Var (Local 2),Var (Local 1)]);
  PushFrame;
  PushReturnAddress 082608;
  SetLocal 1 GetLocal(3);
  SetLocal 2 GetLocal(2);
  SetLocal 3 GetLocal(1);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 110089
LocReturn 082608:
  Jump: 082615
LocOp 082615:
  TraceOperation 082615 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 082616:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 082617
LocOp 082617:
  TraceOperation 082617 (Call (Floc 026172) [Var (Local 1),Con 2] Sp);
  PushFrame;
  PushReturnAddress 082617;
  SetLocal 1 GetLocal(1);
  SetLocal 2 2;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 082617:
  PushStack call_result;
  TraceOperation 082624 (Jz (Var Sp) (Branch T (Dloc 082682)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 082682
  } else {
    TraceOperation 082627 (Call (Floc 111316) [Var (Local 1),Var (Local 2)] Sp);
    PushFrame;
    PushReturnAddress 082627;
    SetLocal 1 GetLocal(1);
    SetLocal 2 GetLocal(2);
    MakeRoutineFrame 2;
    Jump: 111317
  }
LocReturn 082627:
  PushStack call_result;
  TraceOperation 082634 (Jz (Var Sp) (Branch T (Dloc 082682)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 082682
  } else {
    TraceOperation 082637 (Call (Floc 026172) [Var (Local 3),Con 2] Sp);
    PushFrame;
    PushReturnAddress 082637;
    SetLocal 1 GetLocal(3);
    SetLocal 2 2;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  }
LocReturn 082637:
  PushStack call_result;
  TraceOperation 082644 (Jz (Var Sp) (Branch T (Dloc 082682)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 082682
  } else {
    TraceOperation 082647 (Call (Floc 111316) [Var (Local 3),Var (Local 2)] Sp);
    PushFrame;
    PushReturnAddress 082647;
    SetLocal 1 GetLocal(3);
    SetLocal 2 GetLocal(2);
    MakeRoutineFrame 2;
    Jump: 111317
  }
LocReturn 082647:
  PushStack call_result;
  TraceOperation 082654 (Jz (Var Sp) (Branch T (Dloc 082682)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 082682
  } else {
    TraceOperation 082657 (Call (Floc 110116) [Var (Local 1),Var (Local 2)] Sp);
    PushFrame;
    PushReturnAddress 082657;
    SetLocal 1 GetLocal(1);
    SetLocal 2 GetLocal(2);
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 110117
  }
LocReturn 082657:
  PushStack call_result;
  TraceOperation 082664 (Je [Var Sp,Var (Local 3)] (Branch F (Dloc 082682)));
  PopStack popped1;
  if (Equal(popped1,GetLocal(3))) {
    TraceOperation 082668 (CallN (Floc 110088) [Var (Local 1),Var (Local 2),Con 0]);
    PushFrame;
    PushReturnAddress 082668;
    SetLocal 1 GetLocal(1);
    SetLocal 2 GetLocal(2);
    SetLocal 3 0;
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 110089
  } else {
    Jump: 082682
  }
LocReturn 082668:
  TraceOperation 082675 (CallN (Floc 110088) [Var (Local 3),Var (Local 2),Con 0]);
  PushFrame;
  PushReturnAddress 082675;
  SetLocal 1 GetLocal(3);
  SetLocal 2 GetLocal(2);
  SetLocal 3 0;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 110089
LocReturn 082675:
  Jump: 082682
LocOp 082682:
  TraceOperation 082682 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 082684:
  MakeRoutineFrame 8;
  if (LessThanByte(num_actuals,8)) {
    SetLocal 8 0;
    if (LessThanByte(num_actuals,7)) {
      SetLocal 7 0;
      if (LessThanByte(num_actuals,6)) {
        SetLocal 6 0;
        if (LessThanByte(num_actuals,5)) {
          SetLocal 5 0;
          if (LessThanByte(num_actuals,4)) {
            SetLocal 4 0;
            if (LessThanByte(num_actuals,3)) {
              SetLocal 3 0;
              if (LessThanByte(num_actuals,2)) {
                SetLocal 2 0;
                if (LessThanByte(num_actuals,1)) {
                  SetLocal 1 0;
                }
              }
            }
          }
        }
      }
    }
  }
  Jump: 082685
LocOp 082685:
  TraceOperation 082685 (Jz (Var (Local 4)) (Branch T (Dloc 082701)));
  if (IsZero(GetLocal(4))) {
    Jump: 082701
  } else {
    TraceOperation 082688 (Je [Var (Local 3),Var (Local 1)] (Branch T (Dloc 082701)));
    if (Equal(GetLocal(3),GetLocal(1))) {
      Jump: 082701
    } else {
      TraceOperation 082692 (CallN (Floc 082684) [Var (Local 3),Var (Local 2),Var (Local 1),Con 0]);
      PushFrame;
      PushReturnAddress 082692;
      SetLocal 1 GetLocal(3);
      SetLocal 2 GetLocal(2);
      SetLocal 3 GetLocal(1);
      SetLocal 4 0;
      MakeRoutineFrame 8;
      SetLocal 8 0;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      Jump: 082685
    }
  }
LocReturn 082692:
  Jump: 082701
LocOp 082701:
  TraceOperation 082701 (Loadw (Var (Local 2)) (Con 0) (Local 5));
  Let b1 = M[Offset(Address(GetLocal(2)),0)];
  Let b2 = M[Offset(Offset(Address(GetLocal(2)),0),1)];
  SetLocal 5 MakeHiLo(b1,b2);
  TraceOperation 082705 (Loadw (Var (Local 2)) (Con 1) (Local 6));
  Let b3 = M[Offset(Address(GetLocal(2)),2)];
  Let b4 = M[Offset(Offset(Address(GetLocal(2)),2),1)];
  SetLocal 6 MakeHiLo(b3,b4);
  TraceOperation 082709 (Storew (Var (Local 2)) (Con 6) (Con 1));
  SetByte Offset(Address(GetLocal(2)),12) 0;
  SetByte Offset(Offset(Address(GetLocal(2)),12),1) 1;
  TraceOperation 082714 (Jz (Var (Local 5)) (Branch T (Dloc 082759)));
  if (IsZero(GetLocal(5))) {
    Jump: 082759
  } else {
    TraceOperation 082717 (Call (Floc 026172) [Var (Local 1),Con 2] Sp);
    PushFrame;
    PushReturnAddress 082717;
    SetLocal 1 GetLocal(1);
    SetLocal 2 2;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  }
LocReturn 082717:
  PushStack call_result;
  TraceOperation 082724 (Jz (Var Sp) (Branch T (Dloc 082747)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 082747
  } else {
    TraceOperation 082727 (Call (Floc 111316) [Var (Local 1),Var (Local 5)] Sp);
    PushFrame;
    PushReturnAddress 082727;
    SetLocal 1 GetLocal(1);
    SetLocal 2 GetLocal(5);
    MakeRoutineFrame 2;
    Jump: 111317
  }
LocReturn 082727:
  PushStack call_result;
  TraceOperation 082734 (Jz (Var Sp) (Branch T (Dloc 082747)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 082747
  } else {
    TraceOperation 082737 (Call (Floc 110116) [Var (Local 1),Var (Local 5)] (Local 7));
    PushFrame;
    PushReturnAddress 082737;
    SetLocal 1 GetLocal(1);
    SetLocal 2 GetLocal(5);
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 110117
  }
LocReturn 082737:
  SetLocal 7 call_result;
  TraceOperation 082744 (Jump 082756);
  Jump: 082756
LocOp 082747:
  TraceOperation 082747 (Call (Floc 086692) [Con 5,Var (Local 1),Var (Local 2)] Sp);
  PushFrame;
  PushReturnAddress 082747;
  SetLocal 1 5;
  SetLocal 2 GetLocal(1);
  SetLocal 3 GetLocal(2);
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 086693
LocReturn 082747:
  PushStack call_result;
  TraceOperation 082755 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 082756:
  TraceOperation 082756 (Jump 082763);
  Jump: 082763
LocOp 082759:
  TraceOperation 082759 (Sub (Var (Local 1)) (Con 1) (Local 7));
  SetLocal 7 Sub(GetLocal(1),1);
  Jump: 082763
LocOp 082763:
  TraceOperation 082763 (Jz (Var (Local 6)) (Branch T (Dloc 082808)));
  if (IsZero(GetLocal(6))) {
    Jump: 082808
  } else {
    TraceOperation 082766 (Call (Floc 026172) [Var (Local 3),Con 2] Sp);
    PushFrame;
    PushReturnAddress 082766;
    SetLocal 1 GetLocal(3);
    SetLocal 2 2;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  }
LocReturn 082766:
  PushStack call_result;
  TraceOperation 082773 (Jz (Var Sp) (Branch T (Dloc 082796)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 082796
  } else {
    TraceOperation 082776 (Call (Floc 111316) [Var (Local 3),Var (Local 6)] Sp);
    PushFrame;
    PushReturnAddress 082776;
    SetLocal 1 GetLocal(3);
    SetLocal 2 GetLocal(6);
    MakeRoutineFrame 2;
    Jump: 111317
  }
LocReturn 082776:
  PushStack call_result;
  TraceOperation 082783 (Jz (Var Sp) (Branch T (Dloc 082796)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 082796
  } else {
    TraceOperation 082786 (Call (Floc 110116) [Var (Local 3),Var (Local 6)] (Local 8));
    PushFrame;
    PushReturnAddress 082786;
    SetLocal 1 GetLocal(3);
    SetLocal 2 GetLocal(6);
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 110117
  }
LocReturn 082786:
  SetLocal 8 call_result;
  TraceOperation 082793 (Jump 082805);
  Jump: 082805
LocOp 082796:
  TraceOperation 082796 (Call (Floc 086692) [Con 5,Var (Local 3),Var (Local 2)] Sp);
  PushFrame;
  PushReturnAddress 082796;
  SetLocal 1 5;
  SetLocal 2 GetLocal(3);
  SetLocal 3 GetLocal(2);
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 086693
LocReturn 082796:
  PushStack call_result;
  TraceOperation 082804 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 082805:
  TraceOperation 082805 (Jump 082812);
  Jump: 082812
LocOp 082808:
  TraceOperation 082808 (Sub (Var (Local 3)) (Con 1) (Local 8));
  SetLocal 8 Sub(GetLocal(3),1);
  Jump: 082812
LocOp 082812:
  TraceOperation 082812 (Loadw (Var (Local 2)) (Con 3) Sp);
  Let b1 = M[Offset(Address(GetLocal(2)),6)];
  Let b2 = M[Offset(Offset(Address(GetLocal(2)),6),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 082816 (Mul (Var (Local 7)) (Var Sp) Sp);
  PopStack popped3;
  PushStack Mul(GetLocal(7),popped3);
  TraceOperation 082820 (Add (Var Sp) (Var (Local 8)) (Local 5));
  PopStack popped4;
  SetLocal 5 Add(popped4,GetLocal(8));
  TraceOperation 082824 (Mod (Var (Local 5)) (Con 16) Sp);
  PushStack Mod(GetLocal(5),16);
  TraceOperation 082828 (Loadw (Con 7756) (Var Sp) (Local 7));
  PopStack popped5;
  Let b6 = M[Offset(007756,Mul(2,popped5))];
  Let b7 = M[Offset(Offset(007756,Mul(2,popped5)),1)];
  SetLocal 7 MakeHiLo(b6,b7);
  TraceOperation 082834 (Div (Var (Local 5)) (Con 16) Sp);
  PushStack Div(GetLocal(5),16);
  TraceOperation 082838 (Add (Var Sp) (Con 8) (Local 5));
  PopStack popped8;
  SetLocal 5 Add(popped8,8);
  TraceOperation 082842 (Loadw (Var (Local 2)) (Var (Local 5)) Sp);
  Let b9 = M[Offset(Address(GetLocal(2)),Mul(2,GetLocal(5)))];
  Let b10 = M[Offset(Offset(Address(GetLocal(2)),Mul(2,GetLocal(5))),1)];
  PushStack MakeHiLo(b9,b10);
  TraceOperation 082846 (Or (Var Sp) (Var (Local 7)) Sp);
  PopStack popped11;
  PushStack Or(popped11,GetLocal(7));
  TraceOperation 082850 (Storew (Var (Local 2)) (Var (Local 5)) (Var Sp));
  PopStack popped12;
  SetByte Offset(Address(GetLocal(2)),Mul(2,GetLocal(5))) HiByte(popped12);
  SetByte Offset(Offset(Address(GetLocal(2)),Mul(2,GetLocal(5))),1) LoByte(popped12);
  TraceOperation 082855 Rtrue;
  PopFrame;
  PopReturnAddress return_address_13;
  SetResult 1;
  JumpIndirect: (return) return_address_13
--------------------------------------------------
LocRoutine 082856:
  MakeRoutineFrame 8;
  if (LessThanByte(num_actuals,8)) {
    SetLocal 8 0;
    if (LessThanByte(num_actuals,7)) {
      SetLocal 7 0;
      if (LessThanByte(num_actuals,6)) {
        SetLocal 6 0;
        if (LessThanByte(num_actuals,5)) {
          SetLocal 5 0;
          if (LessThanByte(num_actuals,4)) {
            SetLocal 4 0;
            if (LessThanByte(num_actuals,3)) {
              SetLocal 3 0;
              if (LessThanByte(num_actuals,2)) {
                SetLocal 2 0;
                if (LessThanByte(num_actuals,1)) {
                  SetLocal 1 0;
                }
              }
            }
          }
        }
      }
    }
  }
  Jump: 082857
LocOp 082857:
  TraceOperation 082857 (Jz (Var (Local 4)) (Branch T (Dloc 082873)));
  if (IsZero(GetLocal(4))) {
    Jump: 082873
  } else {
    TraceOperation 082860 (Je [Var (Local 3),Var (Local 1)] (Branch T (Dloc 082873)));
    if (Equal(GetLocal(3),GetLocal(1))) {
      Jump: 082873
    } else {
      TraceOperation 082864 (CallN (Floc 082856) [Var (Local 3),Var (Local 2),Var (Local 1),Con 0]);
      PushFrame;
      PushReturnAddress 082864;
      SetLocal 1 GetLocal(3);
      SetLocal 2 GetLocal(2);
      SetLocal 3 GetLocal(1);
      SetLocal 4 0;
      MakeRoutineFrame 8;
      SetLocal 8 0;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      Jump: 082857
    }
  }
LocReturn 082864:
  Jump: 082873
LocOp 082873:
  TraceOperation 082873 (Loadw (Var (Local 2)) (Con 0) (Local 5));
  Let b1 = M[Offset(Address(GetLocal(2)),0)];
  Let b2 = M[Offset(Offset(Address(GetLocal(2)),0),1)];
  SetLocal 5 MakeHiLo(b1,b2);
  TraceOperation 082877 (Loadw (Var (Local 2)) (Con 1) (Local 6));
  Let b3 = M[Offset(Address(GetLocal(2)),2)];
  Let b4 = M[Offset(Offset(Address(GetLocal(2)),2),1)];
  SetLocal 6 MakeHiLo(b3,b4);
  TraceOperation 082881 (Storew (Var (Local 2)) (Con 6) (Con 1));
  SetByte Offset(Address(GetLocal(2)),12) 0;
  SetByte Offset(Offset(Address(GetLocal(2)),12),1) 1;
  TraceOperation 082886 (Jz (Var (Local 5)) (Branch T (Dloc 082931)));
  if (IsZero(GetLocal(5))) {
    Jump: 082931
  } else {
    TraceOperation 082889 (Call (Floc 026172) [Var (Local 1),Con 2] Sp);
    PushFrame;
    PushReturnAddress 082889;
    SetLocal 1 GetLocal(1);
    SetLocal 2 2;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  }
LocReturn 082889:
  PushStack call_result;
  TraceOperation 082896 (Jz (Var Sp) (Branch T (Dloc 082919)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 082919
  } else {
    TraceOperation 082899 (Call (Floc 111316) [Var (Local 1),Var (Local 5)] Sp);
    PushFrame;
    PushReturnAddress 082899;
    SetLocal 1 GetLocal(1);
    SetLocal 2 GetLocal(5);
    MakeRoutineFrame 2;
    Jump: 111317
  }
LocReturn 082899:
  PushStack call_result;
  TraceOperation 082906 (Jz (Var Sp) (Branch T (Dloc 082919)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 082919
  } else {
    TraceOperation 082909 (Call (Floc 110116) [Var (Local 1),Var (Local 5)] (Local 7));
    PushFrame;
    PushReturnAddress 082909;
    SetLocal 1 GetLocal(1);
    SetLocal 2 GetLocal(5);
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 110117
  }
LocReturn 082909:
  SetLocal 7 call_result;
  TraceOperation 082916 (Jump 082928);
  Jump: 082928
LocOp 082919:
  TraceOperation 082919 (Call (Floc 086692) [Con 5,Var (Local 1),Var (Local 2)] Sp);
  PushFrame;
  PushReturnAddress 082919;
  SetLocal 1 5;
  SetLocal 2 GetLocal(1);
  SetLocal 3 GetLocal(2);
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 086693
LocReturn 082919:
  PushStack call_result;
  TraceOperation 082927 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 082928:
  TraceOperation 082928 (Jump 082935);
  Jump: 082935
LocOp 082931:
  TraceOperation 082931 (Sub (Var (Local 1)) (Con 1) (Local 7));
  SetLocal 7 Sub(GetLocal(1),1);
  Jump: 082935
LocOp 082935:
  TraceOperation 082935 (Jz (Var (Local 6)) (Branch T (Dloc 082980)));
  if (IsZero(GetLocal(6))) {
    Jump: 082980
  } else {
    TraceOperation 082938 (Call (Floc 026172) [Var (Local 3),Con 2] Sp);
    PushFrame;
    PushReturnAddress 082938;
    SetLocal 1 GetLocal(3);
    SetLocal 2 2;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  }
LocReturn 082938:
  PushStack call_result;
  TraceOperation 082945 (Jz (Var Sp) (Branch T (Dloc 082968)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 082968
  } else {
    TraceOperation 082948 (Call (Floc 111316) [Var (Local 3),Var (Local 6)] Sp);
    PushFrame;
    PushReturnAddress 082948;
    SetLocal 1 GetLocal(3);
    SetLocal 2 GetLocal(6);
    MakeRoutineFrame 2;
    Jump: 111317
  }
LocReturn 082948:
  PushStack call_result;
  TraceOperation 082955 (Jz (Var Sp) (Branch T (Dloc 082968)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 082968
  } else {
    TraceOperation 082958 (Call (Floc 110116) [Var (Local 3),Var (Local 6)] (Local 8));
    PushFrame;
    PushReturnAddress 082958;
    SetLocal 1 GetLocal(3);
    SetLocal 2 GetLocal(6);
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 110117
  }
LocReturn 082958:
  SetLocal 8 call_result;
  TraceOperation 082965 (Jump 082977);
  Jump: 082977
LocOp 082968:
  TraceOperation 082968 (Call (Floc 086692) [Con 5,Var (Local 3),Var (Local 2)] Sp);
  PushFrame;
  PushReturnAddress 082968;
  SetLocal 1 5;
  SetLocal 2 GetLocal(3);
  SetLocal 3 GetLocal(2);
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 086693
LocReturn 082968:
  PushStack call_result;
  TraceOperation 082976 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 082977:
  TraceOperation 082977 (Jump 082984);
  Jump: 082984
LocOp 082980:
  TraceOperation 082980 (Sub (Var (Local 3)) (Con 1) (Local 8));
  SetLocal 8 Sub(GetLocal(3),1);
  Jump: 082984
LocOp 082984:
  TraceOperation 082984 (Loadw (Var (Local 2)) (Con 3) Sp);
  Let b1 = M[Offset(Address(GetLocal(2)),6)];
  Let b2 = M[Offset(Offset(Address(GetLocal(2)),6),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 082988 (Mul (Var (Local 7)) (Var Sp) Sp);
  PopStack popped3;
  PushStack Mul(GetLocal(7),popped3);
  TraceOperation 082992 (Add (Var Sp) (Var (Local 8)) (Local 5));
  PopStack popped4;
  SetLocal 5 Add(popped4,GetLocal(8));
  TraceOperation 082996 (Mod (Var (Local 5)) (Con 16) Sp);
  PushStack Mod(GetLocal(5),16);
  TraceOperation 083000 (Loadw (Con 7756) (Var Sp) (Local 7));
  PopStack popped5;
  Let b6 = M[Offset(007756,Mul(2,popped5))];
  Let b7 = M[Offset(Offset(007756,Mul(2,popped5)),1)];
  SetLocal 7 MakeHiLo(b6,b7);
  TraceOperation 083006 (Div (Var (Local 5)) (Con 16) Sp);
  PushStack Div(GetLocal(5),16);
  TraceOperation 083010 (Add (Var Sp) (Con 8) (Local 5));
  PopStack popped8;
  SetLocal 5 Add(popped8,8);
  TraceOperation 083014 (Loadw (Var (Local 2)) (Var (Local 5)) Sp);
  Let b9 = M[Offset(Address(GetLocal(2)),Mul(2,GetLocal(5)))];
  Let b10 = M[Offset(Offset(Address(GetLocal(2)),Mul(2,GetLocal(5))),1)];
  PushStack MakeHiLo(b9,b10);
  TraceOperation 083018 (And (Var Sp) (Var (Local 7)) Sp);
  PopStack popped11;
  PushStack And(popped11,GetLocal(7));
  TraceOperation 083022 (Jz (Var Sp) (Branch T (Dloc 083038)));
  PopStack popped12;
  if (IsZero(popped12)) {
    Jump: 083038
  } else {
    TraceOperation 083025 (Loadw (Var (Local 2)) (Var (Local 5)) Sp);
    Let b13 = M[Offset(Address(GetLocal(2)),Mul(2,GetLocal(5)))];
    Let b14 = M[Offset(Offset(Address(GetLocal(2)),Mul(2,GetLocal(5))),1)];
    PushStack MakeHiLo(b13,b14);
    TraceOperation 083029 (Sub (Var Sp) (Var (Local 7)) Sp);
    PopStack popped15;
    PushStack Sub(popped15,GetLocal(7));
    TraceOperation 083033 (Storew (Var (Local 2)) (Var (Local 5)) (Var Sp));
    PopStack popped16;
    SetByte Offset(Address(GetLocal(2)),Mul(2,GetLocal(5))) HiByte(popped16);
    SetByte Offset(Offset(Address(GetLocal(2)),Mul(2,GetLocal(5))),1) LoByte(popped16);
    Jump: 083038
  }
LocOp 083038:
  TraceOperation 083038 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 083040:
  MakeRoutineFrame 8;
  if (LessThanByte(num_actuals,8)) {
    SetLocal 8 0;
    if (LessThanByte(num_actuals,7)) {
      SetLocal 7 0;
      if (LessThanByte(num_actuals,6)) {
        SetLocal 6 0;
        if (LessThanByte(num_actuals,5)) {
          SetLocal 5 0;
          if (LessThanByte(num_actuals,4)) {
            SetLocal 4 0;
            if (LessThanByte(num_actuals,3)) {
              SetLocal 3 0;
              if (LessThanByte(num_actuals,2)) {
                SetLocal 2 0;
                if (LessThanByte(num_actuals,1)) {
                  SetLocal 1 0;
                }
              }
            }
          }
        }
      }
    }
  }
  Jump: 083041
LocOp 083041:
  TraceOperation 083041 (Loadw (Var (Local 2)) (Con 0) (Local 5));
  Let b1 = M[Offset(Address(GetLocal(2)),0)];
  Let b2 = M[Offset(Offset(Address(GetLocal(2)),0),1)];
  SetLocal 5 MakeHiLo(b1,b2);
  TraceOperation 083045 (Loadw (Var (Local 2)) (Con 1) (Local 6));
  Let b3 = M[Offset(Address(GetLocal(2)),2)];
  Let b4 = M[Offset(Offset(Address(GetLocal(2)),2),1)];
  SetLocal 6 MakeHiLo(b3,b4);
  TraceOperation 083049 (Jz (Var (Local 4)) (Branch T (Dloc 083065)));
  if (IsZero(GetLocal(4))) {
    Jump: 083065
  } else {
    TraceOperation 083052 (Jg (Var (Local 3)) (Var (Local 1)) (Branch F (Dloc 083065)));
    if (GreaterThan(GetLocal(3),GetLocal(1))) {
      TraceOperation 083056 (Store (Con 4) (Var (Local 1)));
      SetLocal 4 GetLocal(1);
      TraceOperation 083059 (Store (Con 1) (Var (Local 3)));
      SetLocal 1 GetLocal(3);
      TraceOperation 083062 (Store (Con 3) (Var (Local 4)));
      SetLocal 3 GetLocal(4);
      Jump: 083065
    } else {
      Jump: 083065
    }
  }
LocOp 083065:
  TraceOperation 083065 (Jz (Var (Local 5)) (Branch T (Dloc 083109)));
  if (IsZero(GetLocal(5))) {
    Jump: 083109
  } else {
    TraceOperation 083068 (Call (Floc 026172) [Var (Local 1),Con 2] Sp);
    PushFrame;
    PushReturnAddress 083068;
    SetLocal 1 GetLocal(1);
    SetLocal 2 2;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  }
LocReturn 083068:
  PushStack call_result;
  TraceOperation 083075 (Jz (Var Sp) (Branch T (Dloc 083098)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 083098
  } else {
    TraceOperation 083078 (Call (Floc 111316) [Var (Local 1),Var (Local 5)] Sp);
    PushFrame;
    PushReturnAddress 083078;
    SetLocal 1 GetLocal(1);
    SetLocal 2 GetLocal(5);
    MakeRoutineFrame 2;
    Jump: 111317
  }
LocReturn 083078:
  PushStack call_result;
  TraceOperation 083085 (Jz (Var Sp) (Branch T (Dloc 083098)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 083098
  } else {
    TraceOperation 083088 (Call (Floc 110116) [Var (Local 1),Var (Local 5)] (Local 7));
    PushFrame;
    PushReturnAddress 083088;
    SetLocal 1 GetLocal(1);
    SetLocal 2 GetLocal(5);
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 110117
  }
LocReturn 083088:
  SetLocal 7 call_result;
  TraceOperation 083095 (Jump 083106);
  Jump: 083106
LocOp 083098:
  TraceOperation 083098 (CallN (Floc 086692) [Con 5,Var (Local 1),Var (Local 2)]);
  PushFrame;
  PushReturnAddress 083098;
  SetLocal 1 5;
  SetLocal 2 GetLocal(1);
  SetLocal 3 GetLocal(2);
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 086693
LocReturn 083098:
  TraceOperation 083105 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
LocOp 083106:
  TraceOperation 083106 (Jump 083113);
  Jump: 083113
LocOp 083109:
  TraceOperation 083109 (Sub (Var (Local 1)) (Con 1) (Local 7));
  SetLocal 7 Sub(GetLocal(1),1);
  Jump: 083113
LocOp 083113:
  TraceOperation 083113 (Jz (Var (Local 6)) (Branch T (Dloc 083157)));
  if (IsZero(GetLocal(6))) {
    Jump: 083157
  } else {
    TraceOperation 083116 (Call (Floc 026172) [Var (Local 3),Con 2] Sp);
    PushFrame;
    PushReturnAddress 083116;
    SetLocal 1 GetLocal(3);
    SetLocal 2 2;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  }
LocReturn 083116:
  PushStack call_result;
  TraceOperation 083123 (Jz (Var Sp) (Branch T (Dloc 083146)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 083146
  } else {
    TraceOperation 083126 (Call (Floc 111316) [Var (Local 3),Var (Local 6)] Sp);
    PushFrame;
    PushReturnAddress 083126;
    SetLocal 1 GetLocal(3);
    SetLocal 2 GetLocal(6);
    MakeRoutineFrame 2;
    Jump: 111317
  }
LocReturn 083126:
  PushStack call_result;
  TraceOperation 083133 (Jz (Var Sp) (Branch T (Dloc 083146)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 083146
  } else {
    TraceOperation 083136 (Call (Floc 110116) [Var (Local 3),Var (Local 6)] (Local 8));
    PushFrame;
    PushReturnAddress 083136;
    SetLocal 1 GetLocal(3);
    SetLocal 2 GetLocal(6);
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 110117
  }
LocReturn 083136:
  SetLocal 8 call_result;
  TraceOperation 083143 (Jump 083154);
  Jump: 083154
LocOp 083146:
  TraceOperation 083146 (CallN (Floc 086692) [Con 5,Var (Local 3),Var (Local 2)]);
  PushFrame;
  PushReturnAddress 083146;
  SetLocal 1 5;
  SetLocal 2 GetLocal(3);
  SetLocal 3 GetLocal(2);
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 086693
LocReturn 083146:
  TraceOperation 083153 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
LocOp 083154:
  TraceOperation 083154 (Jump 083161);
  Jump: 083161
LocOp 083157:
  TraceOperation 083157 (Sub (Var (Local 3)) (Con 1) (Local 8));
  SetLocal 8 Sub(GetLocal(3),1);
  Jump: 083161
LocOp 083161:
  TraceOperation 083161 (Loadw (Var (Local 2)) (Con 3) Sp);
  Let b1 = M[Offset(Address(GetLocal(2)),6)];
  Let b2 = M[Offset(Offset(Address(GetLocal(2)),6),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 083165 (Mul (Var (Local 7)) (Var Sp) Sp);
  PopStack popped3;
  PushStack Mul(GetLocal(7),popped3);
  TraceOperation 083169 (Add (Var Sp) (Var (Local 8)) (Local 5));
  PopStack popped4;
  SetLocal 5 Add(popped4,GetLocal(8));
  TraceOperation 083173 (Mod (Var (Local 5)) (Con 16) Sp);
  PushStack Mod(GetLocal(5),16);
  TraceOperation 083177 (Loadw (Con 7756) (Var Sp) (Local 7));
  PopStack popped5;
  Let b6 = M[Offset(007756,Mul(2,popped5))];
  Let b7 = M[Offset(Offset(007756,Mul(2,popped5)),1)];
  SetLocal 7 MakeHiLo(b6,b7);
  TraceOperation 083183 (Div (Var (Local 5)) (Con 16) Sp);
  PushStack Div(GetLocal(5),16);
  TraceOperation 083187 (Add (Var Sp) (Con 8) (Local 5));
  PopStack popped8;
  SetLocal 5 Add(popped8,8);
  TraceOperation 083191 (Loadw (Var (Local 2)) (Var (Local 5)) Sp);
  Let b9 = M[Offset(Address(GetLocal(2)),Mul(2,GetLocal(5)))];
  Let b10 = M[Offset(Offset(Address(GetLocal(2)),Mul(2,GetLocal(5))),1)];
  PushStack MakeHiLo(b9,b10);
  TraceOperation 083195 (And (Var Sp) (Var (Local 7)) Sp);
  PopStack popped11;
  PushStack And(popped11,GetLocal(7));
  TraceOperation 083199 (Jz (Var Sp) (Branch F Dtrue));
  PopStack popped12;
  if (IsZero(popped12)) {
    TraceOperation 083202 Rfalse;
    PopFrame;
    PopReturnAddress return_address_13;
    SetResult 0;
    JumpIndirect: (return) return_address_13
  } else {
    PopFrame;
    PopReturnAddress return_address_14;
    SetResult 1;
    JumpIndirect: (return) return_address_14
  }
--------------------------------------------------
LocRoutine 083204:
  MakeRoutineFrame 5;
  if (LessThanByte(num_actuals,5)) {
    SetLocal 5 0;
    if (LessThanByte(num_actuals,4)) {
      SetLocal 4 0;
      if (LessThanByte(num_actuals,3)) {
        SetLocal 3 0;
        if (LessThanByte(num_actuals,2)) {
          SetLocal 2 0;
          if (LessThanByte(num_actuals,1)) {
            SetLocal 1 0;
          }
        }
      }
    }
  }
  Jump: 083205
LocOp 083205:
  TraceOperation 083205 (Call (Floc 110116) [Var (Local 1),Var (Local 2)] (Local 4));
  PushFrame;
  PushReturnAddress 083205;
  SetLocal 1 GetLocal(1);
  SetLocal 2 GetLocal(2);
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 110117
LocReturn 083205:
  SetLocal 4 call_result;
  TraceOperation 083212 (Call (Floc 110116) [Var (Local 3),Var (Local 2)] (Local 5));
  PushFrame;
  PushReturnAddress 083212;
  SetLocal 1 GetLocal(3);
  SetLocal 2 GetLocal(2);
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 110117
LocReturn 083212:
  SetLocal 5 call_result;
  TraceOperation 083219 (Je [Var (Local 4),Var (Local 5)] (Branch F (Dloc 083224)));
  if (Equal(GetLocal(4),GetLocal(5))) {
    TraceOperation 083223 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 083224
  }
LocOp 083224:
  TraceOperation 083224 (Jl (Var (Local 4)) (Var (Local 5)) (Branch F (Dloc 083242)));
  if (LessThan(GetLocal(4),GetLocal(5))) {
    TraceOperation 083228 (Call (Floc 110116) [Var (Local 1),Var (Local 2)] (Local 5));
    PushFrame;
    PushReturnAddress 083228;
    SetLocal 1 GetLocal(1);
    SetLocal 2 GetLocal(2);
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 110117
  } else {
    Jump: 083242
  }
LocReturn 083228:
  SetLocal 5 call_result;
  TraceOperation 083235 (Call (Floc 110116) [Var (Local 3),Var (Local 2)] (Local 4));
  PushFrame;
  PushReturnAddress 083235;
  SetLocal 1 GetLocal(3);
  SetLocal 2 GetLocal(2);
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 110117
LocReturn 083235:
  SetLocal 4 call_result;
  Jump: 083242
LocOp 083242:
  TraceOperation 083242 (Store (Con 1) (Con 1));
  SetLocal 1 1;
  Jump: 083245
LocOp 083245:
  TraceOperation 083245 (Call (Floc 111316) [Var (Local 1),Var (Local 2)] Sp);
  PushFrame;
  PushReturnAddress 083245;
  SetLocal 1 GetLocal(1);
  SetLocal 2 GetLocal(2);
  MakeRoutineFrame 2;
  Jump: 111317
LocReturn 083245:
  PushStack call_result;
  TraceOperation 083252 (Jz (Var Sp) (Branch T (Dloc 083273)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 083273
  } else {
    TraceOperation 083255 (Call (Floc 110116) [Var (Local 1),Var (Local 2)] Sp);
    PushFrame;
    PushReturnAddress 083255;
    SetLocal 1 GetLocal(1);
    SetLocal 2 GetLocal(2);
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 110117
  }
LocReturn 083255:
  PushStack call_result;
  TraceOperation 083262 (Je [Var Sp,Var (Local 4)] (Branch F (Dloc 083273)));
  PopStack popped1;
  if (Equal(popped1,GetLocal(4))) {
    TraceOperation 083266 (CallN (Floc 110088) [Var (Local 1),Var (Local 2),Var (Local 5)]);
    PushFrame;
    PushReturnAddress 083266;
    SetLocal 1 GetLocal(1);
    SetLocal 2 GetLocal(2);
    SetLocal 3 GetLocal(5);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 110089
  } else {
    Jump: 083273
  }
LocReturn 083266:
  Jump: 083273
LocOp 083273:
  TraceOperation 083273 (Inc (Con 1));
  SetLocal 1 Add(GetLocal(1),1);
  TraceOperation 083275 (Jg (Var (Local 1)) (Con 72) (Branch T (Dloc 083284)));
  if (GreaterThan(GetLocal(1),72)) {
    Jump: 083284
  } else {
    TraceOperation 083281 (Jump 083245);
    Jump: 083245
  }
LocOp 083284:
  TraceOperation 083284 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 083288:
  MakeRoutineFrame 5;
  if (LessThanByte(num_actuals,5)) {
    SetLocal 5 0;
    if (LessThanByte(num_actuals,4)) {
      SetLocal 4 0;
      if (LessThanByte(num_actuals,3)) {
        SetLocal 3 0;
        if (LessThanByte(num_actuals,2)) {
          SetLocal 2 0;
          if (LessThanByte(num_actuals,1)) {
            SetLocal 1 0;
          }
        }
      }
    }
  }
  Jump: 083289
LocOp 083289:
  TraceOperation 083289 (Call (Floc 110116) [Var (Local 1),Var (Local 2)] (Local 4));
  PushFrame;
  PushReturnAddress 083289;
  SetLocal 1 GetLocal(1);
  SetLocal 2 GetLocal(2);
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 110117
LocReturn 083289:
  SetLocal 4 call_result;
  TraceOperation 083296 (Call (Floc 110116) [Var (Local 3),Var (Local 2)] (Local 5));
  PushFrame;
  PushReturnAddress 083296;
  SetLocal 1 GetLocal(3);
  SetLocal 2 GetLocal(2);
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 110117
LocReturn 083296:
  SetLocal 5 call_result;
  TraceOperation 083303 (Je [Var (Local 4),Var (Local 5)] (Branch T (Dloc 083308)));
  if (Equal(GetLocal(4),GetLocal(5))) {
    Jump: 083308
  } else {
    TraceOperation 083307 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  }
LocOp 083308:
  TraceOperation 083308 (Store (Con 5) (Con 0));
  SetLocal 5 0;
  TraceOperation 083311 (Store (Con 3) (Con 1));
  SetLocal 3 1;
  Jump: 083314
LocOp 083314:
  TraceOperation 083314 (Call (Floc 111316) [Var (Local 3),Var (Local 2)] Sp);
  PushFrame;
  PushReturnAddress 083314;
  SetLocal 1 GetLocal(3);
  SetLocal 2 GetLocal(2);
  MakeRoutineFrame 2;
  Jump: 111317
LocReturn 083314:
  PushStack call_result;
  TraceOperation 083321 (Jz (Var Sp) (Branch T (Dloc 083342)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 083342
  } else {
    TraceOperation 083324 (Call (Floc 110116) [Var (Local 3),Var (Local 2)] Sp);
    PushFrame;
    PushReturnAddress 083324;
    SetLocal 1 GetLocal(3);
    SetLocal 2 GetLocal(2);
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 110117
  }
LocReturn 083324:
  PushStack call_result;
  TraceOperation 083331 (Jg (Var Sp) (Var (Local 5)) (Branch F (Dloc 083342)));
  PopStack popped1;
  if (GreaterThan(popped1,GetLocal(5))) {
    TraceOperation 083335 (Call (Floc 110116) [Var (Local 3),Var (Local 2)] (Local 5));
    PushFrame;
    PushReturnAddress 083335;
    SetLocal 1 GetLocal(3);
    SetLocal 2 GetLocal(2);
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 110117
  } else {
    Jump: 083342
  }
LocReturn 083335:
  SetLocal 5 call_result;
  Jump: 083342
LocOp 083342:
  TraceOperation 083342 (Inc (Con 3));
  SetLocal 3 Add(GetLocal(3),1);
  TraceOperation 083344 (Jg (Var (Local 3)) (Con 72) (Branch T (Dloc 083353)));
  if (GreaterThan(GetLocal(3),72)) {
    Jump: 083353
  } else {
    TraceOperation 083350 (Jump 083314);
    Jump: 083314
  }
LocOp 083353:
  TraceOperation 083353 (Inc (Con 5));
  SetLocal 5 Add(GetLocal(5),1);
  TraceOperation 083355 (CallN (Floc 110088) [Var (Local 1),Var (Local 2),Var (Local 5)]);
  PushFrame;
  PushReturnAddress 083355;
  SetLocal 1 GetLocal(1);
  SetLocal 2 GetLocal(2);
  SetLocal 3 GetLocal(5);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 110089
LocReturn 083355:
  TraceOperation 083362 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 083364:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 083365
LocOp 083365:
  TraceOperation 083365 (Mul (Var (Local 1)) (Con 3) (Local 3));
  SetLocal 3 Mul(GetLocal(1),3);
  TraceOperation 083369 (Add (Var (Local 3)) (Con 1) Sp);
  PushStack Add(GetLocal(3),1);
  TraceOperation 083373 (Loadw (Con 11790) (Var Sp) (Local 2));
  PopStack popped1;
  Let b2 = M[Offset(011790,Mul(2,popped1))];
  Let b3 = M[Offset(Offset(011790,Mul(2,popped1)),1)];
  SetLocal 2 MakeHiLo(b2,b3);
  TraceOperation 083379 (Je [Var (Local 2),Con -1] (Branch F (Dloc 083386)));
  if (Equal(GetLocal(2),-1)) {
    TraceOperation 083385 Rtrue;
    PopFrame;
    PopReturnAddress return_address_4;
    SetResult 1;
    JumpIndirect: (return) return_address_4
  } else {
    Jump: 083386
  }
LocOp 083386:
  TraceOperation 083386 (Je [Var (Local 2),Con 8] (Branch F (Dloc 083396)));
  if (Equal(GetLocal(2),8)) {
    TraceOperation 083390 (CallN (Floc 083552) [Var (Local 3)]);
    PushFrame;
    PushReturnAddress 083390;
    SetLocal 1 GetLocal(3);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 083553
  } else {
    Jump: 083396
  }
LocReturn 083390:
  TraceOperation 083395 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 083396:
  TraceOperation 083396 (Store (Con 255) (Var (Local 2)));
  SetByte 007684 HiByte(GetLocal(2));
  SetByte 007685 LoByte(GetLocal(2));
  TraceOperation 083399 (Je [Var (Global 239),Con 1] (Branch F (Dloc 083419)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),1)) {
    TraceOperation 083403 (Loadw (Con 11790) (Var (Local 3)) Sp);
    Let b3 = M[Offset(011790,Mul(2,GetLocal(3)))];
    Let b4 = M[Offset(Offset(011790,Mul(2,GetLocal(3))),1)];
    PushStack MakeHiLo(b3,b4);
    TraceOperation 083409 (CallN (Floc 084148) [Var Sp,Con 0,Var (Local 3)]);
    PopStack popped5;
    PushFrame;
    PushReturnAddress 083409;
    SetLocal 1 popped5;
    SetLocal 2 0;
    SetLocal 3 GetLocal(3);
    MakeRoutineFrame 5;
    SetLocal 5 0;
    SetLocal 4 0;
    Jump: 084149
  } else {
    Jump: 083419
  }
LocReturn 083409:
  TraceOperation 083416 (Jump 083549);
  Jump: 083549
LocOp 083419:
  TraceOperation 083419 (Je [Var (Global 239),Con 2] (Branch F (Dloc 083439)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),2)) {
    TraceOperation 083423 (Loadw (Con 11790) (Var (Local 3)) Sp);
    Let b3 = M[Offset(011790,Mul(2,GetLocal(3)))];
    Let b4 = M[Offset(Offset(011790,Mul(2,GetLocal(3))),1)];
    PushStack MakeHiLo(b3,b4);
    TraceOperation 083429 (CallN (Floc 084148) [Var Sp,Con 0,Var (Local 3)]);
    PopStack popped5;
    PushFrame;
    PushReturnAddress 083429;
    SetLocal 1 popped5;
    SetLocal 2 0;
    SetLocal 3 GetLocal(3);
    MakeRoutineFrame 5;
    SetLocal 5 0;
    SetLocal 4 0;
    Jump: 084149
  } else {
    Jump: 083439
  }
LocReturn 083429:
  TraceOperation 083436 (Jump 083549);
  Jump: 083549
LocOp 083439:
  TraceOperation 083439 (Je [Var (Global 239),Con 3] (Branch F (Dloc 083459)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),3)) {
    TraceOperation 083443 (Loadw (Con 11790) (Var (Local 3)) Sp);
    Let b3 = M[Offset(011790,Mul(2,GetLocal(3)))];
    Let b4 = M[Offset(Offset(011790,Mul(2,GetLocal(3))),1)];
    PushStack MakeHiLo(b3,b4);
    TraceOperation 083449 (CallN (Floc 084040) [Var Sp,Con 0,Var (Local 3)]);
    PopStack popped5;
    PushFrame;
    PushReturnAddress 083449;
    SetLocal 1 popped5;
    SetLocal 2 0;
    SetLocal 3 GetLocal(3);
    MakeRoutineFrame 5;
    SetLocal 5 0;
    SetLocal 4 0;
    Jump: 084041
  } else {
    Jump: 083459
  }
LocReturn 083449:
  TraceOperation 083456 (Jump 083549);
  Jump: 083549
LocOp 083459:
  TraceOperation 083459 (Je [Var (Global 239),Con 4] (Branch F (Dloc 083479)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),4)) {
    TraceOperation 083463 (Loadw (Con 11790) (Var (Local 3)) Sp);
    Let b3 = M[Offset(011790,Mul(2,GetLocal(3)))];
    Let b4 = M[Offset(Offset(011790,Mul(2,GetLocal(3))),1)];
    PushStack MakeHiLo(b3,b4);
    TraceOperation 083469 (CallN (Floc 083588) [Var Sp,Con 0,Var (Local 3)]);
    PopStack popped5;
    PushFrame;
    PushReturnAddress 083469;
    SetLocal 1 popped5;
    SetLocal 2 0;
    SetLocal 3 GetLocal(3);
    MakeRoutineFrame 9;
    SetLocal 9 0;
    SetLocal 8 0;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    Jump: 083589
  } else {
    Jump: 083479
  }
LocReturn 083469:
  TraceOperation 083476 (Jump 083549);
  Jump: 083549
LocOp 083479:
  TraceOperation 083479 (Je [Var (Global 239),Con 5] (Branch F (Dloc 083499)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),5)) {
    TraceOperation 083483 (Loadw (Con 11790) (Var (Local 3)) Sp);
    Let b3 = M[Offset(011790,Mul(2,GetLocal(3)))];
    Let b4 = M[Offset(Offset(011790,Mul(2,GetLocal(3))),1)];
    PushStack MakeHiLo(b3,b4);
    TraceOperation 083489 (CallN (Floc 084040) [Var Sp,Con 1,Var (Local 3)]);
    PopStack popped5;
    PushFrame;
    PushReturnAddress 083489;
    SetLocal 1 popped5;
    SetLocal 2 1;
    SetLocal 3 GetLocal(3);
    MakeRoutineFrame 5;
    SetLocal 5 0;
    SetLocal 4 0;
    Jump: 084041
  } else {
    Jump: 083499
  }
LocReturn 083489:
  TraceOperation 083496 (Jump 083549);
  Jump: 083549
LocOp 083499:
  TraceOperation 083499 (Je [Var (Global 239),Con 6] (Branch F (Dloc 083519)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),6)) {
    TraceOperation 083503 (Loadw (Con 11790) (Var (Local 3)) Sp);
    Let b3 = M[Offset(011790,Mul(2,GetLocal(3)))];
    Let b4 = M[Offset(Offset(011790,Mul(2,GetLocal(3))),1)];
    PushStack MakeHiLo(b3,b4);
    TraceOperation 083509 (CallN (Floc 083588) [Var Sp,Con 1,Var (Local 3)]);
    PopStack popped5;
    PushFrame;
    PushReturnAddress 083509;
    SetLocal 1 popped5;
    SetLocal 2 1;
    SetLocal 3 GetLocal(3);
    MakeRoutineFrame 9;
    SetLocal 9 0;
    SetLocal 8 0;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    Jump: 083589
  } else {
    Jump: 083519
  }
LocReturn 083509:
  TraceOperation 083516 (Jump 083549);
  Jump: 083549
LocOp 083519:
  TraceOperation 083519 (Je [Var (Global 239),Con 7] (Branch F (Dloc 083542)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),7)) {
    TraceOperation 083523 (CallN (Floc 083552) [Var (Local 3)]);
    PushFrame;
    PushReturnAddress 083523;
    SetLocal 1 GetLocal(3);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 083553
  } else {
    Jump: 083542
  }
LocReturn 083523:
  TraceOperation 083528 (Loadw (Con 11790) (Var (Local 3)) Sp);
  Let b1 = M[Offset(011790,Mul(2,GetLocal(3)))];
  Let b2 = M[Offset(Offset(011790,Mul(2,GetLocal(3))),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 083534 (CallN (Floc 084244) [Var Sp]);
  PopStack popped3;
  PushFrame;
  PushReturnAddress 083534;
  SetLocal 1 popped3;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 084245
LocReturn 083534:
  TraceOperation 083539 (Jump 083549);
  Jump: 083549
LocOp 083542:
  TraceOperation 083542 (Je [Var (Global 239),Con 8] (Branch F (Dloc 083549)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),8)) {
    TraceOperation 083546 (Jump 083549);
    Jump: 083549
  } else {
    Jump: 083549
  }
LocOp 083549:
  TraceOperation 083549 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 083552:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 083553
LocOp 083553:
  TraceOperation 083553 (Add (Var (Local 1)) (Con 1) Sp);
  PushStack Add(GetLocal(1),1);
  TraceOperation 083557 (Loadw (Con 11790) (Var Sp) (Local 2));
  PopStack popped1;
  Let b2 = M[Offset(011790,Mul(2,popped1))];
  Let b3 = M[Offset(Offset(011790,Mul(2,popped1)),1)];
  SetLocal 2 MakeHiLo(b2,b3);
  TraceOperation 083563 (Add (Var (Local 1)) (Con 2) Sp);
  PushStack Add(GetLocal(1),2);
  TraceOperation 083567 (Loadw (Con 11790) (Var Sp) Sp);
  PopStack popped4;
  Let b5 = M[Offset(011790,Mul(2,popped4))];
  Let b6 = M[Offset(Offset(011790,Mul(2,popped4)),1)];
  PushStack MakeHiLo(b5,b6);
  TraceOperation 083573 (Print_paddr (Var Sp));
  PopStack popped7;
  GamePrint GetText(PackedAddress Z5(popped7));
  TraceOperation 083575 (Je [Var (Local 2),Con 8] (Branch F (Dloc 083582)));
  if (Equal(GetLocal(2),8)) {
    TraceOperation 083579 (Print_ret ".");
    GamePrint ".\n";
    PopFrame;
    PopReturnAddress return_address_8;
    SetResult 1;
    JumpIndirect: (return) return_address_8
  } else {
    Jump: 083582
  }
LocOp 083582:
  TraceOperation 083582 (Print ":\n");
  GamePrint ":\n";
  TraceOperation 083587 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 083588:
  MakeRoutineFrame 9;
  if (LessThanByte(num_actuals,9)) {
    SetLocal 9 0;
    if (LessThanByte(num_actuals,8)) {
      SetLocal 8 0;
      if (LessThanByte(num_actuals,7)) {
        SetLocal 7 0;
        if (LessThanByte(num_actuals,6)) {
          SetLocal 6 0;
          if (LessThanByte(num_actuals,5)) {
            SetLocal 5 0;
            if (LessThanByte(num_actuals,4)) {
              SetLocal 4 0;
              if (LessThanByte(num_actuals,3)) {
                SetLocal 3 0;
                if (LessThanByte(num_actuals,2)) {
                  SetLocal 2 0;
                  if (LessThanByte(num_actuals,1)) {
                    SetLocal 1 0;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  Jump: 083589
LocOp 083589:
  TraceOperation 083589 (Loadw (Var (Local 1)) (Con 0) (Local 6));
  Let b1 = M[Offset(Address(GetLocal(1)),0)];
  Let b2 = M[Offset(Offset(Address(GetLocal(1)),0),1)];
  SetLocal 6 MakeHiLo(b1,b2);
  TraceOperation 083593 (Loadw (Var (Local 1)) (Con 1) (Local 7));
  Let b3 = M[Offset(Address(GetLocal(1)),2)];
  Let b4 = M[Offset(Offset(Address(GetLocal(1)),2),1)];
  SetLocal 7 MakeHiLo(b3,b4);
  TraceOperation 083597 (Loadw (Var (Local 1)) (Con 4) (Local 8));
  Let b5 = M[Offset(Address(GetLocal(1)),8)];
  Let b6 = M[Offset(Offset(Address(GetLocal(1)),8),1)];
  SetLocal 8 MakeHiLo(b5,b6);
  TraceOperation 083601 (Loadw (Var (Local 1)) (Con 5) (Local 9));
  Let b7 = M[Offset(Address(GetLocal(1)),10)];
  Let b8 = M[Offset(Offset(Address(GetLocal(1)),10),1)];
  SetLocal 9 MakeHiLo(b7,b8);
  TraceOperation 083605 (Jz (Var (Local 6)) (Branch T (Dloc 083744)));
  if (IsZero(GetLocal(6))) {
    Jump: 083744
  } else {
    TraceOperation 083609 (Jz (Var (Local 7)) (Branch T (Dloc 083744)));
    if (IsZero(GetLocal(7))) {
      Jump: 083744
    } else {
      TraceOperation 083613 (Store (Con 4) (Con 1));
      SetLocal 4 1;
      Jump: 083616
    }
  }
LocOp 083616:
  TraceOperation 083616 (Call (Floc 111316) [Var (Local 4),Var (Local 6)] Sp);
  PushFrame;
  PushReturnAddress 083616;
  SetLocal 1 GetLocal(4);
  SetLocal 2 GetLocal(6);
  MakeRoutineFrame 2;
  Jump: 111317
LocReturn 083616:
  PushStack call_result;
  TraceOperation 083623 (Jz (Var Sp) (Branch T (Dloc 083732)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 083732
  } else {
    TraceOperation 083627 (Store (Con 5) (Con 1));
    SetLocal 5 1;
    Jump: 083630
  }
LocOp 083630:
  TraceOperation 083630 (Call (Floc 111316) [Var (Local 5),Var (Local 7)] Sp);
  PushFrame;
  PushReturnAddress 083630;
  SetLocal 1 GetLocal(5);
  SetLocal 2 GetLocal(7);
  MakeRoutineFrame 2;
  Jump: 111317
LocReturn 083630:
  PushStack call_result;
  TraceOperation 083637 (Jz (Var Sp) (Branch T (Dloc 083721)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 083721
  } else {
    TraceOperation 083641 (Jz (Var (Local 2)) (Branch T (Dloc 083651)));
    if (IsZero(GetLocal(2))) {
      Jump: 083651
    } else {
      TraceOperation 083644 (Jg (Var (Local 5)) (Var (Local 4)) (Branch F (Dloc 083651)));
      if (GreaterThan(GetLocal(5),GetLocal(4))) {
        TraceOperation 083648 (Jump 083721);
        Jump: 083721
      } else {
        Jump: 083651
      }
    }
  }
LocOp 083651:
  TraceOperation 083651 (Call (Floc 083040) [Var (Local 4),Var (Local 1),Var (Local 5)] Sp);
  PushFrame;
  PushReturnAddress 083651;
  SetLocal 1 GetLocal(4);
  SetLocal 2 GetLocal(1);
  SetLocal 3 GetLocal(5);
  MakeRoutineFrame 8;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 083041
LocReturn 083651:
  PushStack call_result;
  TraceOperation 083659 (Jz (Var Sp) (Branch T (Dloc 083721)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 083721
  } else {
    TraceOperation 083662 (Jz (Var (Local 3)) (Branch T (Dloc 083673)));
    if (IsZero(GetLocal(3))) {
      Jump: 083673
    } else {
      TraceOperation 083665 (CallN (Floc 083552) [Var (Local 3)]);
      PushFrame;
      PushReturnAddress 083665;
      SetLocal 1 GetLocal(3);
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 083553
    }
  }
LocReturn 083665:
  TraceOperation 083670 (Store (Con 3) (Con 0));
  SetLocal 3 0;
  Jump: 083673
LocOp 083673:
  TraceOperation 083673 (Print "  ");
  GamePrint "  ";
  TraceOperation 083676 (CallN (Floc 081964) [Var (Local 4)]);
  PushFrame;
  PushReturnAddress 083676;
  SetLocal 1 GetLocal(4);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 081965
LocReturn 083676:
  TraceOperation 083681 (Jz (Var (Local 2)) (Branch T (Dloc 083700)));
  if (IsZero(GetLocal(2))) {
    Jump: 083700
  } else {
    TraceOperation 083684 (Print "  <=>  ");
    GamePrint "  <=>  ";
    TraceOperation 083697 (Jump 083713);
    Jump: 083713
  }
LocOp 083700:
  TraceOperation 083700 (Print "  >=>  ");
  GamePrint "  >=>  ";
  Jump: 083713
LocOp 083713:
  TraceOperation 083713 (CallN (Floc 081916) [Var (Local 5)]);
  PushFrame;
  PushReturnAddress 083713;
  SetLocal 1 GetLocal(5);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 081917
LocReturn 083713:
  TraceOperation 083718 (Print "\n");
  GamePrint "\n";
  Jump: 083721
LocOp 083721:
  TraceOperation 083721 (Inc (Con 5));
  SetLocal 5 Add(GetLocal(5),1);
  TraceOperation 083723 (Jg (Var (Local 5)) (Con 72) (Branch T (Dloc 083732)));
  if (GreaterThan(GetLocal(5),72)) {
    Jump: 083732
  } else {
    TraceOperation 083729 (Jump 083630);
    Jump: 083630
  }
LocOp 083732:
  TraceOperation 083732 (Inc (Con 4));
  SetLocal 4 Add(GetLocal(4),1);
  TraceOperation 083734 (Jg (Var (Local 4)) (Con 72) (Branch T (Dloc 083743)));
  if (GreaterThan(GetLocal(4),72)) {
    Jump: 083743
  } else {
    TraceOperation 083740 (Jump 083616);
    Jump: 083616
  }
LocOp 083743:
  TraceOperation 083743 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 083744:
  TraceOperation 083744 (Jz (Var (Local 6)) (Branch T (Dloc 083847)));
  if (IsZero(GetLocal(6))) {
    Jump: 083847
  } else {
    TraceOperation 083748 (Jz (Var (Local 7)) (Branch F (Dloc 083847)));
    if (IsZero(GetLocal(7))) {
      TraceOperation 083752 (Store (Con 4) (Con 1));
      SetLocal 4 1;
      Jump: 083755
    } else {
      Jump: 083847
    }
  }
LocOp 083755:
  TraceOperation 083755 (Call (Floc 111316) [Var (Local 4),Var (Local 6)] Sp);
  PushFrame;
  PushReturnAddress 083755;
  SetLocal 1 GetLocal(4);
  SetLocal 2 GetLocal(6);
  MakeRoutineFrame 2;
  Jump: 111317
LocReturn 083755:
  PushStack call_result;
  TraceOperation 083762 (Jz (Var Sp) (Branch T (Dloc 083835)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 083835
  } else {
    TraceOperation 083766 (Store (Con 5) (Con 1));
    SetLocal 5 1;
    Jump: 083769
  }
LocOp 083769:
  TraceOperation 083769 (Loadw (Var (Local 1)) (Con 3) Sp);
  Let b1 = M[Offset(Address(GetLocal(1)),6)];
  Let b2 = M[Offset(Offset(Address(GetLocal(1)),6),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 083773 (Jg (Var (Local 5)) (Var Sp) (Branch T (Dloc 083835)));
  PopStack popped3;
  if (GreaterThan(GetLocal(5),popped3)) {
    Jump: 083835
  } else {
    TraceOperation 083777 (Call (Floc 083040) [Var (Local 4),Var (Local 1),Var (Local 5)] Sp);
    PushFrame;
    PushReturnAddress 083777;
    SetLocal 1 GetLocal(4);
    SetLocal 2 GetLocal(1);
    SetLocal 3 GetLocal(5);
    MakeRoutineFrame 8;
    SetLocal 8 0;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    Jump: 083041
  }
LocReturn 083777:
  PushStack call_result;
  TraceOperation 083785 (Jz (Var Sp) (Branch T (Dloc 083830)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 083830
  } else {
    TraceOperation 083788 (Jz (Var (Local 3)) (Branch T (Dloc 083799)));
    if (IsZero(GetLocal(3))) {
      Jump: 083799
    } else {
      TraceOperation 083791 (CallN (Floc 083552) [Var (Local 3)]);
      PushFrame;
      PushReturnAddress 083791;
      SetLocal 1 GetLocal(3);
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 083553
    }
  }
LocReturn 083791:
  TraceOperation 083796 (Store (Con 3) (Con 0));
  SetLocal 3 0;
  Jump: 083799
LocOp 083799:
  TraceOperation 083799 (Print "  ");
  GamePrint "  ";
  TraceOperation 083802 (CallN (Floc 081964) [Var (Local 4)]);
  PushFrame;
  PushReturnAddress 083802;
  SetLocal 1 GetLocal(4);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 081965
LocReturn 083802:
  TraceOperation 083807 (Print "  >=>  ");
  GamePrint "  >=>  ";
  TraceOperation 083820 (CallN (Floc 110196) [Var (Local 9),Con 69,Var (Local 5)]);
  PushFrame;
  PushReturnAddress 083820;
  SetLocal 1 GetLocal(9);
  SetLocal 2 69;
  SetLocal 3 GetLocal(5);
  MakeRoutineFrame 15;
  SetLocal 15 0;
  SetLocal 14 0;
  SetLocal 13 0;
  SetLocal 12 0;
  SetLocal 11 0;
  SetLocal 10 0;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 110197
LocReturn 083820:
  TraceOperation 083827 (Print "\n");
  GamePrint "\n";
  Jump: 083830
LocOp 083830:
  TraceOperation 083830 (Inc (Con 5));
  SetLocal 5 Add(GetLocal(5),1);
  TraceOperation 083832 (Jump 083769);
  Jump: 083769
LocOp 083835:
  TraceOperation 083835 (Inc (Con 4));
  SetLocal 4 Add(GetLocal(4),1);
  TraceOperation 083837 (Jg (Var (Local 4)) (Con 72) (Branch T (Dloc 083846)));
  if (GreaterThan(GetLocal(4),72)) {
    Jump: 083846
  } else {
    TraceOperation 083843 (Jump 083755);
    Jump: 083755
  }
LocOp 083846:
  TraceOperation 083846 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 083847:
  TraceOperation 083847 (Jz (Var (Local 6)) (Branch F (Dloc 083950)));
  if (IsZero(GetLocal(6))) {
    TraceOperation 083851 (Jz (Var (Local 7)) (Branch T (Dloc 083950)));
    if (IsZero(GetLocal(7))) {
      Jump: 083950
    } else {
      TraceOperation 083855 (Store (Con 4) (Con 1));
      SetLocal 4 1;
      Jump: 083858
    }
  } else {
    Jump: 083950
  }
LocOp 083858:
  TraceOperation 083858 (Loadw (Var (Local 1)) (Con 2) Sp);
  Let b1 = M[Offset(Address(GetLocal(1)),4)];
  Let b2 = M[Offset(Offset(Address(GetLocal(1)),4),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 083862 (Jg (Var (Local 4)) (Var Sp) (Branch T (Dloc 083949)));
  PopStack popped3;
  if (GreaterThan(GetLocal(4),popped3)) {
    Jump: 083949
  } else {
    TraceOperation 083867 (Store (Con 5) (Con 1));
    SetLocal 5 1;
    Jump: 083870
  }
LocOp 083870:
  TraceOperation 083870 (Call (Floc 111316) [Var (Local 5),Var (Local 7)] Sp);
  PushFrame;
  PushReturnAddress 083870;
  SetLocal 1 GetLocal(5);
  SetLocal 2 GetLocal(7);
  MakeRoutineFrame 2;
  Jump: 111317
LocReturn 083870:
  PushStack call_result;
  TraceOperation 083877 (Jz (Var Sp) (Branch T (Dloc 083933)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 083933
  } else {
    TraceOperation 083880 (Call (Floc 083040) [Var (Local 4),Var (Local 1),Var (Local 5)] Sp);
    PushFrame;
    PushReturnAddress 083880;
    SetLocal 1 GetLocal(4);
    SetLocal 2 GetLocal(1);
    SetLocal 3 GetLocal(5);
    MakeRoutineFrame 8;
    SetLocal 8 0;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    Jump: 083041
  }
LocReturn 083880:
  PushStack call_result;
  TraceOperation 083888 (Jz (Var Sp) (Branch T (Dloc 083933)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 083933
  } else {
    TraceOperation 083891 (Jz (Var (Local 3)) (Branch T (Dloc 083902)));
    if (IsZero(GetLocal(3))) {
      Jump: 083902
    } else {
      TraceOperation 083894 (CallN (Floc 083552) [Var (Local 3)]);
      PushFrame;
      PushReturnAddress 083894;
      SetLocal 1 GetLocal(3);
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 083553
    }
  }
LocReturn 083894:
  TraceOperation 083899 (Store (Con 3) (Con 0));
  SetLocal 3 0;
  Jump: 083902
LocOp 083902:
  TraceOperation 083902 (Print "  ");
  GamePrint "  ";
  TraceOperation 083905 (CallN (Floc 110196) [Var (Local 8),Con 69,Var (Local 4)]);
  PushFrame;
  PushReturnAddress 083905;
  SetLocal 1 GetLocal(8);
  SetLocal 2 69;
  SetLocal 3 GetLocal(4);
  MakeRoutineFrame 15;
  SetLocal 15 0;
  SetLocal 14 0;
  SetLocal 13 0;
  SetLocal 12 0;
  SetLocal 11 0;
  SetLocal 10 0;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 110197
LocReturn 083905:
  TraceOperation 083912 (Print "  >=>  ");
  GamePrint "  >=>  ";
  TraceOperation 083925 (CallN (Floc 081916) [Var (Local 5)]);
  PushFrame;
  PushReturnAddress 083925;
  SetLocal 1 GetLocal(5);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 081917
LocReturn 083925:
  TraceOperation 083930 (Print "\n");
  GamePrint "\n";
  Jump: 083933
LocOp 083933:
  TraceOperation 083933 (Inc (Con 5));
  SetLocal 5 Add(GetLocal(5),1);
  TraceOperation 083935 (Jg (Var (Local 5)) (Con 72) (Branch T (Dloc 083944)));
  if (GreaterThan(GetLocal(5),72)) {
    Jump: 083944
  } else {
    TraceOperation 083941 (Jump 083870);
    Jump: 083870
  }
LocOp 083944:
  TraceOperation 083944 (Inc (Con 4));
  SetLocal 4 Add(GetLocal(4),1);
  TraceOperation 083946 (Jump 083858);
  Jump: 083858
LocOp 083949:
  TraceOperation 083949 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 083950:
  TraceOperation 083950 (Store (Con 4) (Con 1));
  SetLocal 4 1;
  Jump: 083953
LocOp 083953:
  TraceOperation 083953 (Loadw (Var (Local 1)) (Con 2) Sp);
  Let b1 = M[Offset(Address(GetLocal(1)),4)];
  Let b2 = M[Offset(Offset(Address(GetLocal(1)),4),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 083957 (Jg (Var (Local 4)) (Var Sp) (Branch T (Dloc 084039)));
  PopStack popped3;
  if (GreaterThan(GetLocal(4),popped3)) {
    Jump: 084039
  } else {
    TraceOperation 083962 (Store (Con 5) (Con 1));
    SetLocal 5 1;
    Jump: 083965
  }
LocOp 083965:
  TraceOperation 083965 (Loadw (Var (Local 1)) (Con 3) Sp);
  Let b1 = M[Offset(Address(GetLocal(1)),6)];
  Let b2 = M[Offset(Offset(Address(GetLocal(1)),6),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 083969 (Jg (Var (Local 5)) (Var Sp) (Branch T (Dloc 084034)));
  PopStack popped3;
  if (GreaterThan(GetLocal(5),popped3)) {
    Jump: 084034
  } else {
    TraceOperation 083974 (Call (Floc 083040) [Var (Local 4),Var (Local 1),Var (Local 5)] Sp);
    PushFrame;
    PushReturnAddress 083974;
    SetLocal 1 GetLocal(4);
    SetLocal 2 GetLocal(1);
    SetLocal 3 GetLocal(5);
    MakeRoutineFrame 8;
    SetLocal 8 0;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    Jump: 083041
  }
LocReturn 083974:
  PushStack call_result;
  TraceOperation 083982 (Jz (Var Sp) (Branch T (Dloc 084029)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 084029
  } else {
    TraceOperation 083985 (Jz (Var (Local 3)) (Branch T (Dloc 083996)));
    if (IsZero(GetLocal(3))) {
      Jump: 083996
    } else {
      TraceOperation 083988 (CallN (Floc 083552) [Var (Local 3)]);
      PushFrame;
      PushReturnAddress 083988;
      SetLocal 1 GetLocal(3);
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 083553
    }
  }
LocReturn 083988:
  TraceOperation 083993 (Store (Con 3) (Con 0));
  SetLocal 3 0;
  Jump: 083996
LocOp 083996:
  TraceOperation 083996 (Print "  ");
  GamePrint "  ";
  TraceOperation 083999 (CallN (Floc 110196) [Var (Local 8),Con 69,Var (Local 4)]);
  PushFrame;
  PushReturnAddress 083999;
  SetLocal 1 GetLocal(8);
  SetLocal 2 69;
  SetLocal 3 GetLocal(4);
  MakeRoutineFrame 15;
  SetLocal 15 0;
  SetLocal 14 0;
  SetLocal 13 0;
  SetLocal 12 0;
  SetLocal 11 0;
  SetLocal 10 0;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 110197
LocReturn 083999:
  TraceOperation 084006 (Print "  >=>  ");
  GamePrint "  >=>  ";
  TraceOperation 084019 (CallN (Floc 110196) [Var (Local 9),Con 69,Var (Local 5)]);
  PushFrame;
  PushReturnAddress 084019;
  SetLocal 1 GetLocal(9);
  SetLocal 2 69;
  SetLocal 3 GetLocal(5);
  MakeRoutineFrame 15;
  SetLocal 15 0;
  SetLocal 14 0;
  SetLocal 13 0;
  SetLocal 12 0;
  SetLocal 11 0;
  SetLocal 10 0;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 110197
LocReturn 084019:
  TraceOperation 084026 (Print "\n");
  GamePrint "\n";
  Jump: 084029
LocOp 084029:
  TraceOperation 084029 (Inc (Con 5));
  SetLocal 5 Add(GetLocal(5),1);
  TraceOperation 084031 (Jump 083965);
  Jump: 083965
LocOp 084034:
  TraceOperation 084034 (Inc (Con 4));
  SetLocal 4 Add(GetLocal(4),1);
  TraceOperation 084036 (Jump 083953);
  Jump: 083953
LocOp 084039:
  TraceOperation 084039 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 084040:
  MakeRoutineFrame 5;
  if (LessThanByte(num_actuals,5)) {
    SetLocal 5 0;
    if (LessThanByte(num_actuals,4)) {
      SetLocal 4 0;
      if (LessThanByte(num_actuals,3)) {
        SetLocal 3 0;
        if (LessThanByte(num_actuals,2)) {
          SetLocal 2 0;
          if (LessThanByte(num_actuals,1)) {
            SetLocal 1 0;
          }
        }
      }
    }
  }
  Jump: 084041
LocOp 084041:
  TraceOperation 084041 (Store (Con 4) (Con 1));
  SetLocal 4 1;
  Jump: 084044
LocOp 084044:
  TraceOperation 084044 (Call (Floc 111316) [Var (Local 4),Var (Local 1)] Sp);
  PushFrame;
  PushReturnAddress 084044;
  SetLocal 1 GetLocal(4);
  SetLocal 2 GetLocal(1);
  MakeRoutineFrame 2;
  Jump: 111317
LocReturn 084044:
  PushStack call_result;
  TraceOperation 084051 (Jz (Var Sp) (Branch T (Dloc 084133)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 084133
  } else {
    TraceOperation 084055 (Call (Floc 110116) [Var (Local 4),Var (Local 1)] (Local 5));
    PushFrame;
    PushReturnAddress 084055;
    SetLocal 1 GetLocal(4);
    SetLocal 2 GetLocal(1);
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 110117
  }
LocReturn 084055:
  SetLocal 5 call_result;
  TraceOperation 084062 (Jz (Var (Local 2)) (Branch T (Dloc 084072)));
  if (IsZero(GetLocal(2))) {
    Jump: 084072
  } else {
    TraceOperation 084065 (Jl (Var (Local 5)) (Var (Local 4)) (Branch F (Dloc 084072)));
    if (LessThan(GetLocal(5),GetLocal(4))) {
      TraceOperation 084069 (Jump 084133);
      Jump: 084133
    } else {
      Jump: 084072
    }
  }
LocOp 084072:
  TraceOperation 084072 (Jz (Var (Local 5)) (Branch F (Dloc 084078)));
  if (IsZero(GetLocal(5))) {
    TraceOperation 084075 (Jump 084133);
    Jump: 084133
  } else {
    Jump: 084078
  }
LocOp 084078:
  TraceOperation 084078 (Jz (Var (Local 3)) (Branch T (Dloc 084089)));
  if (IsZero(GetLocal(3))) {
    Jump: 084089
  } else {
    TraceOperation 084081 (CallN (Floc 083552) [Var (Local 3)]);
    PushFrame;
    PushReturnAddress 084081;
    SetLocal 1 GetLocal(3);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 083553
  }
LocReturn 084081:
  TraceOperation 084086 (Store (Con 3) (Con 0));
  SetLocal 3 0;
  Jump: 084089
LocOp 084089:
  TraceOperation 084089 (Print "  ");
  GamePrint "  ";
  TraceOperation 084092 (CallN (Floc 081964) [Var (Local 4)]);
  PushFrame;
  PushReturnAddress 084092;
  SetLocal 1 GetLocal(4);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 081965
LocReturn 084092:
  TraceOperation 084097 (Jz (Var (Local 2)) (Branch T (Dloc 084112)));
  if (IsZero(GetLocal(2))) {
    Jump: 084112
  } else {
    TraceOperation 084100 (Print "  ==  ");
    GamePrint "  ==  ";
    TraceOperation 084109 (Jump 084125);
    Jump: 084125
  }
LocOp 084112:
  TraceOperation 084112 (Print "  >=>  ");
  GamePrint "  >=>  ";
  Jump: 084125
LocOp 084125:
  TraceOperation 084125 (CallN (Floc 081916) [Var (Local 5)]);
  PushFrame;
  PushReturnAddress 084125;
  SetLocal 1 GetLocal(5);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 081917
LocReturn 084125:
  TraceOperation 084130 (Print "\n");
  GamePrint "\n";
  Jump: 084133
LocOp 084133:
  TraceOperation 084133 (Inc (Con 4));
  SetLocal 4 Add(GetLocal(4),1);
  TraceOperation 084135 (Jg (Var (Local 4)) (Con 72) (Branch T (Dloc 084144)));
  if (GreaterThan(GetLocal(4),72)) {
    Jump: 084144
  } else {
    TraceOperation 084141 (Jump 084044);
    Jump: 084044
  }
LocOp 084144:
  TraceOperation 084144 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 084148:
  MakeRoutineFrame 5;
  if (LessThanByte(num_actuals,5)) {
    SetLocal 5 0;
    if (LessThanByte(num_actuals,4)) {
      SetLocal 4 0;
      if (LessThanByte(num_actuals,3)) {
        SetLocal 3 0;
        if (LessThanByte(num_actuals,2)) {
          SetLocal 2 0;
          if (LessThanByte(num_actuals,1)) {
            SetLocal 1 0;
          }
        }
      }
    }
  }
  Jump: 084149
LocOp 084149:
  TraceOperation 084149 (Store (Con 4) (Con 1));
  SetLocal 4 1;
  Jump: 084152
LocOp 084152:
  TraceOperation 084152 (Store (Con 5) (Con 1));
  SetLocal 5 1;
  Jump: 084155
LocOp 084155:
  TraceOperation 084155 (Call (Floc 111316) [Var (Local 5),Var (Local 1)] Sp);
  PushFrame;
  PushReturnAddress 084155;
  SetLocal 1 GetLocal(5);
  SetLocal 2 GetLocal(1);
  MakeRoutineFrame 2;
  Jump: 111317
LocReturn 084155:
  PushStack call_result;
  TraceOperation 084162 (Jz (Var Sp) (Branch T (Dloc 084219)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 084219
  } else {
    TraceOperation 084165 (Call (Floc 110116) [Var (Local 5),Var (Local 1)] Sp);
    PushFrame;
    PushReturnAddress 084165;
    SetLocal 1 GetLocal(5);
    SetLocal 2 GetLocal(1);
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 110117
  }
LocReturn 084165:
  PushStack call_result;
  TraceOperation 084172 (Je [Var Sp,Var (Local 4)] (Branch T (Dloc 084179)));
  PopStack popped1;
  if (Equal(popped1,GetLocal(4))) {
    Jump: 084179
  } else {
    TraceOperation 084176 (Jump 084219);
    Jump: 084219
  }
LocOp 084179:
  TraceOperation 084179 (Jz (Var (Local 3)) (Branch T (Dloc 084190)));
  if (IsZero(GetLocal(3))) {
    Jump: 084190
  } else {
    TraceOperation 084182 (CallN (Floc 083552) [Var (Local 3)]);
    PushFrame;
    PushReturnAddress 084182;
    SetLocal 1 GetLocal(3);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 083553
  }
LocReturn 084182:
  TraceOperation 084187 (Store (Con 3) (Con 0));
  SetLocal 3 0;
  Jump: 084190
LocOp 084190:
  TraceOperation 084190 (Print "  ");
  GamePrint "  ";
  TraceOperation 084193 (CallN (Floc 081964) [Var (Local 4)]);
  PushFrame;
  PushReturnAddress 084193;
  SetLocal 1 GetLocal(4);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 081965
LocReturn 084193:
  TraceOperation 084198 (Print "  >=>  ");
  GamePrint "  >=>  ";
  TraceOperation 084211 (CallN (Floc 081916) [Var (Local 5)]);
  PushFrame;
  PushReturnAddress 084211;
  SetLocal 1 GetLocal(5);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 081917
LocReturn 084211:
  TraceOperation 084216 (Print "\n");
  GamePrint "\n";
  Jump: 084219
LocOp 084219:
  TraceOperation 084219 (Inc (Con 5));
  SetLocal 5 Add(GetLocal(5),1);
  TraceOperation 084221 (Jg (Var (Local 5)) (Con 72) (Branch T (Dloc 084230)));
  if (GreaterThan(GetLocal(5),72)) {
    Jump: 084230
  } else {
    TraceOperation 084227 (Jump 084155);
    Jump: 084155
  }
LocOp 084230:
  TraceOperation 084230 (Inc (Con 4));
  SetLocal 4 Add(GetLocal(4),1);
  TraceOperation 084232 (Jg (Var (Local 4)) (Con 72) (Branch T (Dloc 084241)));
  if (GreaterThan(GetLocal(4),72)) {
    Jump: 084241
  } else {
    TraceOperation 084238 (Jump 084152);
    Jump: 084152
  }
LocOp 084241:
  TraceOperation 084241 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 084244:
  MakeRoutineFrame 6;
  if (LessThanByte(num_actuals,6)) {
    SetLocal 6 0;
    if (LessThanByte(num_actuals,5)) {
      SetLocal 5 0;
      if (LessThanByte(num_actuals,4)) {
        SetLocal 4 0;
        if (LessThanByte(num_actuals,3)) {
          SetLocal 3 0;
          if (LessThanByte(num_actuals,2)) {
            SetLocal 2 0;
            if (LessThanByte(num_actuals,1)) {
              SetLocal 1 0;
            }
          }
        }
      }
    }
  }
  Jump: 084245
LocOp 084245:
  TraceOperation 084245 (Store (Con 2) (Con 1));
  SetLocal 2 1;
  Jump: 084248
LocOp 084248:
  TraceOperation 084248 (Call (Floc 111316) [Var (Local 2),Var (Local 1)] Sp);
  PushFrame;
  PushReturnAddress 084248;
  SetLocal 1 GetLocal(2);
  SetLocal 2 GetLocal(1);
  MakeRoutineFrame 2;
  Jump: 111317
LocReturn 084248:
  PushStack call_result;
  TraceOperation 084255 (Jz (Var Sp) (Branch T (Dloc 084276)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 084276
  } else {
    TraceOperation 084258 (Call (Floc 110116) [Var (Local 2),Var (Local 1)] Sp);
    PushFrame;
    PushReturnAddress 084258;
    SetLocal 1 GetLocal(2);
    SetLocal 2 GetLocal(1);
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 110117
  }
LocReturn 084258:
  PushStack call_result;
  TraceOperation 084265 (Sub (Con 0) (Var Sp) Sp);
  PopStack popped1;
  PushStack Sub(0,popped1);
  TraceOperation 084269 (CallN (Floc 110088) [Var (Local 2),Var (Local 1),Var Sp]);
  PopStack popped2;
  PushFrame;
  PushReturnAddress 084269;
  SetLocal 1 GetLocal(2);
  SetLocal 2 GetLocal(1);
  SetLocal 3 popped2;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 110089
LocReturn 084269:
  Jump: 084276
LocOp 084276:
  TraceOperation 084276 (Inc (Con 2));
  SetLocal 2 Add(GetLocal(2),1);
  TraceOperation 084278 (Jg (Var (Local 2)) (Con 72) (Branch T (Dloc 084287)));
  if (GreaterThan(GetLocal(2),72)) {
    Jump: 084287
  } else {
    TraceOperation 084284 (Jump 084248);
    Jump: 084248
  }
LocOp 084287:
  TraceOperation 084287 (Store (Con 2) (Con 1));
  SetLocal 2 1;
  Jump: 084290
LocOp 084290:
  TraceOperation 084290 (Call (Floc 111316) [Var (Local 2),Var (Local 1)] Sp);
  PushFrame;
  PushReturnAddress 084290;
  SetLocal 1 GetLocal(2);
  SetLocal 2 GetLocal(1);
  MakeRoutineFrame 2;
  Jump: 111317
LocReturn 084290:
  PushStack call_result;
  TraceOperation 084297 (Jz (Var Sp) (Branch T (Dloc 084431)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 084431
  } else {
    TraceOperation 084301 (Call (Floc 110116) [Var (Local 2),Var (Local 1)] Sp);
    PushFrame;
    PushReturnAddress 084301;
    SetLocal 1 GetLocal(2);
    SetLocal 2 GetLocal(1);
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 110117
  }
LocReturn 084301:
  PushStack call_result;
  TraceOperation 084308 (Jl (Var Sp) (Con 0) (Branch F (Dloc 084431)));
  PopStack popped1;
  if (LessThan(popped1,0)) {
    TraceOperation 084313 (Call (Floc 110116) [Var (Local 2),Var (Local 1)] (Local 4));
    PushFrame;
    PushReturnAddress 084313;
    SetLocal 1 GetLocal(2);
    SetLocal 2 GetLocal(1);
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 110117
  } else {
    Jump: 084431
  }
LocReturn 084313:
  SetLocal 4 call_result;
  TraceOperation 084320 (Store (Con 5) (Con 0));
  SetLocal 5 0;
  TraceOperation 084323 (Store (Con 3) (Con 1));
  SetLocal 3 1;
  Jump: 084326
LocOp 084326:
  TraceOperation 084326 (Test_attr (Var (Local 3)) (Con 35) (Branch F (Dloc 084333)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(3),14)),4)];
  if (TestBit(b1,4)) {
    TraceOperation 084330 (Clear_attr (Var (Local 3)) (Con 35));
    Let b2 = M[Offset(Offset(000378,Mul(GetLocal(3),14)),4)];
    SetByte Offset(Offset(000378,Mul(GetLocal(3),14)),4) ClearBit(b2,4);
    Jump: 084333
  } else {
    Jump: 084333
  }
LocOp 084333:
  TraceOperation 084333 (Inc (Con 3));
  SetLocal 3 Add(GetLocal(3),1);
  TraceOperation 084335 (Jg (Var (Local 3)) (Con 72) (Branch T (Dloc 084344)));
  if (GreaterThan(GetLocal(3),72)) {
    Jump: 084344
  } else {
    TraceOperation 084341 (Jump 084326);
    Jump: 084326
  }
LocOp 084344:
  TraceOperation 084344 (Store (Con 3) (Con 1));
  SetLocal 3 1;
  Jump: 084347
LocOp 084347:
  TraceOperation 084347 (Call (Floc 111316) [Var (Local 3),Var (Local 1)] Sp);
  PushFrame;
  PushReturnAddress 084347;
  SetLocal 1 GetLocal(3);
  SetLocal 2 GetLocal(1);
  MakeRoutineFrame 2;
  Jump: 111317
LocReturn 084347:
  PushStack call_result;
  TraceOperation 084354 (Jz (Var Sp) (Branch T (Dloc 084384)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 084384
  } else {
    TraceOperation 084357 (Call (Floc 110116) [Var (Local 3),Var (Local 1)] Sp);
    PushFrame;
    PushReturnAddress 084357;
    SetLocal 1 GetLocal(3);
    SetLocal 2 GetLocal(1);
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 110117
  }
LocReturn 084357:
  PushStack call_result;
  TraceOperation 084364 (Je [Var Sp,Var (Local 4)] (Branch F (Dloc 084384)));
  PopStack popped1;
  if (Equal(popped1,GetLocal(4))) {
    TraceOperation 084368 (Set_attr (Var (Local 3)) (Con 35));
    Let b2 = M[Offset(Offset(000378,Mul(GetLocal(3),14)),4)];
    SetByte Offset(Offset(000378,Mul(GetLocal(3),14)),4) SetBit(b2,4);
    TraceOperation 084371 (Sub (Con 0) (Var (Local 4)) Sp);
    PushStack Sub(0,GetLocal(4));
    TraceOperation 084375 (CallN (Floc 110088) [Var (Local 3),Var (Local 1),Var Sp]);
    PopStack popped3;
    PushFrame;
    PushReturnAddress 084375;
    SetLocal 1 GetLocal(3);
    SetLocal 2 GetLocal(1);
    SetLocal 3 popped3;
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 110089
  } else {
    Jump: 084384
  }
LocReturn 084375:
  TraceOperation 084382 (Inc (Con 5));
  SetLocal 5 Add(GetLocal(5),1);
  Jump: 084384
LocOp 084384:
  TraceOperation 084384 (Inc (Con 3));
  SetLocal 3 Add(GetLocal(3),1);
  TraceOperation 084386 (Jg (Var (Local 3)) (Con 72) (Branch T (Dloc 084395)));
  if (GreaterThan(GetLocal(3),72)) {
    Jump: 084395
  } else {
    TraceOperation 084392 (Jump 084347);
    Jump: 084347
  }
LocOp 084395:
  TraceOperation 084395 (Jg (Var (Local 5)) (Con 1) (Branch F (Dloc 084424)));
  if (GreaterThan(GetLocal(5),1)) {
    TraceOperation 084399 (Store (Con 6) (Con 1));
    SetLocal 6 1;
    TraceOperation 084402 (Print "  { ");
    GamePrint "  { ";
    TraceOperation 084409 (CallN (Floc 037780) [Con 8]);
    PushFrame;
    PushReturnAddress 084409;
    SetLocal 1 8;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 037781
  } else {
    Jump: 084424
  }
LocReturn 084409:
  TraceOperation 084414 (Print " }\n");
  GamePrint " }\n";
  TraceOperation 084421 (Jump 084431);
  Jump: 084431
LocOp 084424:
  TraceOperation 084424 (CallN (Floc 110088) [Var (Local 2),Var (Local 1),Var (Local 4)]);
  PushFrame;
  PushReturnAddress 084424;
  SetLocal 1 GetLocal(2);
  SetLocal 2 GetLocal(1);
  SetLocal 3 GetLocal(4);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 110089
LocReturn 084424:
  Jump: 084431
LocOp 084431:
  TraceOperation 084431 (Inc (Con 2));
  SetLocal 2 Add(GetLocal(2),1);
  TraceOperation 084433 (Jg (Var (Local 2)) (Con 72) (Branch T (Dloc 084442)));
  if (GreaterThan(GetLocal(2),72)) {
    Jump: 084442
  } else {
    TraceOperation 084439 (Jump 084290);
    Jump: 084290
  }
LocOp 084442:
  TraceOperation 084442 (Store (Con 3) (Con 1));
  SetLocal 3 1;
  Jump: 084445
LocOp 084445:
  TraceOperation 084445 (Test_attr (Var (Local 3)) (Con 35) (Branch F (Dloc 084452)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(3),14)),4)];
  if (TestBit(b1,4)) {
    TraceOperation 084449 (Clear_attr (Var (Local 3)) (Con 35));
    Let b2 = M[Offset(Offset(000378,Mul(GetLocal(3),14)),4)];
    SetByte Offset(Offset(000378,Mul(GetLocal(3),14)),4) ClearBit(b2,4);
    Jump: 084452
  } else {
    Jump: 084452
  }
LocOp 084452:
  TraceOperation 084452 (Inc (Con 3));
  SetLocal 3 Add(GetLocal(3),1);
  TraceOperation 084454 (Jg (Var (Local 3)) (Con 72) (Branch T (Dloc 084463)));
  if (GreaterThan(GetLocal(3),72)) {
    Jump: 084463
  } else {
    TraceOperation 084460 (Jump 084445);
    Jump: 084445
  }
LocOp 084463:
  TraceOperation 084463 (Store (Con 5) (Con 0));
  SetLocal 5 0;
  TraceOperation 084466 (Store (Con 2) (Con 1));
  SetLocal 2 1;
  Jump: 084469
LocOp 084469:
  TraceOperation 084469 (Call (Floc 111316) [Var (Local 2),Var (Local 1)] Sp);
  PushFrame;
  PushReturnAddress 084469;
  SetLocal 1 GetLocal(2);
  SetLocal 2 GetLocal(1);
  MakeRoutineFrame 2;
  Jump: 111317
LocReturn 084469:
  PushStack call_result;
  TraceOperation 084476 (Jz (Var Sp) (Branch T (Dloc 084495)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 084495
  } else {
    TraceOperation 084479 (Call (Floc 110116) [Var (Local 2),Var (Local 1)] Sp);
    PushFrame;
    PushReturnAddress 084479;
    SetLocal 1 GetLocal(2);
    SetLocal 2 GetLocal(1);
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 110117
  }
LocReturn 084479:
  PushStack call_result;
  TraceOperation 084486 (Jl (Var Sp) (Con 0) (Branch F (Dloc 084495)));
  PopStack popped1;
  if (LessThan(popped1,0)) {
    TraceOperation 084490 (Inc (Con 5));
    SetLocal 5 Add(GetLocal(5),1);
    TraceOperation 084492 (Set_attr (Var (Local 2)) (Con 35));
    Let b2 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),4)];
    SetByte Offset(Offset(000378,Mul(GetLocal(2),14)),4) SetBit(b2,4);
    Jump: 084495
  } else {
    Jump: 084495
  }
LocOp 084495:
  TraceOperation 084495 (Inc (Con 2));
  SetLocal 2 Add(GetLocal(2),1);
  TraceOperation 084497 (Jg (Var (Local 2)) (Con 72) (Branch T (Dloc 084506)));
  if (GreaterThan(GetLocal(2),72)) {
    Jump: 084506
  } else {
    TraceOperation 084503 (Jump 084469);
    Jump: 084469
  }
LocOp 084506:
  TraceOperation 084506 (Jz (Var (Local 5)) (Branch F (Dloc 084510)));
  if (IsZero(GetLocal(5))) {
    TraceOperation 084509 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 084510
  }
LocOp 084510:
  TraceOperation 084510 (Jz (Var (Local 6)) (Branch T (Dloc 084521)));
  if (IsZero(GetLocal(6))) {
    Jump: 084521
  } else {
    TraceOperation 084513 (Print "  and ");
    GamePrint "  and ";
    TraceOperation 084518 (Jump 084524);
    Jump: 084524
  }
LocOp 084521:
  TraceOperation 084521 (Print "  ");
  GamePrint "  ";
  Jump: 084524
LocOp 084524:
  TraceOperation 084524 (Jl (Var (Local 5)) (Con 4) (Branch F (Dloc 084539)));
  if (LessThan(GetLocal(5),4)) {
    TraceOperation 084528 (CallN (Floc 037780) [Con 8]);
    PushFrame;
    PushReturnAddress 084528;
    SetLocal 1 8;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 037781
  } else {
    Jump: 084539
  }
LocReturn 084528:
  TraceOperation 084533 (Print " in");
  GamePrint " in";
  TraceOperation 084536 (Jump 084542);
  Jump: 084542
LocOp 084539:
  TraceOperation 084539 (Print_num (Var (Local 5)));
  GamePrint ShowNumber(GetLocal(5));
  Jump: 084542
LocOp 084542:
  TraceOperation 084542 (Je [Var (Local 5),Con 1] (Branch F (Dloc 084549)));
  if (Equal(GetLocal(5),1)) {
    TraceOperation 084546 (Print " a");
    GamePrint " a";
    Jump: 084549
  } else {
    Jump: 084549
  }
LocOp 084549:
  TraceOperation 084549 (Print " single-member group");
  GamePrint " single-member group";
  TraceOperation 084564 (Jg (Var (Local 5)) (Con 1) (Branch F (Dloc 084571)));
  if (GreaterThan(GetLocal(5),1)) {
    TraceOperation 084568 (Print "s");
    GamePrint "s";
    Jump: 084571
  } else {
    Jump: 084571
  }
LocOp 084571:
  TraceOperation 084571 (Print "\n");
  GamePrint "\n";
  TraceOperation 084574 (Store (Con 2) (Con 1));
  SetLocal 2 1;
  Jump: 084577
LocOp 084577:
  TraceOperation 084577 (Call (Floc 111316) [Var (Local 2),Var (Local 1)] Sp);
  PushFrame;
  PushReturnAddress 084577;
  SetLocal 1 GetLocal(2);
  SetLocal 2 GetLocal(1);
  MakeRoutineFrame 2;
  Jump: 111317
LocReturn 084577:
  PushStack call_result;
  TraceOperation 084584 (Jz (Var Sp) (Branch T (Dloc 084616)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 084616
  } else {
    TraceOperation 084587 (Call (Floc 110116) [Var (Local 2),Var (Local 1)] Sp);
    PushFrame;
    PushReturnAddress 084587;
    SetLocal 1 GetLocal(2);
    SetLocal 2 GetLocal(1);
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 110117
  }
LocReturn 084587:
  PushStack call_result;
  TraceOperation 084594 (Jl (Var Sp) (Con 0) (Branch F (Dloc 084616)));
  PopStack popped1;
  if (LessThan(popped1,0)) {
    TraceOperation 084598 (Call (Floc 110116) [Var (Local 2),Var (Local 1)] Sp);
    PushFrame;
    PushReturnAddress 084598;
    SetLocal 1 GetLocal(2);
    SetLocal 2 GetLocal(1);
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 110117
  } else {
    Jump: 084616
  }
LocReturn 084598:
  PushStack call_result;
  TraceOperation 084605 (Sub (Con 0) (Var Sp) Sp);
  PopStack popped1;
  PushStack Sub(0,popped1);
  TraceOperation 084609 (CallN (Floc 110088) [Var (Local 2),Var (Local 1),Var Sp]);
  PopStack popped2;
  PushFrame;
  PushReturnAddress 084609;
  SetLocal 1 GetLocal(2);
  SetLocal 2 GetLocal(1);
  SetLocal 3 popped2;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 110089
LocReturn 084609:
  Jump: 084616
LocOp 084616:
  TraceOperation 084616 (Inc (Con 2));
  SetLocal 2 Add(GetLocal(2),1);
  TraceOperation 084618 (Jg (Var (Local 2)) (Con 72) (Branch T (Dloc 084627)));
  if (GreaterThan(GetLocal(2),72)) {
    Jump: 084627
  } else {
    TraceOperation 084624 (Jump 084577);
    Jump: 084577
  }
LocOp 084627:
  TraceOperation 084627 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 084628:
  MakeRoutineFrame 0;
  Jump: 084629
LocOp 084629:
  TraceOperation 084629 (Store (Con 207) (Con 1));
  SetByte 007588 0;
  SetByte 007589 1;
  TraceOperation 084632 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 084636:
  MakeRoutineFrame 8;
  if (LessThanByte(num_actuals,8)) {
    SetLocal 8 0;
    if (LessThanByte(num_actuals,7)) {
      SetLocal 7 0;
      if (LessThanByte(num_actuals,6)) {
        SetLocal 6 0;
        if (LessThanByte(num_actuals,5)) {
          SetLocal 5 0;
          if (LessThanByte(num_actuals,4)) {
            SetLocal 4 0;
            if (LessThanByte(num_actuals,3)) {
              SetLocal 3 0;
              if (LessThanByte(num_actuals,2)) {
                SetLocal 2 0;
                if (LessThanByte(num_actuals,1)) {
                  SetLocal 1 0;
                }
              }
            }
          }
        }
      }
    }
  }
  Jump: 084637
LocOp 084637:
  TraceOperation 084637 (Jz (Var (Local 1)) (Branch F (Dloc 084641)));
  if (IsZero(GetLocal(1))) {
    TraceOperation 084640 Rfalse;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 0;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 084641
  }
LocOp 084641:
  TraceOperation 084641 (Jz (Var (Local 2)) (Branch F (Dloc 084645)));
  if (IsZero(GetLocal(2))) {
    TraceOperation 084644 Rfalse;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 0;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 084645
  }
LocOp 084645:
  TraceOperation 084645 (Je [Var (Local 1),Var (Local 2)] (Branch F (Dloc 084650)));
  if (Equal(GetLocal(1),GetLocal(2))) {
    TraceOperation 084649 Rfalse;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 0;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 084650
  }
LocOp 084650:
  TraceOperation 084650 (Jz (Var (Local 3)) (Branch T (Dloc 084661)));
  if (IsZero(GetLocal(3))) {
    Jump: 084661
  } else {
    TraceOperation 084653 (Call (Fvar (Local 3)) [Var (Local 1)] Sp);
    if (IsZeroAddress(PackedAddress Z5(GetLocal(3)))) {
      PushStack 0;
      Jump: 084657
    } else {
      PushFrame;
      PushReturnAddress 084653;
      SetLocal 1 GetLocal(1);
      SetNumberActuals 1;
      JumpIndirect: (routine) PackedAddress Z5(GetLocal(3))
    }
  }
LocReturn 084653:
  PushStack call_result;
  Jump: 084657
LocOp 084657:
  TraceOperation 084657 (Jz (Var Sp) (Branch F (Dloc 084661)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 084660 Rfalse;
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  } else {
    Jump: 084661
  }
LocOp 084661:
  TraceOperation 084661 (Jz (Var (Local 3)) (Branch T (Dloc 084672)));
  if (IsZero(GetLocal(3))) {
    Jump: 084672
  } else {
    TraceOperation 084664 (Call (Fvar (Local 3)) [Var (Local 2)] Sp);
    if (IsZeroAddress(PackedAddress Z5(GetLocal(3)))) {
      PushStack 0;
      Jump: 084668
    } else {
      PushFrame;
      PushReturnAddress 084664;
      SetLocal 1 GetLocal(2);
      SetNumberActuals 1;
      JumpIndirect: (routine) PackedAddress Z5(GetLocal(3))
    }
  }
LocReturn 084664:
  PushStack call_result;
  Jump: 084668
LocOp 084668:
  TraceOperation 084668 (Jz (Var Sp) (Branch F (Dloc 084672)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 084671 Rfalse;
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  } else {
    Jump: 084672
  }
LocOp 084672:
  TraceOperation 084672 (Je [Var (Global 192),Var (Local 3)] (Branch F (Dloc 084680)));
  Let b1 = M[007590];
  Let b2 = M[007591];
  if (Equal(MakeHiLo(b1,b2),GetLocal(3))) {
    TraceOperation 084676 (Je [Var (Global 193),Var (Local 4)] (Branch T (Dloc 084683)));
    Let b3 = M[007592];
    Let b4 = M[007593];
    if (Equal(MakeHiLo(b3,b4),GetLocal(4))) {
      Jump: 084683
    } else {
      Jump: 084680
    }
  } else {
    Jump: 084680
  }
LocOp 084680:
  TraceOperation 084680 (Store (Con 207) (Con 1));
  SetByte 007588 0;
  SetByte 007589 1;
  Jump: 084683
LocOp 084683:
  TraceOperation 084683 (Store (Con 7) (Con 0));
  SetLocal 7 0;
  TraceOperation 084686 (Store (Con 6) (Con 1));
  SetLocal 6 1;
  Jump: 084689
LocOp 084689:
  TraceOperation 084689 (Test_attr (Var (Local 6)) (Con 32) (Branch F (Dloc 084753)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(6),14)),4)];
  if (TestBit(b1,7)) {
    TraceOperation 084694 (Jz (Var (Local 3)) (Branch T (Dloc 084704)));
    if (IsZero(GetLocal(3))) {
      Jump: 084704
    } else {
      TraceOperation 084697 (Call (Fvar (Local 3)) [Var (Local 6)] Sp);
      if (IsZeroAddress(PackedAddress Z5(GetLocal(3)))) {
        PushStack 0;
        Jump: 084701
      } else {
        PushFrame;
        PushReturnAddress 084697;
        SetLocal 1 GetLocal(6);
        SetNumberActuals 1;
        JumpIndirect: (routine) PackedAddress Z5(GetLocal(3))
      }
    }
  } else {
    Jump: 084753
  }
LocReturn 084697:
  PushStack call_result;
  Jump: 084701
LocOp 084701:
  TraceOperation 084701 (Jz (Var Sp) (Branch T (Dloc 084733)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 084733
  } else {
    Jump: 084704
  }
LocOp 084704:
  TraceOperation 084704 (Get_prop (Var (Local 6)) (Con 33) (Global 239));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(6),14)),12)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(6),14)),12),1)];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let loop_var4 = DeAddress(Offset(Address(MakeHiLo(b1,b2)),Add(Mul(2,Widen(b3)),1)));
  Label 5: {
    Let b6 = M[Address(loop_var4)];
    if (IsZeroByte(b6)) {
      Let b7 = M[000330];
      Let b8 = M[000331];
      SetByte 007684 b7;
      SetByte 007685 b8;
    } else {
      if (TestBit(b6,7)) {
        Let b9 = M[Offset(Address(loop_var4),1)];
        if (Equal(33,Widen(BwAnd(b6,63)))) {
          if (Equal(Widen(BwAnd(b9,63)),2)) {
            Let b10 = M[Offset(Address(loop_var4),2)];
            Let b11 = M[Offset(Offset(Address(loop_var4),2),1)];
            SetByte 007684 b10;
            SetByte 007685 b11;
          } else {
            Let b12 = M[Offset(Address(loop_var4),2)];
            SetByte 007684 HiByte(Widen(b12));
            SetByte 007685 LoByte(Widen(b12));
          }
        } else {
          Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),2),Widen(BwAnd(b9,63))));
          Goto: Label 5
        }
      } else {
        if (TestBit(b6,6)) {
          if (Equal(33,Widen(BwAnd(b6,63)))) {
            Let b13 = M[Offset(Address(loop_var4),1)];
            Let b14 = M[Offset(Offset(Address(loop_var4),1),1)];
            SetByte 007684 b13;
            SetByte 007685 b14;
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),2));
            Goto: Label 5
          }
        } else {
          if (Equal(33,Widen(BwAnd(b6,63)))) {
            Let b15 = M[Offset(Address(loop_var4),1)];
            SetByte 007684 HiByte(Widen(b15));
            SetByte 007685 LoByte(Widen(b15));
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),1));
            Goto: Label 5
          }
        }
      }
    }
  }
  TraceOperation 084708 (Push (Var (Global 239)));
  Let b16 = M[007684];
  Let b17 = M[007685];
  PushStack MakeHiLo(b16,b17);
  TraceOperation 084711 (Je [Var Sp,Con -1] (Branch F (Dloc 084720)));
  PopStack popped18;
  if (Equal(popped18,-1)) {
    TraceOperation 084717 (Store (Con 207) (Con 1));
    SetByte 007588 0;
    SetByte 007589 1;
    Jump: 084720
  } else {
    Jump: 084720
  }
LocOp 084720:
  TraceOperation 084720 (Push (Var (Local 7)));
  PushStack GetLocal(7);
  TraceOperation 084723 (Inc (Con 7));
  SetLocal 7 Add(GetLocal(7),1);
  TraceOperation 084725 (Put_prop (Var (Local 6)) (Con 33) (Var Sp));
  PopStack popped1;
  Let b2 = M[Offset(Offset(000378,Mul(GetLocal(6),14)),12)];
  Let b3 = M[Offset(Offset(Offset(000378,Mul(GetLocal(6),14)),12),1)];
  Let b4 = M[Address(MakeHiLo(b2,b3))];
  Let loop_var5 = DeAddress(Offset(Address(MakeHiLo(b2,b3)),Add(Mul(2,Widen(b4)),1)));
  Label 6: {
    Let b7 = M[Address(loop_var5)];
    if (IsZeroByte(b7)) {
      Error: ("putProp",33)
    } else {
      if (TestBit(b7,7)) {
        Let b8 = M[Offset(Address(loop_var5),1)];
        if (Equal(33,Widen(BwAnd(b7,63)))) {
          if (Equal(Widen(BwAnd(b8,63)),2)) {
            SetByte Offset(Address(loop_var5),2) HiByte(popped1);
            SetByte Offset(Offset(Address(loop_var5),2),1) LoByte(popped1);
          } else {
            SetByte Offset(Address(loop_var5),2) LoByte(popped1);
          }
        } else {
          Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),2),Widen(BwAnd(b8,63))));
          Goto: Label 6
        }
      } else {
        if (TestBit(b7,6)) {
          if (Equal(33,Widen(BwAnd(b7,63)))) {
            SetByte Offset(Address(loop_var5),1) HiByte(popped1);
            SetByte Offset(Offset(Address(loop_var5),1),1) LoByte(popped1);
          } else {
            Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),1),2));
            Goto: Label 6
          }
        } else {
          if (Equal(33,Widen(BwAnd(b7,63)))) {
            SetByte Offset(Address(loop_var5),1) LoByte(popped1);
          } else {
            Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),1),1));
            Goto: Label 6
          }
        }
      }
    }
  }
  TraceOperation 084730 (Jump 084753);
  Jump: 084753
LocOp 084733:
  TraceOperation 084733 (Get_prop (Var (Local 6)) (Con 33) (Global 239));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(6),14)),12)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(6),14)),12),1)];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let loop_var4 = DeAddress(Offset(Address(MakeHiLo(b1,b2)),Add(Mul(2,Widen(b3)),1)));
  Label 5: {
    Let b6 = M[Address(loop_var4)];
    if (IsZeroByte(b6)) {
      Let b7 = M[000330];
      Let b8 = M[000331];
      SetByte 007684 b7;
      SetByte 007685 b8;
    } else {
      if (TestBit(b6,7)) {
        Let b9 = M[Offset(Address(loop_var4),1)];
        if (Equal(33,Widen(BwAnd(b6,63)))) {
          if (Equal(Widen(BwAnd(b9,63)),2)) {
            Let b10 = M[Offset(Address(loop_var4),2)];
            Let b11 = M[Offset(Offset(Address(loop_var4),2),1)];
            SetByte 007684 b10;
            SetByte 007685 b11;
          } else {
            Let b12 = M[Offset(Address(loop_var4),2)];
            SetByte 007684 HiByte(Widen(b12));
            SetByte 007685 LoByte(Widen(b12));
          }
        } else {
          Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),2),Widen(BwAnd(b9,63))));
          Goto: Label 5
        }
      } else {
        if (TestBit(b6,6)) {
          if (Equal(33,Widen(BwAnd(b6,63)))) {
            Let b13 = M[Offset(Address(loop_var4),1)];
            Let b14 = M[Offset(Offset(Address(loop_var4),1),1)];
            SetByte 007684 b13;
            SetByte 007685 b14;
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),2));
            Goto: Label 5
          }
        } else {
          if (Equal(33,Widen(BwAnd(b6,63)))) {
            Let b15 = M[Offset(Address(loop_var4),1)];
            SetByte 007684 HiByte(Widen(b15));
            SetByte 007685 LoByte(Widen(b15));
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),1));
            Goto: Label 5
          }
        }
      }
    }
  }
  TraceOperation 084737 (Push (Var (Global 239)));
  Let b16 = M[007684];
  Let b17 = M[007685];
  PushStack MakeHiLo(b16,b17);
  TraceOperation 084740 (Jl (Var Sp) (Con 0) (Branch T (Dloc 084747)));
  PopStack popped18;
  if (LessThan(popped18,0)) {
    Jump: 084747
  } else {
    TraceOperation 084744 (Store (Con 207) (Con 1));
    SetByte 007588 0;
    SetByte 007589 1;
    Jump: 084747
  }
LocOp 084747:
  TraceOperation 084747 (Put_prop (Var (Local 6)) (Con 33) (Con -1));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(6),14)),12)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(6),14)),12),1)];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let loop_var4 = DeAddress(Offset(Address(MakeHiLo(b1,b2)),Add(Mul(2,Widen(b3)),1)));
  Label 5: {
    Let b6 = M[Address(loop_var4)];
    if (IsZeroByte(b6)) {
      Error: ("putProp",33)
    } else {
      if (TestBit(b6,7)) {
        Let b7 = M[Offset(Address(loop_var4),1)];
        if (Equal(33,Widen(BwAnd(b6,63)))) {
          if (Equal(Widen(BwAnd(b7,63)),2)) {
            SetByte Offset(Address(loop_var4),2) 255;
            SetByte Offset(Offset(Address(loop_var4),2),1) 255;
          } else {
            SetByte Offset(Address(loop_var4),2) 255;
          }
        } else {
          Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),2),Widen(BwAnd(b7,63))));
          Goto: Label 5
        }
      } else {
        if (TestBit(b6,6)) {
          if (Equal(33,Widen(BwAnd(b6,63)))) {
            SetByte Offset(Address(loop_var4),1) 255;
            SetByte Offset(Offset(Address(loop_var4),1),1) 255;
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),2));
            Goto: Label 5
          }
        } else {
          if (Equal(33,Widen(BwAnd(b6,63)))) {
            SetByte Offset(Address(loop_var4),1) 255;
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),1));
            Goto: Label 5
          }
        }
      }
    }
  }
  Jump: 084753
LocOp 084753:
  TraceOperation 084753 (Inc (Con 6));
  SetLocal 6 Add(GetLocal(6),1);
  TraceOperation 084755 (Jg (Var (Local 6)) (Con 72) (Branch T (Dloc 084764)));
  if (GreaterThan(GetLocal(6),72)) {
    Jump: 084764
  } else {
    TraceOperation 084761 (Jump 084689);
    Jump: 084689
  }
LocOp 084764:
  TraceOperation 084764 (Store (Con 7) (Con 0));
  SetLocal 7 0;
  TraceOperation 084767 (Store (Con 6) (Con 1));
  SetLocal 6 1;
  Jump: 084770
LocOp 084770:
  TraceOperation 084770 (Call (Floc 026172) [Var (Local 6),Con 16] Sp);
  PushFrame;
  PushReturnAddress 084770;
  SetLocal 1 GetLocal(6);
  SetLocal 2 16;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 084770:
  PushStack call_result;
  TraceOperation 084777 (Jz (Var Sp) (Branch T (Dloc 084826)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 084826
  } else {
    TraceOperation 084780 (Store (Con 8) (Con 0));
    SetLocal 8 0;
    TraceOperation 084783 (And (Var (Local 4)) (Con 2) Sp);
    PushStack And(GetLocal(4),2);
    TraceOperation 084787 (Jz (Var Sp) (Branch F (Dloc 084802)));
    PopStack popped2;
    if (IsZero(popped2)) {
      TraceOperation 084790 (Test_attr (Var (Local 6)) (Con 13) (Branch T (Dloc 084802)));
      Let b3 = M[Offset(Offset(000378,Mul(GetLocal(6),14)),1)];
      if (TestBit(b3,2)) {
        Jump: 084802
      } else {
        TraceOperation 084794 (Test_attr (Var (Local 6)) (Con 14) (Branch F (Dloc 084805)));
        Let b4 = M[Offset(Offset(000378,Mul(GetLocal(6),14)),1)];
        if (TestBit(b4,1)) {
          TraceOperation 084798 (Test_attr (Var (Local 6)) (Con 10) (Branch T (Dloc 084805)));
          Let b5 = M[Offset(Offset(000378,Mul(GetLocal(6),14)),1)];
          if (TestBit(b5,5)) {
            Jump: 084805
          } else {
            Jump: 084802
          }
        } else {
          Jump: 084805
        }
      }
    } else {
      Jump: 084802
    }
  }
LocOp 084802:
  TraceOperation 084802 (Store (Con 8) (Con 1));
  SetLocal 8 1;
  Jump: 084805
LocOp 084805:
  TraceOperation 084805 (Loadb (Con 18047) (Var (Local 7)) Sp);
  Let b1 = M[Offset(018047,GetLocal(7))];
  PushStack Widen(b1);
  TraceOperation 084811 (Je [Var Sp,Var (Local 8)] (Branch T (Dloc 084818)));
  PopStack popped2;
  if (Equal(popped2,GetLocal(8))) {
    Jump: 084818
  } else {
    TraceOperation 084815 (Store (Con 207) (Con 1));
    SetByte 007588 0;
    SetByte 007589 1;
    Jump: 084818
  }
LocOp 084818:
  TraceOperation 084818 (Storeb (Con 18047) (Var (Local 7)) (Var (Local 8)));
  SetByte Offset(018047,GetLocal(7)) LoByte(GetLocal(8));
  TraceOperation 084824 (Inc (Con 7));
  SetLocal 7 Add(GetLocal(7),1);
  Jump: 084826
LocOp 084826:
  TraceOperation 084826 (Inc (Con 6));
  SetLocal 6 Add(GetLocal(6),1);
  TraceOperation 084828 (Jg (Var (Local 6)) (Con 72) (Branch T (Dloc 084837)));
  if (GreaterThan(GetLocal(6),72)) {
    Jump: 084837
  } else {
    TraceOperation 084834 (Jump 084770);
    Jump: 084770
  }
LocOp 084837:
  TraceOperation 084837 (Jz (Var (Global 191)) (Branch T (Dloc 084849)));
  Let b1 = M[007588];
  Let b2 = M[007589];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 084849
  } else {
    TraceOperation 084840 (Store (Con 207) (Con 0));
    SetByte 007588 0;
    SetByte 007589 0;
    TraceOperation 084843 (Store (Con 208) (Var (Local 3)));
    SetByte 007590 HiByte(GetLocal(3));
    SetByte 007591 LoByte(GetLocal(3));
    TraceOperation 084846 (Store (Con 209) (Var (Local 4)));
    SetByte 007592 HiByte(GetLocal(4));
    SetByte 007593 LoByte(GetLocal(4));
    Jump: 084849
  }
LocOp 084849:
  TraceOperation 084849 (Jz (Var (Local 5)) (Branch T (Dloc 084863)));
  if (IsZero(GetLocal(5))) {
    Jump: 084863
  } else {
    TraceOperation 084852 (Call (Floc 085232) [Var (Local 1),Var (Local 2),Var (Local 3),Var (Local 4)] Sp);
    PushFrame;
    PushReturnAddress 084852;
    SetLocal 1 GetLocal(1);
    SetLocal 2 GetLocal(2);
    SetLocal 3 GetLocal(3);
    SetLocal 4 GetLocal(4);
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    Jump: 085233
  }
LocReturn 084852:
  PushStack call_result;
  TraceOperation 084862 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 084863:
  TraceOperation 084863 (Call (Floc 084876) [Var (Local 1),Var (Local 2),Var (Local 3),Var (Local 4)] Sp);
  PushFrame;
  PushReturnAddress 084863;
  SetLocal 1 GetLocal(1);
  SetLocal 2 GetLocal(2);
  SetLocal 3 GetLocal(3);
  SetLocal 4 GetLocal(4);
  MakeRoutineFrame 10;
  SetLocal 10 0;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  Jump: 084877
LocReturn 084863:
  PushStack call_result;
  TraceOperation 084873 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 084876:
  MakeRoutineFrame 10;
  if (LessThanByte(num_actuals,10)) {
    SetLocal 10 0;
    if (LessThanByte(num_actuals,9)) {
      SetLocal 9 0;
      if (LessThanByte(num_actuals,8)) {
        SetLocal 8 0;
        if (LessThanByte(num_actuals,7)) {
          SetLocal 7 0;
          if (LessThanByte(num_actuals,6)) {
            SetLocal 6 0;
            if (LessThanByte(num_actuals,5)) {
              SetLocal 5 0;
              if (LessThanByte(num_actuals,4)) {
                SetLocal 4 0;
                if (LessThanByte(num_actuals,3)) {
                  SetLocal 3 0;
                  if (LessThanByte(num_actuals,2)) {
                    SetLocal 2 0;
                    if (LessThanByte(num_actuals,1)) {
                      SetLocal 1 0;
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  Jump: 084877
LocOp 084877:
  TraceOperation 084877 (Jz (Var (Local 1)) (Branch F (Dloc 084881)));
  if (IsZero(GetLocal(1))) {
    TraceOperation 084880 Rfalse;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 0;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 084881
  }
LocOp 084881:
  TraceOperation 084881 (Jz (Var (Local 2)) (Branch F (Dloc 084885)));
  if (IsZero(GetLocal(2))) {
    TraceOperation 084884 Rfalse;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 0;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 084885
  }
LocOp 084885:
  TraceOperation 084885 (Je [Var (Local 1),Var (Local 2)] (Branch F (Dloc 084890)));
  if (Equal(GetLocal(1),GetLocal(2))) {
    TraceOperation 084889 Rfalse;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 0;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 084890
  }
LocOp 084890:
  TraceOperation 084890 (Store (Con 5) (Con 1));
  SetLocal 5 1;
  Jump: 084893
LocOp 084893:
  TraceOperation 084893 (Test_attr (Var (Local 5)) (Con 32) (Branch F (Dloc 084902)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(5),14)),4)];
  if (TestBit(b1,7)) {
    TraceOperation 084897 (Put_prop (Var (Local 5)) (Con 35) (Con 0));
    Let b2 = M[Offset(Offset(000378,Mul(GetLocal(5),14)),12)];
    Let b3 = M[Offset(Offset(Offset(000378,Mul(GetLocal(5),14)),12),1)];
    Let b4 = M[Address(MakeHiLo(b2,b3))];
    Let loop_var5 = DeAddress(Offset(Address(MakeHiLo(b2,b3)),Add(Mul(2,Widen(b4)),1)));
    Label 6: {
      Let b7 = M[Address(loop_var5)];
      if (IsZeroByte(b7)) {
        Error: ("putProp",35)
      } else {
        if (TestBit(b7,7)) {
          Let b8 = M[Offset(Address(loop_var5),1)];
          if (Equal(35,Widen(BwAnd(b7,63)))) {
            if (Equal(Widen(BwAnd(b8,63)),2)) {
              SetByte Offset(Address(loop_var5),2) 0;
              SetByte Offset(Offset(Address(loop_var5),2),1) 0;
            } else {
              SetByte Offset(Address(loop_var5),2) 0;
            }
          } else {
            Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),2),Widen(BwAnd(b8,63))));
            Goto: Label 6
          }
        } else {
          if (TestBit(b7,6)) {
            if (Equal(35,Widen(BwAnd(b7,63)))) {
              SetByte Offset(Address(loop_var5),1) 0;
              SetByte Offset(Offset(Address(loop_var5),1),1) 0;
            } else {
              Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),1),2));
              Goto: Label 6
            }
          } else {
            if (Equal(35,Widen(BwAnd(b7,63)))) {
              SetByte Offset(Address(loop_var5),1) 0;
            } else {
              Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),1),1));
              Goto: Label 6
            }
          }
        }
      }
    }
    Jump: 084902
  } else {
    Jump: 084902
  }
LocOp 084902:
  TraceOperation 084902 (Inc (Con 5));
  SetLocal 5 Add(GetLocal(5),1);
  TraceOperation 084904 (Jg (Var (Local 5)) (Con 72) (Branch T (Dloc 084913)));
  if (GreaterThan(GetLocal(5),72)) {
    Jump: 084913
  } else {
    TraceOperation 084910 (Jump 084893);
    Jump: 084893
  }
LocOp 084913:
  TraceOperation 084913 (Put_prop (Var (Local 2)) (Con 35) (Con 1));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),12)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(2),14)),12),1)];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let loop_var4 = DeAddress(Offset(Address(MakeHiLo(b1,b2)),Add(Mul(2,Widen(b3)),1)));
  Label 5: {
    Let b6 = M[Address(loop_var4)];
    if (IsZeroByte(b6)) {
      Error: ("putProp",35)
    } else {
      if (TestBit(b6,7)) {
        Let b7 = M[Offset(Address(loop_var4),1)];
        if (Equal(35,Widen(BwAnd(b6,63)))) {
          if (Equal(Widen(BwAnd(b7,63)),2)) {
            SetByte Offset(Address(loop_var4),2) 0;
            SetByte Offset(Offset(Address(loop_var4),2),1) 1;
          } else {
            SetByte Offset(Address(loop_var4),2) 1;
          }
        } else {
          Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),2),Widen(BwAnd(b7,63))));
          Goto: Label 5
        }
      } else {
        if (TestBit(b6,6)) {
          if (Equal(35,Widen(BwAnd(b6,63)))) {
            SetByte Offset(Address(loop_var4),1) 0;
            SetByte Offset(Offset(Address(loop_var4),1),1) 1;
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),2));
            Goto: Label 5
          }
        } else {
          if (Equal(35,Widen(BwAnd(b6,63)))) {
            SetByte Offset(Address(loop_var4),1) 1;
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),1));
            Goto: Label 5
          }
        }
      }
    }
  }
  Jump: 084918
LocOp 084918:
  TraceOperation 084918 (Jz (Con 1) (Branch T (Dloc 085230)));
  TraceOperation 084922 (Store (Con 8) (Con 0));
  SetLocal 8 0;
  TraceOperation 084925 (Store (Con 5) (Con 1));
  SetLocal 5 1;
  Jump: 084928
LocOp 084928:
  TraceOperation 084928 (Test_attr (Var (Local 5)) (Con 32) (Branch F (Dloc 085151)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(5),14)),4)];
  if (TestBit(b1,7)) {
    TraceOperation 084933 (Jz (Var (Local 3)) (Branch T (Dloc 084944)));
    if (IsZero(GetLocal(3))) {
      Jump: 084944
    } else {
      TraceOperation 084936 (Call (Fvar (Local 3)) [Var (Local 5)] Sp);
      if (IsZeroAddress(PackedAddress Z5(GetLocal(3)))) {
        PushStack 0;
        Jump: 084940
      } else {
        PushFrame;
        PushReturnAddress 084936;
        SetLocal 1 GetLocal(5);
        SetNumberActuals 1;
        JumpIndirect: (routine) PackedAddress Z5(GetLocal(3))
      }
    }
  } else {
    Jump: 085151
  }
LocReturn 084936:
  PushStack call_result;
  Jump: 084940
LocOp 084940:
  TraceOperation 084940 (Jz (Var Sp) (Branch T (Dloc 085151)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 085151
  } else {
    Jump: 084944
  }
LocOp 084944:
  TraceOperation 084944 (Get_prop (Var (Local 5)) (Con 35) (Global 239));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(5),14)),12)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(5),14)),12),1)];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let loop_var4 = DeAddress(Offset(Address(MakeHiLo(b1,b2)),Add(Mul(2,Widen(b3)),1)));
  Label 5: {
    Let b6 = M[Address(loop_var4)];
    if (IsZeroByte(b6)) {
      Let b7 = M[000334];
      Let b8 = M[000335];
      SetByte 007684 b7;
      SetByte 007685 b8;
    } else {
      if (TestBit(b6,7)) {
        Let b9 = M[Offset(Address(loop_var4),1)];
        if (Equal(35,Widen(BwAnd(b6,63)))) {
          if (Equal(Widen(BwAnd(b9,63)),2)) {
            Let b10 = M[Offset(Address(loop_var4),2)];
            Let b11 = M[Offset(Offset(Address(loop_var4),2),1)];
            SetByte 007684 b10;
            SetByte 007685 b11;
          } else {
            Let b12 = M[Offset(Address(loop_var4),2)];
            SetByte 007684 HiByte(Widen(b12));
            SetByte 007685 LoByte(Widen(b12));
          }
        } else {
          Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),2),Widen(BwAnd(b9,63))));
          Goto: Label 5
        }
      } else {
        if (TestBit(b6,6)) {
          if (Equal(35,Widen(BwAnd(b6,63)))) {
            Let b13 = M[Offset(Address(loop_var4),1)];
            Let b14 = M[Offset(Offset(Address(loop_var4),1),1)];
            SetByte 007684 b13;
            SetByte 007685 b14;
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),2));
            Goto: Label 5
          }
        } else {
          if (Equal(35,Widen(BwAnd(b6,63)))) {
            Let b15 = M[Offset(Address(loop_var4),1)];
            SetByte 007684 HiByte(Widen(b15));
            SetByte 007685 LoByte(Widen(b15));
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),1));
            Goto: Label 5
          }
        }
      }
    }
  }
  TraceOperation 084948 (Push (Var (Global 239)));
  Let b16 = M[007684];
  Let b17 = M[007685];
  PushStack MakeHiLo(b16,b17);
  TraceOperation 084951 (Jz (Var Sp) (Branch F (Dloc 085151)));
  PopStack popped18;
  if (IsZero(popped18)) {
    TraceOperation 084955 (Get_child (Con 6) Sp (Branch F (Dloc 084959)));
    Let b19 = M[000472];
    Let b20 = M[000473];
    PushStack MakeHiLo(b19,b20);
    if (IsZero(MakeHiLo(b19,b20))) {
      Jump: 084959
    } else {
      Jump: 084959
    }
  } else {
    Jump: 085151
  }
LocOp 084959:
  TraceOperation 084959 (Pull (Con 6));
  PopStack popped1;
  SetLocal 6 popped1;
  TraceOperation 084962 (Jz (Var (Local 6)) (Branch T (Dloc 085151)));
  if (IsZero(GetLocal(6))) {
    Jump: 085151
  } else {
    Jump: 084966
  }
LocOp 084966:
  TraceOperation 084966 (Get_prop (Var (Local 6)) (Con 23) (Global 239));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(6),14)),12)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(6),14)),12),1)];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let loop_var4 = DeAddress(Offset(Address(MakeHiLo(b1,b2)),Add(Mul(2,Widen(b3)),1)));
  Label 5: {
    Let b6 = M[Address(loop_var4)];
    if (IsZeroByte(b6)) {
      Let b7 = M[000310];
      Let b8 = M[000311];
      SetByte 007684 b7;
      SetByte 007685 b8;
    } else {
      if (TestBit(b6,7)) {
        Let b9 = M[Offset(Address(loop_var4),1)];
        if (Equal(23,Widen(BwAnd(b6,63)))) {
          if (Equal(Widen(BwAnd(b9,63)),2)) {
            Let b10 = M[Offset(Address(loop_var4),2)];
            Let b11 = M[Offset(Offset(Address(loop_var4),2),1)];
            SetByte 007684 b10;
            SetByte 007685 b11;
          } else {
            Let b12 = M[Offset(Address(loop_var4),2)];
            SetByte 007684 HiByte(Widen(b12));
            SetByte 007685 LoByte(Widen(b12));
          }
        } else {
          Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),2),Widen(BwAnd(b9,63))));
          Goto: Label 5
        }
      } else {
        if (TestBit(b6,6)) {
          if (Equal(23,Widen(BwAnd(b6,63)))) {
            Let b13 = M[Offset(Address(loop_var4),1)];
            Let b14 = M[Offset(Offset(Address(loop_var4),1),1)];
            SetByte 007684 b13;
            SetByte 007685 b14;
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),2));
            Goto: Label 5
          }
        } else {
          if (Equal(23,Widen(BwAnd(b6,63)))) {
            Let b15 = M[Offset(Address(loop_var4),1)];
            SetByte 007684 HiByte(Widen(b15));
            SetByte 007685 LoByte(Widen(b15));
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),1));
            Goto: Label 5
          }
        }
      }
    }
  }
  TraceOperation 084970 (Push (Var (Global 239)));
  Let b16 = M[007684];
  Let b17 = M[007685];
  PushStack MakeHiLo(b16,b17);
  TraceOperation 084973 (Call (Floc 111316) [Var (Local 5),Var Sp] Sp);
  PopStack popped18;
  PushFrame;
  PushReturnAddress 084973;
  SetLocal 1 GetLocal(5);
  SetLocal 2 popped18;
  MakeRoutineFrame 2;
  Jump: 111317
LocReturn 084973:
  PushStack call_result;
  TraceOperation 084980 (Jz (Var Sp) (Branch T (Dloc 085146)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 085146
  } else {
    TraceOperation 084984 (Get_prop (Var (Local 6)) (Con 23) (Global 239));
    Let b2 = M[Offset(Offset(000378,Mul(GetLocal(6),14)),12)];
    Let b3 = M[Offset(Offset(Offset(000378,Mul(GetLocal(6),14)),12),1)];
    Let b4 = M[Address(MakeHiLo(b2,b3))];
    Let loop_var5 = DeAddress(Offset(Address(MakeHiLo(b2,b3)),Add(Mul(2,Widen(b4)),1)));
    Label 6: {
      Let b7 = M[Address(loop_var5)];
      if (IsZeroByte(b7)) {
        Let b8 = M[000310];
        Let b9 = M[000311];
        SetByte 007684 b8;
        SetByte 007685 b9;
      } else {
        if (TestBit(b7,7)) {
          Let b10 = M[Offset(Address(loop_var5),1)];
          if (Equal(23,Widen(BwAnd(b7,63)))) {
            if (Equal(Widen(BwAnd(b10,63)),2)) {
              Let b11 = M[Offset(Address(loop_var5),2)];
              Let b12 = M[Offset(Offset(Address(loop_var5),2),1)];
              SetByte 007684 b11;
              SetByte 007685 b12;
            } else {
              Let b13 = M[Offset(Address(loop_var5),2)];
              SetByte 007684 HiByte(Widen(b13));
              SetByte 007685 LoByte(Widen(b13));
            }
          } else {
            Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),2),Widen(BwAnd(b10,63))));
            Goto: Label 6
          }
        } else {
          if (TestBit(b7,6)) {
            if (Equal(23,Widen(BwAnd(b7,63)))) {
              Let b14 = M[Offset(Address(loop_var5),1)];
              Let b15 = M[Offset(Offset(Address(loop_var5),1),1)];
              SetByte 007684 b14;
              SetByte 007685 b15;
            } else {
              Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),1),2));
              Goto: Label 6
            }
          } else {
            if (Equal(23,Widen(BwAnd(b7,63)))) {
              Let b16 = M[Offset(Address(loop_var5),1)];
              SetByte 007684 HiByte(Widen(b16));
              SetByte 007685 LoByte(Widen(b16));
            } else {
              Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),1),1));
              Goto: Label 6
            }
          }
        }
      }
    }
    TraceOperation 084988 (Push (Var (Global 239)));
    Let b17 = M[007684];
    Let b18 = M[007685];
    PushStack MakeHiLo(b17,b18);
    TraceOperation 084991 (Call (Floc 110116) [Var (Local 5),Var Sp] (Local 7));
    PopStack popped19;
    PushFrame;
    PushReturnAddress 084991;
    SetLocal 1 GetLocal(5);
    SetLocal 2 popped19;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 110117
  }
LocReturn 084991:
  SetLocal 7 call_result;
  TraceOperation 084998 (Jz (Var (Local 7)) (Branch F (Dloc 085004)));
  if (IsZero(GetLocal(7))) {
    TraceOperation 085001 (Jump 085146);
    Jump: 085146
  } else {
    Jump: 085004
  }
LocOp 085004:
  TraceOperation 085004 (Jz (Var (Local 7)) (Branch T (Dloc 085049)));
  if (IsZero(GetLocal(7))) {
    Jump: 085049
  } else {
    TraceOperation 085007 (Test_attr (Var (Local 7)) (Con 32) (Branch F (Dloc 085049)));
    Let b1 = M[Offset(Offset(000378,Mul(GetLocal(7),14)),4)];
    if (TestBit(b1,7)) {
      TraceOperation 085011 (Get_prop (Var (Local 7)) (Con 35) (Global 239));
      Let b2 = M[Offset(Offset(000378,Mul(GetLocal(7),14)),12)];
      Let b3 = M[Offset(Offset(Offset(000378,Mul(GetLocal(7),14)),12),1)];
      Let b4 = M[Address(MakeHiLo(b2,b3))];
      Let loop_var5 = DeAddress(Offset(Address(MakeHiLo(b2,b3)),Add(Mul(2,Widen(b4)),1)));
      Label 6: {
        Let b7 = M[Address(loop_var5)];
        if (IsZeroByte(b7)) {
          Let b8 = M[000334];
          Let b9 = M[000335];
          SetByte 007684 b8;
          SetByte 007685 b9;
        } else {
          if (TestBit(b7,7)) {
            Let b10 = M[Offset(Address(loop_var5),1)];
            if (Equal(35,Widen(BwAnd(b7,63)))) {
              if (Equal(Widen(BwAnd(b10,63)),2)) {
                Let b11 = M[Offset(Address(loop_var5),2)];
                Let b12 = M[Offset(Offset(Address(loop_var5),2),1)];
                SetByte 007684 b11;
                SetByte 007685 b12;
              } else {
                Let b13 = M[Offset(Address(loop_var5),2)];
                SetByte 007684 HiByte(Widen(b13));
                SetByte 007685 LoByte(Widen(b13));
              }
            } else {
              Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),2),Widen(BwAnd(b10,63))));
              Goto: Label 6
            }
          } else {
            if (TestBit(b7,6)) {
              if (Equal(35,Widen(BwAnd(b7,63)))) {
                Let b14 = M[Offset(Address(loop_var5),1)];
                Let b15 = M[Offset(Offset(Address(loop_var5),1),1)];
                SetByte 007684 b14;
                SetByte 007685 b15;
              } else {
                Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),1),2));
                Goto: Label 6
              }
            } else {
              if (Equal(35,Widen(BwAnd(b7,63)))) {
                Let b16 = M[Offset(Address(loop_var5),1)];
                SetByte 007684 HiByte(Widen(b16));
                SetByte 007685 LoByte(Widen(b16));
              } else {
                Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),1),1));
                Goto: Label 6
              }
            }
          }
        }
      }
      TraceOperation 085015 (Push (Var (Global 239)));
      Let b17 = M[007684];
      Let b18 = M[007685];
      PushStack MakeHiLo(b17,b18);
      TraceOperation 085018 (Jg (Var Sp) (Con 0) (Branch F (Dloc 085049)));
      PopStack popped19;
      if (GreaterThan(popped19,0)) {
        TraceOperation 085022 (Jz (Var (Local 3)) (Branch T (Dloc 085032)));
        if (IsZero(GetLocal(3))) {
          Jump: 085032
        } else {
          TraceOperation 085025 (Call (Fvar (Local 3)) [Var (Local 7)] Sp);
          if (IsZeroAddress(PackedAddress Z5(GetLocal(3)))) {
            PushStack 0;
            Jump: 085029
          } else {
            PushFrame;
            PushReturnAddress 085025;
            SetLocal 1 GetLocal(7);
            SetNumberActuals 1;
            JumpIndirect: (routine) PackedAddress Z5(GetLocal(3))
          }
        }
      } else {
        Jump: 085049
      }
    } else {
      Jump: 085049
    }
  }
LocReturn 085025:
  PushStack call_result;
  Jump: 085029
LocOp 085029:
  TraceOperation 085029 (Jz (Var Sp) (Branch T (Dloc 085049)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 085049
  } else {
    Jump: 085032
  }
LocOp 085032:
  TraceOperation 085032 (Or (Var (Local 6)) (Con -32768) Sp);
  PushStack Or(GetLocal(6),-32768);
  TraceOperation 085038 (Put_prop (Var (Local 5)) (Con 35) (Var Sp));
  PopStack popped1;
  Let b2 = M[Offset(Offset(000378,Mul(GetLocal(5),14)),12)];
  Let b3 = M[Offset(Offset(Offset(000378,Mul(GetLocal(5),14)),12),1)];
  Let b4 = M[Address(MakeHiLo(b2,b3))];
  Let loop_var5 = DeAddress(Offset(Address(MakeHiLo(b2,b3)),Add(Mul(2,Widen(b4)),1)));
  Label 6: {
    Let b7 = M[Address(loop_var5)];
    if (IsZeroByte(b7)) {
      Error: ("putProp",35)
    } else {
      if (TestBit(b7,7)) {
        Let b8 = M[Offset(Address(loop_var5),1)];
        if (Equal(35,Widen(BwAnd(b7,63)))) {
          if (Equal(Widen(BwAnd(b8,63)),2)) {
            SetByte Offset(Address(loop_var5),2) HiByte(popped1);
            SetByte Offset(Offset(Address(loop_var5),2),1) LoByte(popped1);
          } else {
            SetByte Offset(Address(loop_var5),2) LoByte(popped1);
          }
        } else {
          Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),2),Widen(BwAnd(b8,63))));
          Goto: Label 6
        }
      } else {
        if (TestBit(b7,6)) {
          if (Equal(35,Widen(BwAnd(b7,63)))) {
            SetByte Offset(Address(loop_var5),1) HiByte(popped1);
            SetByte Offset(Offset(Address(loop_var5),1),1) LoByte(popped1);
          } else {
            Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),1),2));
            Goto: Label 6
          }
        } else {
          if (Equal(35,Widen(BwAnd(b7,63)))) {
            SetByte Offset(Address(loop_var5),1) LoByte(popped1);
          } else {
            Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),1),1));
            Goto: Label 6
          }
        }
      }
    }
  }
  TraceOperation 085043 (Store (Con 8) (Con 1));
  SetLocal 8 1;
  TraceOperation 085046 (Jump 085146);
  Jump: 085146
LocOp 085049:
  TraceOperation 085049 (Jz (Var (Local 4)) (Branch T (Dloc 085146)));
  if (IsZero(GetLocal(4))) {
    Jump: 085146
  } else {
    TraceOperation 085053 (Call (Floc 026172) [Var (Local 7),Con 16] Sp);
    PushFrame;
    PushReturnAddress 085053;
    SetLocal 1 GetLocal(7);
    SetLocal 2 16;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  }
LocReturn 085053:
  PushStack call_result;
  TraceOperation 085060 (Jz (Var Sp) (Branch T (Dloc 085146)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 085146
  } else {
    TraceOperation 085064 (And (Var (Local 4)) (Con 2) Sp);
    PushStack And(GetLocal(4),2);
    TraceOperation 085068 (Jz (Var Sp) (Branch F (Dloc 085085)));
    PopStack popped2;
    if (IsZero(popped2)) {
      TraceOperation 085071 (Test_attr (Var (Local 7)) (Con 13) (Branch T (Dloc 085085)));
      Let b3 = M[Offset(Offset(000378,Mul(GetLocal(7),14)),1)];
      if (TestBit(b3,2)) {
        Jump: 085085
      } else {
        TraceOperation 085075 (Test_attr (Var (Local 7)) (Con 14) (Branch F (Dloc 085146)));
        Let b4 = M[Offset(Offset(000378,Mul(GetLocal(7),14)),1)];
        if (TestBit(b4,1)) {
          TraceOperation 085080 (Test_attr (Var (Local 7)) (Con 10) (Branch T (Dloc 085146)));
          Let b5 = M[Offset(Offset(000378,Mul(GetLocal(7),14)),1)];
          if (TestBit(b5,5)) {
            Jump: 085146
          } else {
            Jump: 085085
          }
        } else {
          Jump: 085146
        }
      }
    } else {
      Jump: 085085
    }
  }
LocOp 085085:
  TraceOperation 085085 (Store (Con 9) (Var (Global 1)));
  Let b1 = M[007208];
  Let b2 = M[007209];
  SetLocal 9 MakeHiLo(b1,b2);
  TraceOperation 085088 (Store (Con 17) (Var (Local 5)));
  SetByte 007208 HiByte(GetLocal(5));
  SetByte 007209 LoByte(GetLocal(5));
  TraceOperation 085091 (Call (Floc 110196) [Var (Local 7),Con 24] (Local 10));
  PushFrame;
  PushReturnAddress 085091;
  SetLocal 1 GetLocal(7);
  SetLocal 2 24;
  MakeRoutineFrame 15;
  SetLocal 15 0;
  SetLocal 14 0;
  SetLocal 13 0;
  SetLocal 12 0;
  SetLocal 11 0;
  SetLocal 10 0;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 110197
LocReturn 085091:
  SetLocal 10 call_result;
  TraceOperation 085098 (Store (Con 17) (Var (Local 9)));
  SetByte 007208 HiByte(GetLocal(9));
  SetByte 007209 LoByte(GetLocal(9));
  TraceOperation 085101 (Jz (Var (Local 10)) (Branch T (Dloc 085146)));
  if (IsZero(GetLocal(10))) {
    Jump: 085146
  } else {
    TraceOperation 085104 (Test_attr (Var (Local 10)) (Con 32) (Branch F (Dloc 085146)));
    Let b1 = M[Offset(Offset(000378,Mul(GetLocal(10),14)),4)];
    if (TestBit(b1,7)) {
      TraceOperation 085108 (Get_prop (Var (Local 10)) (Con 35) (Global 239));
      Let b2 = M[Offset(Offset(000378,Mul(GetLocal(10),14)),12)];
      Let b3 = M[Offset(Offset(Offset(000378,Mul(GetLocal(10),14)),12),1)];
      Let b4 = M[Address(MakeHiLo(b2,b3))];
      Let loop_var5 = DeAddress(Offset(Address(MakeHiLo(b2,b3)),Add(Mul(2,Widen(b4)),1)));
      Label 6: {
        Let b7 = M[Address(loop_var5)];
        if (IsZeroByte(b7)) {
          Let b8 = M[000334];
          Let b9 = M[000335];
          SetByte 007684 b8;
          SetByte 007685 b9;
        } else {
          if (TestBit(b7,7)) {
            Let b10 = M[Offset(Address(loop_var5),1)];
            if (Equal(35,Widen(BwAnd(b7,63)))) {
              if (Equal(Widen(BwAnd(b10,63)),2)) {
                Let b11 = M[Offset(Address(loop_var5),2)];
                Let b12 = M[Offset(Offset(Address(loop_var5),2),1)];
                SetByte 007684 b11;
                SetByte 007685 b12;
              } else {
                Let b13 = M[Offset(Address(loop_var5),2)];
                SetByte 007684 HiByte(Widen(b13));
                SetByte 007685 LoByte(Widen(b13));
              }
            } else {
              Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),2),Widen(BwAnd(b10,63))));
              Goto: Label 6
            }
          } else {
            if (TestBit(b7,6)) {
              if (Equal(35,Widen(BwAnd(b7,63)))) {
                Let b14 = M[Offset(Address(loop_var5),1)];
                Let b15 = M[Offset(Offset(Address(loop_var5),1),1)];
                SetByte 007684 b14;
                SetByte 007685 b15;
              } else {
                Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),1),2));
                Goto: Label 6
              }
            } else {
              if (Equal(35,Widen(BwAnd(b7,63)))) {
                Let b16 = M[Offset(Address(loop_var5),1)];
                SetByte 007684 HiByte(Widen(b16));
                SetByte 007685 LoByte(Widen(b16));
              } else {
                Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),1),1));
                Goto: Label 6
              }
            }
          }
        }
      }
      TraceOperation 085112 (Push (Var (Global 239)));
      Let b17 = M[007684];
      Let b18 = M[007685];
      PushStack MakeHiLo(b17,b18);
      TraceOperation 085115 (Jg (Var Sp) (Con 0) (Branch F (Dloc 085146)));
      PopStack popped19;
      if (GreaterThan(popped19,0)) {
        TraceOperation 085119 (Jz (Var (Local 3)) (Branch T (Dloc 085129)));
        if (IsZero(GetLocal(3))) {
          Jump: 085129
        } else {
          TraceOperation 085122 (Call (Fvar (Local 3)) [Var (Local 10)] Sp);
          if (IsZeroAddress(PackedAddress Z5(GetLocal(3)))) {
            PushStack 0;
            Jump: 085126
          } else {
            PushFrame;
            PushReturnAddress 085122;
            SetLocal 1 GetLocal(10);
            SetNumberActuals 1;
            JumpIndirect: (routine) PackedAddress Z5(GetLocal(3))
          }
        }
      } else {
        Jump: 085146
      }
    } else {
      Jump: 085146
    }
  }
LocReturn 085122:
  PushStack call_result;
  Jump: 085126
LocOp 085126:
  TraceOperation 085126 (Jz (Var Sp) (Branch T (Dloc 085146)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 085146
  } else {
    Jump: 085129
  }
LocOp 085129:
  TraceOperation 085129 (Or (Var (Local 6)) (Con -32768) Sp);
  PushStack Or(GetLocal(6),-32768);
  TraceOperation 085135 (Put_prop (Var (Local 5)) (Con 35) (Var Sp));
  PopStack popped1;
  Let b2 = M[Offset(Offset(000378,Mul(GetLocal(5),14)),12)];
  Let b3 = M[Offset(Offset(Offset(000378,Mul(GetLocal(5),14)),12),1)];
  Let b4 = M[Address(MakeHiLo(b2,b3))];
  Let loop_var5 = DeAddress(Offset(Address(MakeHiLo(b2,b3)),Add(Mul(2,Widen(b4)),1)));
  Label 6: {
    Let b7 = M[Address(loop_var5)];
    if (IsZeroByte(b7)) {
      Error: ("putProp",35)
    } else {
      if (TestBit(b7,7)) {
        Let b8 = M[Offset(Address(loop_var5),1)];
        if (Equal(35,Widen(BwAnd(b7,63)))) {
          if (Equal(Widen(BwAnd(b8,63)),2)) {
            SetByte Offset(Address(loop_var5),2) HiByte(popped1);
            SetByte Offset(Offset(Address(loop_var5),2),1) LoByte(popped1);
          } else {
            SetByte Offset(Address(loop_var5),2) LoByte(popped1);
          }
        } else {
          Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),2),Widen(BwAnd(b8,63))));
          Goto: Label 6
        }
      } else {
        if (TestBit(b7,6)) {
          if (Equal(35,Widen(BwAnd(b7,63)))) {
            SetByte Offset(Address(loop_var5),1) HiByte(popped1);
            SetByte Offset(Offset(Address(loop_var5),1),1) LoByte(popped1);
          } else {
            Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),1),2));
            Goto: Label 6
          }
        } else {
          if (Equal(35,Widen(BwAnd(b7,63)))) {
            SetByte Offset(Address(loop_var5),1) LoByte(popped1);
          } else {
            Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),1),1));
            Goto: Label 6
          }
        }
      }
    }
  }
  TraceOperation 085140 (Store (Con 8) (Con 1));
  SetLocal 8 1;
  TraceOperation 085143 (Jump 085146);
  Jump: 085146
LocOp 085146:
  TraceOperation 085146 (Get_sibling (Var (Local 6)) (Local 6) (Branch T (Dloc 084966)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(6),14)),8)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(6),14)),8),1)];
  SetLocal 6 MakeHiLo(b1,b2);
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 085151
  } else {
    Jump: 084966
  }
LocOp 085151:
  TraceOperation 085151 (Inc (Con 5));
  SetLocal 5 Add(GetLocal(5),1);
  TraceOperation 085153 (Jg (Var (Local 5)) (Con 72) (Branch T (Dloc 085162)));
  if (GreaterThan(GetLocal(5),72)) {
    Jump: 085162
  } else {
    TraceOperation 085159 (Jump 084928);
    Jump: 084928
  }
LocOp 085162:
  TraceOperation 085162 (Store (Con 5) (Con 1));
  SetLocal 5 1;
  Jump: 085165
LocOp 085165:
  TraceOperation 085165 (Test_attr (Var (Local 5)) (Con 32) (Branch F (Dloc 085187)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(5),14)),4)];
  if (TestBit(b1,7)) {
    TraceOperation 085169 (Get_prop (Var (Local 5)) (Con 35) (Global 239));
    Let b2 = M[Offset(Offset(000378,Mul(GetLocal(5),14)),12)];
    Let b3 = M[Offset(Offset(Offset(000378,Mul(GetLocal(5),14)),12),1)];
    Let b4 = M[Address(MakeHiLo(b2,b3))];
    Let loop_var5 = DeAddress(Offset(Address(MakeHiLo(b2,b3)),Add(Mul(2,Widen(b4)),1)));
    Label 6: {
      Let b7 = M[Address(loop_var5)];
      if (IsZeroByte(b7)) {
        Let b8 = M[000334];
        Let b9 = M[000335];
        SetByte 007684 b8;
        SetByte 007685 b9;
      } else {
        if (TestBit(b7,7)) {
          Let b10 = M[Offset(Address(loop_var5),1)];
          if (Equal(35,Widen(BwAnd(b7,63)))) {
            if (Equal(Widen(BwAnd(b10,63)),2)) {
              Let b11 = M[Offset(Address(loop_var5),2)];
              Let b12 = M[Offset(Offset(Address(loop_var5),2),1)];
              SetByte 007684 b11;
              SetByte 007685 b12;
            } else {
              Let b13 = M[Offset(Address(loop_var5),2)];
              SetByte 007684 HiByte(Widen(b13));
              SetByte 007685 LoByte(Widen(b13));
            }
          } else {
            Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),2),Widen(BwAnd(b10,63))));
            Goto: Label 6
          }
        } else {
          if (TestBit(b7,6)) {
            if (Equal(35,Widen(BwAnd(b7,63)))) {
              Let b14 = M[Offset(Address(loop_var5),1)];
              Let b15 = M[Offset(Offset(Address(loop_var5),1),1)];
              SetByte 007684 b14;
              SetByte 007685 b15;
            } else {
              Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),1),2));
              Goto: Label 6
            }
          } else {
            if (Equal(35,Widen(BwAnd(b7,63)))) {
              Let b16 = M[Offset(Address(loop_var5),1)];
              SetByte 007684 HiByte(Widen(b16));
              SetByte 007685 LoByte(Widen(b16));
            } else {
              Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),1),1));
              Goto: Label 6
            }
          }
        }
      }
    }
    TraceOperation 085173 (Push (Var (Global 239)));
    Let b17 = M[007684];
    Let b18 = M[007685];
    PushStack MakeHiLo(b17,b18);
    TraceOperation 085176 (And (Var Sp) (Con 32767) Sp);
    PopStack popped19;
    PushStack And(popped19,32767);
    TraceOperation 085182 (Put_prop (Var (Local 5)) (Con 35) (Var Sp));
    PopStack popped20;
    Let b21 = M[Offset(Offset(000378,Mul(GetLocal(5),14)),12)];
    Let b22 = M[Offset(Offset(Offset(000378,Mul(GetLocal(5),14)),12),1)];
    Let b23 = M[Address(MakeHiLo(b21,b22))];
    Let loop_var24 = DeAddress(Offset(Address(MakeHiLo(b21,b22)),Add(Mul(2,Widen(b23)),1)));
    Label 25: {
      Let b26 = M[Address(loop_var24)];
      if (IsZeroByte(b26)) {
        Error: ("putProp",35)
      } else {
        if (TestBit(b26,7)) {
          Let b27 = M[Offset(Address(loop_var24),1)];
          if (Equal(35,Widen(BwAnd(b26,63)))) {
            if (Equal(Widen(BwAnd(b27,63)),2)) {
              SetByte Offset(Address(loop_var24),2) HiByte(popped20);
              SetByte Offset(Offset(Address(loop_var24),2),1) LoByte(popped20);
            } else {
              SetByte Offset(Address(loop_var24),2) LoByte(popped20);
            }
          } else {
            Assign loop_var24 = DeAddress(Offset(Offset(Address(loop_var24),2),Widen(BwAnd(b27,63))));
            Goto: Label 25
          }
        } else {
          if (TestBit(b26,6)) {
            if (Equal(35,Widen(BwAnd(b26,63)))) {
              SetByte Offset(Address(loop_var24),1) HiByte(popped20);
              SetByte Offset(Offset(Address(loop_var24),1),1) LoByte(popped20);
            } else {
              Assign loop_var24 = DeAddress(Offset(Offset(Address(loop_var24),1),2));
              Goto: Label 25
            }
          } else {
            if (Equal(35,Widen(BwAnd(b26,63)))) {
              SetByte Offset(Address(loop_var24),1) LoByte(popped20);
            } else {
              Assign loop_var24 = DeAddress(Offset(Offset(Address(loop_var24),1),1));
              Goto: Label 25
            }
          }
        }
      }
    }
    Jump: 085187
  } else {
    Jump: 085187
  }
LocOp 085187:
  TraceOperation 085187 (Inc (Con 5));
  SetLocal 5 Add(GetLocal(5),1);
  TraceOperation 085189 (Jg (Var (Local 5)) (Con 72) (Branch T (Dloc 085198)));
  if (GreaterThan(GetLocal(5),72)) {
    Jump: 085198
  } else {
    TraceOperation 085195 (Jump 085165);
    Jump: 085165
  }
LocOp 085198:
  TraceOperation 085198 (Get_prop (Var (Local 1)) (Con 35) (Global 239));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),12)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),12),1)];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let loop_var4 = DeAddress(Offset(Address(MakeHiLo(b1,b2)),Add(Mul(2,Widen(b3)),1)));
  Label 5: {
    Let b6 = M[Address(loop_var4)];
    if (IsZeroByte(b6)) {
      Let b7 = M[000334];
      Let b8 = M[000335];
      SetByte 007684 b7;
      SetByte 007685 b8;
    } else {
      if (TestBit(b6,7)) {
        Let b9 = M[Offset(Address(loop_var4),1)];
        if (Equal(35,Widen(BwAnd(b6,63)))) {
          if (Equal(Widen(BwAnd(b9,63)),2)) {
            Let b10 = M[Offset(Address(loop_var4),2)];
            Let b11 = M[Offset(Offset(Address(loop_var4),2),1)];
            SetByte 007684 b10;
            SetByte 007685 b11;
          } else {
            Let b12 = M[Offset(Address(loop_var4),2)];
            SetByte 007684 HiByte(Widen(b12));
            SetByte 007685 LoByte(Widen(b12));
          }
        } else {
          Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),2),Widen(BwAnd(b9,63))));
          Goto: Label 5
        }
      } else {
        if (TestBit(b6,6)) {
          if (Equal(35,Widen(BwAnd(b6,63)))) {
            Let b13 = M[Offset(Address(loop_var4),1)];
            Let b14 = M[Offset(Offset(Address(loop_var4),1),1)];
            SetByte 007684 b13;
            SetByte 007685 b14;
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),2));
            Goto: Label 5
          }
        } else {
          if (Equal(35,Widen(BwAnd(b6,63)))) {
            Let b15 = M[Offset(Address(loop_var4),1)];
            SetByte 007684 HiByte(Widen(b15));
            SetByte 007685 LoByte(Widen(b15));
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),1));
            Goto: Label 5
          }
        }
      }
    }
  }
  TraceOperation 085202 (Push (Var (Global 239)));
  Let b16 = M[007684];
  Let b17 = M[007685];
  PushStack MakeHiLo(b16,b17);
  TraceOperation 085205 (Jz (Var Sp) (Branch T (Dloc 085216)));
  PopStack popped18;
  if (IsZero(popped18)) {
    Jump: 085216
  } else {
    TraceOperation 085208 (Get_prop (Var (Local 1)) (Con 35) (Global 239));
    Let b19 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),12)];
    Let b20 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),12),1)];
    Let b21 = M[Address(MakeHiLo(b19,b20))];
    Let loop_var22 = DeAddress(Offset(Address(MakeHiLo(b19,b20)),Add(Mul(2,Widen(b21)),1)));
    Label 23: {
      Let b24 = M[Address(loop_var22)];
      if (IsZeroByte(b24)) {
        Let b25 = M[000334];
        Let b26 = M[000335];
        SetByte 007684 b25;
        SetByte 007685 b26;
      } else {
        if (TestBit(b24,7)) {
          Let b27 = M[Offset(Address(loop_var22),1)];
          if (Equal(35,Widen(BwAnd(b24,63)))) {
            if (Equal(Widen(BwAnd(b27,63)),2)) {
              Let b28 = M[Offset(Address(loop_var22),2)];
              Let b29 = M[Offset(Offset(Address(loop_var22),2),1)];
              SetByte 007684 b28;
              SetByte 007685 b29;
            } else {
              Let b30 = M[Offset(Address(loop_var22),2)];
              SetByte 007684 HiByte(Widen(b30));
              SetByte 007685 LoByte(Widen(b30));
            }
          } else {
            Assign loop_var22 = DeAddress(Offset(Offset(Address(loop_var22),2),Widen(BwAnd(b27,63))));
            Goto: Label 23
          }
        } else {
          if (TestBit(b24,6)) {
            if (Equal(35,Widen(BwAnd(b24,63)))) {
              Let b31 = M[Offset(Address(loop_var22),1)];
              Let b32 = M[Offset(Offset(Address(loop_var22),1),1)];
              SetByte 007684 b31;
              SetByte 007685 b32;
            } else {
              Assign loop_var22 = DeAddress(Offset(Offset(Address(loop_var22),1),2));
              Goto: Label 23
            }
          } else {
            if (Equal(35,Widen(BwAnd(b24,63)))) {
              Let b33 = M[Offset(Address(loop_var22),1)];
              SetByte 007684 HiByte(Widen(b33));
              SetByte 007685 LoByte(Widen(b33));
            } else {
              Assign loop_var22 = DeAddress(Offset(Offset(Address(loop_var22),1),1));
              Goto: Label 23
            }
          }
        }
      }
    }
    TraceOperation 085212 (Push (Var (Global 239)));
    Let b34 = M[007684];
    Let b35 = M[007685];
    PushStack MakeHiLo(b34,b35);
    TraceOperation 085215 Ret_popped;
    PopStack popped36;
    PopFrame;
    PopReturnAddress return_address_37;
    SetResult popped36;
    JumpIndirect: (return) return_address_37
  }
LocOp 085216:
  TraceOperation 085216 (Jz (Var (Local 8)) (Branch F (Dloc 085227)));
  if (IsZero(GetLocal(8))) {
    TraceOperation 085219 (Get_prop (Var (Local 1)) (Con 35) (Global 239));
    Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),12)];
    Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),12),1)];
    Let b3 = M[Address(MakeHiLo(b1,b2))];
    Let loop_var4 = DeAddress(Offset(Address(MakeHiLo(b1,b2)),Add(Mul(2,Widen(b3)),1)));
    Label 5: {
      Let b6 = M[Address(loop_var4)];
      if (IsZeroByte(b6)) {
        Let b7 = M[000334];
        Let b8 = M[000335];
        SetByte 007684 b7;
        SetByte 007685 b8;
      } else {
        if (TestBit(b6,7)) {
          Let b9 = M[Offset(Address(loop_var4),1)];
          if (Equal(35,Widen(BwAnd(b6,63)))) {
            if (Equal(Widen(BwAnd(b9,63)),2)) {
              Let b10 = M[Offset(Address(loop_var4),2)];
              Let b11 = M[Offset(Offset(Address(loop_var4),2),1)];
              SetByte 007684 b10;
              SetByte 007685 b11;
            } else {
              Let b12 = M[Offset(Address(loop_var4),2)];
              SetByte 007684 HiByte(Widen(b12));
              SetByte 007685 LoByte(Widen(b12));
            }
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),2),Widen(BwAnd(b9,63))));
            Goto: Label 5
          }
        } else {
          if (TestBit(b6,6)) {
            if (Equal(35,Widen(BwAnd(b6,63)))) {
              Let b13 = M[Offset(Address(loop_var4),1)];
              Let b14 = M[Offset(Offset(Address(loop_var4),1),1)];
              SetByte 007684 b13;
              SetByte 007685 b14;
            } else {
              Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),2));
              Goto: Label 5
            }
          } else {
            if (Equal(35,Widen(BwAnd(b6,63)))) {
              Let b15 = M[Offset(Address(loop_var4),1)];
              SetByte 007684 HiByte(Widen(b15));
              SetByte 007685 LoByte(Widen(b15));
            } else {
              Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),1));
              Goto: Label 5
            }
          }
        }
      }
    }
    TraceOperation 085223 (Push (Var (Global 239)));
    Let b16 = M[007684];
    Let b17 = M[007685];
    PushStack MakeHiLo(b16,b17);
    TraceOperation 085226 Ret_popped;
    PopStack popped18;
    PopFrame;
    PopReturnAddress return_address_19;
    SetResult popped18;
    JumpIndirect: (return) return_address_19
  } else {
    Jump: 085227
  }
LocOp 085227:
  TraceOperation 085227 (Jump 084918);
  Jump: 084918
LocOp 085230:
  TraceOperation 085230 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 085232:
  MakeRoutineFrame 6;
  if (LessThanByte(num_actuals,6)) {
    SetLocal 6 0;
    if (LessThanByte(num_actuals,5)) {
      SetLocal 5 0;
      if (LessThanByte(num_actuals,4)) {
        SetLocal 4 0;
        if (LessThanByte(num_actuals,3)) {
          SetLocal 3 0;
          if (LessThanByte(num_actuals,2)) {
            SetLocal 2 0;
            if (LessThanByte(num_actuals,1)) {
              SetLocal 1 0;
            }
          }
        }
      }
    }
  }
  Jump: 085233
LocOp 085233:
  TraceOperation 085233 (Jz (Var (Local 1)) (Branch F (Dloc 085239)));
  if (IsZero(GetLocal(1))) {
    TraceOperation 085236 (Ret (Con -1));
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult -1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 085239
  }
LocOp 085239:
  TraceOperation 085239 (Jz (Var (Local 2)) (Branch F (Dloc 085245)));
  if (IsZero(GetLocal(2))) {
    TraceOperation 085242 (Ret (Con -1));
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult -1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 085245
  }
LocOp 085245:
  TraceOperation 085245 (Je [Var (Local 1),Var (Local 2)] (Branch F (Dloc 085250)));
  if (Equal(GetLocal(1),GetLocal(2))) {
    TraceOperation 085249 Rfalse;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 0;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 085250
  }
LocOp 085250:
  TraceOperation 085250 (Test_attr (Var (Local 1)) (Con 32) (Branch F (Dloc 085309)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),4)];
  if (TestBit(b1,7)) {
    TraceOperation 085254 (Test_attr (Var (Local 2)) (Con 32) (Branch F (Dloc 085309)));
    Let b2 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),4)];
    if (TestBit(b2,7)) {
      TraceOperation 085258 (Call (Floc 084636) [Var (Local 1),Var (Local 2),Var (Local 3),Var (Local 4)] (Local 5));
      PushFrame;
      PushReturnAddress 085258;
      SetLocal 1 GetLocal(1);
      SetLocal 2 GetLocal(2);
      SetLocal 3 GetLocal(3);
      SetLocal 4 GetLocal(4);
      MakeRoutineFrame 8;
      SetLocal 8 0;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      Jump: 084637
    } else {
      Jump: 085309
    }
  } else {
    Jump: 085309
  }
LocReturn 085258:
  SetLocal 5 call_result;
  TraceOperation 085268 (Jz (Var (Local 5)) (Branch F (Dloc 085274)));
  if (IsZero(GetLocal(5))) {
    TraceOperation 085271 (Ret (Con -1));
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult -1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 085274
  }
LocOp 085274:
  TraceOperation 085274 (Store (Con 6) (Con 0));
  SetLocal 6 0;
  TraceOperation 085277 (Store (Con 5) (Var (Local 1)));
  SetLocal 5 GetLocal(1);
  Jump: 085280
LocOp 085280:
  TraceOperation 085280 (Je [Var (Local 5),Var (Local 2)] (Branch T (Dloc 085307)));
  if (Equal(GetLocal(5),GetLocal(2))) {
    Jump: 085307
  } else {
    TraceOperation 085284 (Jl (Var (Local 6)) (Con 5) (Branch F (Dloc 085307)));
    if (LessThan(GetLocal(6),5)) {
      TraceOperation 085288 (Inc (Con 6));
      SetLocal 6 Add(GetLocal(6),1);
      TraceOperation 085290 (Get_prop (Var (Local 5)) (Con 35) (Global 239));
      Let b1 = M[Offset(Offset(000378,Mul(GetLocal(5),14)),12)];
      Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(5),14)),12),1)];
      Let b3 = M[Address(MakeHiLo(b1,b2))];
      Let loop_var4 = DeAddress(Offset(Address(MakeHiLo(b1,b2)),Add(Mul(2,Widen(b3)),1)));
      Label 5: {
        Let b6 = M[Address(loop_var4)];
        if (IsZeroByte(b6)) {
          Let b7 = M[000334];
          Let b8 = M[000335];
          SetByte 007684 b7;
          SetByte 007685 b8;
        } else {
          if (TestBit(b6,7)) {
            Let b9 = M[Offset(Address(loop_var4),1)];
            if (Equal(35,Widen(BwAnd(b6,63)))) {
              if (Equal(Widen(BwAnd(b9,63)),2)) {
                Let b10 = M[Offset(Address(loop_var4),2)];
                Let b11 = M[Offset(Offset(Address(loop_var4),2),1)];
                SetByte 007684 b10;
                SetByte 007685 b11;
              } else {
                Let b12 = M[Offset(Address(loop_var4),2)];
                SetByte 007684 HiByte(Widen(b12));
                SetByte 007685 LoByte(Widen(b12));
              }
            } else {
              Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),2),Widen(BwAnd(b9,63))));
              Goto: Label 5
            }
          } else {
            if (TestBit(b6,6)) {
              if (Equal(35,Widen(BwAnd(b6,63)))) {
                Let b13 = M[Offset(Address(loop_var4),1)];
                Let b14 = M[Offset(Offset(Address(loop_var4),1),1)];
                SetByte 007684 b13;
                SetByte 007685 b14;
              } else {
                Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),2));
                Goto: Label 5
              }
            } else {
              if (Equal(35,Widen(BwAnd(b6,63)))) {
                Let b15 = M[Offset(Address(loop_var4),1)];
                SetByte 007684 HiByte(Widen(b15));
                SetByte 007685 LoByte(Widen(b15));
              } else {
                Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),1));
                Goto: Label 5
              }
            }
          }
        }
      }
      TraceOperation 085294 (Push (Var (Global 239)));
      Let b16 = M[007684];
      Let b17 = M[007685];
      PushStack MakeHiLo(b16,b17);
      TraceOperation 085297 (Call (Floc 104012) [Var (Local 5),Var Sp] (Local 5));
      PopStack popped18;
      PushFrame;
      PushReturnAddress 085297;
      SetLocal 1 GetLocal(5);
      SetLocal 2 popped18;
      MakeRoutineFrame 4;
      SetLocal 4 0;
      SetLocal 3 0;
      Jump: 104013
    } else {
      Jump: 085307
    }
  }
LocReturn 085297:
  SetLocal 5 call_result;
  TraceOperation 085304 (Jump 085280);
  Jump: 085280
LocOp 085307:
  TraceOperation 085307 (Ret (Var (Local 6)));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult GetLocal(6);
  JumpIndirect: (return) return_address_1
LocOp 085309:
  TraceOperation 085309 (Ret (Con -1));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult -1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 085312:
  MakeRoutineFrame 9;
  if (LessThanByte(num_actuals,9)) {
    SetLocal 9 0;
    if (LessThanByte(num_actuals,8)) {
      SetLocal 8 0;
      if (LessThanByte(num_actuals,7)) {
        SetLocal 7 0;
        if (LessThanByte(num_actuals,6)) {
          SetLocal 6 0;
          if (LessThanByte(num_actuals,5)) {
            SetLocal 5 0;
            if (LessThanByte(num_actuals,4)) {
              SetLocal 4 0;
              if (LessThanByte(num_actuals,3)) {
                SetLocal 3 0;
                if (LessThanByte(num_actuals,2)) {
                  SetLocal 2 0;
                  if (LessThanByte(num_actuals,1)) {
                    SetLocal 1 0;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  Jump: 085313
LocOp 085313:
  TraceOperation 085313 (Jz (Var (Local 4)) (Branch T (Dloc 085337)));
  if (IsZero(GetLocal(4))) {
    Jump: 085337
  } else {
    TraceOperation 085316 (Jz (Var (Local 2)) (Branch F (Dloc 085322)));
    if (IsZero(GetLocal(2))) {
      TraceOperation 085319 (Ret (Con -1));
      PopFrame;
      PopReturnAddress return_address_1;
      SetResult -1;
      JumpIndirect: (return) return_address_1
    } else {
      Jump: 085322
    }
  }
LocOp 085322:
  TraceOperation 085322 (Jz (Var (Local 3)) (Branch F (Dloc 085328)));
  if (IsZero(GetLocal(3))) {
    TraceOperation 085325 (Ret (Con -1));
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult -1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 085328
  }
LocOp 085328:
  TraceOperation 085328 (Jz (Var (Local 1)) (Branch F (Dloc 085334)));
  if (IsZero(GetLocal(1))) {
    TraceOperation 085331 (Ret (Con -1));
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult -1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 085334
  }
LocOp 085334:
  TraceOperation 085334 (Jump 085349);
  Jump: 085349
LocOp 085337:
  TraceOperation 085337 (Jz (Var (Local 2)) (Branch F (Dloc 085341)));
  if (IsZero(GetLocal(2))) {
    TraceOperation 085340 Rfalse;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 0;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 085341
  }
LocOp 085341:
  TraceOperation 085341 (Jz (Var (Local 3)) (Branch F (Dloc 085345)));
  if (IsZero(GetLocal(3))) {
    TraceOperation 085344 Rfalse;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 0;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 085345
  }
LocOp 085345:
  TraceOperation 085345 (Jz (Var (Local 1)) (Branch F (Dloc 085349)));
  if (IsZero(GetLocal(1))) {
    TraceOperation 085348 Rfalse;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 0;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 085349
  }
LocOp 085349:
  TraceOperation 085349 (Je [Var (Local 2),Var (Local 3)] (Branch F (Dloc 085354)));
  if (Equal(GetLocal(2),GetLocal(3))) {
    TraceOperation 085353 Rfalse;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 0;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 085354
  }
LocOp 085354:
  TraceOperation 085354 (Mul (Con 3) (Var (Local 1)) Sp);
  PushStack Mul(3,GetLocal(1));
  TraceOperation 085358 (Loadw (Con 11790) (Var Sp) (Local 5));
  PopStack popped1;
  Let b2 = M[Offset(011790,Mul(2,popped1))];
  Let b3 = M[Offset(Offset(011790,Mul(2,popped1)),1)];
  SetLocal 5 MakeHiLo(b2,b3);
  TraceOperation 085364 (Mul (Con 3) (Var (Local 1)) Sp);
  PushStack Mul(3,GetLocal(1));
  TraceOperation 085368 (Add (Var Sp) (Con 1) Sp);
  PopStack popped4;
  PushStack Add(popped4,1);
  TraceOperation 085372 (Loadw (Con 11790) (Var Sp) (Local 6));
  PopStack popped5;
  Let b6 = M[Offset(011790,Mul(2,popped5))];
  Let b7 = M[Offset(Offset(011790,Mul(2,popped5)),1)];
  SetLocal 6 MakeHiLo(b6,b7);
  TraceOperation 085378 (Je [Var (Local 6),Con 8,Con -1] (Branch F (Dloc 085391)));
  if (LogOr(Equal(GetLocal(6),8),Equal(GetLocal(6),-1))) {
    TraceOperation 085385 (CallN (Floc 086692) [Con 30]);
    PushFrame;
    PushReturnAddress 085385;
    SetLocal 1 30;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 086693
  } else {
    Jump: 085391
  }
LocReturn 085385:
  TraceOperation 085390 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
LocOp 085391:
  TraceOperation 085391 (Jz (Var (Local 5)) (Branch F (Dloc 085395)));
  if (IsZero(GetLocal(5))) {
    TraceOperation 085394 Rfalse;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 0;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 085395
  }
LocOp 085395:
  TraceOperation 085395 (Store (Con 255) (Var (Local 6)));
  SetByte 007684 HiByte(GetLocal(6));
  SetByte 007685 LoByte(GetLocal(6));
  TraceOperation 085398 (Je [Var (Global 239),Con 3] (Branch F (Dloc 085413)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),3)) {
    TraceOperation 085402 (Call (Floc 085532) [Var (Local 5),Var (Local 2),Var (Local 3)] (Local 7));
    PushFrame;
    PushReturnAddress 085402;
    SetLocal 1 GetLocal(5);
    SetLocal 2 GetLocal(2);
    SetLocal 3 GetLocal(3);
    MakeRoutineFrame 5;
    SetLocal 5 0;
    SetLocal 4 0;
    Jump: 085533
  } else {
    Jump: 085413
  }
LocReturn 085402:
  SetLocal 7 call_result;
  TraceOperation 085410 (Jump 085439);
  Jump: 085439
LocOp 085413:
  TraceOperation 085413 (Je [Var (Global 239),Con 2] (Branch F (Dloc 085428)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),2)) {
    TraceOperation 085417 (Call (Floc 085480) [Var (Local 5),Var (Local 2),Var (Local 3)] (Local 7));
    PushFrame;
    PushReturnAddress 085417;
    SetLocal 1 GetLocal(5);
    SetLocal 2 GetLocal(2);
    SetLocal 3 GetLocal(3);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 085481
  } else {
    Jump: 085428
  }
LocReturn 085417:
  SetLocal 7 call_result;
  TraceOperation 085425 (Jump 085439);
  Jump: 085439
LocOp 085428:
  TraceOperation 085428 (Call (Floc 085592) [Var (Local 5),Var (Local 2),Var (Local 3),Var (Local 4)] Sp);
  PushFrame;
  PushReturnAddress 085428;
  SetLocal 1 GetLocal(5);
  SetLocal 2 GetLocal(2);
  SetLocal 3 GetLocal(3);
  SetLocal 4 GetLocal(4);
  MakeRoutineFrame 11;
  SetLocal 11 0;
  SetLocal 10 0;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  Jump: 085593
LocReturn 085428:
  PushStack call_result;
  TraceOperation 085438 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 085439:
  TraceOperation 085439 (Jz (Var (Local 4)) (Branch T (Dloc 085476)));
  if (IsZero(GetLocal(4))) {
    Jump: 085476
  } else {
    TraceOperation 085442 (Jz (Var (Local 7)) (Branch F (Dloc 085448)));
    if (IsZero(GetLocal(7))) {
      TraceOperation 085445 (Ret (Con -1));
      PopFrame;
      PopReturnAddress return_address_1;
      SetResult -1;
      JumpIndirect: (return) return_address_1
    } else {
      Jump: 085448
    }
  }
LocOp 085448:
  TraceOperation 085448 (Store (Con 9) (Con 0));
  SetLocal 9 0;
  TraceOperation 085451 (Store (Con 8) (Var (Local 2)));
  SetLocal 8 GetLocal(2);
  Jump: 085454
LocOp 085454:
  TraceOperation 085454 (Je [Var (Local 8),Var (Local 3)] (Branch T (Dloc 085474)));
  if (Equal(GetLocal(8),GetLocal(3))) {
    Jump: 085474
  } else {
    TraceOperation 085458 (Jg (Var (Local 9)) (Con 92) (Branch T (Dloc 085474)));
    if (GreaterThan(GetLocal(9),92)) {
      Jump: 085474
    } else {
      TraceOperation 085462 (Inc (Con 9));
      SetLocal 9 Add(GetLocal(9),1);
      TraceOperation 085464 (Get_prop (Var (Local 8)) (Con 35) (Global 239));
      Let b1 = M[Offset(Offset(000378,Mul(GetLocal(8),14)),12)];
      Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(8),14)),12),1)];
      Let b3 = M[Address(MakeHiLo(b1,b2))];
      Let loop_var4 = DeAddress(Offset(Address(MakeHiLo(b1,b2)),Add(Mul(2,Widen(b3)),1)));
      Label 5: {
        Let b6 = M[Address(loop_var4)];
        if (IsZeroByte(b6)) {
          Let b7 = M[000334];
          Let b8 = M[000335];
          SetByte 007684 b7;
          SetByte 007685 b8;
        } else {
          if (TestBit(b6,7)) {
            Let b9 = M[Offset(Address(loop_var4),1)];
            if (Equal(35,Widen(BwAnd(b6,63)))) {
              if (Equal(Widen(BwAnd(b9,63)),2)) {
                Let b10 = M[Offset(Address(loop_var4),2)];
                Let b11 = M[Offset(Offset(Address(loop_var4),2),1)];
                SetByte 007684 b10;
                SetByte 007685 b11;
              } else {
                Let b12 = M[Offset(Address(loop_var4),2)];
                SetByte 007684 HiByte(Widen(b12));
                SetByte 007685 LoByte(Widen(b12));
              }
            } else {
              Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),2),Widen(BwAnd(b9,63))));
              Goto: Label 5
            }
          } else {
            if (TestBit(b6,6)) {
              if (Equal(35,Widen(BwAnd(b6,63)))) {
                Let b13 = M[Offset(Address(loop_var4),1)];
                Let b14 = M[Offset(Offset(Address(loop_var4),1),1)];
                SetByte 007684 b13;
                SetByte 007685 b14;
              } else {
                Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),2));
                Goto: Label 5
              }
            } else {
              if (Equal(35,Widen(BwAnd(b6,63)))) {
                Let b15 = M[Offset(Address(loop_var4),1)];
                SetByte 007684 HiByte(Widen(b15));
                SetByte 007685 LoByte(Widen(b15));
              } else {
                Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),1));
                Goto: Label 5
              }
            }
          }
        }
      }
      TraceOperation 085468 (Store (Con 8) (Var (Global 239)));
      Let b16 = M[007684];
      Let b17 = M[007685];
      SetLocal 8 MakeHiLo(b16,b17);
      TraceOperation 085471 (Jump 085454);
      Jump: 085454
    }
  }
LocOp 085474:
  TraceOperation 085474 (Ret (Var (Local 9)));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult GetLocal(9);
  JumpIndirect: (return) return_address_1
LocOp 085476:
  TraceOperation 085476 (Ret (Var (Local 7)));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult GetLocal(7);
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 085480:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 085481
LocOp 085481:
  TraceOperation 085481 (Jz (Var (Local 3)) (Branch T (Dloc 085528)));
  if (IsZero(GetLocal(3))) {
    Jump: 085528
  } else {
    TraceOperation 085484 (Call (Floc 111316) [Var (Local 3),Var (Local 1)] Sp);
    PushFrame;
    PushReturnAddress 085484;
    SetLocal 1 GetLocal(3);
    SetLocal 2 GetLocal(1);
    MakeRoutineFrame 2;
    Jump: 111317
  }
LocReturn 085484:
  PushStack call_result;
  TraceOperation 085491 (Jz (Var Sp) (Branch T (Dloc 085528)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 085528
  } else {
    TraceOperation 085494 (Call (Floc 110116) [Var (Local 3),Var (Local 1)] Sp);
    PushFrame;
    PushReturnAddress 085494;
    SetLocal 1 GetLocal(3);
    SetLocal 2 GetLocal(1);
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 110117
  }
LocReturn 085494:
  PushStack call_result;
  TraceOperation 085501 (Jz (Var Sp) (Branch T (Dloc 085528)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 085528
  } else {
    TraceOperation 085504 (Call (Floc 110116) [Var (Local 3),Var (Local 1)] (Local 4));
    PushFrame;
    PushReturnAddress 085504;
    SetLocal 1 GetLocal(3);
    SetLocal 2 GetLocal(1);
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 110117
  }
LocReturn 085504:
  SetLocal 4 call_result;
  TraceOperation 085511 (Put_prop (Var (Local 4)) (Con 35) (Var (Local 3)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(4),14)),12)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(4),14)),12),1)];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let loop_var4 = DeAddress(Offset(Address(MakeHiLo(b1,b2)),Add(Mul(2,Widen(b3)),1)));
  Label 5: {
    Let b6 = M[Address(loop_var4)];
    if (IsZeroByte(b6)) {
      Error: ("putProp",35)
    } else {
      if (TestBit(b6,7)) {
        Let b7 = M[Offset(Address(loop_var4),1)];
        if (Equal(35,Widen(BwAnd(b6,63)))) {
          if (Equal(Widen(BwAnd(b7,63)),2)) {
            SetByte Offset(Address(loop_var4),2) HiByte(GetLocal(3));
            SetByte Offset(Offset(Address(loop_var4),2),1) LoByte(GetLocal(3));
          } else {
            SetByte Offset(Address(loop_var4),2) LoByte(GetLocal(3));
          }
        } else {
          Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),2),Widen(BwAnd(b7,63))));
          Goto: Label 5
        }
      } else {
        if (TestBit(b6,6)) {
          if (Equal(35,Widen(BwAnd(b6,63)))) {
            SetByte Offset(Address(loop_var4),1) HiByte(GetLocal(3));
            SetByte Offset(Offset(Address(loop_var4),1),1) LoByte(GetLocal(3));
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),2));
            Goto: Label 5
          }
        } else {
          if (Equal(35,Widen(BwAnd(b6,63)))) {
            SetByte Offset(Address(loop_var4),1) LoByte(GetLocal(3));
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),1));
            Goto: Label 5
          }
        }
      }
    }
  }
  TraceOperation 085516 (Je [Var (Local 4),Var (Local 2)] (Branch F (Dloc 085522)));
  if (Equal(GetLocal(4),GetLocal(2))) {
    TraceOperation 085520 (Ret (Var (Local 3)));
    PopFrame;
    PopReturnAddress return_address_8;
    SetResult GetLocal(3);
    JumpIndirect: (return) return_address_8
  } else {
    Jump: 085522
  }
LocOp 085522:
  TraceOperation 085522 (Store (Con 3) (Var (Local 4)));
  SetLocal 3 GetLocal(4);
  TraceOperation 085525 (Jump 085481);
  Jump: 085481
LocOp 085528:
  TraceOperation 085528 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 085532:
  MakeRoutineFrame 5;
  if (LessThanByte(num_actuals,5)) {
    SetLocal 5 0;
    if (LessThanByte(num_actuals,4)) {
      SetLocal 4 0;
      if (LessThanByte(num_actuals,3)) {
        SetLocal 3 0;
        if (LessThanByte(num_actuals,2)) {
          SetLocal 2 0;
          if (LessThanByte(num_actuals,1)) {
            SetLocal 1 0;
          }
        }
      }
    }
  }
  Jump: 085533
LocOp 085533:
  TraceOperation 085533 (Store (Con 5) (Var (Local 2)));
  SetLocal 5 GetLocal(2);
  Jump: 085536
LocOp 085536:
  TraceOperation 085536 (Jz (Var (Local 2)) (Branch T (Dloc 085589)));
  if (IsZero(GetLocal(2))) {
    Jump: 085589
  } else {
    TraceOperation 085539 (Call (Floc 111316) [Var (Local 2),Var (Local 1)] Sp);
    PushFrame;
    PushReturnAddress 085539;
    SetLocal 1 GetLocal(2);
    SetLocal 2 GetLocal(1);
    MakeRoutineFrame 2;
    Jump: 111317
  }
LocReturn 085539:
  PushStack call_result;
  TraceOperation 085546 (Jz (Var Sp) (Branch T (Dloc 085589)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 085589
  } else {
    TraceOperation 085549 (Call (Floc 110116) [Var (Local 2),Var (Local 1)] Sp);
    PushFrame;
    PushReturnAddress 085549;
    SetLocal 1 GetLocal(2);
    SetLocal 2 GetLocal(1);
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 110117
  }
LocReturn 085549:
  PushStack call_result;
  TraceOperation 085556 (Jz (Var Sp) (Branch T (Dloc 085589)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 085589
  } else {
    TraceOperation 085559 (Call (Floc 110116) [Var (Local 2),Var (Local 1)] (Local 4));
    PushFrame;
    PushReturnAddress 085559;
    SetLocal 1 GetLocal(2);
    SetLocal 2 GetLocal(1);
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 110117
  }
LocReturn 085559:
  SetLocal 4 call_result;
  TraceOperation 085566 (Put_prop (Var (Local 2)) (Con 35) (Var (Local 4)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),12)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(2),14)),12),1)];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let loop_var4 = DeAddress(Offset(Address(MakeHiLo(b1,b2)),Add(Mul(2,Widen(b3)),1)));
  Label 5: {
    Let b6 = M[Address(loop_var4)];
    if (IsZeroByte(b6)) {
      Error: ("putProp",35)
    } else {
      if (TestBit(b6,7)) {
        Let b7 = M[Offset(Address(loop_var4),1)];
        if (Equal(35,Widen(BwAnd(b6,63)))) {
          if (Equal(Widen(BwAnd(b7,63)),2)) {
            SetByte Offset(Address(loop_var4),2) HiByte(GetLocal(4));
            SetByte Offset(Offset(Address(loop_var4),2),1) LoByte(GetLocal(4));
          } else {
            SetByte Offset(Address(loop_var4),2) LoByte(GetLocal(4));
          }
        } else {
          Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),2),Widen(BwAnd(b7,63))));
          Goto: Label 5
        }
      } else {
        if (TestBit(b6,6)) {
          if (Equal(35,Widen(BwAnd(b6,63)))) {
            SetByte Offset(Address(loop_var4),1) HiByte(GetLocal(4));
            SetByte Offset(Offset(Address(loop_var4),1),1) LoByte(GetLocal(4));
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),2));
            Goto: Label 5
          }
        } else {
          if (Equal(35,Widen(BwAnd(b6,63)))) {
            SetByte Offset(Address(loop_var4),1) LoByte(GetLocal(4));
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),1));
            Goto: Label 5
          }
        }
      }
    }
  }
  TraceOperation 085571 (Je [Var (Local 2),Var (Local 3)] (Branch F (Dloc 085583)));
  if (Equal(GetLocal(2),GetLocal(3))) {
    TraceOperation 085575 (Get_prop (Var (Local 5)) (Con 35) (Global 239));
    Let b8 = M[Offset(Offset(000378,Mul(GetLocal(5),14)),12)];
    Let b9 = M[Offset(Offset(Offset(000378,Mul(GetLocal(5),14)),12),1)];
    Let b10 = M[Address(MakeHiLo(b8,b9))];
    Let loop_var11 = DeAddress(Offset(Address(MakeHiLo(b8,b9)),Add(Mul(2,Widen(b10)),1)));
    Label 12: {
      Let b13 = M[Address(loop_var11)];
      if (IsZeroByte(b13)) {
        Let b14 = M[000334];
        Let b15 = M[000335];
        SetByte 007684 b14;
        SetByte 007685 b15;
      } else {
        if (TestBit(b13,7)) {
          Let b16 = M[Offset(Address(loop_var11),1)];
          if (Equal(35,Widen(BwAnd(b13,63)))) {
            if (Equal(Widen(BwAnd(b16,63)),2)) {
              Let b17 = M[Offset(Address(loop_var11),2)];
              Let b18 = M[Offset(Offset(Address(loop_var11),2),1)];
              SetByte 007684 b17;
              SetByte 007685 b18;
            } else {
              Let b19 = M[Offset(Address(loop_var11),2)];
              SetByte 007684 HiByte(Widen(b19));
              SetByte 007685 LoByte(Widen(b19));
            }
          } else {
            Assign loop_var11 = DeAddress(Offset(Offset(Address(loop_var11),2),Widen(BwAnd(b16,63))));
            Goto: Label 12
          }
        } else {
          if (TestBit(b13,6)) {
            if (Equal(35,Widen(BwAnd(b13,63)))) {
              Let b20 = M[Offset(Address(loop_var11),1)];
              Let b21 = M[Offset(Offset(Address(loop_var11),1),1)];
              SetByte 007684 b20;
              SetByte 007685 b21;
            } else {
              Assign loop_var11 = DeAddress(Offset(Offset(Address(loop_var11),1),2));
              Goto: Label 12
            }
          } else {
            if (Equal(35,Widen(BwAnd(b13,63)))) {
              Let b22 = M[Offset(Address(loop_var11),1)];
              SetByte 007684 HiByte(Widen(b22));
              SetByte 007685 LoByte(Widen(b22));
            } else {
              Assign loop_var11 = DeAddress(Offset(Offset(Address(loop_var11),1),1));
              Goto: Label 12
            }
          }
        }
      }
    }
    TraceOperation 085579 (Push (Var (Global 239)));
    Let b23 = M[007684];
    Let b24 = M[007685];
    PushStack MakeHiLo(b23,b24);
    TraceOperation 085582 Ret_popped;
    PopStack popped25;
    PopFrame;
    PopReturnAddress return_address_26;
    SetResult popped25;
    JumpIndirect: (return) return_address_26
  } else {
    Jump: 085583
  }
LocOp 085583:
  TraceOperation 085583 (Store (Con 2) (Var (Local 4)));
  SetLocal 2 GetLocal(4);
  TraceOperation 085586 (Jump 085536);
  Jump: 085536
LocOp 085589:
  TraceOperation 085589 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 085592:
  MakeRoutineFrame 11;
  if (LessThanByte(num_actuals,11)) {
    SetLocal 11 0;
    if (LessThanByte(num_actuals,10)) {
      SetLocal 10 0;
      if (LessThanByte(num_actuals,9)) {
        SetLocal 9 0;
        if (LessThanByte(num_actuals,8)) {
          SetLocal 8 0;
          if (LessThanByte(num_actuals,7)) {
            SetLocal 7 0;
            if (LessThanByte(num_actuals,6)) {
              SetLocal 6 0;
              if (LessThanByte(num_actuals,5)) {
                SetLocal 5 0;
                if (LessThanByte(num_actuals,4)) {
                  SetLocal 4 0;
                  if (LessThanByte(num_actuals,3)) {
                    SetLocal 3 0;
                    if (LessThanByte(num_actuals,2)) {
                      SetLocal 2 0;
                      if (LessThanByte(num_actuals,1)) {
                        SetLocal 1 0;
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  Jump: 085593
LocOp 085593:
  TraceOperation 085593 (Loadw (Var (Local 1)) (Con 7) Sp);
  Let b1 = M[Offset(Address(GetLocal(1)),14)];
  Let b2 = M[Offset(Offset(Address(GetLocal(1)),14),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 085597 (Jz (Var Sp) (Branch T (Dloc 085611)));
  PopStack popped3;
  if (IsZero(popped3)) {
    Jump: 085611
  } else {
    TraceOperation 085600 (Call (Floc 085916) [Var (Local 1),Var (Local 2),Var (Local 3),Var (Local 4)] Sp);
    PushFrame;
    PushReturnAddress 085600;
    SetLocal 1 GetLocal(1);
    SetLocal 2 GetLocal(2);
    SetLocal 3 GetLocal(3);
    SetLocal 4 GetLocal(4);
    MakeRoutineFrame 15;
    SetLocal 15 0;
    SetLocal 14 0;
    SetLocal 13 0;
    SetLocal 12 0;
    SetLocal 11 0;
    SetLocal 10 0;
    SetLocal 9 0;
    SetLocal 8 0;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    Jump: 085917
  }
LocReturn 085600:
  PushStack call_result;
  TraceOperation 085610 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 085611:
  TraceOperation 085611 (Loadw (Var (Local 1)) (Con 0) (Local 9));
  Let b1 = M[Offset(Address(GetLocal(1)),0)];
  Let b2 = M[Offset(Offset(Address(GetLocal(1)),0),1)];
  SetLocal 9 MakeHiLo(b1,b2);
  TraceOperation 085615 (Loadw (Var (Local 1)) (Con 1) (Local 10));
  Let b3 = M[Offset(Address(GetLocal(1)),2)];
  Let b4 = M[Offset(Offset(Address(GetLocal(1)),2),1)];
  SetLocal 10 MakeHiLo(b3,b4);
  TraceOperation 085619 (Store (Con 5) (Con 1));
  SetLocal 5 1;
  Jump: 085622
LocOp 085622:
  TraceOperation 085622 (Call (Floc 026172) [Var (Local 5),Con 2] Sp);
  PushFrame;
  PushReturnAddress 085622;
  SetLocal 1 GetLocal(5);
  SetLocal 2 2;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 085622:
  PushStack call_result;
  TraceOperation 085629 (Jz (Var Sp) (Branch T (Dloc 085647)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 085647
  } else {
    TraceOperation 085632 (Call (Floc 111316) [Var (Local 5),Con 35] Sp);
    PushFrame;
    PushReturnAddress 085632;
    SetLocal 1 GetLocal(5);
    SetLocal 2 35;
    MakeRoutineFrame 2;
    Jump: 111317
  }
LocReturn 085632:
  PushStack call_result;
  TraceOperation 085639 (Jz (Var Sp) (Branch T (Dloc 085647)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 085647
  } else {
    TraceOperation 085642 (Put_prop (Var (Local 5)) (Con 35) (Con 0));
    Let b2 = M[Offset(Offset(000378,Mul(GetLocal(5),14)),12)];
    Let b3 = M[Offset(Offset(Offset(000378,Mul(GetLocal(5),14)),12),1)];
    Let b4 = M[Address(MakeHiLo(b2,b3))];
    Let loop_var5 = DeAddress(Offset(Address(MakeHiLo(b2,b3)),Add(Mul(2,Widen(b4)),1)));
    Label 6: {
      Let b7 = M[Address(loop_var5)];
      if (IsZeroByte(b7)) {
        Error: ("putProp",35)
      } else {
        if (TestBit(b7,7)) {
          Let b8 = M[Offset(Address(loop_var5),1)];
          if (Equal(35,Widen(BwAnd(b7,63)))) {
            if (Equal(Widen(BwAnd(b8,63)),2)) {
              SetByte Offset(Address(loop_var5),2) 0;
              SetByte Offset(Offset(Address(loop_var5),2),1) 0;
            } else {
              SetByte Offset(Address(loop_var5),2) 0;
            }
          } else {
            Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),2),Widen(BwAnd(b8,63))));
            Goto: Label 6
          }
        } else {
          if (TestBit(b7,6)) {
            if (Equal(35,Widen(BwAnd(b7,63)))) {
              SetByte Offset(Address(loop_var5),1) 0;
              SetByte Offset(Offset(Address(loop_var5),1),1) 0;
            } else {
              Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),1),2));
              Goto: Label 6
            }
          } else {
            if (Equal(35,Widen(BwAnd(b7,63)))) {
              SetByte Offset(Address(loop_var5),1) 0;
            } else {
              Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),1),1));
              Goto: Label 6
            }
          }
        }
      }
    }
    Jump: 085647
  }
LocOp 085647:
  TraceOperation 085647 (Inc (Con 5));
  SetLocal 5 Add(GetLocal(5),1);
  TraceOperation 085649 (Jg (Var (Local 5)) (Con 72) (Branch T (Dloc 085658)));
  if (GreaterThan(GetLocal(5),72)) {
    Jump: 085658
  } else {
    TraceOperation 085655 (Jump 085622);
    Jump: 085622
  }
LocOp 085658:
  TraceOperation 085658 (Put_prop (Var (Local 3)) (Con 35) (Con 1));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(3),14)),12)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(3),14)),12),1)];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let loop_var4 = DeAddress(Offset(Address(MakeHiLo(b1,b2)),Add(Mul(2,Widen(b3)),1)));
  Label 5: {
    Let b6 = M[Address(loop_var4)];
    if (IsZeroByte(b6)) {
      Error: ("putProp",35)
    } else {
      if (TestBit(b6,7)) {
        Let b7 = M[Offset(Address(loop_var4),1)];
        if (Equal(35,Widen(BwAnd(b6,63)))) {
          if (Equal(Widen(BwAnd(b7,63)),2)) {
            SetByte Offset(Address(loop_var4),2) 0;
            SetByte Offset(Offset(Address(loop_var4),2),1) 1;
          } else {
            SetByte Offset(Address(loop_var4),2) 1;
          }
        } else {
          Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),2),Widen(BwAnd(b7,63))));
          Goto: Label 5
        }
      } else {
        if (TestBit(b6,6)) {
          if (Equal(35,Widen(BwAnd(b6,63)))) {
            SetByte Offset(Address(loop_var4),1) 0;
            SetByte Offset(Offset(Address(loop_var4),1),1) 1;
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),2));
            Goto: Label 5
          }
        } else {
          if (Equal(35,Widen(BwAnd(b6,63)))) {
            SetByte Offset(Address(loop_var4),1) 1;
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),1));
            Goto: Label 5
          }
        }
      }
    }
  }
  Jump: 085663
LocOp 085663:
  TraceOperation 085663 (Jz (Con 1) (Branch T (Dloc 085864)));
  TraceOperation 085667 (Store (Con 8) (Con 0));
  SetLocal 8 0;
  TraceOperation 085670 (Store (Con 5) (Con 1));
  SetLocal 5 1;
  Jump: 085673
LocOp 085673:
  TraceOperation 085673 (Call (Floc 026172) [Var (Local 5),Con 2] Sp);
  PushFrame;
  PushReturnAddress 085673;
  SetLocal 1 GetLocal(5);
  SetLocal 2 2;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 085673:
  PushStack call_result;
  TraceOperation 085680 (Jz (Var Sp) (Branch T (Dloc 085779)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 085779
  } else {
    TraceOperation 085684 (Call (Floc 111316) [Var (Local 5),Var (Local 9)] Sp);
    PushFrame;
    PushReturnAddress 085684;
    SetLocal 1 GetLocal(5);
    SetLocal 2 GetLocal(9);
    MakeRoutineFrame 2;
    Jump: 111317
  }
LocReturn 085684:
  PushStack call_result;
  TraceOperation 085691 (Jz (Var Sp) (Branch T (Dloc 085779)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 085779
  } else {
    TraceOperation 085695 (Get_prop (Var (Local 5)) (Con 35) (Global 239));
    Let b2 = M[Offset(Offset(000378,Mul(GetLocal(5),14)),12)];
    Let b3 = M[Offset(Offset(Offset(000378,Mul(GetLocal(5),14)),12),1)];
    Let b4 = M[Address(MakeHiLo(b2,b3))];
    Let loop_var5 = DeAddress(Offset(Address(MakeHiLo(b2,b3)),Add(Mul(2,Widen(b4)),1)));
    Label 6: {
      Let b7 = M[Address(loop_var5)];
      if (IsZeroByte(b7)) {
        Let b8 = M[000334];
        Let b9 = M[000335];
        SetByte 007684 b8;
        SetByte 007685 b9;
      } else {
        if (TestBit(b7,7)) {
          Let b10 = M[Offset(Address(loop_var5),1)];
          if (Equal(35,Widen(BwAnd(b7,63)))) {
            if (Equal(Widen(BwAnd(b10,63)),2)) {
              Let b11 = M[Offset(Address(loop_var5),2)];
              Let b12 = M[Offset(Offset(Address(loop_var5),2),1)];
              SetByte 007684 b11;
              SetByte 007685 b12;
            } else {
              Let b13 = M[Offset(Address(loop_var5),2)];
              SetByte 007684 HiByte(Widen(b13));
              SetByte 007685 LoByte(Widen(b13));
            }
          } else {
            Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),2),Widen(BwAnd(b10,63))));
            Goto: Label 6
          }
        } else {
          if (TestBit(b7,6)) {
            if (Equal(35,Widen(BwAnd(b7,63)))) {
              Let b14 = M[Offset(Address(loop_var5),1)];
              Let b15 = M[Offset(Offset(Address(loop_var5),1),1)];
              SetByte 007684 b14;
              SetByte 007685 b15;
            } else {
              Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),1),2));
              Goto: Label 6
            }
          } else {
            if (Equal(35,Widen(BwAnd(b7,63)))) {
              Let b16 = M[Offset(Address(loop_var5),1)];
              SetByte 007684 HiByte(Widen(b16));
              SetByte 007685 LoByte(Widen(b16));
            } else {
              Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),1),1));
              Goto: Label 6
            }
          }
        }
      }
    }
    TraceOperation 085699 (Push (Var (Global 239)));
    Let b17 = M[007684];
    Let b18 = M[007685];
    PushStack MakeHiLo(b17,b18);
    TraceOperation 085702 (Jz (Var Sp) (Branch F (Dloc 085779)));
    PopStack popped19;
    if (IsZero(popped19)) {
      TraceOperation 085706 (Store (Con 6) (Con 1));
      SetLocal 6 1;
      Jump: 085709
    } else {
      Jump: 085779
    }
  }
LocOp 085709:
  TraceOperation 085709 (Call (Floc 026172) [Var (Local 6),Con 2] Sp);
  PushFrame;
  PushReturnAddress 085709;
  SetLocal 1 GetLocal(6);
  SetLocal 2 2;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 085709:
  PushStack call_result;
  TraceOperation 085716 (Jz (Var Sp) (Branch T (Dloc 085768)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 085768
  } else {
    TraceOperation 085719 (Call (Floc 111316) [Var (Local 6),Var (Local 10)] Sp);
    PushFrame;
    PushReturnAddress 085719;
    SetLocal 1 GetLocal(6);
    SetLocal 2 GetLocal(10);
    MakeRoutineFrame 2;
    Jump: 111317
  }
LocReturn 085719:
  PushStack call_result;
  TraceOperation 085726 (Jz (Var Sp) (Branch T (Dloc 085768)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 085768
  } else {
    TraceOperation 085729 (Get_prop (Var (Local 6)) (Con 35) (Global 239));
    Let b2 = M[Offset(Offset(000378,Mul(GetLocal(6),14)),12)];
    Let b3 = M[Offset(Offset(Offset(000378,Mul(GetLocal(6),14)),12),1)];
    Let b4 = M[Address(MakeHiLo(b2,b3))];
    Let loop_var5 = DeAddress(Offset(Address(MakeHiLo(b2,b3)),Add(Mul(2,Widen(b4)),1)));
    Label 6: {
      Let b7 = M[Address(loop_var5)];
      if (IsZeroByte(b7)) {
        Let b8 = M[000334];
        Let b9 = M[000335];
        SetByte 007684 b8;
        SetByte 007685 b9;
      } else {
        if (TestBit(b7,7)) {
          Let b10 = M[Offset(Address(loop_var5),1)];
          if (Equal(35,Widen(BwAnd(b7,63)))) {
            if (Equal(Widen(BwAnd(b10,63)),2)) {
              Let b11 = M[Offset(Address(loop_var5),2)];
              Let b12 = M[Offset(Offset(Address(loop_var5),2),1)];
              SetByte 007684 b11;
              SetByte 007685 b12;
            } else {
              Let b13 = M[Offset(Address(loop_var5),2)];
              SetByte 007684 HiByte(Widen(b13));
              SetByte 007685 LoByte(Widen(b13));
            }
          } else {
            Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),2),Widen(BwAnd(b10,63))));
            Goto: Label 6
          }
        } else {
          if (TestBit(b7,6)) {
            if (Equal(35,Widen(BwAnd(b7,63)))) {
              Let b14 = M[Offset(Address(loop_var5),1)];
              Let b15 = M[Offset(Offset(Address(loop_var5),1),1)];
              SetByte 007684 b14;
              SetByte 007685 b15;
            } else {
              Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),1),2));
              Goto: Label 6
            }
          } else {
            if (Equal(35,Widen(BwAnd(b7,63)))) {
              Let b16 = M[Offset(Address(loop_var5),1)];
              SetByte 007684 HiByte(Widen(b16));
              SetByte 007685 LoByte(Widen(b16));
            } else {
              Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),1),1));
              Goto: Label 6
            }
          }
        }
      }
    }
    TraceOperation 085733 (Push (Var (Global 239)));
    Let b17 = M[007684];
    Let b18 = M[007685];
    PushStack MakeHiLo(b17,b18);
    TraceOperation 085736 (Jg (Var Sp) (Con 0) (Branch F (Dloc 085768)));
    PopStack popped19;
    if (GreaterThan(popped19,0)) {
      TraceOperation 085740 (Call (Floc 083040) [Var (Local 5),Var (Local 1),Var (Local 6)] Sp);
      PushFrame;
      PushReturnAddress 085740;
      SetLocal 1 GetLocal(5);
      SetLocal 2 GetLocal(1);
      SetLocal 3 GetLocal(6);
      MakeRoutineFrame 8;
      SetLocal 8 0;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      Jump: 083041
    } else {
      Jump: 085768
    }
  }
LocReturn 085740:
  PushStack call_result;
  TraceOperation 085748 (Jz (Var Sp) (Branch T (Dloc 085768)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 085768
  } else {
    TraceOperation 085751 (Or (Var (Local 6)) (Con -32768) Sp);
    PushStack Or(GetLocal(6),-32768);
    TraceOperation 085757 (Put_prop (Var (Local 5)) (Con 35) (Var Sp));
    PopStack popped2;
    Let b3 = M[Offset(Offset(000378,Mul(GetLocal(5),14)),12)];
    Let b4 = M[Offset(Offset(Offset(000378,Mul(GetLocal(5),14)),12),1)];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    Let loop_var6 = DeAddress(Offset(Address(MakeHiLo(b3,b4)),Add(Mul(2,Widen(b5)),1)));
    Label 7: {
      Let b8 = M[Address(loop_var6)];
      if (IsZeroByte(b8)) {
        Error: ("putProp",35)
      } else {
        if (TestBit(b8,7)) {
          Let b9 = M[Offset(Address(loop_var6),1)];
          if (Equal(35,Widen(BwAnd(b8,63)))) {
            if (Equal(Widen(BwAnd(b9,63)),2)) {
              SetByte Offset(Address(loop_var6),2) HiByte(popped2);
              SetByte Offset(Offset(Address(loop_var6),2),1) LoByte(popped2);
            } else {
              SetByte Offset(Address(loop_var6),2) LoByte(popped2);
            }
          } else {
            Assign loop_var6 = DeAddress(Offset(Offset(Address(loop_var6),2),Widen(BwAnd(b9,63))));
            Goto: Label 7
          }
        } else {
          if (TestBit(b8,6)) {
            if (Equal(35,Widen(BwAnd(b8,63)))) {
              SetByte Offset(Address(loop_var6),1) HiByte(popped2);
              SetByte Offset(Offset(Address(loop_var6),1),1) LoByte(popped2);
            } else {
              Assign loop_var6 = DeAddress(Offset(Offset(Address(loop_var6),1),2));
              Goto: Label 7
            }
          } else {
            if (Equal(35,Widen(BwAnd(b8,63)))) {
              SetByte Offset(Address(loop_var6),1) LoByte(popped2);
            } else {
              Assign loop_var6 = DeAddress(Offset(Offset(Address(loop_var6),1),1));
              Goto: Label 7
            }
          }
        }
      }
    }
    TraceOperation 085762 (Store (Con 8) (Con 1));
    SetLocal 8 1;
    TraceOperation 085765 (Jump 085768);
    Jump: 085768
  }
LocOp 085768:
  TraceOperation 085768 (Inc (Con 6));
  SetLocal 6 Add(GetLocal(6),1);
  TraceOperation 085770 (Jg (Var (Local 6)) (Con 72) (Branch T (Dloc 085779)));
  if (GreaterThan(GetLocal(6),72)) {
    Jump: 085779
  } else {
    TraceOperation 085776 (Jump 085709);
    Jump: 085709
  }
LocOp 085779:
  TraceOperation 085779 (Inc (Con 5));
  SetLocal 5 Add(GetLocal(5),1);
  TraceOperation 085781 (Jg (Var (Local 5)) (Con 72) (Branch T (Dloc 085790)));
  if (GreaterThan(GetLocal(5),72)) {
    Jump: 085790
  } else {
    TraceOperation 085787 (Jump 085673);
    Jump: 085673
  }
LocOp 085790:
  TraceOperation 085790 (Store (Con 5) (Con 1));
  SetLocal 5 1;
  Jump: 085793
LocOp 085793:
  TraceOperation 085793 (Call (Floc 026172) [Var (Local 5),Con 2] Sp);
  PushFrame;
  PushReturnAddress 085793;
  SetLocal 1 GetLocal(5);
  SetLocal 2 2;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 085793:
  PushStack call_result;
  TraceOperation 085800 (Jz (Var Sp) (Branch T (Dloc 085831)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 085831
  } else {
    TraceOperation 085803 (Call (Floc 111316) [Var (Local 5),Var (Local 9)] Sp);
    PushFrame;
    PushReturnAddress 085803;
    SetLocal 1 GetLocal(5);
    SetLocal 2 GetLocal(9);
    MakeRoutineFrame 2;
    Jump: 111317
  }
LocReturn 085803:
  PushStack call_result;
  TraceOperation 085810 (Jz (Var Sp) (Branch T (Dloc 085831)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 085831
  } else {
    TraceOperation 085813 (Get_prop (Var (Local 5)) (Con 35) (Global 239));
    Let b2 = M[Offset(Offset(000378,Mul(GetLocal(5),14)),12)];
    Let b3 = M[Offset(Offset(Offset(000378,Mul(GetLocal(5),14)),12),1)];
    Let b4 = M[Address(MakeHiLo(b2,b3))];
    Let loop_var5 = DeAddress(Offset(Address(MakeHiLo(b2,b3)),Add(Mul(2,Widen(b4)),1)));
    Label 6: {
      Let b7 = M[Address(loop_var5)];
      if (IsZeroByte(b7)) {
        Let b8 = M[000334];
        Let b9 = M[000335];
        SetByte 007684 b8;
        SetByte 007685 b9;
      } else {
        if (TestBit(b7,7)) {
          Let b10 = M[Offset(Address(loop_var5),1)];
          if (Equal(35,Widen(BwAnd(b7,63)))) {
            if (Equal(Widen(BwAnd(b10,63)),2)) {
              Let b11 = M[Offset(Address(loop_var5),2)];
              Let b12 = M[Offset(Offset(Address(loop_var5),2),1)];
              SetByte 007684 b11;
              SetByte 007685 b12;
            } else {
              Let b13 = M[Offset(Address(loop_var5),2)];
              SetByte 007684 HiByte(Widen(b13));
              SetByte 007685 LoByte(Widen(b13));
            }
          } else {
            Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),2),Widen(BwAnd(b10,63))));
            Goto: Label 6
          }
        } else {
          if (TestBit(b7,6)) {
            if (Equal(35,Widen(BwAnd(b7,63)))) {
              Let b14 = M[Offset(Address(loop_var5),1)];
              Let b15 = M[Offset(Offset(Address(loop_var5),1),1)];
              SetByte 007684 b14;
              SetByte 007685 b15;
            } else {
              Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),1),2));
              Goto: Label 6
            }
          } else {
            if (Equal(35,Widen(BwAnd(b7,63)))) {
              Let b16 = M[Offset(Address(loop_var5),1)];
              SetByte 007684 HiByte(Widen(b16));
              SetByte 007685 LoByte(Widen(b16));
            } else {
              Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),1),1));
              Goto: Label 6
            }
          }
        }
      }
    }
    TraceOperation 085817 (Push (Var (Global 239)));
    Let b17 = M[007684];
    Let b18 = M[007685];
    PushStack MakeHiLo(b17,b18);
    TraceOperation 085820 (And (Var Sp) (Con 32767) Sp);
    PopStack popped19;
    PushStack And(popped19,32767);
    TraceOperation 085826 (Put_prop (Var (Local 5)) (Con 35) (Var Sp));
    PopStack popped20;
    Let b21 = M[Offset(Offset(000378,Mul(GetLocal(5),14)),12)];
    Let b22 = M[Offset(Offset(Offset(000378,Mul(GetLocal(5),14)),12),1)];
    Let b23 = M[Address(MakeHiLo(b21,b22))];
    Let loop_var24 = DeAddress(Offset(Address(MakeHiLo(b21,b22)),Add(Mul(2,Widen(b23)),1)));
    Label 25: {
      Let b26 = M[Address(loop_var24)];
      if (IsZeroByte(b26)) {
        Error: ("putProp",35)
      } else {
        if (TestBit(b26,7)) {
          Let b27 = M[Offset(Address(loop_var24),1)];
          if (Equal(35,Widen(BwAnd(b26,63)))) {
            if (Equal(Widen(BwAnd(b27,63)),2)) {
              SetByte Offset(Address(loop_var24),2) HiByte(popped20);
              SetByte Offset(Offset(Address(loop_var24),2),1) LoByte(popped20);
            } else {
              SetByte Offset(Address(loop_var24),2) LoByte(popped20);
            }
          } else {
            Assign loop_var24 = DeAddress(Offset(Offset(Address(loop_var24),2),Widen(BwAnd(b27,63))));
            Goto: Label 25
          }
        } else {
          if (TestBit(b26,6)) {
            if (Equal(35,Widen(BwAnd(b26,63)))) {
              SetByte Offset(Address(loop_var24),1) HiByte(popped20);
              SetByte Offset(Offset(Address(loop_var24),1),1) LoByte(popped20);
            } else {
              Assign loop_var24 = DeAddress(Offset(Offset(Address(loop_var24),1),2));
              Goto: Label 25
            }
          } else {
            if (Equal(35,Widen(BwAnd(b26,63)))) {
              SetByte Offset(Address(loop_var24),1) LoByte(popped20);
            } else {
              Assign loop_var24 = DeAddress(Offset(Offset(Address(loop_var24),1),1));
              Goto: Label 25
            }
          }
        }
      }
    }
    Jump: 085831
  }
LocOp 085831:
  TraceOperation 085831 (Inc (Con 5));
  SetLocal 5 Add(GetLocal(5),1);
  TraceOperation 085833 (Jg (Var (Local 5)) (Con 72) (Branch T (Dloc 085842)));
  if (GreaterThan(GetLocal(5),72)) {
    Jump: 085842
  } else {
    TraceOperation 085839 (Jump 085793);
    Jump: 085793
  }
LocOp 085842:
  TraceOperation 085842 (Get_prop (Var (Local 2)) (Con 35) (Global 239));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),12)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(2),14)),12),1)];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let loop_var4 = DeAddress(Offset(Address(MakeHiLo(b1,b2)),Add(Mul(2,Widen(b3)),1)));
  Label 5: {
    Let b6 = M[Address(loop_var4)];
    if (IsZeroByte(b6)) {
      Let b7 = M[000334];
      Let b8 = M[000335];
      SetByte 007684 b7;
      SetByte 007685 b8;
    } else {
      if (TestBit(b6,7)) {
        Let b9 = M[Offset(Address(loop_var4),1)];
        if (Equal(35,Widen(BwAnd(b6,63)))) {
          if (Equal(Widen(BwAnd(b9,63)),2)) {
            Let b10 = M[Offset(Address(loop_var4),2)];
            Let b11 = M[Offset(Offset(Address(loop_var4),2),1)];
            SetByte 007684 b10;
            SetByte 007685 b11;
          } else {
            Let b12 = M[Offset(Address(loop_var4),2)];
            SetByte 007684 HiByte(Widen(b12));
            SetByte 007685 LoByte(Widen(b12));
          }
        } else {
          Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),2),Widen(BwAnd(b9,63))));
          Goto: Label 5
        }
      } else {
        if (TestBit(b6,6)) {
          if (Equal(35,Widen(BwAnd(b6,63)))) {
            Let b13 = M[Offset(Address(loop_var4),1)];
            Let b14 = M[Offset(Offset(Address(loop_var4),1),1)];
            SetByte 007684 b13;
            SetByte 007685 b14;
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),2));
            Goto: Label 5
          }
        } else {
          if (Equal(35,Widen(BwAnd(b6,63)))) {
            Let b15 = M[Offset(Address(loop_var4),1)];
            SetByte 007684 HiByte(Widen(b15));
            SetByte 007685 LoByte(Widen(b15));
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),1));
            Goto: Label 5
          }
        }
      }
    }
  }
  TraceOperation 085846 (Push (Var (Global 239)));
  Let b16 = M[007684];
  Let b17 = M[007685];
  PushStack MakeHiLo(b16,b17);
  TraceOperation 085849 (Jz (Var Sp) (Branch T (Dloc 085855)));
  PopStack popped18;
  if (IsZero(popped18)) {
    Jump: 085855
  } else {
    TraceOperation 085852 (Jump 085864);
    Jump: 085864
  }
LocOp 085855:
  TraceOperation 085855 (Jz (Var (Local 8)) (Branch F (Dloc 085861)));
  if (IsZero(GetLocal(8))) {
    TraceOperation 085858 (Jump 085864);
    Jump: 085864
  } else {
    Jump: 085861
  }
LocOp 085861:
  TraceOperation 085861 (Jump 085663);
  Jump: 085663
LocOp 085864:
  TraceOperation 085864 (Jz (Var (Local 4)) (Branch T (Dloc 085908)));
  if (IsZero(GetLocal(4))) {
    Jump: 085908
  } else {
    TraceOperation 085867 (Get_prop (Var (Local 2)) (Con 35) (Global 239));
    Let b1 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),12)];
    Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(2),14)),12),1)];
    Let b3 = M[Address(MakeHiLo(b1,b2))];
    Let loop_var4 = DeAddress(Offset(Address(MakeHiLo(b1,b2)),Add(Mul(2,Widen(b3)),1)));
    Label 5: {
      Let b6 = M[Address(loop_var4)];
      if (IsZeroByte(b6)) {
        Let b7 = M[000334];
        Let b8 = M[000335];
        SetByte 007684 b7;
        SetByte 007685 b8;
      } else {
        if (TestBit(b6,7)) {
          Let b9 = M[Offset(Address(loop_var4),1)];
          if (Equal(35,Widen(BwAnd(b6,63)))) {
            if (Equal(Widen(BwAnd(b9,63)),2)) {
              Let b10 = M[Offset(Address(loop_var4),2)];
              Let b11 = M[Offset(Offset(Address(loop_var4),2),1)];
              SetByte 007684 b10;
              SetByte 007685 b11;
            } else {
              Let b12 = M[Offset(Address(loop_var4),2)];
              SetByte 007684 HiByte(Widen(b12));
              SetByte 007685 LoByte(Widen(b12));
            }
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),2),Widen(BwAnd(b9,63))));
            Goto: Label 5
          }
        } else {
          if (TestBit(b6,6)) {
            if (Equal(35,Widen(BwAnd(b6,63)))) {
              Let b13 = M[Offset(Address(loop_var4),1)];
              Let b14 = M[Offset(Offset(Address(loop_var4),1),1)];
              SetByte 007684 b13;
              SetByte 007685 b14;
            } else {
              Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),2));
              Goto: Label 5
            }
          } else {
            if (Equal(35,Widen(BwAnd(b6,63)))) {
              Let b15 = M[Offset(Address(loop_var4),1)];
              SetByte 007684 HiByte(Widen(b15));
              SetByte 007685 LoByte(Widen(b15));
            } else {
              Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),1));
              Goto: Label 5
            }
          }
        }
      }
    }
    TraceOperation 085871 (Push (Var (Global 239)));
    Let b16 = M[007684];
    Let b17 = M[007685];
    PushStack MakeHiLo(b16,b17);
    TraceOperation 085874 (Jz (Var Sp) (Branch F (Dloc 085880)));
    PopStack popped18;
    if (IsZero(popped18)) {
      TraceOperation 085877 (Ret (Con -1));
      PopFrame;
      PopReturnAddress return_address_19;
      SetResult -1;
      JumpIndirect: (return) return_address_19
    } else {
      Jump: 085880
    }
  }
LocOp 085880:
  TraceOperation 085880 (Store (Con 11) (Con 0));
  SetLocal 11 0;
  TraceOperation 085883 (Store (Con 5) (Var (Local 2)));
  SetLocal 5 GetLocal(2);
  Jump: 085886
LocOp 085886:
  TraceOperation 085886 (Je [Var (Local 5),Var (Local 3)] (Branch T (Dloc 085906)));
  if (Equal(GetLocal(5),GetLocal(3))) {
    Jump: 085906
  } else {
    TraceOperation 085890 (Jg (Var (Local 11)) (Con 92) (Branch T (Dloc 085906)));
    if (GreaterThan(GetLocal(11),92)) {
      Jump: 085906
    } else {
      TraceOperation 085894 (Inc (Con 11));
      SetLocal 11 Add(GetLocal(11),1);
      TraceOperation 085896 (Get_prop (Var (Local 5)) (Con 35) (Global 239));
      Let b1 = M[Offset(Offset(000378,Mul(GetLocal(5),14)),12)];
      Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(5),14)),12),1)];
      Let b3 = M[Address(MakeHiLo(b1,b2))];
      Let loop_var4 = DeAddress(Offset(Address(MakeHiLo(b1,b2)),Add(Mul(2,Widen(b3)),1)));
      Label 5: {
        Let b6 = M[Address(loop_var4)];
        if (IsZeroByte(b6)) {
          Let b7 = M[000334];
          Let b8 = M[000335];
          SetByte 007684 b7;
          SetByte 007685 b8;
        } else {
          if (TestBit(b6,7)) {
            Let b9 = M[Offset(Address(loop_var4),1)];
            if (Equal(35,Widen(BwAnd(b6,63)))) {
              if (Equal(Widen(BwAnd(b9,63)),2)) {
                Let b10 = M[Offset(Address(loop_var4),2)];
                Let b11 = M[Offset(Offset(Address(loop_var4),2),1)];
                SetByte 007684 b10;
                SetByte 007685 b11;
              } else {
                Let b12 = M[Offset(Address(loop_var4),2)];
                SetByte 007684 HiByte(Widen(b12));
                SetByte 007685 LoByte(Widen(b12));
              }
            } else {
              Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),2),Widen(BwAnd(b9,63))));
              Goto: Label 5
            }
          } else {
            if (TestBit(b6,6)) {
              if (Equal(35,Widen(BwAnd(b6,63)))) {
                Let b13 = M[Offset(Address(loop_var4),1)];
                Let b14 = M[Offset(Offset(Address(loop_var4),1),1)];
                SetByte 007684 b13;
                SetByte 007685 b14;
              } else {
                Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),2));
                Goto: Label 5
              }
            } else {
              if (Equal(35,Widen(BwAnd(b6,63)))) {
                Let b15 = M[Offset(Address(loop_var4),1)];
                SetByte 007684 HiByte(Widen(b15));
                SetByte 007685 LoByte(Widen(b15));
              } else {
                Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),1));
                Goto: Label 5
              }
            }
          }
        }
      }
      TraceOperation 085900 (Store (Con 5) (Var (Global 239)));
      Let b16 = M[007684];
      Let b17 = M[007685];
      SetLocal 5 MakeHiLo(b16,b17);
      TraceOperation 085903 (Jump 085886);
      Jump: 085886
    }
  }
LocOp 085906:
  TraceOperation 085906 (Ret (Var (Local 11)));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult GetLocal(11);
  JumpIndirect: (return) return_address_1
LocOp 085908:
  TraceOperation 085908 (Get_prop (Var (Local 2)) (Con 35) (Global 239));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),12)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(2),14)),12),1)];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let loop_var4 = DeAddress(Offset(Address(MakeHiLo(b1,b2)),Add(Mul(2,Widen(b3)),1)));
  Label 5: {
    Let b6 = M[Address(loop_var4)];
    if (IsZeroByte(b6)) {
      Let b7 = M[000334];
      Let b8 = M[000335];
      SetByte 007684 b7;
      SetByte 007685 b8;
    } else {
      if (TestBit(b6,7)) {
        Let b9 = M[Offset(Address(loop_var4),1)];
        if (Equal(35,Widen(BwAnd(b6,63)))) {
          if (Equal(Widen(BwAnd(b9,63)),2)) {
            Let b10 = M[Offset(Address(loop_var4),2)];
            Let b11 = M[Offset(Offset(Address(loop_var4),2),1)];
            SetByte 007684 b10;
            SetByte 007685 b11;
          } else {
            Let b12 = M[Offset(Address(loop_var4),2)];
            SetByte 007684 HiByte(Widen(b12));
            SetByte 007685 LoByte(Widen(b12));
          }
        } else {
          Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),2),Widen(BwAnd(b9,63))));
          Goto: Label 5
        }
      } else {
        if (TestBit(b6,6)) {
          if (Equal(35,Widen(BwAnd(b6,63)))) {
            Let b13 = M[Offset(Address(loop_var4),1)];
            Let b14 = M[Offset(Offset(Address(loop_var4),1),1)];
            SetByte 007684 b13;
            SetByte 007685 b14;
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),2));
            Goto: Label 5
          }
        } else {
          if (Equal(35,Widen(BwAnd(b6,63)))) {
            Let b15 = M[Offset(Address(loop_var4),1)];
            SetByte 007684 HiByte(Widen(b15));
            SetByte 007685 LoByte(Widen(b15));
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),1));
            Goto: Label 5
          }
        }
      }
    }
  }
  TraceOperation 085912 (Push (Var (Global 239)));
  Let b16 = M[007684];
  Let b17 = M[007685];
  PushStack MakeHiLo(b16,b17);
  TraceOperation 085915 Ret_popped;
  PopStack popped18;
  PopFrame;
  PopReturnAddress return_address_19;
  SetResult popped18;
  JumpIndirect: (return) return_address_19
--------------------------------------------------
LocRoutine 085916:
  MakeRoutineFrame 15;
  if (LessThanByte(num_actuals,15)) {
    SetLocal 15 0;
    if (LessThanByte(num_actuals,14)) {
      SetLocal 14 0;
      if (LessThanByte(num_actuals,13)) {
        SetLocal 13 0;
        if (LessThanByte(num_actuals,12)) {
          SetLocal 12 0;
          if (LessThanByte(num_actuals,11)) {
            SetLocal 11 0;
            if (LessThanByte(num_actuals,10)) {
              SetLocal 10 0;
              if (LessThanByte(num_actuals,9)) {
                SetLocal 9 0;
                if (LessThanByte(num_actuals,8)) {
                  SetLocal 8 0;
                  if (LessThanByte(num_actuals,7)) {
                    SetLocal 7 0;
                    if (LessThanByte(num_actuals,6)) {
                      SetLocal 6 0;
                      if (LessThanByte(num_actuals,5)) {
                        SetLocal 5 0;
                        if (LessThanByte(num_actuals,4)) {
                          SetLocal 4 0;
                          if (LessThanByte(num_actuals,3)) {
                            SetLocal 3 0;
                            if (LessThanByte(num_actuals,2)) {
                              SetLocal 2 0;
                              if (LessThanByte(num_actuals,1)) {
                                SetLocal 1 0;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  Jump: 085917
LocOp 085917:
  TraceOperation 085917 (Loadw (Var (Local 1)) (Con 2) (Local 5));
  Let b1 = M[Offset(Address(GetLocal(1)),4)];
  Let b2 = M[Offset(Offset(Address(GetLocal(1)),4),1)];
  SetLocal 5 MakeHiLo(b1,b2);
  TraceOperation 085921 (Loadw (Var (Local 1)) (Con 0) (Local 8));
  Let b3 = M[Offset(Address(GetLocal(1)),0)];
  Let b4 = M[Offset(Offset(Address(GetLocal(1)),0),1)];
  SetLocal 8 MakeHiLo(b3,b4);
  TraceOperation 085925 (Call (Floc 111316) [Var (Local 2),Var (Local 8)] Sp);
  PushFrame;
  PushReturnAddress 085925;
  SetLocal 1 GetLocal(2);
  SetLocal 2 GetLocal(8);
  MakeRoutineFrame 2;
  Jump: 111317
LocReturn 085925:
  PushStack call_result;
  TraceOperation 085932 (Jz (Var Sp) (Branch T (Dloc 086684)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 086684
  } else {
    TraceOperation 085936 (Call (Floc 111316) [Var (Local 3),Var (Local 8)] Sp);
    PushFrame;
    PushReturnAddress 085936;
    SetLocal 1 GetLocal(3);
    SetLocal 2 GetLocal(8);
    MakeRoutineFrame 2;
    Jump: 111317
  }
LocReturn 085936:
  PushStack call_result;
  TraceOperation 085943 (Jz (Var Sp) (Branch T (Dloc 086684)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 086684
  } else {
    TraceOperation 085947 (Jl (Var (Local 5)) (Con 256) (Branch F (Dloc 086341)));
    if (LessThan(GetLocal(5),256)) {
      TraceOperation 085954 (Loadw (Var (Local 1)) (Con 7) (Local 6));
      Let b2 = M[Offset(Address(GetLocal(1)),14)];
      Let b3 = M[Offset(Offset(Address(GetLocal(1)),14),1)];
      SetLocal 6 MakeHiLo(b2,b3);
      TraceOperation 085958 (Mul (Var (Local 5)) (Var (Local 5)) Sp);
      PushStack Mul(GetLocal(5),GetLocal(5));
      TraceOperation 085962 (Add (Var (Local 6)) (Var Sp) (Local 7));
      PopStack popped4;
      SetLocal 7 Add(GetLocal(6),popped4);
      TraceOperation 085966 (Loadw (Var (Local 1)) (Con 6) Sp);
      Let b5 = M[Offset(Address(GetLocal(1)),12)];
      Let b6 = M[Offset(Offset(Address(GetLocal(1)),12),1)];
      PushStack MakeHiLo(b5,b6);
      TraceOperation 085970 (Je [Var Sp,Con 1] (Branch F (Dloc 086236)));
      PopStack popped7;
      if (Equal(popped7,1)) {
        TraceOperation 085975 (Storew (Var (Local 1)) (Con 6) (Con 0));
        SetByte Offset(Address(GetLocal(1)),12) 0;
        SetByte Offset(Offset(Address(GetLocal(1)),12),1) 0;
        TraceOperation 085980 (Store (Con 10) (Con 1));
        SetLocal 10 1;
        Jump: 085983
      } else {
        Jump: 086236
      }
    } else {
      Jump: 086341
    }
  }
LocOp 085983:
  TraceOperation 085983 (Call (Floc 111316) [Var (Local 10),Var (Local 8)] Sp);
  PushFrame;
  PushReturnAddress 085983;
  SetLocal 1 GetLocal(10);
  SetLocal 2 GetLocal(8);
  MakeRoutineFrame 2;
  Jump: 111317
LocReturn 085983:
  PushStack call_result;
  TraceOperation 085990 (Jz (Var Sp) (Branch T (Dloc 086104)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 086104
  } else {
    TraceOperation 085994 (Store (Con 9) (Con 1));
    SetLocal 9 1;
    Jump: 085997
  }
LocOp 085997:
  TraceOperation 085997 (Call (Floc 111316) [Var (Local 9),Var (Local 8)] Sp);
  PushFrame;
  PushReturnAddress 085997;
  SetLocal 1 GetLocal(9);
  SetLocal 2 GetLocal(8);
  MakeRoutineFrame 2;
  Jump: 111317
LocReturn 085997:
  PushStack call_result;
  TraceOperation 086004 (Jz (Var Sp) (Branch T (Dloc 086093)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 086093
  } else {
    TraceOperation 086008 (Call (Floc 083040) [Var (Local 10),Var (Local 1),Var (Local 9)] Sp);
    PushFrame;
    PushReturnAddress 086008;
    SetLocal 1 GetLocal(10);
    SetLocal 2 GetLocal(1);
    SetLocal 3 GetLocal(9);
    MakeRoutineFrame 8;
    SetLocal 8 0;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    Jump: 083041
  }
LocReturn 086008:
  PushStack call_result;
  TraceOperation 086016 (Jz (Var Sp) (Branch T (Dloc 086061)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 086061
  } else {
    TraceOperation 086019 (Call (Floc 110116) [Var (Local 9),Var (Local 8)] Sp);
    PushFrame;
    PushReturnAddress 086019;
    SetLocal 1 GetLocal(9);
    SetLocal 2 GetLocal(8);
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 110117
  }
LocReturn 086019:
  PushStack call_result;
  TraceOperation 086026 (Call (Floc 110116) [Var (Local 10),Var (Local 8)] Sp);
  PushFrame;
  PushReturnAddress 086026;
  SetLocal 1 GetLocal(10);
  SetLocal 2 GetLocal(8);
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 110117
LocReturn 086026:
  PushStack call_result;
  TraceOperation 086033 (Mul (Var Sp) (Var (Local 5)) Sp);
  PopStack popped1;
  PushStack Mul(popped1,GetLocal(5));
  TraceOperation 086037 (Add (Var Sp) (Var Sp) (Local 12));
  PopStack popped2;
  PopStack popped3;
  SetLocal 12 Add(popped2,popped3);
  TraceOperation 086041 (Storeb (Var (Local 6)) (Var (Local 12)) (Con 1));
  SetByte Offset(Address(GetLocal(6)),GetLocal(12)) 1;
  TraceOperation 086046 (Call (Floc 110116) [Var (Local 9),Var (Local 8)] Sp);
  PushFrame;
  PushReturnAddress 086046;
  SetLocal 1 GetLocal(9);
  SetLocal 2 GetLocal(8);
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 110117
LocReturn 086046:
  PushStack call_result;
  TraceOperation 086053 (Storeb (Var (Local 7)) (Var (Local 12)) (Var Sp));
  PopStack popped1;
  SetByte Offset(Address(GetLocal(7)),GetLocal(12)) LoByte(popped1);
  TraceOperation 086058 (Jump 086093);
  Jump: 086093
LocOp 086061:
  TraceOperation 086061 (Call (Floc 110116) [Var (Local 9),Var (Local 8)] Sp);
  PushFrame;
  PushReturnAddress 086061;
  SetLocal 1 GetLocal(9);
  SetLocal 2 GetLocal(8);
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 110117
LocReturn 086061:
  PushStack call_result;
  TraceOperation 086068 (Call (Floc 110116) [Var (Local 10),Var (Local 8)] Sp);
  PushFrame;
  PushReturnAddress 086068;
  SetLocal 1 GetLocal(10);
  SetLocal 2 GetLocal(8);
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 110117
LocReturn 086068:
  PushStack call_result;
  TraceOperation 086075 (Mul (Var Sp) (Var (Local 5)) Sp);
  PopStack popped1;
  PushStack Mul(popped1,GetLocal(5));
  TraceOperation 086079 (Add (Var Sp) (Var Sp) (Local 12));
  PopStack popped2;
  PopStack popped3;
  SetLocal 12 Add(popped2,popped3);
  TraceOperation 086083 (Storeb (Var (Local 6)) (Var (Local 12)) (Con 0));
  SetByte Offset(Address(GetLocal(6)),GetLocal(12)) 0;
  TraceOperation 086088 (Storeb (Var (Local 7)) (Var (Local 12)) (Con 255));
  SetByte Offset(Address(GetLocal(7)),GetLocal(12)) 255;
  Jump: 086093
LocOp 086093:
  TraceOperation 086093 (Inc (Con 9));
  SetLocal 9 Add(GetLocal(9),1);
  TraceOperation 086095 (Jg (Var (Local 9)) (Con 72) (Branch T (Dloc 086104)));
  if (GreaterThan(GetLocal(9),72)) {
    Jump: 086104
  } else {
    TraceOperation 086101 (Jump 085997);
    Jump: 085997
  }
LocOp 086104:
  TraceOperation 086104 (Inc (Con 10));
  SetLocal 10 Add(GetLocal(10),1);
  TraceOperation 086106 (Jg (Var (Local 10)) (Con 72) (Branch T (Dloc 086115)));
  if (GreaterThan(GetLocal(10),72)) {
    Jump: 086115
  } else {
    TraceOperation 086112 (Jump 085983);
    Jump: 085983
  }
LocOp 086115:
  TraceOperation 086115 (Store (Con 10) (Con 0));
  SetLocal 10 0;
  Jump: 086118
LocOp 086118:
  TraceOperation 086118 (Jl (Var (Local 10)) (Var (Local 5)) (Branch F (Dloc 086236)));
  if (LessThan(GetLocal(10),GetLocal(5))) {
    TraceOperation 086123 (Store (Con 9) (Con 0));
    SetLocal 9 0;
    Jump: 086126
  } else {
    Jump: 086236
  }
LocOp 086126:
  TraceOperation 086126 (Jl (Var (Local 9)) (Var (Local 5)) (Branch F (Dloc 086231)));
  if (LessThan(GetLocal(9),GetLocal(5))) {
    TraceOperation 086131 (Mul (Var (Local 9)) (Var (Local 5)) Sp);
    PushStack Mul(GetLocal(9),GetLocal(5));
    TraceOperation 086135 (Add (Var Sp) (Var (Local 10)) Sp);
    PopStack popped1;
    PushStack Add(popped1,GetLocal(10));
    TraceOperation 086139 (Loadb (Var (Local 6)) (Var Sp) (Local 13));
    PopStack popped2;
    Let b3 = M[Offset(Address(GetLocal(6)),popped2)];
    SetLocal 13 Widen(b3);
    TraceOperation 086143 (Jg (Var (Local 13)) (Con 0) (Branch F (Dloc 086226)));
    if (GreaterThan(GetLocal(13),0)) {
      TraceOperation 086148 (Store (Con 11) (Con 0));
      SetLocal 11 0;
      Jump: 086151
    } else {
      Jump: 086226
    }
  } else {
    Jump: 086231
  }
LocOp 086151:
  TraceOperation 086151 (Jl (Var (Local 11)) (Var (Local 5)) (Branch F (Dloc 086226)));
  if (LessThan(GetLocal(11),GetLocal(5))) {
    TraceOperation 086156 (Mul (Var (Local 10)) (Var (Local 5)) Sp);
    PushStack Mul(GetLocal(10),GetLocal(5));
    TraceOperation 086160 (Add (Var Sp) (Var (Local 11)) Sp);
    PopStack popped1;
    PushStack Add(popped1,GetLocal(11));
    TraceOperation 086164 (Loadb (Var (Local 6)) (Var Sp) (Local 15));
    PopStack popped2;
    Let b3 = M[Offset(Address(GetLocal(6)),popped2)];
    SetLocal 15 Widen(b3);
    TraceOperation 086168 (Jg (Var (Local 15)) (Con 0) (Branch F (Dloc 086221)));
    if (GreaterThan(GetLocal(15),0)) {
      TraceOperation 086172 (Mul (Var (Local 9)) (Var (Local 5)) Sp);
      PushStack Mul(GetLocal(9),GetLocal(5));
      TraceOperation 086176 (Add (Var Sp) (Var (Local 11)) (Local 12));
      PopStack popped4;
      SetLocal 12 Add(popped4,GetLocal(11));
      TraceOperation 086180 (Loadb (Var (Local 6)) (Var (Local 12)) (Local 14));
      Let b5 = M[Offset(Address(GetLocal(6)),GetLocal(12))];
      SetLocal 14 Widen(b5);
      TraceOperation 086184 (Jz (Var (Local 14)) (Branch T (Dloc 086195)));
      if (IsZero(GetLocal(14))) {
        Jump: 086195
      } else {
        TraceOperation 086187 (Add (Var (Local 13)) (Var (Local 15)) Sp);
        PushStack Add(GetLocal(13),GetLocal(15));
        TraceOperation 086191 (Jl (Var Sp) (Var (Local 14)) (Branch F (Dloc 086221)));
        PopStack popped6;
        if (LessThan(popped6,GetLocal(14))) {
          Jump: 086195
        } else {
          Jump: 086221
        }
      }
    } else {
      Jump: 086221
    }
  } else {
    Jump: 086226
  }
LocOp 086195:
  TraceOperation 086195 (Add (Var (Local 13)) (Var (Local 15)) Sp);
  PushStack Add(GetLocal(13),GetLocal(15));
  TraceOperation 086199 (Storeb (Var (Local 6)) (Var (Local 12)) (Var Sp));
  PopStack popped1;
  SetByte Offset(Address(GetLocal(6)),GetLocal(12)) LoByte(popped1);
  TraceOperation 086204 (Mul (Var (Local 9)) (Var (Local 5)) Sp);
  PushStack Mul(GetLocal(9),GetLocal(5));
  TraceOperation 086208 (Add (Var Sp) (Var (Local 10)) Sp);
  PopStack popped2;
  PushStack Add(popped2,GetLocal(10));
  TraceOperation 086212 (Loadb (Var (Local 7)) (Var Sp) Sp);
  PopStack popped3;
  Let b4 = M[Offset(Address(GetLocal(7)),popped3)];
  PushStack Widen(b4);
  TraceOperation 086216 (Storeb (Var (Local 7)) (Var (Local 12)) (Var Sp));
  PopStack popped5;
  SetByte Offset(Address(GetLocal(7)),GetLocal(12)) LoByte(popped5);
  Jump: 086221
LocOp 086221:
  TraceOperation 086221 (Inc (Con 11));
  SetLocal 11 Add(GetLocal(11),1);
  TraceOperation 086223 (Jump 086151);
  Jump: 086151
LocOp 086226:
  TraceOperation 086226 (Inc (Con 9));
  SetLocal 9 Add(GetLocal(9),1);
  TraceOperation 086228 (Jump 086126);
  Jump: 086126
LocOp 086231:
  TraceOperation 086231 (Inc (Con 10));
  SetLocal 10 Add(GetLocal(10),1);
  TraceOperation 086233 (Jump 086118);
  Jump: 086118
LocOp 086236:
  TraceOperation 086236 (Jz (Var (Local 4)) (Branch T (Dloc 086273)));
  if (IsZero(GetLocal(4))) {
    Jump: 086273
  } else {
    TraceOperation 086239 (Call (Floc 110116) [Var (Local 3),Var (Local 8)] Sp);
    PushFrame;
    PushReturnAddress 086239;
    SetLocal 1 GetLocal(3);
    SetLocal 2 GetLocal(8);
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 110117
  }
LocReturn 086239:
  PushStack call_result;
  TraceOperation 086246 (Call (Floc 110116) [Var (Local 2),Var (Local 8)] Sp);
  PushFrame;
  PushReturnAddress 086246;
  SetLocal 1 GetLocal(2);
  SetLocal 2 GetLocal(8);
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 110117
LocReturn 086246:
  PushStack call_result;
  TraceOperation 086253 (Mul (Var Sp) (Var (Local 5)) Sp);
  PopStack popped1;
  PushStack Mul(popped1,GetLocal(5));
  TraceOperation 086257 (Add (Var Sp) (Var Sp) Sp);
  PopStack popped2;
  PopStack popped3;
  PushStack Add(popped2,popped3);
  TraceOperation 086261 (Loadb (Var (Local 6)) (Var Sp) (Local 4));
  PopStack popped4;
  Let b5 = M[Offset(Address(GetLocal(6)),popped4)];
  SetLocal 4 Widen(b5);
  TraceOperation 086265 (Jz (Var (Local 4)) (Branch F (Dloc 086271)));
  if (IsZero(GetLocal(4))) {
    TraceOperation 086268 (Ret (Con -1));
    PopFrame;
    PopReturnAddress return_address_6;
    SetResult -1;
    JumpIndirect: (return) return_address_6
  } else {
    Jump: 086271
  }
LocOp 086271:
  TraceOperation 086271 (Ret (Var (Local 4)));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult GetLocal(4);
  JumpIndirect: (return) return_address_1
LocOp 086273:
  TraceOperation 086273 (Call (Floc 110116) [Var (Local 3),Var (Local 8)] Sp);
  PushFrame;
  PushReturnAddress 086273;
  SetLocal 1 GetLocal(3);
  SetLocal 2 GetLocal(8);
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 110117
LocReturn 086273:
  PushStack call_result;
  TraceOperation 086280 (Call (Floc 110116) [Var (Local 2),Var (Local 8)] Sp);
  PushFrame;
  PushReturnAddress 086280;
  SetLocal 1 GetLocal(2);
  SetLocal 2 GetLocal(8);
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 110117
LocReturn 086280:
  PushStack call_result;
  TraceOperation 086287 (Mul (Var Sp) (Var (Local 5)) Sp);
  PopStack popped1;
  PushStack Mul(popped1,GetLocal(5));
  TraceOperation 086291 (Add (Var Sp) (Var Sp) Sp);
  PopStack popped2;
  PopStack popped3;
  PushStack Add(popped2,popped3);
  TraceOperation 086295 (Loadb (Var (Local 7)) (Var Sp) (Local 10));
  PopStack popped4;
  Let b5 = M[Offset(Address(GetLocal(7)),popped4)];
  SetLocal 10 Widen(b5);
  TraceOperation 086299 (Jl (Var (Local 10)) (Con 255) (Branch F (Dloc 086340)));
  if (LessThan(GetLocal(10),255)) {
    TraceOperation 086303 (Store (Con 9) (Con 1));
    SetLocal 9 1;
    Jump: 086306
  } else {
    Jump: 086340
  }
LocOp 086306:
  TraceOperation 086306 (Call (Floc 111316) [Var (Local 9),Var (Local 8)] Sp);
  PushFrame;
  PushReturnAddress 086306;
  SetLocal 1 GetLocal(9);
  SetLocal 2 GetLocal(8);
  MakeRoutineFrame 2;
  Jump: 111317
LocReturn 086306:
  PushStack call_result;
  TraceOperation 086313 (Jz (Var Sp) (Branch T (Dloc 086329)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 086329
  } else {
    TraceOperation 086316 (Call (Floc 110116) [Var (Local 9),Var (Local 8)] Sp);
    PushFrame;
    PushReturnAddress 086316;
    SetLocal 1 GetLocal(9);
    SetLocal 2 GetLocal(8);
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 110117
  }
LocReturn 086316:
  PushStack call_result;
  TraceOperation 086323 (Je [Var Sp,Var (Local 10)] (Branch F (Dloc 086329)));
  PopStack popped1;
  if (Equal(popped1,GetLocal(10))) {
    TraceOperation 086327 (Ret (Var (Local 10)));
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult GetLocal(10);
    JumpIndirect: (return) return_address_2
  } else {
    Jump: 086329
  }
LocOp 086329:
  TraceOperation 086329 (Inc (Con 9));
  SetLocal 9 Add(GetLocal(9),1);
  TraceOperation 086331 (Jg (Var (Local 9)) (Con 72) (Branch T (Dloc 086340)));
  if (GreaterThan(GetLocal(9),72)) {
    Jump: 086340
  } else {
    TraceOperation 086337 (Jump 086306);
    Jump: 086306
  }
LocOp 086340:
  TraceOperation 086340 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
LocOp 086341:
  TraceOperation 086341 (Loadw (Var (Local 1)) (Con 7) (Local 6));
  Let b1 = M[Offset(Address(GetLocal(1)),14)];
  Let b2 = M[Offset(Offset(Address(GetLocal(1)),14),1)];
  SetLocal 6 MakeHiLo(b1,b2);
  TraceOperation 086345 (Mul (Con 2) (Var (Local 5)) Sp);
  PushStack Mul(2,GetLocal(5));
  TraceOperation 086349 (Mul (Var Sp) (Var (Local 5)) Sp);
  PopStack popped3;
  PushStack Mul(popped3,GetLocal(5));
  TraceOperation 086353 (Add (Var (Local 6)) (Var Sp) (Local 7));
  PopStack popped4;
  SetLocal 7 Add(GetLocal(6),popped4);
  TraceOperation 086357 (Loadw (Var (Local 1)) (Con 6) Sp);
  Let b5 = M[Offset(Address(GetLocal(1)),12)];
  Let b6 = M[Offset(Offset(Address(GetLocal(1)),12),1)];
  PushStack MakeHiLo(b5,b6);
  TraceOperation 086361 (Je [Var Sp,Con 1] (Branch F (Dloc 086620)));
  PopStack popped7;
  if (Equal(popped7,1)) {
    TraceOperation 086366 (Storew (Var (Local 1)) (Con 6) (Con 0));
    SetByte Offset(Address(GetLocal(1)),12) 0;
    SetByte Offset(Offset(Address(GetLocal(1)),12),1) 0;
    TraceOperation 086371 (Store (Con 10) (Con 1));
    SetLocal 10 1;
    Jump: 086374
  } else {
    Jump: 086620
  }
LocOp 086374:
  TraceOperation 086374 (Call (Floc 111316) [Var (Local 10),Var (Local 8)] Sp);
  PushFrame;
  PushReturnAddress 086374;
  SetLocal 1 GetLocal(10);
  SetLocal 2 GetLocal(8);
  MakeRoutineFrame 2;
  Jump: 111317
LocReturn 086374:
  PushStack call_result;
  TraceOperation 086381 (Jz (Var Sp) (Branch T (Dloc 086488)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 086488
  } else {
    TraceOperation 086385 (Store (Con 9) (Con 1));
    SetLocal 9 1;
    Jump: 086388
  }
LocOp 086388:
  TraceOperation 086388 (Call (Floc 111316) [Var (Local 9),Var (Local 8)] Sp);
  PushFrame;
  PushReturnAddress 086388;
  SetLocal 1 GetLocal(9);
  SetLocal 2 GetLocal(8);
  MakeRoutineFrame 2;
  Jump: 111317
LocReturn 086388:
  PushStack call_result;
  TraceOperation 086395 (Jz (Var Sp) (Branch T (Dloc 086477)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 086477
  } else {
    TraceOperation 086399 (Call (Floc 083040) [Var (Local 10),Var (Local 1),Var (Local 9)] Sp);
    PushFrame;
    PushReturnAddress 086399;
    SetLocal 1 GetLocal(10);
    SetLocal 2 GetLocal(1);
    SetLocal 3 GetLocal(9);
    MakeRoutineFrame 8;
    SetLocal 8 0;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    Jump: 083041
  }
LocReturn 086399:
  PushStack call_result;
  TraceOperation 086407 (Jz (Var Sp) (Branch T (Dloc 086445)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 086445
  } else {
    TraceOperation 086410 (Call (Floc 110116) [Var (Local 9),Var (Local 8)] Sp);
    PushFrame;
    PushReturnAddress 086410;
    SetLocal 1 GetLocal(9);
    SetLocal 2 GetLocal(8);
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 110117
  }
LocReturn 086410:
  PushStack call_result;
  TraceOperation 086417 (Call (Floc 110116) [Var (Local 10),Var (Local 8)] Sp);
  PushFrame;
  PushReturnAddress 086417;
  SetLocal 1 GetLocal(10);
  SetLocal 2 GetLocal(8);
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 110117
LocReturn 086417:
  PushStack call_result;
  TraceOperation 086424 (Mul (Var Sp) (Var (Local 5)) Sp);
  PopStack popped1;
  PushStack Mul(popped1,GetLocal(5));
  TraceOperation 086428 (Add (Var Sp) (Var Sp) (Local 12));
  PopStack popped2;
  PopStack popped3;
  SetLocal 12 Add(popped2,popped3);
  TraceOperation 086432 (Storew (Var (Local 6)) (Var (Local 12)) (Con 1));
  SetByte Offset(Address(GetLocal(6)),Mul(2,GetLocal(12))) 0;
  SetByte Offset(Offset(Address(GetLocal(6)),Mul(2,GetLocal(12))),1) 1;
  TraceOperation 086437 (Storew (Var (Local 7)) (Var (Local 12)) (Var (Local 9)));
  SetByte Offset(Address(GetLocal(7)),Mul(2,GetLocal(12))) HiByte(GetLocal(9));
  SetByte Offset(Offset(Address(GetLocal(7)),Mul(2,GetLocal(12))),1) LoByte(GetLocal(9));
  TraceOperation 086442 (Jump 086477);
  Jump: 086477
LocOp 086445:
  TraceOperation 086445 (Call (Floc 110116) [Var (Local 9),Var (Local 8)] Sp);
  PushFrame;
  PushReturnAddress 086445;
  SetLocal 1 GetLocal(9);
  SetLocal 2 GetLocal(8);
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 110117
LocReturn 086445:
  PushStack call_result;
  TraceOperation 086452 (Call (Floc 110116) [Var (Local 10),Var (Local 8)] Sp);
  PushFrame;
  PushReturnAddress 086452;
  SetLocal 1 GetLocal(10);
  SetLocal 2 GetLocal(8);
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 110117
LocReturn 086452:
  PushStack call_result;
  TraceOperation 086459 (Mul (Var Sp) (Var (Local 5)) Sp);
  PopStack popped1;
  PushStack Mul(popped1,GetLocal(5));
  TraceOperation 086463 (Add (Var Sp) (Var Sp) (Local 12));
  PopStack popped2;
  PopStack popped3;
  SetLocal 12 Add(popped2,popped3);
  TraceOperation 086467 (Storew (Var (Local 6)) (Var (Local 12)) (Con 0));
  SetByte Offset(Address(GetLocal(6)),Mul(2,GetLocal(12))) 0;
  SetByte Offset(Offset(Address(GetLocal(6)),Mul(2,GetLocal(12))),1) 0;
  TraceOperation 086472 (Storew (Var (Local 7)) (Var (Local 12)) (Con 0));
  SetByte Offset(Address(GetLocal(7)),Mul(2,GetLocal(12))) 0;
  SetByte Offset(Offset(Address(GetLocal(7)),Mul(2,GetLocal(12))),1) 0;
  Jump: 086477
LocOp 086477:
  TraceOperation 086477 (Inc (Con 9));
  SetLocal 9 Add(GetLocal(9),1);
  TraceOperation 086479 (Jg (Var (Local 9)) (Con 72) (Branch T (Dloc 086488)));
  if (GreaterThan(GetLocal(9),72)) {
    Jump: 086488
  } else {
    TraceOperation 086485 (Jump 086388);
    Jump: 086388
  }
LocOp 086488:
  TraceOperation 086488 (Inc (Con 10));
  SetLocal 10 Add(GetLocal(10),1);
  TraceOperation 086490 (Jg (Var (Local 10)) (Con 72) (Branch T (Dloc 086499)));
  if (GreaterThan(GetLocal(10),72)) {
    Jump: 086499
  } else {
    TraceOperation 086496 (Jump 086374);
    Jump: 086374
  }
LocOp 086499:
  TraceOperation 086499 (Store (Con 10) (Con 0));
  SetLocal 10 0;
  Jump: 086502
LocOp 086502:
  TraceOperation 086502 (Jl (Var (Local 10)) (Var (Local 5)) (Branch F (Dloc 086620)));
  if (LessThan(GetLocal(10),GetLocal(5))) {
    TraceOperation 086507 (Store (Con 9) (Con 0));
    SetLocal 9 0;
    Jump: 086510
  } else {
    Jump: 086620
  }
LocOp 086510:
  TraceOperation 086510 (Jl (Var (Local 9)) (Var (Local 5)) (Branch F (Dloc 086615)));
  if (LessThan(GetLocal(9),GetLocal(5))) {
    TraceOperation 086515 (Mul (Var (Local 9)) (Var (Local 5)) Sp);
    PushStack Mul(GetLocal(9),GetLocal(5));
    TraceOperation 086519 (Add (Var Sp) (Var (Local 10)) Sp);
    PopStack popped1;
    PushStack Add(popped1,GetLocal(10));
    TraceOperation 086523 (Loadw (Var (Local 6)) (Var Sp) (Local 13));
    PopStack popped2;
    Let b3 = M[Offset(Address(GetLocal(6)),Mul(2,popped2))];
    Let b4 = M[Offset(Offset(Address(GetLocal(6)),Mul(2,popped2)),1)];
    SetLocal 13 MakeHiLo(b3,b4);
    TraceOperation 086527 (Jg (Var (Local 13)) (Con 0) (Branch F (Dloc 086610)));
    if (GreaterThan(GetLocal(13),0)) {
      TraceOperation 086532 (Store (Con 11) (Con 0));
      SetLocal 11 0;
      Jump: 086535
    } else {
      Jump: 086610
    }
  } else {
    Jump: 086615
  }
LocOp 086535:
  TraceOperation 086535 (Jl (Var (Local 11)) (Var (Local 5)) (Branch F (Dloc 086610)));
  if (LessThan(GetLocal(11),GetLocal(5))) {
    TraceOperation 086540 (Mul (Var (Local 10)) (Var (Local 5)) Sp);
    PushStack Mul(GetLocal(10),GetLocal(5));
    TraceOperation 086544 (Add (Var Sp) (Var (Local 11)) Sp);
    PopStack popped1;
    PushStack Add(popped1,GetLocal(11));
    TraceOperation 086548 (Loadw (Var (Local 6)) (Var Sp) (Local 15));
    PopStack popped2;
    Let b3 = M[Offset(Address(GetLocal(6)),Mul(2,popped2))];
    Let b4 = M[Offset(Offset(Address(GetLocal(6)),Mul(2,popped2)),1)];
    SetLocal 15 MakeHiLo(b3,b4);
    TraceOperation 086552 (Jg (Var (Local 15)) (Con 0) (Branch F (Dloc 086605)));
    if (GreaterThan(GetLocal(15),0)) {
      TraceOperation 086556 (Mul (Var (Local 9)) (Var (Local 5)) Sp);
      PushStack Mul(GetLocal(9),GetLocal(5));
      TraceOperation 086560 (Add (Var Sp) (Var (Local 11)) (Local 12));
      PopStack popped5;
      SetLocal 12 Add(popped5,GetLocal(11));
      TraceOperation 086564 (Loadw (Var (Local 6)) (Var (Local 12)) (Local 14));
      Let b6 = M[Offset(Address(GetLocal(6)),Mul(2,GetLocal(12)))];
      Let b7 = M[Offset(Offset(Address(GetLocal(6)),Mul(2,GetLocal(12))),1)];
      SetLocal 14 MakeHiLo(b6,b7);
      TraceOperation 086568 (Jz (Var (Local 14)) (Branch T (Dloc 086579)));
      if (IsZero(GetLocal(14))) {
        Jump: 086579
      } else {
        TraceOperation 086571 (Add (Var (Local 13)) (Var (Local 15)) Sp);
        PushStack Add(GetLocal(13),GetLocal(15));
        TraceOperation 086575 (Jl (Var Sp) (Var (Local 14)) (Branch F (Dloc 086605)));
        PopStack popped8;
        if (LessThan(popped8,GetLocal(14))) {
          Jump: 086579
        } else {
          Jump: 086605
        }
      }
    } else {
      Jump: 086605
    }
  } else {
    Jump: 086610
  }
LocOp 086579:
  TraceOperation 086579 (Add (Var (Local 13)) (Var (Local 15)) Sp);
  PushStack Add(GetLocal(13),GetLocal(15));
  TraceOperation 086583 (Storew (Var (Local 6)) (Var (Local 12)) (Var Sp));
  PopStack popped1;
  SetByte Offset(Address(GetLocal(6)),Mul(2,GetLocal(12))) HiByte(popped1);
  SetByte Offset(Offset(Address(GetLocal(6)),Mul(2,GetLocal(12))),1) LoByte(popped1);
  TraceOperation 086588 (Mul (Var (Local 9)) (Var (Local 5)) Sp);
  PushStack Mul(GetLocal(9),GetLocal(5));
  TraceOperation 086592 (Add (Var Sp) (Var (Local 10)) Sp);
  PopStack popped2;
  PushStack Add(popped2,GetLocal(10));
  TraceOperation 086596 (Loadw (Var (Local 7)) (Var Sp) Sp);
  PopStack popped3;
  Let b4 = M[Offset(Address(GetLocal(7)),Mul(2,popped3))];
  Let b5 = M[Offset(Offset(Address(GetLocal(7)),Mul(2,popped3)),1)];
  PushStack MakeHiLo(b4,b5);
  TraceOperation 086600 (Storew (Var (Local 7)) (Var (Local 12)) (Var Sp));
  PopStack popped6;
  SetByte Offset(Address(GetLocal(7)),Mul(2,GetLocal(12))) HiByte(popped6);
  SetByte Offset(Offset(Address(GetLocal(7)),Mul(2,GetLocal(12))),1) LoByte(popped6);
  Jump: 086605
LocOp 086605:
  TraceOperation 086605 (Inc (Con 11));
  SetLocal 11 Add(GetLocal(11),1);
  TraceOperation 086607 (Jump 086535);
  Jump: 086535
LocOp 086610:
  TraceOperation 086610 (Inc (Con 9));
  SetLocal 9 Add(GetLocal(9),1);
  TraceOperation 086612 (Jump 086510);
  Jump: 086510
LocOp 086615:
  TraceOperation 086615 (Inc (Con 10));
  SetLocal 10 Add(GetLocal(10),1);
  TraceOperation 086617 (Jump 086502);
  Jump: 086502
LocOp 086620:
  TraceOperation 086620 (Jz (Var (Local 4)) (Branch T (Dloc 086657)));
  if (IsZero(GetLocal(4))) {
    Jump: 086657
  } else {
    TraceOperation 086623 (Call (Floc 110116) [Var (Local 3),Var (Local 8)] Sp);
    PushFrame;
    PushReturnAddress 086623;
    SetLocal 1 GetLocal(3);
    SetLocal 2 GetLocal(8);
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 110117
  }
LocReturn 086623:
  PushStack call_result;
  TraceOperation 086630 (Call (Floc 110116) [Var (Local 2),Var (Local 8)] Sp);
  PushFrame;
  PushReturnAddress 086630;
  SetLocal 1 GetLocal(2);
  SetLocal 2 GetLocal(8);
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 110117
LocReturn 086630:
  PushStack call_result;
  TraceOperation 086637 (Mul (Var Sp) (Var (Local 5)) Sp);
  PopStack popped1;
  PushStack Mul(popped1,GetLocal(5));
  TraceOperation 086641 (Add (Var Sp) (Var Sp) Sp);
  PopStack popped2;
  PopStack popped3;
  PushStack Add(popped2,popped3);
  TraceOperation 086645 (Loadw (Var (Local 6)) (Var Sp) (Local 4));
  PopStack popped4;
  Let b5 = M[Offset(Address(GetLocal(6)),Mul(2,popped4))];
  Let b6 = M[Offset(Offset(Address(GetLocal(6)),Mul(2,popped4)),1)];
  SetLocal 4 MakeHiLo(b5,b6);
  TraceOperation 086649 (Jz (Var (Local 4)) (Branch F (Dloc 086655)));
  if (IsZero(GetLocal(4))) {
    TraceOperation 086652 (Ret (Con -1));
    PopFrame;
    PopReturnAddress return_address_7;
    SetResult -1;
    JumpIndirect: (return) return_address_7
  } else {
    Jump: 086655
  }
LocOp 086655:
  TraceOperation 086655 (Ret (Var (Local 4)));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult GetLocal(4);
  JumpIndirect: (return) return_address_1
LocOp 086657:
  TraceOperation 086657 (Call (Floc 110116) [Var (Local 3),Var (Local 8)] Sp);
  PushFrame;
  PushReturnAddress 086657;
  SetLocal 1 GetLocal(3);
  SetLocal 2 GetLocal(8);
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 110117
LocReturn 086657:
  PushStack call_result;
  TraceOperation 086664 (Call (Floc 110116) [Var (Local 2),Var (Local 8)] Sp);
  PushFrame;
  PushReturnAddress 086664;
  SetLocal 1 GetLocal(2);
  SetLocal 2 GetLocal(8);
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 110117
LocReturn 086664:
  PushStack call_result;
  TraceOperation 086671 (Mul (Var Sp) (Var (Local 5)) Sp);
  PopStack popped1;
  PushStack Mul(popped1,GetLocal(5));
  TraceOperation 086675 (Add (Var Sp) (Var Sp) Sp);
  PopStack popped2;
  PopStack popped3;
  PushStack Add(popped2,popped3);
  TraceOperation 086679 (Loadw (Var (Local 7)) (Var Sp) Sp);
  PopStack popped4;
  Let b5 = M[Offset(Address(GetLocal(7)),Mul(2,popped4))];
  Let b6 = M[Offset(Offset(Address(GetLocal(7)),Mul(2,popped4)),1)];
  PushStack MakeHiLo(b5,b6);
  TraceOperation 086683 Ret_popped;
  PopStack popped7;
  PopFrame;
  PopReturnAddress return_address_8;
  SetResult popped7;
  JumpIndirect: (return) return_address_8
LocOp 086684:
  TraceOperation 086684 (Jz (Var (Local 4)) (Branch T (Dloc 086690)));
  if (IsZero(GetLocal(4))) {
    Jump: 086690
  } else {
    TraceOperation 086687 (Ret (Con -1));
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult -1;
    JumpIndirect: (return) return_address_1
  }
LocOp 086690:
  TraceOperation 086690 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 086746:
  MakeRoutineFrame 5;
  if (LessThanByte(num_actuals,5)) {
    SetLocal 5 0;
    if (LessThanByte(num_actuals,4)) {
      SetLocal 4 0;
      if (LessThanByte(num_actuals,3)) {
        SetLocal 3 0;
        if (LessThanByte(num_actuals,2)) {
          SetLocal 2 0;
          if (LessThanByte(num_actuals,1)) {
            SetLocal 1 0;
          }
        }
      }
    }
  }
  Jump: 086747
LocOp 086747:
  TraceOperation 086747 (Print " in the source text)");
  GamePrint " in the source text)";
  TraceOperation 086762 (Print ": ");
  GamePrint ": ";
  TraceOperation 086765 (Store (Con 255) (Var (Local 1)));
  SetByte 007684 HiByte(GetLocal(1));
  SetByte 007685 LoByte(GetLocal(1));
  TraceOperation 086768 (Je [Var (Global 239),Con 1] (Branch F (Dloc 086832)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),1)) {
    TraceOperation 086772 (Print "Tried to move ");
    GamePrint "Tried to move ";
    TraceOperation 086783 (CallN (Floc 081916) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 086783;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 081917
  } else {
    Jump: 086832
  }
LocReturn 086783:
  TraceOperation 086788 (Print " (a backdrop) to ");
  GamePrint " (a backdrop) to ";
  TraceOperation 086803 (CallN (Floc 081916) [Var (Local 3)]);
  PushFrame;
  PushReturnAddress 086803;
  SetLocal 1 GetLocal(3);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 081917
LocReturn 086803:
  TraceOperation 086808 (Print ", which is not a region.\n");
  GamePrint ", which is not a region.\n";
  TraceOperation 086829 (Jump 087953);
  Jump: 087953
LocOp 086832:
  TraceOperation 086832 (Je [Var (Global 239),Con 4] (Branch F (Dloc 086866)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),4)) {
    TraceOperation 086836 (Print "Tried to change player to ");
    GamePrint "Tried to change player to ";
    TraceOperation 086855 (CallN (Floc 081916) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 086855;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 081917
  } else {
    Jump: 086866
  }
LocReturn 086855:
  TraceOperation 086860 (Print_paddr (Con 29716));
  Note "<static Gettext address>";
  GamePrint ", which is not a player-character.\n";
  TraceOperation 086863 (Jump 087953);
  Jump: 087953
LocOp 086866:
  TraceOperation 086866 (Je [Var (Global 239),Con 3] (Branch F (Dloc 086906)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),3)) {
    TraceOperation 086870 (Print "Tried to change ");
    GamePrint "Tried to change ";
    TraceOperation 086883 (CallN (Floc 081916) [Var (Local 3)]);
    PushFrame;
    PushReturnAddress 086883;
    SetLocal 1 GetLocal(3);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 081917
  } else {
    Jump: 086906
  }
LocReturn 086883:
  TraceOperation 086888 (Print " exit of ");
  GamePrint " exit of ";
  TraceOperation 086895 (CallN (Floc 081916) [Var (Local 2)]);
  PushFrame;
  PushReturnAddress 086895;
  SetLocal 1 GetLocal(2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 081917
LocReturn 086895:
  TraceOperation 086900 (Print_paddr (Con 29723));
  Note "<static Gettext address>";
  GamePrint ", but it didn't seem to have such an exit to change.\n";
  TraceOperation 086903 (Jump 087953);
  Jump: 087953
LocOp 086906:
  TraceOperation 086906 (Je [Var (Global 239),Con 2] (Branch F (Dloc 086946)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),2)) {
    TraceOperation 086910 (Print "Tried to change ");
    GamePrint "Tried to change ";
    TraceOperation 086923 (CallN (Floc 081916) [Var (Local 3)]);
    PushFrame;
    PushReturnAddress 086923;
    SetLocal 1 GetLocal(3);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 081917
  } else {
    Jump: 086946
  }
LocReturn 086923:
  TraceOperation 086928 (Print " exit of ");
  GamePrint " exit of ";
  TraceOperation 086935 (CallN (Floc 081916) [Var (Local 2)]);
  PushFrame;
  PushReturnAddress 086935;
  SetLocal 1 GetLocal(2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 081917
LocReturn 086935:
  TraceOperation 086940 (Print_paddr (Con 29733));
  Note "<static Gettext address>";
  GamePrint ", but it led to a door, not a room.\n";
  TraceOperation 086943 (Jump 087953);
  Jump: 087953
LocOp 086946:
  TraceOperation 086946 (Je [Var (Global 239),Con 5] (Branch F (Dloc 087043)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),5)) {
    TraceOperation 086951 (Print_paddr (Con 29740));
    Note "<static Gettext address>";
    GamePrint "Tried to access an inappropriate relation for ";
    TraceOperation 086954 (CallN (Floc 081916) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 086954;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 081917
  } else {
    Jump: 087043
  }
LocReturn 086954:
  TraceOperation 086959 (Print ", violating '");
  GamePrint ", violating '";
  TraceOperation 086970 (Store (Con 6) (Con 0));
  SetLocal 6 0;
  TraceOperation 086973 (Jump 086980);
  Jump: 086980
--------------------------------------------------
LocRoutine 087084:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 087085
LocOp 087085:
  TraceOperation 087085 (Print ".\n");
  GamePrint ".\n";
  TraceOperation 087090 (Jump 087953);
  Jump: 087953
--------------------------------------------------
LocRoutine 087336:
  MakeRoutineFrame 0;
  Jump: 087337
LocOp 087337:
  TraceOperation 087337 (Mod (Con 23) (Con 41) (Global 126));
  SetByte 007458 0;
  SetByte 007459 23;
  TraceOperation 087341 (Get_prop_addr (Var (Global 85)) (Con 200) (Global 151));
  Let b1 = M[007376];
  Let b2 = M[007377];
  Let b3 = M[Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),12)];
  Let b4 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),12),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  Let loop_var6 = DeAddress(Offset(Address(MakeHiLo(b3,b4)),Add(Mul(2,Widen(b5)),1)));
  Label 7: {
    Let b8 = M[Address(loop_var6)];
    if (IsZeroByte(b8)) {
      SetByte 007508 0;
      SetByte 007509 0;
    } else {
      if (TestBit(b8,7)) {
        Let b9 = M[Offset(Address(loop_var6),1)];
        if (Equal(200,Widen(BwAnd(b8,63)))) {
          SetByte 007508 HiByte(DeAddress(Offset(Address(loop_var6),2)));
          SetByte 007509 LoByte(DeAddress(Offset(Address(loop_var6),2)));
        } else {
          Assign loop_var6 = DeAddress(Offset(Offset(Address(loop_var6),2),Widen(BwAnd(b9,63))));
          Goto: Label 7
        }
      } else {
        if (TestBit(b8,6)) {
          if (Equal(200,Widen(BwAnd(b8,63)))) {
            SetByte 007508 HiByte(DeAddress(Offset(Address(loop_var6),1)));
            SetByte 007509 LoByte(DeAddress(Offset(Address(loop_var6),1)));
          } else {
            Assign loop_var6 = DeAddress(Offset(Offset(Address(loop_var6),1),2));
            Goto: Label 7
          }
        } else {
          if (Equal(200,Widen(BwAnd(b8,63)))) {
            SetByte 007508 HiByte(DeAddress(Offset(Address(loop_var6),1)));
            SetByte 007509 LoByte(DeAddress(Offset(Address(loop_var6),1)));
          } else {
            Assign loop_var6 = DeAddress(Offset(Offset(Address(loop_var6),1),1));
            Goto: Label 7
          }
        }
      }
    }
  }
  TraceOperation 087345 (Jump 087953);
  Jump: 087953
--------------------------------------------------
LocRoutine 087366:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 087367
LocOp 087367:
  TraceOperation 087367 (Set_attr (Var (Global 49)) (Con 255));
  Let b1 = M[007304];
  Let b2 = M[007305];
  Let b3 = M[Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),31)];
  SetByte Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),31) SetBit(b3,0);
  TraceOperation 087370 (Sub (Con 82) (Con 141) (Global 100));
  SetByte 007406 255;
  SetByte 007407 197;
  TraceOperation 087374 (Print_obj (Var (Global 202)));
  Let b4 = M[007610];
  Let b5 = M[007611];
  Let b6 = M[Offset(Offset(000378,Mul(MakeHiLo(b4,b5),14)),12)];
  Let b7 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b4,b5),14)),12),1)];
  Let b8 = M[Address(MakeHiLo(b6,b7))];
  Let ite_res9 = Ite((IsZeroByte(b8),"",GetText(Offset(Address(MakeHiLo(b6,b7)),1))));
  GamePrint ite_res9;
  TraceOperation 087376 (Loadw (Con 99) (Var (Global 134)) (Local 2));
  Let b10 = M[007474];
  Let b11 = M[007475];
  Let b12 = M[Offset(000099,Mul(2,MakeHiLo(b10,b11)))];
  Let b13 = M[Offset(Offset(000099,Mul(2,MakeHiLo(b10,b11))),1)];
  SetLocal 2 MakeHiLo(b12,b13);
  TraceOperation 087380 (Print "'.\n");
  GamePrint "'.\n";
  TraceOperation 087385 (Jump 087953);
  Jump: 087953
--------------------------------------------------
LocRoutine 087550:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 087551
LocOp 087551:
  TraceOperation 087551 (Get_parent (Con 65) (Global 239));
  Let b1 = M[001294];
  Let b2 = M[001295];
  SetByte 007684 b1;
  SetByte 007685 b2;
  TraceOperation 087554 (Jg (Con 82) (Var (Global 125)) (Branch F (Dloc 087609)));
  Let b3 = M[007456];
  Let b4 = M[007457];
  if (GreaterThan(82,MakeHiLo(b3,b4))) {
    TraceOperation 087558 (Jg (Con 218) (Con 47) (Branch F (Dloc 087595)));
    TraceOperation 087562 (Dec (Con 2));
    SetLocal 2 Sub(GetLocal(2),1);
    TraceOperation 087564 (Print "'.\n");
    GamePrint "'.\n";
    TraceOperation 087569 (Jump 087953);
    Jump: 087953
  } else {
    Jump: 087609
  }
--------------------------------------------------
LocRoutine 087608:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 087609
LocOp 087609:
  TraceOperation 087609 (Call (Fvar (Global 49)) [Con 255] (Global 13));
  Let b1 = M[007304];
  Let b2 = M[007305];
  if (IsZeroAddress(PackedAddress Z5(MakeHiLo(b1,b2)))) {
    SetByte 007232 0;
    SetByte 007233 0;
    Jump: 087613
  } else {
    PushFrame;
    PushReturnAddress 087609;
    SetLocal 1 255;
    SetNumberActuals 1;
    JumpIndirect: (routine) PackedAddress Z5(MakeHiLo(b1,b2))
  }
LocReturn 087609:
  SetByte 007232 HiByte(call_result);
  SetByte 007233 LoByte(call_result);
  Jump: 087613
LocOp 087613:
  TraceOperation 087613 (Or (Var (Global 125)) (Con 117) (Global 25));
  Let b1 = M[007456];
  Let b2 = M[007457];
  SetByte 007256 HiByte(Or(MakeHiLo(b1,b2),117));
  SetByte 007257 LoByte(Or(MakeHiLo(b1,b2),117));
  TraceOperation 087617 (Jump 087953);
  Jump: 087953
--------------------------------------------------
LocRoutine 087628:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 087629
LocOp 087629:
  TraceOperation 087629 (Inc_chk (Var (Global 49)) (Con 255) (Branch F (Dloc 095640)));
  Let b1 = M[007304];
  Let b2 = M[007305];
  if (IsZeroByte(b2)) {
    PopStack popped3;
    PushStack Add(popped3,1);
    if (GreaterThanEqual(popped3,255)) {
    }
  } else {
    if (LessThanByte(b2,16)) {
      SetLocal b2 Add(GetLocal(b2),1);
      if (GreaterThanEqual(GetLocal(b2),255)) {
      }
    } else {
      Let b4 = M[Offset(007206,Mul(2,Widen(MinusByte(b2,16))))];
      Let b5 = M[Offset(Offset(007206,Mul(2,Widen(MinusByte(b2,16)))),1)];
      SetByte Offset(007206,Mul(2,Widen(MinusByte(b2,16)))) HiByte(Add(MakeHiLo(b4,b5),1));
      SetByte Offset(Offset(007206,Mul(2,Widen(MinusByte(b2,16)))),1) LoByte(Add(MakeHiLo(b4,b5),1));
      if (GreaterThanEqual(MakeHiLo(b4,b5),255)) {
      }
    }
  }
  TraceOperation 087634 (Print_paddr (Con 30019));
  Note "<static Gettext address>";
  GamePrint "Attempt to use a property of the 'nothing' non-object.\n";
  TraceOperation 087637 (Jump 087953);
  Jump: 087953
--------------------------------------------------
LocRoutine 087792:
  MakeRoutineFrame 0;
  Jump: 087793
LocOp 087793:
  TraceOperation 087793 (Get_sibling (Var (Global 49)) (Global 239) (Branch F (Dloc 082236)));
  Let b1 = M[007304];
  Let b2 = M[007305];
  Let b3 = M[Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),8)];
  Let b4 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),8),1)];
  SetByte 007684 b3;
  SetByte 007685 b4;
  if (IsZero(MakeHiLo(b3,b4))) {
    Jump: 082236
  } else {
    TraceOperation 087798 (Print_paddr (Con 30086));
    Note "<static Gettext address>";
    GamePrint "The list-writer has run out of memory.\n";
    TraceOperation 087801 (Jump 087953);
    Jump: 087953
  }
--------------------------------------------------
LocRoutine 087812:
  MakeRoutineFrame 0;
  Jump: 087813
LocOp 087813:
  TraceOperation 087813 (Print_paddr (Con 16895));
  Note "<static Gettext address>";
  GamePrint "   c  ";
  TraceOperation 087816 (Clear_attr (Con 72) (Var (Global 125)));
  Let b1 = M[007456];
  Let b2 = M[007457];
  Let b3 = M[Offset(001386,Div8(MakeHiLo(b1,b2)))];
  SetByte Offset(001386,Div8(MakeHiLo(b1,b2))) ClearBit(b3,SevenMinus(LoByte(Mod(MakeHiLo(b1,b2),8))));
  TraceOperation 087819 (Sub (Var (Global 134)) (Var (Global 124)) Sp);
  Let b4 = M[007474];
  Let b5 = M[007475];
  Let b6 = M[007454];
  Let b7 = M[007455];
  PushStack Sub(MakeHiLo(b4,b5),MakeHiLo(b6,b7));
  TraceOperation 087823 (Get_parent (Con 16895) (Global 29));
  SetByte 007264 0;
  SetByte 007265 0;
  TraceOperation 087827 (Or (Var (Global 125)) (Con 117) (Global 141));
  Let b8 = M[007456];
  Let b9 = M[007457];
  SetByte 007488 HiByte(Or(MakeHiLo(b8,b9),117));
  SetByte 007489 LoByte(Or(MakeHiLo(b8,b9),117));
  TraceOperation 087831 (Jump 087953);
  Jump: 087953
--------------------------------------------------
LocRoutine 087850:
  MakeRoutineFrame 0;
  Jump: 087851
LocOp 087851:
  TraceOperation 087851 (Set_colour (Con 0) (Var (Global 27)));
  Let b1 = M[007260];
  Let b2 = M[007261];
  Note "(Set_colour (Con 0) (Var (Global 27)),\"-->\",0,MakeHiLo(b1,b2))";
  TraceOperation 087854 (Print_paddr (Var (Global 11)));
  Let b3 = M[007228];
  Let b4 = M[007229];
  GamePrint GetText(PackedAddress Z5(MakeHiLo(b3,b4)));
  TraceOperation 087856 (Mod (Var (Global 85)) (Con 73) (Global 6));
  Let b5 = M[007376];
  Let b6 = M[007377];
  SetByte 007218 HiByte(Mod(MakeHiLo(b5,b6),73));
  SetByte 007219 LoByte(Mod(MakeHiLo(b5,b6),73));
  TraceOperation 087860 (Inc_chk (Var (Global 140)) (Con 165) (Branch T (Dloc 090935)));
  Let b7 = M[007486];
  Let b8 = M[007487];
  if (IsZeroByte(b8)) {
    PopStack popped9;
    PushStack Add(popped9,1);
    if (GreaterThanEqual(popped9,165)) {
    }
  } else {
    if (LessThanByte(b8,16)) {
      SetLocal b8 Add(GetLocal(b8),1);
      if (GreaterThanEqual(GetLocal(b8),165)) {
      }
    } else {
      Let b10 = M[Offset(007206,Mul(2,Widen(MinusByte(b8,16))))];
      Let b11 = M[Offset(Offset(007206,Mul(2,Widen(MinusByte(b8,16)))),1)];
      SetByte Offset(007206,Mul(2,Widen(MinusByte(b8,16)))) HiByte(Add(MakeHiLo(b10,b11),1));
      SetByte Offset(Offset(007206,Mul(2,Widen(MinusByte(b8,16)))),1) LoByte(Add(MakeHiLo(b10,b11),1));
      if (GreaterThanEqual(MakeHiLo(b10,b11),165)) {
      }
    }
  }
  TraceOperation 087865 (Call (Fvar (Global 49)) [Con 255] (Global 31));
  Let b12 = M[007304];
  Let b13 = M[007305];
  if (IsZeroAddress(PackedAddress Z5(MakeHiLo(b12,b13)))) {
    SetByte 007268 0;
    SetByte 007269 0;
    Jump: 087869
  } else {
    PushFrame;
    PushReturnAddress 087865;
    SetLocal 1 255;
    SetNumberActuals 1;
    JumpIndirect: (routine) PackedAddress Z5(MakeHiLo(b12,b13))
  }
LocReturn 087865:
  SetByte 007268 HiByte(call_result);
  SetByte 007269 LoByte(call_result);
  Jump: 087869
LocOp 087869:
  TraceOperation 087869 (Or (Var (Global 125)) (Con 117) (Global 151));
  Let b1 = M[007456];
  Let b2 = M[007457];
  SetByte 007508 HiByte(Or(MakeHiLo(b1,b2),117));
  SetByte 007509 LoByte(Or(MakeHiLo(b1,b2),117));
  TraceOperation 087873 (Jump 087953);
  Jump: 087953
--------------------------------------------------
LocRoutine 087904:
  MakeRoutineFrame 0;
  Jump: 087905
LocOp 087905:
  TraceOperation 087905 (Get_prop (Con 65) (Var (Global 239)) (Global 33));
  Let b1 = M[007684];
  Let b2 = M[007685];
  Let b3 = M[001300];
  Let b4 = M[001301];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  Let loop_var6 = DeAddress(Offset(Address(MakeHiLo(b3,b4)),Add(Mul(2,Widen(b5)),1)));
  Label 7: {
    Let b8 = M[Address(loop_var6)];
    if (IsZeroByte(b8)) {
      Let b9 = M[Offset(000266,Mul(2,Sub(MakeHiLo(b1,b2),1)))];
      Let b10 = M[Offset(Offset(000266,Mul(2,Sub(MakeHiLo(b1,b2),1))),1)];
      SetByte 007272 b9;
      SetByte 007273 b10;
    } else {
      if (TestBit(b8,7)) {
        Let b11 = M[Offset(Address(loop_var6),1)];
        if (Equal(MakeHiLo(b1,b2),Widen(BwAnd(b8,63)))) {
          if (Equal(Widen(BwAnd(b11,63)),2)) {
            Let b12 = M[Offset(Address(loop_var6),2)];
            Let b13 = M[Offset(Offset(Address(loop_var6),2),1)];
            SetByte 007272 b12;
            SetByte 007273 b13;
          } else {
            Let b14 = M[Offset(Address(loop_var6),2)];
            SetByte 007272 HiByte(Widen(b14));
            SetByte 007273 LoByte(Widen(b14));
          }
        } else {
          Assign loop_var6 = DeAddress(Offset(Offset(Address(loop_var6),2),Widen(BwAnd(b11,63))));
          Goto: Label 7
        }
      } else {
        if (TestBit(b8,6)) {
          if (Equal(MakeHiLo(b1,b2),Widen(BwAnd(b8,63)))) {
            Let b15 = M[Offset(Address(loop_var6),1)];
            Let b16 = M[Offset(Offset(Address(loop_var6),1),1)];
            SetByte 007272 b15;
            SetByte 007273 b16;
          } else {
            Assign loop_var6 = DeAddress(Offset(Offset(Address(loop_var6),1),2));
            Goto: Label 7
          }
        } else {
          if (Equal(MakeHiLo(b1,b2),Widen(BwAnd(b8,63)))) {
            Let b17 = M[Offset(Address(loop_var6),1)];
            SetByte 007272 HiByte(Widen(b17));
            SetByte 007273 LoByte(Widen(b17));
          } else {
            Assign loop_var6 = DeAddress(Offset(Offset(Address(loop_var6),1),1));
            Goto: Label 7
          }
        }
      }
    }
  }
  TraceOperation 087909 (Or (Var (Global 125)) (Con 117) (Global 160));
  Let b18 = M[007456];
  Let b19 = M[007457];
  SetByte 007526 HiByte(Or(MakeHiLo(b18,b19),117));
  SetByte 007527 LoByte(Or(MakeHiLo(b18,b19),117));
  TraceOperation 087913 (Jump 087953);
  Jump: 087953
--------------------------------------------------
LocRoutine 087934:
  MakeRoutineFrame 0;
  Jump: 087935
LocOp 087935:
  TraceOperation 087935 (Get_next_prop (Con 65) (Con 255) (Global 36));
  Let b1 = M[001300];
  Let b2 = M[001301];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let loop_var4 = DeAddress(Offset(Address(MakeHiLo(b1,b2)),Add(Mul(2,Widen(b3)),1)));
  Label 5: {
    Let b6 = M[Address(loop_var4)];
    if (IsZeroByte(b6)) {
      Error: ("getNextProp",255)
    } else {
      if (TestBit(b6,7)) {
        Let b7 = M[Offset(Address(loop_var4),1)];
        if (Equal(255,Widen(BwAnd(b6,63)))) {
          Let b8 = M[Offset(Offset(Address(loop_var4),2),Widen(BwAnd(b7,63)))];
          SetByte 007278 HiByte(Widen(BwAnd(b8,63)));
          SetByte 007279 LoByte(Widen(BwAnd(b8,63)));
        } else {
          Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),2),Widen(BwAnd(b7,63))));
          Goto: Label 5
        }
      } else {
        if (TestBit(b6,6)) {
          if (Equal(255,Widen(BwAnd(b6,63)))) {
            Let b9 = M[Offset(Offset(Address(loop_var4),1),2)];
            SetByte 007278 HiByte(Widen(BwAnd(b9,63)));
            SetByte 007279 LoByte(Widen(BwAnd(b9,63)));
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),2));
            Goto: Label 5
          }
        } else {
          if (Equal(255,Widen(BwAnd(b6,63)))) {
            Let b10 = M[Offset(Offset(Address(loop_var4),1),1)];
            SetByte 007278 HiByte(Widen(BwAnd(b10,63)));
            SetByte 007279 LoByte(Widen(BwAnd(b10,63)));
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),1));
            Goto: Label 5
          }
        }
      }
    }
  }
  TraceOperation 087939 (Or (Var (Global 125)) (Con 117) (Global 183));
  Let b11 = M[007456];
  Let b12 = M[007457];
  SetByte 007572 HiByte(Or(MakeHiLo(b11,b12),117));
  SetByte 007573 LoByte(Or(MakeHiLo(b11,b12),117));
  TraceOperation 087943 (Jump 087953);
  Jump: 087953
--------------------------------------------------
LocRoutine 087960:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 087961
LocOp 087961:
  TraceOperation 087961 (Print "** Library error ");
  GamePrint "** Library error ";
  TraceOperation 087978 (Print_num (Var (Local 1)));
  GamePrint ShowNumber(GetLocal(1));
  TraceOperation 087981 (Print " (");
  GamePrint " (";
  TraceOperation 087984 (Print_num (Var (Local 2)));
  GamePrint ShowNumber(GetLocal(2));
  TraceOperation 087987 (Print ",");
  GamePrint ",";
  TraceOperation 087990 (Print_num (Var (Local 3)));
  GamePrint ShowNumber(GetLocal(3));
  TraceOperation 087993 (Print ") **\n");
  GamePrint ") **\n";
  TraceOperation 088004 (CallN (Floc 086692) [Con 37]);
  PushFrame;
  PushReturnAddress 088004;
  SetLocal 1 37;
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 086693
LocReturn 088004:
  TraceOperation 088009 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 088012:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 088013
LocOp 088013:
  TraceOperation 088013 (CallN (Floc 086692) [Con 47,Con 0,Con 0,Con 0,Var (Local 2)]);
  PushFrame;
  PushReturnAddress 088013;
  SetLocal 1 47;
  SetLocal 2 0;
  SetLocal 3 0;
  SetLocal 4 0;
  SetLocal 5 GetLocal(2);
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  Jump: 086693
LocReturn 088013:
  TraceOperation 088023 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 088024:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 088025
LocOp 088025:
  TraceOperation 088025 (Call (Floc 026172) [Var (Local 1),Var (Local 2)] Sp);
  PushFrame;
  PushReturnAddress 088025;
  SetLocal 1 GetLocal(1);
  SetLocal 2 GetLocal(2);
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 088025:
  PushStack call_result;
  TraceOperation 088032 (Jz (Var Sp) (Branch T (Dloc 088037)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 088037
  } else {
    TraceOperation 088035 (Ret (Var (Local 1)));
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult GetLocal(1);
    JumpIndirect: (return) return_address_2
  }
LocOp 088037:
  TraceOperation 088037 (Jz (Var (Local 1)) (Branch F (Dloc 088048)));
  if (IsZero(GetLocal(1))) {
    TraceOperation 088040 (CallN (Floc 086692) [Con 33]);
    PushFrame;
    PushReturnAddress 088040;
    SetLocal 1 33;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 086693
  } else {
    Jump: 088048
  }
LocReturn 088040:
  TraceOperation 088045 (Jump 088053);
  Jump: 088053
LocOp 088048:
  TraceOperation 088048 (CallN (Floc 086692) [Con 32]);
  PushFrame;
  PushReturnAddress 088048;
  SetLocal 1 32;
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 086693
LocReturn 088048:
  Jump: 088053
LocOp 088053:
  TraceOperation 088053 (Ret (Var (Local 1)));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult GetLocal(1);
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 088056:
  MakeRoutineFrame 9;
  if (LessThanByte(num_actuals,9)) {
    SetLocal 9 0;
    if (LessThanByte(num_actuals,8)) {
      SetLocal 8 0;
      if (LessThanByte(num_actuals,7)) {
        SetLocal 7 0;
        if (LessThanByte(num_actuals,6)) {
          SetLocal 6 0;
          if (LessThanByte(num_actuals,5)) {
            SetLocal 5 0;
            if (LessThanByte(num_actuals,4)) {
              SetLocal 4 0;
              if (LessThanByte(num_actuals,3)) {
                SetLocal 3 0;
                if (LessThanByte(num_actuals,2)) {
                  SetLocal 2 0;
                  if (LessThanByte(num_actuals,1)) {
                    SetLocal 1 0;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  Jump: 088057
LocOp 088057:
  TraceOperation 088057 (Call (Floc 112940) [Var (Local 1)] Sp);
  PushFrame;
  PushReturnAddress 088057;
  SetLocal 1 GetLocal(1);
  MakeRoutineFrame 1;
  Jump: 112941
LocReturn 088057:
  PushStack call_result;
  TraceOperation 088063 (Je [Var Sp,Con 2] (Branch F Dfalse));
  PopStack popped1;
  if (Equal(popped1,2)) {
    TraceOperation 088067 (Jl (Var (Local 3)) (Con 0) (Branch F (Dloc 088075)));
    if (LessThan(GetLocal(3),0)) {
      TraceOperation 088071 (Not (Var (Local 3)) (Local 3));
      Note "(088071,Not (Var (Local 3)) (Local 3),\":\",GetLocal(3),\"-->\",Local 3)";
      Jump: 088075
    } else {
      Jump: 088075
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  }
LocOp 088075:
  TraceOperation 088075 (Jz (Var (Local 2)) (Branch T (Dloc 088112)));
  if (IsZero(GetLocal(2))) {
    Jump: 088112
  } else {
    TraceOperation 088078 (Jl (Var (Local 3)) (Con 10000) (Branch F (Dloc 088093)));
    if (LessThan(GetLocal(3),10000)) {
      TraceOperation 088084 (Loadw (Con 10867) (Var (Local 3)) (Local 5));
      Let b1 = M[Offset(010867,Mul(2,GetLocal(3)))];
      Let b2 = M[Offset(Offset(010867,Mul(2,GetLocal(3))),1)];
      SetLocal 5 MakeHiLo(b1,b2);
      TraceOperation 088090 (Jump 088109);
      Jump: 088109
    } else {
      Jump: 088093
    }
  }
LocOp 088093:
  TraceOperation 088093 (Add (Con 50) (Var (Local 3)) Sp);
  PushStack Add(50,GetLocal(3));
  TraceOperation 088097 (Sub (Var Sp) (Con 10000) Sp);
  PopStack popped1;
  PushStack Sub(popped1,10000);
  TraceOperation 088103 (Loadw (Con 10867) (Var Sp) (Local 5));
  PopStack popped2;
  Let b3 = M[Offset(010867,Mul(2,popped2))];
  Let b4 = M[Offset(Offset(010867,Mul(2,popped2)),1)];
  SetLocal 5 MakeHiLo(b3,b4);
  Jump: 088109
LocOp 088109:
  TraceOperation 088109 (Jump 088118);
  Jump: 088118
LocOp 088112:
  TraceOperation 088112 (Loadw (Con 11081) (Var (Local 3)) (Local 5));
  Let b1 = M[Offset(011081,Mul(2,GetLocal(3)))];
  Let b2 = M[Offset(Offset(011081,Mul(2,GetLocal(3))),1)];
  SetLocal 5 MakeHiLo(b1,b2);
  Jump: 088118
LocOp 088118:
  TraceOperation 088118 (Jl (Var (Local 5)) (Con 0) (Branch F (Dloc 088132)));
  if (LessThan(GetLocal(5),0)) {
    TraceOperation 088122 (Jz (Var (Local 4)) (Branch T (Dloc 088131)));
    if (IsZero(GetLocal(4))) {
      Jump: 088131
    } else {
      TraceOperation 088125 (CallN (Floc 086692) [Con 9,Var (Local 1)]);
      PushFrame;
      PushReturnAddress 088125;
      SetLocal 1 9;
      SetLocal 2 GetLocal(1);
      MakeRoutineFrame 7;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      SetLocal 3 0;
      Jump: 086693
    }
  } else {
    Jump: 088132
  }
LocReturn 088125:
  Jump: 088131
LocOp 088131:
  TraceOperation 088131 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
LocOp 088132:
  TraceOperation 088132 (Loadw (Con 10593) (Var (Local 5)) (Local 7));
  Let b1 = M[Offset(010593,Mul(2,GetLocal(5)))];
  Let b2 = M[Offset(Offset(010593,Mul(2,GetLocal(5))),1)];
  SetLocal 7 MakeHiLo(b1,b2);
  TraceOperation 088138 (Inc (Con 5));
  SetLocal 5 Add(GetLocal(5),1);
  TraceOperation 088140 (Call (Floc 088272) [Var (Local 1),Var (Local 5)] Sp);
  PushFrame;
  PushReturnAddress 088140;
  SetLocal 1 GetLocal(1);
  SetLocal 2 GetLocal(5);
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 088273
LocReturn 088140:
  PushStack call_result;
  TraceOperation 088147 (Jz (Var Sp) (Branch T (Dloc 088153)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 088153
  } else {
    TraceOperation 088150 (Jump 088247);
    Jump: 088247
  }
LocOp 088153:
  TraceOperation 088153 (Call (Floc 111316) [Var (Local 1),Con 27] Sp);
  PushFrame;
  PushReturnAddress 088153;
  SetLocal 1 GetLocal(1);
  SetLocal 2 27;
  MakeRoutineFrame 2;
  Jump: 111317
LocReturn 088153:
  PushStack call_result;
  TraceOperation 088160 (Jz (Var Sp) (Branch T (Dloc 088219)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 088219
  } else {
    TraceOperation 088163 (Get_prop_addr (Var (Local 1)) (Con 27) (Global 239));
    Let b2 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),12)];
    Let b3 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),12),1)];
    Let b4 = M[Address(MakeHiLo(b2,b3))];
    Let loop_var5 = DeAddress(Offset(Address(MakeHiLo(b2,b3)),Add(Mul(2,Widen(b4)),1)));
    Label 6: {
      Let b7 = M[Address(loop_var5)];
      if (IsZeroByte(b7)) {
        SetByte 007684 0;
        SetByte 007685 0;
      } else {
        if (TestBit(b7,7)) {
          Let b8 = M[Offset(Address(loop_var5),1)];
          if (Equal(27,Widen(BwAnd(b7,63)))) {
            SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var5),2)));
            SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var5),2)));
          } else {
            Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),2),Widen(BwAnd(b8,63))));
            Goto: Label 6
          }
        } else {
          if (TestBit(b7,6)) {
            if (Equal(27,Widen(BwAnd(b7,63)))) {
              SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var5),1)));
              SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var5),1)));
            } else {
              Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),1),2));
              Goto: Label 6
            }
          } else {
            if (Equal(27,Widen(BwAnd(b7,63)))) {
              SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var5),1)));
              SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var5),1)));
            } else {
              Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),1),1));
              Goto: Label 6
            }
          }
        }
      }
    }
    TraceOperation 088167 (Jz (Var (Global 239)) (Branch T (Dloc 088173)));
    Let b9 = M[007684];
    Let b10 = M[007685];
    if (IsZero(MakeHiLo(b9,b10))) {
      Jump: 088173
    } else {
      TraceOperation 088170 (Get_prop_len (Var (Global 239)) (Global 239));
      Let b11 = M[007684];
      Let b12 = M[007685];
      if (IsZero(MakeHiLo(b11,b12))) {
        SetByte 007684 0;
        SetByte 007685 0;
      } else {
        Let b13 = M[Offset(Address(MakeHiLo(b11,b12)),-1)];
        if (TestBit(b13,7)) {
          Let b14 = M[Offset(Address(MakeHiLo(b11,b12)),-2)];
          if (TestBit(b14,7)) {
            Let b15 = M[Offset(Offset(Address(MakeHiLo(b11,b12)),-2),1)];
            SetByte 007684 HiByte(Widen(BwAnd(b15,63)));
            SetByte 007685 LoByte(Widen(BwAnd(b15,63)));
          } else {
            if (TestBit(b14,6)) {
              SetByte 007684 0;
              SetByte 007685 2;
            } else {
              SetByte 007684 0;
              SetByte 007685 1;
            }
          }
        } else {
          Let b16 = M[Offset(Address(MakeHiLo(b11,b12)),-1)];
          if (TestBit(b16,7)) {
            Let b17 = M[Offset(Offset(Address(MakeHiLo(b11,b12)),-1),1)];
            SetByte 007684 HiByte(Widen(BwAnd(b17,63)));
            SetByte 007685 LoByte(Widen(BwAnd(b17,63)));
          } else {
            if (TestBit(b16,6)) {
              SetByte 007684 0;
              SetByte 007685 2;
            } else {
              SetByte 007684 0;
              SetByte 007685 1;
            }
          }
        }
      }
      Jump: 088173
    }
  }
LocOp 088173:
  TraceOperation 088173 (Push (Var (Global 239)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 088176 (Div (Var Sp) (Con 2) (Local 9));
  PopStack popped3;
  SetLocal 9 Div(popped3,2);
  TraceOperation 088180 (Get_prop_addr (Var (Local 1)) (Con 27) (Global 239));
  Let b4 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),12)];
  Let b5 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),12),1)];
  Let b6 = M[Address(MakeHiLo(b4,b5))];
  Let loop_var7 = DeAddress(Offset(Address(MakeHiLo(b4,b5)),Add(Mul(2,Widen(b6)),1)));
  Label 8: {
    Let b9 = M[Address(loop_var7)];
    if (IsZeroByte(b9)) {
      SetByte 007684 0;
      SetByte 007685 0;
    } else {
      if (TestBit(b9,7)) {
        Let b10 = M[Offset(Address(loop_var7),1)];
        if (Equal(27,Widen(BwAnd(b9,63)))) {
          SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var7),2)));
          SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var7),2)));
        } else {
          Assign loop_var7 = DeAddress(Offset(Offset(Address(loop_var7),2),Widen(BwAnd(b10,63))));
          Goto: Label 8
        }
      } else {
        if (TestBit(b9,6)) {
          if (Equal(27,Widen(BwAnd(b9,63)))) {
            SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var7),1)));
            SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var7),1)));
          } else {
            Assign loop_var7 = DeAddress(Offset(Offset(Address(loop_var7),1),2));
            Goto: Label 8
          }
        } else {
          if (Equal(27,Widen(BwAnd(b9,63)))) {
            SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var7),1)));
            SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var7),1)));
          } else {
            Assign loop_var7 = DeAddress(Offset(Offset(Address(loop_var7),1),1));
            Goto: Label 8
          }
        }
      }
    }
  }
  TraceOperation 088184 (Store (Con 8) (Var (Global 239)));
  Let b11 = M[007684];
  Let b12 = M[007685];
  SetLocal 8 MakeHiLo(b11,b12);
  TraceOperation 088187 (Store (Con 6) (Con 0));
  SetLocal 6 0;
  Jump: 088190
LocOp 088190:
  TraceOperation 088190 (Jl (Var (Local 6)) (Var (Local 9)) (Branch F (Dloc 088216)));
  if (LessThan(GetLocal(6),GetLocal(9))) {
    TraceOperation 088194 (Loadw (Var (Local 8)) (Var (Local 6)) Sp);
    Let b1 = M[Offset(Address(GetLocal(8)),Mul(2,GetLocal(6)))];
    Let b2 = M[Offset(Offset(Address(GetLocal(8)),Mul(2,GetLocal(6))),1)];
    PushStack MakeHiLo(b1,b2);
    TraceOperation 088198 (Call (Floc 088272) [Var Sp,Var (Local 5)] Sp);
    PopStack popped3;
    PushFrame;
    PushReturnAddress 088198;
    SetLocal 1 popped3;
    SetLocal 2 GetLocal(5);
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 088273
  } else {
    Jump: 088216
  }
LocReturn 088198:
  PushStack call_result;
  TraceOperation 088205 (Jz (Var Sp) (Branch T (Dloc 088211)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 088211
  } else {
    TraceOperation 088208 (Jump 088247);
    Jump: 088247
  }
LocOp 088211:
  TraceOperation 088211 (Inc (Con 6));
  SetLocal 6 Add(GetLocal(6),1);
  TraceOperation 088213 (Jump 088190);
  Jump: 088190
LocOp 088216:
  TraceOperation 088216 (Jump 088236);
  Jump: 088236
LocOp 088219:
  TraceOperation 088219 (Je [Var (Local 1),Con 41] (Branch F (Dloc 088236)));
  if (Equal(GetLocal(1),41)) {
    TraceOperation 088223 (Call (Floc 088272) [Con 20,Var (Local 5)] Sp);
    PushFrame;
    PushReturnAddress 088223;
    SetLocal 1 20;
    SetLocal 2 GetLocal(5);
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 088273
  } else {
    Jump: 088236
  }
LocReturn 088223:
  PushStack call_result;
  TraceOperation 088230 (Jz (Var Sp) (Branch T (Dloc 088236)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 088236
  } else {
    TraceOperation 088233 (Jump 088247);
    Jump: 088247
  }
LocOp 088236:
  TraceOperation 088236 (Jz (Var (Local 4)) (Branch T (Dloc 088246)));
  if (IsZero(GetLocal(4))) {
    Jump: 088246
  } else {
    TraceOperation 088239 (CallN (Floc 086692) [Con 10,Var (Local 1),Var (Local 7)]);
    PushFrame;
    PushReturnAddress 088239;
    SetLocal 1 10;
    SetLocal 2 GetLocal(1);
    SetLocal 3 GetLocal(7);
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    Jump: 086693
  }
LocReturn 088239:
  Jump: 088246
LocOp 088246:
  TraceOperation 088246 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
LocOp 088247:
  TraceOperation 088247 (Jz (Var (Local 2)) (Branch F Dtrue));
  if (IsZero(GetLocal(2))) {
    TraceOperation 088250 (Call (Floc 111316) [Var (Local 1),Var (Local 3)] Sp);
    PushFrame;
    PushReturnAddress 088250;
    SetLocal 1 GetLocal(1);
    SetLocal 2 GetLocal(3);
    MakeRoutineFrame 2;
    Jump: 111317
  } else {
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  }
LocReturn 088250:
  PushStack call_result;
  TraceOperation 088257 (Jz (Var Sp) (Branch F Dtrue));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 088260 (Jz (Var (Local 4)) (Branch T (Dloc 088270)));
    if (IsZero(GetLocal(4))) {
      Jump: 088270
    } else {
      TraceOperation 088263 (CallN (Floc 086692) [Con 11,Var (Local 1),Var (Local 7)]);
      PushFrame;
      PushReturnAddress 088263;
      SetLocal 1 11;
      SetLocal 2 GetLocal(1);
      SetLocal 3 GetLocal(7);
      MakeRoutineFrame 7;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      Jump: 086693
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  }
LocReturn 088263:
  Jump: 088270
LocOp 088270:
  TraceOperation 088270 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 088272:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 088273
LocOp 088273:
  TraceOperation 088273 (Store (Con 3) (Var (Local 2)));
  SetLocal 3 GetLocal(2);
  Jump: 088276
LocOp 088276:
  TraceOperation 088276 (Loadw (Con 10593) (Var (Local 3)) Sp);
  Let b1 = M[Offset(010593,Mul(2,GetLocal(3)))];
  Let b2 = M[Offset(Offset(010593,Mul(2,GetLocal(3))),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 088282 (Jl (Var Sp) (Con 0) (Branch T (Dloc 088301)));
  PopStack popped3;
  if (LessThan(popped3,0)) {
    Jump: 088301
  } else {
    TraceOperation 088286 (Loadw (Con 10593) (Var (Local 3)) Sp);
    Let b4 = M[Offset(010593,Mul(2,GetLocal(3)))];
    Let b5 = M[Offset(Offset(010593,Mul(2,GetLocal(3))),1)];
    PushStack MakeHiLo(b4,b5);
    TraceOperation 088292 (Je [Var (Local 1),Var Sp] (Branch T Dtrue));
    PopStack popped6;
    if (Equal(GetLocal(1),popped6)) {
      PopFrame;
      PopReturnAddress return_address_7;
      SetResult 1;
      JumpIndirect: (return) return_address_7
    } else {
      TraceOperation 088296 (Inc (Con 3));
      SetLocal 3 Add(GetLocal(3),1);
      TraceOperation 088298 (Jump 088276);
      Jump: 088276
    }
  }
LocOp 088301:
  TraceOperation 088301 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 088304:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 088305
LocOp 088305:
  TraceOperation 088305 (Jz (Var (Local 1)) (Branch T Dfalse));
  if (IsZero(GetLocal(1))) {
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 0;
    JumpIndirect: (return) return_address_1
  } else {
    TraceOperation 088308 (Jl (Var (Local 2)) (Con 0) (Branch F (Dloc 088316)));
    if (LessThan(GetLocal(2),0)) {
      TraceOperation 088312 (Not (Var (Local 2)) (Local 2));
      Note "(088312,Not (Var (Local 2)) (Local 2),\":\",GetLocal(2),\"-->\",Local 2)";
      Jump: 088316
    } else {
      Jump: 088316
    }
  }
LocOp 088316:
  TraceOperation 088316 (Call (Floc 088056) [Var (Local 1),Con 1,Var (Local 2),Con 0] Sp);
  PushFrame;
  PushReturnAddress 088316;
  SetLocal 1 GetLocal(1);
  SetLocal 2 1;
  SetLocal 3 GetLocal(2);
  SetLocal 4 0;
  MakeRoutineFrame 9;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  Jump: 088057
LocReturn 088316:
  PushStack call_result;
  TraceOperation 088326 (Jz (Var Sp) (Branch T (Dloc 088360)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 088360
  } else {
    TraceOperation 088329 (Jl (Var (Local 2)) (Con 10000) (Branch F (Dloc 088340)));
    if (LessThan(GetLocal(2),10000)) {
      TraceOperation 088335 (Test_attr (Var (Local 1)) (Var (Local 2)) (Branch T Dtrue));
      Let b2 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),Div8(GetLocal(2)))];
      if (TestBit(b2,SevenMinus(LoByte(Mod(GetLocal(2),8))))) {
        PopFrame;
        PopReturnAddress return_address_3;
        SetResult 1;
        JumpIndirect: (return) return_address_3
      } else {
        TraceOperation 088339 Rfalse;
        PopFrame;
        PopReturnAddress return_address_4;
        SetResult 0;
        JumpIndirect: (return) return_address_4
      }
    } else {
      Jump: 088340
    }
  }
LocOp 088340:
  TraceOperation 088340 (Call (Floc 111316) [Var (Local 1),Var (Local 2)] Sp);
  PushFrame;
  PushReturnAddress 088340;
  SetLocal 1 GetLocal(1);
  SetLocal 2 GetLocal(2);
  MakeRoutineFrame 2;
  Jump: 111317
LocReturn 088340:
  PushStack call_result;
  TraceOperation 088347 (Jz (Var Sp) (Branch T (Dloc 088360)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 088360
  } else {
    TraceOperation 088350 (Call (Floc 110116) [Var (Local 1),Var (Local 2)] Sp);
    PushFrame;
    PushReturnAddress 088350;
    SetLocal 1 GetLocal(1);
    SetLocal 2 GetLocal(2);
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 110117
  }
LocReturn 088350:
  PushStack call_result;
  TraceOperation 088357 (Jz (Var Sp) (Branch F Dtrue));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 088360
  } else {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  }
LocOp 088360:
  TraceOperation 088360 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 088364:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 088365
LocOp 088365:
  TraceOperation 088365 (Jl (Var (Local 2)) (Con 0) (Branch F (Dloc 088377)));
  if (LessThan(GetLocal(2),0)) {
    TraceOperation 088369 (Not (Var (Local 2)) (Local 2));
    Note "(088369,Not (Var (Local 2)) (Local 2),\":\",GetLocal(2),\"-->\",Local 2)";
    TraceOperation 088373 (Not (Var (Local 3)) (Local 3));
    Note "(088373,Not (Var (Local 3)) (Local 3),\":\",GetLocal(3),\"-->\",Local 3)";
    Jump: 088377
  } else {
    Jump: 088377
  }
LocOp 088377:
  TraceOperation 088377 (Call (Floc 088056) [Var (Local 1),Con 1,Var (Local 2),Con 1] Sp);
  PushFrame;
  PushReturnAddress 088377;
  SetLocal 1 GetLocal(1);
  SetLocal 2 1;
  SetLocal 3 GetLocal(2);
  SetLocal 4 1;
  MakeRoutineFrame 9;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  Jump: 088057
LocReturn 088377:
  PushStack call_result;
  TraceOperation 088387 (Jz (Var Sp) (Branch T (Dloc 088434)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 088434
  } else {
    TraceOperation 088390 (Jz (Var (Local 3)) (Branch T (Dloc 088415)));
    if (IsZero(GetLocal(3))) {
      Jump: 088415
    } else {
      TraceOperation 088393 (Jl (Var (Local 2)) (Con 10000) (Branch F (Dloc 088405)));
      if (LessThan(GetLocal(2),10000)) {
        TraceOperation 088399 (Clear_attr (Var (Local 1)) (Var (Local 2)));
        Let b2 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),Div8(GetLocal(2)))];
        SetByte Offset(Offset(000378,Mul(GetLocal(1),14)),Div8(GetLocal(2))) ClearBit(b2,SevenMinus(LoByte(Mod(GetLocal(2),8))));
        TraceOperation 088402 (Jump 088412);
        Jump: 088412
      } else {
        Jump: 088405
      }
    }
  }
LocOp 088405:
  TraceOperation 088405 (CallN (Floc 110088) [Var (Local 1),Var (Local 2),Con 0]);
  PushFrame;
  PushReturnAddress 088405;
  SetLocal 1 GetLocal(1);
  SetLocal 2 GetLocal(2);
  SetLocal 3 0;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 110089
LocReturn 088405:
  Jump: 088412
LocOp 088412:
  TraceOperation 088412 (Jump 088434);
  Jump: 088434
LocOp 088415:
  TraceOperation 088415 (Jl (Var (Local 2)) (Con 10000) (Branch F (Dloc 088427)));
  if (LessThan(GetLocal(2),10000)) {
    TraceOperation 088421 (Set_attr (Var (Local 1)) (Var (Local 2)));
    Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),Div8(GetLocal(2)))];
    SetByte Offset(Offset(000378,Mul(GetLocal(1),14)),Div8(GetLocal(2))) SetBit(b1,SevenMinus(LoByte(Mod(GetLocal(2),8))));
    TraceOperation 088424 (Jump 088434);
    Jump: 088434
  } else {
    Jump: 088427
  }
LocOp 088427:
  TraceOperation 088427 (CallN (Floc 110088) [Var (Local 1),Var (Local 2),Con 1]);
  PushFrame;
  PushReturnAddress 088427;
  SetLocal 1 GetLocal(1);
  SetLocal 2 GetLocal(2);
  SetLocal 3 1;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 110089
LocReturn 088427:
  Jump: 088434
LocOp 088434:
  TraceOperation 088434 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 088436:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 088437
LocOp 088437:
  TraceOperation 088437 (Call (Floc 111316) [Con 28,Var (Local 2)] Sp);
  PushFrame;
  PushReturnAddress 088437;
  SetLocal 1 28;
  SetLocal 2 GetLocal(2);
  MakeRoutineFrame 2;
  Jump: 111317
LocReturn 088437:
  PushStack call_result;
  TraceOperation 088444 (Jz (Var Sp) (Branch T (Dloc 088490)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 088490
  } else {
    TraceOperation 088447 (Jg (Var (Local 1)) (Con 0) (Branch F (Dloc 088466)));
    if (GreaterThan(GetLocal(1),0)) {
      TraceOperation 088451 (Call (Floc 110116) [Con 28,Var (Local 2)] Sp);
      PushFrame;
      PushReturnAddress 088451;
      SetLocal 1 28;
      SetLocal 2 GetLocal(2);
      MakeRoutineFrame 3;
      SetLocal 3 0;
      Jump: 110117
    } else {
      Jump: 088466
    }
  }
LocReturn 088451:
  PushStack call_result;
  TraceOperation 088458 (Loadw (Var Sp) (Con 0) Sp);
  PopStack popped1;
  Let b2 = M[Offset(Address(popped1),0)];
  Let b3 = M[Offset(Offset(Address(popped1),0),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 088462 (Jg (Var (Local 1)) (Var Sp) (Branch F (Dloc 088472)));
  PopStack popped4;
  if (GreaterThan(GetLocal(1),popped4)) {
    Jump: 088466
  } else {
    Jump: 088472
  }
LocOp 088466:
  TraceOperation 088466 (CallN (Floc 086692) [Con 18]);
  PushFrame;
  PushReturnAddress 088466;
  SetLocal 1 18;
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 086693
LocReturn 088466:
  TraceOperation 088471 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
LocOp 088472:
  TraceOperation 088472 (Add (Var (Local 1)) (Con 2) Sp);
  PushStack Add(GetLocal(1),2);
  TraceOperation 088478 (Call (Floc 110116) [Con 28,Var (Local 2)] Sp);
  PushFrame;
  PushReturnAddress 088478;
  SetLocal 1 28;
  SetLocal 2 GetLocal(2);
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 110117
LocReturn 088478:
  PushStack call_result;
  TraceOperation 088485 (Loadw (Var Sp) (Var Sp) Sp);
  PopStack popped1;
  PopStack popped2;
  Let b3 = M[Offset(Address(popped1),Mul(2,popped2))];
  Let b4 = M[Offset(Offset(Address(popped1),Mul(2,popped2)),1)];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 088489 Ret_popped;
  PopStack popped5;
  PopFrame;
  PopReturnAddress return_address_6;
  SetResult popped5;
  JumpIndirect: (return) return_address_6
LocOp 088490:
  TraceOperation 088490 (Jz (Var (Local 1)) (Branch F (Dloc 088501)));
  if (IsZero(GetLocal(1))) {
    TraceOperation 088493 (CallN (Floc 086692) [Con 31,Var (Local 1),Var (Local 2)]);
    PushFrame;
    PushReturnAddress 088493;
    SetLocal 1 31;
    SetLocal 2 GetLocal(1);
    SetLocal 3 GetLocal(2);
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    Jump: 086693
  } else {
    Jump: 088501
  }
LocReturn 088493:
  TraceOperation 088500 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
LocOp 088501:
  TraceOperation 088501 (Je [Var (Local 2),Con 24] (Branch F (Dloc 088523)));
  if (Equal(GetLocal(2),24)) {
    TraceOperation 088505 (Call (Floc 111316) [Var (Local 1),Var (Local 2)] Sp);
    PushFrame;
    PushReturnAddress 088505;
    SetLocal 1 GetLocal(1);
    SetLocal 2 GetLocal(2);
    MakeRoutineFrame 2;
    Jump: 111317
  } else {
    Jump: 088523
  }
LocReturn 088505:
  PushStack call_result;
  TraceOperation 088512 (Jz (Var Sp) (Branch T (Dloc 088523)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 088523
  } else {
    TraceOperation 088515 (Call (Floc 110196) [Var (Local 1),Var (Local 2)] Sp);
    PushFrame;
    PushReturnAddress 088515;
    SetLocal 1 GetLocal(1);
    SetLocal 2 GetLocal(2);
    MakeRoutineFrame 15;
    SetLocal 15 0;
    SetLocal 14 0;
    SetLocal 13 0;
    SetLocal 12 0;
    SetLocal 11 0;
    SetLocal 10 0;
    SetLocal 9 0;
    SetLocal 8 0;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 110197
  }
LocReturn 088515:
  PushStack call_result;
  TraceOperation 088522 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 088523:
  TraceOperation 088523 (Call (Floc 088056) [Var (Local 1),Con 0,Var (Local 2),Con 1] Sp);
  PushFrame;
  PushReturnAddress 088523;
  SetLocal 1 GetLocal(1);
  SetLocal 2 0;
  SetLocal 3 GetLocal(2);
  SetLocal 4 1;
  MakeRoutineFrame 9;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  Jump: 088057
LocReturn 088523:
  PushStack call_result;
  TraceOperation 088533 (Jz (Var Sp) (Branch T (Dloc 088544)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 088544
  } else {
    TraceOperation 088536 (Call (Floc 110116) [Var (Local 1),Var (Local 2)] Sp);
    PushFrame;
    PushReturnAddress 088536;
    SetLocal 1 GetLocal(1);
    SetLocal 2 GetLocal(2);
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 110117
  }
LocReturn 088536:
  PushStack call_result;
  TraceOperation 088543 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 088544:
  TraceOperation 088544 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 088548:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 088549
LocOp 088549:
  TraceOperation 088549 (Call (Floc 111316) [Con 28,Var (Local 2)] Sp);
  PushFrame;
  PushReturnAddress 088549;
  SetLocal 1 28;
  SetLocal 2 GetLocal(2);
  MakeRoutineFrame 2;
  Jump: 111317
LocReturn 088549:
  PushStack call_result;
  TraceOperation 088556 (Jz (Var Sp) (Branch T (Dloc 088604)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 088604
  } else {
    TraceOperation 088559 (Jg (Var (Local 1)) (Con 0) (Branch F (Dloc 088578)));
    if (GreaterThan(GetLocal(1),0)) {
      TraceOperation 088563 (Call (Floc 110116) [Con 28,Var (Local 2)] Sp);
      PushFrame;
      PushReturnAddress 088563;
      SetLocal 1 28;
      SetLocal 2 GetLocal(2);
      MakeRoutineFrame 3;
      SetLocal 3 0;
      Jump: 110117
    } else {
      Jump: 088578
    }
  }
LocReturn 088563:
  PushStack call_result;
  TraceOperation 088570 (Loadw (Var Sp) (Con 0) Sp);
  PopStack popped1;
  Let b2 = M[Offset(Address(popped1),0)];
  Let b3 = M[Offset(Offset(Address(popped1),0),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 088574 (Jg (Var (Local 1)) (Var Sp) (Branch F (Dloc 088585)));
  PopStack popped4;
  if (GreaterThan(GetLocal(1),popped4)) {
    Jump: 088578
  } else {
    Jump: 088585
  }
LocOp 088578:
  TraceOperation 088578 (Call (Floc 086692) [Con 18] Sp);
  PushFrame;
  PushReturnAddress 088578;
  SetLocal 1 18;
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 086693
LocReturn 088578:
  PushStack call_result;
  TraceOperation 088584 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 088585:
  TraceOperation 088585 (Add (Var (Local 1)) (Con 2) Sp);
  PushStack Add(GetLocal(1),2);
  TraceOperation 088591 (Call (Floc 110116) [Con 28,Var (Local 2)] Sp);
  PushFrame;
  PushReturnAddress 088591;
  SetLocal 1 28;
  SetLocal 2 GetLocal(2);
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 110117
LocReturn 088591:
  PushStack call_result;
  TraceOperation 088598 (Storew (Var Sp) (Var Sp) (Var (Local 3)));
  PopStack popped1;
  PopStack popped2;
  SetByte Offset(Address(popped1),Mul(2,popped2)) HiByte(GetLocal(3));
  SetByte Offset(Offset(Address(popped1),Mul(2,popped2)),1) LoByte(GetLocal(3));
  TraceOperation 088603 Rtrue;
  PopFrame;
  PopReturnAddress return_address_3;
  SetResult 1;
  JumpIndirect: (return) return_address_3
LocOp 088604:
  TraceOperation 088604 (Jz (Var (Local 1)) (Branch F (Dloc 088615)));
  if (IsZero(GetLocal(1))) {
    TraceOperation 088607 (CallN (Floc 086692) [Con 31,Var (Local 1),Var (Local 2)]);
    PushFrame;
    PushReturnAddress 088607;
    SetLocal 1 31;
    SetLocal 2 GetLocal(1);
    SetLocal 3 GetLocal(2);
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    Jump: 086693
  } else {
    Jump: 088615
  }
LocReturn 088607:
  TraceOperation 088614 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
LocOp 088615:
  TraceOperation 088615 (Call (Floc 088056) [Var (Local 1),Con 0,Var (Local 2),Con 1] Sp);
  PushFrame;
  PushReturnAddress 088615;
  SetLocal 1 GetLocal(1);
  SetLocal 2 0;
  SetLocal 3 GetLocal(2);
  SetLocal 4 1;
  MakeRoutineFrame 9;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  Jump: 088057
LocReturn 088615:
  PushStack call_result;
  TraceOperation 088625 (Jz (Var Sp) (Branch T (Dloc 088635)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 088635
  } else {
    TraceOperation 088628 (CallN (Floc 110088) [Var (Local 1),Var (Local 2),Var (Local 3)]);
    PushFrame;
    PushReturnAddress 088628;
    SetLocal 1 GetLocal(1);
    SetLocal 2 GetLocal(2);
    SetLocal 3 GetLocal(3);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 110089
  }
LocReturn 088628:
  Jump: 088635
LocOp 088635:
  TraceOperation 088635 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 088636:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 088637
LocOp 088637:
  TraceOperation 088637 (Jl (Var (Global 194)) (Con 501) (Branch T (Dloc 088650)));
  Let b1 = M[007594];
  Let b2 = M[007595];
  if (LessThan(MakeHiLo(b1,b2),501)) {
    Jump: 088650
  } else {
    TraceOperation 088643 (Call (Floc 086692) [Con 6] Sp);
    PushFrame;
    PushReturnAddress 088643;
    SetLocal 1 6;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 086693
  }
LocReturn 088643:
  PushStack call_result;
  TraceOperation 088649 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 088650:
  TraceOperation 088650 (Push (Var (Global 194)));
  Let b1 = M[007594];
  Let b2 = M[007595];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 088653 (Inc (Con 210));
  Let b3 = M[007594];
  Let b4 = M[007595];
  SetByte 007594 HiByte(Add(MakeHiLo(b3,b4),1));
  SetByte 007595 LoByte(Add(MakeHiLo(b3,b4),1));
  TraceOperation 088655 (Storew (Con 18050) (Var Sp) (Var (Local 1)));
  PopStack popped5;
  SetByte Offset(018050,Mul(2,popped5)) HiByte(GetLocal(1));
  SetByte Offset(Offset(018050,Mul(2,popped5)),1) LoByte(GetLocal(1));
  TraceOperation 088661 (Push (Var (Global 194)));
  Let b6 = M[007594];
  Let b7 = M[007595];
  PushStack MakeHiLo(b6,b7);
  TraceOperation 088664 (Inc (Con 210));
  Let b8 = M[007594];
  Let b9 = M[007595];
  SetByte 007594 HiByte(Add(MakeHiLo(b8,b9),1));
  SetByte 007595 LoByte(Add(MakeHiLo(b8,b9),1));
  TraceOperation 088666 (Storew (Con 18050) (Var Sp) (Var (Local 2)));
  PopStack popped10;
  SetByte Offset(018050,Mul(2,popped10)) HiByte(GetLocal(2));
  SetByte Offset(Offset(018050,Mul(2,popped10)),1) LoByte(GetLocal(2));
  TraceOperation 088672 (Push (Var (Global 194)));
  Let b11 = M[007594];
  Let b12 = M[007595];
  PushStack MakeHiLo(b11,b12);
  TraceOperation 088675 (Inc (Con 210));
  Let b13 = M[007594];
  Let b14 = M[007595];
  SetByte 007594 HiByte(Add(MakeHiLo(b13,b14),1));
  SetByte 007595 LoByte(Add(MakeHiLo(b13,b14),1));
  TraceOperation 088677 (Storew (Con 18050) (Var Sp) (Var (Local 3)));
  PopStack popped15;
  SetByte Offset(018050,Mul(2,popped15)) HiByte(GetLocal(3));
  SetByte Offset(Offset(018050,Mul(2,popped15)),1) LoByte(GetLocal(3));
  TraceOperation 088683 Rtrue;
  PopFrame;
  PopReturnAddress return_address_16;
  SetResult 1;
  JumpIndirect: (return) return_address_16
--------------------------------------------------
LocRoutine 088684:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 088685
LocOp 088685:
  TraceOperation 088685 (Push (Var (Global 235)));
  Let b1 = M[007676];
  Let b2 = M[007677];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 088688 (Loadw (Con 10581) (Con 0) Sp);
  Let b3 = M[010581];
  Let b4 = M[010582];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 088694 (Je [Var Sp,Con 16339] (Branch F (Dloc 088712)));
  PopStack popped5;
  if (Equal(popped5,16339)) {
    TraceOperation 088700 (Loadw (Con 10581) (Con 1) Sp);
    Let b6 = M[010583];
    Let b7 = M[010584];
    PushStack MakeHiLo(b6,b7);
    TraceOperation 088706 (Je [Var Sp,Con 12345] (Branch T (Dloc 088716)));
    PopStack popped8;
    if (Equal(popped8,12345)) {
      Jump: 088716
    } else {
      Jump: 088712
    }
  } else {
    Jump: 088712
  }
LocOp 088712:
  TraceOperation 088712 (Print_paddr (Con 30168));
  Note "<static Gettext address>";
  GamePrint "\n\n*** Fatal programming error: I7 arrays corrupted ***\n\n";
  TraceOperation 088715 Quit;
  Quit
LocOp 088716:
  TraceOperation 088716 (Jz (Var (Local 2)) (Branch T (Dloc 088722)));
  if (IsZero(GetLocal(2))) {
    Jump: 088722
  } else {
    TraceOperation 088719 (Store (Con 251) (Var (Local 2)));
    SetByte 007676 HiByte(GetLocal(2));
    SetByte 007677 LoByte(GetLocal(2));
    Jump: 088722
  }
LocOp 088722:
  TraceOperation 088722 (Jz (Var (Local 1)) (Branch T (Dloc 088728)));
  if (IsZero(GetLocal(1))) {
    Jump: 088728
  } else {
    TraceOperation 088725 (CallN (Floc 088752) []);
    PushFrame;
    PushReturnAddress 088725;
    MakeRoutineFrame 0;
    Jump: 088753
  }
LocReturn 088725:
  Jump: 088728
LocOp 088728:
  TraceOperation 088728 (Call (Floc 088936) [Var (Local 1),Var (Local 2),Var (Local 3)] (Local 4));
  PushFrame;
  PushReturnAddress 088728;
  SetLocal 1 GetLocal(1);
  SetLocal 2 GetLocal(2);
  SetLocal 3 GetLocal(3);
  MakeRoutineFrame 14;
  SetLocal 14 0;
  SetLocal 13 0;
  SetLocal 12 0;
  SetLocal 11 0;
  SetLocal 10 0;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 088937
LocReturn 088728:
  SetLocal 4 call_result;
  TraceOperation 088736 (Jz (Var (Local 1)) (Branch T (Dloc 088742)));
  if (IsZero(GetLocal(1))) {
    Jump: 088742
  } else {
    TraceOperation 088739 (CallN (Floc 088788) []);
    PushFrame;
    PushReturnAddress 088739;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    SetLocal 2 0;
    SetLocal 1 0;
    Jump: 088789
  }
LocReturn 088739:
  Jump: 088742
LocOp 088742:
  TraceOperation 088742 (Pull (Con 251));
  PopStack popped1;
  SetByte 007676 HiByte(popped1);
  SetByte 007677 LoByte(popped1);
  TraceOperation 088745 (Jz (Var (Local 4)) (Branch F Dtrue));
  if (IsZero(GetLocal(4))) {
    TraceOperation 088748 Rfalse;
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  } else {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  }
--------------------------------------------------
LocRoutine 088752:
  MakeRoutineFrame 0;
  Jump: 088753
LocOp 088753:
  TraceOperation 088753 (CallN (Floc 088636) [Con -1,Con -1,Con -1]);
  PushFrame;
  PushReturnAddress 088753;
  SetLocal 1 -1;
  SetLocal 2 -1;
  SetLocal 3 -1;
  MakeRoutineFrame 3;
  Jump: 088637
LocReturn 088753:
  TraceOperation 088763 (Inc (Con 211));
  Let b1 = M[007596];
  Let b2 = M[007597];
  SetByte 007596 HiByte(Add(MakeHiLo(b1,b2),1));
  SetByte 007597 LoByte(Add(MakeHiLo(b1,b2),1));
  TraceOperation 088765 (Je [Var (Global 195),Con 20] (Branch F (Dloc 088780)));
  Let b3 = M[007596];
  Let b4 = M[007597];
  if (Equal(MakeHiLo(b3,b4),20)) {
    TraceOperation 088769 (CallN (Floc 086692) [Con 7]);
    PushFrame;
    PushReturnAddress 088769;
    SetLocal 1 7;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 086693
  } else {
    Jump: 088780
  }
LocReturn 088769:
  TraceOperation 088774 (Store (Con 211) (Con -1));
  SetByte 007596 255;
  SetByte 007597 255;
  TraceOperation 088779 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 088780:
  TraceOperation 088780 (CallN (Floc 088936) [Con 0,Con 0,Con 1]);
  PushFrame;
  PushReturnAddress 088780;
  SetLocal 1 0;
  SetLocal 2 0;
  SetLocal 3 1;
  MakeRoutineFrame 14;
  SetLocal 14 0;
  SetLocal 13 0;
  SetLocal 12 0;
  SetLocal 11 0;
  SetLocal 10 0;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 088937
LocReturn 088780:
  TraceOperation 088787 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 088788:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 088789
LocOp 088789:
  TraceOperation 088789 (Loadw (Con 18050) (Var (Global 194)) Sp);
  Let b1 = M[007594];
  Let b2 = M[007595];
  Let b3 = M[Offset(018050,Mul(2,MakeHiLo(b1,b2)))];
  Let b4 = M[Offset(Offset(018050,Mul(2,MakeHiLo(b1,b2))),1)];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 088795 (Je [Var Sp,Con 8] (Branch F (Dloc 088805)));
  PopStack popped5;
  if (Equal(popped5,8)) {
    TraceOperation 088799 (Store (Con 1) (Con 1));
    SetLocal 1 1;
    TraceOperation 088802 (Jump 088826);
    Jump: 088826
  } else {
    Jump: 088805
  }
LocOp 088805:
  TraceOperation 088805 (Loadw (Con 18050) (Var (Global 194)) Sp);
  Let b1 = M[007594];
  Let b2 = M[007595];
  Let b3 = M[Offset(018050,Mul(2,MakeHiLo(b1,b2)))];
  Let b4 = M[Offset(Offset(018050,Mul(2,MakeHiLo(b1,b2))),1)];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 088811 (Je [Var Sp,Con 9] (Branch F (Dloc 088821)));
  PopStack popped5;
  if (Equal(popped5,9)) {
    TraceOperation 088815 (Store (Con 1) (Con 0));
    SetLocal 1 0;
    TraceOperation 088818 (Jump 088826);
    Jump: 088826
  } else {
    Jump: 088821
  }
LocOp 088821:
  TraceOperation 088821 (Store (Con 1) (Con -1));
  SetLocal 1 -1;
  Jump: 088826
LocOp 088826:
  TraceOperation 088826 (Je [Var (Local 1),Con -1] (Branch T (Dloc 088852)));
  if (Equal(GetLocal(1),-1)) {
    Jump: 088852
  } else {
    TraceOperation 088832 (Add (Var (Global 194)) (Con 1) Sp);
    Let b1 = M[007594];
    Let b2 = M[007595];
    PushStack Add(MakeHiLo(b1,b2),1);
    TraceOperation 088836 (Loadw (Con 18050) (Var Sp) (Local 2));
    PopStack popped3;
    Let b4 = M[Offset(018050,Mul(2,popped3))];
    Let b5 = M[Offset(Offset(018050,Mul(2,popped3)),1)];
    SetLocal 2 MakeHiLo(b4,b5);
    TraceOperation 088842 (Add (Var (Global 194)) (Con 2) Sp);
    Let b6 = M[007594];
    Let b7 = M[007595];
    PushStack Add(MakeHiLo(b6,b7),2);
    TraceOperation 088846 (Loadw (Con 18050) (Var Sp) (Local 3));
    PopStack popped8;
    Let b9 = M[Offset(018050,Mul(2,popped8))];
    Let b10 = M[Offset(Offset(018050,Mul(2,popped8)),1)];
    SetLocal 3 MakeHiLo(b9,b10);
    Jump: 088852
  }
LocOp 088852:
  TraceOperation 088852 (Dec (Con 211));
  Let b1 = M[007596];
  Let b2 = M[007597];
  SetByte 007596 HiByte(Sub(MakeHiLo(b1,b2),1));
  SetByte 007597 LoByte(Sub(MakeHiLo(b1,b2),1));
  Jump: 088854
LocOp 088854:
  TraceOperation 088854 (Jg (Var (Global 194)) (Con 0) (Branch F (Dloc 088880)));
  Let b1 = M[007594];
  Let b2 = M[007595];
  if (GreaterThan(MakeHiLo(b1,b2),0)) {
    TraceOperation 088858 (Sub (Var (Global 194)) (Con 3) (Global 194));
    Let b3 = M[007594];
    Let b4 = M[007595];
    SetByte 007594 HiByte(Sub(MakeHiLo(b3,b4),3));
    SetByte 007595 LoByte(Sub(MakeHiLo(b3,b4),3));
    TraceOperation 088862 (Loadw (Con 18050) (Var (Global 194)) Sp);
    Let b5 = M[007594];
    Let b6 = M[007595];
    Let b7 = M[Offset(018050,Mul(2,MakeHiLo(b5,b6)))];
    Let b8 = M[Offset(Offset(018050,Mul(2,MakeHiLo(b5,b6))),1)];
    PushStack MakeHiLo(b7,b8);
    TraceOperation 088868 (Je [Var Sp,Con -1] (Branch F (Dloc 088877)));
    PopStack popped9;
    if (Equal(popped9,-1)) {
      TraceOperation 088874 (Jump 088880);
      Jump: 088880
    } else {
      Jump: 088877
    }
  } else {
    Jump: 088880
  }
LocOp 088877:
  TraceOperation 088877 (Jump 088854);
  Jump: 088854
LocOp 088880:
  TraceOperation 088880 (Jz (Var (Global 194)) (Branch F (Dloc 088886)));
  Let b1 = M[007594];
  Let b2 = M[007595];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 088883 (Store (Con 211) (Con 0));
    SetByte 007596 0;
    SetByte 007597 0;
    Jump: 088886
  } else {
    Jump: 088886
  }
LocOp 088886:
  TraceOperation 088886 (Je [Var (Local 1),Con 1] (Branch F (Dloc 088899)));
  if (Equal(GetLocal(1),1)) {
    TraceOperation 088890 (Storew (Con 18050) (Var (Global 194)) (Con 8));
    Let b1 = M[007594];
    Let b2 = M[007595];
    SetByte Offset(018050,Mul(2,MakeHiLo(b1,b2))) 0;
    SetByte Offset(Offset(018050,Mul(2,MakeHiLo(b1,b2))),1) 8;
    TraceOperation 088896 (Jump 088908);
    Jump: 088908
  } else {
    Jump: 088899
  }
LocOp 088899:
  TraceOperation 088899 (Jz (Var (Local 1)) (Branch F (Dloc 088908)));
  if (IsZero(GetLocal(1))) {
    TraceOperation 088902 (Storew (Con 18050) (Var (Global 194)) (Con 9));
    Let b1 = M[007594];
    Let b2 = M[007595];
    SetByte Offset(018050,Mul(2,MakeHiLo(b1,b2))) 0;
    SetByte Offset(Offset(018050,Mul(2,MakeHiLo(b1,b2))),1) 9;
    Jump: 088908
  } else {
    Jump: 088908
  }
LocOp 088908:
  TraceOperation 088908 (Je [Var (Local 1),Con -1] (Branch T (Dloc 088934)));
  if (Equal(GetLocal(1),-1)) {
    Jump: 088934
  } else {
    TraceOperation 088914 (Add (Var (Global 194)) (Con 1) Sp);
    Let b1 = M[007594];
    Let b2 = M[007595];
    PushStack Add(MakeHiLo(b1,b2),1);
    TraceOperation 088918 (Storew (Con 18050) (Var Sp) (Var (Local 2)));
    PopStack popped3;
    SetByte Offset(018050,Mul(2,popped3)) HiByte(GetLocal(2));
    SetByte Offset(Offset(018050,Mul(2,popped3)),1) LoByte(GetLocal(2));
    TraceOperation 088924 (Add (Var (Global 194)) (Con 2) Sp);
    Let b4 = M[007594];
    Let b5 = M[007595];
    PushStack Add(MakeHiLo(b4,b5),2);
    TraceOperation 088928 (Storew (Con 18050) (Var Sp) (Var (Local 3)));
    PopStack popped6;
    SetByte Offset(018050,Mul(2,popped6)) HiByte(GetLocal(3));
    SetByte Offset(Offset(018050,Mul(2,popped6)),1) LoByte(GetLocal(3));
    Jump: 088934
  }
LocOp 088934:
  TraceOperation 088934 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 089020:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 089021
LocOp 089021:
  TraceOperation 089021 (Dec_chk (Con 70) (Con 72) (Branch F (Dloc 089794)));
  Let b1 = M[007314];
  Let b2 = M[007315];
  if (LessThanEqual(MakeHiLo(b1,b2),72)) {
    SetByte 007314 HiByte(Sub(MakeHiLo(b1,b2),1));
    SetByte 007315 LoByte(Sub(MakeHiLo(b1,b2),1));
  } else {
    SetByte 007314 HiByte(Sub(MakeHiLo(b1,b2),1));
    SetByte 007315 LoByte(Sub(MakeHiLo(b1,b2),1));
  }
  TraceOperation 089026 (Jg (Con 84) (Con 5) (Branch F (Dloc 089541)));
  TraceOperation 089031 (Loadw (Con 18050) (Var Sp) Sp);
  PopStack popped3;
  Let b4 = M[Offset(018050,Mul(2,popped3))];
  Let b5 = M[Offset(Offset(018050,Mul(2,popped3)),1)];
  PushStack MakeHiLo(b4,b5);
  TraceOperation 089037 (Je [Var Sp,Var (Local 1)] (Branch F (Dloc 089045)));
  PopStack popped6;
  if (Equal(popped6,GetLocal(1))) {
    TraceOperation 089041 (Or (Var (Local 3)) (Con 32) (Local 3));
    SetLocal 3 Or(GetLocal(3),32);
    Jump: 089045
  } else {
    Jump: 089045
  }
LocOp 089045:
  TraceOperation 089045 (Jump 088971);
  Jump: 088971
--------------------------------------------------
LocRoutine 089070:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 089071
LocOp 089071:
  TraceOperation 089071 (Inc_chk (Con 3) (Con 45) (Branch F (Dloc 090867)));
  SetLocal 3 Add(GetLocal(3),1);
  if (GreaterThanEqual(GetLocal(3),45)) {
  }
  TraceOperation 089076 (Store (Con 4) (Con 0));
  SetLocal 4 0;
  TraceOperation 089079 (And (Var (Local 3)) (Con 32) Sp);
  PushStack And(GetLocal(3),32);
  TraceOperation 089083 (Jz (Var Sp) (Branch T (Dloc 089231)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 089231
  } else {
    TraceOperation 089087 (Jump 089094);
    Jump: 089094
  }
--------------------------------------------------
LocRoutine 089104:
  MakeRoutineFrame 8;
  if (LessThanByte(num_actuals,8)) {
    SetLocal 8 0;
    if (LessThanByte(num_actuals,7)) {
      SetLocal 7 0;
      if (LessThanByte(num_actuals,6)) {
        SetLocal 6 0;
        if (LessThanByte(num_actuals,5)) {
          SetLocal 5 0;
          if (LessThanByte(num_actuals,4)) {
            SetLocal 4 0;
            if (LessThanByte(num_actuals,3)) {
              SetLocal 3 0;
              if (LessThanByte(num_actuals,2)) {
                SetLocal 2 0;
                if (LessThanByte(num_actuals,1)) {
                  SetLocal 1 0;
                }
              }
            }
          }
        }
      }
    }
  }
  Jump: 089105
LocOp 089105:
  TraceOperation 089105 (Add (Var (Local 5)) (Con 1) Sp);
  PushStack Add(GetLocal(5),1);
  TraceOperation 089109 (Loadw (Con 18050) (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(018050,Mul(2,popped1))];
  Let b3 = M[Offset(Offset(018050,Mul(2,popped1)),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 089115 (Je [Var Sp,Var (Local 1)] (Branch F (Dloc 089169)));
  PopStack popped4;
  if (Equal(popped4,GetLocal(1))) {
    TraceOperation 089119 (Je [Var (Local 8),Con 1] (Branch F (Dloc 089129)));
    if (Equal(GetLocal(8),1)) {
      TraceOperation 089123 (And (Var (Local 3)) (Con -2) (Local 3));
      SetLocal 3 And(GetLocal(3),-2);
      Jump: 089129
    } else {
      Jump: 089129
    }
  } else {
    Jump: 089169
  }
LocOp 089129:
  TraceOperation 089129 (Je [Var (Local 8),Con 2] (Branch F (Dloc 089137)));
  if (Equal(GetLocal(8),2)) {
    TraceOperation 089133 (Or (Var (Local 3)) (Con 1) (Local 3));
    SetLocal 3 Or(GetLocal(3),1);
    Jump: 089137
  } else {
    Jump: 089137
  }
LocOp 089137:
  TraceOperation 089137 (Je [Var (Local 8),Con 5] (Branch F (Dloc 089147)));
  if (Equal(GetLocal(8),5)) {
    TraceOperation 089141 (And (Var (Local 3)) (Con -5) (Local 3));
    SetLocal 3 And(GetLocal(3),-5);
    Jump: 089147
  } else {
    Jump: 089147
  }
LocOp 089147:
  TraceOperation 089147 (Je [Var (Local 8),Con 6] (Branch F (Dloc 089155)));
  if (Equal(GetLocal(8),6)) {
    TraceOperation 089151 (Or (Var (Local 3)) (Con 4) (Local 3));
    SetLocal 3 Or(GetLocal(3),4);
    Jump: 089155
  } else {
    Jump: 089155
  }
LocOp 089155:
  TraceOperation 089155 (Je [Var (Local 8),Con 7] (Branch F (Dloc 089169)));
  if (Equal(GetLocal(8),7)) {
    TraceOperation 089159 (Add (Var (Local 5)) (Con 2) Sp);
    PushStack Add(GetLocal(5),2);
    TraceOperation 089163 (Loadw (Con 18050) (Var Sp) (Local 7));
    PopStack popped1;
    Let b2 = M[Offset(018050,Mul(2,popped1))];
    Let b3 = M[Offset(Offset(018050,Mul(2,popped1)),1)];
    SetLocal 7 MakeHiLo(b2,b3);
    Jump: 089169
  } else {
    Jump: 089169
  }
LocOp 089169:
  TraceOperation 089169 (Je [Var (Local 8),Con 3] (Branch F (Dloc 089228)));
  if (Equal(GetLocal(8),3)) {
    TraceOperation 089173 (Add (Var (Local 5)) (Con 2) Sp);
    PushStack Add(GetLocal(5),2);
    TraceOperation 089177 (Loadw (Con 18050) (Var Sp) Sp);
    PopStack popped1;
    Let b2 = M[Offset(018050,Mul(2,popped1))];
    Let b3 = M[Offset(Offset(018050,Mul(2,popped1)),1)];
    PushStack MakeHiLo(b2,b3);
    TraceOperation 089183 (Je [Var Sp,Var (Local 1)] (Branch F (Dloc 089228)));
    PopStack popped4;
    if (Equal(popped4,GetLocal(1))) {
      TraceOperation 089187 (And (Var (Local 3)) (Con 8) Sp);
      PushStack And(GetLocal(3),8);
      TraceOperation 089191 (Jz (Var Sp) (Branch F (Dloc 089200)));
      PopStack popped5;
      if (IsZero(popped5)) {
        TraceOperation 089194 (Push (Con 0));
        PushStack 0;
        TraceOperation 089197 (Jump 089203);
        Jump: 089203
      } else {
        Jump: 089200
      }
    } else {
      Jump: 089228
    }
  } else {
    Jump: 089228
  }
LocOp 089200:
  TraceOperation 089200 (Push (Con 1));
  PushStack 1;
  Jump: 089203
LocOp 089203:
  TraceOperation 089203 (Add (Var (Local 5)) (Con 1) Sp);
  PushStack Add(GetLocal(5),1);
  TraceOperation 089207 (Loadw (Con 18050) (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(018050,Mul(2,popped1))];
  Let b3 = M[Offset(Offset(018050,Mul(2,popped1)),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 089213 (Call (Floc 088936) [Var Sp,Var (Local 2),Var Sp,Con 1] (Local 4));
  PopStack popped4;
  PopStack popped5;
  PushFrame;
  PushReturnAddress 089213;
  SetLocal 1 popped4;
  SetLocal 2 GetLocal(2);
  SetLocal 3 popped5;
  SetLocal 4 1;
  MakeRoutineFrame 14;
  SetLocal 14 0;
  SetLocal 13 0;
  SetLocal 12 0;
  SetLocal 11 0;
  SetLocal 10 0;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  Jump: 088937
LocReturn 089213:
  SetLocal 4 call_result;
  TraceOperation 089223 (Jz (Var (Local 4)) (Branch T (Dloc 089228)));
  if (IsZero(GetLocal(4))) {
    Jump: 089228
  } else {
    TraceOperation 089226 (Ret (Var (Local 4)));
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult GetLocal(4);
    JumpIndirect: (return) return_address_1
  }
LocOp 089228:
  TraceOperation 089228 (Jump 089090);
  Jump: 089090
--------------------------------------------------
LocRoutine 089294:
  MakeRoutineFrame 0;
  Jump: 089295
LocOp 089295:
  TraceOperation 089295 (Or (Var (Global 216)) (Con 127) Sp);
  Let b1 = M[007638];
  Let b2 = M[007639];
  PushStack Or(MakeHiLo(b1,b2),127);
  TraceOperation 089299 (Jump 089305);
  Jump: 089305
--------------------------------------------------
LocRoutine 089402:
  MakeRoutineFrame 0;
  Jump: 089403
LocOp 089403:
  TraceOperation 089403 (Jz (Var Sp) (Branch T (Dloc 089409)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 089409
  } else {
    TraceOperation 089406 (Jump 089463);
    Jump: 089463
  }
LocOp 089409:
  TraceOperation 089409 (Inc (Con 5));
  SetLocal 5 Add(GetLocal(5),1);
  TraceOperation 089411 (Jump 089327);
  Jump: 089327
--------------------------------------------------
LocRoutine 089448:
  MakeRoutineFrame 0;
  Jump: 089449
LocOp 089449:
  TraceOperation 089449 (Jz (Var Sp) (Branch T (Dloc 089455)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 089455
  } else {
    TraceOperation 089452 (Jump 089463);
    Jump: 089463
  }
LocOp 089455:
  TraceOperation 089455 (Inc (Con 5));
  SetLocal 5 Add(GetLocal(5),1);
  TraceOperation 089457 (Jump 089417);
  Jump: 089417
--------------------------------------------------
LocRoutine 089720:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 089721
LocOp 089721:
  TraceOperation 089721 (Jz (Var (Local 1)) (Branch T (Dloc 089727)));
  if (IsZero(GetLocal(1))) {
    Jump: 089727
  } else {
    TraceOperation 089724 (Store (Con 82) (Var (Local 1)));
    SetByte 007338 HiByte(GetLocal(1));
    SetByte 007339 LoByte(GetLocal(1));
    Jump: 089727
  }
LocOp 089727:
  TraceOperation 089727 (CallN (Floc 089744) []);
  PushFrame;
  PushReturnAddress 089727;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  SetLocal 1 0;
  Jump: 089745
LocReturn 089727:
  TraceOperation 089730 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 089732:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 089733
LocOp 089733:
  TraceOperation 089733 (Jz (Var (Local 1)) (Branch T (Dloc 089739)));
  if (IsZero(GetLocal(1))) {
    Jump: 089739
  } else {
    TraceOperation 089736 (Store (Con 82) (Var (Local 1)));
    SetByte 007338 HiByte(GetLocal(1));
    SetByte 007339 LoByte(GetLocal(1));
    Jump: 089739
  }
LocOp 089739:
  TraceOperation 089739 (CallN (Floc 089760) []);
  PushFrame;
  PushReturnAddress 089739;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  SetLocal 1 0;
  Jump: 089761
LocReturn 089739:
  TraceOperation 089742 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 089744:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 089745
LocOp 089745:
  TraceOperation 089745 (CallN (Floc 088636) [Con 8,Var (Local 1),Var (Local 2)]);
  PushFrame;
  PushReturnAddress 089745;
  SetLocal 1 8;
  SetLocal 2 GetLocal(1);
  SetLocal 3 GetLocal(2);
  MakeRoutineFrame 3;
  Jump: 088637
LocReturn 089745:
  TraceOperation 089752 (Sub (Var (Global 194)) (Con 3) (Global 194));
  Let b1 = M[007594];
  Let b2 = M[007595];
  SetByte 007594 HiByte(Sub(MakeHiLo(b1,b2),3));
  SetByte 007595 LoByte(Sub(MakeHiLo(b1,b2),3));
  TraceOperation 089756 Rtrue;
  PopFrame;
  PopReturnAddress return_address_3;
  SetResult 1;
  JumpIndirect: (return) return_address_3
--------------------------------------------------
LocRoutine 089760:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 089761
LocOp 089761:
  TraceOperation 089761 (CallN (Floc 088636) [Con 9,Var (Local 1),Var (Local 2)]);
  PushFrame;
  PushReturnAddress 089761;
  SetLocal 1 9;
  SetLocal 2 GetLocal(1);
  SetLocal 3 GetLocal(2);
  MakeRoutineFrame 3;
  Jump: 088637
LocReturn 089761:
  TraceOperation 089768 (Sub (Var (Global 194)) (Con 3) (Global 194));
  Let b1 = M[007594];
  Let b2 = M[007595];
  SetByte 007594 HiByte(Sub(MakeHiLo(b1,b2),3));
  SetByte 007595 LoByte(Sub(MakeHiLo(b1,b2),3));
  TraceOperation 089772 Rtrue;
  PopFrame;
  PopReturnAddress return_address_3;
  SetResult 1;
  JumpIndirect: (return) return_address_3
--------------------------------------------------
LocRoutine 089776:
  MakeRoutineFrame 0;
  Jump: 089777
LocOp 089777:
  TraceOperation 089777 (CallN (Floc 088636) [Con 10,Con 0,Con 0]);
  PushFrame;
  PushReturnAddress 089777;
  SetLocal 1 10;
  SetLocal 2 0;
  SetLocal 3 0;
  MakeRoutineFrame 3;
  Jump: 088637
LocReturn 089777:
  TraceOperation 089784 (Sub (Var (Global 194)) (Con 3) (Global 194));
  Let b1 = M[007594];
  Let b2 = M[007595];
  SetByte 007594 HiByte(Sub(MakeHiLo(b1,b2),3));
  SetByte 007595 LoByte(Sub(MakeHiLo(b1,b2),3));
  TraceOperation 089788 Rtrue;
  PopFrame;
  PopReturnAddress return_address_3;
  SetResult 1;
  JumpIndirect: (return) return_address_3
--------------------------------------------------
LocRoutine 089792:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 089793
LocOp 089793:
  TraceOperation 089793 (Storew (Con 18050) (Var (Global 194)) (Var (Local 1)));
  Let b1 = M[007594];
  Let b2 = M[007595];
  SetByte Offset(018050,Mul(2,MakeHiLo(b1,b2))) HiByte(GetLocal(1));
  SetByte Offset(Offset(018050,Mul(2,MakeHiLo(b1,b2))),1) LoByte(GetLocal(1));
  TraceOperation 089799 Rtrue;
  PopFrame;
  PopReturnAddress return_address_3;
  SetResult 1;
  JumpIndirect: (return) return_address_3
--------------------------------------------------
LocRoutine 089800:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 089801
LocOp 089801:
  TraceOperation 089801 (Loadw (Con 18050) (Var (Global 194)) (Local 1));
  Let b1 = M[007594];
  Let b2 = M[007595];
  Let b3 = M[Offset(018050,Mul(2,MakeHiLo(b1,b2)))];
  Let b4 = M[Offset(Offset(018050,Mul(2,MakeHiLo(b1,b2))),1)];
  SetLocal 1 MakeHiLo(b3,b4);
  TraceOperation 089807 (Je [Var (Local 1),Con 9] (Branch T (Dloc 089815)));
  if (Equal(GetLocal(1),9)) {
    Jump: 089815
  } else {
    TraceOperation 089811 (Je [Var (Local 1),Con 8] (Branch F (Dloc 089817)));
    if (Equal(GetLocal(1),8)) {
      Jump: 089815
    } else {
      Jump: 089817
    }
  }
LocOp 089815:
  TraceOperation 089815 (Ret (Var (Local 1)));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult GetLocal(1);
  JumpIndirect: (return) return_address_1
LocOp 089817:
  TraceOperation 089817 (Ret (Con 10));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 10;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 089820:
  MakeRoutineFrame 0;
  Jump: 089821
LocOp 089821:
  TraceOperation 089821 (Loadw (Con 18050) (Var (Global 194)) Sp);
  Let b1 = M[007594];
  Let b2 = M[007595];
  Let b3 = M[Offset(018050,Mul(2,MakeHiLo(b1,b2)))];
  Let b4 = M[Offset(Offset(018050,Mul(2,MakeHiLo(b1,b2))),1)];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 089827 (Je [Var Sp,Con 9] (Branch T Dtrue));
  PopStack popped5;
  if (Equal(popped5,9)) {
    PopFrame;
    PopReturnAddress return_address_6;
    SetResult 1;
    JumpIndirect: (return) return_address_6
  } else {
    TraceOperation 089831 Rfalse;
    PopFrame;
    PopReturnAddress return_address_7;
    SetResult 0;
    JumpIndirect: (return) return_address_7
  }
--------------------------------------------------
LocRoutine 089832:
  MakeRoutineFrame 0;
  Jump: 089833
LocOp 089833:
  TraceOperation 089833 (Loadw (Con 18050) (Var (Global 194)) Sp);
  Let b1 = M[007594];
  Let b2 = M[007595];
  Let b3 = M[Offset(018050,Mul(2,MakeHiLo(b1,b2)))];
  Let b4 = M[Offset(Offset(018050,Mul(2,MakeHiLo(b1,b2))),1)];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 089839 (Je [Var Sp,Con 8] (Branch T Dtrue));
  PopStack popped5;
  if (Equal(popped5,8)) {
    PopFrame;
    PopReturnAddress return_address_6;
    SetResult 1;
    JumpIndirect: (return) return_address_6
  } else {
    TraceOperation 089843 Rfalse;
    PopFrame;
    PopReturnAddress return_address_7;
    SetResult 0;
    JumpIndirect: (return) return_address_7
  }
--------------------------------------------------
LocRoutine 089844:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 089845
LocOp 089845:
  TraceOperation 089845 (Loadw (Con 18050) (Var (Global 194)) (Local 1));
  Let b1 = M[007594];
  Let b2 = M[007595];
  Let b3 = M[Offset(018050,Mul(2,MakeHiLo(b1,b2)))];
  Let b4 = M[Offset(Offset(018050,Mul(2,MakeHiLo(b1,b2))),1)];
  SetLocal 1 MakeHiLo(b3,b4);
  TraceOperation 089851 (Je [Var (Local 1),Con 9] (Branch T (Dloc 089859)));
  if (Equal(GetLocal(1),9)) {
    Jump: 089859
  } else {
    TraceOperation 089855 (Je [Var (Local 1),Con 8] (Branch F (Dloc 089883)));
    if (Equal(GetLocal(1),8)) {
      Jump: 089859
    } else {
      Jump: 089883
    }
  }
LocOp 089859:
  TraceOperation 089859 (Add (Var (Global 194)) (Con 1) Sp);
  Let b1 = M[007594];
  Let b2 = M[007595];
  PushStack Add(MakeHiLo(b1,b2),1);
  TraceOperation 089863 (Loadw (Con 18050) (Var Sp) (Local 1));
  PopStack popped3;
  Let b4 = M[Offset(018050,Mul(2,popped3))];
  Let b5 = M[Offset(Offset(018050,Mul(2,popped3)),1)];
  SetLocal 1 MakeHiLo(b4,b5);
  TraceOperation 089869 (Jz (Var (Local 1)) (Branch T (Dloc 089883)));
  if (IsZero(GetLocal(1))) {
    Jump: 089883
  } else {
    TraceOperation 089872 (Add (Var (Global 194)) (Con 2) Sp);
    Let b6 = M[007594];
    Let b7 = M[007595];
    PushStack Add(MakeHiLo(b6,b7),2);
    TraceOperation 089876 (Loadw (Con 18050) (Var Sp) Sp);
    PopStack popped8;
    Let b9 = M[Offset(018050,Mul(2,popped8))];
    Let b10 = M[Offset(Offset(018050,Mul(2,popped8)),1)];
    PushStack MakeHiLo(b9,b10);
    TraceOperation 089882 Ret_popped;
    PopStack popped11;
    PopFrame;
    PopReturnAddress return_address_12;
    SetResult popped11;
    JumpIndirect: (return) return_address_12
  }
LocOp 089883:
  TraceOperation 089883 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 089884:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 089885
LocOp 089885:
  TraceOperation 089885 (Je [Var (Local 1),Con 2] (Branch F (Dloc 089903)));
  if (Equal(GetLocal(1),2)) {
    TraceOperation 089889 (Jz (Var (Global 198)) (Branch F (Dloc 089897)));
    Let b1 = M[007602];
    Let b2 = M[007603];
    if (IsZero(MakeHiLo(b1,b2))) {
      TraceOperation 089892 (CallN (Floc 086692) [Con 38]);
      PushFrame;
      PushReturnAddress 089892;
      SetLocal 1 38;
      MakeRoutineFrame 7;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      SetLocal 3 0;
      SetLocal 2 0;
      Jump: 086693
    } else {
      Jump: 089897
    }
  } else {
    Jump: 089903
  }
LocReturn 089892:
  Jump: 089897
LocOp 089897:
  TraceOperation 089897 (Store (Con 214) (Con 1));
  SetByte 007602 0;
  SetByte 007603 1;
  TraceOperation 089900 (Jump 089910);
  Jump: 089910
LocOp 089903:
  TraceOperation 089903 (CallN (Floc 088636) [Con 1,Var (Local 1),Con 0]);
  PushFrame;
  PushReturnAddress 089903;
  SetLocal 1 1;
  SetLocal 2 GetLocal(1);
  SetLocal 3 0;
  MakeRoutineFrame 3;
  Jump: 088637
LocReturn 089903:
  Jump: 089910
LocOp 089910:
  TraceOperation 089910 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 089912:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 089913
LocOp 089913:
  TraceOperation 089913 (CallN (Floc 088636) [Con 2,Var (Local 1),Con 0]);
  PushFrame;
  PushReturnAddress 089913;
  SetLocal 1 2;
  SetLocal 2 GetLocal(1);
  SetLocal 3 0;
  MakeRoutineFrame 3;
  Jump: 088637
LocReturn 089913:
  TraceOperation 089920 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 089924:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 089925
LocOp 089925:
  TraceOperation 089925 (CallN (Floc 088636) [Con 5,Var (Local 1),Con 0]);
  PushFrame;
  PushReturnAddress 089925;
  SetLocal 1 5;
  SetLocal 2 GetLocal(1);
  SetLocal 3 0;
  MakeRoutineFrame 3;
  Jump: 088637
LocReturn 089925:
  TraceOperation 089932 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 089936:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 089937
LocOp 089937:
  TraceOperation 089937 (CallN (Floc 088636) [Con 6,Var (Local 1),Con 0]);
  PushFrame;
  PushReturnAddress 089937;
  SetLocal 1 6;
  SetLocal 2 GetLocal(1);
  SetLocal 3 0;
  MakeRoutineFrame 3;
  Jump: 088637
LocReturn 089937:
  TraceOperation 089944 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 089948:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 089949
LocOp 089949:
  TraceOperation 089949 (CallN (Floc 088636) [Con 7,Var (Local 2),Var (Local 1)]);
  PushFrame;
  PushReturnAddress 089949;
  SetLocal 1 7;
  SetLocal 2 GetLocal(2);
  SetLocal 3 GetLocal(1);
  MakeRoutineFrame 3;
  Jump: 088637
LocReturn 089949:
  TraceOperation 089956 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 089960:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 089961
LocOp 089961:
  TraceOperation 089961 (CallN (Floc 088636) [Con 3,Var (Local 1),Var (Local 2)]);
  PushFrame;
  PushReturnAddress 089961;
  SetLocal 1 3;
  SetLocal 2 GetLocal(1);
  SetLocal 3 GetLocal(2);
  MakeRoutineFrame 3;
  Jump: 088637
LocReturn 089961:
  TraceOperation 089968 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 089972:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 089973
LocOp 089973:
  TraceOperation 089973 (CallN (Floc 088636) [Con 4,Var (Local 1),Var (Local 2)]);
  PushFrame;
  PushReturnAddress 089973;
  SetLocal 1 4;
  SetLocal 2 GetLocal(1);
  SetLocal 3 GetLocal(2);
  MakeRoutineFrame 3;
  Jump: 088637
LocReturn 089973:
  TraceOperation 089980 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 089984:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 089985
LocOp 089985:
  TraceOperation 089985 (Jl (Var (Local 1)) (Con 0) (Branch T (Dloc 090006)));
  if (LessThan(GetLocal(1),0)) {
    Jump: 090006
  } else {
    TraceOperation 089989 (Jl (Var (Local 1)) (Con 375) (Branch F (Dloc 090006)));
    if (LessThan(GetLocal(1),375)) {
      TraceOperation 089995 (Loadw (Con 19052) (Var (Local 1)) Sp);
      Let b1 = M[Offset(019052,Mul(2,GetLocal(1)))];
      Let b2 = M[Offset(Offset(019052,Mul(2,GetLocal(1))),1)];
      PushStack MakeHiLo(b1,b2);
      TraceOperation 090001 (Print_paddr (Var Sp));
      PopStack popped3;
      GamePrint GetText(PackedAddress Z5(popped3));
      TraceOperation 090003 (Jump 098175);
      Jump: 098175
    } else {
      Jump: 090006
    }
  }
LocOp 090006:
  TraceOperation 090006 (Je [Var (Local 1),Con 14189] (Branch F (Dloc 090036)));
  if (Equal(GetLocal(1),14189)) {
    TraceOperation 090012 (Print "start in the correct scenes rule");
    GamePrint "start in the correct scenes rule";
    TraceOperation 090035 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 090036
  }
LocOp 090036:
  TraceOperation 090036 (Je [Var (Local 1),Con 14191] (Branch F (Dloc 090062)));
  if (Equal(GetLocal(1),14191)) {
    TraceOperation 090042 (Print "when play begins stage rule");
    GamePrint "when play begins stage rule";
    TraceOperation 090061 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 090062
  }
LocOp 090062:
  TraceOperation 090062 (Je [Var (Local 1),Con 14193] (Branch F (Dloc 090088)));
  if (Equal(GetLocal(1),14193)) {
    TraceOperation 090068 (Print "fix baseline scoring rule");
    GamePrint "fix baseline scoring rule";
    TraceOperation 090087 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 090088
  }
LocOp 090088:
  TraceOperation 090088 (Je [Var (Local 1),Con 14195] (Branch F (Dloc 090110)));
  if (Equal(GetLocal(1),14195)) {
    TraceOperation 090094 (Print "display banner rule");
    GamePrint "display banner rule";
    TraceOperation 090109 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 090110
  }
LocOp 090110:
  TraceOperation 090110 (Je [Var (Local 1),Con 14197] (Branch F (Dloc 090138)));
  if (Equal(GetLocal(1),14197)) {
    TraceOperation 090116 (Print "initial room description rule");
    GamePrint "initial room description rule";
    TraceOperation 090137 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 090138
  }
LocOp 090138:
  TraceOperation 090138 (Je [Var (Local 1),Con 14202] (Branch F (Dloc 090160)));
  if (Equal(GetLocal(1),14202)) {
    TraceOperation 090144 (Print "every turn stage rule");
    GamePrint "every turn stage rule";
    TraceOperation 090159 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 090160
  }
LocOp 090160:
  TraceOperation 090160 (Je [Var (Local 1),Con 14206] (Branch F (Dloc 090186)));
  if (Equal(GetLocal(1),14206)) {
    TraceOperation 090166 (Print "notify score changes rule");
    GamePrint "notify score changes rule";
    TraceOperation 090185 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 090186
  }
LocOp 090186:
  TraceOperation 090186 (Je [Var (Local 1),Con 14209] (Branch F (Dloc 090212)));
  if (Equal(GetLocal(1),14209)) {
    TraceOperation 090192 (Print "when play ends stage rule");
    GamePrint "when play ends stage rule";
    TraceOperation 090211 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 090212
  }
LocOp 090212:
  TraceOperation 090212 (Je [Var (Local 1),Con 14211] (Branch F (Dloc 090240)));
  if (Equal(GetLocal(1),14211)) {
    TraceOperation 090218 (Print "print player's obituary rule");
    GamePrint "print player's obituary rule";
    TraceOperation 090239 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 090240
  }
LocOp 090240:
  TraceOperation 090240 (Je [Var (Local 1),Con 14339] (Branch F (Dloc 090250)));
  if (Equal(GetLocal(1),14339)) {
    TraceOperation 090246 (Print_paddr (Con 32432));
    Note "<static Gettext address>";
    GamePrint "set pronouns from items from multiple object lists rule";
    TraceOperation 090249 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 090250
  }
LocOp 090250:
  TraceOperation 090250 (Je [Var (Local 1),Con 14333] (Branch F (Dloc 090260)));
  if (Equal(GetLocal(1),14333)) {
    TraceOperation 090256 (Print_paddr (Con 32442));
    Note "<static Gettext address>";
    GamePrint "announce items from multiple object lists rule";
    TraceOperation 090259 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 090260
  }
LocOp 090260:
  TraceOperation 090260 (Je [Var (Local 1),Con 14342] (Branch F (Dloc 090280)));
  if (Equal(GetLocal(1),14342)) {
    TraceOperation 090266 (Print "before stage rule");
    GamePrint "before stage rule";
    TraceOperation 090279 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 090280
  }
LocOp 090280:
  TraceOperation 090280 (Je [Var (Local 1),Con 14345] (Branch F (Dloc 090300)));
  if (Equal(GetLocal(1),14345)) {
    TraceOperation 090286 (Print "instead stage rule");
    GamePrint "instead stage rule";
    TraceOperation 090299 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 090300
  }
LocOp 090300:
  TraceOperation 090300 (Je [Var (Local 1),Con 14348] (Branch F (Dloc 090310)));
  if (Equal(GetLocal(1),14348)) {
    TraceOperation 090306 (Print_paddr (Con 32450));
    Note "<static Gettext address>";
    GamePrint "end action-processing in success rule";
    TraceOperation 090309 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 090310
  }
LocOp 090310:
  TraceOperation 090310 (Je [Var (Local 1),Con 14444] (Branch F (Dloc 090320)));
  if (Equal(GetLocal(1),14444)) {
    TraceOperation 090316 (Print_paddr (Con 32457));
    Note "<static Gettext address>";
    GamePrint "investigate player's awareness before action rule";
    TraceOperation 090319 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 090320
  }
LocOp 090320:
  TraceOperation 090320 (Je [Var (Local 1),Con 14455] (Branch F (Dloc 090340)));
  if (Equal(GetLocal(1),14455)) {
    TraceOperation 090326 (Print "check stage rule");
    GamePrint "check stage rule";
    TraceOperation 090339 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 090340
  }
LocOp 090340:
  TraceOperation 090340 (Je [Var (Local 1),Con 14467] (Branch F (Dloc 090362)));
  if (Equal(GetLocal(1),14467)) {
    TraceOperation 090346 (Print "carry out stage rule");
    GamePrint "carry out stage rule";
    TraceOperation 090361 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 090362
  }
LocOp 090362:
  TraceOperation 090362 (Je [Var (Local 1),Con 14472] (Branch F (Dloc 090382)));
  if (Equal(GetLocal(1),14472)) {
    TraceOperation 090368 (Print "after stage rule");
    GamePrint "after stage rule";
    TraceOperation 090381 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 090382
  }
LocOp 090382:
  TraceOperation 090382 (Je [Var (Local 1),Con 14479] (Branch F (Dloc 090392)));
  if (Equal(GetLocal(1),14479)) {
    TraceOperation 090388 (Print_paddr (Con 32466));
    Note "<static Gettext address>";
    GamePrint "investigate player's awareness after action rule";
    TraceOperation 090391 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 090392
  }
LocOp 090392:
  TraceOperation 090392 (Je [Var (Local 1),Con 14490] (Branch F (Dloc 090412)));
  if (Equal(GetLocal(1),14490)) {
    TraceOperation 090398 (Print "report stage rule");
    GamePrint "report stage rule";
    TraceOperation 090411 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 090412
  }
LocOp 090412:
  TraceOperation 090412 (Je [Var (Local 1),Con 14506] (Branch F (Dloc 090422)));
  if (Equal(GetLocal(1),14506)) {
    TraceOperation 090418 (Print_paddr (Con 32475));
    Note "<static Gettext address>";
    GamePrint "player aware of his own actions rule";
    TraceOperation 090421 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 090422
  }
LocOp 090422:
  TraceOperation 090422 (Je [Var (Local 1),Con 14509] (Branch F (Dloc 090432)));
  if (Equal(GetLocal(1),14509)) {
    TraceOperation 090428 (Print_paddr (Con 32481));
    Note "<static Gettext address>";
    GamePrint "player aware of actions by visible actors rule";
    TraceOperation 090431 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 090432
  }
LocOp 090432:
  TraceOperation 090432 (Je [Var (Local 1),Con 14514] (Branch F (Dloc 090442)));
  if (Equal(GetLocal(1),14514)) {
    TraceOperation 090438 (Print_paddr (Con 32489));
    Note "<static Gettext address>";
    GamePrint "player aware of actions on visible nouns rule";
    TraceOperation 090441 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 090442
  }
LocOp 090442:
  TraceOperation 090442 (Je [Var (Local 1),Con 14521] (Branch F (Dloc 090452)));
  if (Equal(GetLocal(1),14521)) {
    TraceOperation 090448 (Print_paddr (Con 32497));
    Note "<static Gettext address>";
    GamePrint "player aware of actions on visible second nouns rule";
    TraceOperation 090451 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 090452
  }
LocOp 090452:
  TraceOperation 090452 (Je [Var (Local 1),Con 14528] (Branch F (Dloc 090478)));
  if (Equal(GetLocal(1),14528)) {
    TraceOperation 090458 (Print "can't act in the dark rule");
    GamePrint "can't act in the dark rule";
    TraceOperation 090477 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 090478
  }
LocOp 090478:
  TraceOperation 090478 (Je [Var (Local 1),Con 14909] (Branch F (Dloc 090488)));
  if (Equal(GetLocal(1),14909)) {
    TraceOperation 090484 (Print_paddr (Con 32506));
    Note "<static Gettext address>";
    GamePrint "very unlikely to mean taking what's already carried rule";
    TraceOperation 090487 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 090488
  }
LocOp 090488:
  TraceOperation 090488 (Je [Var (Local 1),Con 14924] (Branch F (Dloc 090518)));
  if (Equal(GetLocal(1),14924)) {
    TraceOperation 090494 (Print "make named things mentioned rule");
    GamePrint "make named things mentioned rule";
    TraceOperation 090517 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 090518
  }
LocOp 090518:
  TraceOperation 090518 (Je [Var (Local 1),Con 14954] (Branch F (Dloc 090528)));
  if (Equal(GetLocal(1),14954)) {
    TraceOperation 090524 (Print_paddr (Con 32516));
    Note "<static Gettext address>";
    GamePrint "standard printing the plural name rule";
    TraceOperation 090527 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 090528
  }
LocOp 090528:
  TraceOperation 090528 (Je [Var (Local 1),Con 14974] (Branch F (Dloc 090538)));
  if (Equal(GetLocal(1),14974)) {
    TraceOperation 090534 (Print_paddr (Con 32523));
    Note "<static Gettext address>";
    GamePrint "standard printing a number of something rule";
    TraceOperation 090537 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 090538
  }
LocOp 090538:
  TraceOperation 090538 (Je [Var (Local 1),Con 14994] (Branch F (Dloc 090548)));
  if (Equal(GetLocal(1),14994)) {
    TraceOperation 090544 (Print_paddr (Con 32531));
    Note "<static Gettext address>";
    GamePrint "look around once light available rule";
    TraceOperation 090547 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 090548
  }
LocOp 090548:
  TraceOperation 090548 (Je [Var (Local 1),Con 14997] (Branch F (Dloc 090568)));
  if (Equal(GetLocal(1),14997)) {
    TraceOperation 090554 (Print "ambient odour rule");
    GamePrint "ambient odour rule";
    TraceOperation 090567 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 090568
  }
LocOp 090568:
  TraceOperation 090568 (Je [Var (Local 1),Con 15006] (Branch F (Dloc 090588)));
  if (Equal(GetLocal(1),15006)) {
    TraceOperation 090574 (Print "ambient sound rule");
    GamePrint "ambient sound rule";
    TraceOperation 090587 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 090588
  }
LocOp 090588:
  TraceOperation 090588 (Je [Var (Local 1),Con 15015] (Branch F (Dloc 090612)));
  if (Equal(GetLocal(1),15015)) {
    TraceOperation 090594 (Print "block vaguely going rule");
    GamePrint "block vaguely going rule";
    TraceOperation 090611 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 090612
  }
LocOp 090612:
  TraceOperation 090612 (Je [Var (Local 1),Con 15098] (Branch F (Dloc 090638)));
  if (Equal(GetLocal(1),15098)) {
    TraceOperation 090618 (Print "print the final prompt rule");
    GamePrint "print the final prompt rule";
    TraceOperation 090637 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 090638
  }
LocOp 090638:
  TraceOperation 090638 (Je [Var (Local 1),Con 15025] (Branch F (Dloc 090666)));
  if (Equal(GetLocal(1),15025)) {
    TraceOperation 090644 (Print "print the final question rule");
    GamePrint "print the final question rule";
    TraceOperation 090665 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 090666
  }
LocOp 090666:
  TraceOperation 090666 (Je [Var (Local 1),Con 15102] (Branch F (Dloc 090676)));
  if (Equal(GetLocal(1),15102)) {
    TraceOperation 090672 (Print_paddr (Con 32538));
    Note "<static Gettext address>";
    GamePrint "standard respond to final question rule";
    TraceOperation 090675 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 090676
  }
LocOp 090676:
  TraceOperation 090676 (Je [Var (Local 1),Con 15141] (Branch F (Dloc 090686)));
  if (Equal(GetLocal(1),15141)) {
    TraceOperation 090682 (Print_paddr (Con 32545));
    Note "<static Gettext address>";
    GamePrint "initialise locale description rule";
    TraceOperation 090685 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 090686
  }
LocOp 090686:
  TraceOperation 090686 (Je [Var (Local 1),Con 15162] (Branch F (Dloc 090716)));
  if (Equal(GetLocal(1),15162)) {
    TraceOperation 090692 (Print "find notable locale objects rule");
    GamePrint "find notable locale objects rule";
    TraceOperation 090715 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 090716
  }
LocOp 090716:
  TraceOperation 090716 (Je [Var (Local 1),Con 15165] (Branch F (Dloc 090726)));
  if (Equal(GetLocal(1),15165)) {
    TraceOperation 090722 (Print_paddr (Con 32551));
    Note "<static Gettext address>";
    GamePrint "interesting locale paragraphs rule";
    TraceOperation 090725 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 090726
  }
LocOp 090726:
  TraceOperation 090726 (Je [Var (Local 1),Con 15182] (Branch F (Dloc 090750)));
  if (Equal(GetLocal(1),15182)) {
    TraceOperation 090732 (Print "you-can-also-see rule");
    GamePrint "you-can-also-see rule";
    TraceOperation 090749 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 090750
  }
LocOp 090750:
  TraceOperation 090750 (Je [Var (Local 1),Con 15317] (Branch F (Dloc 090760)));
  if (Equal(GetLocal(1),15317)) {
    TraceOperation 090756 (Print_paddr (Con 32557));
    Note "<static Gettext address>";
    GamePrint "standard notable locale objects rule";
    TraceOperation 090759 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 090760
  }
LocOp 090760:
  TraceOperation 090760 (Je [Var (Local 1),Con 15327] (Branch F (Dloc 090770)));
  if (Equal(GetLocal(1),15327)) {
    TraceOperation 090766 (Print_paddr (Con 32563));
    Note "<static Gettext address>";
    GamePrint "don't mention player's supporter in room descriptions rule";
    TraceOperation 090769 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 090770
  }
LocOp 090770:
  TraceOperation 090770 (Je [Var (Local 1),Con 15344] (Branch F (Dloc 090780)));
  if (Equal(GetLocal(1),15344)) {
    TraceOperation 090776 (Print_paddr (Con 32573));
    Note "<static Gettext address>";
    GamePrint "don't mention scenery in room descriptions rule";
    TraceOperation 090779 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 090780
  }
LocOp 090780:
  TraceOperation 090780 (Je [Var (Local 1),Con 15361] (Branch F (Dloc 090790)));
  if (Equal(GetLocal(1),15361)) {
    TraceOperation 090786 (Print_paddr (Con 32581));
    Note "<static Gettext address>";
    GamePrint "don't mention undescribed items in room descriptions rule";
    TraceOperation 090789 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 090790
  }
LocOp 090790:
  TraceOperation 090790 (Je [Var (Local 1),Con 15378] (Branch F (Dloc 090800)));
  if (Equal(GetLocal(1),15378)) {
    TraceOperation 090796 (Print_paddr (Con 32591));
    Note "<static Gettext address>";
    GamePrint "set pronouns from items in room descriptions rule";
    TraceOperation 090799 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 090800
  }
LocOp 090800:
  TraceOperation 090800 (Je [Var (Local 1),Con 15395] (Branch F (Dloc 090810)));
  if (Equal(GetLocal(1),15395)) {
    TraceOperation 090806 (Print_paddr (Con 32600));
    Note "<static Gettext address>";
    GamePrint "offer items to writing a paragraph about rule";
    TraceOperation 090809 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 090810
  }
LocOp 090810:
  TraceOperation 090810 (Je [Var (Local 1),Con 15423] (Branch F (Dloc 090820)));
  if (Equal(GetLocal(1),15423)) {
    TraceOperation 090816 (Print_paddr (Con 32608));
    Note "<static Gettext address>";
    GamePrint "use initial appearance in room descriptions rule";
    TraceOperation 090819 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 090820
  }
LocOp 090820:
  TraceOperation 090820 (Je [Var (Local 1),Con 15487] (Branch F (Dloc 090830)));
  if (Equal(GetLocal(1),15487)) {
    TraceOperation 090826 (Print_paddr (Con 32616));
    Note "<static Gettext address>";
    GamePrint "describe what's on scenery supporters in room descriptions rule";
    TraceOperation 090829 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 090830
  }
LocOp 090830:
  TraceOperation 090830 (Je [Var (Local 1),Con 15542] (Branch F (Dloc 090856)));
  if (Equal(GetLocal(1),15542)) {
    TraceOperation 090836 (Print "print empty inventory rule");
    GamePrint "print empty inventory rule";
    TraceOperation 090855 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 090856
  }
LocOp 090856:
  TraceOperation 090856 (Je [Var (Local 1),Con 15554] (Branch F (Dloc 090884)));
  if (Equal(GetLocal(1),15554)) {
    TraceOperation 090862 (Print "print standard inventory rule");
    GamePrint "print standard inventory rule";
    TraceOperation 090883 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 090884
  }
LocOp 090884:
  TraceOperation 090884 (Je [Var (Local 1),Con 15569] (Branch F (Dloc 090894)));
  if (Equal(GetLocal(1),15569)) {
    TraceOperation 090890 (Print_paddr (Con 32627));
    Note "<static Gettext address>";
    GamePrint "use inventory to set pronouns rule";
    TraceOperation 090893 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 090894
  }
LocOp 090894:
  TraceOperation 090894 (Je [Var (Local 1),Con 15577] (Branch F (Dloc 090904)));
  if (Equal(GetLocal(1),15577)) {
    TraceOperation 090900 (Print_paddr (Con 32633));
    Note "<static Gettext address>";
    GamePrint "report other people taking inventory rule";
    TraceOperation 090903 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 090904
  }
LocOp 090904:
  TraceOperation 090904 (Je [Var (Local 1),Con 15587] (Branch F (Dloc 090930)));
  if (Equal(GetLocal(1),15587)) {
    TraceOperation 090910 (Print "can't take yourself rule");
    GamePrint "can't take yourself rule";
    TraceOperation 090929 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 090930
  }
LocOp 090930:
  TraceOperation 090930 (Je [Var (Local 1),Con 15598] (Branch F (Dloc 090958)));
  if (Equal(GetLocal(1),15598)) {
    TraceOperation 090936 (Print "can't take other people rule");
    GamePrint "can't take other people rule";
    TraceOperation 090957 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 090958
  }
LocOp 090958:
  TraceOperation 090958 (Je [Var (Local 1),Con 15610] (Branch F (Dloc 090988)));
  if (Equal(GetLocal(1),15610)) {
    TraceOperation 090964 (Print "can't take component parts rule");
    GamePrint "can't take component parts rule";
    TraceOperation 090987 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 090988
  }
LocOp 090988:
  TraceOperation 090988 (Je [Var (Local 1),Con 15626] (Branch F (Dloc 090998)));
  if (Equal(GetLocal(1),15626)) {
    TraceOperation 090994 (Print_paddr (Con 32640));
    Note "<static Gettext address>";
    GamePrint "can't take people's possessions rule";
    TraceOperation 090997 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 090998
  }
LocOp 090998:
  TraceOperation 090998 (Je [Var (Local 1),Con 15646] (Branch F (Dloc 091008)));
  if (Equal(GetLocal(1),15646)) {
    TraceOperation 091004 (Print_paddr (Con 32647));
    Note "<static Gettext address>";
    GamePrint "can't take items out of play rule";
    TraceOperation 091007 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 091008
  }
LocOp 091008:
  TraceOperation 091008 (Je [Var (Local 1),Con 15662] (Branch F (Dloc 091018)));
  if (Equal(GetLocal(1),15662)) {
    TraceOperation 091014 (Print_paddr (Con 32653));
    Note "<static Gettext address>";
    GamePrint "can't take what you're inside rule";
    TraceOperation 091017 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 091018
  }
LocOp 091018:
  TraceOperation 091018 (Je [Var (Local 1),Con 15674] (Branch F (Dloc 091028)));
  if (Equal(GetLocal(1),15674)) {
    TraceOperation 091024 (Print_paddr (Con 32659));
    Note "<static Gettext address>";
    GamePrint "can't take what's already taken rule";
    TraceOperation 091027 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 091028
  }
LocOp 091028:
  TraceOperation 091028 (Je [Var (Local 1),Con 15691] (Branch F (Dloc 091052)));
  if (Equal(GetLocal(1),15691)) {
    TraceOperation 091034 (Print "can't take scenery rule");
    GamePrint "can't take scenery rule";
    TraceOperation 091051 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 091052
  }
LocOp 091052:
  TraceOperation 091052 (Je [Var (Local 1),Con 15703] (Branch F (Dloc 091078)));
  if (Equal(GetLocal(1),15703)) {
    TraceOperation 091058 (Print "can only take things rule");
    GamePrint "can only take things rule";
    TraceOperation 091077 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 091078
  }
LocOp 091078:
  TraceOperation 091078 (Je [Var (Local 1),Con 15715] (Branch F (Dloc 091088)));
  if (Equal(GetLocal(1),15715)) {
    TraceOperation 091084 (Print_paddr (Con 32666));
    Note "<static Gettext address>";
    GamePrint "can't take what's fixed in place rule";
    TraceOperation 091087 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 091088
  }
LocOp 091088:
  TraceOperation 091088 (Je [Var (Local 1),Con 15727] (Branch F (Dloc 091098)));
  if (Equal(GetLocal(1),15727)) {
    TraceOperation 091094 (Print_paddr (Con 32673));
    Note "<static Gettext address>";
    GamePrint "use player's holdall to avoid exceeding carrying capacity rule";
    TraceOperation 091097 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 091098
  }
LocOp 091098:
  TraceOperation 091098 (Je [Var (Local 1),Con 15767] (Branch F (Dloc 091108)));
  if (Equal(GetLocal(1),15767)) {
    TraceOperation 091104 (Print_paddr (Con 32684));
    Note "<static Gettext address>";
    GamePrint "can't exceed carrying capacity rule";
    TraceOperation 091107 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 091108
  }
LocOp 091108:
  TraceOperation 091108 (Je [Var (Local 1),Con 15781] (Branch F (Dloc 091130)));
  if (Equal(GetLocal(1),15781)) {
    TraceOperation 091114 (Print "standard taking rule");
    GamePrint "standard taking rule";
    TraceOperation 091129 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 091130
  }
LocOp 091130:
  TraceOperation 091130 (Je [Var (Local 1),Con 15790] (Branch F (Dloc 091156)));
  if (Equal(GetLocal(1),15790)) {
    TraceOperation 091136 (Print "standard report taking rule");
    GamePrint "standard report taking rule";
    TraceOperation 091155 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 091156
  }
LocOp 091156:
  TraceOperation 091156 (Je [Var (Local 1),Con 15803] (Branch F (Dloc 091166)));
  if (Equal(GetLocal(1),15803)) {
    TraceOperation 091162 (Print_paddr (Con 32690));
    Note "<static Gettext address>";
    GamePrint "can't remove what's not inside rule";
    TraceOperation 091165 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 091166
  }
LocOp 091166:
  TraceOperation 091166 (Je [Var (Local 1),Con 15818] (Branch F (Dloc 091194)));
  if (Equal(GetLocal(1),15818)) {
    TraceOperation 091172 (Print "can't remove from people rule");
    GamePrint "can't remove from people rule";
    TraceOperation 091193 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 091194
  }
LocOp 091194:
  TraceOperation 091194 (Je [Var (Local 1),Con 15836] (Branch F (Dloc 091220)));
  if (Equal(GetLocal(1),15836)) {
    TraceOperation 091200 (Print "convert remove to take rule");
    GamePrint "convert remove to take rule";
    TraceOperation 091219 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 091220
  }
LocOp 091220:
  TraceOperation 091220 (Je [Var (Local 1),Con 15847] (Branch F (Dloc 091246)));
  if (Equal(GetLocal(1),15847)) {
    TraceOperation 091226 (Print "can't drop yourself rule");
    GamePrint "can't drop yourself rule";
    TraceOperation 091245 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 091246
  }
LocOp 091246:
  TraceOperation 091246 (Je [Var (Local 1),Con 15858] (Branch F (Dloc 091256)));
  if (Equal(GetLocal(1),15858)) {
    TraceOperation 091252 (Print_paddr (Con 32697));
    Note "<static Gettext address>";
    GamePrint "can't drop what's already dropped rule";
    TraceOperation 091255 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 091256
  }
LocOp 091256:
  TraceOperation 091256 (Je [Var (Local 1),Con 15872] (Branch F (Dloc 091286)));
  if (Equal(GetLocal(1),15872)) {
    TraceOperation 091262 (Print "can't drop what's not held rule");
    GamePrint "can't drop what's not held rule";
    TraceOperation 091285 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 091286
  }
LocOp 091286:
  TraceOperation 091286 (Je [Var (Local 1),Con 15886] (Branch F (Dloc 091296)));
  if (Equal(GetLocal(1),15886)) {
    TraceOperation 091292 (Print_paddr (Con 32704));
    Note "<static Gettext address>";
    GamePrint "can't drop clothes being worn rule";
    TraceOperation 091295 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 091296
  }
LocOp 091296:
  TraceOperation 091296 (Je [Var (Local 1),Con 15905] (Branch F (Dloc 091306)));
  if (Equal(GetLocal(1),15905)) {
    TraceOperation 091302 (Print_paddr (Con 32710));
    Note "<static Gettext address>";
    GamePrint "can't drop if this exceeds carrying capacity rule";
    TraceOperation 091305 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 091306
  }
LocOp 091306:
  TraceOperation 091306 (Je [Var (Local 1),Con 15940] (Branch F (Dloc 091330)));
  if (Equal(GetLocal(1),15940)) {
    TraceOperation 091312 (Print "standard dropping rule");
    GamePrint "standard dropping rule";
    TraceOperation 091329 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 091330
  }
LocOp 091330:
  TraceOperation 091330 (Je [Var (Local 1),Con 15950] (Branch F (Dloc 091358)));
  if (Equal(GetLocal(1),15950)) {
    TraceOperation 091336 (Print "standard report dropping rule");
    GamePrint "standard report dropping rule";
    TraceOperation 091357 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 091358
  }
LocOp 091358:
  TraceOperation 091358 (Je [Var (Local 1),Con 15963] (Branch F (Dloc 091368)));
  if (Equal(GetLocal(1),15963)) {
    TraceOperation 091364 (Print_paddr (Con 32719));
    Note "<static Gettext address>";
    GamePrint "convert put to drop where possible rule";
    TraceOperation 091367 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 091368
  }
LocOp 091368:
  TraceOperation 091368 (Je [Var (Local 1),Con 15979] (Branch F (Dloc 091398)));
  if (Equal(GetLocal(1),15979)) {
    TraceOperation 091374 (Print "can't put what's not held rule");
    GamePrint "can't put what's not held rule";
    TraceOperation 091397 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 091398
  }
LocOp 091398:
  TraceOperation 091398 (Je [Var (Local 1),Con 15996] (Branch F (Dloc 091408)));
  if (Equal(GetLocal(1),15996)) {
    TraceOperation 091404 (Print_paddr (Con 32726));
    Note "<static Gettext address>";
    GamePrint "can't put something on itself rule";
    TraceOperation 091407 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 091408
  }
LocOp 091408:
  TraceOperation 091408 (Je [Var (Local 1),Con 16014] (Branch F (Dloc 091418)));
  if (Equal(GetLocal(1),16014)) {
    TraceOperation 091414 (Print_paddr (Con 32732));
    Note "<static Gettext address>";
    GamePrint "can't put onto what's not a supporter rule";
    TraceOperation 091417 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 091418
  }
LocOp 091418:
  TraceOperation 091418 (Je [Var (Local 1),Con 16028] (Branch F (Dloc 091428)));
  if (Equal(GetLocal(1),16028)) {
    TraceOperation 091424 (Print_paddr (Con 32740));
    Note "<static Gettext address>";
    GamePrint "can't put onto something being carried rule";
    TraceOperation 091427 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 091428
  }
LocOp 091428:
  TraceOperation 091428 (Je [Var (Local 1),Con 16043] (Branch F (Dloc 091438)));
  if (Equal(GetLocal(1),16043)) {
    TraceOperation 091434 (Print_paddr (Con 32748));
    Note "<static Gettext address>";
    GamePrint "can't put clothes being worn rule";
    TraceOperation 091437 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 091438
  }
LocOp 091438:
  TraceOperation 091438 (Je [Var (Local 1),Con 16065] (Branch F (Dloc 091448)));
  if (Equal(GetLocal(1),16065)) {
    TraceOperation 091444 (Print_paddr (Con 32754));
    Note "<static Gettext address>";
    GamePrint "can't put if this exceeds carrying capacity rule";
    TraceOperation 091447 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 091448
  }
LocOp 091448:
  TraceOperation 091448 (Je [Var (Local 1),Con 16084] (Branch F (Dloc 091470)));
  if (Equal(GetLocal(1),16084)) {
    TraceOperation 091454 (Print "standard putting rule");
    GamePrint "standard putting rule";
    TraceOperation 091469 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 091470
  }
LocOp 091470:
  TraceOperation 091470 (Je [Var (Local 1),Con 16095] (Branch F (Dloc 091496)));
  if (Equal(GetLocal(1),16095)) {
    TraceOperation 091476 (Print "concise report putting rule");
    GamePrint "concise report putting rule";
    TraceOperation 091495 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 091496
  }
LocOp 091496:
  TraceOperation 091496 (Je [Var (Local 1),Con 16109] (Branch F (Dloc 091524)));
  if (Equal(GetLocal(1),16109)) {
    TraceOperation 091502 (Print "standard report putting rule");
    GamePrint "standard report putting rule";
    TraceOperation 091523 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 091524
  }
LocOp 091524:
  TraceOperation 091524 (Je [Var (Local 1),Con 16124] (Branch F (Dloc 091534)));
  if (Equal(GetLocal(1),16124)) {
    TraceOperation 091530 (Print_paddr (Con 32763));
    Note "<static Gettext address>";
    GamePrint "convert insert to drop where possible rule";
    TraceOperation 091533 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 091534
  }
LocOp 091534:
  TraceOperation 091534 (Je [Var (Local 1),Con 16140] (Branch F (Dloc 091544)));
  if (Equal(GetLocal(1),16140)) {
    TraceOperation 091540 (Print_paddr (Con -32766));
    Note "<static Gettext address>";
    GamePrint "can't insert what's not held rule";
    TraceOperation 091543 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 091544
  }
LocOp 091544:
  TraceOperation 091544 (Je [Var (Local 1),Con 16157] (Branch F (Dloc 091554)));
  if (Equal(GetLocal(1),16157)) {
    TraceOperation 091550 (Print_paddr (Con -32760));
    Note "<static Gettext address>";
    GamePrint "can't insert something into itself rule";
    TraceOperation 091553 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 091554
  }
LocOp 091554:
  TraceOperation 091554 (Je [Var (Local 1),Con 16175] (Branch F (Dloc 091564)));
  if (Equal(GetLocal(1),16175)) {
    TraceOperation 091560 (Print_paddr (Con -32753));
    Note "<static Gettext address>";
    GamePrint "can't insert into closed containers rule";
    TraceOperation 091563 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 091564
  }
LocOp 091564:
  TraceOperation 091564 (Je [Var (Local 1),Con 16192] (Branch F (Dloc 091574)));
  if (Equal(GetLocal(1),16192)) {
    TraceOperation 091570 (Print_paddr (Con -32746));
    Note "<static Gettext address>";
    GamePrint "can't insert into what's not a container rule";
    TraceOperation 091573 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 091574
  }
LocOp 091574:
  TraceOperation 091574 (Je [Var (Local 1),Con 16206] (Branch F (Dloc 091584)));
  if (Equal(GetLocal(1),16206)) {
    TraceOperation 091580 (Print_paddr (Con -32738));
    Note "<static Gettext address>";
    GamePrint "can't insert clothes being worn rule";
    TraceOperation 091583 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 091584
  }
LocOp 091584:
  TraceOperation 091584 (Je [Var (Local 1),Con 16228] (Branch F (Dloc 091594)));
  if (Equal(GetLocal(1),16228)) {
    TraceOperation 091590 (Print_paddr (Con -32731));
    Note "<static Gettext address>";
    GamePrint "can't insert if this exceeds carrying capacity rule";
    TraceOperation 091593 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 091594
  }
LocOp 091594:
  TraceOperation 091594 (Je [Var (Local 1),Con 16247] (Branch F (Dloc 091618)));
  if (Equal(GetLocal(1),16247)) {
    TraceOperation 091600 (Print "standard inserting rule");
    GamePrint "standard inserting rule";
    TraceOperation 091617 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 091618
  }
LocOp 091618:
  TraceOperation 091618 (Je [Var (Local 1),Con 16258] (Branch F (Dloc 091646)));
  if (Equal(GetLocal(1),16258)) {
    TraceOperation 091624 (Print "concise report inserting rule");
    GamePrint "concise report inserting rule";
    TraceOperation 091645 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 091646
  }
LocOp 091646:
  TraceOperation 091646 (Je [Var (Local 1),Con 16272] (Branch F (Dloc 091674)));
  if (Equal(GetLocal(1),16272)) {
    TraceOperation 091652 (Print "standard report inserting rule");
    GamePrint "standard report inserting rule";
    TraceOperation 091673 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 091674
  }
LocOp 091674:
  TraceOperation 091674 (Je [Var (Local 1),Con 16287] (Branch F (Dloc 091702)));
  if (Equal(GetLocal(1),16287)) {
    TraceOperation 091680 (Print "can't eat unless edible rule");
    GamePrint "can't eat unless edible rule";
    TraceOperation 091701 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 091702
  }
LocOp 091702:
  TraceOperation 091702 (Je [Var (Local 1),Con 16301] (Branch F (Dloc 091712)));
  if (Equal(GetLocal(1),16301)) {
    TraceOperation 091708 (Print_paddr (Con -32722));
    Note "<static Gettext address>";
    GamePrint "can't eat clothing without removing it first rule";
    TraceOperation 091711 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 091712
  }
LocOp 091712:
  TraceOperation 091712 (Je [Var (Local 1),Con 16318] (Branch F (Dloc 091734)));
  if (Equal(GetLocal(1),16318)) {
    TraceOperation 091718 (Print "standard eating rule");
    GamePrint "standard eating rule";
    TraceOperation 091733 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 091734
  }
LocOp 091734:
  TraceOperation 091734 (Je [Var (Local 1),Con 16327] (Branch F (Dloc 091760)));
  if (Equal(GetLocal(1),16327)) {
    TraceOperation 091740 (Print "standard report eating rule");
    GamePrint "standard report eating rule";
    TraceOperation 091759 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 091760
  }
LocOp 091760:
  TraceOperation 091760 (Je [Var (Local 1),Con 14350] (Branch F (Dloc 091770)));
  if (Equal(GetLocal(1),14350)) {
    TraceOperation 091766 (Print_paddr (Con -32713));
    Note "<static Gettext address>";
    GamePrint "standard set going variables rule";
    TraceOperation 091769 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 091770
  }
LocOp 091770:
  TraceOperation 091770 (Je [Var (Local 1),Con 16340] (Branch F (Dloc 091780)));
  if (Equal(GetLocal(1),16340)) {
    TraceOperation 091776 (Print_paddr (Con -32707));
    Note "<static Gettext address>";
    GamePrint "can't travel in what's not a vehicle rule";
    TraceOperation 091779 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 091780
  }
LocOp 091780:
  TraceOperation 091780 (Je [Var (Local 1),Con 16360] (Branch F (Dloc 091790)));
  if (Equal(GetLocal(1),16360)) {
    TraceOperation 091786 (Print_paddr (Con -32699));
    Note "<static Gettext address>";
    GamePrint "can't go through undescribed doors rule";
    TraceOperation 091789 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 091790
  }
LocOp 091790:
  TraceOperation 091790 (Je [Var (Local 1),Con 16384] (Branch F (Dloc 091800)));
  if (Equal(GetLocal(1),16384)) {
    TraceOperation 091796 (Print_paddr (Con -32692));
    Note "<static Gettext address>";
    GamePrint "can't go through closed doors rule";
    TraceOperation 091799 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 091800
  }
LocOp 091800:
  TraceOperation 091800 (Je [Var (Local 1),Con 16422] (Branch F (Dloc 091828)));
  if (Equal(GetLocal(1),16422)) {
    TraceOperation 091806 (Print "determine map connection rule");
    GamePrint "determine map connection rule";
    TraceOperation 091827 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 091828
  }
LocOp 091828:
  TraceOperation 091828 (Je [Var (Local 1),Con 16457] (Branch F (Dloc 091852)));
  if (Equal(GetLocal(1),16457)) {
    TraceOperation 091834 (Print "can't go that way rule");
    GamePrint "can't go that way rule";
    TraceOperation 091851 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 091852
  }
LocOp 091852:
  TraceOperation 091852 (Je [Var (Local 1),Con 16485] (Branch F (Dloc 091880)));
  if (Equal(GetLocal(1),16485)) {
    TraceOperation 091858 (Print "move player and vehicle rule");
    GamePrint "move player and vehicle rule";
    TraceOperation 091879 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 091880
  }
LocOp 091880:
  TraceOperation 091880 (Je [Var (Local 1),Con 16511] (Branch F (Dloc 091906)));
  if (Equal(GetLocal(1),16511)) {
    TraceOperation 091886 (Print "move floating objects rule");
    GamePrint "move floating objects rule";
    TraceOperation 091905 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 091906
  }
LocOp 091906:
  TraceOperation 091906 (Je [Var (Local 1),Con 16520] (Branch F (Dloc 091936)));
  if (Equal(GetLocal(1),16520)) {
    TraceOperation 091912 (Print "check light in new location rule");
    GamePrint "check light in new location rule";
    TraceOperation 091935 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 091936
  }
LocOp 091936:
  TraceOperation 091936 (Je [Var (Local 1),Con 16529] (Branch F (Dloc 091964)));
  if (Equal(GetLocal(1),16529)) {
    TraceOperation 091942 (Print "describe room gone into rule");
    GamePrint "describe room gone into rule";
    TraceOperation 091963 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 091964
  }
LocOp 091964:
  TraceOperation 091964 (Je [Var (Local 1),Con 16713] (Branch F (Dloc 091994)));
  if (Equal(GetLocal(1),16713)) {
    TraceOperation 091970 (Print "convert enter door into go rule");
    GamePrint "convert enter door into go rule";
    TraceOperation 091993 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 091994
  }
LocOp 091994:
  TraceOperation 091994 (Je [Var (Local 1),Con 16725] (Branch F (Dloc 092004)));
  if (Equal(GetLocal(1),16725)) {
    TraceOperation 092000 (Print_paddr (Con -32686));
    Note "<static Gettext address>";
    GamePrint "convert enter compass direction into go rule";
    TraceOperation 092003 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 092004
  }
LocOp 092004:
  TraceOperation 092004 (Je [Var (Local 1),Con 16737] (Branch F (Dloc 092014)));
  if (Equal(GetLocal(1),16737)) {
    TraceOperation 092010 (Print_paddr (Con -32678));
    Note "<static Gettext address>";
    GamePrint "can't enter what's already entered rule";
    TraceOperation 092013 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 092014
  }
LocOp 092014:
  TraceOperation 092014 (Je [Var (Local 1),Con 16749] (Branch F (Dloc 092024)));
  if (Equal(GetLocal(1),16749)) {
    TraceOperation 092020 (Print_paddr (Con -32671));
    Note "<static Gettext address>";
    GamePrint "can't enter what's not enterable rule";
    TraceOperation 092023 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 092024
  }
LocOp 092024:
  TraceOperation 092024 (Je [Var (Local 1),Con 16761] (Branch F (Dloc 092034)));
  if (Equal(GetLocal(1),16761)) {
    TraceOperation 092030 (Print_paddr (Con -32664));
    Note "<static Gettext address>";
    GamePrint "can't enter closed containers rule";
    TraceOperation 092033 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 092034
  }
LocOp 092034:
  TraceOperation 092034 (Je [Var (Local 1),Con 16776] (Branch F (Dloc 092044)));
  if (Equal(GetLocal(1),16776)) {
    TraceOperation 092040 (Print_paddr (Con -32658));
    Note "<static Gettext address>";
    GamePrint "can't enter something carried rule";
    TraceOperation 092043 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 092044
  }
LocOp 092044:
  TraceOperation 092044 (Je [Var (Local 1),Con 16788] (Branch F (Dloc 092054)));
  if (Equal(GetLocal(1),16788)) {
    TraceOperation 092050 (Print_paddr (Con -32652));
    Note "<static Gettext address>";
    GamePrint "implicitly pass through other barriers rule";
    TraceOperation 092053 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 092054
  }
LocOp 092054:
  TraceOperation 092054 (Je [Var (Local 1),Con 16848] (Branch F (Dloc 092078)));
  if (Equal(GetLocal(1),16848)) {
    TraceOperation 092060 (Print "standard entering rule");
    GamePrint "standard entering rule";
    TraceOperation 092077 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 092078
  }
LocOp 092078:
  TraceOperation 092078 (Je [Var (Local 1),Con 16856] (Branch F (Dloc 092106)));
  if (Equal(GetLocal(1),16856)) {
    TraceOperation 092084 (Print "standard report entering rule");
    GamePrint "standard report entering rule";
    TraceOperation 092105 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 092106
  }
LocOp 092106:
  TraceOperation 092106 (Je [Var (Local 1),Con 16873] (Branch F (Dloc 092116)));
  if (Equal(GetLocal(1),16873)) {
    TraceOperation 092112 (Print_paddr (Con -32644));
    Note "<static Gettext address>";
    GamePrint "describe contents entered into rule";
    TraceOperation 092115 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 092116
  }
LocOp 092116:
  TraceOperation 092116 (Je [Var (Local 1),Con 16883] (Branch F (Dloc 092144)));
  if (Equal(GetLocal(1),16883)) {
    TraceOperation 092122 (Print "convert exit into go out rule");
    GamePrint "convert exit into go out rule";
    TraceOperation 092143 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 092144
  }
LocOp 092144:
  TraceOperation 092144 (Je [Var (Local 1),Con 16903] (Branch F (Dloc 092154)));
  if (Equal(GetLocal(1),16903)) {
    TraceOperation 092150 (Print_paddr (Con -32638));
    Note "<static Gettext address>";
    GamePrint "can't exit when not inside anything rule";
    TraceOperation 092153 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 092154
  }
LocOp 092154:
  TraceOperation 092154 (Je [Var (Local 1),Con 16919] (Branch F (Dloc 092164)));
  if (Equal(GetLocal(1),16919)) {
    TraceOperation 092160 (Print_paddr (Con -32631));
    Note "<static Gettext address>";
    GamePrint "can't exit closed containers rule";
    TraceOperation 092163 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 092164
  }
LocOp 092164:
  TraceOperation 092164 (Je [Var (Local 1),Con 16939] (Branch F (Dloc 092192)));
  if (Equal(GetLocal(1),16939)) {
    TraceOperation 092170 (Print "convert exit into get off rule");
    GamePrint "convert exit into get off rule";
    TraceOperation 092191 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 092192
  }
LocOp 092192:
  TraceOperation 092192 (Je [Var (Local 1),Con 16955] (Branch F (Dloc 092214)));
  if (Equal(GetLocal(1),16955)) {
    TraceOperation 092198 (Print "standard exiting rule");
    GamePrint "standard exiting rule";
    TraceOperation 092213 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 092214
  }
LocOp 092214:
  TraceOperation 092214 (Je [Var (Local 1),Con 16968] (Branch F (Dloc 092242)));
  if (Equal(GetLocal(1),16968)) {
    TraceOperation 092220 (Print "standard report exiting rule");
    GamePrint "standard report exiting rule";
    TraceOperation 092241 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 092242
  }
LocOp 092242:
  TraceOperation 092242 (Je [Var (Local 1),Con 16987] (Branch F (Dloc 092272)));
  if (Equal(GetLocal(1),16987)) {
    TraceOperation 092248 (Print "describe room emerged into rule");
    GamePrint "describe room emerged into rule";
    TraceOperation 092271 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 092272
  }
LocOp 092272:
  TraceOperation 092272 (Je [Var (Local 1),Con 16996] (Branch F (Dloc 092298)));
  if (Equal(GetLocal(1),16996)) {
    TraceOperation 092278 (Print "can't get off things rule");
    GamePrint "can't get off things rule";
    TraceOperation 092297 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 092298
  }
LocOp 092298:
  TraceOperation 092298 (Je [Var (Local 1),Con 17010] (Branch F (Dloc 092324)));
  if (Equal(GetLocal(1),17010)) {
    TraceOperation 092304 (Print "standard getting off rule");
    GamePrint "standard getting off rule";
    TraceOperation 092323 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 092324
  }
LocOp 092324:
  TraceOperation 092324 (Je [Var (Local 1),Con 17020] (Branch F (Dloc 092354)));
  if (Equal(GetLocal(1),17020)) {
    TraceOperation 092330 (Print "standard report getting off rule");
    GamePrint "standard report getting off rule";
    TraceOperation 092353 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 092354
  }
LocOp 092354:
  TraceOperation 092354 (Je [Var (Local 1),Con 17032] (Branch F (Dloc 092384)));
  if (Equal(GetLocal(1),17032)) {
    TraceOperation 092360 (Print "describe room stood up into rule");
    GamePrint "describe room stood up into rule";
    TraceOperation 092383 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 092384
  }
LocOp 092384:
  TraceOperation 092384 (Je [Var (Local 1),Con 14411] (Branch F (Dloc 092394)));
  if (Equal(GetLocal(1),14411)) {
    TraceOperation 092390 (Print_paddr (Con -32625));
    Note "<static Gettext address>";
    GamePrint "determine visibility ceiling rule";
    TraceOperation 092393 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 092394
  }
LocOp 092394:
  TraceOperation 092394 (Je [Var (Local 1),Con 17041] (Branch F (Dloc 092422)));
  if (Equal(GetLocal(1),17041)) {
    TraceOperation 092400 (Print "room description heading rule");
    GamePrint "room description heading rule";
    TraceOperation 092421 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 092422
  }
LocOp 092422:
  TraceOperation 092422 (Je [Var (Local 1),Con 17093] (Branch F (Dloc 092452)));
  if (Equal(GetLocal(1),17093)) {
    TraceOperation 092428 (Print "room description body text rule");
    GamePrint "room description body text rule";
    TraceOperation 092451 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 092452
  }
LocOp 092452:
  TraceOperation 092452 (Je [Var (Local 1),Con 17138] (Branch F (Dloc 092462)));
  if (Equal(GetLocal(1),17138)) {
    TraceOperation 092458 (Print_paddr (Con -32619));
    Note "<static Gettext address>";
    GamePrint "room description paragraphs about objects rule";
    TraceOperation 092461 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 092462
  }
LocOp 092462:
  TraceOperation 092462 (Je [Var (Local 1),Con 17173] (Branch F (Dloc 092486)));
  if (Equal(GetLocal(1),17173)) {
    TraceOperation 092468 (Print "check new arrival rule");
    GamePrint "check new arrival rule";
    TraceOperation 092485 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 092486
  }
LocOp 092486:
  TraceOperation 092486 (Je [Var (Local 1),Con 17188] (Branch F (Dloc 092512)));
  if (Equal(GetLocal(1),17188)) {
    TraceOperation 092492 (Print "other people looking rule");
    GamePrint "other people looking rule";
    TraceOperation 092511 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 092512
  }
LocOp 092512:
  TraceOperation 092512 (Je [Var (Local 1),Con 17198] (Branch F (Dloc 092522)));
  if (Equal(GetLocal(1),17198)) {
    TraceOperation 092518 (Print_paddr (Con -32611));
    Note "<static Gettext address>";
    GamePrint "examine undescribed containers rule";
    TraceOperation 092521 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 092522
  }
LocOp 092522:
  TraceOperation 092522 (Je [Var (Local 1),Con 17213] (Branch F (Dloc 092552)));
  if (Equal(GetLocal(1),17213)) {
    TraceOperation 092528 (Print "examine undescribed devices rule");
    GamePrint "examine undescribed devices rule";
    TraceOperation 092551 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 092552
  }
LocOp 092552:
  TraceOperation 092552 (Je [Var (Local 1),Con 17228] (Branch F (Dloc 092582)));
  if (Equal(GetLocal(1),17228)) {
    TraceOperation 092558 (Print "examine undescribed things rule");
    GamePrint "examine undescribed things rule";
    TraceOperation 092581 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 092582
  }
LocOp 092582:
  TraceOperation 092582 (Je [Var (Local 1),Con 17240] (Branch F (Dloc 092606)));
  if (Equal(GetLocal(1),17240)) {
    TraceOperation 092588 (Print "examine directions rule");
    GamePrint "examine directions rule";
    TraceOperation 092605 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 092606
  }
LocOp 092606:
  TraceOperation 092606 (Je [Var (Local 1),Con 17252] (Branch F (Dloc 092630)));
  if (Equal(GetLocal(1),17252)) {
    TraceOperation 092612 (Print "standard examining rule");
    GamePrint "standard examining rule";
    TraceOperation 092629 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 092630
  }
LocOp 092630:
  TraceOperation 092630 (Je [Var (Local 1),Con 17267] (Branch F (Dloc 092658)));
  if (Equal(GetLocal(1),17267)) {
    TraceOperation 092636 (Print "examine described devices rule");
    GamePrint "examine described devices rule";
    TraceOperation 092657 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 092658
  }
LocOp 092658:
  TraceOperation 092658 (Je [Var (Local 1),Con 17279] (Branch F (Dloc 092668)));
  if (Equal(GetLocal(1),17279)) {
    TraceOperation 092664 (Print_paddr (Con -32605));
    Note "<static Gettext address>";
    GamePrint "report other people examining rule";
    TraceOperation 092667 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 092668
  }
LocOp 092668:
  TraceOperation 092668 (Je [Var (Local 1),Con 17289] (Branch F (Dloc 092694)));
  if (Equal(GetLocal(1),17289)) {
    TraceOperation 092674 (Print "standard looking under rule");
    GamePrint "standard looking under rule";
    TraceOperation 092693 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 092694
  }
LocOp 092694:
  TraceOperation 092694 (Je [Var (Local 1),Con 17298] (Branch F (Dloc 092704)));
  if (Equal(GetLocal(1),17298)) {
    TraceOperation 092700 (Print_paddr (Con -32599));
    Note "<static Gettext address>";
    GamePrint "report other people looking under rule";
    TraceOperation 092703 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 092704
  }
LocOp 092704:
  TraceOperation 092704 (Je [Var (Local 1),Con 17308] (Branch F (Dloc 092714)));
  if (Equal(GetLocal(1),17308)) {
    TraceOperation 092710 (Print_paddr (Con -32592));
    Note "<static Gettext address>";
    GamePrint "can't search unless container or supporter rule";
    TraceOperation 092713 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 092714
  }
LocOp 092714:
  TraceOperation 092714 (Je [Var (Local 1),Con 17322] (Branch F (Dloc 092724)));
  if (Equal(GetLocal(1),17322)) {
    TraceOperation 092720 (Print_paddr (Con -32584));
    Note "<static Gettext address>";
    GamePrint "can't search closed opaque containers rule";
    TraceOperation 092723 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 092724
  }
LocOp 092724:
  TraceOperation 092724 (Je [Var (Local 1),Con 17339] (Branch F (Dloc 092754)));
  if (Equal(GetLocal(1),17339)) {
    TraceOperation 092730 (Print "standard search containers rule");
    GamePrint "standard search containers rule";
    TraceOperation 092753 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 092754
  }
LocOp 092754:
  TraceOperation 092754 (Je [Var (Local 1),Con 17356] (Branch F (Dloc 092784)));
  if (Equal(GetLocal(1),17356)) {
    TraceOperation 092760 (Print "standard search supporters rule");
    GamePrint "standard search supporters rule";
    TraceOperation 092783 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 092784
  }
LocOp 092784:
  TraceOperation 092784 (Je [Var (Local 1),Con 17373] (Branch F (Dloc 092794)));
  if (Equal(GetLocal(1),17373)) {
    TraceOperation 092790 (Print_paddr (Con -32576));
    Note "<static Gettext address>";
    GamePrint "report other people searching rule";
    TraceOperation 092793 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 092794
  }
LocOp 092794:
  TraceOperation 092794 (Je [Var (Local 1),Con 17383] (Branch F (Dloc 092816)));
  if (Equal(GetLocal(1),17383)) {
    TraceOperation 092800 (Print "block consulting rule");
    GamePrint "block consulting rule";
    TraceOperation 092815 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 092816
  }
LocOp 092816:
  TraceOperation 092816 (Je [Var (Local 1),Con 17398] (Branch F (Dloc 092846)));
  if (Equal(GetLocal(1),17398)) {
    TraceOperation 092822 (Print "can't lock without a lock rule");
    GamePrint "can't lock without a lock rule";
    TraceOperation 092845 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 092846
  }
LocOp 092846:
  TraceOperation 092846 (Je [Var (Local 1),Con 17415] (Branch F (Dloc 092856)));
  if (Equal(GetLocal(1),17415)) {
    TraceOperation 092852 (Print_paddr (Con -32570));
    Note "<static Gettext address>";
    GamePrint "can't lock what's already locked rule";
    TraceOperation 092855 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 092856
  }
LocOp 092856:
  TraceOperation 092856 (Je [Var (Local 1),Con 17430] (Branch F (Dloc 092884)));
  if (Equal(GetLocal(1),17430)) {
    TraceOperation 092862 (Print "can't lock what's open rule");
    GamePrint "can't lock what's open rule";
    TraceOperation 092883 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 092884
  }
LocOp 092884:
  TraceOperation 092884 (Je [Var (Local 1),Con 17445] (Branch F (Dloc 092894)));
  if (Equal(GetLocal(1),17445)) {
    TraceOperation 092890 (Print_paddr (Con -32563));
    Note "<static Gettext address>";
    GamePrint "can't lock without the correct key rule";
    TraceOperation 092893 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 092894
  }
LocOp 092894:
  TraceOperation 092894 (Je [Var (Local 1),Con 17465] (Branch F (Dloc 092916)));
  if (Equal(GetLocal(1),17465)) {
    TraceOperation 092900 (Print "standard locking rule");
    GamePrint "standard locking rule";
    TraceOperation 092915 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 092916
  }
LocOp 092916:
  TraceOperation 092916 (Je [Var (Local 1),Con 17476] (Branch F (Dloc 092944)));
  if (Equal(GetLocal(1),17476)) {
    TraceOperation 092922 (Print "standard report locking rule");
    GamePrint "standard report locking rule";
    TraceOperation 092943 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 092944
  }
LocOp 092944:
  TraceOperation 092944 (Je [Var (Local 1),Con 17493] (Branch F (Dloc 092974)));
  if (Equal(GetLocal(1),17493)) {
    TraceOperation 092950 (Print "can't unlock without a lock rule");
    GamePrint "can't unlock without a lock rule";
    TraceOperation 092973 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 092974
  }
LocOp 092974:
  TraceOperation 092974 (Je [Var (Local 1),Con 17510] (Branch F (Dloc 092984)));
  if (Equal(GetLocal(1),17510)) {
    TraceOperation 092980 (Print_paddr (Con -32556));
    Note "<static Gettext address>";
    GamePrint "can't unlock what's already unlocked rule";
    TraceOperation 092983 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 092984
  }
LocOp 092984:
  TraceOperation 092984 (Je [Var (Local 1),Con 17525] (Branch F (Dloc 092994)));
  if (Equal(GetLocal(1),17525)) {
    TraceOperation 092990 (Print_paddr (Con -32548));
    Note "<static Gettext address>";
    GamePrint "can't unlock without the correct key rule";
    TraceOperation 092993 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 092994
  }
LocOp 092994:
  TraceOperation 092994 (Je [Var (Local 1),Con 17545] (Branch F (Dloc 093018)));
  if (Equal(GetLocal(1),17545)) {
    TraceOperation 093000 (Print "standard unlocking rule");
    GamePrint "standard unlocking rule";
    TraceOperation 093017 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 093018
  }
LocOp 093018:
  TraceOperation 093018 (Je [Var (Local 1),Con 17557] (Branch F (Dloc 093046)));
  if (Equal(GetLocal(1),17557)) {
    TraceOperation 093024 (Print "standard report unlocking rule");
    GamePrint "standard report unlocking rule";
    TraceOperation 093045 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 093046
  }
LocOp 093046:
  TraceOperation 093046 (Je [Var (Local 1),Con 17574] (Branch F (Dloc 093056)));
  if (Equal(GetLocal(1),17574)) {
    TraceOperation 093052 (Print_paddr (Con -32541));
    Note "<static Gettext address>";
    GamePrint "can't switch on unless switchable rule";
    TraceOperation 093055 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 093056
  }
LocOp 093056:
  TraceOperation 093056 (Je [Var (Local 1),Con 17586] (Branch F (Dloc 093066)));
  if (Equal(GetLocal(1),17586)) {
    TraceOperation 093062 (Print_paddr (Con -32534));
    Note "<static Gettext address>";
    GamePrint "can't switch on what's already on rule";
    TraceOperation 093065 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 093066
  }
LocOp 093066:
  TraceOperation 093066 (Je [Var (Local 1),Con 17598] (Branch F (Dloc 093092)));
  if (Equal(GetLocal(1),17598)) {
    TraceOperation 093072 (Print "standard switching on rule");
    GamePrint "standard switching on rule";
    TraceOperation 093091 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 093092
  }
LocOp 093092:
  TraceOperation 093092 (Je [Var (Local 1),Con 17607] (Branch F (Dloc 093102)));
  if (Equal(GetLocal(1),17607)) {
    TraceOperation 093098 (Print_paddr (Con -32527));
    Note "<static Gettext address>";
    GamePrint "standard report switching on rule";
    TraceOperation 093101 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 093102
  }
LocOp 093102:
  TraceOperation 093102 (Je [Var (Local 1),Con 17620] (Branch F (Dloc 093112)));
  if (Equal(GetLocal(1),17620)) {
    TraceOperation 093108 (Print_paddr (Con -32521));
    Note "<static Gettext address>";
    GamePrint "can't switch off unless switchable rule";
    TraceOperation 093111 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 093112
  }
LocOp 093112:
  TraceOperation 093112 (Je [Var (Local 1),Con 17632] (Branch F (Dloc 093122)));
  if (Equal(GetLocal(1),17632)) {
    TraceOperation 093118 (Print_paddr (Con -32514));
    Note "<static Gettext address>";
    GamePrint "can't switch off what's already off rule";
    TraceOperation 093121 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 093122
  }
LocOp 093122:
  TraceOperation 093122 (Je [Var (Local 1),Con 17644] (Branch F (Dloc 093148)));
  if (Equal(GetLocal(1),17644)) {
    TraceOperation 093128 (Print "standard switching off rule");
    GamePrint "standard switching off rule";
    TraceOperation 093147 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 093148
  }
LocOp 093148:
  TraceOperation 093148 (Je [Var (Local 1),Con 17653] (Branch F (Dloc 093158)));
  if (Equal(GetLocal(1),17653)) {
    TraceOperation 093154 (Print_paddr (Con -32507));
    Note "<static Gettext address>";
    GamePrint "standard report switching off rule";
    TraceOperation 093157 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 093158
  }
LocOp 093158:
  TraceOperation 093158 (Je [Var (Local 1),Con 17666] (Branch F (Dloc 093188)));
  if (Equal(GetLocal(1),17666)) {
    TraceOperation 093164 (Print "can't open unless openable rule");
    GamePrint "can't open unless openable rule";
    TraceOperation 093187 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 093188
  }
LocOp 093188:
  TraceOperation 093188 (Je [Var (Local 1),Con 17680] (Branch F (Dloc 093218)));
  if (Equal(GetLocal(1),17680)) {
    TraceOperation 093194 (Print "can't open what's locked rule");
    GamePrint "can't open what's locked rule";
    TraceOperation 093217 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 093218
  }
LocOp 093218:
  TraceOperation 093218 (Je [Var (Local 1),Con 17695] (Branch F (Dloc 093228)));
  if (Equal(GetLocal(1),17695)) {
    TraceOperation 093224 (Print_paddr (Con -32501));
    Note "<static Gettext address>";
    GamePrint "can't open what's already open rule";
    TraceOperation 093227 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 093228
  }
LocOp 093228:
  TraceOperation 093228 (Je [Var (Local 1),Con 17707] (Branch F (Dloc 093250)));
  if (Equal(GetLocal(1),17707)) {
    TraceOperation 093234 (Print "standard opening rule");
    GamePrint "standard opening rule";
    TraceOperation 093249 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 093250
  }
LocOp 093250:
  TraceOperation 093250 (Je [Var (Local 1),Con 17716] (Branch F (Dloc 093260)));
  if (Equal(GetLocal(1),17716)) {
    TraceOperation 093256 (Print_paddr (Con -32494));
    Note "<static Gettext address>";
    GamePrint "reveal any newly visible interior rule";
    TraceOperation 093259 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 093260
  }
LocOp 093260:
  TraceOperation 093260 (Je [Var (Local 1),Con 17736] (Branch F (Dloc 093288)));
  if (Equal(GetLocal(1),17736)) {
    TraceOperation 093266 (Print "standard report opening rule");
    GamePrint "standard report opening rule";
    TraceOperation 093287 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 093288
  }
LocOp 093288:
  TraceOperation 093288 (Je [Var (Local 1),Con 17754] (Branch F (Dloc 093318)));
  if (Equal(GetLocal(1),17754)) {
    TraceOperation 093294 (Print "can't close unless openable rule");
    GamePrint "can't close unless openable rule";
    TraceOperation 093317 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 093318
  }
LocOp 093318:
  TraceOperation 093318 (Je [Var (Local 1),Con 17768] (Branch F (Dloc 093328)));
  if (Equal(GetLocal(1),17768)) {
    TraceOperation 093324 (Print_paddr (Con -32487));
    Note "<static Gettext address>";
    GamePrint "can't close what's already closed rule";
    TraceOperation 093327 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 093328
  }
LocOp 093328:
  TraceOperation 093328 (Je [Var (Local 1),Con 17780] (Branch F (Dloc 093350)));
  if (Equal(GetLocal(1),17780)) {
    TraceOperation 093334 (Print "standard closing rule");
    GamePrint "standard closing rule";
    TraceOperation 093349 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 093350
  }
LocOp 093350:
  TraceOperation 093350 (Je [Var (Local 1),Con 17789] (Branch F (Dloc 093378)));
  if (Equal(GetLocal(1),17789)) {
    TraceOperation 093356 (Print "standard report closing rule");
    GamePrint "standard report closing rule";
    TraceOperation 093377 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 093378
  }
LocOp 093378:
  TraceOperation 093378 (Je [Var (Local 1),Con 17807] (Branch F (Dloc 093388)));
  if (Equal(GetLocal(1),17807)) {
    TraceOperation 093384 (Print_paddr (Con -32480));
    Note "<static Gettext address>";
    GamePrint "can't wear what's not clothing rule";
    TraceOperation 093387 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 093388
  }
LocOp 093388:
  TraceOperation 093388 (Je [Var (Local 1),Con 17821] (Branch F (Dloc 093418)));
  if (Equal(GetLocal(1),17821)) {
    TraceOperation 093394 (Print "can't wear what's not held rule");
    GamePrint "can't wear what's not held rule";
    TraceOperation 093417 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 093418
  }
LocOp 093418:
  TraceOperation 093418 (Je [Var (Local 1),Con 17833] (Branch F (Dloc 093428)));
  if (Equal(GetLocal(1),17833)) {
    TraceOperation 093424 (Print_paddr (Con -32473));
    Note "<static Gettext address>";
    GamePrint "can't wear what's already worn rule";
    TraceOperation 093427 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 093428
  }
LocOp 093428:
  TraceOperation 093428 (Je [Var (Local 1),Con 17845] (Branch F (Dloc 093450)));
  if (Equal(GetLocal(1),17845)) {
    TraceOperation 093434 (Print "standard wearing rule");
    GamePrint "standard wearing rule";
    TraceOperation 093449 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 093450
  }
LocOp 093450:
  TraceOperation 093450 (Je [Var (Local 1),Con 17854] (Branch F (Dloc 093478)));
  if (Equal(GetLocal(1),17854)) {
    TraceOperation 093456 (Print "standard report wearing rule");
    GamePrint "standard report wearing rule";
    TraceOperation 093477 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 093478
  }
LocOp 093478:
  TraceOperation 093478 (Je [Var (Local 1),Con 17867] (Branch F (Dloc 093488)));
  if (Equal(GetLocal(1),17867)) {
    TraceOperation 093484 (Print_paddr (Con -32466));
    Note "<static Gettext address>";
    GamePrint "can't take off what's not worn rule";
    TraceOperation 093487 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 093488
  }
LocOp 093488:
  TraceOperation 093488 (Je [Var (Local 1),Con 17879] (Branch F (Dloc 093512)));
  if (Equal(GetLocal(1),17879)) {
    TraceOperation 093494 (Print "standard taking off rule");
    GamePrint "standard taking off rule";
    TraceOperation 093511 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 093512
  }
LocOp 093512:
  TraceOperation 093512 (Je [Var (Local 1),Con 17888] (Branch F (Dloc 093542)));
  if (Equal(GetLocal(1),17888)) {
    TraceOperation 093518 (Print "standard report taking off rule");
    GamePrint "standard report taking off rule";
    TraceOperation 093541 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 093542
  }
LocOp 093542:
  TraceOperation 093542 (Je [Var (Local 1),Con 17901] (Branch F (Dloc 093552)));
  if (Equal(GetLocal(1),17901)) {
    TraceOperation 093548 (Print_paddr (Con -32459));
    Note "<static Gettext address>";
    GamePrint "can't give what you haven't got rule";
    TraceOperation 093551 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 093552
  }
LocOp 093552:
  TraceOperation 093552 (Je [Var (Local 1),Con 17916] (Branch F (Dloc 093580)));
  if (Equal(GetLocal(1),17916)) {
    TraceOperation 093558 (Print "can't give to yourself rule");
    GamePrint "can't give to yourself rule";
    TraceOperation 093579 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 093580
  }
LocOp 093580:
  TraceOperation 093580 (Je [Var (Local 1),Con 17929] (Branch F (Dloc 093610)));
  if (Equal(GetLocal(1),17929)) {
    TraceOperation 093586 (Print "can't give to a non-person rule");
    GamePrint "can't give to a non-person rule";
    TraceOperation 093609 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 093610
  }
LocOp 093610:
  TraceOperation 093610 (Je [Var (Local 1),Con 17943] (Branch F (Dloc 093630)));
  if (Equal(GetLocal(1),17943)) {
    TraceOperation 093616 (Print "block giving rule");
    GamePrint "block giving rule";
    TraceOperation 093629 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 093630
  }
LocOp 093630:
  TraceOperation 093630 (Je [Var (Local 1),Con 17954] (Branch F (Dloc 093652)));
  if (Equal(GetLocal(1),17954)) {
    TraceOperation 093636 (Print "standard giving rule");
    GamePrint "standard giving rule";
    TraceOperation 093651 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 093652
  }
LocOp 093652:
  TraceOperation 093652 (Je [Var (Local 1),Con 17966] (Branch F (Dloc 093678)));
  if (Equal(GetLocal(1),17966)) {
    TraceOperation 093658 (Print "standard report giving rule");
    GamePrint "standard report giving rule";
    TraceOperation 093677 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 093678
  }
LocOp 093678:
  TraceOperation 093678 (Je [Var (Local 1),Con 17985] (Branch F (Dloc 093688)));
  if (Equal(GetLocal(1),17985)) {
    TraceOperation 093684 (Print_paddr (Con -32452));
    Note "<static Gettext address>";
    GamePrint "can't show what you haven't got rule";
    TraceOperation 093687 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 093688
  }
LocOp 093688:
  TraceOperation 093688 (Je [Var (Local 1),Con 18000] (Branch F (Dloc 093698)));
  if (Equal(GetLocal(1),18000)) {
    TraceOperation 093694 (Print_paddr (Con -32445));
    Note "<static Gettext address>";
    GamePrint "convert show to yourself to examine rule";
    TraceOperation 093697 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 093698
  }
LocOp 093698:
  TraceOperation 093698 (Je [Var (Local 1),Con 18013] (Branch F (Dloc 093718)));
  if (Equal(GetLocal(1),18013)) {
    TraceOperation 093704 (Print "block showing rule");
    GamePrint "block showing rule";
    TraceOperation 093717 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 093718
  }
LocOp 093718:
  TraceOperation 093718 (Je [Var (Local 1),Con 18024] (Branch F (Dloc 093738)));
  if (Equal(GetLocal(1),18024)) {
    TraceOperation 093724 (Print "block waking rule");
    GamePrint "block waking rule";
    TraceOperation 093737 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 093738
  }
LocOp 093738:
  TraceOperation 093738 (Je [Var (Local 1),Con 18033] (Branch F (Dloc 093748)));
  if (Equal(GetLocal(1),18033)) {
    TraceOperation 093744 (Print_paddr (Con -32438));
    Note "<static Gettext address>";
    GamePrint "implicitly remove thrown clothing rule";
    TraceOperation 093747 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 093748
  }
LocOp 093748:
  TraceOperation 093748 (Je [Var (Local 1),Con 18055] (Branch F (Dloc 093758)));
  if (Equal(GetLocal(1),18055)) {
    TraceOperation 093754 (Print_paddr (Con -32431));
    Note "<static Gettext address>";
    GamePrint "futile to throw things at inanimate objects rule";
    TraceOperation 093757 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 093758
  }
LocOp 093758:
  TraceOperation 093758 (Je [Var (Local 1),Con 18069] (Branch F (Dloc 093782)));
  if (Equal(GetLocal(1),18069)) {
    TraceOperation 093764 (Print "block throwing at rule");
    GamePrint "block throwing at rule";
    TraceOperation 093781 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 093782
  }
LocOp 093782:
  TraceOperation 093782 (Je [Var (Local 1),Con 18080] (Branch F (Dloc 093804)));
  if (Equal(GetLocal(1),18080)) {
    TraceOperation 093788 (Print "block attacking rule");
    GamePrint "block attacking rule";
    TraceOperation 093803 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 093804
  }
LocOp 093804:
  TraceOperation 093804 (Je [Var (Local 1),Con 18089] (Branch F (Dloc 093826)));
  if (Equal(GetLocal(1),18089)) {
    TraceOperation 093810 (Print "kissing yourself rule");
    GamePrint "kissing yourself rule";
    TraceOperation 093825 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 093826
  }
LocOp 093826:
  TraceOperation 093826 (Je [Var (Local 1),Con 18100] (Branch F (Dloc 093846)));
  if (Equal(GetLocal(1),18100)) {
    TraceOperation 093832 (Print "block kissing rule");
    GamePrint "block kissing rule";
    TraceOperation 093845 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 093846
  }
LocOp 093846:
  TraceOperation 093846 (Je [Var (Local 1),Con 18109] (Branch F (Dloc 093868)));
  if (Equal(GetLocal(1),18109)) {
    TraceOperation 093852 (Print "block answering rule");
    GamePrint "block answering rule";
    TraceOperation 093867 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 093868
  }
LocOp 093868:
  TraceOperation 093868 (Je [Var (Local 1),Con 18120] (Branch F (Dloc 093890)));
  if (Equal(GetLocal(1),18120)) {
    TraceOperation 093874 (Print "telling yourself rule");
    GamePrint "telling yourself rule";
    TraceOperation 093889 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 093890
  }
LocOp 093890:
  TraceOperation 093890 (Je [Var (Local 1),Con 18133] (Branch F (Dloc 093910)));
  if (Equal(GetLocal(1),18133)) {
    TraceOperation 093896 (Print "block telling rule");
    GamePrint "block telling rule";
    TraceOperation 093909 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 093910
  }
LocOp 093910:
  TraceOperation 093910 (Je [Var (Local 1),Con 18144] (Branch F (Dloc 093930)));
  if (Equal(GetLocal(1),18144)) {
    TraceOperation 093916 (Print "block asking rule");
    GamePrint "block asking rule";
    TraceOperation 093929 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 093930
  }
LocOp 093930:
  TraceOperation 093930 (Je [Var (Local 1),Con 18155] (Branch F (Dloc 093940)));
  if (Equal(GetLocal(1),18155)) {
    TraceOperation 093936 (Print_paddr (Con -32423));
    Note "<static Gettext address>";
    GamePrint "asking yourself for something rule";
    TraceOperation 093939 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 093940
  }
LocOp 093940:
  TraceOperation 093940 (Je [Var (Local 1),Con 18170] (Branch F (Dloc 093950)));
  if (Equal(GetLocal(1),18170)) {
    TraceOperation 093946 (Print_paddr (Con -32417));
    Note "<static Gettext address>";
    GamePrint "translate asking for to giving rule";
    TraceOperation 093949 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 093950
  }
LocOp 093950:
  TraceOperation 093950 (Je [Var (Local 1),Con 18182] (Branch F (Dloc 093978)));
  if (Equal(GetLocal(1),18182)) {
    TraceOperation 093956 (Print "standard report waiting rule");
    GamePrint "standard report waiting rule";
    TraceOperation 093977 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 093978
  }
LocOp 093978:
  TraceOperation 093978 (Je [Var (Local 1),Con 18194] (Branch F (Dloc 094006)));
  if (Equal(GetLocal(1),18194)) {
    TraceOperation 093984 (Print "report touching yourself rule");
    GamePrint "report touching yourself rule";
    TraceOperation 094005 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 094006
  }
LocOp 094006:
  TraceOperation 094006 (Je [Var (Local 1),Con 18207] (Branch F (Dloc 094016)));
  if (Equal(GetLocal(1),18207)) {
    TraceOperation 094012 (Print_paddr (Con -32411));
    Note "<static Gettext address>";
    GamePrint "report touching other people rule";
    TraceOperation 094015 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 094016
  }
LocOp 094016:
  TraceOperation 094016 (Je [Var (Local 1),Con 18225] (Branch F (Dloc 094042)));
  if (Equal(GetLocal(1),18225)) {
    TraceOperation 094022 (Print "report touching things rule");
    GamePrint "report touching things rule";
    TraceOperation 094041 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 094042
  }
LocOp 094042:
  TraceOperation 094042 (Je [Var (Local 1),Con 18238] (Branch F (Dloc 094072)));
  if (Equal(GetLocal(1),18238)) {
    TraceOperation 094048 (Print "can't wave what's not held rule");
    GamePrint "can't wave what's not held rule";
    TraceOperation 094071 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 094072
  }
LocOp 094072:
  TraceOperation 094072 (Je [Var (Local 1),Con 18250] (Branch F (Dloc 094098)));
  if (Equal(GetLocal(1),18250)) {
    TraceOperation 094078 (Print "report waving things rule");
    GamePrint "report waving things rule";
    TraceOperation 094097 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 094098
  }
LocOp 094098:
  TraceOperation 094098 (Je [Var (Local 1),Con 18263] (Branch F (Dloc 094108)));
  if (Equal(GetLocal(1),18263)) {
    TraceOperation 094104 (Print_paddr (Con -32405));
    Note "<static Gettext address>";
    GamePrint "can't pull what's fixed in place rule";
    TraceOperation 094107 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 094108
  }
LocOp 094108:
  TraceOperation 094108 (Je [Var (Local 1),Con 18275] (Branch F (Dloc 094132)));
  if (Equal(GetLocal(1),18275)) {
    TraceOperation 094114 (Print "can't pull scenery rule");
    GamePrint "can't pull scenery rule";
    TraceOperation 094131 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 094132
  }
LocOp 094132:
  TraceOperation 094132 (Je [Var (Local 1),Con 18287] (Branch F (Dloc 094156)));
  if (Equal(GetLocal(1),18287)) {
    TraceOperation 094138 (Print "can't pull people rule");
    GamePrint "can't pull people rule";
    TraceOperation 094155 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 094156
  }
LocOp 094156:
  TraceOperation 094156 (Je [Var (Local 1),Con 18299] (Branch F (Dloc 094178)));
  if (Equal(GetLocal(1),18299)) {
    TraceOperation 094162 (Print "report pulling rule");
    GamePrint "report pulling rule";
    TraceOperation 094177 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 094178
  }
LocOp 094178:
  TraceOperation 094178 (Je [Var (Local 1),Con 18312] (Branch F (Dloc 094188)));
  if (Equal(GetLocal(1),18312)) {
    TraceOperation 094184 (Print_paddr (Con -32398));
    Note "<static Gettext address>";
    GamePrint "can't push what's fixed in place rule";
    TraceOperation 094187 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 094188
  }
LocOp 094188:
  TraceOperation 094188 (Je [Var (Local 1),Con 18327] (Branch F (Dloc 094212)));
  if (Equal(GetLocal(1),18327)) {
    TraceOperation 094194 (Print "can't push scenery rule");
    GamePrint "can't push scenery rule";
    TraceOperation 094211 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 094212
  }
LocOp 094212:
  TraceOperation 094212 (Je [Var (Local 1),Con 18342] (Branch F (Dloc 094236)));
  if (Equal(GetLocal(1),18342)) {
    TraceOperation 094218 (Print "can't push people rule");
    GamePrint "can't push people rule";
    TraceOperation 094235 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 094236
  }
LocOp 094236:
  TraceOperation 094236 (Je [Var (Local 1),Con 18357] (Branch F (Dloc 094258)));
  if (Equal(GetLocal(1),18357)) {
    TraceOperation 094242 (Print "report pushing rule");
    GamePrint "report pushing rule";
    TraceOperation 094257 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 094258
  }
LocOp 094258:
  TraceOperation 094258 (Je [Var (Local 1),Con 18372] (Branch F (Dloc 094268)));
  if (Equal(GetLocal(1),18372)) {
    TraceOperation 094264 (Print_paddr (Con -32391));
    Note "<static Gettext address>";
    GamePrint "can't turn what's fixed in place rule";
    TraceOperation 094267 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 094268
  }
LocOp 094268:
  TraceOperation 094268 (Je [Var (Local 1),Con 18384] (Branch F (Dloc 094292)));
  if (Equal(GetLocal(1),18384)) {
    TraceOperation 094274 (Print "can't turn scenery rule");
    GamePrint "can't turn scenery rule";
    TraceOperation 094291 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 094292
  }
LocOp 094292:
  TraceOperation 094292 (Je [Var (Local 1),Con 18396] (Branch F (Dloc 094316)));
  if (Equal(GetLocal(1),18396)) {
    TraceOperation 094298 (Print "can't turn people rule");
    GamePrint "can't turn people rule";
    TraceOperation 094315 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 094316
  }
LocOp 094316:
  TraceOperation 094316 (Je [Var (Local 1),Con 18408] (Branch F (Dloc 094338)));
  if (Equal(GetLocal(1),18408)) {
    TraceOperation 094322 (Print "report turning rule");
    GamePrint "report turning rule";
    TraceOperation 094337 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 094338
  }
LocOp 094338:
  TraceOperation 094338 (Je [Var (Local 1),Con 18421] (Branch F (Dloc 094348)));
  if (Equal(GetLocal(1),18421)) {
    TraceOperation 094344 (Print_paddr (Con -32384));
    Note "<static Gettext address>";
    GamePrint "can't push unpushable things rule";
    TraceOperation 094347 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 094348
  }
LocOp 094348:
  TraceOperation 094348 (Je [Var (Local 1),Con 18436] (Branch F (Dloc 094358)));
  if (Equal(GetLocal(1),18436)) {
    TraceOperation 094354 (Print_paddr (Con -32378));
    Note "<static Gettext address>";
    GamePrint "can't push to non-directions rule";
    TraceOperation 094357 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 094358
  }
LocOp 094358:
  TraceOperation 094358 (Je [Var (Local 1),Con 18450] (Branch F (Dloc 094384)));
  if (Equal(GetLocal(1),18450)) {
    TraceOperation 094364 (Print "can't push vertically rule");
    GamePrint "can't push vertically rule";
    TraceOperation 094383 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 094384
  }
LocOp 094384:
  TraceOperation 094384 (Je [Var (Local 1),Con 18464] (Branch F (Dloc 094394)));
  if (Equal(GetLocal(1),18464)) {
    TraceOperation 094390 (Print_paddr (Con -32372));
    Note "<static Gettext address>";
    GamePrint "standard pushing in directions rule";
    TraceOperation 094393 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 094394
  }
LocOp 094394:
  TraceOperation 094394 (Je [Var (Local 1),Con 18474] (Branch F (Dloc 094424)));
  if (Equal(GetLocal(1),18474)) {
    TraceOperation 094400 (Print "block pushing in directions rule");
    GamePrint "block pushing in directions rule";
    TraceOperation 094423 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 094424
  }
LocOp 094424:
  TraceOperation 094424 (Je [Var (Local 1),Con 18485] (Branch F (Dloc 094434)));
  if (Equal(GetLocal(1),18485)) {
    TraceOperation 094430 (Print_paddr (Con -32366));
    Note "<static Gettext address>";
    GamePrint "innuendo about squeezing people rule";
    TraceOperation 094433 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 094434
  }
LocOp 094434:
  TraceOperation 094434 (Je [Var (Local 1),Con 18497] (Branch F (Dloc 094456)));
  if (Equal(GetLocal(1),18497)) {
    TraceOperation 094440 (Print "report squeezing rule");
    GamePrint "report squeezing rule";
    TraceOperation 094455 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 094456
  }
LocOp 094456:
  TraceOperation 094456 (Je [Var (Local 1),Con 18510] (Branch F (Dloc 094478)));
  if (Equal(GetLocal(1),18510)) {
    TraceOperation 094462 (Print "block saying yes rule");
    GamePrint "block saying yes rule";
    TraceOperation 094477 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 094478
  }
LocOp 094478:
  TraceOperation 094478 (Je [Var (Local 1),Con 18519] (Branch F (Dloc 094500)));
  if (Equal(GetLocal(1),18519)) {
    TraceOperation 094484 (Print "block saying no rule");
    GamePrint "block saying no rule";
    TraceOperation 094499 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 094500
  }
LocOp 094500:
  TraceOperation 094500 (Je [Var (Local 1),Con 18528] (Branch F (Dloc 094520)));
  if (Equal(GetLocal(1),18528)) {
    TraceOperation 094506 (Print "block burning rule");
    GamePrint "block burning rule";
    TraceOperation 094519 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 094520
  }
LocOp 094520:
  TraceOperation 094520 (Je [Var (Local 1),Con 18537] (Branch F (Dloc 094542)));
  if (Equal(GetLocal(1),18537)) {
    TraceOperation 094526 (Print "block waking up rule");
    GamePrint "block waking up rule";
    TraceOperation 094541 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 094542
  }
LocOp 094542:
  TraceOperation 094542 (Je [Var (Local 1),Con 18546] (Branch F (Dloc 094564)));
  if (Equal(GetLocal(1),18546)) {
    TraceOperation 094548 (Print "block thinking rule");
    GamePrint "block thinking rule";
    TraceOperation 094563 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 094564
  }
LocOp 094564:
  TraceOperation 094564 (Je [Var (Local 1),Con 18555] (Branch F (Dloc 094586)));
  if (Equal(GetLocal(1),18555)) {
    TraceOperation 094570 (Print "block smelling rule");
    GamePrint "block smelling rule";
    TraceOperation 094585 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 094586
  }
LocOp 094586:
  TraceOperation 094586 (Je [Var (Local 1),Con 18564] (Branch F (Dloc 094608)));
  if (Equal(GetLocal(1),18564)) {
    TraceOperation 094592 (Print "block listening rule");
    GamePrint "block listening rule";
    TraceOperation 094607 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 094608
  }
LocOp 094608:
  TraceOperation 094608 (Je [Var (Local 1),Con 18573] (Branch F (Dloc 094628)));
  if (Equal(GetLocal(1),18573)) {
    TraceOperation 094614 (Print "block tasting rule");
    GamePrint "block tasting rule";
    TraceOperation 094627 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 094628
  }
LocOp 094628:
  TraceOperation 094628 (Je [Var (Local 1),Con 18582] (Branch F (Dloc 094648)));
  if (Equal(GetLocal(1),18582)) {
    TraceOperation 094634 (Print "block cutting rule");
    GamePrint "block cutting rule";
    TraceOperation 094647 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 094648
  }
LocOp 094648:
  TraceOperation 094648 (Je [Var (Local 1),Con 18591] (Branch F (Dloc 094668)));
  if (Equal(GetLocal(1),18591)) {
    TraceOperation 094654 (Print "block jumping rule");
    GamePrint "block jumping rule";
    TraceOperation 094667 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 094668
  }
LocOp 094668:
  TraceOperation 094668 (Je [Var (Local 1),Con 18600] (Branch F (Dloc 094688)));
  if (Equal(GetLocal(1),18600)) {
    TraceOperation 094674 (Print "block tying rule");
    GamePrint "block tying rule";
    TraceOperation 094687 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 094688
  }
LocOp 094688:
  TraceOperation 094688 (Je [Var (Local 1),Con 18609] (Branch F (Dloc 094710)));
  if (Equal(GetLocal(1),18609)) {
    TraceOperation 094694 (Print "block drinking rule");
    GamePrint "block drinking rule";
    TraceOperation 094709 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 094710
  }
LocOp 094710:
  TraceOperation 094710 (Je [Var (Local 1),Con 18618] (Branch F (Dloc 094734)));
  if (Equal(GetLocal(1),18618)) {
    TraceOperation 094716 (Print "block saying sorry rule");
    GamePrint "block saying sorry rule";
    TraceOperation 094733 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 094734
  }
LocOp 094734:
  TraceOperation 094734 (Je [Var (Local 1),Con 18627] (Branch F (Dloc 094762)));
  if (Equal(GetLocal(1),18627)) {
    TraceOperation 094740 (Print "block swearing obscenely rule");
    GamePrint "block swearing obscenely rule";
    TraceOperation 094761 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 094762
  }
LocOp 094762:
  TraceOperation 094762 (Je [Var (Local 1),Con 18636] (Branch F (Dloc 094788)));
  if (Equal(GetLocal(1),18636)) {
    TraceOperation 094768 (Print "block swearing mildly rule");
    GamePrint "block swearing mildly rule";
    TraceOperation 094787 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 094788
  }
LocOp 094788:
  TraceOperation 094788 (Je [Var (Local 1),Con 18645] (Branch F (Dloc 094810)));
  if (Equal(GetLocal(1),18645)) {
    TraceOperation 094794 (Print "block swinging rule");
    GamePrint "block swinging rule";
    TraceOperation 094809 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 094810
  }
LocOp 094810:
  TraceOperation 094810 (Je [Var (Local 1),Con 18654] (Branch F (Dloc 094830)));
  if (Equal(GetLocal(1),18654)) {
    TraceOperation 094816 (Print "block rubbing rule");
    GamePrint "block rubbing rule";
    TraceOperation 094829 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 094830
  }
LocOp 094830:
  TraceOperation 094830 (Je [Var (Local 1),Con 18663] (Branch F (Dloc 094854)));
  if (Equal(GetLocal(1),18663)) {
    TraceOperation 094836 (Print "block setting it to rule");
    GamePrint "block setting it to rule";
    TraceOperation 094853 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 094854
  }
LocOp 094854:
  TraceOperation 094854 (Je [Var (Local 1),Con 18674] (Branch F (Dloc 094878)));
  if (Equal(GetLocal(1),18674)) {
    TraceOperation 094860 (Print "block waving hands rule");
    GamePrint "block waving hands rule";
    TraceOperation 094877 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 094878
  }
LocOp 094878:
  TraceOperation 094878 (Je [Var (Local 1),Con 18683] (Branch F (Dloc 094898)));
  if (Equal(GetLocal(1),18683)) {
    TraceOperation 094884 (Print "block buying rule");
    GamePrint "block buying rule";
    TraceOperation 094897 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 094898
  }
LocOp 094898:
  TraceOperation 094898 (Je [Var (Local 1),Con 18692] (Branch F (Dloc 094918)));
  if (Equal(GetLocal(1),18692)) {
    TraceOperation 094904 (Print "block singing rule");
    GamePrint "block singing rule";
    TraceOperation 094917 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 094918
  }
LocOp 094918:
  TraceOperation 094918 (Je [Var (Local 1),Con 18701] (Branch F (Dloc 094940)));
  if (Equal(GetLocal(1),18701)) {
    TraceOperation 094924 (Print "block climbing rule");
    GamePrint "block climbing rule";
    TraceOperation 094939 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 094940
  }
LocOp 094940:
  TraceOperation 094940 (Je [Var (Local 1),Con 18710] (Branch F (Dloc 094962)));
  if (Equal(GetLocal(1),18710)) {
    TraceOperation 094946 (Print "block sleeping rule");
    GamePrint "block sleeping rule";
    TraceOperation 094961 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 094962
  }
LocOp 094962:
  TraceOperation 094962 (Je [Var (Local 1),Con 26509] (Branch F (Dloc 094990)));
  if (Equal(GetLocal(1),26509)) {
    TraceOperation 094968 (Print "little-used do nothing rule");
    GamePrint "little-used do nothing rule";
    TraceOperation 094989 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 094990
  }
LocOp 094990:
  TraceOperation 094990 (Je [Var (Local 1),Con 13131] (Branch F (Dloc 095018)));
  if (Equal(GetLocal(1),13131)) {
    TraceOperation 094996 (Print "virtual machine startup rule");
    GamePrint "virtual machine startup rule";
    TraceOperation 095017 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 095018
  }
LocOp 095018:
  TraceOperation 095018 (Je [Var (Local 1),Con 13142] (Branch F (Dloc 095042)));
  if (Equal(GetLocal(1),13142)) {
    TraceOperation 095024 (Print "initialise memory rule");
    GamePrint "initialise memory rule";
    TraceOperation 095041 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 095042
  }
LocOp 095042:
  TraceOperation 095042 (Je [Var (Local 1),Con 13151] (Branch F (Dloc 095052)));
  if (Equal(GetLocal(1),13151)) {
    TraceOperation 095048 (Print_paddr (Con -32360));
    Note "<static Gettext address>";
    GamePrint "seed random number generator rule";
    TraceOperation 095051 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 095052
  }
LocOp 095052:
  TraceOperation 095052 (Je [Var (Local 1),Con 26571] (Branch F (Dloc 095062)));
  if (Equal(GetLocal(1),26571)) {
    TraceOperation 095058 (Print_paddr (Con -32354));
    Note "<static Gettext address>";
    GamePrint "update chronological records rule";
    TraceOperation 095061 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 095062
  }
LocOp 095062:
  TraceOperation 095062 (Je [Var (Local 1),Con 13158] (Branch F (Dloc 095072)));
  if (Equal(GetLocal(1),13158)) {
    TraceOperation 095068 (Print_paddr (Con -32348));
    Note "<static Gettext address>";
    GamePrint "position player in model world rule";
    TraceOperation 095071 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 095072
  }
LocOp 095072:
  TraceOperation 095072 (Je [Var (Local 1),Con 9257] (Branch F (Dloc 095092)));
  if (Equal(GetLocal(1),9257)) {
    TraceOperation 095078 (Print "adjust light rule");
    GamePrint "adjust light rule";
    TraceOperation 095091 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 095092
  }
LocOp 095092:
  TraceOperation 095092 (Je [Var (Local 1),Con 13321] (Branch F (Dloc 095112)));
  if (Equal(GetLocal(1),13321)) {
    TraceOperation 095098 (Print "advance time rule");
    GamePrint "advance time rule";
    TraceOperation 095111 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 095112
  }
LocOp 095112:
  TraceOperation 095112 (Je [Var (Local 1),Con 13197] (Branch F (Dloc 095134)));
  if (Equal(GetLocal(1),13197)) {
    TraceOperation 095118 (Print "generate action rule");
    GamePrint "generate action rule";
    TraceOperation 095133 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 095134
  }
LocOp 095134:
  TraceOperation 095134 (Je [Var (Local 1),Con 13331] (Branch F (Dloc 095162)));
  if (Equal(GetLocal(1),13331)) {
    TraceOperation 095140 (Print "note object acquisitions rule");
    GamePrint "note object acquisitions rule";
    TraceOperation 095161 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 095162
  }
LocOp 095162:
  TraceOperation 095162 (Je [Var (Local 1),Con 13180] (Branch F (Dloc 095182)));
  if (Equal(GetLocal(1),13180)) {
    TraceOperation 095168 (Print "parse command rule");
    GamePrint "parse command rule";
    TraceOperation 095181 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 095182
  }
LocOp 095182:
  TraceOperation 095182 (Je [Var (Local 1),Con 13266] (Branch F (Dloc 095202)));
  if (Equal(GetLocal(1),13266)) {
    TraceOperation 095188 (Print "timed events rule");
    GamePrint "timed events rule";
    TraceOperation 095201 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 095202
  }
LocOp 095202:
  TraceOperation 095202 (Je [Var (Local 1),Con 13357] (Branch F (Dloc 095230)));
  if (Equal(GetLocal(1),13357)) {
    TraceOperation 095208 (Print "resurrect player if asked rule");
    GamePrint "resurrect player if asked rule";
    TraceOperation 095229 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 095230
  }
LocOp 095230:
  TraceOperation 095230 (Je [Var (Local 1),Con 13360] (Branch F (Dloc 095256)));
  if (Equal(GetLocal(1),13360)) {
    TraceOperation 095236 (Print "ask the final question rule");
    GamePrint "ask the final question rule";
    TraceOperation 095255 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 095256
  }
LocOp 095256:
  TraceOperation 095256 (Je [Var (Local 1),Con 18965] (Branch F (Dloc 095282)));
  if (Equal(GetLocal(1),18965)) {
    TraceOperation 095262 (Print "scene change machinery rule");
    GamePrint "scene change machinery rule";
    TraceOperation 095281 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 095282
  }
LocOp 095282:
  TraceOperation 095282 (Je [Var (Local 1),Con 19347] (Branch F (Dloc 095306)));
  if (Equal(GetLocal(1),19347)) {
    TraceOperation 095288 (Print "basic accessibility rule");
    GamePrint "basic accessibility rule";
    TraceOperation 095305 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 095306
  }
LocOp 095306:
  TraceOperation 095306 (Je [Var (Local 1),Con 19330] (Branch F (Dloc 095328)));
  if (Equal(GetLocal(1),19330)) {
    TraceOperation 095312 (Print "basic visibility rule");
    GamePrint "basic visibility rule";
    TraceOperation 095327 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 095328
  }
LocOp 095328:
  TraceOperation 095328 (Je [Var (Local 1),Con 19392] (Branch F (Dloc 095354)));
  if (Equal(GetLocal(1),19392)) {
    TraceOperation 095334 (Print "carrying requirements rule");
    GamePrint "carrying requirements rule";
    TraceOperation 095353 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 095354
  }
LocOp 095354:
  TraceOperation 095354 (Je [Var (Local 1),Con 19431] (Branch F (Dloc 095364)));
  if (Equal(GetLocal(1),19431)) {
    TraceOperation 095360 (Print_paddr (Con -32342));
    Note "<static Gettext address>";
    GamePrint "requested actions require persuasion rule";
    TraceOperation 095363 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 095364
  }
LocOp 095364:
  TraceOperation 095364 (Je [Var (Local 1),Con 19443] (Branch F (Dloc 095394)));
  if (Equal(GetLocal(1),19443)) {
    TraceOperation 095370 (Print "carry out requested actions rule");
    GamePrint "carry out requested actions rule";
    TraceOperation 095393 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 095394
  }
LocOp 095394:
  TraceOperation 095394 (Je [Var (Local 1),Con 6537] (Branch F (Dloc 095404)));
  if (Equal(GetLocal(1),6537)) {
    TraceOperation 095400 (Print_paddr (Con -32335));
    Note "<static Gettext address>";
    GamePrint "descend to specific action-processing rule";
    TraceOperation 095403 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 095404
  }
LocOp 095404:
  TraceOperation 095404 (Je [Var (Local 1),Con 19475] (Branch F (Dloc 095414)));
  if (Equal(GetLocal(1),19475)) {
    TraceOperation 095410 (Print_paddr (Con -32327));
    Note "<static Gettext address>";
    GamePrint "work out details of specific action rule";
    TraceOperation 095413 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 095414
  }
LocOp 095414:
  TraceOperation 095414 (Je [Var (Local 1),Con 9345] (Branch F (Dloc 095442)));
  if (Equal(GetLocal(1),9345)) {
    TraceOperation 095420 (Print "access through barriers rule");
    GamePrint "access through barriers rule";
    TraceOperation 095441 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 095442
  }
LocOp 095442:
  TraceOperation 095442 (Je [Var (Local 1),Con 9414] (Branch F (Dloc 095452)));
  if (Equal(GetLocal(1),9414)) {
    TraceOperation 095448 (Print_paddr (Con -32320));
    Note "<static Gettext address>";
    GamePrint "can't reach inside closed containers rule";
    TraceOperation 095451 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 095452
  }
LocOp 095452:
  TraceOperation 095452 (Je [Var (Local 1),Con 9426] (Branch F (Dloc 095480)));
  if (Equal(GetLocal(1),9426)) {
    TraceOperation 095458 (Print "can't reach inside rooms rule");
    GamePrint "can't reach inside rooms rule";
    TraceOperation 095479 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 095480
  }
LocOp 095480:
  TraceOperation 095480 (Je [Var (Local 1),Con 9420] (Branch F (Dloc 095490)));
  if (Equal(GetLocal(1),9420)) {
    TraceOperation 095486 (Print_paddr (Con -32313));
    Note "<static Gettext address>";
    GamePrint "can't reach outside closed containers rule";
    TraceOperation 095489 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 095490
  }
LocOp 095490:
  TraceOperation 095490 (Je [Var (Local 1),Con 20336] (Branch F (Dloc 095516)));
  if (Equal(GetLocal(1),20336)) {
    TraceOperation 095496 (Print "standard name printing rule");
    GamePrint "standard name printing rule";
    TraceOperation 095515 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 095516
  }
LocOp 095516:
  TraceOperation 095516 (Je [Var (Local 1),Con 9670] (Branch F (Dloc 095544)));
  if (Equal(GetLocal(1),9670)) {
    TraceOperation 095522 (Print "standard contents listing rule");
    GamePrint "standard contents listing rule";
    TraceOperation 095543 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 095544
  }
LocOp 095544:
  TraceOperation 095544 (Je [Var (Local 1),Con 13380] (Branch F (Dloc 095572)));
  if (Equal(GetLocal(1),13380)) {
    TraceOperation 095550 (Print "print obituary headline rule");
    GamePrint "print obituary headline rule";
    TraceOperation 095571 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 095572
  }
LocOp 095572:
  TraceOperation 095572 (Je [Var (Local 1),Con 13406] (Branch F (Dloc 095596)));
  if (Equal(GetLocal(1),13406)) {
    TraceOperation 095578 (Print "print final score rule");
    GamePrint "print final score rule";
    TraceOperation 095595 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 095596
  }
LocOp 095596:
  TraceOperation 095596 (Je [Var (Local 1),Con 13408] (Branch F (Dloc 095624)));
  if (Equal(GetLocal(1),13408)) {
    TraceOperation 095602 (Print "display final status line rule");
    GamePrint "display final status line rule";
    TraceOperation 095623 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 095624
  }
LocOp 095624:
  TraceOperation 095624 (Je [Var (Local 1),Con 13372] (Branch F (Dloc 095654)));
  if (Equal(GetLocal(1),13372)) {
    TraceOperation 095630 (Print "immediately restart the VM rule");
    GamePrint "immediately restart the VM rule";
    TraceOperation 095653 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 095654
  }
LocOp 095654:
  TraceOperation 095654 (Je [Var (Local 1),Con 13373] (Branch F (Dloc 095664)));
  if (Equal(GetLocal(1),13373)) {
    TraceOperation 095660 (Print_paddr (Con -32305));
    Note "<static Gettext address>";
    GamePrint "immediately restore saved game rule";
    TraceOperation 095663 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 095664
  }
LocOp 095664:
  TraceOperation 095664 (Je [Var (Local 1),Con 13375] (Branch F (Dloc 095686)));
  if (Equal(GetLocal(1),13375)) {
    TraceOperation 095670 (Print "immediately quit rule");
    GamePrint "immediately quit rule";
    TraceOperation 095685 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 095686
  }
LocOp 095686:
  TraceOperation 095686 (Je [Var (Local 1),Con 13376] (Branch F (Dloc 095708)));
  if (Equal(GetLocal(1),13376)) {
    TraceOperation 095692 (Print "immediately undo rule");
    GamePrint "immediately undo rule";
    TraceOperation 095707 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 095708
  }
LocOp 095708:
  TraceOperation 095708 (Je [Var (Local 1),Con 13365] (Branch F (Dloc 095734)));
  if (Equal(GetLocal(1),13365)) {
    TraceOperation 095714 (Print "read the final answer rule");
    GamePrint "read the final answer rule";
    TraceOperation 095733 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 095734
  }
LocOp 095734:
  TraceOperation 095734 (Je [Var (Local 1),Con 6418] (Branch F (Dloc 095754)));
  if (Equal(GetLocal(1),6418)) {
    TraceOperation 095740 (Print "quit the game rule");
    GamePrint "quit the game rule";
    TraceOperation 095753 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 095754
  }
LocOp 095754:
  TraceOperation 095754 (Je [Var (Local 1),Con 6437] (Branch F (Dloc 095774)));
  if (Equal(GetLocal(1),6437)) {
    TraceOperation 095760 (Print "save the game rule");
    GamePrint "save the game rule";
    TraceOperation 095773 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 095774
  }
LocOp 095774:
  TraceOperation 095774 (Je [Var (Local 1),Con 6430] (Branch F (Dloc 095796)));
  if (Equal(GetLocal(1),6430)) {
    TraceOperation 095780 (Print "restore the game rule");
    GamePrint "restore the game rule";
    TraceOperation 095795 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 095796
  }
LocOp 095796:
  TraceOperation 095796 (Je [Var (Local 1),Con 6423] (Branch F (Dloc 095818)));
  if (Equal(GetLocal(1),6423)) {
    TraceOperation 095802 (Print "restart the game rule");
    GamePrint "restart the game rule";
    TraceOperation 095817 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 095818
  }
LocOp 095818:
  TraceOperation 095818 (Je [Var (Local 1),Con 6450] (Branch F (Dloc 095844)));
  if (Equal(GetLocal(1),6450)) {
    TraceOperation 095824 (Print "verify the story file rule");
    GamePrint "verify the story file rule";
    TraceOperation 095843 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 095844
  }
LocOp 095844:
  TraceOperation 095844 (Je [Var (Local 1),Con 6457] (Branch F (Dloc 095854)));
  if (Equal(GetLocal(1),6457)) {
    TraceOperation 095850 (Print_paddr (Con -32299));
    Note "<static Gettext address>";
    GamePrint "switch the story transcript on rule";
    TraceOperation 095853 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 095854
  }
LocOp 095854:
  TraceOperation 095854 (Je [Var (Local 1),Con 6472] (Branch F (Dloc 095864)));
  if (Equal(GetLocal(1),6472)) {
    TraceOperation 095860 (Print_paddr (Con -32293));
    Note "<static Gettext address>";
    GamePrint "switch the story transcript off rule";
    TraceOperation 095863 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 095864
  }
LocOp 095864:
  TraceOperation 095864 (Je [Var (Local 1),Con 6487] (Branch F (Dloc 095874)));
  if (Equal(GetLocal(1),6487)) {
    TraceOperation 095870 (Print_paddr (Con -32287));
    Note "<static Gettext address>";
    GamePrint "announce the story file version rule";
    TraceOperation 095873 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 095874
  }
LocOp 095874:
  TraceOperation 095874 (Je [Var (Local 1),Con 20006] (Branch F (Dloc 095898)));
  if (Equal(GetLocal(1),20006)) {
    TraceOperation 095880 (Print "announce the score rule");
    GamePrint "announce the score rule";
    TraceOperation 095897 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 095898
  }
LocOp 095898:
  TraceOperation 095898 (Je [Var (Local 1),Con 20028] (Branch F (Dloc 095908)));
  if (Equal(GetLocal(1),20028)) {
    TraceOperation 095904 (Print_paddr (Con -32281));
    Note "<static Gettext address>";
    GamePrint "prefer abbreviated room descriptions rule";
    TraceOperation 095907 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 095908
  }
LocOp 095908:
  TraceOperation 095908 (Je [Var (Local 1),Con 20023] (Branch F (Dloc 095918)));
  if (Equal(GetLocal(1),20023)) {
    TraceOperation 095914 (Print_paddr (Con -32274));
    Note "<static Gettext address>";
    GamePrint "prefer unabbreviated room descriptions rule";
    TraceOperation 095917 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 095918
  }
LocOp 095918:
  TraceOperation 095918 (Je [Var (Local 1),Con 20018] (Branch F (Dloc 095928)));
  if (Equal(GetLocal(1),20018)) {
    TraceOperation 095924 (Print_paddr (Con -32266));
    Note "<static Gettext address>";
    GamePrint "prefer sometimes abbreviated room descriptions rule";
    TraceOperation 095927 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 095928
  }
LocOp 095928:
  TraceOperation 095928 (Je [Var (Local 1),Con 20010] (Branch F (Dloc 095938)));
  if (Equal(GetLocal(1),20010)) {
    TraceOperation 095934 (Print_paddr (Con -32257));
    Note "<static Gettext address>";
    GamePrint "switch score notification on rule";
    TraceOperation 095937 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 095938
  }
LocOp 095938:
  TraceOperation 095938 (Je [Var (Local 1),Con 20014] (Branch F (Dloc 095948)));
  if (Equal(GetLocal(1),20014)) {
    TraceOperation 095944 (Print_paddr (Con -32251));
    Note "<static Gettext address>";
    GamePrint "switch score notification off rule";
    TraceOperation 095947 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 095948
  }
LocOp 095948:
  TraceOperation 095948 (Je [Var (Local 1),Con 20033] (Branch F (Dloc 095958)));
  if (Equal(GetLocal(1),20033)) {
    TraceOperation 095954 (Print_paddr (Con -32245));
    Note "<static Gettext address>";
    GamePrint "announce the pronoun meanings rule";
    TraceOperation 095957 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 095958
  }
LocOp 095958:
  TraceOperation 095958 (Je [Var (Local 1),Con 14200] (Branch F (Dloc 095984)));
  if (Equal(GetLocal(1),14200)) {
    TraceOperation 095964 (Print "A first turn sequence rule");
    GamePrint "A first turn sequence rule";
    TraceOperation 095983 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 095984
  }
LocOp 095984:
  TraceOperation 095984 (Je [Var (Local 1),Con 14204] (Branch F (Dloc 096010)));
  if (Equal(GetLocal(1),14204)) {
    TraceOperation 095990 (Print "A last turn sequence rule");
    GamePrint "A last turn sequence rule";
    TraceOperation 096009 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 096010
  }
LocOp 096010:
  TraceOperation 096010 (Je [Var (Local 1),Con 14504] (Branch F (Dloc 096020)));
  if (Equal(GetLocal(1),14504)) {
    TraceOperation 096016 (Print_paddr (Con -32239));
    Note "<static Gettext address>";
    GamePrint "last specific action-processing rule";
    TraceOperation 096019 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 096020
  }
LocOp 096020:
  TraceOperation 096020 (Je [Var (Local 1),Con 14431] (Branch F (Dloc 096030)));
  if (Equal(GetLocal(1),14431)) {
    TraceOperation 096026 (Print_paddr (Con -32232));
    Note "<static Gettext address>";
    GamePrint "Setting action variables for exiting";
    TraceOperation 096029 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 096030
  }
LocOp 096030:
  TraceOperation 096030 (Je [Var (Local 1),Con 14213] (Branch F (Dloc 096050)));
  if (Equal(GetLocal(1),14213)) {
    TraceOperation 096036 (Print "When play begins");
    GamePrint "When play begins";
    TraceOperation 096049 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 096050
  }
LocOp 096050:
  TraceOperation 096050 (Je [Var (Local 1),Con 14938] (Branch F (Dloc 096060)));
  if (Equal(GetLocal(1),14938)) {
    TraceOperation 096056 (Print_paddr (Con -32225));
    Note "<static Gettext address>";
    GamePrint "After printing the name of something alight while listing contents";
    TraceOperation 096059 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 096060
  }
LocOp 096060:
  TraceOperation 096060 (Je [Var (Local 1),Con 18719] (Branch F (Dloc 096078)));
  if (Equal(GetLocal(1),18719)) {
    TraceOperation 096066 (Print "Check striking");
    GamePrint "Check striking";
    TraceOperation 096077 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 096078
  }
LocOp 096078:
  TraceOperation 096078 (Je [Var (Local 1),Con 18750] (Branch F (Dloc 096100)));
  if (Equal(GetLocal(1),18750)) {
    TraceOperation 096084 (Print "Carry out striking");
    GamePrint "Carry out striking";
    TraceOperation 096099 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 096100
  }
LocOp 096100:
  TraceOperation 096100 (Je [Var (Local 1),Con 18759] (Branch F (Dloc 096120)));
  if (Equal(GetLocal(1),18759)) {
    TraceOperation 096106 (Print "Report striking");
    GamePrint "Report striking";
    TraceOperation 096119 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 096120
  }
LocOp 096120:
  TraceOperation 096120 (Je [Var (Local 1),Con 18770] (Branch F (Dloc 096142)));
  if (Equal(GetLocal(1),18770)) {
    TraceOperation 096126 (Print "Check lighting from");
    GamePrint "Check lighting from";
    TraceOperation 096141 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 096142
  }
LocOp 096142:
  TraceOperation 096142 (Je [Var (Local 1),Con 18819] (Branch F (Dloc 096166)));
  if (Equal(GetLocal(1),18819)) {
    TraceOperation 096148 (Print "Carry out lighting from");
    GamePrint "Carry out lighting from";
    TraceOperation 096165 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 096166
  }
LocOp 096166:
  TraceOperation 096166 (Je [Var (Local 1),Con 18828] (Branch F (Dloc 096188)));
  if (Equal(GetLocal(1),18828)) {
    TraceOperation 096172 (Print "Report lighting from");
    GamePrint "Report lighting from";
    TraceOperation 096187 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 096188
  }
LocOp 096188:
  TraceOperation 096188 (Je [Var (Local 1),Con 14725] (Branch F (Dloc 096198)));
  if (Equal(GetLocal(1),14725)) {
    TraceOperation 096194 (Print_paddr (Con -32213));
    Note "<static Gettext address>";
    GamePrint "Instead of burning something with something";
    TraceOperation 096197 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 096198
  }
LocOp 096198:
  TraceOperation 096198 (Je [Var (Local 1),Con 18839] (Branch F (Dloc 096218)));
  if (Equal(GetLocal(1),18839)) {
    TraceOperation 096204 (Print "Check blowing out");
    GamePrint "Check blowing out";
    TraceOperation 096217 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 096218
  }
LocOp 096218:
  TraceOperation 096218 (Je [Var (Local 1),Con 18853] (Branch F (Dloc 096242)));
  if (Equal(GetLocal(1),18853)) {
    TraceOperation 096224 (Print "Carry out blowing out");
    GamePrint "Carry out blowing out";
    TraceOperation 096241 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 096242
  }
LocOp 096242:
  TraceOperation 096242 (Je [Var (Local 1),Con 18862] (Branch F (Dloc 096264)));
  if (Equal(GetLocal(1),18862)) {
    TraceOperation 096248 (Print "Report blowing out");
    GamePrint "Report blowing out";
    TraceOperation 096263 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 096264
  }
LocOp 096264:
  TraceOperation 096264 (Je [Var (Local 1),Con 14689] (Branch F (Dloc 096274)));
  if (Equal(GetLocal(1),14689)) {
    TraceOperation 096270 (Print_paddr (Con -32205));
    Note "<static Gettext address>";
    GamePrint "Instead of going to the back garden";
    TraceOperation 096273 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 096274
  }
LocOp 096274:
  TraceOperation 096274 (Je [Var (Local 1),Con 14531] (Branch F (Dloc 096302)));
  if (Equal(GetLocal(1),14531)) {
    TraceOperation 096280 (Print "Before searching the larder");
    GamePrint "Before searching the larder";
    TraceOperation 096301 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 096302
  }
LocOp 096302:
  TraceOperation 096302 (Je [Var (Local 1),Con 14673] (Branch F (Dloc 096312)));
  if (Equal(GetLocal(1),14673)) {
    TraceOperation 096308 (Print_paddr (Con -32199));
    Note "<static Gettext address>";
    GamePrint "Instead of eating the carrot for the first time";
    TraceOperation 096311 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 096312
  }
LocOp 096312:
  TraceOperation 096312 (Je [Var (Local 1),Con 14895] (Branch F (Dloc 096336)));
  if (Equal(GetLocal(1),14895)) {
    TraceOperation 096318 (Print "After eating the carrot");
    GamePrint "After eating the carrot";
    TraceOperation 096335 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 096336
  }
LocOp 096336:
  TraceOperation 096336 (Je [Var (Local 1),Con 14543] (Branch F (Dloc 096364)));
  if (Equal(GetLocal(1),14543)) {
    TraceOperation 096342 (Print "Before switching on the knob");
    GamePrint "Before switching on the knob";
    TraceOperation 096363 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 096364
  }
LocOp 096364:
  TraceOperation 096364 (Je [Var (Local 1),Con 14555] (Branch F (Dloc 096392)));
  if (Equal(GetLocal(1),14555)) {
    TraceOperation 096370 (Print "Before switching off the knob");
    GamePrint "Before switching off the knob";
    TraceOperation 096391 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 096392
  }
LocOp 096392:
  TraceOperation 096392 (Je [Var (Local 1),Con 14741] (Branch F (Dloc 096402)));
  if (Equal(GetLocal(1),14741)) {
    TraceOperation 096398 (Print_paddr (Con -32191));
    Note "<static Gettext address>";
    GamePrint "Instead of switching on the stove";
    TraceOperation 096401 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 096402
  }
LocOp 096402:
  TraceOperation 096402 (Je [Var (Local 1),Con 14753] (Branch F (Dloc 096412)));
  if (Equal(GetLocal(1),14753)) {
    TraceOperation 096408 (Print_paddr (Con -32185));
    Note "<static Gettext address>";
    GamePrint "Instead of switching off the stove";
    TraceOperation 096411 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 096412
  }
LocOp 096412:
  TraceOperation 096412 (Je [Var (Local 1),Con 14787] (Branch F (Dloc 096442)));
  if (Equal(GetLocal(1),14787)) {
    TraceOperation 096418 (Print "Instead of switching on the gas");
    GamePrint "Instead of switching on the gas";
    TraceOperation 096441 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 096442
  }
LocOp 096442:
  TraceOperation 096442 (Je [Var (Local 1),Con 14799] (Branch F (Dloc 096472)));
  if (Equal(GetLocal(1),14799)) {
    TraceOperation 096448 (Print "Instead of switching off the gas");
    GamePrint "Instead of switching off the gas";
    TraceOperation 096471 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 096472
  }
LocOp 096472:
  TraceOperation 096472 (Je [Var (Local 1),Con 14765] (Branch F (Dloc 096500)));
  if (Equal(GetLocal(1),14765)) {
    TraceOperation 096478 (Print "Instead of turning the knob");
    GamePrint "Instead of turning the knob";
    TraceOperation 096499 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 096500
  }
LocOp 096500:
  TraceOperation 096500 (Je [Var (Local 1),Con 14710] (Branch F (Dloc 096510)));
  if (Equal(GetLocal(1),14710)) {
    TraceOperation 096506 (Print_paddr (Con -32179));
    Note "<static Gettext address>";
    GamePrint "Instead of lighting the gas from something";
    TraceOperation 096509 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 096510
  }
LocOp 096510:
  TraceOperation 096510 (Je [Var (Local 1),Con 14811] (Branch F (Dloc 096538)));
  if (Equal(GetLocal(1),14811)) {
    TraceOperation 096516 (Print "Instead of taking the water");
    GamePrint "Instead of taking the water";
    TraceOperation 096537 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 096538
  }
LocOp 096538:
  TraceOperation 096538 (Je [Var (Local 1),Con 14845] (Branch F (Dloc 096548)));
  if (Equal(GetLocal(1),14845)) {
    TraceOperation 096544 (Print_paddr (Con -32171));
    Note "<static Gettext address>";
    GamePrint "After wearing the judo gi for the first time";
    TraceOperation 096547 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 096548
  }
LocOp 096548:
  TraceOperation 096548 (Je [Var (Local 1),Con 14878] (Branch F (Dloc 096572)));
  if (Equal(GetLocal(1),14878)) {
    TraceOperation 096554 (Print "After entering the sofa");
    GamePrint "After entering the sofa";
    TraceOperation 096571 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 096572
  }
LocOp 096572:
  TraceOperation 096572 (Je [Var (Local 1),Con 14568] (Branch F (Dloc 096602)));
  if (Equal(GetLocal(1),14568)) {
    TraceOperation 096578 (Print "Before searching the fireplace");
    GamePrint "Before searching the fireplace";
    TraceOperation 096601 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 096602
  }
LocOp 096602:
  TraceOperation 096602 (Je [Var (Local 1),Con 14833] (Branch F (Dloc 096630)));
  if (Equal(GetLocal(1),14833)) {
    TraceOperation 096608 (Print "Instead of taking the ember");
    GamePrint "Instead of taking the ember";
    TraceOperation 096629 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 096630
  }
LocOp 096630:
  TraceOperation 096630 (Je [Var (Local 1),Con 14216] (Branch F (Dloc 096646)));
  if (Equal(GetLocal(1),14216)) {
    TraceOperation 096636 (Print "Every turn");
    GamePrint "Every turn";
    TraceOperation 096645 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 096646
  }
LocOp 096646:
  TraceOperation 096646 (Je [Var (Local 1),Con 14223] (Branch F (Dloc 096662)));
  if (Equal(GetLocal(1),14223)) {
    TraceOperation 096652 (Print "Every turn");
    GamePrint "Every turn";
    TraceOperation 096661 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 096662
  }
LocOp 096662:
  TraceOperation 096662 (Je [Var (Local 1),Con 14234] (Branch F (Dloc 096678)));
  if (Equal(GetLocal(1),14234)) {
    TraceOperation 096668 (Print "Every turn");
    GamePrint "Every turn";
    TraceOperation 096677 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 096678
  }
LocOp 096678:
  TraceOperation 096678 (Je [Var (Local 1),Con 14254] (Branch F (Dloc 096694)));
  if (Equal(GetLocal(1),14254)) {
    TraceOperation 096684 (Print "Every turn");
    GamePrint "Every turn";
    TraceOperation 096693 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 096694
  }
LocOp 096694:
  TraceOperation 096694 (Je [Var (Local 1),Con 14260] (Branch F (Dloc 096710)));
  if (Equal(GetLocal(1),14260)) {
    TraceOperation 096700 (Print "Every turn");
    GamePrint "Every turn";
    TraceOperation 096709 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 096710
  }
LocOp 096710:
  TraceOperation 096710 (Je [Var (Local 1),Con 14299] (Branch F (Dloc 096726)));
  if (Equal(GetLocal(1),14299)) {
    TraceOperation 096716 (Print "Every turn");
    GamePrint "Every turn";
    TraceOperation 096725 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 096726
  }
LocOp 096726:
  TraceOperation 096726 (Je [Var (Local 1),Con 14313] (Branch F (Dloc 096742)));
  if (Equal(GetLocal(1),14313)) {
    TraceOperation 096732 (Print "Every turn");
    GamePrint "Every turn";
    TraceOperation 096741 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 096742
  }
LocOp 096742:
  TraceOperation 096742 (Je [Var (Local 1),Con 14326] (Branch F (Dloc 096758)));
  if (Equal(GetLocal(1),14326)) {
    TraceOperation 096748 (Print "Every turn");
    GamePrint "Every turn";
    TraceOperation 096757 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 096758
  }
LocOp 096758:
  TraceOperation 096758 (Je [Var (Local 1),Con 14580] (Branch F (Dloc 096768)));
  if (Equal(GetLocal(1),14580)) {
    TraceOperation 096764 (Print_paddr (Con -32163));
    Note "<static Gettext address>";
    GamePrint "Instead of going to the finish when the soup is not in the pot";
    TraceOperation 096767 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 096768
  }
LocOp 096768:
  TraceOperation 096768 (Je [Var (Local 1),Con 14652] (Branch F (Dloc 096778)));
  if (Equal(GetLocal(1),14652)) {
    TraceOperation 096774 (Print_paddr (Con -32152));
    Note "<static Gettext address>";
    GamePrint "Instead of going to finish when belt is not held or gi is not held";
    TraceOperation 096777 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 096778
  }
LocOp 096778:
  TraceOperation 096778 (Je [Var (Local 1),Con 14598] (Branch F (Dloc 096788)));
  if (Equal(GetLocal(1),14598)) {
    TraceOperation 096784 (Print_paddr (Con -32140));
    Note "<static Gettext address>";
    GamePrint "Instead of going to finish when keys are not held";
    TraceOperation 096787 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 096788
  }
LocOp 096788:
  TraceOperation 096788 (Je [Var (Local 1),Con 14616] (Branch F (Dloc 096798)));
  if (Equal(GetLocal(1),14616)) {
    TraceOperation 096794 (Print_paddr (Con -32131));
    Note "<static Gettext address>";
    GamePrint "Instead of going to finish when stove is alight";
    TraceOperation 096797 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 096798
  }
LocOp 096798:
  TraceOperation 096798 (Je [Var (Local 1),Con 14863] (Branch F (Dloc 096824)));
  if (Equal(GetLocal(1),14863)) {
    TraceOperation 096804 (Print "After going to the finish");
    GamePrint "After going to the finish";
    TraceOperation 096823 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 096824
  }
LocOp 096824:
  TraceOperation 096824 (Je [Var (Local 1),Con 14189] (Branch F (Dloc 096854)));
  if (Equal(GetLocal(1),14189)) {
    TraceOperation 096830 (Print "start in the correct scenes rule");
    GamePrint "start in the correct scenes rule";
    TraceOperation 096853 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 096854
  }
LocOp 096854:
  TraceOperation 096854 (Je [Var (Local 1),Con 13158] (Branch F (Dloc 096864)));
  if (Equal(GetLocal(1),13158)) {
    TraceOperation 096860 (Print_paddr (Con -32123));
    Note "<static Gettext address>";
    GamePrint "position player in model world rule";
    TraceOperation 096863 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 096864
  }
LocOp 096864:
  TraceOperation 096864 (Je [Var (Local 1),Con 26571] (Branch F (Dloc 096874)));
  if (Equal(GetLocal(1),26571)) {
    TraceOperation 096870 (Print_paddr (Con -32117));
    Note "<static Gettext address>";
    GamePrint "update chronological records rule";
    TraceOperation 096873 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 096874
  }
LocOp 096874:
  TraceOperation 096874 (Je [Var (Local 1),Con 13151] (Branch F (Dloc 096884)));
  if (Equal(GetLocal(1),13151)) {
    TraceOperation 096880 (Print_paddr (Con -32111));
    Note "<static Gettext address>";
    GamePrint "seed random number generator rule";
    TraceOperation 096883 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 096884
  }
LocOp 096884:
  TraceOperation 096884 (Je [Var (Local 1),Con 13142] (Branch F (Dloc 096908)));
  if (Equal(GetLocal(1),13142)) {
    TraceOperation 096890 (Print "initialise memory rule");
    GamePrint "initialise memory rule";
    TraceOperation 096907 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 096908
  }
LocOp 096908:
  TraceOperation 096908 (Je [Var (Local 1),Con 13131] (Branch F (Dloc 096936)));
  if (Equal(GetLocal(1),13131)) {
    TraceOperation 096914 (Print "virtual machine startup rule");
    GamePrint "virtual machine startup rule";
    TraceOperation 096935 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 096936
  }
LocOp 096936:
  TraceOperation 096936 (Je [Var (Local 1),Con 14191] (Branch F (Dloc 096962)));
  if (Equal(GetLocal(1),14191)) {
    TraceOperation 096942 (Print "when play begins stage rule");
    GamePrint "when play begins stage rule";
    TraceOperation 096961 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 096962
  }
LocOp 096962:
  TraceOperation 096962 (Je [Var (Local 1),Con 14193] (Branch F (Dloc 096988)));
  if (Equal(GetLocal(1),14193)) {
    TraceOperation 096968 (Print "fix baseline scoring rule");
    GamePrint "fix baseline scoring rule";
    TraceOperation 096987 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 096988
  }
LocOp 096988:
  TraceOperation 096988 (Je [Var (Local 1),Con 14195] (Branch F (Dloc 097010)));
  if (Equal(GetLocal(1),14195)) {
    TraceOperation 096994 (Print "display banner rule");
    GamePrint "display banner rule";
    TraceOperation 097009 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 097010
  }
LocOp 097010:
  TraceOperation 097010 (Je [Var (Local 1),Con 14197] (Branch F (Dloc 097038)));
  if (Equal(GetLocal(1),14197)) {
    TraceOperation 097016 (Print "initial room description rule");
    GamePrint "initial room description rule";
    TraceOperation 097037 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 097038
  }
LocOp 097038:
  TraceOperation 097038 (Je [Var (Local 1),Con 13197] (Branch F (Dloc 097060)));
  if (Equal(GetLocal(1),13197)) {
    TraceOperation 097044 (Print "generate action rule");
    GamePrint "generate action rule";
    TraceOperation 097059 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 097060
  }
LocOp 097060:
  TraceOperation 097060 (Je [Var (Local 1),Con 13180] (Branch F (Dloc 097080)));
  if (Equal(GetLocal(1),13180)) {
    TraceOperation 097066 (Print "parse command rule");
    GamePrint "parse command rule";
    TraceOperation 097079 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 097080
  }
LocOp 097080:
  TraceOperation 097080 (Je [Var (Local 1),Con 13266] (Branch F (Dloc 097100)));
  if (Equal(GetLocal(1),13266)) {
    TraceOperation 097086 (Print "timed events rule");
    GamePrint "timed events rule";
    TraceOperation 097099 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 097100
  }
LocOp 097100:
  TraceOperation 097100 (Je [Var (Local 1),Con 13321] (Branch F (Dloc 097120)));
  if (Equal(GetLocal(1),13321)) {
    TraceOperation 097106 (Print "advance time rule");
    GamePrint "advance time rule";
    TraceOperation 097119 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 097120
  }
LocOp 097120:
  TraceOperation 097120 (Je [Var (Local 1),Con 26571] (Branch F (Dloc 097130)));
  if (Equal(GetLocal(1),26571)) {
    TraceOperation 097126 (Print_paddr (Con -32105));
    Note "<static Gettext address>";
    GamePrint "update chronological records rule";
    TraceOperation 097129 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 097130
  }
LocOp 097130:
  TraceOperation 097130 (Je [Var (Local 1),Con 9257] (Branch F (Dloc 097150)));
  if (Equal(GetLocal(1),9257)) {
    TraceOperation 097136 (Print "adjust light rule");
    GamePrint "adjust light rule";
    TraceOperation 097149 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 097150
  }
LocOp 097150:
  TraceOperation 097150 (Je [Var (Local 1),Con 13331] (Branch F (Dloc 097178)));
  if (Equal(GetLocal(1),13331)) {
    TraceOperation 097156 (Print "note object acquisitions rule");
    GamePrint "note object acquisitions rule";
    TraceOperation 097177 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 097178
  }
LocOp 097178:
  TraceOperation 097178 (Je [Var (Local 1),Con 14206] (Branch F (Dloc 097204)));
  if (Equal(GetLocal(1),14206)) {
    TraceOperation 097184 (Print "notify score changes rule");
    GamePrint "notify score changes rule";
    TraceOperation 097203 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 097204
  }
LocOp 097204:
  TraceOperation 097204 (Je [Var (Local 1),Con 14209] (Branch F (Dloc 097230)));
  if (Equal(GetLocal(1),14209)) {
    TraceOperation 097210 (Print "when play ends stage rule");
    GamePrint "when play ends stage rule";
    TraceOperation 097229 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 097230
  }
LocOp 097230:
  TraceOperation 097230 (Je [Var (Local 1),Con 13357] (Branch F (Dloc 097258)));
  if (Equal(GetLocal(1),13357)) {
    TraceOperation 097236 (Print "resurrect player if asked rule");
    GamePrint "resurrect player if asked rule";
    TraceOperation 097257 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 097258
  }
LocOp 097258:
  TraceOperation 097258 (Je [Var (Local 1),Con 14211] (Branch F (Dloc 097286)));
  if (Equal(GetLocal(1),14211)) {
    TraceOperation 097264 (Print "print player's obituary rule");
    GamePrint "print player's obituary rule";
    TraceOperation 097285 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 097286
  }
LocOp 097286:
  TraceOperation 097286 (Je [Var (Local 1),Con 13360] (Branch F (Dloc 097312)));
  if (Equal(GetLocal(1),13360)) {
    TraceOperation 097292 (Print "ask the final question rule");
    GamePrint "ask the final question rule";
    TraceOperation 097311 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 097312
  }
LocOp 097312:
  TraceOperation 097312 (Je [Var (Local 1),Con 18965] (Branch F (Dloc 097338)));
  if (Equal(GetLocal(1),18965)) {
    TraceOperation 097318 (Print "scene change machinery rule");
    GamePrint "scene change machinery rule";
    TraceOperation 097337 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 097338
  }
LocOp 097338:
  TraceOperation 097338 (Je [Var (Local 1),Con 14342] (Branch F (Dloc 097358)));
  if (Equal(GetLocal(1),14342)) {
    TraceOperation 097344 (Print "before stage rule");
    GamePrint "before stage rule";
    TraceOperation 097357 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 097358
  }
LocOp 097358:
  TraceOperation 097358 (Je [Var (Local 1),Con 14339] (Branch F (Dloc 097368)));
  if (Equal(GetLocal(1),14339)) {
    TraceOperation 097364 (Print_paddr (Con -32099));
    Note "<static Gettext address>";
    GamePrint "set pronouns from items from multiple object lists rule";
    TraceOperation 097367 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 097368
  }
LocOp 097368:
  TraceOperation 097368 (Je [Var (Local 1),Con 14333] (Branch F (Dloc 097378)));
  if (Equal(GetLocal(1),14333)) {
    TraceOperation 097374 (Print_paddr (Con -32089));
    Note "<static Gettext address>";
    GamePrint "announce items from multiple object lists rule";
    TraceOperation 097377 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 097378
  }
LocOp 097378:
  TraceOperation 097378 (Je [Var (Local 1),Con 19330] (Branch F (Dloc 097400)));
  if (Equal(GetLocal(1),19330)) {
    TraceOperation 097384 (Print "basic visibility rule");
    GamePrint "basic visibility rule";
    TraceOperation 097399 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 097400
  }
LocOp 097400:
  TraceOperation 097400 (Je [Var (Local 1),Con 19347] (Branch F (Dloc 097424)));
  if (Equal(GetLocal(1),19347)) {
    TraceOperation 097406 (Print "basic accessibility rule");
    GamePrint "basic accessibility rule";
    TraceOperation 097423 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 097424
  }
LocOp 097424:
  TraceOperation 097424 (Je [Var (Local 1),Con 19392] (Branch F (Dloc 097450)));
  if (Equal(GetLocal(1),19392)) {
    TraceOperation 097430 (Print "carrying requirements rule");
    GamePrint "carrying requirements rule";
    TraceOperation 097449 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 097450
  }
LocOp 097450:
  TraceOperation 097450 (Je [Var (Local 1),Con 14345] (Branch F (Dloc 097470)));
  if (Equal(GetLocal(1),14345)) {
    TraceOperation 097456 (Print "instead stage rule");
    GamePrint "instead stage rule";
    TraceOperation 097469 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 097470
  }
LocOp 097470:
  TraceOperation 097470 (Je [Var (Local 1),Con 19431] (Branch F (Dloc 097480)));
  if (Equal(GetLocal(1),19431)) {
    TraceOperation 097476 (Print_paddr (Con -32081));
    Note "<static Gettext address>";
    GamePrint "requested actions require persuasion rule";
    TraceOperation 097479 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 097480
  }
LocOp 097480:
  TraceOperation 097480 (Je [Var (Local 1),Con 19443] (Branch F (Dloc 097510)));
  if (Equal(GetLocal(1),19443)) {
    TraceOperation 097486 (Print "carry out requested actions rule");
    GamePrint "carry out requested actions rule";
    TraceOperation 097509 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 097510
  }
LocOp 097510:
  TraceOperation 097510 (Je [Var (Local 1),Con 6537] (Branch F (Dloc 097520)));
  if (Equal(GetLocal(1),6537)) {
    TraceOperation 097516 (Print_paddr (Con -32074));
    Note "<static Gettext address>";
    GamePrint "descend to specific action-processing rule";
    TraceOperation 097519 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 097520
  }
LocOp 097520:
  TraceOperation 097520 (Je [Var (Local 1),Con 14348] (Branch F (Dloc 097530)));
  if (Equal(GetLocal(1),14348)) {
    TraceOperation 097526 (Print_paddr (Con -32066));
    Note "<static Gettext address>";
    GamePrint "end action-processing in success rule";
    TraceOperation 097529 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 097530
  }
LocOp 097530:
  TraceOperation 097530 (Je [Var (Local 1),Con 19475] (Branch F (Dloc 097540)));
  if (Equal(GetLocal(1),19475)) {
    TraceOperation 097536 (Print_paddr (Con -32059));
    Note "<static Gettext address>";
    GamePrint "work out details of specific action rule";
    TraceOperation 097539 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 097540
  }
LocOp 097540:
  TraceOperation 097540 (Je [Var (Local 1),Con 9345] (Branch F (Dloc 097568)));
  if (Equal(GetLocal(1),9345)) {
    TraceOperation 097546 (Print "access through barriers rule");
    GamePrint "access through barriers rule";
    TraceOperation 097567 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 097568
  }
LocOp 097568:
  TraceOperation 097568 (Je [Var (Local 1),Con 9426] (Branch F (Dloc 097596)));
  if (Equal(GetLocal(1),9426)) {
    TraceOperation 097574 (Print "can't reach inside rooms rule");
    GamePrint "can't reach inside rooms rule";
    TraceOperation 097595 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 097596
  }
LocOp 097596:
  TraceOperation 097596 (Je [Var (Local 1),Con 9414] (Branch F (Dloc 097606)));
  if (Equal(GetLocal(1),9414)) {
    TraceOperation 097602 (Print_paddr (Con -32052));
    Note "<static Gettext address>";
    GamePrint "can't reach inside closed containers rule";
    TraceOperation 097605 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 097606
  }
LocOp 097606:
  TraceOperation 097606 (Je [Var (Local 1),Con 9420] (Branch F (Dloc 097616)));
  if (Equal(GetLocal(1),9420)) {
    TraceOperation 097612 (Print_paddr (Con -32045));
    Note "<static Gettext address>";
    GamePrint "can't reach outside closed containers rule";
    TraceOperation 097615 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 097616
  }
LocOp 097616:
  TraceOperation 097616 (Je [Var (Local 1),Con 14528] (Branch F (Dloc 097642)));
  if (Equal(GetLocal(1),14528)) {
    TraceOperation 097622 (Print "can't act in the dark rule");
    GamePrint "can't act in the dark rule";
    TraceOperation 097641 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 097642
  }
LocOp 097642:
  TraceOperation 097642 (Je [Var (Local 1),Con 20336] (Branch F (Dloc 097668)));
  if (Equal(GetLocal(1),20336)) {
    TraceOperation 097648 (Print "standard name printing rule");
    GamePrint "standard name printing rule";
    TraceOperation 097667 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 097668
  }
LocOp 097668:
  TraceOperation 097668 (Je [Var (Local 1),Con 14954] (Branch F (Dloc 097678)));
  if (Equal(GetLocal(1),14954)) {
    TraceOperation 097674 (Print_paddr (Con -32037));
    Note "<static Gettext address>";
    GamePrint "standard printing the plural name rule";
    TraceOperation 097677 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 097678
  }
LocOp 097678:
  TraceOperation 097678 (Je [Var (Local 1),Con 14974] (Branch F (Dloc 097688)));
  if (Equal(GetLocal(1),14974)) {
    TraceOperation 097684 (Print_paddr (Con -32030));
    Note "<static Gettext address>";
    GamePrint "standard printing a number of something rule";
    TraceOperation 097687 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 097688
  }
LocOp 097688:
  TraceOperation 097688 (Je [Var (Local 1),Con 9670] (Branch F (Dloc 097716)));
  if (Equal(GetLocal(1),9670)) {
    TraceOperation 097694 (Print "standard contents listing rule");
    GamePrint "standard contents listing rule";
    TraceOperation 097715 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 097716
  }
LocOp 097716:
  TraceOperation 097716 (Je [Var (Local 1),Con 14994] (Branch F (Dloc 097726)));
  if (Equal(GetLocal(1),14994)) {
    TraceOperation 097722 (Print_paddr (Con -32022));
    Note "<static Gettext address>";
    GamePrint "look around once light available rule";
    TraceOperation 097725 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 097726
  }
LocOp 097726:
  TraceOperation 097726 (Je [Var (Local 1),Con 13380] (Branch F (Dloc 097754)));
  if (Equal(GetLocal(1),13380)) {
    TraceOperation 097732 (Print "print obituary headline rule");
    GamePrint "print obituary headline rule";
    TraceOperation 097753 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 097754
  }
LocOp 097754:
  TraceOperation 097754 (Je [Var (Local 1),Con 13406] (Branch F (Dloc 097778)));
  if (Equal(GetLocal(1),13406)) {
    TraceOperation 097760 (Print "print final score rule");
    GamePrint "print final score rule";
    TraceOperation 097777 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 097778
  }
LocOp 097778:
  TraceOperation 097778 (Je [Var (Local 1),Con 13408] (Branch F (Dloc 097806)));
  if (Equal(GetLocal(1),13408)) {
    TraceOperation 097784 (Print "display final status line rule");
    GamePrint "display final status line rule";
    TraceOperation 097805 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 097806
  }
LocOp 097806:
  TraceOperation 097806 (Je [Var (Local 1),Con 15025] (Branch F (Dloc 097834)));
  if (Equal(GetLocal(1),15025)) {
    TraceOperation 097812 (Print "print the final question rule");
    GamePrint "print the final question rule";
    TraceOperation 097833 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 097834
  }
LocOp 097834:
  TraceOperation 097834 (Je [Var (Local 1),Con 15098] (Branch F (Dloc 097860)));
  if (Equal(GetLocal(1),15098)) {
    TraceOperation 097840 (Print "print the final prompt rule");
    GamePrint "print the final prompt rule";
    TraceOperation 097859 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 097860
  }
LocOp 097860:
  TraceOperation 097860 (Je [Var (Local 1),Con 13365] (Branch F (Dloc 097886)));
  if (Equal(GetLocal(1),13365)) {
    TraceOperation 097866 (Print "read the final answer rule");
    GamePrint "read the final answer rule";
    TraceOperation 097885 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 097886
  }
LocOp 097886:
  TraceOperation 097886 (Je [Var (Local 1),Con 15102] (Branch F (Dloc 097896)));
  if (Equal(GetLocal(1),15102)) {
    TraceOperation 097892 (Print_paddr (Con -32015));
    Note "<static Gettext address>";
    GamePrint "standard respond to final question rule";
    TraceOperation 097895 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 097896
  }
LocOp 097896:
  TraceOperation 097896 (Je [Var (Local 1),Con 15610] (Branch F (Dloc 097926)));
  if (Equal(GetLocal(1),15610)) {
    TraceOperation 097902 (Print "can't take component parts rule");
    GamePrint "can't take component parts rule";
    TraceOperation 097925 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 097926
  }
LocOp 097926:
  TraceOperation 097926 (Je [Var (Local 1),Con 6418] (Branch F (Dloc 097946)));
  if (Equal(GetLocal(1),6418)) {
    TraceOperation 097932 (Print "quit the game rule");
    GamePrint "quit the game rule";
    TraceOperation 097945 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 097946
  }
LocOp 097946:
  TraceOperation 097946 (Je [Var (Local 1),Con 6437] (Branch F (Dloc 097966)));
  if (Equal(GetLocal(1),6437)) {
    TraceOperation 097952 (Print "save the game rule");
    GamePrint "save the game rule";
    TraceOperation 097965 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 097966
  }
LocOp 097966:
  TraceOperation 097966 (Je [Var (Local 1),Con 6430] (Branch F (Dloc 097988)));
  if (Equal(GetLocal(1),6430)) {
    TraceOperation 097972 (Print "restore the game rule");
    GamePrint "restore the game rule";
    TraceOperation 097987 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 097988
  }
LocOp 097988:
  TraceOperation 097988 (Je [Var (Local 1),Con 6423] (Branch F (Dloc 098010)));
  if (Equal(GetLocal(1),6423)) {
    TraceOperation 097994 (Print "restart the game rule");
    GamePrint "restart the game rule";
    TraceOperation 098009 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 098010
  }
LocOp 098010:
  TraceOperation 098010 (Je [Var (Local 1),Con 6450] (Branch F (Dloc 098036)));
  if (Equal(GetLocal(1),6450)) {
    TraceOperation 098016 (Print "verify the story file rule");
    GamePrint "verify the story file rule";
    TraceOperation 098035 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 098036
  }
LocOp 098036:
  TraceOperation 098036 (Je [Var (Local 1),Con 6457] (Branch F (Dloc 098046)));
  if (Equal(GetLocal(1),6457)) {
    TraceOperation 098042 (Print_paddr (Con -32008));
    Note "<static Gettext address>";
    GamePrint "switch the story transcript on rule";
    TraceOperation 098045 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 098046
  }
LocOp 098046:
  TraceOperation 098046 (Je [Var (Local 1),Con 6472] (Branch F (Dloc 098056)));
  if (Equal(GetLocal(1),6472)) {
    TraceOperation 098052 (Print_paddr (Con -32002));
    Note "<static Gettext address>";
    GamePrint "switch the story transcript off rule";
    TraceOperation 098055 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 098056
  }
LocOp 098056:
  TraceOperation 098056 (Je [Var (Local 1),Con 6487] (Branch F (Dloc 098066)));
  if (Equal(GetLocal(1),6487)) {
    TraceOperation 098062 (Print_paddr (Con -31996));
    Note "<static Gettext address>";
    GamePrint "announce the story file version rule";
    TraceOperation 098065 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 098066
  }
LocOp 098066:
  TraceOperation 098066 (Je [Var (Local 1),Con 20006] (Branch F (Dloc 098090)));
  if (Equal(GetLocal(1),20006)) {
    TraceOperation 098072 (Print "announce the score rule");
    GamePrint "announce the score rule";
    TraceOperation 098089 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 098090
  }
LocOp 098090:
  TraceOperation 098090 (Je [Var (Local 1),Con 20028] (Branch F (Dloc 098100)));
  if (Equal(GetLocal(1),20028)) {
    TraceOperation 098096 (Print_paddr (Con -31990));
    Note "<static Gettext address>";
    GamePrint "prefer abbreviated room descriptions rule";
    TraceOperation 098099 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 098100
  }
LocOp 098100:
  TraceOperation 098100 (Je [Var (Local 1),Con 20023] (Branch F (Dloc 098110)));
  if (Equal(GetLocal(1),20023)) {
    TraceOperation 098106 (Print_paddr (Con -31983));
    Note "<static Gettext address>";
    GamePrint "prefer unabbreviated room descriptions rule";
    TraceOperation 098109 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 098110
  }
LocOp 098110:
  TraceOperation 098110 (Je [Var (Local 1),Con 20018] (Branch F (Dloc 098120)));
  if (Equal(GetLocal(1),20018)) {
    TraceOperation 098116 (Print_paddr (Con -31975));
    Note "<static Gettext address>";
    GamePrint "prefer sometimes abbreviated room descriptions rule";
    TraceOperation 098119 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 098120
  }
LocOp 098120:
  TraceOperation 098120 (Je [Var (Local 1),Con 20010] (Branch F (Dloc 098130)));
  if (Equal(GetLocal(1),20010)) {
    TraceOperation 098126 (Print_paddr (Con -31966));
    Note "<static Gettext address>";
    GamePrint "switch score notification on rule";
    TraceOperation 098129 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 098130
  }
LocOp 098130:
  TraceOperation 098130 (Je [Var (Local 1),Con 20014] (Branch F (Dloc 098140)));
  if (Equal(GetLocal(1),20014)) {
    TraceOperation 098136 (Print_paddr (Con -31960));
    Note "<static Gettext address>";
    GamePrint "switch score notification off rule";
    TraceOperation 098139 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 098140
  }
LocOp 098140:
  TraceOperation 098140 (Je [Var (Local 1),Con 20033] (Branch F (Dloc 098150)));
  if (Equal(GetLocal(1),20033)) {
    TraceOperation 098146 (Print_paddr (Con -31954));
    Note "<static Gettext address>";
    GamePrint "announce the pronoun meanings rule";
    TraceOperation 098149 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 098150
  }
LocOp 098150:
  TraceOperation 098150 (Print "(nameless rule at address ");
  GamePrint "(nameless rule at address ";
  TraceOperation 098169 (Print_num (Var (Local 1)));
  GamePrint ShowNumber(GetLocal(1));
  TraceOperation 098172 (Print ")");
  GamePrint ")";
  Jump: 098175
LocOp 098175:
  TraceOperation 098175 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 098176:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 098177
LocOp 098177:
  TraceOperation 098177 (Mul (Con 2) (Var (Global 196)) Sp);
  Let b1 = M[007598];
  Let b2 = M[007599];
  PushStack Mul(2,MakeHiLo(b1,b2));
  TraceOperation 098181 (Pull (Con 255));
  PopStack popped3;
  SetByte 007684 HiByte(popped3);
  SetByte 007685 LoByte(popped3);
  TraceOperation 098184 (Jl (Var (Global 239)) (Con 1) (Branch T (Dloc 098197)));
  Let b4 = M[007684];
  Let b5 = M[007685];
  if (LessThan(MakeHiLo(b4,b5),1)) {
    Jump: 098197
  } else {
    Jump: 098188
  }
LocOp 098188:
  TraceOperation 098188 (Print_char (Con 32));
  GamePrint " ";
  TraceOperation 098191 (Dec (Con 255));
  Let b1 = M[007684];
  Let b2 = M[007685];
  SetByte 007684 HiByte(Sub(MakeHiLo(b1,b2),1));
  SetByte 007685 LoByte(Sub(MakeHiLo(b1,b2),1));
  TraceOperation 098193 (Jz (Var (Global 239)) (Branch F (Dloc 098188)));
  Let b3 = M[007684];
  Let b4 = M[007685];
  if (IsZero(MakeHiLo(b3,b4))) {
    Jump: 098197
  } else {
    Jump: 098188
  }
LocOp 098197:
  TraceOperation 098197 (Print "[");
  GamePrint "[";
  TraceOperation 098202 (CallN (Floc 089984) [Var (Local 1)]);
  PushFrame;
  PushReturnAddress 098202;
  SetLocal 1 GetLocal(1);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 089985
LocReturn 098202:
  TraceOperation 098207 (Jz (Var (Local 2)) (Branch T (Dloc 098220)));
  if (IsZero(GetLocal(2))) {
    Jump: 098220
  } else {
    TraceOperation 098210 (Print " / on O");
    GamePrint " / on O";
    TraceOperation 098217 (Print_num (Var (Local 2)));
    GamePrint ShowNumber(GetLocal(2));
    Jump: 098220
  }
LocOp 098220:
  TraceOperation 098220 (Print "]\n");
  GamePrint "]\n";
  TraceOperation 098225 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 098228:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 098229
LocOp 098229:
  TraceOperation 098229 (Jz (Var (Local 1)) (Branch F (Dloc 098233)));
  if (IsZero(GetLocal(1))) {
    TraceOperation 098232 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 098233
  }
LocOp 098233:
  TraceOperation 098233 (Print "[Rule \"");
  GamePrint "[Rule \"";
  TraceOperation 098242 (CallN (Floc 089984) [Var (Local 1)]);
  PushFrame;
  PushReturnAddress 098242;
  SetLocal 1 GetLocal(1);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 089985
LocReturn 098242:
  TraceOperation 098247 (Print "\" ");
  GamePrint "\" ";
  TraceOperation 098250 (Jz (Var (Local 2)) (Branch F (Dloc 098264)));
  if (IsZero(GetLocal(2))) {
    TraceOperation 098253 (Print_ret "applies.]");
    GamePrint "applies.]\n";
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 098264
  }
LocOp 098264:
  TraceOperation 098264 (Print_ret "does not apply.]");
  GamePrint "does not apply.]\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 098280:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 098281
LocOp 098281:
  TraceOperation 098281 (Store (Con 218) (Var (Local 1)));
  SetByte 007610 HiByte(GetLocal(1));
  SetByte 007611 LoByte(GetLocal(1));
  TraceOperation 098284 (Store (Con 219) (Var (Local 2)));
  SetByte 007612 HiByte(GetLocal(2));
  SetByte 007613 LoByte(GetLocal(2));
  TraceOperation 098287 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 098288:
  MakeRoutineFrame 6;
  if (LessThanByte(num_actuals,6)) {
    SetLocal 6 0;
    if (LessThanByte(num_actuals,5)) {
      SetLocal 5 0;
      if (LessThanByte(num_actuals,4)) {
        SetLocal 4 0;
        if (LessThanByte(num_actuals,3)) {
          SetLocal 3 0;
          if (LessThanByte(num_actuals,2)) {
            SetLocal 2 0;
            if (LessThanByte(num_actuals,1)) {
              SetLocal 1 0;
            }
          }
        }
      }
    }
  }
  Jump: 098289
LocOp 098289:
  TraceOperation 098289 (Store (Con 215) (Var (Local 1)));
  SetByte 007604 HiByte(GetLocal(1));
  SetByte 007605 LoByte(GetLocal(1));
  TraceOperation 098292 (Store (Con 216) (Var (Local 2)));
  SetByte 007606 HiByte(GetLocal(2));
  SetByte 007607 LoByte(GetLocal(2));
  TraceOperation 098295 (Store (Con 217) (Var (Local 3)));
  SetByte 007608 HiByte(GetLocal(3));
  SetByte 007609 LoByte(GetLocal(3));
  TraceOperation 098298 (CallN (Floc 098308) [Con 0,Var (Local 4),Var (Local 6)]);
  PushFrame;
  PushReturnAddress 098298;
  SetLocal 1 0;
  SetLocal 2 GetLocal(4);
  SetLocal 3 GetLocal(6);
  MakeRoutineFrame 3;
  Jump: 098309
LocReturn 098298:
  TraceOperation 098305 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 098308:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 098309
LocOp 098309:
  TraceOperation 098309 (Sub (Var (Local 2)) (Var (Local 1)) Sp);
  PushStack Sub(GetLocal(2),GetLocal(1));
  TraceOperation 098313 (Jl (Var Sp) (Con 2) (Branch F (Dloc 098318)));
  PopStack popped1;
  if (LessThan(popped1,2)) {
    TraceOperation 098317 Rtrue;
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  } else {
    Jump: 098318
  }
LocOp 098318:
  TraceOperation 098318 (Jz (Var (Local 3)) (Branch T (Dloc 098329)));
  if (IsZero(GetLocal(3))) {
    Jump: 098329
  } else {
    TraceOperation 098321 (CallN (Fvar (Local 3)) [Var (Local 1),Var (Local 2)]);
    if (IsZeroAddress(PackedAddress Z5(GetLocal(3)))) {
      Jump: 098326
    } else {
      PushFrame;
      PushReturnAddress 098321;
      SetLocal 1 GetLocal(1);
      SetLocal 2 GetLocal(2);
      SetNumberActuals 2;
      JumpIndirect: (routine) PackedAddress Z5(GetLocal(3))
    }
  }
LocReturn 098321:
  Jump: 098326
LocOp 098326:
  TraceOperation 098326 (Jump 098335);
  Jump: 098335
LocOp 098329:
  TraceOperation 098329 (CallN (Floc 098520) [Var (Local 1),Var (Local 2)]);
  PushFrame;
  PushReturnAddress 098329;
  SetLocal 1 GetLocal(1);
  SetLocal 2 GetLocal(2);
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 098521
LocReturn 098329:
  Jump: 098335
LocOp 098335:
  TraceOperation 098335 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 098336:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 098337
LocOp 098337:
  TraceOperation 098337 (Add (Var (Local 2)) (Con 1) Sp);
  PushStack Add(GetLocal(2),1);
  TraceOperation 098341 (Add (Var (Local 1)) (Con 1) Sp);
  PushStack Add(GetLocal(1),1);
  TraceOperation 098345 (Call (Fvar (Global 203)) [Var (Global 199),Var (Global 200),Var Sp,Var Sp,Var (Global 201)] Sp);
  Let b1 = M[007612];
  Let b2 = M[007613];
  if (IsZeroAddress(PackedAddress Z5(MakeHiLo(b1,b2)))) {
    PushStack 0;
    Jump: 098355
  } else {
    Let b3 = M[007604];
    Let b4 = M[007605];
    Let b5 = M[007606];
    Let b6 = M[007607];
    PopStack popped7;
    PopStack popped8;
    Let b9 = M[007608];
    Let b10 = M[007609];
    PushFrame;
    PushReturnAddress 098345;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 MakeHiLo(b5,b6);
    SetLocal 3 popped7;
    SetLocal 4 popped8;
    SetLocal 5 MakeHiLo(b9,b10);
    SetNumberActuals 5;
    JumpIndirect: (routine) PackedAddress Z5(MakeHiLo(b1,b2))
  }
LocReturn 098345:
  PushStack call_result;
  Jump: 098355
LocOp 098355:
  TraceOperation 098355 (Mul (Var (Global 201)) (Var Sp) Sp);
  Let b1 = M[007608];
  Let b2 = M[007609];
  PopStack popped3;
  PushStack Mul(MakeHiLo(b1,b2),popped3);
  TraceOperation 098359 Ret_popped;
  PopStack popped4;
  PopFrame;
  PopReturnAddress return_address_5;
  SetResult popped4;
  JumpIndirect: (return) return_address_5
--------------------------------------------------
LocRoutine 098360:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 098361
LocOp 098361:
  TraceOperation 098361 (Add (Var (Local 2)) (Con 1) Sp);
  PushStack Add(GetLocal(2),1);
  TraceOperation 098365 (Add (Var (Local 1)) (Con 1) Sp);
  PushStack Add(GetLocal(1),1);
  TraceOperation 098369 (Call (Fvar (Global 202)) [Var (Global 199),Var Sp,Var Sp] Sp);
  Let b1 = M[007610];
  Let b2 = M[007611];
  if (IsZeroAddress(PackedAddress Z5(MakeHiLo(b1,b2)))) {
    PushStack 0;
    Jump: 098376
  } else {
    Let b3 = M[007604];
    Let b4 = M[007605];
    PopStack popped5;
    PopStack popped6;
    PushFrame;
    PushReturnAddress 098369;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 popped5;
    SetLocal 3 popped6;
    SetNumberActuals 3;
    JumpIndirect: (routine) PackedAddress Z5(MakeHiLo(b1,b2))
  }
LocReturn 098369:
  PushStack call_result;
  Jump: 098376
LocOp 098376:
  TraceOperation 098376 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 098380:
  MakeRoutineFrame 5;
  if (LessThanByte(num_actuals,5)) {
    SetLocal 5 0;
    if (LessThanByte(num_actuals,4)) {
      SetLocal 4 0;
      if (LessThanByte(num_actuals,3)) {
        SetLocal 3 0;
        if (LessThanByte(num_actuals,2)) {
          SetLocal 2 0;
          if (LessThanByte(num_actuals,1)) {
            SetLocal 1 0;
          }
        }
      }
    }
  }
  Jump: 098381
LocOp 098381:
  TraceOperation 098381 (Sub (Var (Local 2)) (Var (Local 1)) Sp);
  PushStack Sub(GetLocal(2),GetLocal(1));
  TraceOperation 098385 (Jl (Var Sp) (Con 2) (Branch F (Dloc 098390)));
  PopStack popped1;
  if (LessThan(popped1,2)) {
    TraceOperation 098389 Rtrue;
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  } else {
    Jump: 098390
  }
LocOp 098390:
  TraceOperation 098390 (Store (Con 3) (Con 1));
  SetLocal 3 1;
  Jump: 098393
LocOp 098393:
  TraceOperation 098393 (Jz (Var (Local 3)) (Branch T (Dloc 098450)));
  if (IsZero(GetLocal(3))) {
    Jump: 098450
  } else {
    TraceOperation 098396 (Store (Con 3) (Con 0));
    SetLocal 3 0;
    TraceOperation 098399 (Store (Con 4) (Var (Local 1)));
    SetLocal 4 GetLocal(1);
    Jump: 098402
  }
LocOp 098402:
  TraceOperation 098402 (Jl (Var (Local 4)) (Var (Local 2)) (Branch F (Dloc 098447)));
  if (LessThan(GetLocal(4),GetLocal(2))) {
    TraceOperation 098406 (Add (Var (Local 4)) (Con 1) (Local 5));
    SetLocal 5 Add(GetLocal(4),1);
    Jump: 098410
  } else {
    Jump: 098447
  }
LocOp 098410:
  TraceOperation 098410 (Jl (Var (Local 5)) (Var (Local 2)) (Branch F (Dloc 098442)));
  if (LessThan(GetLocal(5),GetLocal(2))) {
    TraceOperation 098414 (Call (Floc 098336) [Var (Local 4),Var (Local 5)] Sp);
    PushFrame;
    PushReturnAddress 098414;
    SetLocal 1 GetLocal(4);
    SetLocal 2 GetLocal(5);
    MakeRoutineFrame 2;
    Jump: 098337
  } else {
    Jump: 098442
  }
LocReturn 098414:
  PushStack call_result;
  TraceOperation 098421 (Jg (Var Sp) (Con 0) (Branch F (Dloc 098437)));
  PopStack popped1;
  if (GreaterThan(popped1,0)) {
    TraceOperation 098425 (CallN (Floc 098360) [Var (Local 4),Var (Local 5)]);
    PushFrame;
    PushReturnAddress 098425;
    SetLocal 1 GetLocal(4);
    SetLocal 2 GetLocal(5);
    MakeRoutineFrame 2;
    Jump: 098361
  } else {
    Jump: 098437
  }
LocReturn 098425:
  TraceOperation 098431 (Store (Con 3) (Con 1));
  SetLocal 3 1;
  TraceOperation 098434 (Jump 098442);
  Jump: 098442
LocOp 098437:
  TraceOperation 098437 (Inc (Con 5));
  SetLocal 5 Add(GetLocal(5),1);
  TraceOperation 098439 (Jump 098410);
  Jump: 098410
LocOp 098442:
  TraceOperation 098442 (Inc (Con 4));
  SetLocal 4 Add(GetLocal(4),1);
  TraceOperation 098444 (Jump 098402);
  Jump: 098402
LocOp 098447:
  TraceOperation 098447 (Jump 098393);
  Jump: 098393
LocOp 098450:
  TraceOperation 098450 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 098452:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 098453
LocOp 098453:
  TraceOperation 098453 (Add (Var (Local 1)) (Con 1) Sp);
  PushStack Add(GetLocal(1),1);
  TraceOperation 098457 (Jg (Var (Local 2)) (Var Sp) (Branch F (Dloc 098517)));
  PopStack popped1;
  if (GreaterThan(GetLocal(2),popped1)) {
    TraceOperation 098461 (Add (Var (Local 1)) (Con 1) (Local 3));
    SetLocal 3 Add(GetLocal(1),1);
    Jump: 098465
  } else {
    Jump: 098517
  }
LocOp 098465:
  TraceOperation 098465 (Jl (Var (Local 3)) (Var (Local 2)) (Branch F (Dloc 098517)));
  if (LessThan(GetLocal(3),GetLocal(2))) {
    TraceOperation 098469 (Store (Con 4) (Var (Local 3)));
    SetLocal 4 GetLocal(3);
    Jump: 098472
  } else {
    Jump: 098517
  }
LocOp 098472:
  TraceOperation 098472 (Jg (Var (Local 4)) (Var (Local 1)) (Branch F (Dloc 098512)));
  if (GreaterThan(GetLocal(4),GetLocal(1))) {
    TraceOperation 098476 (Sub (Var (Local 4)) (Con 1) Sp);
    PushStack Sub(GetLocal(4),1);
    TraceOperation 098480 (Call (Floc 098336) [Var (Local 4),Var Sp] Sp);
    PopStack popped1;
    PushFrame;
    PushReturnAddress 098480;
    SetLocal 1 GetLocal(4);
    SetLocal 2 popped1;
    MakeRoutineFrame 2;
    Jump: 098337
  } else {
    Jump: 098512
  }
LocReturn 098480:
  PushStack call_result;
  TraceOperation 098487 (Jl (Var Sp) (Con 0) (Branch F (Dloc 098504)));
  PopStack popped1;
  if (LessThan(popped1,0)) {
    TraceOperation 098491 (Sub (Var (Local 4)) (Con 1) Sp);
    PushStack Sub(GetLocal(4),1);
    TraceOperation 098495 (CallN (Floc 098360) [Var (Local 4),Var Sp]);
    PopStack popped2;
    PushFrame;
    PushReturnAddress 098495;
    SetLocal 1 GetLocal(4);
    SetLocal 2 popped2;
    MakeRoutineFrame 2;
    Jump: 098361
  } else {
    Jump: 098504
  }
LocReturn 098495:
  TraceOperation 098501 (Jump 098507);
  Jump: 098507
LocOp 098504:
  TraceOperation 098504 (Jump 098512);
  Jump: 098512
LocOp 098507:
  TraceOperation 098507 (Dec (Con 4));
  SetLocal 4 Sub(GetLocal(4),1);
  TraceOperation 098509 (Jump 098472);
  Jump: 098472
LocOp 098512:
  TraceOperation 098512 (Inc (Con 3));
  SetLocal 3 Add(GetLocal(3),1);
  TraceOperation 098514 (Jump 098465);
  Jump: 098465
LocOp 098517:
  TraceOperation 098517 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 098520:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 098521
LocOp 098521:
  TraceOperation 098521 (Sub (Var (Local 2)) (Var (Local 1)) Sp);
  PushStack Sub(GetLocal(2),GetLocal(1));
  TraceOperation 098525 (Jl (Var Sp) (Con 12) (Branch F (Dloc 098545)));
  PopStack popped1;
  if (LessThan(popped1,12)) {
    TraceOperation 098529 (Sub (Var (Local 2)) (Var (Local 1)) Sp);
    PushStack Sub(GetLocal(2),GetLocal(1));
    TraceOperation 098533 (Jl (Var Sp) (Con 2) (Branch F (Dloc 098538)));
    PopStack popped2;
    if (LessThan(popped2,2)) {
      TraceOperation 098537 Rtrue;
      PopFrame;
      PopReturnAddress return_address_3;
      SetResult 1;
      JumpIndirect: (return) return_address_3
    } else {
      Jump: 098538
    }
  } else {
    Jump: 098545
  }
LocOp 098538:
  TraceOperation 098538 (CallN (Floc 098452) [Var (Local 1),Var (Local 2)]);
  PushFrame;
  PushReturnAddress 098538;
  SetLocal 1 GetLocal(1);
  SetLocal 2 GetLocal(2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 098453
LocReturn 098538:
  TraceOperation 098544 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 098545:
  TraceOperation 098545 (Add (Var (Local 1)) (Var (Local 2)) Sp);
  PushStack Add(GetLocal(1),GetLocal(2));
  TraceOperation 098549 (Div (Var Sp) (Con 2) (Local 3));
  PopStack popped1;
  SetLocal 3 Div(popped1,2);
  TraceOperation 098553 (CallN (Floc 098520) [Var (Local 1),Var (Local 3)]);
  PushFrame;
  PushReturnAddress 098553;
  SetLocal 1 GetLocal(1);
  SetLocal 2 GetLocal(3);
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 098521
LocReturn 098553:
  TraceOperation 098559 (CallN (Floc 098520) [Var (Local 3),Var (Local 2)]);
  PushFrame;
  PushReturnAddress 098559;
  SetLocal 1 GetLocal(3);
  SetLocal 2 GetLocal(2);
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 098521
LocReturn 098559:
  TraceOperation 098565 (Sub (Var (Local 2)) (Var (Local 3)) Sp);
  PushStack Sub(GetLocal(2),GetLocal(3));
  TraceOperation 098569 (Sub (Var (Local 3)) (Var (Local 1)) Sp);
  PushStack Sub(GetLocal(3),GetLocal(1));
  TraceOperation 098573 (CallN (Floc 098760) [Var (Local 1),Var (Local 3),Var (Local 2),Var Sp,Var Sp]);
  PopStack popped1;
  PopStack popped2;
  PushFrame;
  PushReturnAddress 098573;
  SetLocal 1 GetLocal(1);
  SetLocal 2 GetLocal(3);
  SetLocal 3 GetLocal(2);
  SetLocal 4 popped1;
  SetLocal 5 popped2;
  MakeRoutineFrame 10;
  SetLocal 10 0;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  Jump: 098761
LocReturn 098573:
  TraceOperation 098583 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 098584:
  MakeRoutineFrame 6;
  if (LessThanByte(num_actuals,6)) {
    SetLocal 6 0;
    if (LessThanByte(num_actuals,5)) {
      SetLocal 5 0;
      if (LessThanByte(num_actuals,4)) {
        SetLocal 4 0;
        if (LessThanByte(num_actuals,3)) {
          SetLocal 3 0;
          if (LessThanByte(num_actuals,2)) {
            SetLocal 2 0;
            if (LessThanByte(num_actuals,1)) {
              SetLocal 1 0;
            }
          }
        }
      }
    }
  }
  Jump: 098585
LocOp 098585:
  TraceOperation 098585 (Sub (Var (Local 2)) (Var (Local 1)) (Local 4));
  SetLocal 4 Sub(GetLocal(2),GetLocal(1));
  Jump: 098589
LocOp 098589:
  TraceOperation 098589 (Jg (Var (Local 4)) (Con 0) (Branch F (Dloc 098633)));
  if (GreaterThan(GetLocal(4),0)) {
    TraceOperation 098593 (Div (Var (Local 4)) (Con 2) (Local 5));
    SetLocal 5 Div(GetLocal(4),2);
    TraceOperation 098597 (Add (Var (Local 1)) (Var (Local 5)) (Local 6));
    SetLocal 6 Add(GetLocal(1),GetLocal(5));
    TraceOperation 098601 (Call (Floc 098336) [Var (Local 6),Var (Local 3)] Sp);
    PushFrame;
    PushReturnAddress 098601;
    SetLocal 1 GetLocal(6);
    SetLocal 2 GetLocal(3);
    MakeRoutineFrame 2;
    Jump: 098337
  } else {
    Jump: 098633
  }
LocReturn 098601:
  PushStack call_result;
  TraceOperation 098608 (Jl (Var Sp) (Con 0) (Branch F (Dloc 098627)));
  PopStack popped1;
  if (LessThan(popped1,0)) {
    TraceOperation 098612 (Add (Var (Local 6)) (Con 1) (Local 1));
    SetLocal 1 Add(GetLocal(6),1);
    TraceOperation 098616 (Sub (Var (Local 4)) (Var (Local 5)) Sp);
    PushStack Sub(GetLocal(4),GetLocal(5));
    TraceOperation 098620 (Sub (Var Sp) (Con 1) (Local 4));
    PopStack popped2;
    SetLocal 4 Sub(popped2,1);
    TraceOperation 098624 (Jump 098630);
    Jump: 098630
  } else {
    Jump: 098627
  }
LocOp 098627:
  TraceOperation 098627 (Store (Con 4) (Var (Local 5)));
  SetLocal 4 GetLocal(5);
  Jump: 098630
LocOp 098630:
  TraceOperation 098630 (Jump 098589);
  Jump: 098589
LocOp 098633:
  TraceOperation 098633 (Ret (Var (Local 1)));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult GetLocal(1);
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 098636:
  MakeRoutineFrame 6;
  if (LessThanByte(num_actuals,6)) {
    SetLocal 6 0;
    if (LessThanByte(num_actuals,5)) {
      SetLocal 5 0;
      if (LessThanByte(num_actuals,4)) {
        SetLocal 4 0;
        if (LessThanByte(num_actuals,3)) {
          SetLocal 3 0;
          if (LessThanByte(num_actuals,2)) {
            SetLocal 2 0;
            if (LessThanByte(num_actuals,1)) {
              SetLocal 1 0;
            }
          }
        }
      }
    }
  }
  Jump: 098637
LocOp 098637:
  TraceOperation 098637 (Sub (Var (Local 2)) (Var (Local 1)) (Local 4));
  SetLocal 4 Sub(GetLocal(2),GetLocal(1));
  Jump: 098641
LocOp 098641:
  TraceOperation 098641 (Jg (Var (Local 4)) (Con 0) (Branch F (Dloc 098685)));
  if (GreaterThan(GetLocal(4),0)) {
    TraceOperation 098645 (Div (Var (Local 4)) (Con 2) (Local 5));
    SetLocal 5 Div(GetLocal(4),2);
    TraceOperation 098649 (Add (Var (Local 1)) (Var (Local 5)) (Local 6));
    SetLocal 6 Add(GetLocal(1),GetLocal(5));
    TraceOperation 098653 (Call (Floc 098336) [Var (Local 3),Var (Local 6)] Sp);
    PushFrame;
    PushReturnAddress 098653;
    SetLocal 1 GetLocal(3);
    SetLocal 2 GetLocal(6);
    MakeRoutineFrame 2;
    Jump: 098337
  } else {
    Jump: 098685
  }
LocReturn 098653:
  PushStack call_result;
  TraceOperation 098660 (Jl (Var Sp) (Con 0) (Branch F (Dloc 098670)));
  PopStack popped1;
  if (LessThan(popped1,0)) {
    TraceOperation 098664 (Store (Con 4) (Var (Local 5)));
    SetLocal 4 GetLocal(5);
    TraceOperation 098667 (Jump 098682);
    Jump: 098682
  } else {
    Jump: 098670
  }
LocOp 098670:
  TraceOperation 098670 (Add (Var (Local 6)) (Con 1) (Local 1));
  SetLocal 1 Add(GetLocal(6),1);
  TraceOperation 098674 (Sub (Var (Local 4)) (Var (Local 5)) Sp);
  PushStack Sub(GetLocal(4),GetLocal(5));
  TraceOperation 098678 (Sub (Var Sp) (Con 1) (Local 4));
  PopStack popped1;
  SetLocal 4 Sub(popped1,1);
  Jump: 098682
LocOp 098682:
  TraceOperation 098682 (Jump 098641);
  Jump: 098641
LocOp 098685:
  TraceOperation 098685 (Ret (Var (Local 1)));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult GetLocal(1);
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 098688:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 098689
LocOp 098689:
  TraceOperation 098689 (Jl (Var (Local 1)) (Var (Local 2)) (Branch F (Dloc 098712)));
  if (LessThan(GetLocal(1),GetLocal(2))) {
    TraceOperation 098693 (Push (Var (Local 2)));
    PushStack GetLocal(2);
    TraceOperation 098696 (Dec (Con 2));
    SetLocal 2 Sub(GetLocal(2),1);
    TraceOperation 098698 (Push (Var (Local 1)));
    PushStack GetLocal(1);
    TraceOperation 098701 (Inc (Con 1));
    SetLocal 1 Add(GetLocal(1),1);
    TraceOperation 098703 (CallN (Floc 098360) [Var Sp,Var Sp]);
    PopStack popped1;
    PopStack popped2;
    PushFrame;
    PushReturnAddress 098703;
    SetLocal 1 popped1;
    SetLocal 2 popped2;
    MakeRoutineFrame 2;
    Jump: 098361
  } else {
    Jump: 098712
  }
LocReturn 098703:
  TraceOperation 098709 (Jump 098689);
  Jump: 098689
LocOp 098712:
  TraceOperation 098712 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 098760:
  MakeRoutineFrame 10;
  if (LessThanByte(num_actuals,10)) {
    SetLocal 10 0;
    if (LessThanByte(num_actuals,9)) {
      SetLocal 9 0;
      if (LessThanByte(num_actuals,8)) {
        SetLocal 8 0;
        if (LessThanByte(num_actuals,7)) {
          SetLocal 7 0;
          if (LessThanByte(num_actuals,6)) {
            SetLocal 6 0;
            if (LessThanByte(num_actuals,5)) {
              SetLocal 5 0;
              if (LessThanByte(num_actuals,4)) {
                SetLocal 4 0;
                if (LessThanByte(num_actuals,3)) {
                  SetLocal 3 0;
                  if (LessThanByte(num_actuals,2)) {
                    SetLocal 2 0;
                    if (LessThanByte(num_actuals,1)) {
                      SetLocal 1 0;
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  Jump: 098761
LocOp 098761:
  TraceOperation 098761 (Jz (Var (Local 4)) (Branch T (Dloc 098767)));
  if (IsZero(GetLocal(4))) {
    Jump: 098767
  } else {
    TraceOperation 098764 (Jz (Var (Local 5)) (Branch F (Dloc 098768)));
    if (IsZero(GetLocal(5))) {
      Jump: 098767
    } else {
      Jump: 098768
    }
  }
LocOp 098767:
  TraceOperation 098767 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 098768:
  TraceOperation 098768 (Add (Var (Local 4)) (Var (Local 5)) Sp);
  PushStack Add(GetLocal(4),GetLocal(5));
  TraceOperation 098772 (Je [Var Sp,Con 2] (Branch F (Dloc 098794)));
  PopStack popped1;
  if (Equal(popped1,2)) {
    TraceOperation 098776 (Call (Floc 098336) [Var (Local 2),Var (Local 1)] Sp);
    PushFrame;
    PushReturnAddress 098776;
    SetLocal 1 GetLocal(2);
    SetLocal 2 GetLocal(1);
    MakeRoutineFrame 2;
    Jump: 098337
  } else {
    Jump: 098794
  }
LocReturn 098776:
  PushStack call_result;
  TraceOperation 098783 (Jl (Var Sp) (Con 0) (Branch F (Dloc 098793)));
  PopStack popped1;
  if (LessThan(popped1,0)) {
    TraceOperation 098787 (CallN (Floc 098360) [Var (Local 2),Var (Local 1)]);
    PushFrame;
    PushReturnAddress 098787;
    SetLocal 1 GetLocal(2);
    SetLocal 2 GetLocal(1);
    MakeRoutineFrame 2;
    Jump: 098361
  } else {
    Jump: 098793
  }
LocReturn 098787:
  Jump: 098793
LocOp 098793:
  TraceOperation 098793 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 098794:
  TraceOperation 098794 (Jg (Var (Local 4)) (Var (Local 5)) (Branch F (Dloc 098821)));
  if (GreaterThan(GetLocal(4),GetLocal(5))) {
    TraceOperation 098798 (Div (Var (Local 4)) (Con 2) (Local 8));
    SetLocal 8 Div(GetLocal(4),2);
    TraceOperation 098802 (Add (Var (Local 1)) (Var (Local 8)) (Local 6));
    SetLocal 6 Add(GetLocal(1),GetLocal(8));
    TraceOperation 098806 (Call (Floc 098584) [Var (Local 2),Var (Local 3),Var (Local 6)] (Local 7));
    PushFrame;
    PushReturnAddress 098806;
    SetLocal 1 GetLocal(2);
    SetLocal 2 GetLocal(3);
    SetLocal 3 GetLocal(6);
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    Jump: 098585
  } else {
    Jump: 098821
  }
LocReturn 098806:
  SetLocal 7 call_result;
  TraceOperation 098814 (Sub (Var (Local 7)) (Var (Local 2)) (Local 9));
  SetLocal 9 Sub(GetLocal(7),GetLocal(2));
  TraceOperation 098818 (Jump 098841);
  Jump: 098841
LocOp 098821:
  TraceOperation 098821 (Div (Var (Local 5)) (Con 2) (Local 9));
  SetLocal 9 Div(GetLocal(5),2);
  TraceOperation 098825 (Add (Var (Local 2)) (Var (Local 9)) (Local 7));
  SetLocal 7 Add(GetLocal(2),GetLocal(9));
  TraceOperation 098829 (Call (Floc 098636) [Var (Local 1),Var (Local 2),Var (Local 7)] (Local 6));
  PushFrame;
  PushReturnAddress 098829;
  SetLocal 1 GetLocal(1);
  SetLocal 2 GetLocal(2);
  SetLocal 3 GetLocal(7);
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 098637
LocReturn 098829:
  SetLocal 6 call_result;
  TraceOperation 098837 (Sub (Var (Local 6)) (Var (Local 1)) (Local 8));
  SetLocal 8 Sub(GetLocal(6),GetLocal(1));
  Jump: 098841
LocOp 098841:
  TraceOperation 098841 (CallN (Floc 098716) [Var (Local 6),Var (Local 2),Var (Local 7)]);
  PushFrame;
  PushReturnAddress 098841;
  SetLocal 1 GetLocal(6);
  SetLocal 2 GetLocal(2);
  SetLocal 3 GetLocal(7);
  MakeRoutineFrame 8;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 098717
LocReturn 098841:
  TraceOperation 098848 (Add (Var (Local 6)) (Var (Local 9)) (Local 10));
  SetLocal 10 Add(GetLocal(6),GetLocal(9));
  TraceOperation 098852 (CallN (Floc 098760) [Var (Local 1),Var (Local 6),Var (Local 10),Var (Local 8),Var (Local 9)]);
  PushFrame;
  PushReturnAddress 098852;
  SetLocal 1 GetLocal(1);
  SetLocal 2 GetLocal(6);
  SetLocal 3 GetLocal(10);
  SetLocal 4 GetLocal(8);
  SetLocal 5 GetLocal(9);
  MakeRoutineFrame 10;
  SetLocal 10 0;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  Jump: 098761
LocReturn 098852:
  TraceOperation 098862 (Sub (Var (Local 5)) (Var (Local 9)) Sp);
  PushStack Sub(GetLocal(5),GetLocal(9));
  TraceOperation 098866 (Sub (Var (Local 4)) (Var (Local 8)) Sp);
  PushStack Sub(GetLocal(4),GetLocal(8));
  TraceOperation 098870 (CallN (Floc 098760) [Var (Local 10),Var (Local 7),Var (Local 3),Var Sp,Var Sp]);
  PopStack popped1;
  PopStack popped2;
  PushFrame;
  PushReturnAddress 098870;
  SetLocal 1 GetLocal(10);
  SetLocal 2 GetLocal(7);
  SetLocal 3 GetLocal(3);
  SetLocal 4 popped1;
  SetLocal 5 popped2;
  MakeRoutineFrame 10;
  SetLocal 10 0;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  Jump: 098761
LocReturn 098870:
  TraceOperation 098880 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 098884:
  MakeRoutineFrame 6;
  if (LessThanByte(num_actuals,6)) {
    SetLocal 6 0;
    if (LessThanByte(num_actuals,5)) {
      SetLocal 5 0;
      if (LessThanByte(num_actuals,4)) {
        SetLocal 4 0;
        if (LessThanByte(num_actuals,3)) {
          SetLocal 3 0;
          if (LessThanByte(num_actuals,2)) {
            SetLocal 2 0;
            if (LessThanByte(num_actuals,1)) {
              SetLocal 1 0;
            }
          }
        }
      }
    }
  }
  Jump: 098885
LocOp 098885:
  TraceOperation 098885 (Loadw (Var (Local 1)) (Con 0) (Local 5));
  Let b1 = M[Offset(Address(GetLocal(1)),0)];
  Let b2 = M[Offset(Offset(Address(GetLocal(1)),0),1)];
  SetLocal 5 MakeHiLo(b1,b2);
  TraceOperation 098889 (Store (Con 4) (Con 1));
  SetLocal 4 1;
  Jump: 098892
LocOp 098892:
  TraceOperation 098892 (Jg (Var (Local 4)) (Var (Local 5)) (Branch T (Dloc 098921)));
  if (GreaterThan(GetLocal(4),GetLocal(5))) {
    Jump: 098921
  } else {
    TraceOperation 098896 (Loadw (Var (Local 1)) (Var (Local 4)) Sp);
    Let b1 = M[Offset(Address(GetLocal(1)),Mul(2,GetLocal(4)))];
    Let b2 = M[Offset(Offset(Address(GetLocal(1)),Mul(2,GetLocal(4))),1)];
    PushStack MakeHiLo(b1,b2);
    TraceOperation 098900 (Loadw (Var Sp) (Con 1) Sp);
    PopStack popped3;
    Let b4 = M[Offset(Address(popped3),2)];
    Let b5 = M[Offset(Offset(Address(popped3),2),1)];
    PushStack MakeHiLo(b4,b5);
    TraceOperation 098904 (And (Var Sp) (Con 511) Sp);
    PopStack popped6;
    PushStack And(popped6,511);
    TraceOperation 098910 (Je [Var (Local 2),Var Sp] (Branch F (Dloc 098916)));
    PopStack popped7;
    if (Equal(GetLocal(2),popped7)) {
      TraceOperation 098914 (Ret (Var (Local 4)));
      PopFrame;
      PopReturnAddress return_address_8;
      SetResult GetLocal(4);
      JumpIndirect: (return) return_address_8
    } else {
      Jump: 098916
    }
  }
LocOp 098916:
  TraceOperation 098916 (Inc (Con 4));
  SetLocal 4 Add(GetLocal(4),1);
  TraceOperation 098918 (Jump 098892);
  Jump: 098892
LocOp 098921:
  TraceOperation 098921 (Jz (Var (Local 3)) (Branch T (Dloc 098932)));
  if (IsZero(GetLocal(3))) {
    Jump: 098932
  } else {
    TraceOperation 098924 (Call (Floc 086692) [Con 20,Var (Local 1)] Sp);
    PushFrame;
    PushReturnAddress 098924;
    SetLocal 1 20;
    SetLocal 2 GetLocal(1);
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 086693
  }
LocReturn 098924:
  PushStack call_result;
  TraceOperation 098931 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 098932:
  TraceOperation 098932 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 098936:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 098937
LocOp 098937:
  TraceOperation 098937 (Loadw (Var (Local 1)) (Con 1) Sp);
  Let b1 = M[Offset(Address(GetLocal(1)),2)];
  Let b2 = M[Offset(Offset(Address(GetLocal(1)),2),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 098941 (Loadw (Var Sp) (Con 0) Sp);
  PopStack popped3;
  Let b4 = M[Offset(Address(popped3),0)];
  Let b5 = M[Offset(Offset(Address(popped3),0),1)];
  PushStack MakeHiLo(b4,b5);
  TraceOperation 098945 (Sub (Var Sp) (Con 2) Sp);
  PopStack popped6;
  PushStack Sub(popped6,2);
  TraceOperation 098949 Ret_popped;
  PopStack popped7;
  PopFrame;
  PopReturnAddress return_address_8;
  SetResult popped7;
  JumpIndirect: (return) return_address_8
--------------------------------------------------
LocRoutine 098952:
  MakeRoutineFrame 5;
  if (LessThanByte(num_actuals,5)) {
    SetLocal 5 0;
    if (LessThanByte(num_actuals,4)) {
      SetLocal 4 0;
      if (LessThanByte(num_actuals,3)) {
        SetLocal 3 0;
        if (LessThanByte(num_actuals,2)) {
          SetLocal 2 0;
          if (LessThanByte(num_actuals,1)) {
            SetLocal 1 0;
          }
        }
      }
    }
  }
  Jump: 098953
LocOp 098953:
  TraceOperation 098953 (Jl (Var (Local 2)) (Con 100) (Branch T (Dloc 098964)));
  if (LessThan(GetLocal(2),100)) {
    Jump: 098964
  } else {
    TraceOperation 098957 (Call (Floc 098884) [Var (Local 1),Var (Local 2)] (Local 2));
    PushFrame;
    PushReturnAddress 098957;
    SetLocal 1 GetLocal(1);
    SetLocal 2 GetLocal(2);
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 098885
  }
LocReturn 098957:
  SetLocal 2 call_result;
  Jump: 098964
LocOp 098964:
  TraceOperation 098964 (Jz (Var (Local 2)) (Branch T Dtrue));
  if (IsZero(GetLocal(2))) {
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    TraceOperation 098967 (Add (Var (Local 3)) (Con 2) Sp);
    PushStack Add(GetLocal(3),2);
    TraceOperation 098971 (Loadw (Var (Local 1)) (Var (Local 2)) Sp);
    Let b2 = M[Offset(Address(GetLocal(1)),Mul(2,GetLocal(2)))];
    Let b3 = M[Offset(Offset(Address(GetLocal(1)),Mul(2,GetLocal(2))),1)];
    PushStack MakeHiLo(b2,b3);
    TraceOperation 098975 (Loadw (Var Sp) (Var Sp) Sp);
    PopStack popped4;
    PopStack popped5;
    Let b6 = M[Offset(Address(popped4),Mul(2,popped5))];
    Let b7 = M[Offset(Offset(Address(popped4),Mul(2,popped5)),1)];
    PushStack MakeHiLo(b6,b7);
    TraceOperation 098979 (Je [Var Sp,Con 32739] (Branch T (Dloc 099040)));
    PopStack popped8;
    if (Equal(popped8,32739)) {
      Jump: 099040
    } else {
      TraceOperation 098985 (Print "*** CTEIB on nonblank value ");
      GamePrint "*** CTEIB on nonblank value ";
      TraceOperation 099014 (Print_num (Var (Local 1)));
      GamePrint ShowNumber(GetLocal(1));
      TraceOperation 099017 (Print " ");
      GamePrint " ";
      TraceOperation 099020 (Print_num (Var (Local 2)));
      GamePrint ShowNumber(GetLocal(2));
      TraceOperation 099023 (Print " ");
      GamePrint " ";
      TraceOperation 099026 (Print_num (Var (Local 3)));
      GamePrint ShowNumber(GetLocal(3));
      TraceOperation 099029 (Print " ***\n");
      GamePrint " ***\n";
      Jump: 099040
    }
  }
LocOp 099040:
  TraceOperation 099040 (Loadw (Var (Local 1)) (Var (Local 2)) Sp);
  Let b1 = M[Offset(Address(GetLocal(1)),Mul(2,GetLocal(2)))];
  Let b2 = M[Offset(Offset(Address(GetLocal(1)),Mul(2,GetLocal(2))),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 099044 (Loadw (Var Sp) (Con 1) Sp);
  PopStack popped3;
  Let b4 = M[Offset(Address(popped3),2)];
  Let b5 = M[Offset(Offset(Address(popped3),2),1)];
  PushStack MakeHiLo(b4,b5);
  TraceOperation 099048 (And (Var Sp) (Con 2048) Sp);
  PopStack popped6;
  PushStack And(popped6,2048);
  TraceOperation 099054 (Jz (Var Sp) (Branch F Dtrue));
  PopStack popped7;
  if (IsZero(popped7)) {
    TraceOperation 099057 (Dec (Con 3));
    SetLocal 3 Sub(GetLocal(3),1);
    TraceOperation 099059 (Div (Var (Local 3)) (Con 8) Sp);
    PushStack Div(GetLocal(3),8);
    TraceOperation 099063 (Loadw (Var (Local 1)) (Var (Local 2)) Sp);
    Let b8 = M[Offset(Address(GetLocal(1)),Mul(2,GetLocal(2)))];
    Let b9 = M[Offset(Offset(Address(GetLocal(1)),Mul(2,GetLocal(2))),1)];
    PushStack MakeHiLo(b8,b9);
    TraceOperation 099067 (Loadw (Var Sp) (Con 2) Sp);
    PopStack popped10;
    Let b11 = M[Offset(Address(popped10),4)];
    Let b12 = M[Offset(Offset(Address(popped10),4),1)];
    PushStack MakeHiLo(b11,b12);
    TraceOperation 099071 (Add (Var Sp) (Var Sp) (Local 5));
    PopStack popped13;
    PopStack popped14;
    SetLocal 5 Add(popped13,popped14);
    TraceOperation 099075 (Mod (Var (Local 3)) (Con 8) Sp);
    PushStack Mod(GetLocal(3),8);
    TraceOperation 099079 (Loadb (Con 19802) (Var Sp) Sp);
    PopStack popped15;
    Let b16 = M[Offset(019802,popped15)];
    PushStack Widen(b16);
    TraceOperation 099085 (Loadb (Con 12650) (Var (Local 5)) Sp);
    Let b17 = M[Offset(012650,GetLocal(5))];
    PushStack Widen(b17);
    TraceOperation 099091 (And (Var Sp) (Var Sp) Sp);
    PopStack popped18;
    PopStack popped19;
    PushStack And(popped18,popped19);
    TraceOperation 099095 (Jz (Var Sp) (Branch F Dtrue));
    PopStack popped20;
    if (IsZero(popped20)) {
      TraceOperation 099098 Rfalse;
      PopFrame;
      PopReturnAddress return_address_21;
      SetResult 0;
      JumpIndirect: (return) return_address_21
    } else {
      PopFrame;
      PopReturnAddress return_address_22;
      SetResult 1;
      JumpIndirect: (return) return_address_22
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_23;
    SetResult 1;
    JumpIndirect: (return) return_address_23
  }
--------------------------------------------------
LocRoutine 099100:
  MakeRoutineFrame 7;
  if (LessThanByte(num_actuals,7)) {
    SetLocal 7 0;
    if (LessThanByte(num_actuals,6)) {
      SetLocal 6 0;
      if (LessThanByte(num_actuals,5)) {
        SetLocal 5 0;
        if (LessThanByte(num_actuals,4)) {
          SetLocal 4 0;
          if (LessThanByte(num_actuals,3)) {
            SetLocal 3 0;
            if (LessThanByte(num_actuals,2)) {
              SetLocal 2 0;
              if (LessThanByte(num_actuals,1)) {
                SetLocal 1 0;
              }
            }
          }
        }
      }
    }
  }
  Jump: 099101
LocOp 099101:
  TraceOperation 099101 (Jl (Var (Local 2)) (Con 100) (Branch T (Dloc 099112)));
  if (LessThan(GetLocal(2),100)) {
    Jump: 099112
  } else {
    TraceOperation 099105 (Call (Floc 098884) [Var (Local 1),Var (Local 2)] (Local 2));
    PushFrame;
    PushReturnAddress 099105;
    SetLocal 1 GetLocal(1);
    SetLocal 2 GetLocal(2);
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 098885
  }
LocReturn 099105:
  SetLocal 2 call_result;
  Jump: 099112
LocOp 099112:
  TraceOperation 099112 (Jz (Var (Local 2)) (Branch T Dtrue));
  if (IsZero(GetLocal(2))) {
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    TraceOperation 099115 (Loadw (Var (Local 1)) (Var (Local 2)) Sp);
    Let b2 = M[Offset(Address(GetLocal(1)),Mul(2,GetLocal(2)))];
    Let b3 = M[Offset(Offset(Address(GetLocal(1)),Mul(2,GetLocal(2))),1)];
    PushStack MakeHiLo(b2,b3);
    TraceOperation 099119 (Loadw (Var Sp) (Con 1) (Local 7));
    PopStack popped4;
    Let b5 = M[Offset(Address(popped4),2)];
    Let b6 = M[Offset(Offset(Address(popped4),2),1)];
    SetLocal 7 MakeHiLo(b5,b6);
    TraceOperation 099123 (Add (Var (Local 3)) (Con 2) Sp);
    PushStack Add(GetLocal(3),2);
    TraceOperation 099127 (Loadw (Var (Local 1)) (Var (Local 2)) Sp);
    Let b7 = M[Offset(Address(GetLocal(1)),Mul(2,GetLocal(2)))];
    Let b8 = M[Offset(Offset(Address(GetLocal(1)),Mul(2,GetLocal(2))),1)];
    PushStack MakeHiLo(b7,b8);
    TraceOperation 099131 (Loadw (Var Sp) (Var Sp) (Local 6));
    PopStack popped9;
    PopStack popped10;
    Let b11 = M[Offset(Address(popped9),Mul(2,popped10))];
    Let b12 = M[Offset(Offset(Address(popped9),Mul(2,popped10)),1)];
    SetLocal 6 MakeHiLo(b11,b12);
    TraceOperation 099135 (And (Var (Local 7)) (Con 512) Sp);
    PushStack And(GetLocal(7),512);
    TraceOperation 099141 (Jz (Var Sp) (Branch T (Dloc 099156)));
    PopStack popped13;
    if (IsZero(popped13)) {
      Jump: 099156
    } else {
      TraceOperation 099144 (Je [Var (Local 6),Con 0,Con 32739] (Branch T (Dloc 099156)));
      if (LogOr(Equal(GetLocal(6),0),Equal(GetLocal(6),32739))) {
        Jump: 099156
      } else {
        TraceOperation 099151 (CallN (Floc 110012) [Var (Local 6)]);
        PushFrame;
        PushReturnAddress 099151;
        SetLocal 1 GetLocal(6);
        MakeRoutineFrame 0;
        Jump: 110013
      }
    }
  }
LocReturn 099151:
  Jump: 099156
LocOp 099156:
  TraceOperation 099156 (Add (Var (Local 3)) (Con 2) Sp);
  PushStack Add(GetLocal(3),2);
  TraceOperation 099160 (Loadw (Var (Local 1)) (Var (Local 2)) Sp);
  Let b1 = M[Offset(Address(GetLocal(1)),Mul(2,GetLocal(2)))];
  Let b2 = M[Offset(Offset(Address(GetLocal(1)),Mul(2,GetLocal(2))),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 099164 (Storew (Var Sp) (Var Sp) (Con 32739));
  PopStack popped3;
  PopStack popped4;
  SetByte Offset(Address(popped3),Mul(2,popped4)) 127;
  SetByte Offset(Offset(Address(popped3),Mul(2,popped4)),1) 227;
  TraceOperation 099170 (And (Var (Local 7)) (Con 2048) Sp);
  PushStack And(GetLocal(7),2048);
  TraceOperation 099176 (Jz (Var Sp) (Branch T (Dloc 099180)));
  PopStack popped5;
  if (IsZero(popped5)) {
    Jump: 099180
  } else {
    TraceOperation 099179 Rtrue;
    PopFrame;
    PopReturnAddress return_address_6;
    SetResult 1;
    JumpIndirect: (return) return_address_6
  }
LocOp 099180:
  TraceOperation 099180 (Dec (Con 3));
  SetLocal 3 Sub(GetLocal(3),1);
  TraceOperation 099182 (Div (Var (Local 3)) (Con 8) Sp);
  PushStack Div(GetLocal(3),8);
  TraceOperation 099186 (Loadw (Var (Local 1)) (Var (Local 2)) Sp);
  Let b1 = M[Offset(Address(GetLocal(1)),Mul(2,GetLocal(2)))];
  Let b2 = M[Offset(Offset(Address(GetLocal(1)),Mul(2,GetLocal(2))),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 099190 (Loadw (Var Sp) (Con 2) Sp);
  PopStack popped3;
  Let b4 = M[Offset(Address(popped3),4)];
  Let b5 = M[Offset(Offset(Address(popped3),4),1)];
  PushStack MakeHiLo(b4,b5);
  TraceOperation 099194 (Add (Var Sp) (Var Sp) (Local 5));
  PopStack popped6;
  PopStack popped7;
  SetLocal 5 Add(popped6,popped7);
  TraceOperation 099198 (Mod (Var (Local 3)) (Con 8) Sp);
  PushStack Mod(GetLocal(3),8);
  TraceOperation 099202 (Loadb (Con 19802) (Var Sp) Sp);
  PopStack popped8;
  Let b9 = M[Offset(019802,popped8)];
  PushStack Widen(b9);
  TraceOperation 099208 (Loadb (Con 12650) (Var (Local 5)) Sp);
  Let b10 = M[Offset(012650,GetLocal(5))];
  PushStack Widen(b10);
  TraceOperation 099214 (Or (Var Sp) (Var Sp) Sp);
  PopStack popped11;
  PopStack popped12;
  PushStack Or(popped11,popped12);
  TraceOperation 099218 (Storeb (Con 12650) (Var (Local 5)) (Var Sp));
  PopStack popped13;
  SetByte Offset(012650,GetLocal(5)) LoByte(popped13);
  TraceOperation 099224 Rtrue;
  PopFrame;
  PopReturnAddress return_address_14;
  SetResult 1;
  JumpIndirect: (return) return_address_14
--------------------------------------------------
LocRoutine 099318:
  MakeRoutineFrame 0;
  Jump: 099319
LocOp 099319:
  TraceOperation 099319 (Jump 099326);
  Jump: 099326
--------------------------------------------------
LocRoutine 099424:
  MakeRoutineFrame 0;
  Jump: 099425
LocOp 099425:
  TraceOperation 099425 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 099428:
  MakeRoutineFrame 8;
  if (LessThanByte(num_actuals,8)) {
    SetLocal 8 0;
    if (LessThanByte(num_actuals,7)) {
      SetLocal 7 0;
      if (LessThanByte(num_actuals,6)) {
        SetLocal 6 0;
        if (LessThanByte(num_actuals,5)) {
          SetLocal 5 0;
          if (LessThanByte(num_actuals,4)) {
            SetLocal 4 0;
            if (LessThanByte(num_actuals,3)) {
              SetLocal 3 0;
              if (LessThanByte(num_actuals,2)) {
                SetLocal 2 0;
                if (LessThanByte(num_actuals,1)) {
                  SetLocal 1 0;
                }
              }
            }
          }
        }
      }
    }
  }
  Jump: 099429
LocOp 099429:
  TraceOperation 099429 (Jl (Var (Local 4)) (Con 100) (Branch T (Dloc 099440)));
  if (LessThan(GetLocal(4),100)) {
    Jump: 099440
  } else {
    TraceOperation 099433 (Call (Floc 098884) [Var (Local 1),Var (Local 4)] (Local 4));
    PushFrame;
    PushReturnAddress 099433;
    SetLocal 1 GetLocal(1);
    SetLocal 2 GetLocal(4);
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 098885
  }
LocReturn 099433:
  SetLocal 4 call_result;
  Jump: 099440
LocOp 099440:
  TraceOperation 099440 (Jz (Var (Local 4)) (Branch T Dtrue));
  if (IsZero(GetLocal(4))) {
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    TraceOperation 099443 (Loadw (Var (Local 1)) (Var (Local 4)) Sp);
    Let b2 = M[Offset(Address(GetLocal(1)),Mul(2,GetLocal(4)))];
    Let b3 = M[Offset(Offset(Address(GetLocal(1)),Mul(2,GetLocal(4))),1)];
    PushStack MakeHiLo(b2,b3);
    TraceOperation 099447 (Loadw (Var Sp) (Con 1) Sp);
    PopStack popped4;
    Let b5 = M[Offset(Address(popped4),2)];
    Let b6 = M[Offset(Offset(Address(popped4),2),1)];
    PushStack MakeHiLo(b5,b6);
    TraceOperation 099451 (And (Var Sp) (Con 2048) Sp);
    PopStack popped7;
    PushStack And(popped7,2048);
    TraceOperation 099457 (Jz (Var Sp) (Branch T (Dloc 099461)));
    PopStack popped8;
    if (IsZero(popped8)) {
      Jump: 099461
    } else {
      TraceOperation 099460 Rtrue;
      PopFrame;
      PopReturnAddress return_address_9;
      SetResult 1;
      JumpIndirect: (return) return_address_9
    }
  }
LocOp 099461:
  TraceOperation 099461 (Dec (Con 2));
  SetLocal 2 Sub(GetLocal(2),1);
  TraceOperation 099463 (Div (Var (Local 2)) (Con 8) Sp);
  PushStack Div(GetLocal(2),8);
  TraceOperation 099467 (Loadw (Var (Local 1)) (Var (Local 4)) Sp);
  Let b1 = M[Offset(Address(GetLocal(1)),Mul(2,GetLocal(4)))];
  Let b2 = M[Offset(Offset(Address(GetLocal(1)),Mul(2,GetLocal(4))),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 099471 (Loadw (Var Sp) (Con 2) Sp);
  PopStack popped3;
  Let b4 = M[Offset(Address(popped3),4)];
  Let b5 = M[Offset(Offset(Address(popped3),4),1)];
  PushStack MakeHiLo(b4,b5);
  TraceOperation 099475 (Add (Var Sp) (Var Sp) (Local 5));
  PopStack popped6;
  PopStack popped7;
  SetLocal 5 Add(popped6,popped7);
  TraceOperation 099479 (Dec (Con 3));
  SetLocal 3 Sub(GetLocal(3),1);
  TraceOperation 099481 (Div (Var (Local 3)) (Con 8) Sp);
  PushStack Div(GetLocal(3),8);
  TraceOperation 099485 (Loadw (Var (Local 1)) (Var (Local 4)) Sp);
  Let b8 = M[Offset(Address(GetLocal(1)),Mul(2,GetLocal(4)))];
  Let b9 = M[Offset(Offset(Address(GetLocal(1)),Mul(2,GetLocal(4))),1)];
  PushStack MakeHiLo(b8,b9);
  TraceOperation 099489 (Loadw (Var Sp) (Con 2) Sp);
  PopStack popped10;
  Let b11 = M[Offset(Address(popped10),4)];
  Let b12 = M[Offset(Offset(Address(popped10),4),1)];
  PushStack MakeHiLo(b11,b12);
  TraceOperation 099493 (Add (Var Sp) (Var Sp) (Local 6));
  PopStack popped13;
  PopStack popped14;
  SetLocal 6 Add(popped13,popped14);
  TraceOperation 099497 (Mod (Var (Local 2)) (Con 8) Sp);
  PushStack Mod(GetLocal(2),8);
  TraceOperation 099501 (Loadb (Con 19802) (Var Sp) Sp);
  PopStack popped15;
  Let b16 = M[Offset(019802,popped15)];
  PushStack Widen(b16);
  TraceOperation 099507 (Loadb (Con 12650) (Var (Local 5)) Sp);
  Let b17 = M[Offset(012650,GetLocal(5))];
  PushStack Widen(b17);
  TraceOperation 099513 (And (Var Sp) (Var Sp) (Local 7));
  PopStack popped18;
  PopStack popped19;
  SetLocal 7 And(popped18,popped19);
  TraceOperation 099517 (Mod (Var (Local 3)) (Con 8) Sp);
  PushStack Mod(GetLocal(3),8);
  TraceOperation 099521 (Loadb (Con 19802) (Var Sp) Sp);
  PopStack popped20;
  Let b21 = M[Offset(019802,popped20)];
  PushStack Widen(b21);
  TraceOperation 099527 (Loadb (Con 12650) (Var (Local 6)) Sp);
  Let b22 = M[Offset(012650,GetLocal(6))];
  PushStack Widen(b22);
  TraceOperation 099533 (And (Var Sp) (Var Sp) (Local 8));
  PopStack popped23;
  PopStack popped24;
  SetLocal 8 And(popped23,popped24);
  TraceOperation 099537 (Jz (Var (Local 7)) (Branch T (Dloc 099543)));
  if (IsZero(GetLocal(7))) {
    Jump: 099543
  } else {
    TraceOperation 099540 (Store (Con 7) (Con 1));
    SetLocal 7 1;
    Jump: 099543
  }
LocOp 099543:
  TraceOperation 099543 (Jz (Var (Local 8)) (Branch T (Dloc 099549)));
  if (IsZero(GetLocal(8))) {
    Jump: 099549
  } else {
    TraceOperation 099546 (Store (Con 8) (Con 1));
    SetLocal 8 1;
    Jump: 099549
  }
LocOp 099549:
  TraceOperation 099549 (Je [Var (Local 7),Var (Local 8)] (Branch F (Dloc 099554)));
  if (Equal(GetLocal(7),GetLocal(8))) {
    TraceOperation 099553 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 099554
  }
LocOp 099554:
  TraceOperation 099554 (Jz (Var (Local 7)) (Branch T (Dloc 099612)));
  if (IsZero(GetLocal(7))) {
    Jump: 099612
  } else {
    TraceOperation 099557 (Mod (Var (Local 2)) (Con 8) Sp);
    PushStack Mod(GetLocal(2),8);
    TraceOperation 099561 (Loadb (Con 19810) (Var Sp) Sp);
    PopStack popped1;
    Let b2 = M[Offset(019810,popped1)];
    PushStack Widen(b2);
    TraceOperation 099567 (Loadb (Con 12650) (Var (Local 5)) Sp);
    Let b3 = M[Offset(012650,GetLocal(5))];
    PushStack Widen(b3);
    TraceOperation 099573 (And (Var Sp) (Var Sp) Sp);
    PopStack popped4;
    PopStack popped5;
    PushStack And(popped4,popped5);
    TraceOperation 099577 (Storeb (Con 12650) (Var (Local 5)) (Var Sp));
    PopStack popped6;
    SetByte Offset(012650,GetLocal(5)) LoByte(popped6);
    TraceOperation 099583 (Mod (Var (Local 3)) (Con 8) Sp);
    PushStack Mod(GetLocal(3),8);
    TraceOperation 099587 (Loadb (Con 19802) (Var Sp) Sp);
    PopStack popped7;
    Let b8 = M[Offset(019802,popped7)];
    PushStack Widen(b8);
    TraceOperation 099593 (Loadb (Con 12650) (Var (Local 6)) Sp);
    Let b9 = M[Offset(012650,GetLocal(6))];
    PushStack Widen(b9);
    TraceOperation 099599 (Or (Var Sp) (Var Sp) Sp);
    PopStack popped10;
    PopStack popped11;
    PushStack Or(popped10,popped11);
    TraceOperation 099603 (Storeb (Con 12650) (Var (Local 6)) (Var Sp));
    PopStack popped12;
    SetByte Offset(012650,GetLocal(6)) LoByte(popped12);
    TraceOperation 099609 (Jump 099664);
    Jump: 099664
  }
LocOp 099612:
  TraceOperation 099612 (Mod (Var (Local 2)) (Con 8) Sp);
  PushStack Mod(GetLocal(2),8);
  TraceOperation 099616 (Loadb (Con 19802) (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(019802,popped1)];
  PushStack Widen(b2);
  TraceOperation 099622 (Loadb (Con 12650) (Var (Local 5)) Sp);
  Let b3 = M[Offset(012650,GetLocal(5))];
  PushStack Widen(b3);
  TraceOperation 099628 (Or (Var Sp) (Var Sp) Sp);
  PopStack popped4;
  PopStack popped5;
  PushStack Or(popped4,popped5);
  TraceOperation 099632 (Storeb (Con 12650) (Var (Local 5)) (Var Sp));
  PopStack popped6;
  SetByte Offset(012650,GetLocal(5)) LoByte(popped6);
  TraceOperation 099638 (Mod (Var (Local 3)) (Con 8) Sp);
  PushStack Mod(GetLocal(3),8);
  TraceOperation 099642 (Loadb (Con 19810) (Var Sp) Sp);
  PopStack popped7;
  Let b8 = M[Offset(019810,popped7)];
  PushStack Widen(b8);
  TraceOperation 099648 (Loadb (Con 12650) (Var (Local 6)) Sp);
  Let b9 = M[Offset(012650,GetLocal(6))];
  PushStack Widen(b9);
  TraceOperation 099654 (And (Var Sp) (Var Sp) Sp);
  PopStack popped10;
  PopStack popped11;
  PushStack And(popped10,popped11);
  TraceOperation 099658 (Storeb (Con 12650) (Var (Local 6)) (Var Sp));
  PopStack popped12;
  SetByte Offset(012650,GetLocal(6)) LoByte(popped12);
  Jump: 099664
LocOp 099664:
  TraceOperation 099664 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 099668:
  MakeRoutineFrame 8;
  if (LessThanByte(num_actuals,8)) {
    SetLocal 8 0;
    if (LessThanByte(num_actuals,7)) {
      SetLocal 7 0;
      if (LessThanByte(num_actuals,6)) {
        SetLocal 6 0;
        if (LessThanByte(num_actuals,5)) {
          SetLocal 5 0;
          if (LessThanByte(num_actuals,4)) {
            SetLocal 4 0;
            if (LessThanByte(num_actuals,3)) {
              SetLocal 3 0;
              if (LessThanByte(num_actuals,2)) {
                SetLocal 2 0;
                if (LessThanByte(num_actuals,1)) {
                  SetLocal 1 0;
                }
              }
            }
          }
        }
      }
    }
  }
  Jump: 099669
LocOp 099669:
  TraceOperation 099669 (Jl (Var (Local 4)) (Con 100) (Branch T (Dloc 099680)));
  if (LessThan(GetLocal(4),100)) {
    Jump: 099680
  } else {
    TraceOperation 099673 (Call (Floc 098884) [Var (Local 1),Var (Local 4)] (Local 4));
    PushFrame;
    PushReturnAddress 099673;
    SetLocal 1 GetLocal(1);
    SetLocal 2 GetLocal(4);
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 098885
  }
LocReturn 099673:
  SetLocal 4 call_result;
  Jump: 099680
LocOp 099680:
  TraceOperation 099680 (Jz (Var (Local 4)) (Branch T Dtrue));
  if (IsZero(GetLocal(4))) {
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    TraceOperation 099683 (Loadw (Var (Local 1)) (Var (Local 4)) Sp);
    Let b2 = M[Offset(Address(GetLocal(1)),Mul(2,GetLocal(4)))];
    Let b3 = M[Offset(Offset(Address(GetLocal(1)),Mul(2,GetLocal(4))),1)];
    PushStack MakeHiLo(b2,b3);
    TraceOperation 099687 (Loadw (Var Sp) (Con 1) Sp);
    PopStack popped4;
    Let b5 = M[Offset(Address(popped4),2)];
    Let b6 = M[Offset(Offset(Address(popped4),2),1)];
    PushStack MakeHiLo(b5,b6);
    TraceOperation 099691 (And (Var Sp) (Con 2048) Sp);
    PopStack popped7;
    PushStack And(popped7,2048);
    TraceOperation 099697 (Jz (Var Sp) (Branch T (Dloc 099701)));
    PopStack popped8;
    if (IsZero(popped8)) {
      Jump: 099701
    } else {
      TraceOperation 099700 Rtrue;
      PopFrame;
      PopReturnAddress return_address_9;
      SetResult 1;
      JumpIndirect: (return) return_address_9
    }
  }
LocOp 099701:
  TraceOperation 099701 (Dec (Con 2));
  SetLocal 2 Sub(GetLocal(2),1);
  TraceOperation 099703 (Dec (Con 3));
  SetLocal 3 Sub(GetLocal(3),1);
  TraceOperation 099705 (Div (Var (Local 2)) (Con 8) Sp);
  PushStack Div(GetLocal(2),8);
  TraceOperation 099709 (Loadw (Var (Local 1)) (Var (Local 4)) Sp);
  Let b1 = M[Offset(Address(GetLocal(1)),Mul(2,GetLocal(4)))];
  Let b2 = M[Offset(Offset(Address(GetLocal(1)),Mul(2,GetLocal(4))),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 099713 (Loadw (Var Sp) (Con 2) Sp);
  PopStack popped3;
  Let b4 = M[Offset(Address(popped3),4)];
  Let b5 = M[Offset(Offset(Address(popped3),4),1)];
  PushStack MakeHiLo(b4,b5);
  TraceOperation 099717 (Add (Var Sp) (Var Sp) (Local 5));
  PopStack popped6;
  PopStack popped7;
  SetLocal 5 Add(popped6,popped7);
  TraceOperation 099721 (Mod (Var (Local 2)) (Con 8) Sp);
  PushStack Mod(GetLocal(2),8);
  TraceOperation 099725 (Loadb (Con 19802) (Var Sp) Sp);
  PopStack popped8;
  Let b9 = M[Offset(019802,popped8)];
  PushStack Widen(b9);
  TraceOperation 099731 (Loadb (Con 12650) (Var (Local 5)) Sp);
  Let b10 = M[Offset(012650,GetLocal(5))];
  PushStack Widen(b10);
  TraceOperation 099737 (And (Var Sp) (Var Sp) (Local 7));
  PopStack popped11;
  PopStack popped12;
  SetLocal 7 And(popped11,popped12);
  TraceOperation 099741 (Jz (Var (Local 7)) (Branch T (Dloc 099747)));
  if (IsZero(GetLocal(7))) {
    Jump: 099747
  } else {
    TraceOperation 099744 (Store (Con 7) (Con 1));
    SetLocal 7 1;
    Jump: 099747
  }
LocOp 099747:
  TraceOperation 099747 (Store (Con 8) (Var (Local 2)));
  SetLocal 8 GetLocal(2);
  Jump: 099750
LocOp 099750:
  TraceOperation 099750 (Jl (Var (Local 8)) (Var (Local 3)) (Branch F (Dloc 099878)));
  if (LessThan(GetLocal(8),GetLocal(3))) {
    TraceOperation 099755 (Add (Var (Local 8)) (Con 1) Sp);
    PushStack Add(GetLocal(8),1);
    TraceOperation 099759 (Div (Var Sp) (Con 8) Sp);
    PopStack popped1;
    PushStack Div(popped1,8);
    TraceOperation 099763 (Loadw (Var (Local 1)) (Var (Local 4)) Sp);
    Let b2 = M[Offset(Address(GetLocal(1)),Mul(2,GetLocal(4)))];
    Let b3 = M[Offset(Offset(Address(GetLocal(1)),Mul(2,GetLocal(4))),1)];
    PushStack MakeHiLo(b2,b3);
    TraceOperation 099767 (Loadw (Var Sp) (Con 2) Sp);
    PopStack popped4;
    Let b5 = M[Offset(Address(popped4),4)];
    Let b6 = M[Offset(Offset(Address(popped4),4),1)];
    PushStack MakeHiLo(b5,b6);
    TraceOperation 099771 (Add (Var Sp) (Var Sp) (Local 6));
    PopStack popped7;
    PopStack popped8;
    SetLocal 6 Add(popped7,popped8);
    TraceOperation 099775 (Div (Var (Local 8)) (Con 8) Sp);
    PushStack Div(GetLocal(8),8);
    TraceOperation 099779 (Loadw (Var (Local 1)) (Var (Local 4)) Sp);
    Let b9 = M[Offset(Address(GetLocal(1)),Mul(2,GetLocal(4)))];
    Let b10 = M[Offset(Offset(Address(GetLocal(1)),Mul(2,GetLocal(4))),1)];
    PushStack MakeHiLo(b9,b10);
    TraceOperation 099783 (Loadw (Var Sp) (Con 2) Sp);
    PopStack popped11;
    Let b12 = M[Offset(Address(popped11),4)];
    Let b13 = M[Offset(Offset(Address(popped11),4),1)];
    PushStack MakeHiLo(b12,b13);
    TraceOperation 099787 (Add (Var Sp) (Var Sp) (Local 5));
    PopStack popped14;
    PopStack popped15;
    SetLocal 5 Add(popped14,popped15);
    TraceOperation 099791 (Add (Var (Local 8)) (Con 1) Sp);
    PushStack Add(GetLocal(8),1);
    TraceOperation 099795 (Mod (Var Sp) (Con 8) Sp);
    PopStack popped16;
    PushStack Mod(popped16,8);
    TraceOperation 099799 (Loadb (Con 19802) (Var Sp) Sp);
    PopStack popped17;
    Let b18 = M[Offset(019802,popped17)];
    PushStack Widen(b18);
    TraceOperation 099805 (Loadb (Con 12650) (Var (Local 6)) Sp);
    Let b19 = M[Offset(012650,GetLocal(6))];
    PushStack Widen(b19);
    TraceOperation 099811 (And (Var Sp) (Var Sp) Sp);
    PopStack popped20;
    PopStack popped21;
    PushStack And(popped20,popped21);
    TraceOperation 099815 (Jz (Var Sp) (Branch T (Dloc 099847)));
    PopStack popped22;
    if (IsZero(popped22)) {
      Jump: 099847
    } else {
      TraceOperation 099818 (Mod (Var (Local 8)) (Con 8) Sp);
      PushStack Mod(GetLocal(8),8);
      TraceOperation 099822 (Loadb (Con 19802) (Var Sp) Sp);
      PopStack popped23;
      Let b24 = M[Offset(019802,popped23)];
      PushStack Widen(b24);
      TraceOperation 099828 (Loadb (Con 12650) (Var (Local 5)) Sp);
      Let b25 = M[Offset(012650,GetLocal(5))];
      PushStack Widen(b25);
      TraceOperation 099834 (Or (Var Sp) (Var Sp) Sp);
      PopStack popped26;
      PopStack popped27;
      PushStack Or(popped26,popped27);
      TraceOperation 099838 (Storeb (Con 12650) (Var (Local 5)) (Var Sp));
      PopStack popped28;
      SetByte Offset(012650,GetLocal(5)) LoByte(popped28);
      TraceOperation 099844 (Jump 099873);
      Jump: 099873
    }
  } else {
    Jump: 099878
  }
LocOp 099847:
  TraceOperation 099847 (Mod (Var (Local 8)) (Con 8) Sp);
  PushStack Mod(GetLocal(8),8);
  TraceOperation 099851 (Loadb (Con 19810) (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(019810,popped1)];
  PushStack Widen(b2);
  TraceOperation 099857 (Loadb (Con 12650) (Var (Local 5)) Sp);
  Let b3 = M[Offset(012650,GetLocal(5))];
  PushStack Widen(b3);
  TraceOperation 099863 (And (Var Sp) (Var Sp) Sp);
  PopStack popped4;
  PopStack popped5;
  PushStack And(popped4,popped5);
  TraceOperation 099867 (Storeb (Con 12650) (Var (Local 5)) (Var Sp));
  PopStack popped6;
  SetByte Offset(012650,GetLocal(5)) LoByte(popped6);
  Jump: 099873
LocOp 099873:
  TraceOperation 099873 (Inc (Con 8));
  SetLocal 8 Add(GetLocal(8),1);
  TraceOperation 099875 (Jump 099750);
  Jump: 099750
LocOp 099878:
  TraceOperation 099878 (Div (Var (Local 3)) (Con 8) Sp);
  PushStack Div(GetLocal(3),8);
  TraceOperation 099882 (Loadw (Var (Local 1)) (Var (Local 4)) Sp);
  Let b1 = M[Offset(Address(GetLocal(1)),Mul(2,GetLocal(4)))];
  Let b2 = M[Offset(Offset(Address(GetLocal(1)),Mul(2,GetLocal(4))),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 099886 (Loadw (Var Sp) (Con 2) Sp);
  PopStack popped3;
  Let b4 = M[Offset(Address(popped3),4)];
  Let b5 = M[Offset(Offset(Address(popped3),4),1)];
  PushStack MakeHiLo(b4,b5);
  TraceOperation 099890 (Add (Var Sp) (Var Sp) (Local 5));
  PopStack popped6;
  PopStack popped7;
  SetLocal 5 Add(popped6,popped7);
  TraceOperation 099894 (Jz (Var (Local 7)) (Branch T (Dloc 099926)));
  if (IsZero(GetLocal(7))) {
    Jump: 099926
  } else {
    TraceOperation 099897 (Mod (Var (Local 3)) (Con 8) Sp);
    PushStack Mod(GetLocal(3),8);
    TraceOperation 099901 (Loadb (Con 19802) (Var Sp) Sp);
    PopStack popped8;
    Let b9 = M[Offset(019802,popped8)];
    PushStack Widen(b9);
    TraceOperation 099907 (Loadb (Con 12650) (Var (Local 5)) Sp);
    Let b10 = M[Offset(012650,GetLocal(5))];
    PushStack Widen(b10);
    TraceOperation 099913 (Or (Var Sp) (Var Sp) Sp);
    PopStack popped11;
    PopStack popped12;
    PushStack Or(popped11,popped12);
    TraceOperation 099917 (Storeb (Con 12650) (Var (Local 5)) (Var Sp));
    PopStack popped13;
    SetByte Offset(012650,GetLocal(5)) LoByte(popped13);
    TraceOperation 099923 (Jump 099952);
    Jump: 099952
  }
LocOp 099926:
  TraceOperation 099926 (Mod (Var (Local 3)) (Con 8) Sp);
  PushStack Mod(GetLocal(3),8);
  TraceOperation 099930 (Loadb (Con 19810) (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(019810,popped1)];
  PushStack Widen(b2);
  TraceOperation 099936 (Loadb (Con 12650) (Var (Local 5)) Sp);
  Let b3 = M[Offset(012650,GetLocal(5))];
  PushStack Widen(b3);
  TraceOperation 099942 (And (Var Sp) (Var Sp) Sp);
  PopStack popped4;
  PopStack popped5;
  PushStack And(popped4,popped5);
  TraceOperation 099946 (Storeb (Con 12650) (Var (Local 5)) (Var Sp));
  PopStack popped6;
  SetByte Offset(012650,GetLocal(5)) LoByte(popped6);
  Jump: 099952
LocOp 099952:
  TraceOperation 099952 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 099956:
  MakeRoutineFrame 6;
  if (LessThanByte(num_actuals,6)) {
    SetLocal 6 0;
    if (LessThanByte(num_actuals,5)) {
      SetLocal 5 0;
      if (LessThanByte(num_actuals,4)) {
        SetLocal 4 0;
        if (LessThanByte(num_actuals,3)) {
          SetLocal 3 0;
          if (LessThanByte(num_actuals,2)) {
            SetLocal 2 0;
            if (LessThanByte(num_actuals,1)) {
              SetLocal 1 0;
            }
          }
        }
      }
    }
  }
  Jump: 099957
LocOp 099957:
  TraceOperation 099957 (Jl (Var (Local 2)) (Con 100) (Branch T (Dloc 099969)));
  if (LessThan(GetLocal(2),100)) {
    Jump: 099969
  } else {
    TraceOperation 099961 (Call (Floc 098884) [Var (Local 1),Var (Local 2),Con 1] (Local 2));
    PushFrame;
    PushReturnAddress 099961;
    SetLocal 1 GetLocal(1);
    SetLocal 2 GetLocal(2);
    SetLocal 3 1;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    Jump: 098885
  }
LocReturn 099961:
  SetLocal 2 call_result;
  Jump: 099969
LocOp 099969:
  TraceOperation 099969 (Loadw (Var (Local 1)) (Var (Local 2)) (Local 4));
  Let b1 = M[Offset(Address(GetLocal(1)),Mul(2,GetLocal(2)))];
  Let b2 = M[Offset(Offset(Address(GetLocal(1)),Mul(2,GetLocal(2))),1)];
  SetLocal 4 MakeHiLo(b1,b2);
  TraceOperation 099973 (Loadw (Var (Local 4)) (Con 0) Sp);
  Let b3 = M[Offset(Address(GetLocal(4)),0)];
  Let b4 = M[Offset(Offset(Address(GetLocal(4)),0),1)];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 099977 (Sub (Var Sp) (Con 2) (Local 6));
  PopStack popped5;
  SetLocal 6 Sub(popped5,2);
  TraceOperation 099981 (Store (Con 5) (Con 1));
  SetLocal 5 1;
  Jump: 099984
LocOp 099984:
  TraceOperation 099984 (Jg (Var (Local 5)) (Var (Local 6)) (Branch T (Dloc 100027)));
  if (GreaterThan(GetLocal(5),GetLocal(6))) {
    Jump: 100027
  } else {
    TraceOperation 099988 (Add (Var (Local 5)) (Con 2) Sp);
    PushStack Add(GetLocal(5),2);
    TraceOperation 099992 (Loadw (Var (Local 4)) (Var Sp) Sp);
    PopStack popped1;
    Let b2 = M[Offset(Address(GetLocal(4)),Mul(2,popped1))];
    Let b3 = M[Offset(Offset(Address(GetLocal(4)),Mul(2,popped1)),1)];
    PushStack MakeHiLo(b2,b3);
    TraceOperation 099996 (Je [Var Sp,Var (Local 3)] (Branch F (Dloc 100022)));
    PopStack popped4;
    if (Equal(popped4,GetLocal(3))) {
      TraceOperation 100000 (Je [Var (Local 3),Con 32739] (Branch F (Dloc 100020)));
      if (Equal(GetLocal(3),32739)) {
        TraceOperation 100006 (Call (Floc 098952) [Var (Local 1),Var (Local 2),Var (Local 5)] Sp);
        PushFrame;
        PushReturnAddress 100006;
        SetLocal 1 GetLocal(1);
        SetLocal 2 GetLocal(2);
        SetLocal 3 GetLocal(5);
        MakeRoutineFrame 5;
        SetLocal 5 0;
        SetLocal 4 0;
        Jump: 098953
      } else {
        Jump: 100020
      }
    } else {
      Jump: 100022
    }
  }
LocReturn 100006:
  PushStack call_result;
  TraceOperation 100014 (Jz (Var Sp) (Branch T (Dloc 100020)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 100020
  } else {
    TraceOperation 100017 (Jump 100022);
    Jump: 100022
  }
LocOp 100020:
  TraceOperation 100020 (Ret (Var (Local 5)));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult GetLocal(5);
  JumpIndirect: (return) return_address_1
LocOp 100022:
  TraceOperation 100022 (Inc (Con 5));
  SetLocal 5 Add(GetLocal(5),1);
  TraceOperation 100024 (Jump 099984);
  Jump: 099984
LocOp 100027:
  TraceOperation 100027 (Call (Floc 086692) [Con 21,Var (Local 1)] Sp);
  PushFrame;
  PushReturnAddress 100027;
  SetLocal 1 21;
  SetLocal 2 GetLocal(1);
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 086693
LocReturn 100027:
  PushStack call_result;
  TraceOperation 100034 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 100036:
  MakeRoutineFrame 7;
  if (LessThanByte(num_actuals,7)) {
    SetLocal 7 0;
    if (LessThanByte(num_actuals,6)) {
      SetLocal 6 0;
      if (LessThanByte(num_actuals,5)) {
        SetLocal 5 0;
        if (LessThanByte(num_actuals,4)) {
          SetLocal 4 0;
          if (LessThanByte(num_actuals,3)) {
            SetLocal 3 0;
            if (LessThanByte(num_actuals,2)) {
              SetLocal 2 0;
              if (LessThanByte(num_actuals,1)) {
                SetLocal 1 0;
              }
            }
          }
        }
      }
    }
  }
  Jump: 100037
LocOp 100037:
  TraceOperation 100037 (Jl (Var (Local 2)) (Con 100) (Branch T (Dloc 100048)));
  if (LessThan(GetLocal(2),100)) {
    Jump: 100048
  } else {
    TraceOperation 100041 (Call (Floc 098884) [Var (Local 1),Var (Local 2)] (Local 2));
    PushFrame;
    PushReturnAddress 100041;
    SetLocal 1 GetLocal(1);
    SetLocal 2 GetLocal(2);
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 098885
  }
LocReturn 100041:
  SetLocal 2 call_result;
  Jump: 100048
LocOp 100048:
  TraceOperation 100048 (Jz (Var (Local 2)) (Branch T Dfalse));
  if (IsZero(GetLocal(2))) {
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 0;
    JumpIndirect: (return) return_address_1
  } else {
    TraceOperation 100051 (Loadw (Var (Local 1)) (Var (Local 2)) Sp);
    Let b2 = M[Offset(Address(GetLocal(1)),Mul(2,GetLocal(2)))];
    Let b3 = M[Offset(Offset(Address(GetLocal(1)),Mul(2,GetLocal(2))),1)];
    PushStack MakeHiLo(b2,b3);
    TraceOperation 100055 (Loadw (Var Sp) (Con 1) Sp);
    PopStack popped4;
    Let b5 = M[Offset(Address(popped4),2)];
    Let b6 = M[Offset(Offset(Address(popped4),2),1)];
    PushStack MakeHiLo(b5,b6);
    TraceOperation 100059 (And (Var Sp) (Con 8192) (Local 7));
    PopStack popped7;
    SetLocal 7 And(popped7,8192);
    TraceOperation 100065 (Call (Floc 098936) [Var (Local 1)] (Local 5));
    PushFrame;
    PushReturnAddress 100065;
    SetLocal 1 GetLocal(1);
    MakeRoutineFrame 1;
    Jump: 098937
  }
LocReturn 100065:
  SetLocal 5 call_result;
  TraceOperation 100071 (Store (Con 4) (Con 1));
  SetLocal 4 1;
  Jump: 100074
LocOp 100074:
  TraceOperation 100074 (Jg (Var (Local 4)) (Var (Local 5)) (Branch T (Dloc 100150)));
  if (GreaterThan(GetLocal(4),GetLocal(5))) {
    Jump: 100150
  } else {
    TraceOperation 100079 (Add (Var (Local 4)) (Con 2) Sp);
    PushStack Add(GetLocal(4),2);
    TraceOperation 100083 (Loadw (Var (Local 1)) (Var (Local 2)) Sp);
    Let b1 = M[Offset(Address(GetLocal(1)),Mul(2,GetLocal(2)))];
    Let b2 = M[Offset(Offset(Address(GetLocal(1)),Mul(2,GetLocal(2))),1)];
    PushStack MakeHiLo(b1,b2);
    TraceOperation 100087 (Loadw (Var Sp) (Var Sp) (Local 6));
    PopStack popped3;
    PopStack popped4;
    Let b5 = M[Offset(Address(popped3),Mul(2,popped4))];
    Let b6 = M[Offset(Offset(Address(popped3),Mul(2,popped4)),1)];
    SetLocal 6 MakeHiLo(b5,b6);
    TraceOperation 100091 (Je [Var (Local 6),Con 32739] (Branch F (Dloc 100111)));
    if (Equal(GetLocal(6),32739)) {
      TraceOperation 100097 (Call (Floc 098952) [Var (Local 1),Var (Local 2),Var (Local 4)] Sp);
      PushFrame;
      PushReturnAddress 100097;
      SetLocal 1 GetLocal(1);
      SetLocal 2 GetLocal(2);
      SetLocal 3 GetLocal(4);
      MakeRoutineFrame 5;
      SetLocal 5 0;
      SetLocal 4 0;
      Jump: 098953
    } else {
      Jump: 100111
    }
  }
LocReturn 100097:
  PushStack call_result;
  TraceOperation 100105 (Jz (Var Sp) (Branch T (Dloc 100111)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 100111
  } else {
    TraceOperation 100108 (Jump 100145);
    Jump: 100145
  }
LocOp 100111:
  TraceOperation 100111 (Jz (Var (Local 7)) (Branch T (Dloc 100139)));
  if (IsZero(GetLocal(7))) {
    Jump: 100139
  } else {
    TraceOperation 100114 (Mod (Var (Local 3)) (Con 100) Sp);
    PushStack Mod(GetLocal(3),100);
    TraceOperation 100118 (Div (Var (Local 3)) (Con 100) Sp);
    PushStack Div(GetLocal(3),100);
    TraceOperation 100122 (Call (Fvar (Local 6)) [Var Sp,Var Sp] Sp);
    if (IsZeroAddress(PackedAddress Z5(GetLocal(6)))) {
      PushStack 0;
      Jump: 100128
    } else {
      PopStack popped1;
      PopStack popped2;
      PushFrame;
      PushReturnAddress 100122;
      SetLocal 1 popped1;
      SetLocal 2 popped2;
      SetNumberActuals 2;
      JumpIndirect: (routine) PackedAddress Z5(GetLocal(6))
    }
  }
LocReturn 100122:
  PushStack call_result;
  Jump: 100128
LocOp 100128:
  TraceOperation 100128 (Je [Var Sp,Con -1] (Branch T (Dloc 100136)));
  PopStack popped1;
  if (Equal(popped1,-1)) {
    Jump: 100136
  } else {
    TraceOperation 100134 (Ret (Var (Local 4)));
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult GetLocal(4);
    JumpIndirect: (return) return_address_2
  }
LocOp 100136:
  TraceOperation 100136 (Jump 100145);
  Jump: 100145
LocOp 100139:
  TraceOperation 100139 (Je [Var (Local 6),Var (Local 3)] (Branch F (Dloc 100145)));
  if (Equal(GetLocal(6),GetLocal(3))) {
    TraceOperation 100143 (Ret (Var (Local 4)));
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult GetLocal(4);
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 100145
  }
LocOp 100145:
  TraceOperation 100145 (Inc (Con 4));
  SetLocal 4 Add(GetLocal(4),1);
  TraceOperation 100147 (Jump 100074);
  Jump: 100074
LocOp 100150:
  TraceOperation 100150 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 100152:
  MakeRoutineFrame 11;
  if (LessThanByte(num_actuals,11)) {
    SetLocal 11 0;
    if (LessThanByte(num_actuals,10)) {
      SetLocal 10 0;
      if (LessThanByte(num_actuals,9)) {
        SetLocal 9 0;
        if (LessThanByte(num_actuals,8)) {
          SetLocal 8 0;
          if (LessThanByte(num_actuals,7)) {
            SetLocal 7 0;
            if (LessThanByte(num_actuals,6)) {
              SetLocal 6 0;
              if (LessThanByte(num_actuals,5)) {
                SetLocal 5 0;
                if (LessThanByte(num_actuals,4)) {
                  SetLocal 4 0;
                  if (LessThanByte(num_actuals,3)) {
                    SetLocal 3 0;
                    if (LessThanByte(num_actuals,2)) {
                      SetLocal 2 0;
                      if (LessThanByte(num_actuals,1)) {
                        SetLocal 1 0;
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  Jump: 100153
LocOp 100153:
  TraceOperation 100153 (Jl (Var (Local 2)) (Con 100) (Branch T (Dloc 100165)));
  if (LessThan(GetLocal(2),100)) {
    Jump: 100165
  } else {
    TraceOperation 100157 (Call (Floc 098884) [Var (Local 1),Var (Local 2),Con 1] (Local 2));
    PushFrame;
    PushReturnAddress 100157;
    SetLocal 1 GetLocal(1);
    SetLocal 2 GetLocal(2);
    SetLocal 3 1;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    Jump: 098885
  }
LocReturn 100157:
  SetLocal 2 call_result;
  Jump: 100165
LocOp 100165:
  TraceOperation 100165 (Jl (Var (Local 3)) (Con 100) (Branch T (Dloc 100177)));
  if (LessThan(GetLocal(3),100)) {
    Jump: 100177
  } else {
    TraceOperation 100169 (Call (Floc 098884) [Var (Local 1),Var (Local 3),Con 1] (Local 3));
    PushFrame;
    PushReturnAddress 100169;
    SetLocal 1 GetLocal(1);
    SetLocal 2 GetLocal(3);
    SetLocal 3 1;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    Jump: 098885
  }
LocReturn 100169:
  SetLocal 3 call_result;
  Jump: 100177
LocOp 100177:
  TraceOperation 100177 (Loadw (Var (Local 1)) (Var (Local 2)) (Local 7));
  Let b1 = M[Offset(Address(GetLocal(1)),Mul(2,GetLocal(2)))];
  Let b2 = M[Offset(Offset(Address(GetLocal(1)),Mul(2,GetLocal(2))),1)];
  SetLocal 7 MakeHiLo(b1,b2);
  TraceOperation 100181 (Loadw (Var (Local 1)) (Var (Local 3)) (Local 8));
  Let b3 = M[Offset(Address(GetLocal(1)),Mul(2,GetLocal(3)))];
  Let b4 = M[Offset(Offset(Address(GetLocal(1)),Mul(2,GetLocal(3))),1)];
  SetLocal 8 MakeHiLo(b3,b4);
  TraceOperation 100185 (Loadw (Var (Local 8)) (Con 0) (Local 10));
  Let b5 = M[Offset(Address(GetLocal(8)),0)];
  Let b6 = M[Offset(Offset(Address(GetLocal(8)),0),1)];
  SetLocal 10 MakeHiLo(b5,b6);
  TraceOperation 100189 (Store (Con 9) (Con 3));
  SetLocal 9 3;
  Jump: 100192
LocOp 100192:
  TraceOperation 100192 (Jg (Var (Local 9)) (Var (Local 10)) (Branch T (Dloc 100260)));
  if (GreaterThan(GetLocal(9),GetLocal(10))) {
    Jump: 100260
  } else {
    TraceOperation 100197 (Loadw (Var (Local 8)) (Var (Local 9)) Sp);
    Let b1 = M[Offset(Address(GetLocal(8)),Mul(2,GetLocal(9)))];
    Let b2 = M[Offset(Offset(Address(GetLocal(8)),Mul(2,GetLocal(9))),1)];
    PushStack MakeHiLo(b1,b2);
    TraceOperation 100201 (Je [Var Sp,Var (Local 4)] (Branch F (Dloc 100255)));
    PopStack popped3;
    if (Equal(popped3,GetLocal(4))) {
      TraceOperation 100205 (Jz (Var (Local 5)) (Branch T (Dloc 100225)));
      if (IsZero(GetLocal(5))) {
        Jump: 100225
      } else {
        TraceOperation 100208 (Sub (Var (Local 9)) (Con 2) Sp);
        PushStack Sub(GetLocal(9),2);
        TraceOperation 100212 (CallN (Floc 099228) [Var (Local 1),Var (Local 2),Var Sp]);
        PopStack popped4;
        PushFrame;
        PushReturnAddress 100212;
        SetLocal 1 GetLocal(1);
        SetLocal 2 GetLocal(2);
        SetLocal 3 popped4;
        MakeRoutineFrame 10;
        SetLocal 10 0;
        SetLocal 9 0;
        SetLocal 8 0;
        SetLocal 7 0;
        SetLocal 6 0;
        SetLocal 5 0;
        SetLocal 4 0;
        Jump: 099229
      }
    } else {
      Jump: 100255
    }
  }
LocReturn 100212:
  TraceOperation 100219 (Storew (Var (Local 7)) (Var (Local 9)) (Var (Local 6)));
  SetByte Offset(Address(GetLocal(7)),Mul(2,GetLocal(9))) HiByte(GetLocal(6));
  SetByte Offset(Offset(Address(GetLocal(7)),Mul(2,GetLocal(9))),1) LoByte(GetLocal(6));
  TraceOperation 100224 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
LocOp 100225:
  TraceOperation 100225 (Loadw (Var (Local 7)) (Var (Local 9)) (Local 11));
  Let b1 = M[Offset(Address(GetLocal(7)),Mul(2,GetLocal(9)))];
  Let b2 = M[Offset(Offset(Address(GetLocal(7)),Mul(2,GetLocal(9))),1)];
  SetLocal 11 MakeHiLo(b1,b2);
  TraceOperation 100229 (Je [Var (Local 11),Con 32739] (Branch F (Dloc 100253)));
  if (Equal(GetLocal(11),32739)) {
    TraceOperation 100235 (Sub (Var (Local 9)) (Con 2) Sp);
    PushStack Sub(GetLocal(9),2);
    TraceOperation 100239 (Call (Floc 098952) [Var (Local 1),Var (Local 2),Var Sp] Sp);
    PopStack popped3;
    PushFrame;
    PushReturnAddress 100239;
    SetLocal 1 GetLocal(1);
    SetLocal 2 GetLocal(2);
    SetLocal 3 popped3;
    MakeRoutineFrame 5;
    SetLocal 5 0;
    SetLocal 4 0;
    Jump: 098953
  } else {
    Jump: 100253
  }
LocReturn 100239:
  PushStack call_result;
  TraceOperation 100247 (Jz (Var Sp) (Branch T (Dloc 100253)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 100253
  } else {
    TraceOperation 100250 (Jump 100255);
    Jump: 100255
  }
LocOp 100253:
  TraceOperation 100253 (Ret (Var (Local 11)));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult GetLocal(11);
  JumpIndirect: (return) return_address_1
LocOp 100255:
  TraceOperation 100255 (Inc (Con 9));
  SetLocal 9 Add(GetLocal(9),1);
  TraceOperation 100257 (Jump 100192);
  Jump: 100192
LocOp 100260:
  TraceOperation 100260 (Call (Floc 086692) [Con 21,Var (Local 1)] Sp);
  PushFrame;
  PushReturnAddress 100260;
  SetLocal 1 21;
  SetLocal 2 GetLocal(1);
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 086693
LocReturn 100260:
  PushStack call_result;
  TraceOperation 100267 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 100268:
  MakeRoutineFrame 8;
  if (LessThanByte(num_actuals,8)) {
    SetLocal 8 0;
    if (LessThanByte(num_actuals,7)) {
      SetLocal 7 0;
      if (LessThanByte(num_actuals,6)) {
        SetLocal 6 0;
        if (LessThanByte(num_actuals,5)) {
          SetLocal 5 0;
          if (LessThanByte(num_actuals,4)) {
            SetLocal 4 0;
            if (LessThanByte(num_actuals,3)) {
              SetLocal 3 0;
              if (LessThanByte(num_actuals,2)) {
                SetLocal 2 0;
                if (LessThanByte(num_actuals,1)) {
                  SetLocal 1 0;
                }
              }
            }
          }
        }
      }
    }
  }
  Jump: 100269
LocOp 100269:
  TraceOperation 100269 (Jl (Var (Local 2)) (Con 100) (Branch T (Dloc 100281)));
  if (LessThan(GetLocal(2),100)) {
    Jump: 100281
  } else {
    TraceOperation 100273 (Call (Floc 098884) [Var (Local 1),Var (Local 2),Con 0] (Local 2));
    PushFrame;
    PushReturnAddress 100273;
    SetLocal 1 GetLocal(1);
    SetLocal 2 GetLocal(2);
    SetLocal 3 0;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    Jump: 098885
  }
LocReturn 100273:
  SetLocal 2 call_result;
  Jump: 100281
LocOp 100281:
  TraceOperation 100281 (Jl (Var (Local 3)) (Con 100) (Branch T (Dloc 100293)));
  if (LessThan(GetLocal(3),100)) {
    Jump: 100293
  } else {
    TraceOperation 100285 (Call (Floc 098884) [Var (Local 1),Var (Local 3),Con 0] (Local 3));
    PushFrame;
    PushReturnAddress 100285;
    SetLocal 1 GetLocal(1);
    SetLocal 2 GetLocal(3);
    SetLocal 3 0;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    Jump: 098885
  }
LocReturn 100285:
  SetLocal 3 call_result;
  Jump: 100293
LocOp 100293:
  TraceOperation 100293 (Mul (Var (Local 2)) (Var (Local 3)) Sp);
  PushStack Mul(GetLocal(2),GetLocal(3));
  TraceOperation 100297 (Jz (Var Sp) (Branch T Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  } else {
    TraceOperation 100300 (Loadw (Var (Local 1)) (Var (Local 2)) (Local 5));
    Let b3 = M[Offset(Address(GetLocal(1)),Mul(2,GetLocal(2)))];
    Let b4 = M[Offset(Offset(Address(GetLocal(1)),Mul(2,GetLocal(2))),1)];
    SetLocal 5 MakeHiLo(b3,b4);
    TraceOperation 100304 (Loadw (Var (Local 1)) (Var (Local 3)) (Local 6));
    Let b5 = M[Offset(Address(GetLocal(1)),Mul(2,GetLocal(3)))];
    Let b6 = M[Offset(Offset(Address(GetLocal(1)),Mul(2,GetLocal(3))),1)];
    SetLocal 6 MakeHiLo(b5,b6);
    TraceOperation 100308 (Loadw (Var (Local 6)) (Con 0) (Local 8));
    Let b7 = M[Offset(Address(GetLocal(6)),0)];
    Let b8 = M[Offset(Offset(Address(GetLocal(6)),0),1)];
    SetLocal 8 MakeHiLo(b7,b8);
    TraceOperation 100312 (Store (Con 7) (Con 3));
    SetLocal 7 3;
    Jump: 100315
  }
LocOp 100315:
  TraceOperation 100315 (Jg (Var (Local 7)) (Var (Local 8)) (Branch T (Dloc 100361)));
  if (GreaterThan(GetLocal(7),GetLocal(8))) {
    Jump: 100361
  } else {
    TraceOperation 100319 (Loadw (Var (Local 6)) (Var (Local 7)) Sp);
    Let b1 = M[Offset(Address(GetLocal(6)),Mul(2,GetLocal(7)))];
    Let b2 = M[Offset(Offset(Address(GetLocal(6)),Mul(2,GetLocal(7))),1)];
    PushStack MakeHiLo(b1,b2);
    TraceOperation 100323 (Je [Var Sp,Var (Local 4)] (Branch F (Dloc 100356)));
    PopStack popped3;
    if (Equal(popped3,GetLocal(4))) {
      TraceOperation 100327 (Loadw (Var (Local 5)) (Var (Local 7)) Sp);
      Let b4 = M[Offset(Address(GetLocal(5)),Mul(2,GetLocal(7)))];
      Let b5 = M[Offset(Offset(Address(GetLocal(5)),Mul(2,GetLocal(7))),1)];
      PushStack MakeHiLo(b4,b5);
      TraceOperation 100331 (Je [Var Sp,Con 32739] (Branch F (Dloc 100355)));
      PopStack popped6;
      if (Equal(popped6,32739)) {
        TraceOperation 100337 (Sub (Var (Local 7)) (Con 2) Sp);
        PushStack Sub(GetLocal(7),2);
        TraceOperation 100341 (Call (Floc 098952) [Var (Local 1),Var (Local 2),Var Sp] Sp);
        PopStack popped7;
        PushFrame;
        PushReturnAddress 100341;
        SetLocal 1 GetLocal(1);
        SetLocal 2 GetLocal(2);
        SetLocal 3 popped7;
        MakeRoutineFrame 5;
        SetLocal 5 0;
        SetLocal 4 0;
        Jump: 098953
      } else {
        Jump: 100355
      }
    } else {
      Jump: 100356
    }
  }
LocReturn 100341:
  PushStack call_result;
  TraceOperation 100349 (Jz (Var Sp) (Branch T (Dloc 100355)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 100355
  } else {
    TraceOperation 100352 (Jump 100356);
    Jump: 100356
  }
LocOp 100355:
  TraceOperation 100355 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 100356:
  TraceOperation 100356 (Inc (Con 7));
  SetLocal 7 Add(GetLocal(7),1);
  TraceOperation 100358 (Jump 100315);
  Jump: 100315
LocOp 100361:
  TraceOperation 100361 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 100364:
  MakeRoutineFrame 6;
  if (LessThanByte(num_actuals,6)) {
    SetLocal 6 0;
    if (LessThanByte(num_actuals,5)) {
      SetLocal 5 0;
      if (LessThanByte(num_actuals,4)) {
        SetLocal 4 0;
        if (LessThanByte(num_actuals,3)) {
          SetLocal 3 0;
          if (LessThanByte(num_actuals,2)) {
            SetLocal 2 0;
            if (LessThanByte(num_actuals,1)) {
              SetLocal 1 0;
            }
          }
        }
      }
    }
  }
  Jump: 100365
LocOp 100365:
  TraceOperation 100365 (Jl (Var (Local 2)) (Con 100) (Branch T (Dloc 100377)));
  if (LessThan(GetLocal(2),100)) {
    Jump: 100377
  } else {
    TraceOperation 100369 (Call (Floc 098884) [Var (Local 1),Var (Local 2),Con 1] (Local 2));
    PushFrame;
    PushReturnAddress 100369;
    SetLocal 1 GetLocal(1);
    SetLocal 2 GetLocal(2);
    SetLocal 3 1;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    Jump: 098885
  }
LocReturn 100369:
  SetLocal 2 call_result;
  Jump: 100377
LocOp 100377:
  TraceOperation 100377 (Jl (Var (Local 3)) (Con 1) (Branch T (Dloc 100391)));
  if (LessThan(GetLocal(3),1)) {
    Jump: 100391
  } else {
    TraceOperation 100381 (Call (Floc 098936) [Var (Local 1)] Sp);
    PushFrame;
    PushReturnAddress 100381;
    SetLocal 1 GetLocal(1);
    MakeRoutineFrame 1;
    Jump: 098937
  }
LocReturn 100381:
  PushStack call_result;
  TraceOperation 100387 (Jg (Var (Local 3)) (Var Sp) (Branch F (Dloc 100400)));
  PopStack popped1;
  if (GreaterThan(GetLocal(3),popped1)) {
    Jump: 100391
  } else {
    Jump: 100400
  }
LocOp 100391:
  TraceOperation 100391 (Call (Floc 086692) [Con 22,Var (Local 1),Var (Local 3)] Sp);
  PushFrame;
  PushReturnAddress 100391;
  SetLocal 1 22;
  SetLocal 2 GetLocal(1);
  SetLocal 3 GetLocal(3);
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 086693
LocReturn 100391:
  PushStack call_result;
  TraceOperation 100399 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 100400:
  TraceOperation 100400 (Jz (Var (Local 4)) (Branch T (Dloc 100559)));
  if (IsZero(GetLocal(4))) {
    Jump: 100559
  } else {
    TraceOperation 100404 (Store (Con 255) (Var (Local 4)));
    SetByte 007684 HiByte(GetLocal(4));
    SetByte 007685 LoByte(GetLocal(4));
    TraceOperation 100407 (Je [Var (Global 239),Con 1] (Branch F (Dloc 100434)));
    Let b1 = M[007684];
    Let b2 = M[007685];
    if (Equal(MakeHiLo(b1,b2),1)) {
      TraceOperation 100411 (CallN (Floc 099228) [Var (Local 1),Var (Local 2),Var (Local 3)]);
      PushFrame;
      PushReturnAddress 100411;
      SetLocal 1 GetLocal(1);
      SetLocal 2 GetLocal(2);
      SetLocal 3 GetLocal(3);
      MakeRoutineFrame 10;
      SetLocal 10 0;
      SetLocal 9 0;
      SetLocal 8 0;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      Jump: 099229
    } else {
      Jump: 100434
    }
  }
LocReturn 100411:
  TraceOperation 100418 (Add (Var (Local 3)) (Con 2) Sp);
  PushStack Add(GetLocal(3),2);
  TraceOperation 100422 (Loadw (Var (Local 1)) (Var (Local 2)) Sp);
  Let b1 = M[Offset(Address(GetLocal(1)),Mul(2,GetLocal(2)))];
  Let b2 = M[Offset(Offset(Address(GetLocal(1)),Mul(2,GetLocal(2))),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 100426 (Storew (Var Sp) (Var Sp) (Var (Local 5)));
  PopStack popped3;
  PopStack popped4;
  SetByte Offset(Address(popped3),Mul(2,popped4)) HiByte(GetLocal(5));
  SetByte Offset(Offset(Address(popped3),Mul(2,popped4)),1) LoByte(GetLocal(5));
  TraceOperation 100431 (Jump 100558);
  Jump: 100558
LocOp 100434:
  TraceOperation 100434 (Je [Var (Global 239),Con 2] (Branch F (Dloc 100477)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),2)) {
    TraceOperation 100438 (CallN (Floc 099228) [Var (Local 1),Var (Local 2),Var (Local 3)]);
    PushFrame;
    PushReturnAddress 100438;
    SetLocal 1 GetLocal(1);
    SetLocal 2 GetLocal(2);
    SetLocal 3 GetLocal(3);
    MakeRoutineFrame 10;
    SetLocal 10 0;
    SetLocal 9 0;
    SetLocal 8 0;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    Jump: 099229
  } else {
    Jump: 100477
  }
LocReturn 100438:
  TraceOperation 100445 (Add (Var (Local 3)) (Con 2) Sp);
  PushStack Add(GetLocal(3),2);
  TraceOperation 100449 (Loadw (Var (Local 1)) (Var (Local 2)) Sp);
  Let b1 = M[Offset(Address(GetLocal(1)),Mul(2,GetLocal(2)))];
  Let b2 = M[Offset(Offset(Address(GetLocal(1)),Mul(2,GetLocal(2))),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 100453 (Loadw (Var Sp) (Var Sp) Sp);
  PopStack popped3;
  PopStack popped4;
  Let b5 = M[Offset(Address(popped3),Mul(2,popped4))];
  Let b6 = M[Offset(Offset(Address(popped3),Mul(2,popped4)),1)];
  PushStack MakeHiLo(b5,b6);
  TraceOperation 100457 (Add (Var Sp) (Var (Local 5)) Sp);
  PopStack popped7;
  PushStack Add(popped7,GetLocal(5));
  TraceOperation 100461 (Add (Var (Local 3)) (Con 2) Sp);
  PushStack Add(GetLocal(3),2);
  TraceOperation 100465 (Loadw (Var (Local 1)) (Var (Local 2)) Sp);
  Let b8 = M[Offset(Address(GetLocal(1)),Mul(2,GetLocal(2)))];
  Let b9 = M[Offset(Offset(Address(GetLocal(1)),Mul(2,GetLocal(2))),1)];
  PushStack MakeHiLo(b8,b9);
  TraceOperation 100469 (Storew (Var Sp) (Var Sp) (Var Sp));
  PopStack popped10;
  PopStack popped11;
  PopStack popped12;
  SetByte Offset(Address(popped10),Mul(2,popped11)) HiByte(popped12);
  SetByte Offset(Offset(Address(popped10),Mul(2,popped11)),1) LoByte(popped12);
  TraceOperation 100474 (Jump 100558);
  Jump: 100558
LocOp 100477:
  TraceOperation 100477 (Je [Var (Global 239),Con 3] (Branch F (Dloc 100520)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),3)) {
    TraceOperation 100481 (CallN (Floc 099228) [Var (Local 1),Var (Local 2),Var (Local 3)]);
    PushFrame;
    PushReturnAddress 100481;
    SetLocal 1 GetLocal(1);
    SetLocal 2 GetLocal(2);
    SetLocal 3 GetLocal(3);
    MakeRoutineFrame 10;
    SetLocal 10 0;
    SetLocal 9 0;
    SetLocal 8 0;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    Jump: 099229
  } else {
    Jump: 100520
  }
LocReturn 100481:
  TraceOperation 100488 (Add (Var (Local 3)) (Con 2) Sp);
  PushStack Add(GetLocal(3),2);
  TraceOperation 100492 (Loadw (Var (Local 1)) (Var (Local 2)) Sp);
  Let b1 = M[Offset(Address(GetLocal(1)),Mul(2,GetLocal(2)))];
  Let b2 = M[Offset(Offset(Address(GetLocal(1)),Mul(2,GetLocal(2))),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 100496 (Loadw (Var Sp) (Var Sp) Sp);
  PopStack popped3;
  PopStack popped4;
  Let b5 = M[Offset(Address(popped3),Mul(2,popped4))];
  Let b6 = M[Offset(Offset(Address(popped3),Mul(2,popped4)),1)];
  PushStack MakeHiLo(b5,b6);
  TraceOperation 100500 (Sub (Var Sp) (Var (Local 5)) Sp);
  PopStack popped7;
  PushStack Sub(popped7,GetLocal(5));
  TraceOperation 100504 (Add (Var (Local 3)) (Con 2) Sp);
  PushStack Add(GetLocal(3),2);
  TraceOperation 100508 (Loadw (Var (Local 1)) (Var (Local 2)) Sp);
  Let b8 = M[Offset(Address(GetLocal(1)),Mul(2,GetLocal(2)))];
  Let b9 = M[Offset(Offset(Address(GetLocal(1)),Mul(2,GetLocal(2))),1)];
  PushStack MakeHiLo(b8,b9);
  TraceOperation 100512 (Storew (Var Sp) (Var Sp) (Var Sp));
  PopStack popped10;
  PopStack popped11;
  PopStack popped12;
  SetByte Offset(Address(popped10),Mul(2,popped11)) HiByte(popped12);
  SetByte Offset(Offset(Address(popped10),Mul(2,popped11)),1) LoByte(popped12);
  TraceOperation 100517 (Jump 100558);
  Jump: 100558
LocOp 100520:
  TraceOperation 100520 (Je [Var (Global 239),Con 4] (Branch F (Dloc 100534)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),4)) {
    TraceOperation 100524 (CallN (Floc 099100) [Var (Local 1),Var (Local 2),Var (Local 3)]);
    PushFrame;
    PushReturnAddress 100524;
    SetLocal 1 GetLocal(1);
    SetLocal 2 GetLocal(2);
    SetLocal 3 GetLocal(3);
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    Jump: 099101
  } else {
    Jump: 100534
  }
LocReturn 100524:
  TraceOperation 100531 (Jump 100558);
  Jump: 100558
LocOp 100534:
  TraceOperation 100534 (Je [Var (Global 239),Con 5] (Branch F (Dloc 100558)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),5)) {
    TraceOperation 100538 (CallN (Floc 099228) [Var (Local 1),Var (Local 2),Var (Local 3)]);
    PushFrame;
    PushReturnAddress 100538;
    SetLocal 1 GetLocal(1);
    SetLocal 2 GetLocal(2);
    SetLocal 3 GetLocal(3);
    MakeRoutineFrame 10;
    SetLocal 10 0;
    SetLocal 9 0;
    SetLocal 8 0;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    Jump: 099229
  } else {
    Jump: 100558
  }
LocReturn 100538:
  TraceOperation 100545 (Add (Var (Local 3)) (Con 2) Sp);
  PushStack Add(GetLocal(3),2);
  TraceOperation 100549 (Loadw (Var (Local 1)) (Var (Local 2)) Sp);
  Let b1 = M[Offset(Address(GetLocal(1)),Mul(2,GetLocal(2)))];
  Let b2 = M[Offset(Offset(Address(GetLocal(1)),Mul(2,GetLocal(2))),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 100553 (Loadw (Var Sp) (Var Sp) Sp);
  PopStack popped3;
  PopStack popped4;
  Let b5 = M[Offset(Address(popped3),Mul(2,popped4))];
  Let b6 = M[Offset(Offset(Address(popped3),Mul(2,popped4)),1)];
  PushStack MakeHiLo(b5,b6);
  TraceOperation 100557 Ret_popped;
  PopStack popped7;
  PopFrame;
  PopReturnAddress return_address_8;
  SetResult popped7;
  JumpIndirect: (return) return_address_8
LocOp 100558:
  TraceOperation 100558 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
LocOp 100559:
  TraceOperation 100559 (Add (Var (Local 3)) (Con 2) Sp);
  PushStack Add(GetLocal(3),2);
  TraceOperation 100563 (Loadw (Var (Local 1)) (Var (Local 2)) Sp);
  Let b1 = M[Offset(Address(GetLocal(1)),Mul(2,GetLocal(2)))];
  Let b2 = M[Offset(Offset(Address(GetLocal(1)),Mul(2,GetLocal(2))),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 100567 (Loadw (Var Sp) (Var Sp) (Local 6));
  PopStack popped3;
  PopStack popped4;
  Let b5 = M[Offset(Address(popped3),Mul(2,popped4))];
  Let b6 = M[Offset(Offset(Address(popped3),Mul(2,popped4)),1)];
  SetLocal 6 MakeHiLo(b5,b6);
  TraceOperation 100571 (Je [Var (Local 6),Con 32739] (Branch F (Dloc 100599)));
  if (Equal(GetLocal(6),32739)) {
    TraceOperation 100577 (Call (Floc 098952) [Var (Local 1),Var (Local 2),Var (Local 3)] Sp);
    PushFrame;
    PushReturnAddress 100577;
    SetLocal 1 GetLocal(1);
    SetLocal 2 GetLocal(2);
    SetLocal 3 GetLocal(3);
    MakeRoutineFrame 5;
    SetLocal 5 0;
    SetLocal 4 0;
    Jump: 098953
  } else {
    Jump: 100599
  }
LocReturn 100577:
  PushStack call_result;
  TraceOperation 100585 (Jz (Var Sp) (Branch T (Dloc 100599)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 100599
  } else {
    TraceOperation 100588 (Call (Floc 086692) [Con 23,Var (Local 1),Var (Local 2),Var (Local 3)] Sp);
    PushFrame;
    PushReturnAddress 100588;
    SetLocal 1 23;
    SetLocal 2 GetLocal(1);
    SetLocal 3 GetLocal(2);
    SetLocal 4 GetLocal(3);
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    Jump: 086693
  }
LocReturn 100588:
  PushStack call_result;
  TraceOperation 100598 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 100599:
  TraceOperation 100599 (Ret (Var (Local 6)));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult GetLocal(6);
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 100604:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 100605
LocOp 100605:
  TraceOperation 100605 (Jl (Var (Local 2)) (Con 100) (Branch T (Dloc 100616)));
  if (LessThan(GetLocal(2),100)) {
    Jump: 100616
  } else {
    TraceOperation 100609 (Call (Floc 098884) [Var (Local 1),Var (Local 2)] (Local 2));
    PushFrame;
    PushReturnAddress 100609;
    SetLocal 1 GetLocal(1);
    SetLocal 2 GetLocal(2);
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 098885
  }
LocReturn 100609:
  SetLocal 2 call_result;
  Jump: 100616
LocOp 100616:
  TraceOperation 100616 (Jz (Var (Local 2)) (Branch T Dfalse));
  if (IsZero(GetLocal(2))) {
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 0;
    JumpIndirect: (return) return_address_1
  } else {
    TraceOperation 100619 (Jl (Var (Local 3)) (Con 1) (Branch T Dfalse));
    if (LessThan(GetLocal(3),1)) {
      PopFrame;
      PopReturnAddress return_address_2;
      SetResult 0;
      JumpIndirect: (return) return_address_2
    } else {
      TraceOperation 100623 (Call (Floc 098936) [Var (Local 1)] Sp);
      PushFrame;
      PushReturnAddress 100623;
      SetLocal 1 GetLocal(1);
      MakeRoutineFrame 1;
      Jump: 098937
    }
  }
LocReturn 100623:
  PushStack call_result;
  TraceOperation 100629 (Jg (Var (Local 3)) (Var Sp) (Branch T Dfalse));
  PopStack popped1;
  if (GreaterThan(GetLocal(3),popped1)) {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  } else {
    TraceOperation 100633 (Add (Var (Local 3)) (Con 2) Sp);
    PushStack Add(GetLocal(3),2);
    TraceOperation 100637 (Loadw (Var (Local 1)) (Var (Local 2)) Sp);
    Let b3 = M[Offset(Address(GetLocal(1)),Mul(2,GetLocal(2)))];
    Let b4 = M[Offset(Offset(Address(GetLocal(1)),Mul(2,GetLocal(2))),1)];
    PushStack MakeHiLo(b3,b4);
    TraceOperation 100641 (Loadw (Var Sp) (Var Sp) (Local 4));
    PopStack popped5;
    PopStack popped6;
    Let b7 = M[Offset(Address(popped5),Mul(2,popped6))];
    Let b8 = M[Offset(Offset(Address(popped5),Mul(2,popped6)),1)];
    SetLocal 4 MakeHiLo(b7,b8);
    TraceOperation 100645 (Je [Var (Local 4),Con 32739] (Branch F (Dloc 100662)));
    if (Equal(GetLocal(4),32739)) {
      TraceOperation 100651 (Call (Floc 098952) [Var (Local 1),Var (Local 2),Var (Local 3)] Sp);
      PushFrame;
      PushReturnAddress 100651;
      SetLocal 1 GetLocal(1);
      SetLocal 2 GetLocal(2);
      SetLocal 3 GetLocal(3);
      MakeRoutineFrame 5;
      SetLocal 5 0;
      SetLocal 4 0;
      Jump: 098953
    } else {
      Jump: 100662
    }
  }
LocReturn 100651:
  PushStack call_result;
  TraceOperation 100659 (Jz (Var Sp) (Branch F Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 100662
  } else {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  }
LocOp 100662:
  TraceOperation 100662 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 100664:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 100665
LocOp 100665:
  TraceOperation 100665 (Store (Con 3) (Con 1));
  SetLocal 3 1;
  Jump: 100668
LocOp 100668:
  TraceOperation 100668 (Loadw (Var (Local 1)) (Con 0) Sp);
  Let b1 = M[Offset(Address(GetLocal(1)),0)];
  Let b2 = M[Offset(Offset(Address(GetLocal(1)),0),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 100672 (Jg (Var (Local 3)) (Var Sp) (Branch T (Dloc 100710)));
  PopStack popped3;
  if (GreaterThan(GetLocal(3),popped3)) {
    Jump: 100710
  } else {
    TraceOperation 100676 (Add (Var (Local 2)) (Con 2) Sp);
    PushStack Add(GetLocal(2),2);
    TraceOperation 100680 (Loadw (Var (Local 1)) (Var (Local 3)) Sp);
    Let b4 = M[Offset(Address(GetLocal(1)),Mul(2,GetLocal(3)))];
    Let b5 = M[Offset(Offset(Address(GetLocal(1)),Mul(2,GetLocal(3))),1)];
    PushStack MakeHiLo(b4,b5);
    TraceOperation 100684 (Loadw (Var Sp) (Var Sp) Sp);
    PopStack popped6;
    PopStack popped7;
    Let b8 = M[Offset(Address(popped6),Mul(2,popped7))];
    Let b9 = M[Offset(Offset(Address(popped6),Mul(2,popped7)),1)];
    PushStack MakeHiLo(b8,b9);
    TraceOperation 100688 (Je [Var Sp,Con 32739] (Branch F Dfalse));
    PopStack popped10;
    if (Equal(popped10,32739)) {
      TraceOperation 100694 (Call (Floc 098952) [Var (Local 1),Var (Local 3),Var (Local 2)] Sp);
      PushFrame;
      PushReturnAddress 100694;
      SetLocal 1 GetLocal(1);
      SetLocal 2 GetLocal(3);
      SetLocal 3 GetLocal(2);
      MakeRoutineFrame 5;
      SetLocal 5 0;
      SetLocal 4 0;
      Jump: 098953
    } else {
      PopFrame;
      PopReturnAddress return_address_11;
      SetResult 0;
      JumpIndirect: (return) return_address_11
    }
  }
LocReturn 100694:
  PushStack call_result;
  TraceOperation 100702 (Jz (Var Sp) (Branch T Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  } else {
    TraceOperation 100705 (Inc (Con 3));
    SetLocal 3 Add(GetLocal(3),1);
    TraceOperation 100707 (Jump 100668);
    Jump: 100668
  }
LocOp 100710:
  TraceOperation 100710 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 100712:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 100713
LocOp 100713:
  TraceOperation 100713 (Jz (Var (Local 1)) (Branch F (Dloc 100724)));
  if (IsZero(GetLocal(1))) {
    TraceOperation 100716 (Call (Floc 086692) [Con 24,Var (Local 1)] Sp);
    PushFrame;
    PushReturnAddress 100716;
    SetLocal 1 24;
    SetLocal 2 GetLocal(1);
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 086693
  } else {
    Jump: 100724
  }
LocReturn 100716:
  PushStack call_result;
  TraceOperation 100723 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 100724:
  TraceOperation 100724 (Store (Con 3) (Con 1));
  SetLocal 3 1;
  Jump: 100727
LocOp 100727:
  TraceOperation 100727 (Loadw (Var (Local 1)) (Con 0) Sp);
  Let b1 = M[Offset(Address(GetLocal(1)),0)];
  Let b2 = M[Offset(Offset(Address(GetLocal(1)),0),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 100731 (Jg (Var (Local 3)) (Var Sp) (Branch T (Dloc 100747)));
  PopStack popped3;
  if (GreaterThan(GetLocal(3),popped3)) {
    Jump: 100747
  } else {
    TraceOperation 100735 (CallN (Floc 099100) [Var (Local 1),Var (Local 3),Var (Local 2)]);
    PushFrame;
    PushReturnAddress 100735;
    SetLocal 1 GetLocal(1);
    SetLocal 2 GetLocal(3);
    SetLocal 3 GetLocal(2);
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    Jump: 099101
  }
LocReturn 100735:
  TraceOperation 100742 (Inc (Con 3));
  SetLocal 3 Add(GetLocal(3),1);
  TraceOperation 100744 (Jump 100727);
  Jump: 100727
LocOp 100747:
  TraceOperation 100747 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 100748:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 100749
LocOp 100749:
  TraceOperation 100749 (Call (Floc 098936) [Var (Local 1)] (Local 2));
  PushFrame;
  PushReturnAddress 100749;
  SetLocal 1 GetLocal(1);
  MakeRoutineFrame 1;
  Jump: 098937
LocReturn 100749:
  SetLocal 2 call_result;
  TraceOperation 100755 (Store (Con 3) (Con 1));
  SetLocal 3 1;
  Jump: 100758
LocOp 100758:
  TraceOperation 100758 (Jg (Var (Local 3)) (Var (Local 2)) (Branch T (Dloc 100779)));
  if (GreaterThan(GetLocal(3),GetLocal(2))) {
    Jump: 100779
  } else {
    TraceOperation 100762 (Call (Floc 100664) [Var (Local 1),Var (Local 3)] Sp);
    PushFrame;
    PushReturnAddress 100762;
    SetLocal 1 GetLocal(1);
    SetLocal 2 GetLocal(3);
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 100665
  }
LocReturn 100762:
  PushStack call_result;
  TraceOperation 100769 (Jz (Var Sp) (Branch T (Dloc 100774)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 100774
  } else {
    TraceOperation 100772 (Inc (Con 4));
    SetLocal 4 Add(GetLocal(4),1);
    Jump: 100774
  }
LocOp 100774:
  TraceOperation 100774 (Inc (Con 3));
  SetLocal 3 Add(GetLocal(3),1);
  TraceOperation 100776 (Jump 100758);
  Jump: 100758
LocOp 100779:
  TraceOperation 100779 (Ret (Var (Local 4)));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult GetLocal(4);
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 100784:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 100785
LocOp 100785:
  TraceOperation 100785 (Call (Floc 100748) [Var (Local 1)] Sp);
  PushFrame;
  PushReturnAddress 100785;
  SetLocal 1 GetLocal(1);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 100749
LocReturn 100785:
  PushStack call_result;
  TraceOperation 100791 (Call (Floc 098936) [Var (Local 1)] Sp);
  PushFrame;
  PushReturnAddress 100791;
  SetLocal 1 GetLocal(1);
  MakeRoutineFrame 1;
  Jump: 098937
LocReturn 100791:
  PushStack call_result;
  TraceOperation 100797 (Sub (Var Sp) (Var Sp) Sp);
  PopStack popped1;
  PopStack popped2;
  PushStack Sub(popped1,popped2);
  TraceOperation 100801 Ret_popped;
  PopStack popped3;
  PopFrame;
  PopReturnAddress return_address_4;
  SetResult popped3;
  JumpIndirect: (return) return_address_4
--------------------------------------------------
LocRoutine 100804:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 100805
LocOp 100805:
  TraceOperation 100805 (Call (Floc 098936) [Var (Local 1)] (Local 2));
  PushFrame;
  PushReturnAddress 100805;
  SetLocal 1 GetLocal(1);
  MakeRoutineFrame 1;
  Jump: 098937
LocReturn 100805:
  SetLocal 2 call_result;
  TraceOperation 100811 (Store (Con 3) (Con 1));
  SetLocal 3 1;
  Jump: 100814
LocOp 100814:
  TraceOperation 100814 (Jg (Var (Local 3)) (Var (Local 2)) (Branch T (Dloc 100835)));
  if (GreaterThan(GetLocal(3),GetLocal(2))) {
    Jump: 100835
  } else {
    TraceOperation 100818 (Call (Floc 100664) [Var (Local 1),Var (Local 3)] Sp);
    PushFrame;
    PushReturnAddress 100818;
    SetLocal 1 GetLocal(1);
    SetLocal 2 GetLocal(3);
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 100665
  }
LocReturn 100818:
  PushStack call_result;
  TraceOperation 100825 (Jz (Var Sp) (Branch T (Dloc 100830)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 100830
  } else {
    TraceOperation 100828 (Ret (Var (Local 3)));
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult GetLocal(3);
    JumpIndirect: (return) return_address_2
  }
LocOp 100830:
  TraceOperation 100830 (Inc (Con 3));
  SetLocal 3 Add(GetLocal(3),1);
  TraceOperation 100832 (Jump 100814);
  Jump: 100814
LocOp 100835:
  TraceOperation 100835 (CallN (Floc 086692) [Con 25,Var (Local 1)]);
  PushFrame;
  PushReturnAddress 100835;
  SetLocal 1 25;
  SetLocal 2 GetLocal(1);
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 086693
LocReturn 100835:
  TraceOperation 100841 (Ret (Var (Local 2)));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult GetLocal(2);
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 100844:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 100845
LocOp 100845:
  TraceOperation 100845 (Call (Floc 098936) [Var (Local 1)] (Local 2));
  PushFrame;
  PushReturnAddress 100845;
  SetLocal 1 GetLocal(1);
  MakeRoutineFrame 1;
  Jump: 098937
LocReturn 100845:
  SetLocal 2 call_result;
  TraceOperation 100851 (Call (Floc 100784) [Var (Local 1)] (Local 3));
  PushFrame;
  PushReturnAddress 100851;
  SetLocal 1 GetLocal(1);
  MakeRoutineFrame 1;
  Jump: 100785
LocReturn 100851:
  SetLocal 3 call_result;
  TraceOperation 100857 (Jz (Var (Local 3)) (Branch F (Dloc 100868)));
  if (IsZero(GetLocal(3))) {
    TraceOperation 100860 (Call (Floc 086692) [Con 26,Var (Local 1)] Sp);
    PushFrame;
    PushReturnAddress 100860;
    SetLocal 1 26;
    SetLocal 2 GetLocal(1);
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 086693
  } else {
    Jump: 100868
  }
LocReturn 100860:
  PushStack call_result;
  TraceOperation 100867 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 100868:
  TraceOperation 100868 (Jg (Var (Local 3)) (Con 1) (Branch F (Dloc 100876)));
  if (GreaterThan(GetLocal(3),1)) {
    TraceOperation 100872 (Random (Var (Local 3)) (Local 3));
    LetRandom random1 GetLocal(3);
    SetLocal 3 random1;
    Jump: 100876
  } else {
    Jump: 100876
  }
LocOp 100876:
  TraceOperation 100876 (Store (Con 4) (Con 1));
  SetLocal 4 1;
  Jump: 100879
LocOp 100879:
  TraceOperation 100879 (Jg (Var (Local 4)) (Var (Local 2)) (Branch T (Dloc 100905)));
  if (GreaterThan(GetLocal(4),GetLocal(2))) {
    Jump: 100905
  } else {
    TraceOperation 100883 (Call (Floc 100664) [Var (Local 1),Var (Local 4)] Sp);
    PushFrame;
    PushReturnAddress 100883;
    SetLocal 1 GetLocal(1);
    SetLocal 2 GetLocal(4);
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 100665
  }
LocReturn 100883:
  PushStack call_result;
  TraceOperation 100890 (Jz (Var Sp) (Branch F (Dloc 100895)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 100893 (Dec (Con 3));
    SetLocal 3 Sub(GetLocal(3),1);
    Jump: 100895
  } else {
    Jump: 100895
  }
LocOp 100895:
  TraceOperation 100895 (Jz (Var (Local 3)) (Branch F (Dloc 100900)));
  if (IsZero(GetLocal(3))) {
    TraceOperation 100898 (Ret (Var (Local 4)));
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult GetLocal(4);
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 100900
  }
LocOp 100900:
  TraceOperation 100900 (Inc (Con 4));
  SetLocal 4 Add(GetLocal(4),1);
  TraceOperation 100902 (Jump 100879);
  Jump: 100879
LocOp 100905:
  TraceOperation 100905 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 100908:
  MakeRoutineFrame 7;
  if (LessThanByte(num_actuals,7)) {
    SetLocal 7 0;
    if (LessThanByte(num_actuals,6)) {
      SetLocal 6 0;
      if (LessThanByte(num_actuals,5)) {
        SetLocal 5 0;
        if (LessThanByte(num_actuals,4)) {
          SetLocal 4 0;
          if (LessThanByte(num_actuals,3)) {
            SetLocal 3 0;
            if (LessThanByte(num_actuals,2)) {
              SetLocal 2 0;
              if (LessThanByte(num_actuals,1)) {
                SetLocal 1 0;
              }
            }
          }
        }
      }
    }
  }
  Jump: 100909
LocOp 100909:
  TraceOperation 100909 (Je [Var (Local 2),Var (Local 3)] (Branch F (Dloc 100914)));
  if (Equal(GetLocal(2),GetLocal(3))) {
    TraceOperation 100913 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 100914
  }
LocOp 100914:
  TraceOperation 100914 (Loadw (Var (Local 1)) (Con 0) (Local 5));
  Let b1 = M[Offset(Address(GetLocal(1)),0)];
  Let b2 = M[Offset(Offset(Address(GetLocal(1)),0),1)];
  SetLocal 5 MakeHiLo(b1,b2);
  TraceOperation 100918 (Store (Con 4) (Con 1));
  SetLocal 4 1;
  Jump: 100921
LocOp 100921:
  TraceOperation 100921 (Jg (Var (Local 4)) (Var (Local 5)) (Branch T (Dloc 101002)));
  if (GreaterThan(GetLocal(4),GetLocal(5))) {
    Jump: 101002
  } else {
    TraceOperation 100926 (Add (Var (Local 2)) (Con 2) Sp);
    PushStack Add(GetLocal(2),2);
    TraceOperation 100930 (Loadw (Var (Local 1)) (Var (Local 4)) Sp);
    Let b1 = M[Offset(Address(GetLocal(1)),Mul(2,GetLocal(4)))];
    Let b2 = M[Offset(Offset(Address(GetLocal(1)),Mul(2,GetLocal(4))),1)];
    PushStack MakeHiLo(b1,b2);
    TraceOperation 100934 (Loadw (Var Sp) (Var Sp) (Local 6));
    PopStack popped3;
    PopStack popped4;
    Let b5 = M[Offset(Address(popped3),Mul(2,popped4))];
    Let b6 = M[Offset(Offset(Address(popped3),Mul(2,popped4)),1)];
    SetLocal 6 MakeHiLo(b5,b6);
    TraceOperation 100938 (Add (Var (Local 3)) (Con 2) Sp);
    PushStack Add(GetLocal(3),2);
    TraceOperation 100942 (Loadw (Var (Local 1)) (Var (Local 4)) Sp);
    Let b7 = M[Offset(Address(GetLocal(1)),Mul(2,GetLocal(4)))];
    Let b8 = M[Offset(Offset(Address(GetLocal(1)),Mul(2,GetLocal(4))),1)];
    PushStack MakeHiLo(b7,b8);
    TraceOperation 100946 (Loadw (Var Sp) (Var Sp) (Local 7));
    PopStack popped9;
    PopStack popped10;
    Let b11 = M[Offset(Address(popped9),Mul(2,popped10))];
    Let b12 = M[Offset(Offset(Address(popped9),Mul(2,popped10)),1)];
    SetLocal 7 MakeHiLo(b11,b12);
    TraceOperation 100950 (Add (Var (Local 2)) (Con 2) Sp);
    PushStack Add(GetLocal(2),2);
    TraceOperation 100954 (Loadw (Var (Local 1)) (Var (Local 4)) Sp);
    Let b13 = M[Offset(Address(GetLocal(1)),Mul(2,GetLocal(4)))];
    Let b14 = M[Offset(Offset(Address(GetLocal(1)),Mul(2,GetLocal(4))),1)];
    PushStack MakeHiLo(b13,b14);
    TraceOperation 100958 (Storew (Var Sp) (Var Sp) (Var (Local 7)));
    PopStack popped15;
    PopStack popped16;
    SetByte Offset(Address(popped15),Mul(2,popped16)) HiByte(GetLocal(7));
    SetByte Offset(Offset(Address(popped15),Mul(2,popped16)),1) LoByte(GetLocal(7));
    TraceOperation 100963 (Add (Var (Local 3)) (Con 2) Sp);
    PushStack Add(GetLocal(3),2);
    TraceOperation 100967 (Loadw (Var (Local 1)) (Var (Local 4)) Sp);
    Let b17 = M[Offset(Address(GetLocal(1)),Mul(2,GetLocal(4)))];
    Let b18 = M[Offset(Offset(Address(GetLocal(1)),Mul(2,GetLocal(4))),1)];
    PushStack MakeHiLo(b17,b18);
    TraceOperation 100971 (Storew (Var Sp) (Var Sp) (Var (Local 6)));
    PopStack popped19;
    PopStack popped20;
    SetByte Offset(Address(popped19),Mul(2,popped20)) HiByte(GetLocal(6));
    SetByte Offset(Offset(Address(popped19),Mul(2,popped20)),1) LoByte(GetLocal(6));
    TraceOperation 100976 (Je [Var (Local 6),Con 32739] (Branch T (Dloc 100988)));
    if (Equal(GetLocal(6),32739)) {
      Jump: 100988
    } else {
      TraceOperation 100982 (Je [Var (Local 7),Con 32739] (Branch F (Dloc 100997)));
      if (Equal(GetLocal(7),32739)) {
        Jump: 100988
      } else {
        Jump: 100997
      }
    }
  }
LocOp 100988:
  TraceOperation 100988 (CallN (Floc 099428) [Var (Local 1),Var (Local 2),Var (Local 3),Var (Local 4)]);
  PushFrame;
  PushReturnAddress 100988;
  SetLocal 1 GetLocal(1);
  SetLocal 2 GetLocal(2);
  SetLocal 3 GetLocal(3);
  SetLocal 4 GetLocal(4);
  MakeRoutineFrame 8;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  Jump: 099429
LocReturn 100988:
  Jump: 100997
LocOp 100997:
  TraceOperation 100997 (Inc (Con 4));
  SetLocal 4 Add(GetLocal(4),1);
  TraceOperation 100999 (Jump 100921);
  Jump: 100921
LocOp 101002:
  TraceOperation 101002 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 101004:
  MakeRoutineFrame 9;
  if (LessThanByte(num_actuals,9)) {
    SetLocal 9 0;
    if (LessThanByte(num_actuals,8)) {
      SetLocal 8 0;
      if (LessThanByte(num_actuals,7)) {
        SetLocal 7 0;
        if (LessThanByte(num_actuals,6)) {
          SetLocal 6 0;
          if (LessThanByte(num_actuals,5)) {
            SetLocal 5 0;
            if (LessThanByte(num_actuals,4)) {
              SetLocal 4 0;
              if (LessThanByte(num_actuals,3)) {
                SetLocal 3 0;
                if (LessThanByte(num_actuals,2)) {
                  SetLocal 2 0;
                  if (LessThanByte(num_actuals,1)) {
                    SetLocal 1 0;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  Jump: 101005
LocOp 101005:
  TraceOperation 101005 (Jl (Var (Local 2)) (Con 100) (Branch T (Dloc 101017)));
  if (LessThan(GetLocal(2),100)) {
    Jump: 101017
  } else {
    TraceOperation 101009 (Call (Floc 098884) [Var (Local 1),Var (Local 2),Con 0] (Local 2));
    PushFrame;
    PushReturnAddress 101009;
    SetLocal 1 GetLocal(1);
    SetLocal 2 GetLocal(2);
    SetLocal 3 0;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    Jump: 098885
  }
LocReturn 101009:
  SetLocal 2 call_result;
  Jump: 101017
LocOp 101017:
  TraceOperation 101017 (Add (Var (Local 3)) (Con 2) Sp);
  PushStack Add(GetLocal(3),2);
  TraceOperation 101021 (Loadw (Var (Local 1)) (Var (Local 2)) Sp);
  Let b1 = M[Offset(Address(GetLocal(1)),Mul(2,GetLocal(2)))];
  Let b2 = M[Offset(Offset(Address(GetLocal(1)),Mul(2,GetLocal(2))),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 101025 (Loadw (Var Sp) (Var Sp) (Local 6));
  PopStack popped3;
  PopStack popped4;
  Let b5 = M[Offset(Address(popped3),Mul(2,popped4))];
  Let b6 = M[Offset(Offset(Address(popped3),Mul(2,popped4)),1)];
  SetLocal 6 MakeHiLo(b5,b6);
  TraceOperation 101029 (Add (Var (Local 4)) (Con 2) Sp);
  PushStack Add(GetLocal(4),2);
  TraceOperation 101033 (Loadw (Var (Local 1)) (Var (Local 2)) Sp);
  Let b7 = M[Offset(Address(GetLocal(1)),Mul(2,GetLocal(2)))];
  Let b8 = M[Offset(Offset(Address(GetLocal(1)),Mul(2,GetLocal(2))),1)];
  PushStack MakeHiLo(b7,b8);
  TraceOperation 101037 (Loadw (Var Sp) (Var Sp) (Local 7));
  PopStack popped9;
  PopStack popped10;
  Let b11 = M[Offset(Address(popped9),Mul(2,popped10))];
  Let b12 = M[Offset(Offset(Address(popped9),Mul(2,popped10)),1)];
  SetLocal 7 MakeHiLo(b11,b12);
  TraceOperation 101041 (Je [Var (Local 6),Con 32739] (Branch F (Dloc 101055)));
  if (Equal(GetLocal(6),32739)) {
    TraceOperation 101047 (Call (Floc 098952) [Var (Local 1),Var (Local 2),Var (Local 3)] (Local 8));
    PushFrame;
    PushReturnAddress 101047;
    SetLocal 1 GetLocal(1);
    SetLocal 2 GetLocal(2);
    SetLocal 3 GetLocal(3);
    MakeRoutineFrame 5;
    SetLocal 5 0;
    SetLocal 4 0;
    Jump: 098953
  } else {
    Jump: 101055
  }
LocReturn 101047:
  SetLocal 8 call_result;
  Jump: 101055
LocOp 101055:
  TraceOperation 101055 (Je [Var (Local 7),Con 32739] (Branch F (Dloc 101069)));
  if (Equal(GetLocal(7),32739)) {
    TraceOperation 101061 (Call (Floc 098952) [Var (Local 1),Var (Local 2),Var (Local 4)] (Local 9));
    PushFrame;
    PushReturnAddress 101061;
    SetLocal 1 GetLocal(1);
    SetLocal 2 GetLocal(2);
    SetLocal 3 GetLocal(4);
    MakeRoutineFrame 5;
    SetLocal 5 0;
    SetLocal 4 0;
    Jump: 098953
  } else {
    Jump: 101069
  }
LocReturn 101061:
  SetLocal 9 call_result;
  Jump: 101069
LocOp 101069:
  TraceOperation 101069 (Je [Var (Local 6),Var (Local 7)] (Branch F (Dloc 101130)));
  if (Equal(GetLocal(6),GetLocal(7))) {
    TraceOperation 101074 (Je [Var (Local 8),Var (Local 9)] (Branch F (Dloc 101130)));
    if (Equal(GetLocal(8),GetLocal(9))) {
      TraceOperation 101078 (Je [Var (Local 6),Con 32739] (Branch T (Dloc 101085)));
      if (Equal(GetLocal(6),32739)) {
        Jump: 101085
      } else {
        TraceOperation 101084 Rfalse;
        PopFrame;
        PopReturnAddress return_address_1;
        SetResult 0;
        JumpIndirect: (return) return_address_1
      }
    } else {
      Jump: 101130
    }
  } else {
    Jump: 101130
  }
LocOp 101085:
  TraceOperation 101085 (Jz (Var (Local 8)) (Branch F (Dloc 101089)));
  if (IsZero(GetLocal(8))) {
    TraceOperation 101088 Rfalse;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 0;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 101089
  }
LocOp 101089:
  TraceOperation 101089 (Call (Floc 100664) [Var (Local 1),Var (Local 3)] Sp);
  PushFrame;
  PushReturnAddress 101089;
  SetLocal 1 GetLocal(1);
  SetLocal 2 GetLocal(3);
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 100665
LocReturn 101089:
  PushStack call_result;
  TraceOperation 101096 (Jz (Var Sp) (Branch T (Dloc 101117)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 101117
  } else {
    TraceOperation 101099 (Call (Floc 100664) [Var (Local 1),Var (Local 4)] Sp);
    PushFrame;
    PushReturnAddress 101099;
    SetLocal 1 GetLocal(1);
    SetLocal 2 GetLocal(4);
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 100665
  }
LocReturn 101099:
  PushStack call_result;
  TraceOperation 101106 (Jz (Var Sp) (Branch T (Dloc 101110)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 101110
  } else {
    TraceOperation 101109 Rfalse;
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  }
LocOp 101110:
  TraceOperation 101110 (Mul (Con -1) (Var (Local 5)) Sp);
  PushStack Mul(-1,GetLocal(5));
  TraceOperation 101116 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 101117:
  TraceOperation 101117 (Call (Floc 100664) [Var (Local 1),Var (Local 4)] Sp);
  PushFrame;
  PushReturnAddress 101117;
  SetLocal 1 GetLocal(1);
  SetLocal 2 GetLocal(4);
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 100665
LocReturn 101117:
  PushStack call_result;
  TraceOperation 101124 (Jz (Var Sp) (Branch T (Dloc 101129)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 101129
  } else {
    TraceOperation 101127 (Ret (Var (Local 5)));
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult GetLocal(5);
    JumpIndirect: (return) return_address_2
  }
LocOp 101129:
  TraceOperation 101129 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
LocOp 101130:
  TraceOperation 101130 (Jz (Var (Local 8)) (Branch T (Dloc 101140)));
  if (IsZero(GetLocal(8))) {
    Jump: 101140
  } else {
    TraceOperation 101133 (Mul (Con -1) (Var (Local 5)) Sp);
    PushStack Mul(-1,GetLocal(5));
    TraceOperation 101139 Ret_popped;
    PopStack popped1;
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult popped1;
    JumpIndirect: (return) return_address_2
  }
LocOp 101140:
  TraceOperation 101140 (Jz (Var (Local 9)) (Branch T (Dloc 101145)));
  if (IsZero(GetLocal(9))) {
    Jump: 101145
  } else {
    TraceOperation 101143 (Ret (Var (Local 5)));
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult GetLocal(5);
    JumpIndirect: (return) return_address_1
  }
LocOp 101145:
  TraceOperation 101145 (Loadw (Var (Local 1)) (Var (Local 2)) Sp);
  Let b1 = M[Offset(Address(GetLocal(1)),Mul(2,GetLocal(2)))];
  Let b2 = M[Offset(Offset(Address(GetLocal(1)),Mul(2,GetLocal(2))),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 101149 (Loadw (Var Sp) (Con 1) Sp);
  PopStack popped3;
  Let b4 = M[Offset(Address(popped3),2)];
  Let b5 = M[Offset(Offset(Address(popped3),2),1)];
  PushStack MakeHiLo(b4,b5);
  TraceOperation 101153 (And (Var Sp) (Con 16384) Sp);
  PopStack popped6;
  PushStack And(popped6,16384);
  TraceOperation 101159 (Jz (Var Sp) (Branch T (Dloc 101170)));
  PopStack popped7;
  if (IsZero(popped7)) {
    Jump: 101170
  } else {
    TraceOperation 101162 (Jg (Var (Local 6)) (Var (Local 7)) (Branch F (Dloc 101167)));
    if (GreaterThan(GetLocal(6),GetLocal(7))) {
      TraceOperation 101166 Rtrue;
      PopFrame;
      PopReturnAddress return_address_8;
      SetResult 1;
      JumpIndirect: (return) return_address_8
    } else {
      Jump: 101167
    }
  }
LocOp 101167:
  TraceOperation 101167 (Ret (Con -1));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult -1;
  JumpIndirect: (return) return_address_1
LocOp 101170:
  TraceOperation 101170 (Call (Floc 040956) [Var (Local 6),Var (Local 7)] Sp);
  PushFrame;
  PushReturnAddress 101170;
  SetLocal 1 GetLocal(6);
  SetLocal 2 GetLocal(7);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 040957
LocReturn 101170:
  PushStack call_result;
  TraceOperation 101177 (Jg (Var Sp) (Con 0) (Branch F (Dloc 101182)));
  PopStack popped1;
  if (GreaterThan(popped1,0)) {
    TraceOperation 101181 Rtrue;
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  } else {
    Jump: 101182
  }
LocOp 101182:
  TraceOperation 101182 (Ret (Con -1));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult -1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 101188:
  MakeRoutineFrame 9;
  if (LessThanByte(num_actuals,9)) {
    SetLocal 9 0;
    if (LessThanByte(num_actuals,8)) {
      SetLocal 8 0;
      if (LessThanByte(num_actuals,7)) {
        SetLocal 7 0;
        if (LessThanByte(num_actuals,6)) {
          SetLocal 6 0;
          if (LessThanByte(num_actuals,5)) {
            SetLocal 5 0;
            if (LessThanByte(num_actuals,4)) {
              SetLocal 4 0;
              if (LessThanByte(num_actuals,3)) {
                SetLocal 3 0;
                if (LessThanByte(num_actuals,2)) {
                  SetLocal 2 0;
                  if (LessThanByte(num_actuals,1)) {
                    SetLocal 1 0;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  Jump: 101189
LocOp 101189:
  TraceOperation 101189 (Je [Var (Local 2),Var (Local 3)] (Branch F (Dloc 101194)));
  if (Equal(GetLocal(2),GetLocal(3))) {
    TraceOperation 101193 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 101194
  }
LocOp 101194:
  TraceOperation 101194 (Loadw (Var (Local 1)) (Con 0) (Local 6));
  Let b1 = M[Offset(Address(GetLocal(1)),0)];
  Let b2 = M[Offset(Offset(Address(GetLocal(1)),0),1)];
  SetLocal 6 MakeHiLo(b1,b2);
  TraceOperation 101198 (Store (Con 5) (Con 1));
  SetLocal 5 1;
  Jump: 101201
LocOp 101201:
  TraceOperation 101201 (Jg (Var (Local 5)) (Var (Local 6)) (Branch T (Dloc 101310)));
  if (GreaterThan(GetLocal(5),GetLocal(6))) {
    Jump: 101310
  } else {
    TraceOperation 101206 (Store (Con 9) (Con 0));
    SetLocal 9 0;
    TraceOperation 101209 (Add (Var (Local 2)) (Con 2) Sp);
    PushStack Add(GetLocal(2),2);
    TraceOperation 101213 (Loadw (Var (Local 1)) (Var (Local 5)) Sp);
    Let b1 = M[Offset(Address(GetLocal(1)),Mul(2,GetLocal(5)))];
    Let b2 = M[Offset(Offset(Address(GetLocal(1)),Mul(2,GetLocal(5))),1)];
    PushStack MakeHiLo(b1,b2);
    TraceOperation 101217 (Loadw (Var Sp) (Var Sp) (Local 7));
    PopStack popped3;
    PopStack popped4;
    Let b5 = M[Offset(Address(popped3),Mul(2,popped4))];
    Let b6 = M[Offset(Offset(Address(popped3),Mul(2,popped4)),1)];
    SetLocal 7 MakeHiLo(b5,b6);
    TraceOperation 101221 (Je [Var (Local 7),Con 32739] (Branch F (Dloc 101230)));
    if (Equal(GetLocal(7),32739)) {
      TraceOperation 101227 (Store (Con 9) (Con 1));
      SetLocal 9 1;
      Jump: 101230
    } else {
      Jump: 101230
    }
  }
LocOp 101230:
  TraceOperation 101230 (Store (Con 4) (Var (Local 2)));
  SetLocal 4 GetLocal(2);
  Jump: 101233
LocOp 101233:
  TraceOperation 101233 (Jl (Var (Local 4)) (Var (Local 3)) (Branch F (Dloc 101280)));
  if (LessThan(GetLocal(4),GetLocal(3))) {
    TraceOperation 101237 (Add (Var (Local 4)) (Con 2) Sp);
    PushStack Add(GetLocal(4),2);
    TraceOperation 101241 (Add (Var Sp) (Con 1) Sp);
    PopStack popped1;
    PushStack Add(popped1,1);
    TraceOperation 101245 (Loadw (Var (Local 1)) (Var (Local 5)) Sp);
    Let b2 = M[Offset(Address(GetLocal(1)),Mul(2,GetLocal(5)))];
    Let b3 = M[Offset(Offset(Address(GetLocal(1)),Mul(2,GetLocal(5))),1)];
    PushStack MakeHiLo(b2,b3);
    TraceOperation 101249 (Loadw (Var Sp) (Var Sp) (Local 8));
    PopStack popped4;
    PopStack popped5;
    Let b6 = M[Offset(Address(popped4),Mul(2,popped5))];
    Let b7 = M[Offset(Offset(Address(popped4),Mul(2,popped5)),1)];
    SetLocal 8 MakeHiLo(b6,b7);
    TraceOperation 101253 (Add (Var (Local 4)) (Con 2) Sp);
    PushStack Add(GetLocal(4),2);
    TraceOperation 101257 (Loadw (Var (Local 1)) (Var (Local 5)) Sp);
    Let b8 = M[Offset(Address(GetLocal(1)),Mul(2,GetLocal(5)))];
    Let b9 = M[Offset(Offset(Address(GetLocal(1)),Mul(2,GetLocal(5))),1)];
    PushStack MakeHiLo(b8,b9);
    TraceOperation 101261 (Storew (Var Sp) (Var Sp) (Var (Local 8)));
    PopStack popped10;
    PopStack popped11;
    SetByte Offset(Address(popped10),Mul(2,popped11)) HiByte(GetLocal(8));
    SetByte Offset(Offset(Address(popped10),Mul(2,popped11)),1) LoByte(GetLocal(8));
    TraceOperation 101266 (Je [Var (Local 8),Con 32739] (Branch F (Dloc 101275)));
    if (Equal(GetLocal(8),32739)) {
      TraceOperation 101272 (Store (Con 9) (Con 1));
      SetLocal 9 1;
      Jump: 101275
    } else {
      Jump: 101275
    }
  } else {
    Jump: 101280
  }
LocOp 101275:
  TraceOperation 101275 (Inc (Con 4));
  SetLocal 4 Add(GetLocal(4),1);
  TraceOperation 101277 (Jump 101233);
  Jump: 101233
LocOp 101280:
  TraceOperation 101280 (Add (Var (Local 3)) (Con 2) Sp);
  PushStack Add(GetLocal(3),2);
  TraceOperation 101284 (Loadw (Var (Local 1)) (Var (Local 5)) Sp);
  Let b1 = M[Offset(Address(GetLocal(1)),Mul(2,GetLocal(5)))];
  Let b2 = M[Offset(Offset(Address(GetLocal(1)),Mul(2,GetLocal(5))),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 101288 (Storew (Var Sp) (Var Sp) (Var (Local 7)));
  PopStack popped3;
  PopStack popped4;
  SetByte Offset(Address(popped3),Mul(2,popped4)) HiByte(GetLocal(7));
  SetByte Offset(Offset(Address(popped3),Mul(2,popped4)),1) LoByte(GetLocal(7));
  TraceOperation 101293 (Jz (Var (Local 9)) (Branch T (Dloc 101305)));
  if (IsZero(GetLocal(9))) {
    Jump: 101305
  } else {
    TraceOperation 101296 (CallN (Floc 099668) [Var (Local 1),Var (Local 2),Var (Local 3),Var (Local 5)]);
    PushFrame;
    PushReturnAddress 101296;
    SetLocal 1 GetLocal(1);
    SetLocal 2 GetLocal(2);
    SetLocal 3 GetLocal(3);
    SetLocal 4 GetLocal(5);
    MakeRoutineFrame 8;
    SetLocal 8 0;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    Jump: 099669
  }
LocReturn 101296:
  Jump: 101305
LocOp 101305:
  TraceOperation 101305 (Inc (Con 5));
  SetLocal 5 Add(GetLocal(5),1);
  TraceOperation 101307 (Jump 101201);
  Jump: 101201
LocOp 101310:
  TraceOperation 101310 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 101312:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 101313
LocOp 101313:
  TraceOperation 101313 (Call (Floc 098936) [Var (Local 1)] (Local 4));
  PushFrame;
  PushReturnAddress 101313;
  SetLocal 1 GetLocal(1);
  MakeRoutineFrame 1;
  Jump: 098937
LocReturn 101313:
  SetLocal 4 call_result;
  TraceOperation 101319 (Store (Con 2) (Con 2));
  SetLocal 2 2;
  Jump: 101322
LocOp 101322:
  TraceOperation 101322 (Jg (Var (Local 2)) (Var (Local 4)) (Branch T (Dloc 101342)));
  if (GreaterThan(GetLocal(2),GetLocal(4))) {
    Jump: 101342
  } else {
    TraceOperation 101326 (Random (Var (Local 2)) Sp);
    LetRandom random1 GetLocal(2);
    PushStack random1;
    TraceOperation 101330 (CallN (Floc 100908) [Var (Local 1),Var (Local 2),Var Sp]);
    PopStack popped2;
    PushFrame;
    PushReturnAddress 101330;
    SetLocal 1 GetLocal(1);
    SetLocal 2 GetLocal(2);
    SetLocal 3 popped2;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    Jump: 100909
  }
LocReturn 101330:
  TraceOperation 101337 (Inc (Con 2));
  SetLocal 2 Add(GetLocal(2),1);
  TraceOperation 101339 (Jump 101322);
  Jump: 101322
LocOp 101342:
  TraceOperation 101342 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 101344:
  MakeRoutineFrame 13;
  if (LessThanByte(num_actuals,13)) {
    SetLocal 13 0;
    if (LessThanByte(num_actuals,12)) {
      SetLocal 12 0;
      if (LessThanByte(num_actuals,11)) {
        SetLocal 11 0;
        if (LessThanByte(num_actuals,10)) {
          SetLocal 10 0;
          if (LessThanByte(num_actuals,9)) {
            SetLocal 9 0;
            if (LessThanByte(num_actuals,8)) {
              SetLocal 8 0;
              if (LessThanByte(num_actuals,7)) {
                SetLocal 7 0;
                if (LessThanByte(num_actuals,6)) {
                  SetLocal 6 0;
                  if (LessThanByte(num_actuals,5)) {
                    SetLocal 5 0;
                    if (LessThanByte(num_actuals,4)) {
                      SetLocal 4 0;
                      if (LessThanByte(num_actuals,3)) {
                        SetLocal 3 0;
                        if (LessThanByte(num_actuals,2)) {
                          SetLocal 2 0;
                          if (LessThanByte(num_actuals,1)) {
                            SetLocal 1 0;
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  Jump: 101345
LocOp 101345:
  TraceOperation 101345 (Jl (Var (Local 2)) (Con 100) (Branch T (Dloc 101357)));
  if (LessThan(GetLocal(2),100)) {
    Jump: 101357
  } else {
    TraceOperation 101349 (Call (Floc 098884) [Var (Local 1),Var (Local 2),Con 0] (Local 2));
    PushFrame;
    PushReturnAddress 101349;
    SetLocal 1 GetLocal(1);
    SetLocal 2 GetLocal(2);
    SetLocal 3 0;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    Jump: 098885
  }
LocReturn 101349:
  SetLocal 2 call_result;
  Jump: 101357
LocOp 101357:
  TraceOperation 101357 (Loadw (Var (Local 1)) (Var (Local 2)) Sp);
  Let b1 = M[Offset(Address(GetLocal(1)),Mul(2,GetLocal(2)))];
  Let b2 = M[Offset(Offset(Address(GetLocal(1)),Mul(2,GetLocal(2))),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 101361 (Loadw (Var Sp) (Con 1) Sp);
  PopStack popped3;
  Let b4 = M[Offset(Address(popped3),2)];
  Let b5 = M[Offset(Offset(Address(popped3),2),1)];
  PushStack MakeHiLo(b4,b5);
  TraceOperation 101365 (And (Var Sp) (Con 16384) (Local 12));
  PopStack popped6;
  SetLocal 12 And(popped6,16384);
  TraceOperation 101371 (Jz (Var (Local 3)) (Branch F (Dloc 101415)));
  if (IsZero(GetLocal(3))) {
    TraceOperation 101374 (Jz (Var (Local 12)) (Branch T (Dloc 101397)));
    if (IsZero(GetLocal(12))) {
      Jump: 101397
    } else {
      TraceOperation 101377 (Je [Var (Local 4),Con 1] (Branch F (Dloc 101389)));
      if (Equal(GetLocal(4),1)) {
        TraceOperation 101381 (Store (Con 7) (Con -32768));
        SetLocal 7 -32768;
        TraceOperation 101386 (Jump 101394);
        Jump: 101394
      } else {
        Jump: 101389
      }
    }
  } else {
    Jump: 101415
  }
LocOp 101389:
  TraceOperation 101389 (Store (Con 7) (Con 32767));
  SetLocal 7 32767;
  Jump: 101394
LocOp 101394:
  TraceOperation 101394 (Jump 101412);
  Jump: 101412
LocOp 101397:
  TraceOperation 101397 (Je [Var (Local 4),Con 1] (Branch F (Dloc 101407)));
  if (Equal(GetLocal(4),1)) {
    TraceOperation 101401 (Store (Con 7) (Con 0));
    SetLocal 7 0;
    TraceOperation 101404 (Jump 101412);
    Jump: 101412
  } else {
    Jump: 101407
  }
LocOp 101407:
  TraceOperation 101407 (Store (Con 7) (Con -1));
  SetLocal 7 -1;
  Jump: 101412
LocOp 101412:
  TraceOperation 101412 (Jump 101427);
  Jump: 101427
LocOp 101415:
  TraceOperation 101415 (Add (Var (Local 3)) (Con 2) Sp);
  PushStack Add(GetLocal(3),2);
  TraceOperation 101419 (Loadw (Var (Local 1)) (Var (Local 2)) Sp);
  Let b1 = M[Offset(Address(GetLocal(1)),Mul(2,GetLocal(2)))];
  Let b2 = M[Offset(Offset(Address(GetLocal(1)),Mul(2,GetLocal(2))),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 101423 (Loadw (Var Sp) (Var Sp) (Local 7));
  PopStack popped3;
  PopStack popped4;
  Let b5 = M[Offset(Address(popped3),Mul(2,popped4))];
  Let b6 = M[Offset(Offset(Address(popped3),Mul(2,popped4)),1)];
  SetLocal 7 MakeHiLo(b5,b6);
  Jump: 101427
LocOp 101427:
  TraceOperation 101427 (Jz (Var (Local 12)) (Branch T (Dloc 101438)));
  if (IsZero(GetLocal(12))) {
    Jump: 101438
  } else {
    TraceOperation 101430 (Store (Con 10) (Con 32767));
    SetLocal 10 32767;
    TraceOperation 101435 (Jump 101443);
    Jump: 101443
  }
LocOp 101438:
  TraceOperation 101438 (Store (Con 10) (Con -1));
  SetLocal 10 -1;
  Jump: 101443
LocOp 101443:
  TraceOperation 101443 (Call (Floc 098936) [Var (Local 1)] (Local 6));
  PushFrame;
  PushReturnAddress 101443;
  SetLocal 1 GetLocal(1);
  MakeRoutineFrame 1;
  Jump: 098937
LocReturn 101443:
  SetLocal 6 call_result;
  TraceOperation 101449 (Je [Var (Local 4),Con 1] (Branch F (Dloc 101599)));
  if (Equal(GetLocal(4),1)) {
    TraceOperation 101454 (Store (Con 5) (Con 1));
    SetLocal 5 1;
    Jump: 101457
  } else {
    Jump: 101599
  }
LocOp 101457:
  TraceOperation 101457 (Jg (Var (Local 5)) (Var (Local 6)) (Branch T (Dloc 101596)));
  if (GreaterThan(GetLocal(5),GetLocal(6))) {
    Jump: 101596
  } else {
    TraceOperation 101462 (Add (Var (Local 5)) (Con 2) Sp);
    PushStack Add(GetLocal(5),2);
    TraceOperation 101466 (Loadw (Var (Local 1)) (Var (Local 2)) Sp);
    Let b1 = M[Offset(Address(GetLocal(1)),Mul(2,GetLocal(2)))];
    Let b2 = M[Offset(Offset(Address(GetLocal(1)),Mul(2,GetLocal(2))),1)];
    PushStack MakeHiLo(b1,b2);
    TraceOperation 101470 (Loadw (Var Sp) (Var Sp) (Local 8));
    PopStack popped3;
    PopStack popped4;
    Let b5 = M[Offset(Address(popped3),Mul(2,popped4))];
    Let b6 = M[Offset(Offset(Address(popped3),Mul(2,popped4)),1)];
    SetLocal 8 MakeHiLo(b5,b6);
    TraceOperation 101474 (Je [Var (Local 8),Con 32739] (Branch F (Dloc 101494)));
    if (Equal(GetLocal(8),32739)) {
      TraceOperation 101480 (Call (Floc 098952) [Var (Local 1),Var (Local 2),Var (Local 5)] Sp);
      PushFrame;
      PushReturnAddress 101480;
      SetLocal 1 GetLocal(1);
      SetLocal 2 GetLocal(2);
      SetLocal 3 GetLocal(5);
      MakeRoutineFrame 5;
      SetLocal 5 0;
      SetLocal 4 0;
      Jump: 098953
    } else {
      Jump: 101494
    }
  }
LocReturn 101480:
  PushStack call_result;
  TraceOperation 101488 (Jz (Var Sp) (Branch T (Dloc 101494)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 101494
  } else {
    TraceOperation 101491 (Jump 101591);
    Jump: 101591
  }
LocOp 101494:
  TraceOperation 101494 (Mul (Var (Local 4)) (Var (Local 8)) (Local 9));
  SetLocal 9 Mul(GetLocal(4),GetLocal(8));
  TraceOperation 101498 (Jz (Var (Local 12)) (Branch T (Dloc 101536)));
  if (IsZero(GetLocal(12))) {
    Jump: 101536
  } else {
    TraceOperation 101501 (Mul (Var (Local 4)) (Var (Local 7)) Sp);
    PushStack Mul(GetLocal(4),GetLocal(7));
    TraceOperation 101505 (Jg (Var (Local 9)) (Var Sp) (Branch T (Dloc 101517)));
    PopStack popped1;
    if (GreaterThan(GetLocal(9),popped1)) {
      Jump: 101517
    } else {
      TraceOperation 101509 (Je [Var (Local 8),Var (Local 7)] (Branch F (Dloc 101527)));
      if (Equal(GetLocal(8),GetLocal(7))) {
        TraceOperation 101513 (Jg (Var (Local 5)) (Var (Local 3)) (Branch F (Dloc 101527)));
        if (GreaterThan(GetLocal(5),GetLocal(3))) {
          Jump: 101517
        } else {
          Jump: 101527
        }
      } else {
        Jump: 101527
      }
    }
  }
LocOp 101517:
  TraceOperation 101517 (Jl (Var (Local 9)) (Var (Local 10)) (Branch F (Dloc 101527)));
  if (LessThan(GetLocal(9),GetLocal(10))) {
    TraceOperation 101521 (Push (Con 1));
    PushStack 1;
    TraceOperation 101524 (Jump 101530);
    Jump: 101530
  } else {
    Jump: 101527
  }
LocOp 101527:
  TraceOperation 101527 (Push (Con 0));
  PushStack 0;
  Jump: 101530
LocOp 101530:
  TraceOperation 101530 (Pull (Con 13));
  PopStack popped1;
  SetLocal 13 popped1;
  TraceOperation 101533 (Jump 101582);
  Jump: 101582
LocOp 101536:
  TraceOperation 101536 (Mul (Var (Local 4)) (Var (Local 7)) Sp);
  PushStack Mul(GetLocal(4),GetLocal(7));
  TraceOperation 101540 (Call (Floc 040956) [Var (Local 9),Var Sp] Sp);
  PopStack popped1;
  PushFrame;
  PushReturnAddress 101540;
  SetLocal 1 GetLocal(9);
  SetLocal 2 popped1;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 040957
LocReturn 101540:
  PushStack call_result;
  TraceOperation 101547 (Jg (Var Sp) (Con 0) (Branch T (Dloc 101559)));
  PopStack popped1;
  if (GreaterThan(popped1,0)) {
    Jump: 101559
  } else {
    TraceOperation 101551 (Je [Var (Local 8),Var (Local 7)] (Branch F (Dloc 101576)));
    if (Equal(GetLocal(8),GetLocal(7))) {
      TraceOperation 101555 (Jg (Var (Local 5)) (Var (Local 3)) (Branch F (Dloc 101576)));
      if (GreaterThan(GetLocal(5),GetLocal(3))) {
        Jump: 101559
      } else {
        Jump: 101576
      }
    } else {
      Jump: 101576
    }
  }
LocOp 101559:
  TraceOperation 101559 (Call (Floc 040956) [Var (Local 9),Var (Local 10)] Sp);
  PushFrame;
  PushReturnAddress 101559;
  SetLocal 1 GetLocal(9);
  SetLocal 2 GetLocal(10);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 040957
LocReturn 101559:
  PushStack call_result;
  TraceOperation 101566 (Jl (Var Sp) (Con 0) (Branch F (Dloc 101576)));
  PopStack popped1;
  if (LessThan(popped1,0)) {
    TraceOperation 101570 (Push (Con 1));
    PushStack 1;
    TraceOperation 101573 (Jump 101579);
    Jump: 101579
  } else {
    Jump: 101576
  }
LocOp 101576:
  TraceOperation 101576 (Push (Con 0));
  PushStack 0;
  Jump: 101579
LocOp 101579:
  TraceOperation 101579 (Pull (Con 13));
  PopStack popped1;
  SetLocal 13 popped1;
  Jump: 101582
LocOp 101582:
  TraceOperation 101582 (Jz (Var (Local 13)) (Branch T (Dloc 101591)));
  if (IsZero(GetLocal(13))) {
    Jump: 101591
  } else {
    TraceOperation 101585 (Store (Con 10) (Var (Local 9)));
    SetLocal 10 GetLocal(9);
    TraceOperation 101588 (Store (Con 11) (Var (Local 5)));
    SetLocal 11 GetLocal(5);
    Jump: 101591
  }
LocOp 101591:
  TraceOperation 101591 (Inc (Con 5));
  SetLocal 5 Add(GetLocal(5),1);
  TraceOperation 101593 (Jump 101457);
  Jump: 101457
LocOp 101596:
  TraceOperation 101596 (Jump 101741);
  Jump: 101741
LocOp 101599:
  TraceOperation 101599 (Store (Con 5) (Var (Local 6)));
  SetLocal 5 GetLocal(6);
  Jump: 101602
LocOp 101602:
  TraceOperation 101602 (Jl (Var (Local 5)) (Con 1) (Branch T (Dloc 101741)));
  if (LessThan(GetLocal(5),1)) {
    Jump: 101741
  } else {
    TraceOperation 101607 (Add (Var (Local 5)) (Con 2) Sp);
    PushStack Add(GetLocal(5),2);
    TraceOperation 101611 (Loadw (Var (Local 1)) (Var (Local 2)) Sp);
    Let b1 = M[Offset(Address(GetLocal(1)),Mul(2,GetLocal(2)))];
    Let b2 = M[Offset(Offset(Address(GetLocal(1)),Mul(2,GetLocal(2))),1)];
    PushStack MakeHiLo(b1,b2);
    TraceOperation 101615 (Loadw (Var Sp) (Var Sp) (Local 8));
    PopStack popped3;
    PopStack popped4;
    Let b5 = M[Offset(Address(popped3),Mul(2,popped4))];
    Let b6 = M[Offset(Offset(Address(popped3),Mul(2,popped4)),1)];
    SetLocal 8 MakeHiLo(b5,b6);
    TraceOperation 101619 (Je [Var (Local 8),Con 32739] (Branch F (Dloc 101639)));
    if (Equal(GetLocal(8),32739)) {
      TraceOperation 101625 (Call (Floc 098952) [Var (Local 1),Var (Local 2),Var (Local 5)] Sp);
      PushFrame;
      PushReturnAddress 101625;
      SetLocal 1 GetLocal(1);
      SetLocal 2 GetLocal(2);
      SetLocal 3 GetLocal(5);
      MakeRoutineFrame 5;
      SetLocal 5 0;
      SetLocal 4 0;
      Jump: 098953
    } else {
      Jump: 101639
    }
  }
LocReturn 101625:
  PushStack call_result;
  TraceOperation 101633 (Jz (Var Sp) (Branch T (Dloc 101639)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 101639
  } else {
    TraceOperation 101636 (Jump 101736);
    Jump: 101736
  }
LocOp 101639:
  TraceOperation 101639 (Mul (Var (Local 4)) (Var (Local 8)) (Local 9));
  SetLocal 9 Mul(GetLocal(4),GetLocal(8));
  TraceOperation 101643 (Jz (Var (Local 12)) (Branch T (Dloc 101681)));
  if (IsZero(GetLocal(12))) {
    Jump: 101681
  } else {
    TraceOperation 101646 (Mul (Var (Local 4)) (Var (Local 7)) Sp);
    PushStack Mul(GetLocal(4),GetLocal(7));
    TraceOperation 101650 (Jg (Var (Local 9)) (Var Sp) (Branch T (Dloc 101662)));
    PopStack popped1;
    if (GreaterThan(GetLocal(9),popped1)) {
      Jump: 101662
    } else {
      TraceOperation 101654 (Je [Var (Local 8),Var (Local 7)] (Branch F (Dloc 101672)));
      if (Equal(GetLocal(8),GetLocal(7))) {
        TraceOperation 101658 (Jl (Var (Local 5)) (Var (Local 3)) (Branch F (Dloc 101672)));
        if (LessThan(GetLocal(5),GetLocal(3))) {
          Jump: 101662
        } else {
          Jump: 101672
        }
      } else {
        Jump: 101672
      }
    }
  }
LocOp 101662:
  TraceOperation 101662 (Jl (Var (Local 9)) (Var (Local 10)) (Branch F (Dloc 101672)));
  if (LessThan(GetLocal(9),GetLocal(10))) {
    TraceOperation 101666 (Push (Con 1));
    PushStack 1;
    TraceOperation 101669 (Jump 101675);
    Jump: 101675
  } else {
    Jump: 101672
  }
LocOp 101672:
  TraceOperation 101672 (Push (Con 0));
  PushStack 0;
  Jump: 101675
LocOp 101675:
  TraceOperation 101675 (Pull (Con 13));
  PopStack popped1;
  SetLocal 13 popped1;
  TraceOperation 101678 (Jump 101727);
  Jump: 101727
LocOp 101681:
  TraceOperation 101681 (Mul (Var (Local 4)) (Var (Local 7)) Sp);
  PushStack Mul(GetLocal(4),GetLocal(7));
  TraceOperation 101685 (Call (Floc 040956) [Var (Local 9),Var Sp] Sp);
  PopStack popped1;
  PushFrame;
  PushReturnAddress 101685;
  SetLocal 1 GetLocal(9);
  SetLocal 2 popped1;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 040957
LocReturn 101685:
  PushStack call_result;
  TraceOperation 101692 (Jg (Var Sp) (Con 0) (Branch T (Dloc 101704)));
  PopStack popped1;
  if (GreaterThan(popped1,0)) {
    Jump: 101704
  } else {
    TraceOperation 101696 (Je [Var (Local 8),Var (Local 7)] (Branch F (Dloc 101721)));
    if (Equal(GetLocal(8),GetLocal(7))) {
      TraceOperation 101700 (Jl (Var (Local 5)) (Var (Local 3)) (Branch F (Dloc 101721)));
      if (LessThan(GetLocal(5),GetLocal(3))) {
        Jump: 101704
      } else {
        Jump: 101721
      }
    } else {
      Jump: 101721
    }
  }
LocOp 101704:
  TraceOperation 101704 (Call (Floc 040956) [Var (Local 9),Var (Local 10)] Sp);
  PushFrame;
  PushReturnAddress 101704;
  SetLocal 1 GetLocal(9);
  SetLocal 2 GetLocal(10);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 040957
LocReturn 101704:
  PushStack call_result;
  TraceOperation 101711 (Jl (Var Sp) (Con 0) (Branch F (Dloc 101721)));
  PopStack popped1;
  if (LessThan(popped1,0)) {
    TraceOperation 101715 (Push (Con 1));
    PushStack 1;
    TraceOperation 101718 (Jump 101724);
    Jump: 101724
  } else {
    Jump: 101721
  }
LocOp 101721:
  TraceOperation 101721 (Push (Con 0));
  PushStack 0;
  Jump: 101724
LocOp 101724:
  TraceOperation 101724 (Pull (Con 13));
  PopStack popped1;
  SetLocal 13 popped1;
  Jump: 101727
LocOp 101727:
  TraceOperation 101727 (Jz (Var (Local 13)) (Branch T (Dloc 101736)));
  if (IsZero(GetLocal(13))) {
    Jump: 101736
  } else {
    TraceOperation 101730 (Store (Con 10) (Var (Local 9)));
    SetLocal 10 GetLocal(9);
    TraceOperation 101733 (Store (Con 11) (Var (Local 5)));
    SetLocal 11 GetLocal(5);
    Jump: 101736
  }
LocOp 101736:
  TraceOperation 101736 (Dec (Con 5));
  SetLocal 5 Sub(GetLocal(5),1);
  TraceOperation 101738 (Jump 101602);
  Jump: 101602
LocOp 101741:
  TraceOperation 101741 (Ret (Var (Local 11)));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult GetLocal(11);
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 101744:
  MakeRoutineFrame 7;
  if (LessThanByte(num_actuals,7)) {
    SetLocal 7 0;
    if (LessThanByte(num_actuals,6)) {
      SetLocal 6 0;
      if (LessThanByte(num_actuals,5)) {
        SetLocal 5 0;
        if (LessThanByte(num_actuals,4)) {
          SetLocal 4 0;
          if (LessThanByte(num_actuals,3)) {
            SetLocal 3 0;
            if (LessThanByte(num_actuals,2)) {
              SetLocal 2 0;
              if (LessThanByte(num_actuals,1)) {
                SetLocal 1 0;
              }
            }
          }
        }
      }
    }
  }
  Jump: 101745
LocOp 101745:
  TraceOperation 101745 (Jl (Var (Local 3)) (Var (Local 2)) (Branch F (Dloc 101750)));
  if (LessThan(GetLocal(3),GetLocal(2))) {
    TraceOperation 101749 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 101750
  }
LocOp 101750:
  TraceOperation 101750 (Store (Con 5) (Con 0));
  SetLocal 5 0;
  TraceOperation 101753 (Store (Con 6) (Con 0));
  SetLocal 6 0;
  TraceOperation 101756 (Store (Con 4) (Var (Local 2)));
  SetLocal 4 GetLocal(2);
  Jump: 101759
LocOp 101759:
  TraceOperation 101759 (Jg (Var (Local 4)) (Var (Local 3)) (Branch T (Dloc 101792)));
  if (GreaterThan(GetLocal(4),GetLocal(3))) {
    Jump: 101792
  } else {
    TraceOperation 101763 (Call (Floc 100664) [Var (Local 1),Var (Local 4)] Sp);
    PushFrame;
    PushReturnAddress 101763;
    SetLocal 1 GetLocal(1);
    SetLocal 2 GetLocal(4);
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 100665
  }
LocReturn 101763:
  PushStack call_result;
  TraceOperation 101770 (Jz (Var Sp) (Branch T (Dloc 101784)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 101784
  } else {
    TraceOperation 101773 (Jz (Var (Local 5)) (Branch F (Dloc 101779)));
    if (IsZero(GetLocal(5))) {
      TraceOperation 101776 (Store (Con 5) (Var (Local 4)));
      SetLocal 5 GetLocal(4);
      Jump: 101779
    } else {
      Jump: 101779
    }
  }
LocOp 101779:
  TraceOperation 101779 (Inc (Con 7));
  SetLocal 7 Add(GetLocal(7),1);
  TraceOperation 101781 (Jump 101787);
  Jump: 101787
LocOp 101784:
  TraceOperation 101784 (Store (Con 6) (Var (Local 4)));
  SetLocal 6 GetLocal(4);
  Jump: 101787
LocOp 101787:
  TraceOperation 101787 (Inc (Con 4));
  SetLocal 4 Add(GetLocal(4),1);
  TraceOperation 101789 (Jump 101759);
  Jump: 101759
LocOp 101792:
  TraceOperation 101792 (Jg (Var (Local 5)) (Con 0) (Branch F (Dloc 101826)));
  if (GreaterThan(GetLocal(5),0)) {
    TraceOperation 101796 (Jg (Var (Local 6)) (Con 0) (Branch F (Dloc 101826)));
    if (GreaterThan(GetLocal(6),0)) {
      TraceOperation 101800 (Jl (Var (Local 5)) (Var (Local 6)) (Branch F (Dloc 101826)));
      if (LessThan(GetLocal(5),GetLocal(6))) {
        TraceOperation 101804 (CallN (Floc 101188) [Var (Local 1),Var (Local 5),Var (Local 6)]);
        PushFrame;
        PushReturnAddress 101804;
        SetLocal 1 GetLocal(1);
        SetLocal 2 GetLocal(5);
        SetLocal 3 GetLocal(6);
        MakeRoutineFrame 9;
        SetLocal 9 0;
        SetLocal 8 0;
        SetLocal 7 0;
        SetLocal 6 0;
        SetLocal 5 0;
        SetLocal 4 0;
        Jump: 101189
      } else {
        Jump: 101826
      }
    } else {
      Jump: 101826
    }
  } else {
    Jump: 101826
  }
LocReturn 101804:
  TraceOperation 101811 (Sub (Var (Local 6)) (Con 1) Sp);
  PushStack Sub(GetLocal(6),1);
  TraceOperation 101815 (Add (Var (Local 5)) (Con 1) Sp);
  PushStack Add(GetLocal(5),1);
  TraceOperation 101819 (CallN (Floc 101744) [Var (Local 1),Var Sp,Var Sp]);
  PopStack popped1;
  PopStack popped2;
  PushFrame;
  PushReturnAddress 101819;
  SetLocal 1 GetLocal(1);
  SetLocal 2 popped1;
  SetLocal 3 popped2;
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 101745
LocReturn 101819:
  Jump: 101826
LocOp 101826:
  TraceOperation 101826 (Sub (Var (Local 3)) (Var (Local 7)) Sp);
  PushStack Sub(GetLocal(3),GetLocal(7));
  TraceOperation 101830 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 101832:
  MakeRoutineFrame 9;
  if (LessThanByte(num_actuals,9)) {
    SetLocal 9 0;
    if (LessThanByte(num_actuals,8)) {
      SetLocal 8 0;
      if (LessThanByte(num_actuals,7)) {
        SetLocal 7 0;
        if (LessThanByte(num_actuals,6)) {
          SetLocal 6 0;
          if (LessThanByte(num_actuals,5)) {
            SetLocal 5 0;
            if (LessThanByte(num_actuals,4)) {
              SetLocal 4 0;
              if (LessThanByte(num_actuals,3)) {
                SetLocal 3 0;
                if (LessThanByte(num_actuals,2)) {
                  SetLocal 2 0;
                  if (LessThanByte(num_actuals,1)) {
                    SetLocal 1 0;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  Jump: 101833
LocOp 101833:
  TraceOperation 101833 (Store (Con 6) (Con 1));
  SetLocal 6 1;
  Jump: 101836
LocOp 101836:
  TraceOperation 101836 (Loadw (Var (Local 1)) (Con 0) Sp);
  Let b1 = M[Offset(Address(GetLocal(1)),0)];
  Let b2 = M[Offset(Offset(Address(GetLocal(1)),0),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 101840 (Jg (Var (Local 6)) (Var Sp) (Branch T (Dloc 101874)));
  PopStack popped3;
  if (GreaterThan(GetLocal(6),popped3)) {
    Jump: 101874
  } else {
    TraceOperation 101844 (Loadw (Var (Local 1)) (Var (Local 6)) (Local 7));
    Let b4 = M[Offset(Address(GetLocal(1)),Mul(2,GetLocal(6)))];
    Let b5 = M[Offset(Offset(Address(GetLocal(1)),Mul(2,GetLocal(6))),1)];
    SetLocal 7 MakeHiLo(b4,b5);
    TraceOperation 101848 (Loadw (Var (Local 7)) (Con 1) Sp);
    Let b6 = M[Offset(Address(GetLocal(7)),2)];
    Let b7 = M[Offset(Offset(Address(GetLocal(7)),2),1)];
    PushStack MakeHiLo(b6,b7);
    TraceOperation 101852 (And (Var Sp) (Con 4096) Sp);
    PopStack popped8;
    PushStack And(popped8,4096);
    TraceOperation 101858 (Jz (Var Sp) (Branch T (Dloc 101869)));
    PopStack popped9;
    if (IsZero(popped9)) {
      Jump: 101869
    } else {
      TraceOperation 101861 (Call (Floc 086692) [Con 27,Var (Local 1)] Sp);
      PushFrame;
      PushReturnAddress 101861;
      SetLocal 1 27;
      SetLocal 2 GetLocal(1);
      MakeRoutineFrame 7;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      SetLocal 3 0;
      Jump: 086693
    }
  }
LocReturn 101861:
  PushStack call_result;
  TraceOperation 101868 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 101869:
  TraceOperation 101869 (Inc (Con 6));
  SetLocal 6 Add(GetLocal(6),1);
  TraceOperation 101871 (Jump 101836);
  Jump: 101836
LocOp 101874:
  TraceOperation 101874 (Jl (Var (Local 2)) (Con 100) (Branch T (Dloc 101886)));
  if (LessThan(GetLocal(2),100)) {
    Jump: 101886
  } else {
    TraceOperation 101878 (Call (Floc 098884) [Var (Local 1),Var (Local 2),Con 0] (Local 2));
    PushFrame;
    PushReturnAddress 101878;
    SetLocal 1 GetLocal(1);
    SetLocal 2 GetLocal(2);
    SetLocal 3 0;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    Jump: 098885
  }
LocReturn 101878:
  SetLocal 2 call_result;
  Jump: 101886
LocOp 101886:
  TraceOperation 101886 (Call (Floc 098936) [Var (Local 1)] (Local 8));
  PushFrame;
  PushReturnAddress 101886;
  SetLocal 1 GetLocal(1);
  MakeRoutineFrame 1;
  Jump: 098937
LocReturn 101886:
  SetLocal 8 call_result;
  TraceOperation 101892 (Call (Floc 101744) [Var (Local 1),Con 1,Var (Local 8)] (Local 8));
  PushFrame;
  PushReturnAddress 101892;
  SetLocal 1 GetLocal(1);
  SetLocal 2 1;
  SetLocal 3 GetLocal(8);
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 101745
LocReturn 101892:
  SetLocal 8 call_result;
  TraceOperation 101900 (Jz (Var (Local 4)) (Branch T (Dloc 101932)));
  if (IsZero(GetLocal(4))) {
    Jump: 101932
  } else {
    TraceOperation 101903 (Print "After moving blanks to back:\n");
    GamePrint "After moving blanks to back:\n";
    TraceOperation 101926 (CallN (Floc 102284) [Var (Local 1),Var (Local 2)]);
    PushFrame;
    PushReturnAddress 101926;
    SetLocal 1 GetLocal(1);
    SetLocal 2 GetLocal(2);
    MakeRoutineFrame 5;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 102285
  }
LocReturn 101926:
  Jump: 101932
LocOp 101932:
  TraceOperation 101932 (CallN (Floc 098280) [Con 25227,Con 25251]);
  PushFrame;
  PushReturnAddress 101932;
  SetLocal 1 25227;
  SetLocal 2 25251;
  MakeRoutineFrame 2;
  Jump: 098281
LocReturn 101932:
  TraceOperation 101940 (CallN (Floc 098288) [Var (Local 1),Var (Local 2),Var (Local 3),Var (Local 8),Var (Local 4),Var (Local 5)]);
  PushFrame;
  PushReturnAddress 101940;
  SetLocal 1 GetLocal(1);
  SetLocal 2 GetLocal(2);
  SetLocal 3 GetLocal(3);
  SetLocal 4 GetLocal(8);
  SetLocal 5 GetLocal(4);
  SetLocal 6 GetLocal(5);
  MakeRoutineFrame 6;
  Jump: 098289
LocReturn 101940:
  TraceOperation 101951 (Jz (Var (Local 4)) (Branch T (Dloc 101973)));
  if (IsZero(GetLocal(4))) {
    Jump: 101973
  } else {
    TraceOperation 101954 (Print "Final state:\n");
    GamePrint "Final state:\n";
    TraceOperation 101967 (CallN (Floc 102284) [Var (Local 1),Var (Local 2)]);
    PushFrame;
    PushReturnAddress 101967;
    SetLocal 1 GetLocal(1);
    SetLocal 2 GetLocal(2);
    MakeRoutineFrame 5;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 102285
  }
LocReturn 101967:
  Jump: 101973
LocOp 101973:
  TraceOperation 101973 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 101976:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 101977
LocOp 101977:
  TraceOperation 101977 (Store (Con 255) (Var (Local 1)));
  SetByte 007684 HiByte(GetLocal(1));
  SetByte 007685 LoByte(GetLocal(1));
  TraceOperation 101980 (Je [Var (Global 239),Con 12428] (Branch F (Dloc 102012)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),12428)) {
    TraceOperation 101986 (Print "Table of Final Question Options");
    GamePrint "Table of Final Question Options";
    TraceOperation 102011 Rtrue;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 102012
  }
LocOp 102012:
  TraceOperation 102012 (Je [Var (Global 239),Con 12520] (Branch F (Dloc 102040)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),12520)) {
    TraceOperation 102018 (Print "Table of Locale Priorities");
    GamePrint "Table of Locale Priorities";
    TraceOperation 102039 Rtrue;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 102040
  }
LocOp 102040:
  TraceOperation 102040 (Print "** No such table **");
  GamePrint "** No such table **";
  TraceOperation 102063 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 102064:
  MakeRoutineFrame 9;
  if (LessThanByte(num_actuals,9)) {
    SetLocal 9 0;
    if (LessThanByte(num_actuals,8)) {
      SetLocal 8 0;
      if (LessThanByte(num_actuals,7)) {
        SetLocal 7 0;
        if (LessThanByte(num_actuals,6)) {
          SetLocal 6 0;
          if (LessThanByte(num_actuals,5)) {
            SetLocal 5 0;
            if (LessThanByte(num_actuals,4)) {
              SetLocal 4 0;
              if (LessThanByte(num_actuals,3)) {
                SetLocal 3 0;
                if (LessThanByte(num_actuals,2)) {
                  SetLocal 2 0;
                  if (LessThanByte(num_actuals,1)) {
                    SetLocal 1 0;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  Jump: 102065
LocOp 102065:
  TraceOperation 102065 (Store (Con 2) (Con 1));
  SetLocal 2 1;
  Jump: 102068
LocOp 102068:
  TraceOperation 102068 (Loadw (Var (Local 1)) (Con 0) Sp);
  Let b1 = M[Offset(Address(GetLocal(1)),0)];
  Let b2 = M[Offset(Offset(Address(GetLocal(1)),0),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 102072 (Jg (Var (Local 2)) (Var Sp) (Branch T (Dloc 102098)));
  PopStack popped3;
  if (GreaterThan(GetLocal(2),popped3)) {
    Jump: 102098
  } else {
    TraceOperation 102076 (Loadw (Var (Local 1)) (Var (Local 2)) (Local 3));
    Let b4 = M[Offset(Address(GetLocal(1)),Mul(2,GetLocal(2)))];
    Let b5 = M[Offset(Offset(Address(GetLocal(1)),Mul(2,GetLocal(2))),1)];
    SetLocal 3 MakeHiLo(b4,b5);
    TraceOperation 102080 (Loadw (Var (Local 3)) (Con 1) Sp);
    Let b6 = M[Offset(Address(GetLocal(3)),2)];
    Let b7 = M[Offset(Offset(Address(GetLocal(3)),2),1)];
    PushStack MakeHiLo(b6,b7);
    TraceOperation 102084 (And (Var Sp) (Con 1024) Sp);
    PopStack popped8;
    PushStack And(popped8,1024);
    TraceOperation 102090 (Jz (Var Sp) (Branch T Dtrue));
    PopStack popped9;
    if (IsZero(popped9)) {
      PopFrame;
      PopReturnAddress return_address_10;
      SetResult 1;
      JumpIndirect: (return) return_address_10
    } else {
      TraceOperation 102093 (Inc (Con 2));
      SetLocal 2 Add(GetLocal(2),1);
      TraceOperation 102095 (Jump 102068);
      Jump: 102068
    }
  }
LocOp 102098:
  TraceOperation 102098 (Call (Floc 098936) [Var (Local 1)] (Local 4));
  PushFrame;
  PushReturnAddress 102098;
  SetLocal 1 GetLocal(1);
  MakeRoutineFrame 1;
  Jump: 098937
LocReturn 102098:
  SetLocal 4 call_result;
  TraceOperation 102104 (Call (Floc 101744) [Var (Local 1),Con 1,Var (Local 4)] (Local 4));
  PushFrame;
  PushReturnAddress 102104;
  SetLocal 1 GetLocal(1);
  SetLocal 2 1;
  SetLocal 3 GetLocal(4);
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 101745
LocReturn 102104:
  SetLocal 4 call_result;
  TraceOperation 102112 (Print "! ");
  GamePrint "! ";
  TraceOperation 102115 (CallN (Floc 101976) [Var (Local 1)]);
  PushFrame;
  PushReturnAddress 102115;
  SetLocal 1 GetLocal(1);
  MakeRoutineFrame 1;
  Jump: 101977
LocReturn 102115:
  TraceOperation 102120 (Print " (");
  GamePrint " (";
  TraceOperation 102123 (Print_num (Var (Local 4)));
  GamePrint ShowNumber(GetLocal(4));
  TraceOperation 102126 (Print ")\n");
  GamePrint ")\n";
  TraceOperation 102131 (Store (Con 5) (Con 1));
  SetLocal 5 1;
  TraceOperation 102134 (Jg (Var (Local 5)) (Var (Local 4)) (Branch T (Dloc 102276)));
  if (GreaterThan(GetLocal(5),GetLocal(4))) {
    Jump: 102276
  } else {
    TraceOperation 102139 (Store (Con 6) (Con 1));
    SetLocal 6 1;
    TraceOperation 102142 (Loadw (Var (Local 1)) (Con 0) Sp);
    Let b1 = M[Offset(Address(GetLocal(1)),0)];
    Let b2 = M[Offset(Offset(Address(GetLocal(1)),0),1)];
    PushStack MakeHiLo(b1,b2);
    TraceOperation 102146 (Jg (Var (Local 6)) (Var Sp) (Branch T (Dloc 102268)));
    PopStack popped3;
    if (GreaterThan(GetLocal(6),popped3)) {
      Jump: 102268
    } else {
      TraceOperation 102151 (Loadw (Var (Local 1)) (Var (Local 6)) Sp);
      Let b4 = M[Offset(Address(GetLocal(1)),Mul(2,GetLocal(6)))];
      Let b5 = M[Offset(Offset(Address(GetLocal(1)),Mul(2,GetLocal(6))),1)];
      PushStack MakeHiLo(b4,b5);
      TraceOperation 102155 (Loadw (Var Sp) (Con 1) Sp);
      PopStack popped6;
      Let b7 = M[Offset(Address(popped6),2)];
      Let b8 = M[Offset(Offset(Address(popped6),2),1)];
      PushStack MakeHiLo(b7,b8);
      TraceOperation 102159 (And (Var Sp) (Con 511) (Local 8));
      PopStack popped9;
      SetLocal 8 And(popped9,511);
      TraceOperation 102165 (Store (Con 9) (Con 54));
      SetLocal 9 54;
      TraceOperation 102168 (Store (Con 2) (Con 0));
      SetLocal 2 0;
      TraceOperation 102171 (Jump 102178);
      Jump: 102178
    }
  }
--------------------------------------------------
LocRoutine 102284:
  MakeRoutineFrame 5;
  if (LessThanByte(num_actuals,5)) {
    SetLocal 5 0;
    if (LessThanByte(num_actuals,4)) {
      SetLocal 4 0;
      if (LessThanByte(num_actuals,3)) {
        SetLocal 3 0;
        if (LessThanByte(num_actuals,2)) {
          SetLocal 2 0;
          if (LessThanByte(num_actuals,1)) {
            SetLocal 1 0;
          }
        }
      }
    }
  }
  Jump: 102285
LocOp 102285:
  TraceOperation 102285 (Jl (Var (Local 2)) (Con 100) (Branch T (Dloc 102297)));
  if (LessThan(GetLocal(2),100)) {
    Jump: 102297
  } else {
    TraceOperation 102289 (Call (Floc 098884) [Var (Local 1),Var (Local 2),Con 0] (Local 2));
    PushFrame;
    PushReturnAddress 102289;
    SetLocal 1 GetLocal(1);
    SetLocal 2 GetLocal(2);
    SetLocal 3 0;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    Jump: 098885
  }
LocReturn 102289:
  SetLocal 2 call_result;
  Jump: 102297
LocOp 102297:
  TraceOperation 102297 (Call (Floc 098936) [Var (Local 1)] (Local 3));
  PushFrame;
  PushReturnAddress 102297;
  SetLocal 1 GetLocal(1);
  MakeRoutineFrame 1;
  Jump: 098937
LocReturn 102297:
  SetLocal 3 call_result;
  TraceOperation 102303 (Print "Table col ");
  GamePrint "Table col ";
  TraceOperation 102312 (Print_num (Var (Local 2)));
  GamePrint ShowNumber(GetLocal(2));
  TraceOperation 102315 (Print ": ");
  GamePrint ": ";
  TraceOperation 102318 (Store (Con 4) (Con 1));
  SetLocal 4 1;
  Jump: 102321
LocOp 102321:
  TraceOperation 102321 (Jg (Var (Local 4)) (Var (Local 3)) (Branch T (Dloc 102377)));
  if (GreaterThan(GetLocal(4),GetLocal(3))) {
    Jump: 102377
  } else {
    TraceOperation 102325 (Add (Var (Local 4)) (Con 2) Sp);
    PushStack Add(GetLocal(4),2);
    TraceOperation 102329 (Loadw (Var (Local 1)) (Var (Local 2)) Sp);
    Let b1 = M[Offset(Address(GetLocal(1)),Mul(2,GetLocal(2)))];
    Let b2 = M[Offset(Offset(Address(GetLocal(1)),Mul(2,GetLocal(2))),1)];
    PushStack MakeHiLo(b1,b2);
    TraceOperation 102333 (Loadw (Var Sp) (Var Sp) (Local 5));
    PopStack popped3;
    PopStack popped4;
    Let b5 = M[Offset(Address(popped3),Mul(2,popped4))];
    Let b6 = M[Offset(Offset(Address(popped3),Mul(2,popped4)),1)];
    SetLocal 5 MakeHiLo(b5,b6);
    TraceOperation 102337 (Je [Var (Local 5),Con 32739] (Branch F (Dloc 102366)));
    if (Equal(GetLocal(5),32739)) {
      TraceOperation 102343 (Call (Floc 098952) [Var (Local 1),Var (Local 2),Var (Local 4)] Sp);
      PushFrame;
      PushReturnAddress 102343;
      SetLocal 1 GetLocal(1);
      SetLocal 2 GetLocal(2);
      SetLocal 3 GetLocal(4);
      MakeRoutineFrame 5;
      SetLocal 5 0;
      SetLocal 4 0;
      Jump: 098953
    } else {
      Jump: 102366
    }
  }
LocReturn 102343:
  PushStack call_result;
  TraceOperation 102351 (Jz (Var Sp) (Branch T (Dloc 102366)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 102366
  } else {
    TraceOperation 102354 (Print "BLANK ");
    GamePrint "BLANK ";
    TraceOperation 102363 (Jump 102372);
    Jump: 102372
  }
LocOp 102366:
  TraceOperation 102366 (Print_num (Var (Local 5)));
  GamePrint ShowNumber(GetLocal(5));
  TraceOperation 102369 (Print " ");
  GamePrint " ";
  Jump: 102372
LocOp 102372:
  TraceOperation 102372 (Inc (Con 4));
  SetLocal 4 Add(GetLocal(4),1);
  TraceOperation 102374 (Jump 102321);
  Jump: 102321
LocOp 102377:
  TraceOperation 102377 (Print "*\n");
  GamePrint "*\n";
  TraceOperation 102382 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 102384:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 102385
LocOp 102385:
  TraceOperation 102385 (Jz (Var (Local 1)) (Branch T (Dloc 102406)));
  if (IsZero(GetLocal(1))) {
    Jump: 102406
  } else {
    TraceOperation 102388 (Get_prop (Var (Local 1)) (Con 20) (Global 239));
    Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),12)];
    Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),12),1)];
    Let b3 = M[Address(MakeHiLo(b1,b2))];
    Let loop_var4 = DeAddress(Offset(Address(MakeHiLo(b1,b2)),Add(Mul(2,Widen(b3)),1)));
    Label 5: {
      Let b6 = M[Address(loop_var4)];
      if (IsZeroByte(b6)) {
        Let b7 = M[000304];
        Let b8 = M[000305];
        SetByte 007684 b7;
        SetByte 007685 b8;
      } else {
        if (TestBit(b6,7)) {
          Let b9 = M[Offset(Address(loop_var4),1)];
          if (Equal(20,Widen(BwAnd(b6,63)))) {
            if (Equal(Widen(BwAnd(b9,63)),2)) {
              Let b10 = M[Offset(Address(loop_var4),2)];
              Let b11 = M[Offset(Offset(Address(loop_var4),2),1)];
              SetByte 007684 b10;
              SetByte 007685 b11;
            } else {
              Let b12 = M[Offset(Address(loop_var4),2)];
              SetByte 007684 HiByte(Widen(b12));
              SetByte 007685 LoByte(Widen(b12));
            }
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),2),Widen(BwAnd(b9,63))));
            Goto: Label 5
          }
        } else {
          if (TestBit(b6,6)) {
            if (Equal(20,Widen(BwAnd(b6,63)))) {
              Let b13 = M[Offset(Address(loop_var4),1)];
              Let b14 = M[Offset(Offset(Address(loop_var4),1),1)];
              SetByte 007684 b13;
              SetByte 007685 b14;
            } else {
              Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),2));
              Goto: Label 5
            }
          } else {
            if (Equal(20,Widen(BwAnd(b6,63)))) {
              Let b15 = M[Offset(Address(loop_var4),1)];
              SetByte 007684 HiByte(Widen(b15));
              SetByte 007685 LoByte(Widen(b15));
            } else {
              Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),1));
              Goto: Label 5
            }
          }
        }
      }
    }
    TraceOperation 102392 (Push (Var (Global 239)));
    Let b16 = M[007684];
    Let b17 = M[007685];
    PushStack MakeHiLo(b16,b17);
    TraceOperation 102395 (Jz (Var Sp) (Branch T (Dloc 102406)));
    PopStack popped18;
    if (IsZero(popped18)) {
      Jump: 102406
    } else {
      TraceOperation 102398 (Get_prop (Var (Local 1)) (Con 20) (Global 239));
      Let b19 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),12)];
      Let b20 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),12),1)];
      Let b21 = M[Address(MakeHiLo(b19,b20))];
      Let loop_var22 = DeAddress(Offset(Address(MakeHiLo(b19,b20)),Add(Mul(2,Widen(b21)),1)));
      Label 23: {
        Let b24 = M[Address(loop_var22)];
        if (IsZeroByte(b24)) {
          Let b25 = M[000304];
          Let b26 = M[000305];
          SetByte 007684 b25;
          SetByte 007685 b26;
        } else {
          if (TestBit(b24,7)) {
            Let b27 = M[Offset(Address(loop_var22),1)];
            if (Equal(20,Widen(BwAnd(b24,63)))) {
              if (Equal(Widen(BwAnd(b27,63)),2)) {
                Let b28 = M[Offset(Address(loop_var22),2)];
                Let b29 = M[Offset(Offset(Address(loop_var22),2),1)];
                SetByte 007684 b28;
                SetByte 007685 b29;
              } else {
                Let b30 = M[Offset(Address(loop_var22),2)];
                SetByte 007684 HiByte(Widen(b30));
                SetByte 007685 LoByte(Widen(b30));
              }
            } else {
              Assign loop_var22 = DeAddress(Offset(Offset(Address(loop_var22),2),Widen(BwAnd(b27,63))));
              Goto: Label 23
            }
          } else {
            if (TestBit(b24,6)) {
              if (Equal(20,Widen(BwAnd(b24,63)))) {
                Let b31 = M[Offset(Address(loop_var22),1)];
                Let b32 = M[Offset(Offset(Address(loop_var22),1),1)];
                SetByte 007684 b31;
                SetByte 007685 b32;
              } else {
                Assign loop_var22 = DeAddress(Offset(Offset(Address(loop_var22),1),2));
                Goto: Label 23
              }
            } else {
              if (Equal(20,Widen(BwAnd(b24,63)))) {
                Let b33 = M[Offset(Address(loop_var22),1)];
                SetByte 007684 HiByte(Widen(b33));
                SetByte 007685 LoByte(Widen(b33));
              } else {
                Assign loop_var22 = DeAddress(Offset(Offset(Address(loop_var22),1),1));
                Goto: Label 23
              }
            }
          }
        }
      }
      TraceOperation 102402 (Push (Var (Global 239)));
      Let b34 = M[007684];
      Let b35 = M[007685];
      PushStack MakeHiLo(b34,b35);
      TraceOperation 102405 Ret_popped;
      PopStack popped36;
      PopFrame;
      PopReturnAddress return_address_37;
      SetResult popped36;
      JumpIndirect: (return) return_address_37
    }
  }
LocOp 102406:
  TraceOperation 102406 (Jz (Var (Local 1)) (Branch T (Dloc 102419)));
  if (IsZero(GetLocal(1))) {
    Jump: 102419
  } else {
    TraceOperation 102409 (Get_parent (Var (Local 1)) Sp);
    Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),6)];
    Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),6),1)];
    PushStack MakeHiLo(b1,b2);
    TraceOperation 102412 (Jz (Var Sp) (Branch T (Dloc 102419)));
    PopStack popped3;
    if (IsZero(popped3)) {
      Jump: 102419
    } else {
      TraceOperation 102415 (Get_parent (Var (Local 1)) Sp);
      Let b4 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),6)];
      Let b5 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),6),1)];
      PushStack MakeHiLo(b4,b5);
      TraceOperation 102418 Ret_popped;
      PopStack popped6;
      PopFrame;
      PopReturnAddress return_address_7;
      SetResult popped6;
      JumpIndirect: (return) return_address_7
    }
  }
LocOp 102419:
  TraceOperation 102419 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 102420:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 102421
LocOp 102421:
  TraceOperation 102421 (Jz (Var (Local 1)) (Branch T (Dloc 102427)));
  if (IsZero(GetLocal(1))) {
    Jump: 102427
  } else {
    TraceOperation 102424 (Get_parent (Var (Local 1)) (Local 1));
    Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),6)];
    Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),6),1)];
    SetLocal 1 MakeHiLo(b1,b2);
    Jump: 102427
  }
LocOp 102427:
  TraceOperation 102427 (Ret (Var (Local 1)));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult GetLocal(1);
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 102432:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 102433
LocOp 102433:
  TraceOperation 102433 (Jz (Var (Local 1)) (Branch T (Dloc 102466)));
  if (IsZero(GetLocal(1))) {
    Jump: 102466
  } else {
    TraceOperation 102436 (Call (Floc 111316) [Var (Local 1),Con 20] Sp);
    PushFrame;
    PushReturnAddress 102436;
    SetLocal 1 GetLocal(1);
    SetLocal 2 20;
    MakeRoutineFrame 2;
    Jump: 111317
  }
LocReturn 102436:
  PushStack call_result;
  TraceOperation 102443 (Jz (Var Sp) (Branch T (Dloc 102466)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 102466
  } else {
    TraceOperation 102446 (Get_prop (Var (Local 1)) (Con 20) (Global 239));
    Let b2 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),12)];
    Let b3 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),12),1)];
    Let b4 = M[Address(MakeHiLo(b2,b3))];
    Let loop_var5 = DeAddress(Offset(Address(MakeHiLo(b2,b3)),Add(Mul(2,Widen(b4)),1)));
    Label 6: {
      Let b7 = M[Address(loop_var5)];
      if (IsZeroByte(b7)) {
        Let b8 = M[000304];
        Let b9 = M[000305];
        SetByte 007684 b8;
        SetByte 007685 b9;
      } else {
        if (TestBit(b7,7)) {
          Let b10 = M[Offset(Address(loop_var5),1)];
          if (Equal(20,Widen(BwAnd(b7,63)))) {
            if (Equal(Widen(BwAnd(b10,63)),2)) {
              Let b11 = M[Offset(Address(loop_var5),2)];
              Let b12 = M[Offset(Offset(Address(loop_var5),2),1)];
              SetByte 007684 b11;
              SetByte 007685 b12;
            } else {
              Let b13 = M[Offset(Address(loop_var5),2)];
              SetByte 007684 HiByte(Widen(b13));
              SetByte 007685 LoByte(Widen(b13));
            }
          } else {
            Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),2),Widen(BwAnd(b10,63))));
            Goto: Label 6
          }
        } else {
          if (TestBit(b7,6)) {
            if (Equal(20,Widen(BwAnd(b7,63)))) {
              Let b14 = M[Offset(Address(loop_var5),1)];
              Let b15 = M[Offset(Offset(Address(loop_var5),1),1)];
              SetByte 007684 b14;
              SetByte 007685 b15;
            } else {
              Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),1),2));
              Goto: Label 6
            }
          } else {
            if (Equal(20,Widen(BwAnd(b7,63)))) {
              Let b16 = M[Offset(Address(loop_var5),1)];
              SetByte 007684 HiByte(Widen(b16));
              SetByte 007685 LoByte(Widen(b16));
            } else {
              Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),1),1));
              Goto: Label 6
            }
          }
        }
      }
    }
    TraceOperation 102450 (Push (Var (Global 239)));
    Let b17 = M[007684];
    Let b18 = M[007685];
    PushStack MakeHiLo(b17,b18);
    TraceOperation 102453 (Jz (Var Sp) (Branch T (Dloc 102466)));
    PopStack popped19;
    if (IsZero(popped19)) {
      Jump: 102466
    } else {
      TraceOperation 102456 (Get_prop (Var (Local 1)) (Con 20) (Global 239));
      Let b20 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),12)];
      Let b21 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),12),1)];
      Let b22 = M[Address(MakeHiLo(b20,b21))];
      Let loop_var23 = DeAddress(Offset(Address(MakeHiLo(b20,b21)),Add(Mul(2,Widen(b22)),1)));
      Label 24: {
        Let b25 = M[Address(loop_var23)];
        if (IsZeroByte(b25)) {
          Let b26 = M[000304];
          Let b27 = M[000305];
          SetByte 007684 b26;
          SetByte 007685 b27;
        } else {
          if (TestBit(b25,7)) {
            Let b28 = M[Offset(Address(loop_var23),1)];
            if (Equal(20,Widen(BwAnd(b25,63)))) {
              if (Equal(Widen(BwAnd(b28,63)),2)) {
                Let b29 = M[Offset(Address(loop_var23),2)];
                Let b30 = M[Offset(Offset(Address(loop_var23),2),1)];
                SetByte 007684 b29;
                SetByte 007685 b30;
              } else {
                Let b31 = M[Offset(Address(loop_var23),2)];
                SetByte 007684 HiByte(Widen(b31));
                SetByte 007685 LoByte(Widen(b31));
              }
            } else {
              Assign loop_var23 = DeAddress(Offset(Offset(Address(loop_var23),2),Widen(BwAnd(b28,63))));
              Goto: Label 24
            }
          } else {
            if (TestBit(b25,6)) {
              if (Equal(20,Widen(BwAnd(b25,63)))) {
                Let b32 = M[Offset(Address(loop_var23),1)];
                Let b33 = M[Offset(Offset(Address(loop_var23),1),1)];
                SetByte 007684 b32;
                SetByte 007685 b33;
              } else {
                Assign loop_var23 = DeAddress(Offset(Offset(Address(loop_var23),1),2));
                Goto: Label 24
              }
            } else {
              if (Equal(20,Widen(BwAnd(b25,63)))) {
                Let b34 = M[Offset(Address(loop_var23),1)];
                SetByte 007684 HiByte(Widen(b34));
                SetByte 007685 LoByte(Widen(b34));
              } else {
                Assign loop_var23 = DeAddress(Offset(Offset(Address(loop_var23),1),1));
                Goto: Label 24
              }
            }
          }
        }
      }
      TraceOperation 102460 (Store (Con 1) (Var (Global 239)));
      Let b35 = M[007684];
      Let b36 = M[007685];
      SetLocal 1 MakeHiLo(b35,b36);
      TraceOperation 102463 (Jump 102433);
      Jump: 102433
    }
  }
LocOp 102466:
  TraceOperation 102466 (Ret (Var (Local 1)));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult GetLocal(1);
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 102468:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 102469
LocOp 102469:
  TraceOperation 102469 (Jz (Var (Local 1)) (Branch T (Dloc 102502)));
  if (IsZero(GetLocal(1))) {
    Jump: 102502
  } else {
    TraceOperation 102472 (Call (Floc 111316) [Var (Local 1),Con 20] Sp);
    PushFrame;
    PushReturnAddress 102472;
    SetLocal 1 GetLocal(1);
    SetLocal 2 20;
    MakeRoutineFrame 2;
    Jump: 111317
  }
LocReturn 102472:
  PushStack call_result;
  TraceOperation 102479 (Jz (Var Sp) (Branch T (Dloc 102502)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 102502
  } else {
    TraceOperation 102482 (Get_prop (Var (Local 1)) (Con 20) (Global 239));
    Let b2 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),12)];
    Let b3 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),12),1)];
    Let b4 = M[Address(MakeHiLo(b2,b3))];
    Let loop_var5 = DeAddress(Offset(Address(MakeHiLo(b2,b3)),Add(Mul(2,Widen(b4)),1)));
    Label 6: {
      Let b7 = M[Address(loop_var5)];
      if (IsZeroByte(b7)) {
        Let b8 = M[000304];
        Let b9 = M[000305];
        SetByte 007684 b8;
        SetByte 007685 b9;
      } else {
        if (TestBit(b7,7)) {
          Let b10 = M[Offset(Address(loop_var5),1)];
          if (Equal(20,Widen(BwAnd(b7,63)))) {
            if (Equal(Widen(BwAnd(b10,63)),2)) {
              Let b11 = M[Offset(Address(loop_var5),2)];
              Let b12 = M[Offset(Offset(Address(loop_var5),2),1)];
              SetByte 007684 b11;
              SetByte 007685 b12;
            } else {
              Let b13 = M[Offset(Address(loop_var5),2)];
              SetByte 007684 HiByte(Widen(b13));
              SetByte 007685 LoByte(Widen(b13));
            }
          } else {
            Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),2),Widen(BwAnd(b10,63))));
            Goto: Label 6
          }
        } else {
          if (TestBit(b7,6)) {
            if (Equal(20,Widen(BwAnd(b7,63)))) {
              Let b14 = M[Offset(Address(loop_var5),1)];
              Let b15 = M[Offset(Offset(Address(loop_var5),1),1)];
              SetByte 007684 b14;
              SetByte 007685 b15;
            } else {
              Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),1),2));
              Goto: Label 6
            }
          } else {
            if (Equal(20,Widen(BwAnd(b7,63)))) {
              Let b16 = M[Offset(Address(loop_var5),1)];
              SetByte 007684 HiByte(Widen(b16));
              SetByte 007685 LoByte(Widen(b16));
            } else {
              Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),1),1));
              Goto: Label 6
            }
          }
        }
      }
    }
    TraceOperation 102486 (Push (Var (Global 239)));
    Let b17 = M[007684];
    Let b18 = M[007685];
    PushStack MakeHiLo(b17,b18);
    TraceOperation 102489 (Jz (Var Sp) (Branch T (Dloc 102502)));
    PopStack popped19;
    if (IsZero(popped19)) {
      Jump: 102502
    } else {
      TraceOperation 102492 (Get_prop (Var (Local 1)) (Con 20) (Global 239));
      Let b20 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),12)];
      Let b21 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),12),1)];
      Let b22 = M[Address(MakeHiLo(b20,b21))];
      Let loop_var23 = DeAddress(Offset(Address(MakeHiLo(b20,b21)),Add(Mul(2,Widen(b22)),1)));
      Label 24: {
        Let b25 = M[Address(loop_var23)];
        if (IsZeroByte(b25)) {
          Let b26 = M[000304];
          Let b27 = M[000305];
          SetByte 007684 b26;
          SetByte 007685 b27;
        } else {
          if (TestBit(b25,7)) {
            Let b28 = M[Offset(Address(loop_var23),1)];
            if (Equal(20,Widen(BwAnd(b25,63)))) {
              if (Equal(Widen(BwAnd(b28,63)),2)) {
                Let b29 = M[Offset(Address(loop_var23),2)];
                Let b30 = M[Offset(Offset(Address(loop_var23),2),1)];
                SetByte 007684 b29;
                SetByte 007685 b30;
              } else {
                Let b31 = M[Offset(Address(loop_var23),2)];
                SetByte 007684 HiByte(Widen(b31));
                SetByte 007685 LoByte(Widen(b31));
              }
            } else {
              Assign loop_var23 = DeAddress(Offset(Offset(Address(loop_var23),2),Widen(BwAnd(b28,63))));
              Goto: Label 24
            }
          } else {
            if (TestBit(b25,6)) {
              if (Equal(20,Widen(BwAnd(b25,63)))) {
                Let b32 = M[Offset(Address(loop_var23),1)];
                Let b33 = M[Offset(Offset(Address(loop_var23),1),1)];
                SetByte 007684 b32;
                SetByte 007685 b33;
              } else {
                Assign loop_var23 = DeAddress(Offset(Offset(Address(loop_var23),1),2));
                Goto: Label 24
              }
            } else {
              if (Equal(20,Widen(BwAnd(b25,63)))) {
                Let b34 = M[Offset(Address(loop_var23),1)];
                SetByte 007684 HiByte(Widen(b34));
                SetByte 007685 LoByte(Widen(b34));
              } else {
                Assign loop_var23 = DeAddress(Offset(Offset(Address(loop_var23),1),1));
                Goto: Label 24
              }
            }
          }
        }
      }
      TraceOperation 102496 (Store (Con 1) (Var (Global 239)));
      Let b35 = M[007684];
      Let b36 = M[007685];
      SetLocal 1 MakeHiLo(b35,b36);
      TraceOperation 102499 (Jump 102469);
      Jump: 102469
    }
  }
LocOp 102502:
  TraceOperation 102502 (Jz (Var (Local 1)) (Branch T (Dloc 102508)));
  if (IsZero(GetLocal(1))) {
    Jump: 102508
  } else {
    TraceOperation 102505 (Get_parent (Var (Local 1)) (Local 1));
    Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),6)];
    Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),6),1)];
    SetLocal 1 MakeHiLo(b1,b2);
    Jump: 102508
  }
LocOp 102508:
  TraceOperation 102508 (Jz (Var (Local 1)) (Branch T (Dloc 102541)));
  if (IsZero(GetLocal(1))) {
    Jump: 102541
  } else {
    TraceOperation 102511 (Call (Floc 111316) [Var (Local 1),Con 20] Sp);
    PushFrame;
    PushReturnAddress 102511;
    SetLocal 1 GetLocal(1);
    SetLocal 2 20;
    MakeRoutineFrame 2;
    Jump: 111317
  }
LocReturn 102511:
  PushStack call_result;
  TraceOperation 102518 (Jz (Var Sp) (Branch T (Dloc 102541)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 102541
  } else {
    TraceOperation 102521 (Get_prop (Var (Local 1)) (Con 20) (Global 239));
    Let b2 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),12)];
    Let b3 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),12),1)];
    Let b4 = M[Address(MakeHiLo(b2,b3))];
    Let loop_var5 = DeAddress(Offset(Address(MakeHiLo(b2,b3)),Add(Mul(2,Widen(b4)),1)));
    Label 6: {
      Let b7 = M[Address(loop_var5)];
      if (IsZeroByte(b7)) {
        Let b8 = M[000304];
        Let b9 = M[000305];
        SetByte 007684 b8;
        SetByte 007685 b9;
      } else {
        if (TestBit(b7,7)) {
          Let b10 = M[Offset(Address(loop_var5),1)];
          if (Equal(20,Widen(BwAnd(b7,63)))) {
            if (Equal(Widen(BwAnd(b10,63)),2)) {
              Let b11 = M[Offset(Address(loop_var5),2)];
              Let b12 = M[Offset(Offset(Address(loop_var5),2),1)];
              SetByte 007684 b11;
              SetByte 007685 b12;
            } else {
              Let b13 = M[Offset(Address(loop_var5),2)];
              SetByte 007684 HiByte(Widen(b13));
              SetByte 007685 LoByte(Widen(b13));
            }
          } else {
            Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),2),Widen(BwAnd(b10,63))));
            Goto: Label 6
          }
        } else {
          if (TestBit(b7,6)) {
            if (Equal(20,Widen(BwAnd(b7,63)))) {
              Let b14 = M[Offset(Address(loop_var5),1)];
              Let b15 = M[Offset(Offset(Address(loop_var5),1),1)];
              SetByte 007684 b14;
              SetByte 007685 b15;
            } else {
              Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),1),2));
              Goto: Label 6
            }
          } else {
            if (Equal(20,Widen(BwAnd(b7,63)))) {
              Let b16 = M[Offset(Address(loop_var5),1)];
              SetByte 007684 HiByte(Widen(b16));
              SetByte 007685 LoByte(Widen(b16));
            } else {
              Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),1),1));
              Goto: Label 6
            }
          }
        }
      }
    }
    TraceOperation 102525 (Push (Var (Global 239)));
    Let b17 = M[007684];
    Let b18 = M[007685];
    PushStack MakeHiLo(b17,b18);
    TraceOperation 102528 (Jz (Var Sp) (Branch T (Dloc 102541)));
    PopStack popped19;
    if (IsZero(popped19)) {
      Jump: 102541
    } else {
      TraceOperation 102531 (Get_prop (Var (Local 1)) (Con 20) (Global 239));
      Let b20 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),12)];
      Let b21 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),12),1)];
      Let b22 = M[Address(MakeHiLo(b20,b21))];
      Let loop_var23 = DeAddress(Offset(Address(MakeHiLo(b20,b21)),Add(Mul(2,Widen(b22)),1)));
      Label 24: {
        Let b25 = M[Address(loop_var23)];
        if (IsZeroByte(b25)) {
          Let b26 = M[000304];
          Let b27 = M[000305];
          SetByte 007684 b26;
          SetByte 007685 b27;
        } else {
          if (TestBit(b25,7)) {
            Let b28 = M[Offset(Address(loop_var23),1)];
            if (Equal(20,Widen(BwAnd(b25,63)))) {
              if (Equal(Widen(BwAnd(b28,63)),2)) {
                Let b29 = M[Offset(Address(loop_var23),2)];
                Let b30 = M[Offset(Offset(Address(loop_var23),2),1)];
                SetByte 007684 b29;
                SetByte 007685 b30;
              } else {
                Let b31 = M[Offset(Address(loop_var23),2)];
                SetByte 007684 HiByte(Widen(b31));
                SetByte 007685 LoByte(Widen(b31));
              }
            } else {
              Assign loop_var23 = DeAddress(Offset(Offset(Address(loop_var23),2),Widen(BwAnd(b28,63))));
              Goto: Label 24
            }
          } else {
            if (TestBit(b25,6)) {
              if (Equal(20,Widen(BwAnd(b25,63)))) {
                Let b32 = M[Offset(Address(loop_var23),1)];
                Let b33 = M[Offset(Offset(Address(loop_var23),1),1)];
                SetByte 007684 b32;
                SetByte 007685 b33;
              } else {
                Assign loop_var23 = DeAddress(Offset(Offset(Address(loop_var23),1),2));
                Goto: Label 24
              }
            } else {
              if (Equal(20,Widen(BwAnd(b25,63)))) {
                Let b34 = M[Offset(Address(loop_var23),1)];
                SetByte 007684 HiByte(Widen(b34));
                SetByte 007685 LoByte(Widen(b34));
              } else {
                Assign loop_var23 = DeAddress(Offset(Offset(Address(loop_var23),1),1));
                Goto: Label 24
              }
            }
          }
        }
      }
      TraceOperation 102535 (Store (Con 1) (Var (Global 239)));
      Let b35 = M[007684];
      Let b36 = M[007685];
      SetLocal 1 MakeHiLo(b35,b36);
      TraceOperation 102538 (Jump 102508);
      Jump: 102508
    }
  }
LocOp 102541:
  TraceOperation 102541 (Ret (Var (Local 1)));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult GetLocal(1);
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 102544:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 102545
LocOp 102545:
  TraceOperation 102545 (Call (Floc 026172) [Var (Local 1),Con 13] Sp);
  PushFrame;
  PushReturnAddress 102545;
  SetLocal 1 GetLocal(1);
  SetLocal 2 13;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 102545:
  PushStack call_result;
  TraceOperation 102552 (Jz (Var Sp) (Branch F (Dloc 102566)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 102555 (Call (Floc 026172) [Var (Local 1),Con 14] Sp);
    PushFrame;
    PushReturnAddress 102555;
    SetLocal 1 GetLocal(1);
    SetLocal 2 14;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 102566
  }
LocReturn 102555:
  PushStack call_result;
  TraceOperation 102562 (Jz (Var Sp) (Branch F (Dloc 102566)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 102565 Rfalse;
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  } else {
    Jump: 102566
  }
LocOp 102566:
  TraceOperation 102566 (Call (Floc 026172) [Var (Local 1),Con 16] Sp);
  PushFrame;
  PushReturnAddress 102566;
  SetLocal 1 GetLocal(1);
  SetLocal 2 16;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 102566:
  PushStack call_result;
  TraceOperation 102573 (Jz (Var Sp) (Branch T (Dloc 102583)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 102583
  } else {
    TraceOperation 102576 (Call (Floc 104432) [Var (Local 1)] Sp);
    PushFrame;
    PushReturnAddress 102576;
    SetLocal 1 GetLocal(1);
    MakeRoutineFrame 1;
    Jump: 104433
  }
LocReturn 102576:
  PushStack call_result;
  TraceOperation 102582 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 102583:
  TraceOperation 102583 (Call (Floc 026172) [Var (Local 1),Con 19] Sp);
  PushFrame;
  PushReturnAddress 102583;
  SetLocal 1 GetLocal(1);
  SetLocal 2 19;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 102583:
  PushStack call_result;
  TraceOperation 102590 (Jz (Var Sp) (Branch T (Dloc 102594)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 102594
  } else {
    TraceOperation 102593 Rfalse;
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  }
LocOp 102594:
  TraceOperation 102594 (Jz (Var (Local 1)) (Branch T (Dloc 102618)));
  if (IsZero(GetLocal(1))) {
    Jump: 102618
  } else {
    TraceOperation 102597 (Call (Floc 026172) [Var (Local 1),Con 13] Sp);
    PushFrame;
    PushReturnAddress 102597;
    SetLocal 1 GetLocal(1);
    SetLocal 2 13;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  }
LocReturn 102597:
  PushStack call_result;
  TraceOperation 102604 (Jz (Var Sp) (Branch T (Dloc 102609)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 102609
  } else {
    TraceOperation 102607 (Ret (Var (Local 1)));
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult GetLocal(1);
    JumpIndirect: (return) return_address_2
  }
LocOp 102609:
  TraceOperation 102609 (Call (Floc 102468) [Var (Local 1)] (Local 1));
  PushFrame;
  PushReturnAddress 102609;
  SetLocal 1 GetLocal(1);
  MakeRoutineFrame 1;
  Jump: 102469
LocReturn 102609:
  SetLocal 1 call_result;
  TraceOperation 102615 (Jump 102594);
  Jump: 102594
LocOp 102618:
  TraceOperation 102618 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 102620:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 102621
LocOp 102621:
  TraceOperation 102621 (Call (Floc 102432) [Var (Local 1)] (Local 1));
  PushFrame;
  PushReturnAddress 102621;
  SetLocal 1 GetLocal(1);
  MakeRoutineFrame 1;
  Jump: 102433
LocReturn 102621:
  SetLocal 1 call_result;
  TraceOperation 102627 (Call (Floc 102432) [Var (Local 2)] (Local 2));
  PushFrame;
  PushReturnAddress 102627;
  SetLocal 1 GetLocal(2);
  MakeRoutineFrame 1;
  Jump: 102433
LocReturn 102627:
  SetLocal 2 call_result;
  TraceOperation 102633 (Store (Con 3) (Var (Local 1)));
  SetLocal 3 GetLocal(1);
  TraceOperation 102636 (Jump 102645);
  Jump: 102645
--------------------------------------------------
LocRoutine 102644:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 102645
LocOp 102645:
  TraceOperation 102645 (Jz (Var (Local 3)) (Branch T (Dloc 102675)));
  if (IsZero(GetLocal(3))) {
    Jump: 102675
  } else {
    TraceOperation 102648 (Store (Con 4) (Var (Local 2)));
    SetLocal 4 GetLocal(2);
    TraceOperation 102651 (Jump 102660);
    Jump: 102660
  }
--------------------------------------------------
LocRoutine 102658:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 102659
LocOp 102659:
  TraceOperation 102659 (Dec_chk (Con 160) (Con 4) (Branch T (Dloc 102672)));
  Let b1 = M[007494];
  Let b2 = M[007495];
  if (LessThanEqual(MakeHiLo(b1,b2),4)) {
    SetByte 007494 HiByte(Sub(MakeHiLo(b1,b2),1));
    SetByte 007495 LoByte(Sub(MakeHiLo(b1,b2),1));
  } else {
    SetByte 007494 HiByte(Sub(MakeHiLo(b1,b2),1));
    SetByte 007495 LoByte(Sub(MakeHiLo(b1,b2),1));
  }
  TraceOperation 102663 (Je [Var (Local 4),Var (Local 3)] (Branch F (Dloc 102669)));
  if (Equal(GetLocal(4),GetLocal(3))) {
    TraceOperation 102667 (Ret (Var (Local 4)));
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult GetLocal(4);
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 102669
  }
LocOp 102669:
  TraceOperation 102669 (Jump 102654);
  Jump: 102654
LocOp 102672:
  TraceOperation 102672 (Jump 102639);
  Jump: 102639
--------------------------------------------------
LocRoutine 102676:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 102677
LocOp 102677:
  TraceOperation 102677 (Jz (Var (Local 1)) (Branch T Dfalse));
  if (IsZero(GetLocal(1))) {
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 0;
    JumpIndirect: (return) return_address_1
  } else {
    TraceOperation 102680 (Jz (Var (Local 2)) (Branch T Dfalse));
    if (IsZero(GetLocal(2))) {
      PopFrame;
      PopReturnAddress return_address_2;
      SetResult 0;
      JumpIndirect: (return) return_address_2
    } else {
      TraceOperation 102683 (Call (Floc 026172) [Var (Local 1),Con 13] Sp);
      PushFrame;
      PushReturnAddress 102683;
      SetLocal 1 GetLocal(1);
      SetLocal 2 13;
      MakeRoutineFrame 6;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      SetLocal 3 0;
      Jump: 026173
    }
  }
LocReturn 102683:
  PushStack call_result;
  TraceOperation 102690 (Jz (Var Sp) (Branch T (Dloc 102724)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 102724
  } else {
    TraceOperation 102693 (Call (Floc 026172) [Var (Local 2),Con 16] Sp);
    PushFrame;
    PushReturnAddress 102693;
    SetLocal 1 GetLocal(2);
    SetLocal 2 16;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  }
LocReturn 102693:
  PushStack call_result;
  TraceOperation 102700 (Jz (Var Sp) (Branch T (Dloc 102724)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 102724
  } else {
    TraceOperation 102703 (Call (Floc 104432) [Var (Local 2)] Sp);
    PushFrame;
    PushReturnAddress 102703;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 1;
    Jump: 104433
  }
LocReturn 102703:
  PushStack call_result;
  TraceOperation 102709 (Je [Var (Local 1),Var Sp] (Branch T Dtrue));
  PopStack popped1;
  if (Equal(GetLocal(1),popped1)) {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  } else {
    TraceOperation 102713 (Call (Floc 104472) [Var (Local 2)] Sp);
    PushFrame;
    PushReturnAddress 102713;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 1;
    Jump: 104473
  }
LocReturn 102713:
  PushStack call_result;
  TraceOperation 102719 (Je [Var (Local 1),Var Sp] (Branch T Dtrue));
  PopStack popped1;
  if (Equal(GetLocal(1),popped1)) {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  } else {
    TraceOperation 102723 Rfalse;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  }
LocOp 102724:
  TraceOperation 102724 (Call (Floc 026172) [Var (Local 2),Con 19] Sp);
  PushFrame;
  PushReturnAddress 102724;
  SetLocal 1 GetLocal(2);
  SetLocal 2 19;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 102724:
  PushStack call_result;
  TraceOperation 102731 (Jz (Var Sp) (Branch F Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 102734 (Call (Floc 102384) [Var (Local 2)] (Local 2));
    PushFrame;
    PushReturnAddress 102734;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 1;
    Jump: 102385
  } else {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  }
LocReturn 102734:
  SetLocal 2 call_result;
  TraceOperation 102740 (Jump 102749);
  Jump: 102749
--------------------------------------------------
LocRoutine 102748:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 102749
LocOp 102749:
  TraceOperation 102749 (Jz (Var (Local 2)) (Branch T (Dloc 102759)));
  if (IsZero(GetLocal(2))) {
    Jump: 102759
  } else {
    TraceOperation 102752 (Je [Var (Local 2),Var (Local 1)] (Branch T Dtrue));
    if (Equal(GetLocal(2),GetLocal(1))) {
      PopFrame;
      PopReturnAddress return_address_1;
      SetResult 1;
      JumpIndirect: (return) return_address_1
    } else {
      TraceOperation 102756 (Jump 102743);
      Jump: 102743
    }
  }
LocOp 102759:
  TraceOperation 102759 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 102760:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 102761
LocOp 102761:
  TraceOperation 102761 (Test_attr (Var (Local 1)) (Con 7) (Branch F (Dloc 102776)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),0)];
  if (TestBit(b1,0)) {
    TraceOperation 102765 (Call (Floc 102676) [Var (Local 1),Var (Global 31)] Sp);
    Let b2 = M[007268];
    Let b3 = M[007269];
    PushFrame;
    PushReturnAddress 102765;
    SetLocal 1 GetLocal(1);
    SetLocal 2 MakeHiLo(b2,b3);
    MakeRoutineFrame 2;
    Jump: 102677
  } else {
    Jump: 102776
  }
LocReturn 102765:
  PushStack call_result;
  TraceOperation 102772 (Jz (Var Sp) (Branch F Dtrue));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 102775 Rfalse;
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  } else {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  }
LocOp 102776:
  TraceOperation 102776 (Call (Floc 026172) [Var (Local 1),Con 21] Sp);
  PushFrame;
  PushReturnAddress 102776;
  SetLocal 1 GetLocal(1);
  SetLocal 2 21;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 102776:
  PushStack call_result;
  TraceOperation 102783 (Jz (Var Sp) (Branch T (Dloc 102794)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 102794
  } else {
    TraceOperation 102786 (Call (Floc 104384) [Var (Global 32),Var (Local 1)] Sp);
    Let b2 = M[007270];
    Let b3 = M[007271];
    PushFrame;
    PushReturnAddress 102786;
    SetLocal 1 MakeHiLo(b2,b3);
    SetLocal 2 GetLocal(1);
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 104385
  }
LocReturn 102786:
  PushStack call_result;
  TraceOperation 102793 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 102794:
  TraceOperation 102794 (Call (Floc 026172) [Var (Local 1),Con 13] Sp);
  PushFrame;
  PushReturnAddress 102794;
  SetLocal 1 GetLocal(1);
  SetLocal 2 13;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 102794:
  PushStack call_result;
  TraceOperation 102801 (Jz (Var Sp) (Branch T (Dloc 102809)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 102809
  } else {
    TraceOperation 102804 (Je [Var (Local 1),Var (Global 32)] (Branch T Dtrue));
    Let b2 = M[007270];
    Let b3 = M[007271];
    if (Equal(GetLocal(1),MakeHiLo(b2,b3))) {
      PopFrame;
      PopReturnAddress return_address_4;
      SetResult 1;
      JumpIndirect: (return) return_address_4
    } else {
      TraceOperation 102808 Rfalse;
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 0;
      JumpIndirect: (return) return_address_5
    }
  }
LocOp 102809:
  TraceOperation 102809 (CallN (Floc 086692) [Con 28,Var (Local 1)]);
  PushFrame;
  PushReturnAddress 102809;
  SetLocal 1 28;
  SetLocal 2 GetLocal(1);
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 086693
LocReturn 102809:
  TraceOperation 102815 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 102816:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 102817
LocOp 102817:
  TraceOperation 102817 (Call (Floc 026172) [Var (Local 1),Con 13] Sp);
  PushFrame;
  PushReturnAddress 102817;
  SetLocal 1 GetLocal(1);
  SetLocal 2 13;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 102817:
  PushStack call_result;
  TraceOperation 102824 (Jz (Var Sp) (Branch T (Dloc 102835)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 102835
  } else {
    TraceOperation 102827 (Get_prop (Var (Local 1)) (Con 29) (Global 239));
    Let b2 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),12)];
    Let b3 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),12),1)];
    Let b4 = M[Address(MakeHiLo(b2,b3))];
    Let loop_var5 = DeAddress(Offset(Address(MakeHiLo(b2,b3)),Add(Mul(2,Widen(b4)),1)));
    Label 6: {
      Let b7 = M[Address(loop_var5)];
      if (IsZeroByte(b7)) {
        Let b8 = M[000322];
        Let b9 = M[000323];
        SetByte 007684 b8;
        SetByte 007685 b9;
      } else {
        if (TestBit(b7,7)) {
          Let b10 = M[Offset(Address(loop_var5),1)];
          if (Equal(29,Widen(BwAnd(b7,63)))) {
            if (Equal(Widen(BwAnd(b10,63)),2)) {
              Let b11 = M[Offset(Address(loop_var5),2)];
              Let b12 = M[Offset(Offset(Address(loop_var5),2),1)];
              SetByte 007684 b11;
              SetByte 007685 b12;
            } else {
              Let b13 = M[Offset(Address(loop_var5),2)];
              SetByte 007684 HiByte(Widen(b13));
              SetByte 007685 LoByte(Widen(b13));
            }
          } else {
            Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),2),Widen(BwAnd(b10,63))));
            Goto: Label 6
          }
        } else {
          if (TestBit(b7,6)) {
            if (Equal(29,Widen(BwAnd(b7,63)))) {
              Let b14 = M[Offset(Address(loop_var5),1)];
              Let b15 = M[Offset(Offset(Address(loop_var5),1),1)];
              SetByte 007684 b14;
              SetByte 007685 b15;
            } else {
              Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),1),2));
              Goto: Label 6
            }
          } else {
            if (Equal(29,Widen(BwAnd(b7,63)))) {
              Let b16 = M[Offset(Address(loop_var5),1)];
              SetByte 007684 HiByte(Widen(b16));
              SetByte 007685 LoByte(Widen(b16));
            } else {
              Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),1),1));
              Goto: Label 6
            }
          }
        }
      }
    }
    TraceOperation 102831 (Push (Var (Global 239)));
    Let b17 = M[007684];
    Let b18 = M[007685];
    PushStack MakeHiLo(b17,b18);
    TraceOperation 102834 Ret_popped;
    PopStack popped19;
    PopFrame;
    PopReturnAddress return_address_20;
    SetResult popped19;
    JumpIndirect: (return) return_address_20
  }
LocOp 102835:
  TraceOperation 102835 (Get_parent (Var (Local 1)) (Local 2));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),6)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),6),1)];
  SetLocal 2 MakeHiLo(b1,b2);
  TraceOperation 102838 (Jz (Var (Local 2)) (Branch F (Dloc 102842)));
  if (IsZero(GetLocal(2))) {
    TraceOperation 102841 Rfalse;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 102842
  }
LocOp 102842:
  TraceOperation 102842 (Call (Floc 026172) [Var (Local 2),Con 17] Sp);
  PushFrame;
  PushReturnAddress 102842;
  SetLocal 1 GetLocal(2);
  SetLocal 2 17;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 102842:
  PushStack call_result;
  TraceOperation 102849 (Jz (Var Sp) (Branch T (Dloc 102854)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 102854
  } else {
    TraceOperation 102852 (Ret (Var (Local 2)));
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult GetLocal(2);
    JumpIndirect: (return) return_address_2
  }
LocOp 102854:
  TraceOperation 102854 (Call (Floc 026172) [Var (Local 2),Con 13] Sp);
  PushFrame;
  PushReturnAddress 102854;
  SetLocal 1 GetLocal(2);
  SetLocal 2 13;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 102854:
  PushStack call_result;
  TraceOperation 102861 (Jz (Var Sp) (Branch T (Dloc 102866)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 102866
  } else {
    TraceOperation 102864 (Ret (Var (Local 2)));
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult GetLocal(2);
    JumpIndirect: (return) return_address_2
  }
LocOp 102866:
  TraceOperation 102866 (Call (Floc 026172) [Var (Local 2),Con 21] Sp);
  PushFrame;
  PushReturnAddress 102866;
  SetLocal 1 GetLocal(2);
  SetLocal 2 21;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 102866:
  PushStack call_result;
  TraceOperation 102873 (Jz (Var Sp) (Branch T (Dloc 102878)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 102878
  } else {
    TraceOperation 102876 (Ret (Var (Local 2)));
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult GetLocal(2);
    JumpIndirect: (return) return_address_2
  }
LocOp 102878:
  TraceOperation 102878 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 102880:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 102881
LocOp 102881:
  TraceOperation 102881 (Call (Floc 026172) [Var (Local 1),Con 21] Sp);
  PushFrame;
  PushReturnAddress 102881;
  SetLocal 1 GetLocal(1);
  SetLocal 2 21;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 102881:
  PushStack call_result;
  TraceOperation 102888 (Jz (Var Sp) (Branch T (Dloc 102933)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 102933
  } else {
    TraceOperation 102891 (Store (Con 3) (Con 1));
    SetLocal 3 1;
    Jump: 102894
  }
LocOp 102894:
  TraceOperation 102894 (Call (Floc 026172) [Var (Local 3),Con 13] Sp);
  PushFrame;
  PushReturnAddress 102894;
  SetLocal 1 GetLocal(3);
  SetLocal 2 13;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 102894:
  PushStack call_result;
  TraceOperation 102901 (Jz (Var Sp) (Branch T (Dloc 102921)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 102921
  } else {
    TraceOperation 102904 (Get_prop (Var (Local 3)) (Con 29) (Global 239));
    Let b2 = M[Offset(Offset(000378,Mul(GetLocal(3),14)),12)];
    Let b3 = M[Offset(Offset(Offset(000378,Mul(GetLocal(3),14)),12),1)];
    Let b4 = M[Address(MakeHiLo(b2,b3))];
    Let loop_var5 = DeAddress(Offset(Address(MakeHiLo(b2,b3)),Add(Mul(2,Widen(b4)),1)));
    Label 6: {
      Let b7 = M[Address(loop_var5)];
      if (IsZeroByte(b7)) {
        Let b8 = M[000322];
        Let b9 = M[000323];
        SetByte 007684 b8;
        SetByte 007685 b9;
      } else {
        if (TestBit(b7,7)) {
          Let b10 = M[Offset(Address(loop_var5),1)];
          if (Equal(29,Widen(BwAnd(b7,63)))) {
            if (Equal(Widen(BwAnd(b10,63)),2)) {
              Let b11 = M[Offset(Address(loop_var5),2)];
              Let b12 = M[Offset(Offset(Address(loop_var5),2),1)];
              SetByte 007684 b11;
              SetByte 007685 b12;
            } else {
              Let b13 = M[Offset(Address(loop_var5),2)];
              SetByte 007684 HiByte(Widen(b13));
              SetByte 007685 LoByte(Widen(b13));
            }
          } else {
            Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),2),Widen(BwAnd(b10,63))));
            Goto: Label 6
          }
        } else {
          if (TestBit(b7,6)) {
            if (Equal(29,Widen(BwAnd(b7,63)))) {
              Let b14 = M[Offset(Address(loop_var5),1)];
              Let b15 = M[Offset(Offset(Address(loop_var5),1),1)];
              SetByte 007684 b14;
              SetByte 007685 b15;
            } else {
              Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),1),2));
              Goto: Label 6
            }
          } else {
            if (Equal(29,Widen(BwAnd(b7,63)))) {
              Let b16 = M[Offset(Address(loop_var5),1)];
              SetByte 007684 HiByte(Widen(b16));
              SetByte 007685 LoByte(Widen(b16));
            } else {
              Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),1),1));
              Goto: Label 6
            }
          }
        }
      }
    }
    TraceOperation 102908 (Push (Var (Global 239)));
    Let b17 = M[007684];
    Let b18 = M[007685];
    PushStack MakeHiLo(b17,b18);
    TraceOperation 102911 (Je [Var Sp,Var (Local 1)] (Branch F (Dloc 102921)));
    PopStack popped19;
    if (Equal(popped19,GetLocal(1))) {
      TraceOperation 102915 (Jg (Var (Local 3)) (Var (Local 2)) (Branch F (Dloc 102921)));
      if (GreaterThan(GetLocal(3),GetLocal(2))) {
        TraceOperation 102919 (Ret (Var (Local 3)));
        PopFrame;
        PopReturnAddress return_address_20;
        SetResult GetLocal(3);
        JumpIndirect: (return) return_address_20
      } else {
        Jump: 102921
      }
    } else {
      Jump: 102921
    }
  }
LocOp 102921:
  TraceOperation 102921 (Inc (Con 3));
  SetLocal 3 Add(GetLocal(3),1);
  TraceOperation 102923 (Jg (Var (Local 3)) (Con 72) (Branch T (Dloc 102932)));
  if (GreaterThan(GetLocal(3),72)) {
    Jump: 102932
  } else {
    TraceOperation 102929 (Jump 102894);
    Jump: 102894
  }
LocOp 102932:
  TraceOperation 102932 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
LocOp 102933:
  TraceOperation 102933 (Call (Floc 026172) [Var (Local 1),Con 17] Sp);
  PushFrame;
  PushReturnAddress 102933;
  SetLocal 1 GetLocal(1);
  SetLocal 2 17;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 102933:
  PushStack call_result;
  TraceOperation 102940 (Jz (Var Sp) (Branch F (Dloc 102953)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 102943 (Call (Floc 026172) [Var (Local 1),Con 13] Sp);
    PushFrame;
    PushReturnAddress 102943;
    SetLocal 1 GetLocal(1);
    SetLocal 2 13;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 102953
  }
LocReturn 102943:
  PushStack call_result;
  TraceOperation 102950 (Jz (Var Sp) (Branch T (Dloc 102966)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 102966
  } else {
    Jump: 102953
  }
LocOp 102953:
  TraceOperation 102953 (Jz (Var (Local 2)) (Branch F (Dloc 102961)));
  if (IsZero(GetLocal(2))) {
    TraceOperation 102956 (Get_child (Var (Local 1)) Sp (Branch F (Dloc 102960)));
    Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),10)];
    Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),10),1)];
    PushStack MakeHiLo(b1,b2);
    if (IsZero(MakeHiLo(b1,b2))) {
      Jump: 102960
    } else {
      Jump: 102960
    }
  } else {
    Jump: 102961
  }
LocOp 102960:
  TraceOperation 102960 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 102961:
  TraceOperation 102961 (Get_sibling (Var (Local 2)) Sp (Branch F (Dloc 102965)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),8)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(2),14)),8),1)];
  PushStack MakeHiLo(b1,b2);
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 102965
  } else {
    Jump: 102965
  }
LocOp 102965:
  TraceOperation 102965 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 102966:
  TraceOperation 102966 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 102968:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 102969
LocOp 102969:
  TraceOperation 102969 (Get_parent (Var (Local 1)) (Local 2));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),6)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),6),1)];
  SetLocal 2 MakeHiLo(b1,b2);
  TraceOperation 102972 (Jz (Var (Local 2)) (Branch F (Dloc 102976)));
  if (IsZero(GetLocal(2))) {
    TraceOperation 102975 Rfalse;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 102976
  }
LocOp 102976:
  TraceOperation 102976 (Call (Floc 026172) [Var (Local 2),Con 18] Sp);
  PushFrame;
  PushReturnAddress 102976;
  SetLocal 1 GetLocal(2);
  SetLocal 2 18;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 102976:
  PushStack call_result;
  TraceOperation 102983 (Jz (Var Sp) (Branch T (Dloc 102988)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 102988
  } else {
    TraceOperation 102986 (Ret (Var (Local 2)));
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult GetLocal(2);
    JumpIndirect: (return) return_address_2
  }
LocOp 102988:
  TraceOperation 102988 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 102992:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 102993
LocOp 102993:
  TraceOperation 102993 (Get_parent (Var (Local 1)) (Local 2));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),6)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),6),1)];
  SetLocal 2 MakeHiLo(b1,b2);
  TraceOperation 102996 (Jz (Var (Local 2)) (Branch T (Dloc 103015)));
  if (IsZero(GetLocal(2))) {
    Jump: 103015
  } else {
    TraceOperation 102999 (Call (Floc 026172) [Var (Local 2),Con 20] Sp);
    PushFrame;
    PushReturnAddress 102999;
    SetLocal 1 GetLocal(2);
    SetLocal 2 20;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  }
LocReturn 102999:
  PushStack call_result;
  TraceOperation 103006 (Jz (Var Sp) (Branch T (Dloc 103015)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 103015
  } else {
    TraceOperation 103009 (Test_attr (Var (Local 1)) (Con 22) (Branch T (Dloc 103015)));
    Let b2 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),2)];
    if (TestBit(b2,1)) {
      Jump: 103015
    } else {
      TraceOperation 103013 (Ret (Var (Local 2)));
      PopFrame;
      PopReturnAddress return_address_3;
      SetResult GetLocal(2);
      JumpIndirect: (return) return_address_3
    }
  }
LocOp 103015:
  TraceOperation 103015 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 103016:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 103017
LocOp 103017:
  TraceOperation 103017 (Get_parent (Var (Local 1)) (Local 2));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),6)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),6),1)];
  SetLocal 2 MakeHiLo(b1,b2);
  TraceOperation 103020 (Jz (Var (Local 2)) (Branch T (Dloc 103039)));
  if (IsZero(GetLocal(2))) {
    Jump: 103039
  } else {
    TraceOperation 103023 (Call (Floc 026172) [Var (Local 2),Con 20] Sp);
    PushFrame;
    PushReturnAddress 103023;
    SetLocal 1 GetLocal(2);
    SetLocal 2 20;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  }
LocReturn 103023:
  PushStack call_result;
  TraceOperation 103030 (Jz (Var Sp) (Branch T (Dloc 103039)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 103039
  } else {
    TraceOperation 103033 (Test_attr (Var (Local 1)) (Con 22) (Branch F (Dloc 103039)));
    Let b2 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),2)];
    if (TestBit(b2,1)) {
      TraceOperation 103037 (Ret (Var (Local 2)));
      PopFrame;
      PopReturnAddress return_address_3;
      SetResult GetLocal(2);
      JumpIndirect: (return) return_address_3
    } else {
      Jump: 103039
    }
  }
LocOp 103039:
  TraceOperation 103039 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 103040:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 103041
LocOp 103041:
  TraceOperation 103041 (Get_parent (Var (Local 1)) (Local 2));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),6)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),6),1)];
  SetLocal 2 MakeHiLo(b1,b2);
  TraceOperation 103044 (Jz (Var (Local 2)) (Branch T (Dloc 103059)));
  if (IsZero(GetLocal(2))) {
    Jump: 103059
  } else {
    TraceOperation 103047 (Call (Floc 026172) [Var (Local 2),Con 20] Sp);
    PushFrame;
    PushReturnAddress 103047;
    SetLocal 1 GetLocal(2);
    SetLocal 2 20;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  }
LocReturn 103047:
  PushStack call_result;
  TraceOperation 103054 (Jz (Var Sp) (Branch T (Dloc 103059)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 103059
  } else {
    TraceOperation 103057 (Ret (Var (Local 2)));
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult GetLocal(2);
    JumpIndirect: (return) return_address_2
  }
LocOp 103059:
  TraceOperation 103059 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 103060:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 103061
LocOp 103061:
  TraceOperation 103061 (Get_parent (Var (Local 1)) Sp);
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),6)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),6),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 103064 (Jz (Var Sp) (Branch T (Dloc 103069)));
  PopStack popped3;
  if (IsZero(popped3)) {
    Jump: 103069
  } else {
    TraceOperation 103067 (Remove_obj (Var (Local 1)));
    Let b4 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),6)];
    Let b5 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),6),1)];
    if (IsZero(MakeHiLo(b4,b5))) {} else {
      Let b6 = M[Offset(Offset(000378,Mul(MakeHiLo(b4,b5),14)),10)];
      Let b7 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b4,b5),14)),10),1)];
      if (Equal(MakeHiLo(b6,b7),GetLocal(1))) {
        Let b8 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),8)];
        Let b9 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),8),1)];
        SetByte Offset(Offset(000378,Mul(MakeHiLo(b4,b5),14)),10) b8;
        SetByte Offset(Offset(Offset(000378,Mul(MakeHiLo(b4,b5),14)),10),1) b9;
      } else {
        Let loop_var10 = MakeHiLo(b6,b7);
        Label 11: {
          Let b12 = M[Offset(Offset(000378,Mul(loop_var10,14)),8)];
          Let b13 = M[Offset(Offset(Offset(000378,Mul(loop_var10,14)),8),1)];
          if (Equal(MakeHiLo(b12,b13),GetLocal(1))) {
            Let b14 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),8)];
            Let b15 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),8),1)];
            SetByte Offset(Offset(000378,Mul(loop_var10,14)),8) b14;
            SetByte Offset(Offset(Offset(000378,Mul(loop_var10,14)),8),1) b15;
          } else {
            Assign loop_var10 = MakeHiLo(b12,b13);
            Goto: Label 11
          }
        }
      }
    }
    SetByte Offset(Offset(000378,Mul(GetLocal(1),14)),6) 0;
    SetByte Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),6),1) 0;
    Jump: 103069
  }
LocOp 103069:
  TraceOperation 103069 (Clear_attr (Var (Local 1)) (Con 22));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),2)];
  SetByte Offset(Offset(000378,Mul(GetLocal(1),14)),2) ClearBit(b1,1);
  TraceOperation 103072 (Jz (Var (Local 2)) (Branch F (Dloc 103081)));
  if (IsZero(GetLocal(2))) {
    TraceOperation 103075 (CallN (Floc 103120) [Var (Local 1)]);
    PushFrame;
    PushReturnAddress 103075;
    SetLocal 1 GetLocal(1);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 103121
  } else {
    Jump: 103081
  }
LocReturn 103075:
  TraceOperation 103080 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 103081:
  TraceOperation 103081 (Get_prop (Var (Local 1)) (Con 20) (Global 239));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),12)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),12),1)];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let loop_var4 = DeAddress(Offset(Address(MakeHiLo(b1,b2)),Add(Mul(2,Widen(b3)),1)));
  Label 5: {
    Let b6 = M[Address(loop_var4)];
    if (IsZeroByte(b6)) {
      Let b7 = M[000304];
      Let b8 = M[000305];
      SetByte 007684 b7;
      SetByte 007685 b8;
    } else {
      if (TestBit(b6,7)) {
        Let b9 = M[Offset(Address(loop_var4),1)];
        if (Equal(20,Widen(BwAnd(b6,63)))) {
          if (Equal(Widen(BwAnd(b9,63)),2)) {
            Let b10 = M[Offset(Address(loop_var4),2)];
            Let b11 = M[Offset(Offset(Address(loop_var4),2),1)];
            SetByte 007684 b10;
            SetByte 007685 b11;
          } else {
            Let b12 = M[Offset(Address(loop_var4),2)];
            SetByte 007684 HiByte(Widen(b12));
            SetByte 007685 LoByte(Widen(b12));
          }
        } else {
          Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),2),Widen(BwAnd(b9,63))));
          Goto: Label 5
        }
      } else {
        if (TestBit(b6,6)) {
          if (Equal(20,Widen(BwAnd(b6,63)))) {
            Let b13 = M[Offset(Address(loop_var4),1)];
            Let b14 = M[Offset(Offset(Address(loop_var4),1),1)];
            SetByte 007684 b13;
            SetByte 007685 b14;
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),2));
            Goto: Label 5
          }
        } else {
          if (Equal(20,Widen(BwAnd(b6,63)))) {
            Let b15 = M[Offset(Address(loop_var4),1)];
            SetByte 007684 HiByte(Widen(b15));
            SetByte 007685 LoByte(Widen(b15));
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),1));
            Goto: Label 5
          }
        }
      }
    }
  }
  TraceOperation 103085 (Push (Var (Global 239)));
  Let b16 = M[007684];
  Let b17 = M[007685];
  PushStack MakeHiLo(b16,b17);
  TraceOperation 103088 (Jz (Var Sp) (Branch T (Dloc 103096)));
  PopStack popped18;
  if (IsZero(popped18)) {
    Jump: 103096
  } else {
    TraceOperation 103091 (CallN (Floc 103120) [Var (Local 1)]);
    PushFrame;
    PushReturnAddress 103091;
    SetLocal 1 GetLocal(1);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 103121
  }
LocReturn 103091:
  Jump: 103096
LocOp 103096:
  TraceOperation 103096 (Put_prop (Var (Local 1)) (Con 20) (Var (Local 2)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),12)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),12),1)];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let loop_var4 = DeAddress(Offset(Address(MakeHiLo(b1,b2)),Add(Mul(2,Widen(b3)),1)));
  Label 5: {
    Let b6 = M[Address(loop_var4)];
    if (IsZeroByte(b6)) {
      Error: ("putProp",20)
    } else {
      if (TestBit(b6,7)) {
        Let b7 = M[Offset(Address(loop_var4),1)];
        if (Equal(20,Widen(BwAnd(b6,63)))) {
          if (Equal(Widen(BwAnd(b7,63)),2)) {
            SetByte Offset(Address(loop_var4),2) HiByte(GetLocal(2));
            SetByte Offset(Offset(Address(loop_var4),2),1) LoByte(GetLocal(2));
          } else {
            SetByte Offset(Address(loop_var4),2) LoByte(GetLocal(2));
          }
        } else {
          Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),2),Widen(BwAnd(b7,63))));
          Goto: Label 5
        }
      } else {
        if (TestBit(b6,6)) {
          if (Equal(20,Widen(BwAnd(b6,63)))) {
            SetByte Offset(Address(loop_var4),1) HiByte(GetLocal(2));
            SetByte Offset(Offset(Address(loop_var4),1),1) LoByte(GetLocal(2));
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),2));
            Goto: Label 5
          }
        } else {
          if (Equal(20,Widen(BwAnd(b6,63)))) {
            SetByte Offset(Address(loop_var4),1) LoByte(GetLocal(2));
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),1));
            Goto: Label 5
          }
        }
      }
    }
  }
  TraceOperation 103101 (Get_prop (Var (Local 2)) (Con 19) (Global 239));
  Let b8 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),12)];
  Let b9 = M[Offset(Offset(Offset(000378,Mul(GetLocal(2),14)),12),1)];
  Let b10 = M[Address(MakeHiLo(b8,b9))];
  Let loop_var11 = DeAddress(Offset(Address(MakeHiLo(b8,b9)),Add(Mul(2,Widen(b10)),1)));
  Label 12: {
    Let b13 = M[Address(loop_var11)];
    if (IsZeroByte(b13)) {
      Let b14 = M[000302];
      Let b15 = M[000303];
      SetByte 007684 b14;
      SetByte 007685 b15;
    } else {
      if (TestBit(b13,7)) {
        Let b16 = M[Offset(Address(loop_var11),1)];
        if (Equal(19,Widen(BwAnd(b13,63)))) {
          if (Equal(Widen(BwAnd(b16,63)),2)) {
            Let b17 = M[Offset(Address(loop_var11),2)];
            Let b18 = M[Offset(Offset(Address(loop_var11),2),1)];
            SetByte 007684 b17;
            SetByte 007685 b18;
          } else {
            Let b19 = M[Offset(Address(loop_var11),2)];
            SetByte 007684 HiByte(Widen(b19));
            SetByte 007685 LoByte(Widen(b19));
          }
        } else {
          Assign loop_var11 = DeAddress(Offset(Offset(Address(loop_var11),2),Widen(BwAnd(b16,63))));
          Goto: Label 12
        }
      } else {
        if (TestBit(b13,6)) {
          if (Equal(19,Widen(BwAnd(b13,63)))) {
            Let b20 = M[Offset(Address(loop_var11),1)];
            Let b21 = M[Offset(Offset(Address(loop_var11),1),1)];
            SetByte 007684 b20;
            SetByte 007685 b21;
          } else {
            Assign loop_var11 = DeAddress(Offset(Offset(Address(loop_var11),1),2));
            Goto: Label 12
          }
        } else {
          if (Equal(19,Widen(BwAnd(b13,63)))) {
            Let b22 = M[Offset(Address(loop_var11),1)];
            SetByte 007684 HiByte(Widen(b22));
            SetByte 007685 LoByte(Widen(b22));
          } else {
            Assign loop_var11 = DeAddress(Offset(Offset(Address(loop_var11),1),1));
            Goto: Label 12
          }
        }
      }
    }
  }
  TraceOperation 103105 (Store (Con 3) (Var (Global 239)));
  Let b23 = M[007684];
  Let b24 = M[007685];
  SetLocal 3 MakeHiLo(b23,b24);
  TraceOperation 103108 (Put_prop (Var (Local 2)) (Con 19) (Var (Local 1)));
  Let b25 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),12)];
  Let b26 = M[Offset(Offset(Offset(000378,Mul(GetLocal(2),14)),12),1)];
  Let b27 = M[Address(MakeHiLo(b25,b26))];
  Let loop_var28 = DeAddress(Offset(Address(MakeHiLo(b25,b26)),Add(Mul(2,Widen(b27)),1)));
  Label 29: {
    Let b30 = M[Address(loop_var28)];
    if (IsZeroByte(b30)) {
      Error: ("putProp",19)
    } else {
      if (TestBit(b30,7)) {
        Let b31 = M[Offset(Address(loop_var28),1)];
        if (Equal(19,Widen(BwAnd(b30,63)))) {
          if (Equal(Widen(BwAnd(b31,63)),2)) {
            SetByte Offset(Address(loop_var28),2) HiByte(GetLocal(1));
            SetByte Offset(Offset(Address(loop_var28),2),1) LoByte(GetLocal(1));
          } else {
            SetByte Offset(Address(loop_var28),2) LoByte(GetLocal(1));
          }
        } else {
          Assign loop_var28 = DeAddress(Offset(Offset(Address(loop_var28),2),Widen(BwAnd(b31,63))));
          Goto: Label 29
        }
      } else {
        if (TestBit(b30,6)) {
          if (Equal(19,Widen(BwAnd(b30,63)))) {
            SetByte Offset(Address(loop_var28),1) HiByte(GetLocal(1));
            SetByte Offset(Offset(Address(loop_var28),1),1) LoByte(GetLocal(1));
          } else {
            Assign loop_var28 = DeAddress(Offset(Offset(Address(loop_var28),1),2));
            Goto: Label 29
          }
        } else {
          if (Equal(19,Widen(BwAnd(b30,63)))) {
            SetByte Offset(Address(loop_var28),1) LoByte(GetLocal(1));
          } else {
            Assign loop_var28 = DeAddress(Offset(Offset(Address(loop_var28),1),1));
            Goto: Label 29
          }
        }
      }
    }
  }
  TraceOperation 103113 (Put_prop (Var (Local 1)) (Con 21) (Var (Local 3)));
  Let b32 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),12)];
  Let b33 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),12),1)];
  Let b34 = M[Address(MakeHiLo(b32,b33))];
  Let loop_var35 = DeAddress(Offset(Address(MakeHiLo(b32,b33)),Add(Mul(2,Widen(b34)),1)));
  Label 36: {
    Let b37 = M[Address(loop_var35)];
    if (IsZeroByte(b37)) {
      Error: ("putProp",21)
    } else {
      if (TestBit(b37,7)) {
        Let b38 = M[Offset(Address(loop_var35),1)];
        if (Equal(21,Widen(BwAnd(b37,63)))) {
          if (Equal(Widen(BwAnd(b38,63)),2)) {
            SetByte Offset(Address(loop_var35),2) HiByte(GetLocal(3));
            SetByte Offset(Offset(Address(loop_var35),2),1) LoByte(GetLocal(3));
          } else {
            SetByte Offset(Address(loop_var35),2) LoByte(GetLocal(3));
          }
        } else {
          Assign loop_var35 = DeAddress(Offset(Offset(Address(loop_var35),2),Widen(BwAnd(b38,63))));
          Goto: Label 36
        }
      } else {
        if (TestBit(b37,6)) {
          if (Equal(21,Widen(BwAnd(b37,63)))) {
            SetByte Offset(Address(loop_var35),1) HiByte(GetLocal(3));
            SetByte Offset(Offset(Address(loop_var35),1),1) LoByte(GetLocal(3));
          } else {
            Assign loop_var35 = DeAddress(Offset(Offset(Address(loop_var35),1),2));
            Goto: Label 36
          }
        } else {
          if (Equal(21,Widen(BwAnd(b37,63)))) {
            SetByte Offset(Address(loop_var35),1) LoByte(GetLocal(3));
          } else {
            Assign loop_var35 = DeAddress(Offset(Offset(Address(loop_var35),1),1));
            Goto: Label 36
          }
        }
      }
    }
  }
  TraceOperation 103118 Rtrue;
  PopFrame;
  PopReturnAddress return_address_39;
  SetResult 1;
  JumpIndirect: (return) return_address_39
--------------------------------------------------
LocRoutine 103120:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 103121
LocOp 103121:
  TraceOperation 103121 (Get_prop (Var (Local 1)) (Con 20) (Global 239));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),12)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),12),1)];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let loop_var4 = DeAddress(Offset(Address(MakeHiLo(b1,b2)),Add(Mul(2,Widen(b3)),1)));
  Label 5: {
    Let b6 = M[Address(loop_var4)];
    if (IsZeroByte(b6)) {
      Let b7 = M[000304];
      Let b8 = M[000305];
      SetByte 007684 b7;
      SetByte 007685 b8;
    } else {
      if (TestBit(b6,7)) {
        Let b9 = M[Offset(Address(loop_var4),1)];
        if (Equal(20,Widen(BwAnd(b6,63)))) {
          if (Equal(Widen(BwAnd(b9,63)),2)) {
            Let b10 = M[Offset(Address(loop_var4),2)];
            Let b11 = M[Offset(Offset(Address(loop_var4),2),1)];
            SetByte 007684 b10;
            SetByte 007685 b11;
          } else {
            Let b12 = M[Offset(Address(loop_var4),2)];
            SetByte 007684 HiByte(Widen(b12));
            SetByte 007685 LoByte(Widen(b12));
          }
        } else {
          Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),2),Widen(BwAnd(b9,63))));
          Goto: Label 5
        }
      } else {
        if (TestBit(b6,6)) {
          if (Equal(20,Widen(BwAnd(b6,63)))) {
            Let b13 = M[Offset(Address(loop_var4),1)];
            Let b14 = M[Offset(Offset(Address(loop_var4),1),1)];
            SetByte 007684 b13;
            SetByte 007685 b14;
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),2));
            Goto: Label 5
          }
        } else {
          if (Equal(20,Widen(BwAnd(b6,63)))) {
            Let b15 = M[Offset(Address(loop_var4),1)];
            SetByte 007684 HiByte(Widen(b15));
            SetByte 007685 LoByte(Widen(b15));
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),1));
            Goto: Label 5
          }
        }
      }
    }
  }
  TraceOperation 103125 (Store (Con 3) (Var (Global 239)));
  Let b16 = M[007684];
  Let b17 = M[007685];
  SetLocal 3 MakeHiLo(b16,b17);
  TraceOperation 103128 (Put_prop (Var (Local 1)) (Con 20) (Con 0));
  Let b18 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),12)];
  Let b19 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),12),1)];
  Let b20 = M[Address(MakeHiLo(b18,b19))];
  Let loop_var21 = DeAddress(Offset(Address(MakeHiLo(b18,b19)),Add(Mul(2,Widen(b20)),1)));
  Label 22: {
    Let b23 = M[Address(loop_var21)];
    if (IsZeroByte(b23)) {
      Error: ("putProp",20)
    } else {
      if (TestBit(b23,7)) {
        Let b24 = M[Offset(Address(loop_var21),1)];
        if (Equal(20,Widen(BwAnd(b23,63)))) {
          if (Equal(Widen(BwAnd(b24,63)),2)) {
            SetByte Offset(Address(loop_var21),2) 0;
            SetByte Offset(Offset(Address(loop_var21),2),1) 0;
          } else {
            SetByte Offset(Address(loop_var21),2) 0;
          }
        } else {
          Assign loop_var21 = DeAddress(Offset(Offset(Address(loop_var21),2),Widen(BwAnd(b24,63))));
          Goto: Label 22
        }
      } else {
        if (TestBit(b23,6)) {
          if (Equal(20,Widen(BwAnd(b23,63)))) {
            SetByte Offset(Address(loop_var21),1) 0;
            SetByte Offset(Offset(Address(loop_var21),1),1) 0;
          } else {
            Assign loop_var21 = DeAddress(Offset(Offset(Address(loop_var21),1),2));
            Goto: Label 22
          }
        } else {
          if (Equal(20,Widen(BwAnd(b23,63)))) {
            SetByte Offset(Address(loop_var21),1) 0;
          } else {
            Assign loop_var21 = DeAddress(Offset(Offset(Address(loop_var21),1),1));
            Goto: Label 22
          }
        }
      }
    }
  }
  TraceOperation 103133 (Jz (Var (Local 3)) (Branch F (Dloc 103142)));
  if (IsZero(GetLocal(3))) {
    TraceOperation 103136 (Put_prop (Var (Local 1)) (Con 21) (Con 0));
    Let b25 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),12)];
    Let b26 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),12),1)];
    Let b27 = M[Address(MakeHiLo(b25,b26))];
    Let loop_var28 = DeAddress(Offset(Address(MakeHiLo(b25,b26)),Add(Mul(2,Widen(b27)),1)));
    Label 29: {
      Let b30 = M[Address(loop_var28)];
      if (IsZeroByte(b30)) {
        Error: ("putProp",21)
      } else {
        if (TestBit(b30,7)) {
          Let b31 = M[Offset(Address(loop_var28),1)];
          if (Equal(21,Widen(BwAnd(b30,63)))) {
            if (Equal(Widen(BwAnd(b31,63)),2)) {
              SetByte Offset(Address(loop_var28),2) 0;
              SetByte Offset(Offset(Address(loop_var28),2),1) 0;
            } else {
              SetByte Offset(Address(loop_var28),2) 0;
            }
          } else {
            Assign loop_var28 = DeAddress(Offset(Offset(Address(loop_var28),2),Widen(BwAnd(b31,63))));
            Goto: Label 29
          }
        } else {
          if (TestBit(b30,6)) {
            if (Equal(21,Widen(BwAnd(b30,63)))) {
              SetByte Offset(Address(loop_var28),1) 0;
              SetByte Offset(Offset(Address(loop_var28),1),1) 0;
            } else {
              Assign loop_var28 = DeAddress(Offset(Offset(Address(loop_var28),1),2));
              Goto: Label 29
            }
          } else {
            if (Equal(21,Widen(BwAnd(b30,63)))) {
              SetByte Offset(Address(loop_var28),1) 0;
            } else {
              Assign loop_var28 = DeAddress(Offset(Offset(Address(loop_var28),1),1));
              Goto: Label 29
            }
          }
        }
      }
    }
    TraceOperation 103141 Rtrue;
    PopFrame;
    PopReturnAddress return_address_32;
    SetResult 1;
    JumpIndirect: (return) return_address_32
  } else {
    Jump: 103142
  }
LocOp 103142:
  TraceOperation 103142 (Get_prop (Var (Local 3)) (Con 19) (Global 239));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(3),14)),12)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(3),14)),12),1)];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let loop_var4 = DeAddress(Offset(Address(MakeHiLo(b1,b2)),Add(Mul(2,Widen(b3)),1)));
  Label 5: {
    Let b6 = M[Address(loop_var4)];
    if (IsZeroByte(b6)) {
      Let b7 = M[000302];
      Let b8 = M[000303];
      SetByte 007684 b7;
      SetByte 007685 b8;
    } else {
      if (TestBit(b6,7)) {
        Let b9 = M[Offset(Address(loop_var4),1)];
        if (Equal(19,Widen(BwAnd(b6,63)))) {
          if (Equal(Widen(BwAnd(b9,63)),2)) {
            Let b10 = M[Offset(Address(loop_var4),2)];
            Let b11 = M[Offset(Offset(Address(loop_var4),2),1)];
            SetByte 007684 b10;
            SetByte 007685 b11;
          } else {
            Let b12 = M[Offset(Address(loop_var4),2)];
            SetByte 007684 HiByte(Widen(b12));
            SetByte 007685 LoByte(Widen(b12));
          }
        } else {
          Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),2),Widen(BwAnd(b9,63))));
          Goto: Label 5
        }
      } else {
        if (TestBit(b6,6)) {
          if (Equal(19,Widen(BwAnd(b6,63)))) {
            Let b13 = M[Offset(Address(loop_var4),1)];
            Let b14 = M[Offset(Offset(Address(loop_var4),1),1)];
            SetByte 007684 b13;
            SetByte 007685 b14;
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),2));
            Goto: Label 5
          }
        } else {
          if (Equal(19,Widen(BwAnd(b6,63)))) {
            Let b15 = M[Offset(Address(loop_var4),1)];
            SetByte 007684 HiByte(Widen(b15));
            SetByte 007685 LoByte(Widen(b15));
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),1));
            Goto: Label 5
          }
        }
      }
    }
  }
  TraceOperation 103146 (Push (Var (Global 239)));
  Let b16 = M[007684];
  Let b17 = M[007685];
  PushStack MakeHiLo(b16,b17);
  TraceOperation 103149 (Je [Var Sp,Var (Local 1)] (Branch F (Dloc 103171)));
  PopStack popped18;
  if (Equal(popped18,GetLocal(1))) {
    TraceOperation 103153 (Get_prop (Var (Local 1)) (Con 21) (Global 239));
    Let b19 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),12)];
    Let b20 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),12),1)];
    Let b21 = M[Address(MakeHiLo(b19,b20))];
    Let loop_var22 = DeAddress(Offset(Address(MakeHiLo(b19,b20)),Add(Mul(2,Widen(b21)),1)));
    Label 23: {
      Let b24 = M[Address(loop_var22)];
      if (IsZeroByte(b24)) {
        Let b25 = M[000306];
        Let b26 = M[000307];
        SetByte 007684 b25;
        SetByte 007685 b26;
      } else {
        if (TestBit(b24,7)) {
          Let b27 = M[Offset(Address(loop_var22),1)];
          if (Equal(21,Widen(BwAnd(b24,63)))) {
            if (Equal(Widen(BwAnd(b27,63)),2)) {
              Let b28 = M[Offset(Address(loop_var22),2)];
              Let b29 = M[Offset(Offset(Address(loop_var22),2),1)];
              SetByte 007684 b28;
              SetByte 007685 b29;
            } else {
              Let b30 = M[Offset(Address(loop_var22),2)];
              SetByte 007684 HiByte(Widen(b30));
              SetByte 007685 LoByte(Widen(b30));
            }
          } else {
            Assign loop_var22 = DeAddress(Offset(Offset(Address(loop_var22),2),Widen(BwAnd(b27,63))));
            Goto: Label 23
          }
        } else {
          if (TestBit(b24,6)) {
            if (Equal(21,Widen(BwAnd(b24,63)))) {
              Let b31 = M[Offset(Address(loop_var22),1)];
              Let b32 = M[Offset(Offset(Address(loop_var22),1),1)];
              SetByte 007684 b31;
              SetByte 007685 b32;
            } else {
              Assign loop_var22 = DeAddress(Offset(Offset(Address(loop_var22),1),2));
              Goto: Label 23
            }
          } else {
            if (Equal(21,Widen(BwAnd(b24,63)))) {
              Let b33 = M[Offset(Address(loop_var22),1)];
              SetByte 007684 HiByte(Widen(b33));
              SetByte 007685 LoByte(Widen(b33));
            } else {
              Assign loop_var22 = DeAddress(Offset(Offset(Address(loop_var22),1),1));
              Goto: Label 23
            }
          }
        }
      }
    }
    TraceOperation 103157 (Push (Var (Global 239)));
    Let b34 = M[007684];
    Let b35 = M[007685];
    PushStack MakeHiLo(b34,b35);
    TraceOperation 103160 (Put_prop (Var (Local 3)) (Con 19) (Var Sp));
    PopStack popped36;
    Let b37 = M[Offset(Offset(000378,Mul(GetLocal(3),14)),12)];
    Let b38 = M[Offset(Offset(Offset(000378,Mul(GetLocal(3),14)),12),1)];
    Let b39 = M[Address(MakeHiLo(b37,b38))];
    Let loop_var40 = DeAddress(Offset(Address(MakeHiLo(b37,b38)),Add(Mul(2,Widen(b39)),1)));
    Label 41: {
      Let b42 = M[Address(loop_var40)];
      if (IsZeroByte(b42)) {
        Error: ("putProp",19)
      } else {
        if (TestBit(b42,7)) {
          Let b43 = M[Offset(Address(loop_var40),1)];
          if (Equal(19,Widen(BwAnd(b42,63)))) {
            if (Equal(Widen(BwAnd(b43,63)),2)) {
              SetByte Offset(Address(loop_var40),2) HiByte(popped36);
              SetByte Offset(Offset(Address(loop_var40),2),1) LoByte(popped36);
            } else {
              SetByte Offset(Address(loop_var40),2) LoByte(popped36);
            }
          } else {
            Assign loop_var40 = DeAddress(Offset(Offset(Address(loop_var40),2),Widen(BwAnd(b43,63))));
            Goto: Label 41
          }
        } else {
          if (TestBit(b42,6)) {
            if (Equal(19,Widen(BwAnd(b42,63)))) {
              SetByte Offset(Address(loop_var40),1) HiByte(popped36);
              SetByte Offset(Offset(Address(loop_var40),1),1) LoByte(popped36);
            } else {
              Assign loop_var40 = DeAddress(Offset(Offset(Address(loop_var40),1),2));
              Goto: Label 41
            }
          } else {
            if (Equal(19,Widen(BwAnd(b42,63)))) {
              SetByte Offset(Address(loop_var40),1) LoByte(popped36);
            } else {
              Assign loop_var40 = DeAddress(Offset(Offset(Address(loop_var40),1),1));
              Goto: Label 41
            }
          }
        }
      }
    }
    TraceOperation 103165 (Put_prop (Var (Local 1)) (Con 21) (Con 0));
    Let b44 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),12)];
    Let b45 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),12),1)];
    Let b46 = M[Address(MakeHiLo(b44,b45))];
    Let loop_var47 = DeAddress(Offset(Address(MakeHiLo(b44,b45)),Add(Mul(2,Widen(b46)),1)));
    Label 48: {
      Let b49 = M[Address(loop_var47)];
      if (IsZeroByte(b49)) {
        Error: ("putProp",21)
      } else {
        if (TestBit(b49,7)) {
          Let b50 = M[Offset(Address(loop_var47),1)];
          if (Equal(21,Widen(BwAnd(b49,63)))) {
            if (Equal(Widen(BwAnd(b50,63)),2)) {
              SetByte Offset(Address(loop_var47),2) 0;
              SetByte Offset(Offset(Address(loop_var47),2),1) 0;
            } else {
              SetByte Offset(Address(loop_var47),2) 0;
            }
          } else {
            Assign loop_var47 = DeAddress(Offset(Offset(Address(loop_var47),2),Widen(BwAnd(b50,63))));
            Goto: Label 48
          }
        } else {
          if (TestBit(b49,6)) {
            if (Equal(21,Widen(BwAnd(b49,63)))) {
              SetByte Offset(Address(loop_var47),1) 0;
              SetByte Offset(Offset(Address(loop_var47),1),1) 0;
            } else {
              Assign loop_var47 = DeAddress(Offset(Offset(Address(loop_var47),1),2));
              Goto: Label 48
            }
          } else {
            if (Equal(21,Widen(BwAnd(b49,63)))) {
              SetByte Offset(Address(loop_var47),1) 0;
            } else {
              Assign loop_var47 = DeAddress(Offset(Offset(Address(loop_var47),1),1));
              Goto: Label 48
            }
          }
        }
      }
    }
    TraceOperation 103170 Rtrue;
    PopFrame;
    PopReturnAddress return_address_51;
    SetResult 1;
    JumpIndirect: (return) return_address_51
  } else {
    Jump: 103171
  }
LocOp 103171:
  TraceOperation 103171 (Get_prop (Var (Local 3)) (Con 19) (Global 239));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(3),14)),12)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(3),14)),12),1)];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let loop_var4 = DeAddress(Offset(Address(MakeHiLo(b1,b2)),Add(Mul(2,Widen(b3)),1)));
  Label 5: {
    Let b6 = M[Address(loop_var4)];
    if (IsZeroByte(b6)) {
      Let b7 = M[000302];
      Let b8 = M[000303];
      SetByte 007684 b7;
      SetByte 007685 b8;
    } else {
      if (TestBit(b6,7)) {
        Let b9 = M[Offset(Address(loop_var4),1)];
        if (Equal(19,Widen(BwAnd(b6,63)))) {
          if (Equal(Widen(BwAnd(b9,63)),2)) {
            Let b10 = M[Offset(Address(loop_var4),2)];
            Let b11 = M[Offset(Offset(Address(loop_var4),2),1)];
            SetByte 007684 b10;
            SetByte 007685 b11;
          } else {
            Let b12 = M[Offset(Address(loop_var4),2)];
            SetByte 007684 HiByte(Widen(b12));
            SetByte 007685 LoByte(Widen(b12));
          }
        } else {
          Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),2),Widen(BwAnd(b9,63))));
          Goto: Label 5
        }
      } else {
        if (TestBit(b6,6)) {
          if (Equal(19,Widen(BwAnd(b6,63)))) {
            Let b13 = M[Offset(Address(loop_var4),1)];
            Let b14 = M[Offset(Offset(Address(loop_var4),1),1)];
            SetByte 007684 b13;
            SetByte 007685 b14;
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),2));
            Goto: Label 5
          }
        } else {
          if (Equal(19,Widen(BwAnd(b6,63)))) {
            Let b15 = M[Offset(Address(loop_var4),1)];
            SetByte 007684 HiByte(Widen(b15));
            SetByte 007685 LoByte(Widen(b15));
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),1));
            Goto: Label 5
          }
        }
      }
    }
  }
  TraceOperation 103175 (Store (Con 4) (Var (Global 239)));
  Let b16 = M[007684];
  Let b17 = M[007685];
  SetLocal 4 MakeHiLo(b16,b17);
  TraceOperation 103178 (Jump 103188);
  Jump: 103188
--------------------------------------------------
LocRoutine 103218:
  MakeRoutineFrame 0;
  Jump: 103219
LocOp 103219:
  TraceOperation 103219 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 103224:
  MakeRoutineFrame 5;
  if (LessThanByte(num_actuals,5)) {
    SetLocal 5 0;
    if (LessThanByte(num_actuals,4)) {
      SetLocal 4 0;
      if (LessThanByte(num_actuals,3)) {
        SetLocal 3 0;
        if (LessThanByte(num_actuals,2)) {
          SetLocal 2 0;
          if (LessThanByte(num_actuals,1)) {
            SetLocal 1 0;
          }
        }
      }
    }
  }
  Jump: 103225
LocOp 103225:
  TraceOperation 103225 (Jz (Var (Local 1)) (Branch F (Dloc 103235)));
  if (IsZero(GetLocal(1))) {
    TraceOperation 103228 (Call (Floc 086692) [Con 15] Sp);
    PushFrame;
    PushReturnAddress 103228;
    SetLocal 1 15;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 086693
  } else {
    Jump: 103235
  }
LocReturn 103228:
  PushStack call_result;
  TraceOperation 103234 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 103235:
  TraceOperation 103235 (Call (Floc 026172) [Var (Local 1),Con 19] Sp);
  PushFrame;
  PushReturnAddress 103235;
  SetLocal 1 GetLocal(1);
  SetLocal 2 19;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 103235:
  PushStack call_result;
  TraceOperation 103242 (Jz (Var Sp) (Branch T (Dloc 103311)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 103311
  } else {
    TraceOperation 103246 (Call (Floc 026172) [Var (Local 2),Con 21] Sp);
    PushFrame;
    PushReturnAddress 103246;
    SetLocal 1 GetLocal(2);
    SetLocal 2 21;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  }
LocReturn 103246:
  PushStack call_result;
  TraceOperation 103253 (Jz (Var Sp) (Branch T (Dloc 103302)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 103302
  } else {
    TraceOperation 103256 (Clear_attr (Var (Local 1)) (Con 0));
    Let b2 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),0)];
    SetByte Offset(Offset(000378,Mul(GetLocal(1),14)),0) ClearBit(b2,7);
    TraceOperation 103259 (Get_prop (Var (Local 2)) (Con 32) (Global 239));
    Let b3 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),12)];
    Let b4 = M[Offset(Offset(Offset(000378,Mul(GetLocal(2),14)),12),1)];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    Let loop_var6 = DeAddress(Offset(Address(MakeHiLo(b3,b4)),Add(Mul(2,Widen(b5)),1)));
    Label 7: {
      Let b8 = M[Address(loop_var6)];
      if (IsZeroByte(b8)) {
        Let b9 = M[000328];
        Let b10 = M[000329];
        SetByte 007684 b9;
        SetByte 007685 b10;
      } else {
        if (TestBit(b8,7)) {
          Let b11 = M[Offset(Address(loop_var6),1)];
          if (Equal(32,Widen(BwAnd(b8,63)))) {
            if (Equal(Widen(BwAnd(b11,63)),2)) {
              Let b12 = M[Offset(Address(loop_var6),2)];
              Let b13 = M[Offset(Offset(Address(loop_var6),2),1)];
              SetByte 007684 b12;
              SetByte 007685 b13;
            } else {
              Let b14 = M[Offset(Address(loop_var6),2)];
              SetByte 007684 HiByte(Widen(b14));
              SetByte 007685 LoByte(Widen(b14));
            }
          } else {
            Assign loop_var6 = DeAddress(Offset(Offset(Address(loop_var6),2),Widen(BwAnd(b11,63))));
            Goto: Label 7
          }
        } else {
          if (TestBit(b8,6)) {
            if (Equal(32,Widen(BwAnd(b8,63)))) {
              Let b15 = M[Offset(Address(loop_var6),1)];
              Let b16 = M[Offset(Offset(Address(loop_var6),1),1)];
              SetByte 007684 b15;
              SetByte 007685 b16;
            } else {
              Assign loop_var6 = DeAddress(Offset(Offset(Address(loop_var6),1),2));
              Goto: Label 7
            }
          } else {
            if (Equal(32,Widen(BwAnd(b8,63)))) {
              Let b17 = M[Offset(Address(loop_var6),1)];
              SetByte 007684 HiByte(Widen(b17));
              SetByte 007685 LoByte(Widen(b17));
            } else {
              Assign loop_var6 = DeAddress(Offset(Offset(Address(loop_var6),1),1));
              Goto: Label 7
            }
          }
        }
      }
    }
    TraceOperation 103263 (Push (Var (Global 239)));
    Let b18 = M[007684];
    Let b19 = M[007685];
    PushStack MakeHiLo(b18,b19);
    TraceOperation 103266 (Put_prop (Var (Local 1)) (Con 25) (Var Sp));
    PopStack popped20;
    Let b21 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),12)];
    Let b22 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),12),1)];
    Let b23 = M[Address(MakeHiLo(b21,b22))];
    Let loop_var24 = DeAddress(Offset(Address(MakeHiLo(b21,b22)),Add(Mul(2,Widen(b23)),1)));
    Label 25: {
      Let b26 = M[Address(loop_var24)];
      if (IsZeroByte(b26)) {
        Error: ("putProp",25)
      } else {
        if (TestBit(b26,7)) {
          Let b27 = M[Offset(Address(loop_var24),1)];
          if (Equal(25,Widen(BwAnd(b26,63)))) {
            if (Equal(Widen(BwAnd(b27,63)),2)) {
              SetByte Offset(Address(loop_var24),2) HiByte(popped20);
              SetByte Offset(Offset(Address(loop_var24),2),1) LoByte(popped20);
            } else {
              SetByte Offset(Address(loop_var24),2) LoByte(popped20);
            }
          } else {
            Assign loop_var24 = DeAddress(Offset(Offset(Address(loop_var24),2),Widen(BwAnd(b27,63))));
            Goto: Label 25
          }
        } else {
          if (TestBit(b26,6)) {
            if (Equal(25,Widen(BwAnd(b26,63)))) {
              SetByte Offset(Address(loop_var24),1) HiByte(popped20);
              SetByte Offset(Offset(Address(loop_var24),1),1) LoByte(popped20);
            } else {
              Assign loop_var24 = DeAddress(Offset(Offset(Address(loop_var24),1),2));
              Goto: Label 25
            }
          } else {
            if (Equal(25,Widen(BwAnd(b26,63)))) {
              SetByte Offset(Address(loop_var24),1) LoByte(popped20);
            } else {
              Assign loop_var24 = DeAddress(Offset(Offset(Address(loop_var24),1),1));
              Goto: Label 25
            }
          }
        }
      }
    }
    TraceOperation 103271 (Call (Floc 102544) [Var (Global 31)] Sp);
    Let b28 = M[007268];
    Let b29 = M[007269];
    PushFrame;
    PushReturnAddress 103271;
    SetLocal 1 MakeHiLo(b28,b29);
    MakeRoutineFrame 1;
    Jump: 102545
  }
LocReturn 103271:
  PushStack call_result;
  TraceOperation 103277 (Call (Floc 104384) [Var Sp,Var (Local 2)] Sp);
  PopStack popped1;
  PushFrame;
  PushReturnAddress 103277;
  SetLocal 1 popped1;
  SetLocal 2 GetLocal(2);
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 104385
LocReturn 103277:
  PushStack call_result;
  TraceOperation 103284 (Jz (Var Sp) (Branch T (Dloc 103299)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 103299
  } else {
    TraceOperation 103287 (Call (Floc 102544) [Var (Global 31)] Sp);
    Let b2 = M[007268];
    Let b3 = M[007269];
    PushFrame;
    PushReturnAddress 103287;
    SetLocal 1 MakeHiLo(b2,b3);
    MakeRoutineFrame 1;
    Jump: 102545
  }
LocReturn 103287:
  PushStack call_result;
  TraceOperation 103293 (Insert_obj (Var (Local 1)) (Var Sp));
  PopStack popped1;
  Let b2 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),6)];
  Let b3 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),6),1)];
  if (IsZero(MakeHiLo(b2,b3))) {} else {
    Let b4 = M[Offset(Offset(000378,Mul(MakeHiLo(b2,b3),14)),10)];
    Let b5 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b2,b3),14)),10),1)];
    if (Equal(MakeHiLo(b4,b5),GetLocal(1))) {
      Let b6 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),8)];
      Let b7 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),8),1)];
      SetByte Offset(Offset(000378,Mul(MakeHiLo(b2,b3),14)),10) b6;
      SetByte Offset(Offset(Offset(000378,Mul(MakeHiLo(b2,b3),14)),10),1) b7;
    } else {
      Let loop_var8 = MakeHiLo(b4,b5);
      Label 9: {
        Let b10 = M[Offset(Offset(000378,Mul(loop_var8,14)),8)];
        Let b11 = M[Offset(Offset(Offset(000378,Mul(loop_var8,14)),8),1)];
        if (Equal(MakeHiLo(b10,b11),GetLocal(1))) {
          Let b12 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),8)];
          Let b13 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),8),1)];
          SetByte Offset(Offset(000378,Mul(loop_var8,14)),8) b12;
          SetByte Offset(Offset(Offset(000378,Mul(loop_var8,14)),8),1) b13;
        } else {
          Assign loop_var8 = MakeHiLo(b10,b11);
          Goto: Label 9
        }
      }
    }
  }
  SetByte Offset(Offset(000378,Mul(GetLocal(1),14)),6) HiByte(popped1);
  SetByte Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),6),1) LoByte(popped1);
  Let b14 = M[Offset(Offset(000378,Mul(popped1,14)),10)];
  Let b15 = M[Offset(Offset(Offset(000378,Mul(popped1,14)),10),1)];
  SetByte Offset(Offset(000378,Mul(GetLocal(1),14)),8) b14;
  SetByte Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),8),1) b15;
  SetByte Offset(Offset(000378,Mul(popped1,14)),10) HiByte(GetLocal(1));
  SetByte Offset(Offset(Offset(000378,Mul(popped1,14)),10),1) LoByte(GetLocal(1));
  TraceOperation 103296 (Jump 103301);
  Jump: 103301
LocOp 103299:
  TraceOperation 103299 (Remove_obj (Var (Local 1)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),6)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),6),1)];
  if (IsZero(MakeHiLo(b1,b2))) {} else {
    Let b3 = M[Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),10)];
    Let b4 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),10),1)];
    if (Equal(MakeHiLo(b3,b4),GetLocal(1))) {
      Let b5 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),8)];
      Let b6 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),8),1)];
      SetByte Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),10) b5;
      SetByte Offset(Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),10),1) b6;
    } else {
      Let loop_var7 = MakeHiLo(b3,b4);
      Label 8: {
        Let b9 = M[Offset(Offset(000378,Mul(loop_var7,14)),8)];
        Let b10 = M[Offset(Offset(Offset(000378,Mul(loop_var7,14)),8),1)];
        if (Equal(MakeHiLo(b9,b10),GetLocal(1))) {
          Let b11 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),8)];
          Let b12 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),8),1)];
          SetByte Offset(Offset(000378,Mul(loop_var7,14)),8) b11;
          SetByte Offset(Offset(Offset(000378,Mul(loop_var7,14)),8),1) b12;
        } else {
          Assign loop_var7 = MakeHiLo(b9,b10);
          Goto: Label 8
        }
      }
    }
  }
  SetByte Offset(Offset(000378,Mul(GetLocal(1),14)),6) 0;
  SetByte Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),6),1) 0;
  Jump: 103301
LocOp 103301:
  TraceOperation 103301 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 103302:
  TraceOperation 103302 (Call (Floc 086692) [Con 1,Var (Local 1),Var (Local 2)] Sp);
  PushFrame;
  PushReturnAddress 103302;
  SetLocal 1 1;
  SetLocal 2 GetLocal(1);
  SetLocal 3 GetLocal(2);
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 086693
LocReturn 103302:
  PushStack call_result;
  TraceOperation 103310 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 103311:
  TraceOperation 103311 (Call (Floc 026172) [Var (Local 2),Con 21] Sp);
  PushFrame;
  PushReturnAddress 103311;
  SetLocal 1 GetLocal(2);
  SetLocal 2 21;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 103311:
  PushStack call_result;
  TraceOperation 103318 (Jz (Var Sp) (Branch T (Dloc 103330)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 103330
  } else {
    TraceOperation 103321 (Call (Floc 086692) [Con 19,Var (Local 1),Var (Local 2)] Sp);
    PushFrame;
    PushReturnAddress 103321;
    SetLocal 1 19;
    SetLocal 2 GetLocal(1);
    SetLocal 3 GetLocal(2);
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    Jump: 086693
  }
LocReturn 103321:
  PushStack call_result;
  TraceOperation 103329 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 103330:
  TraceOperation 103330 (Test_attr (Var (Local 1)) (Con 22) (Branch F (Dloc 103342)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),2)];
  if (TestBit(b1,1)) {
    TraceOperation 103334 (Clear_attr (Var (Local 1)) (Con 22));
    Let b2 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),2)];
    SetByte Offset(Offset(000378,Mul(GetLocal(1),14)),2) ClearBit(b2,1);
    TraceOperation 103337 (Jin (Var (Local 1)) (Var (Local 2)) (Branch F (Dloc 103342)));
    Let b3 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),6)];
    Let b4 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),6),1)];
    if (Equal(GetLocal(2),MakeHiLo(b3,b4))) {
      TraceOperation 103341 Rtrue;
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 1;
      JumpIndirect: (return) return_address_5
    } else {
      Jump: 103342
    }
  } else {
    Jump: 103342
  }
LocOp 103342:
  TraceOperation 103342 (CallN (Floc 103120) [Var (Local 1)]);
  PushFrame;
  PushReturnAddress 103342;
  SetLocal 1 GetLocal(1);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 103121
LocReturn 103342:
  TraceOperation 103347 (Jz (Var (Local 4)) (Branch F (Dloc 103403)));
  if (IsZero(GetLocal(4))) {
    TraceOperation 103350 (Je [Var (Local 1),Var (Global 31)] (Branch F (Dloc 103361)));
    Let b1 = M[007268];
    Let b2 = M[007269];
    if (Equal(GetLocal(1),MakeHiLo(b1,b2))) {
      TraceOperation 103354 (CallN (Floc 103572) [Var (Local 2),Var (Local 3)]);
      PushFrame;
      PushReturnAddress 103354;
      SetLocal 1 GetLocal(2);
      SetLocal 2 GetLocal(3);
      MakeRoutineFrame 2;
      Jump: 103573
    } else {
      Jump: 103361
    }
  } else {
    Jump: 103403
  }
LocReturn 103354:
  TraceOperation 103360 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 103361:
  TraceOperation 103361 (Call (Floc 102676) [Var (Local 1),Var (Global 31)] Sp);
  Let b1 = M[007268];
  Let b2 = M[007269];
  PushFrame;
  PushReturnAddress 103361;
  SetLocal 1 GetLocal(1);
  SetLocal 2 MakeHiLo(b1,b2);
  MakeRoutineFrame 2;
  Jump: 102677
LocReturn 103361:
  PushStack call_result;
  TraceOperation 103368 (Jz (Var Sp) (Branch T (Dloc 103403)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 103403
  } else {
    TraceOperation 103371 (Call (Floc 102544) [Var (Local 2)] Sp);
    PushFrame;
    PushReturnAddress 103371;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 1;
    Jump: 102545
  }
LocReturn 103371:
  PushStack call_result;
  TraceOperation 103377 (Call (Floc 102544) [Var (Global 31)] Sp);
  Let b1 = M[007268];
  Let b2 = M[007269];
  PushFrame;
  PushReturnAddress 103377;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 1;
  Jump: 102545
LocReturn 103377:
  PushStack call_result;
  TraceOperation 103383 (Je [Var Sp,Var Sp] (Branch T (Dloc 103403)));
  PopStack popped1;
  PopStack popped2;
  if (Equal(popped1,popped2)) {
    Jump: 103403
  } else {
    TraceOperation 103387 (Get_parent (Var (Global 31)) (Local 5));
    Let b3 = M[007268];
    Let b4 = M[007269];
    Let b5 = M[Offset(Offset(000378,Mul(MakeHiLo(b3,b4),14)),6)];
    Let b6 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b3,b4),14)),6),1)];
    SetLocal 5 MakeHiLo(b5,b6);
    TraceOperation 103390 (Insert_obj (Var (Global 31)) (Var (Global 32)));
    Let b7 = M[007268];
    Let b8 = M[007269];
    Let b9 = M[007270];
    Let b10 = M[007271];
    Let b11 = M[Offset(Offset(000378,Mul(MakeHiLo(b7,b8),14)),6)];
    Let b12 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b7,b8),14)),6),1)];
    if (IsZero(MakeHiLo(b11,b12))) {} else {
      Let b13 = M[Offset(Offset(000378,Mul(MakeHiLo(b11,b12),14)),10)];
      Let b14 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b11,b12),14)),10),1)];
      if (Equal(MakeHiLo(b13,b14),MakeHiLo(b7,b8))) {
        Let b15 = M[Offset(Offset(000378,Mul(MakeHiLo(b7,b8),14)),8)];
        Let b16 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b7,b8),14)),8),1)];
        SetByte Offset(Offset(000378,Mul(MakeHiLo(b11,b12),14)),10) b15;
        SetByte Offset(Offset(Offset(000378,Mul(MakeHiLo(b11,b12),14)),10),1) b16;
      } else {
        Let loop_var17 = MakeHiLo(b13,b14);
        Label 18: {
          Let b19 = M[Offset(Offset(000378,Mul(loop_var17,14)),8)];
          Let b20 = M[Offset(Offset(Offset(000378,Mul(loop_var17,14)),8),1)];
          if (Equal(MakeHiLo(b19,b20),MakeHiLo(b7,b8))) {
            Let b21 = M[Offset(Offset(000378,Mul(MakeHiLo(b7,b8),14)),8)];
            Let b22 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b7,b8),14)),8),1)];
            SetByte Offset(Offset(000378,Mul(loop_var17,14)),8) b21;
            SetByte Offset(Offset(Offset(000378,Mul(loop_var17,14)),8),1) b22;
          } else {
            Assign loop_var17 = MakeHiLo(b19,b20);
            Goto: Label 18
          }
        }
      }
    }
    SetByte Offset(Offset(000378,Mul(MakeHiLo(b7,b8),14)),6) b9;
    SetByte Offset(Offset(Offset(000378,Mul(MakeHiLo(b7,b8),14)),6),1) b10;
    Let b23 = M[Offset(Offset(000378,Mul(MakeHiLo(b9,b10),14)),10)];
    Let b24 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b9,b10),14)),10),1)];
    SetByte Offset(Offset(000378,Mul(MakeHiLo(b7,b8),14)),8) b23;
    SetByte Offset(Offset(Offset(000378,Mul(MakeHiLo(b7,b8),14)),8),1) b24;
    SetByte Offset(Offset(000378,Mul(MakeHiLo(b9,b10),14)),10) b7;
    SetByte Offset(Offset(Offset(000378,Mul(MakeHiLo(b9,b10),14)),10),1) b8;
    TraceOperation 103393 (Insert_obj (Var (Local 1)) (Var (Local 2)));
    Let b25 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),6)];
    Let b26 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),6),1)];
    if (IsZero(MakeHiLo(b25,b26))) {} else {
      Let b27 = M[Offset(Offset(000378,Mul(MakeHiLo(b25,b26),14)),10)];
      Let b28 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b25,b26),14)),10),1)];
      if (Equal(MakeHiLo(b27,b28),GetLocal(1))) {
        Let b29 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),8)];
        Let b30 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),8),1)];
        SetByte Offset(Offset(000378,Mul(MakeHiLo(b25,b26),14)),10) b29;
        SetByte Offset(Offset(Offset(000378,Mul(MakeHiLo(b25,b26),14)),10),1) b30;
      } else {
        Let loop_var31 = MakeHiLo(b27,b28);
        Label 32: {
          Let b33 = M[Offset(Offset(000378,Mul(loop_var31,14)),8)];
          Let b34 = M[Offset(Offset(Offset(000378,Mul(loop_var31,14)),8),1)];
          if (Equal(MakeHiLo(b33,b34),GetLocal(1))) {
            Let b35 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),8)];
            Let b36 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),8),1)];
            SetByte Offset(Offset(000378,Mul(loop_var31,14)),8) b35;
            SetByte Offset(Offset(Offset(000378,Mul(loop_var31,14)),8),1) b36;
          } else {
            Assign loop_var31 = MakeHiLo(b33,b34);
            Goto: Label 32
          }
        }
      }
    }
    SetByte Offset(Offset(000378,Mul(GetLocal(1),14)),6) HiByte(GetLocal(2));
    SetByte Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),6),1) LoByte(GetLocal(2));
    Let b37 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),10)];
    Let b38 = M[Offset(Offset(Offset(000378,Mul(GetLocal(2),14)),10),1)];
    SetByte Offset(Offset(000378,Mul(GetLocal(1),14)),8) b37;
    SetByte Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),8),1) b38;
    SetByte Offset(Offset(000378,Mul(GetLocal(2),14)),10) HiByte(GetLocal(1));
    SetByte Offset(Offset(Offset(000378,Mul(GetLocal(2),14)),10),1) LoByte(GetLocal(1));
    TraceOperation 103396 (CallN (Floc 103572) [Var (Local 5),Con 1]);
    PushFrame;
    PushReturnAddress 103396;
    SetLocal 1 GetLocal(5);
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 103573
  }
LocReturn 103396:
  TraceOperation 103402 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 103403:
  TraceOperation 103403 (Insert_obj (Var (Local 1)) (Var (Local 2)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),6)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),6),1)];
  if (IsZero(MakeHiLo(b1,b2))) {} else {
    Let b3 = M[Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),10)];
    Let b4 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),10),1)];
    if (Equal(MakeHiLo(b3,b4),GetLocal(1))) {
      Let b5 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),8)];
      Let b6 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),8),1)];
      SetByte Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),10) b5;
      SetByte Offset(Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),10),1) b6;
    } else {
      Let loop_var7 = MakeHiLo(b3,b4);
      Label 8: {
        Let b9 = M[Offset(Offset(000378,Mul(loop_var7,14)),8)];
        Let b10 = M[Offset(Offset(Offset(000378,Mul(loop_var7,14)),8),1)];
        if (Equal(MakeHiLo(b9,b10),GetLocal(1))) {
          Let b11 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),8)];
          Let b12 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),8),1)];
          SetByte Offset(Offset(000378,Mul(loop_var7,14)),8) b11;
          SetByte Offset(Offset(Offset(000378,Mul(loop_var7,14)),8),1) b12;
        } else {
          Assign loop_var7 = MakeHiLo(b9,b10);
          Goto: Label 8
        }
      }
    }
  }
  SetByte Offset(Offset(000378,Mul(GetLocal(1),14)),6) HiByte(GetLocal(2));
  SetByte Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),6),1) LoByte(GetLocal(2));
  Let b13 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),10)];
  Let b14 = M[Offset(Offset(Offset(000378,Mul(GetLocal(2),14)),10),1)];
  SetByte Offset(Offset(000378,Mul(GetLocal(1),14)),8) b13;
  SetByte Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),8),1) b14;
  SetByte Offset(Offset(000378,Mul(GetLocal(2),14)),10) HiByte(GetLocal(1));
  SetByte Offset(Offset(Offset(000378,Mul(GetLocal(2),14)),10),1) LoByte(GetLocal(1));
  TraceOperation 103406 Rtrue;
  PopFrame;
  PopReturnAddress return_address_15;
  SetResult 1;
  JumpIndirect: (return) return_address_15
--------------------------------------------------
LocRoutine 103408:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 103409
LocOp 103409:
  TraceOperation 103409 (Jz (Var (Local 1)) (Branch F (Dloc 103419)));
  if (IsZero(GetLocal(1))) {
    TraceOperation 103412 (Call (Floc 086692) [Con 16] Sp);
    PushFrame;
    PushReturnAddress 103412;
    SetLocal 1 16;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 086693
  } else {
    Jump: 103419
  }
LocReturn 103412:
  PushStack call_result;
  TraceOperation 103418 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 103419:
  TraceOperation 103419 (Je [Var (Local 1),Var (Global 31)] (Branch F (Dloc 103430)));
  Let b1 = M[007268];
  Let b2 = M[007269];
  if (Equal(GetLocal(1),MakeHiLo(b1,b2))) {
    TraceOperation 103423 (Call (Floc 086692) [Con 43] Sp);
    PushFrame;
    PushReturnAddress 103423;
    SetLocal 1 43;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 086693
  } else {
    Jump: 103430
  }
LocReturn 103423:
  PushStack call_result;
  TraceOperation 103429 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 103430:
  TraceOperation 103430 (Call (Floc 026172) [Var (Local 1),Con 16] Sp);
  PushFrame;
  PushReturnAddress 103430;
  SetLocal 1 GetLocal(1);
  SetLocal 2 16;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 103430:
  PushStack call_result;
  TraceOperation 103437 (Jz (Var Sp) (Branch T (Dloc 103447)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 103447
  } else {
    TraceOperation 103440 (Call (Floc 086692) [Con 44] Sp);
    PushFrame;
    PushReturnAddress 103440;
    SetLocal 1 44;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 086693
  }
LocReturn 103440:
  PushStack call_result;
  TraceOperation 103446 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 103447:
  TraceOperation 103447 (Clear_attr (Var (Local 1)) (Con 22));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),2)];
  SetByte Offset(Offset(000378,Mul(GetLocal(1),14)),2) ClearBit(b1,1);
  TraceOperation 103450 (CallN (Floc 103120) [Var (Local 1)]);
  PushFrame;
  PushReturnAddress 103450;
  SetLocal 1 GetLocal(1);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 103121
LocReturn 103450:
  TraceOperation 103455 (Call (Floc 026172) [Var (Local 1),Con 19] Sp);
  PushFrame;
  PushReturnAddress 103455;
  SetLocal 1 GetLocal(1);
  SetLocal 2 19;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 103455:
  PushStack call_result;
  TraceOperation 103462 (Jz (Var Sp) (Branch T (Dloc 103468)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 103468
  } else {
    TraceOperation 103465 (Set_attr (Var (Local 1)) (Con 0));
    Let b2 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),0)];
    SetByte Offset(Offset(000378,Mul(GetLocal(1),14)),0) SetBit(b2,7);
    Jump: 103468
  }
LocOp 103468:
  TraceOperation 103468 (Remove_obj (Var (Local 1)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),6)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),6),1)];
  if (IsZero(MakeHiLo(b1,b2))) {} else {
    Let b3 = M[Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),10)];
    Let b4 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),10),1)];
    if (Equal(MakeHiLo(b3,b4),GetLocal(1))) {
      Let b5 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),8)];
      Let b6 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),8),1)];
      SetByte Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),10) b5;
      SetByte Offset(Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),10),1) b6;
    } else {
      Let loop_var7 = MakeHiLo(b3,b4);
      Label 8: {
        Let b9 = M[Offset(Offset(000378,Mul(loop_var7,14)),8)];
        Let b10 = M[Offset(Offset(Offset(000378,Mul(loop_var7,14)),8),1)];
        if (Equal(MakeHiLo(b9,b10),GetLocal(1))) {
          Let b11 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),8)];
          Let b12 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),8),1)];
          SetByte Offset(Offset(000378,Mul(loop_var7,14)),8) b11;
          SetByte Offset(Offset(Offset(000378,Mul(loop_var7,14)),8),1) b12;
        } else {
          Assign loop_var7 = MakeHiLo(b9,b10);
          Goto: Label 8
        }
      }
    }
  }
  SetByte Offset(Offset(000378,Mul(GetLocal(1),14)),6) 0;
  SetByte Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),6),1) 0;
  TraceOperation 103470 Rtrue;
  PopFrame;
  PopReturnAddress return_address_13;
  SetResult 1;
  JumpIndirect: (return) return_address_13
--------------------------------------------------
LocRoutine 103472:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 103473
LocOp 103473:
  TraceOperation 103473 (Call (Floc 026172) [Var (Local 1),Con 13] Sp);
  PushFrame;
  PushReturnAddress 103473;
  SetLocal 1 GetLocal(1);
  SetLocal 2 13;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 103473:
  PushStack call_result;
  TraceOperation 103480 (Jz (Var Sp) (Branch F Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 103483
  } else {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  }
LocOp 103483:
  TraceOperation 103483 (Call (Floc 112940) [Var (Local 1)] Sp);
  PushFrame;
  PushReturnAddress 103483;
  SetLocal 1 GetLocal(1);
  MakeRoutineFrame 1;
  Jump: 112941
LocReturn 103483:
  PushStack call_result;
  TraceOperation 103489 (Je [Var Sp,Con 2] (Branch F (Dloc 103571)));
  PopStack popped1;
  if (Equal(popped1,2)) {
    TraceOperation 103494 (Call (Floc 026172) [Var (Local 1),Con 13] Sp);
    PushFrame;
    PushReturnAddress 103494;
    SetLocal 1 GetLocal(1);
    SetLocal 2 13;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 103571
  }
LocReturn 103494:
  PushStack call_result;
  TraceOperation 103501 (Jz (Var Sp) (Branch F Dtrue));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 103504 (Call (Floc 026172) [Var (Local 1),Con 21] Sp);
    PushFrame;
    PushReturnAddress 103504;
    SetLocal 1 GetLocal(1);
    SetLocal 2 21;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  }
LocReturn 103504:
  PushStack call_result;
  TraceOperation 103511 (Jz (Var Sp) (Branch F Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 103514 (Call (Floc 026172) [Var (Local 1),Con 16] Sp);
    PushFrame;
    PushReturnAddress 103514;
    SetLocal 1 GetLocal(1);
    SetLocal 2 16;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  }
LocReturn 103514:
  PushStack call_result;
  TraceOperation 103521 (Jz (Var Sp) (Branch F Dtrue));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 103524 (Call (Floc 026172) [Var (Local 1),Con 19] Sp);
    PushFrame;
    PushReturnAddress 103524;
    SetLocal 1 GetLocal(1);
    SetLocal 2 19;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  }
LocReturn 103524:
  PushStack call_result;
  TraceOperation 103531 (Jz (Var Sp) (Branch T (Dloc 103539)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 103539
  } else {
    TraceOperation 103534 (Test_attr (Var (Local 1)) (Con 0) (Branch T Dfalse));
    Let b2 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),0)];
    if (TestBit(b2,7)) {
      PopFrame;
      PopReturnAddress return_address_3;
      SetResult 0;
      JumpIndirect: (return) return_address_3
    } else {
      TraceOperation 103538 Rtrue;
      PopFrame;
      PopReturnAddress return_address_4;
      SetResult 1;
      JumpIndirect: (return) return_address_4
    }
  }
LocOp 103539:
  TraceOperation 103539 (Get_prop (Var (Local 1)) (Con 20) (Global 239));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),12)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),12),1)];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let loop_var4 = DeAddress(Offset(Address(MakeHiLo(b1,b2)),Add(Mul(2,Widen(b3)),1)));
  Label 5: {
    Let b6 = M[Address(loop_var4)];
    if (IsZeroByte(b6)) {
      Let b7 = M[000304];
      Let b8 = M[000305];
      SetByte 007684 b7;
      SetByte 007685 b8;
    } else {
      if (TestBit(b6,7)) {
        Let b9 = M[Offset(Address(loop_var4),1)];
        if (Equal(20,Widen(BwAnd(b6,63)))) {
          if (Equal(Widen(BwAnd(b9,63)),2)) {
            Let b10 = M[Offset(Address(loop_var4),2)];
            Let b11 = M[Offset(Offset(Address(loop_var4),2),1)];
            SetByte 007684 b10;
            SetByte 007685 b11;
          } else {
            Let b12 = M[Offset(Address(loop_var4),2)];
            SetByte 007684 HiByte(Widen(b12));
            SetByte 007685 LoByte(Widen(b12));
          }
        } else {
          Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),2),Widen(BwAnd(b9,63))));
          Goto: Label 5
        }
      } else {
        if (TestBit(b6,6)) {
          if (Equal(20,Widen(BwAnd(b6,63)))) {
            Let b13 = M[Offset(Address(loop_var4),1)];
            Let b14 = M[Offset(Offset(Address(loop_var4),1),1)];
            SetByte 007684 b13;
            SetByte 007685 b14;
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),2));
            Goto: Label 5
          }
        } else {
          if (Equal(20,Widen(BwAnd(b6,63)))) {
            Let b15 = M[Offset(Address(loop_var4),1)];
            SetByte 007684 HiByte(Widen(b15));
            SetByte 007685 LoByte(Widen(b15));
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),1));
            Goto: Label 5
          }
        }
      }
    }
  }
  TraceOperation 103543 (Store (Con 2) (Var (Global 239)));
  Let b16 = M[007684];
  Let b17 = M[007685];
  SetLocal 2 MakeHiLo(b16,b17);
  TraceOperation 103546 (Jz (Var (Local 2)) (Branch T (Dloc 103555)));
  if (IsZero(GetLocal(2))) {
    Jump: 103555
  } else {
    TraceOperation 103549 (Store (Con 1) (Var (Local 2)));
    SetLocal 1 GetLocal(2);
    TraceOperation 103552 (Jump 103483);
    Jump: 103483
  }
LocOp 103555:
  TraceOperation 103555 (Get_parent (Var (Local 1)) (Local 2));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),6)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),6),1)];
  SetLocal 2 MakeHiLo(b1,b2);
  TraceOperation 103558 (Jz (Var (Local 2)) (Branch T (Dloc 103567)));
  if (IsZero(GetLocal(2))) {
    Jump: 103567
  } else {
    TraceOperation 103561 (Store (Con 1) (Var (Local 2)));
    SetLocal 1 GetLocal(2);
    TraceOperation 103564 (Jump 103483);
    Jump: 103483
  }
LocOp 103567:
  TraceOperation 103567 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 103572:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 103573
LocOp 103573:
  TraceOperation 103573 (Push (Var (Global 37)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 103576 (Store (Con 53) (Var (Global 31)));
  Let b3 = M[007268];
  Let b4 = M[007269];
  SetByte 007280 b3;
  SetByte 007281 b4;
  TraceOperation 103579 (Insert_obj (Var (Global 31)) (Var (Local 1)));
  Let b5 = M[007268];
  Let b6 = M[007269];
  Let b7 = M[Offset(Offset(000378,Mul(MakeHiLo(b5,b6),14)),6)];
  Let b8 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b5,b6),14)),6),1)];
  if (IsZero(MakeHiLo(b7,b8))) {} else {
    Let b9 = M[Offset(Offset(000378,Mul(MakeHiLo(b7,b8),14)),10)];
    Let b10 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b7,b8),14)),10),1)];
    if (Equal(MakeHiLo(b9,b10),MakeHiLo(b5,b6))) {
      Let b11 = M[Offset(Offset(000378,Mul(MakeHiLo(b5,b6),14)),8)];
      Let b12 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b5,b6),14)),8),1)];
      SetByte Offset(Offset(000378,Mul(MakeHiLo(b7,b8),14)),10) b11;
      SetByte Offset(Offset(Offset(000378,Mul(MakeHiLo(b7,b8),14)),10),1) b12;
    } else {
      Let loop_var13 = MakeHiLo(b9,b10);
      Label 14: {
        Let b15 = M[Offset(Offset(000378,Mul(loop_var13,14)),8)];
        Let b16 = M[Offset(Offset(Offset(000378,Mul(loop_var13,14)),8),1)];
        if (Equal(MakeHiLo(b15,b16),MakeHiLo(b5,b6))) {
          Let b17 = M[Offset(Offset(000378,Mul(MakeHiLo(b5,b6),14)),8)];
          Let b18 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b5,b6),14)),8),1)];
          SetByte Offset(Offset(000378,Mul(loop_var13,14)),8) b17;
          SetByte Offset(Offset(Offset(000378,Mul(loop_var13,14)),8),1) b18;
        } else {
          Assign loop_var13 = MakeHiLo(b15,b16);
          Goto: Label 14
        }
      }
    }
  }
  SetByte Offset(Offset(000378,Mul(MakeHiLo(b5,b6),14)),6) HiByte(GetLocal(1));
  SetByte Offset(Offset(Offset(000378,Mul(MakeHiLo(b5,b6),14)),6),1) LoByte(GetLocal(1));
  Let b19 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),10)];
  Let b20 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),10),1)];
  SetByte Offset(Offset(000378,Mul(MakeHiLo(b5,b6),14)),8) b19;
  SetByte Offset(Offset(Offset(000378,Mul(MakeHiLo(b5,b6),14)),8),1) b20;
  SetByte Offset(Offset(000378,Mul(GetLocal(1),14)),10) b5;
  SetByte Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),10),1) b6;
  TraceOperation 103582 (Call (Floc 102544) [Var (Local 1)] (Global 1));
  PushFrame;
  PushReturnAddress 103582;
  SetLocal 1 GetLocal(1);
  MakeRoutineFrame 1;
  Jump: 102545
LocReturn 103582:
  SetByte 007208 HiByte(call_result);
  SetByte 007209 LoByte(call_result);
  TraceOperation 103588 (Store (Con 48) (Var (Global 1)));
  Let b1 = M[007208];
  Let b2 = M[007209];
  SetByte 007270 b1;
  SetByte 007271 b2;
  TraceOperation 103591 (CallN (Floc 103776) []);
  PushFrame;
  PushReturnAddress 103591;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  SetLocal 1 0;
  Jump: 103777
LocReturn 103591:
  TraceOperation 103594 (CallN (Floc 037028) [Con 1]);
  PushFrame;
  PushReturnAddress 103594;
  SetLocal 1 1;
  MakeRoutineFrame 1;
  Jump: 037029
LocReturn 103594:
  TraceOperation 103599 (CallN (Floc 080316) []);
  PushFrame;
  PushReturnAddress 103599;
  MakeRoutineFrame 0;
  Jump: 080317
LocReturn 103599:
  TraceOperation 103602 (Jz (Var (Local 2)) (Branch F (Dloc 103610)));
  if (IsZero(GetLocal(2))) {
    TraceOperation 103605 (CallN (Floc 076452) [Con 7]);
    PushFrame;
    PushReturnAddress 103605;
    SetLocal 1 7;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 076453
  } else {
    Jump: 103610
  }
LocReturn 103605:
  Jump: 103610
LocOp 103610:
  TraceOperation 103610 (Je [Var (Local 2),Con 1] (Branch F (Dloc 103617)));
  if (Equal(GetLocal(2),1)) {
    TraceOperation 103614 (Set_attr (Var (Global 1)) (Con 21));
    Let b1 = M[007208];
    Let b2 = M[007209];
    Let b3 = M[Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),2)];
    SetByte Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),2) SetBit(b3,2);
    Jump: 103617
  } else {
    Jump: 103617
  }
LocOp 103617:
  TraceOperation 103617 (Je [Var (Local 2),Con 2] (Branch F (Dloc 103624)));
  if (Equal(GetLocal(2),2)) {
    TraceOperation 103621 (CallN (Floc 076644) []);
    PushFrame;
    PushReturnAddress 103621;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    SetLocal 2 0;
    SetLocal 1 0;
    Jump: 076645
  } else {
    Jump: 103624
  }
LocReturn 103621:
  Jump: 103624
LocOp 103624:
  TraceOperation 103624 (Pull (Con 53));
  PopStack popped1;
  SetByte 007280 HiByte(popped1);
  SetByte 007281 LoByte(popped1);
  TraceOperation 103627 Rtrue;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult 1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 103628:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 103629
LocOp 103629:
  TraceOperation 103629 (CallN (Floc 103224) [Var (Local 1),Var (Local 2),Con 0,Con 1]);
  PushFrame;
  PushReturnAddress 103629;
  SetLocal 1 GetLocal(1);
  SetLocal 2 GetLocal(2);
  SetLocal 3 0;
  SetLocal 4 1;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  Jump: 103225
LocReturn 103629:
  TraceOperation 103638 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 103651)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 103642 (Call (Floc 102544) [Var (Global 31)] (Global 1));
    Let b5 = M[007268];
    Let b6 = M[007269];
    PushFrame;
    PushReturnAddress 103642;
    SetLocal 1 MakeHiLo(b5,b6);
    MakeRoutineFrame 1;
    Jump: 102545
  } else {
    Jump: 103651
  }
LocReturn 103642:
  SetByte 007208 HiByte(call_result);
  SetByte 007209 LoByte(call_result);
  TraceOperation 103648 (Store (Con 48) (Var (Global 1)));
  Let b1 = M[007208];
  Let b2 = M[007209];
  SetByte 007270 b1;
  SetByte 007271 b2;
  Jump: 103651
LocOp 103651:
  TraceOperation 103651 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 103652:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 103653
LocOp 103653:
  TraceOperation 103653 (Call (Floc 026172) [Var (Local 1),Con 20] Sp);
  PushFrame;
  PushReturnAddress 103653;
  SetLocal 1 GetLocal(1);
  SetLocal 2 20;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 103653:
  PushStack call_result;
  TraceOperation 103660 (Jz (Var Sp) (Branch F (Dloc 103671)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 103663 (Call (Floc 086692) [Con 4,Var (Local 1)] Sp);
    PushFrame;
    PushReturnAddress 103663;
    SetLocal 1 4;
    SetLocal 2 GetLocal(1);
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 086693
  } else {
    Jump: 103671
  }
LocReturn 103663:
  PushStack call_result;
  TraceOperation 103670 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 103671:
  TraceOperation 103671 (Call (Floc 103472) [Var (Local 1)] Sp);
  PushFrame;
  PushReturnAddress 103671;
  SetLocal 1 GetLocal(1);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 103473
LocReturn 103671:
  PushStack call_result;
  TraceOperation 103677 (Jz (Var Sp) (Branch F (Dloc 103688)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 103680 (Call (Floc 086692) [Con 45,Var (Local 1)] Sp);
    PushFrame;
    PushReturnAddress 103680;
    SetLocal 1 45;
    SetLocal 2 GetLocal(1);
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 086693
  } else {
    Jump: 103688
  }
LocReturn 103680:
  PushStack call_result;
  TraceOperation 103687 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 103688:
  TraceOperation 103688 (Je [Var (Local 1),Var (Global 31)] (Branch F (Dloc 103693)));
  Let b1 = M[007268];
  Let b2 = M[007269];
  if (Equal(GetLocal(1),MakeHiLo(b1,b2))) {
    TraceOperation 103692 Rtrue;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 103693
  }
LocOp 103693:
  TraceOperation 103693 (Clear_attr (Var (Global 31)) (Con 3));
  Let b1 = M[007268];
  Let b2 = M[007269];
  Let b3 = M[Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),0)];
  SetByte Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),0) ClearBit(b3,4);
  TraceOperation 103696 (Test_attr (Var (Global 31)) (Con 28) (Branch F (Dloc 103703)));
  Let b4 = M[007268];
  Let b5 = M[007269];
  Let b6 = M[Offset(Offset(000378,Mul(MakeHiLo(b4,b5),14)),3)];
  if (TestBit(b6,3)) {
    TraceOperation 103700 (Clear_attr (Var (Global 31)) (Con 27));
    Let b7 = M[007268];
    Let b8 = M[007269];
    Let b9 = M[Offset(Offset(000378,Mul(MakeHiLo(b7,b8),14)),3)];
    SetByte Offset(Offset(000378,Mul(MakeHiLo(b7,b8),14)),3) ClearBit(b9,4);
    Jump: 103703
  } else {
    Jump: 103703
  }
LocOp 103703:
  TraceOperation 103703 (Je [Var (Global 31),Con 41] (Branch F (Dloc 103726)));
  Let b1 = M[007268];
  Let b2 = M[007269];
  if (Equal(MakeHiLo(b1,b2),41)) {
    TraceOperation 103707 (Get_prop (Var (Global 31)) (Con 34) (Global 239));
    Let b3 = M[007268];
    Let b4 = M[007269];
    Let b5 = M[Offset(Offset(000378,Mul(MakeHiLo(b3,b4),14)),12)];
    Let b6 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b3,b4),14)),12),1)];
    Let b7 = M[Address(MakeHiLo(b5,b6))];
    Let loop_var8 = DeAddress(Offset(Address(MakeHiLo(b5,b6)),Add(Mul(2,Widen(b7)),1)));
    Label 9: {
      Let b10 = M[Address(loop_var8)];
      if (IsZeroByte(b10)) {
        Let b11 = M[000332];
        Let b12 = M[000333];
        SetByte 007684 b11;
        SetByte 007685 b12;
      } else {
        if (TestBit(b10,7)) {
          Let b13 = M[Offset(Address(loop_var8),1)];
          if (Equal(34,Widen(BwAnd(b10,63)))) {
            if (Equal(Widen(BwAnd(b13,63)),2)) {
              Let b14 = M[Offset(Address(loop_var8),2)];
              Let b15 = M[Offset(Offset(Address(loop_var8),2),1)];
              SetByte 007684 b14;
              SetByte 007685 b15;
            } else {
              Let b16 = M[Offset(Address(loop_var8),2)];
              SetByte 007684 HiByte(Widen(b16));
              SetByte 007685 LoByte(Widen(b16));
            }
          } else {
            Assign loop_var8 = DeAddress(Offset(Offset(Address(loop_var8),2),Widen(BwAnd(b13,63))));
            Goto: Label 9
          }
        } else {
          if (TestBit(b10,6)) {
            if (Equal(34,Widen(BwAnd(b10,63)))) {
              Let b17 = M[Offset(Address(loop_var8),1)];
              Let b18 = M[Offset(Offset(Address(loop_var8),1),1)];
              SetByte 007684 b17;
              SetByte 007685 b18;
            } else {
              Assign loop_var8 = DeAddress(Offset(Offset(Address(loop_var8),1),2));
              Goto: Label 9
            }
          } else {
            if (Equal(34,Widen(BwAnd(b10,63)))) {
              Let b19 = M[Offset(Address(loop_var8),1)];
              SetByte 007684 HiByte(Widen(b19));
              SetByte 007685 LoByte(Widen(b19));
            } else {
              Assign loop_var8 = DeAddress(Offset(Offset(Address(loop_var8),1),1));
              Goto: Label 9
            }
          }
        }
      }
    }
    TraceOperation 103711 (Push (Var (Global 239)));
    Let b20 = M[007684];
    Let b21 = M[007685];
    PushStack MakeHiLo(b20,b21);
    TraceOperation 103714 (CallN (Floc 110088) [Var (Global 31),Con 80,Var Sp]);
    Let b22 = M[007268];
    Let b23 = M[007269];
    PopStack popped24;
    PushFrame;
    PushReturnAddress 103714;
    SetLocal 1 MakeHiLo(b22,b23);
    SetLocal 2 80;
    SetLocal 3 popped24;
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 110089
  } else {
    Jump: 103726
  }
LocReturn 103714:
  TraceOperation 103721 (Put_prop (Var (Global 31)) (Con 34) (Var (Global 124)));
  Let b1 = M[007268];
  Let b2 = M[007269];
  Let b3 = M[007454];
  Let b4 = M[007455];
  Let b5 = M[Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),12)];
  Let b6 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),12),1)];
  Let b7 = M[Address(MakeHiLo(b5,b6))];
  Let loop_var8 = DeAddress(Offset(Address(MakeHiLo(b5,b6)),Add(Mul(2,Widen(b7)),1)));
  Label 9: {
    Let b10 = M[Address(loop_var8)];
    if (IsZeroByte(b10)) {
      Error: ("putProp",34)
    } else {
      if (TestBit(b10,7)) {
        Let b11 = M[Offset(Address(loop_var8),1)];
        if (Equal(34,Widen(BwAnd(b10,63)))) {
          if (Equal(Widen(BwAnd(b11,63)),2)) {
            SetByte Offset(Address(loop_var8),2) b3;
            SetByte Offset(Offset(Address(loop_var8),2),1) b4;
          } else {
            SetByte Offset(Address(loop_var8),2) b4;
          }
        } else {
          Assign loop_var8 = DeAddress(Offset(Offset(Address(loop_var8),2),Widen(BwAnd(b11,63))));
          Goto: Label 9
        }
      } else {
        if (TestBit(b10,6)) {
          if (Equal(34,Widen(BwAnd(b10,63)))) {
            SetByte Offset(Address(loop_var8),1) b3;
            SetByte Offset(Offset(Address(loop_var8),1),1) b4;
          } else {
            Assign loop_var8 = DeAddress(Offset(Offset(Address(loop_var8),1),2));
            Goto: Label 9
          }
        } else {
          if (Equal(34,Widen(BwAnd(b10,63)))) {
            SetByte Offset(Address(loop_var8),1) b4;
          } else {
            Assign loop_var8 = DeAddress(Offset(Offset(Address(loop_var8),1),1));
            Goto: Label 9
          }
        }
      }
    }
  }
  Jump: 103726
LocOp 103726:
  TraceOperation 103726 (Store (Con 47) (Var (Local 1)));
  SetByte 007268 HiByte(GetLocal(1));
  SetByte 007269 LoByte(GetLocal(1));
  TraceOperation 103729 (Je [Var (Global 31),Con 41] (Branch F (Dloc 103745)));
  Let b1 = M[007268];
  Let b2 = M[007269];
  if (Equal(MakeHiLo(b1,b2),41)) {
    TraceOperation 103733 (Call (Floc 110116) [Var (Global 31),Con 80] Sp);
    Let b3 = M[007268];
    Let b4 = M[007269];
    PushFrame;
    PushReturnAddress 103733;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 80;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 110117
  } else {
    Jump: 103745
  }
LocReturn 103733:
  PushStack call_result;
  TraceOperation 103740 (Put_prop (Var (Global 31)) (Con 34) (Var Sp));
  Let b1 = M[007268];
  Let b2 = M[007269];
  PopStack popped3;
  Let b4 = M[Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),12)];
  Let b5 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),12),1)];
  Let b6 = M[Address(MakeHiLo(b4,b5))];
  Let loop_var7 = DeAddress(Offset(Address(MakeHiLo(b4,b5)),Add(Mul(2,Widen(b6)),1)));
  Label 8: {
    Let b9 = M[Address(loop_var7)];
    if (IsZeroByte(b9)) {
      Error: ("putProp",34)
    } else {
      if (TestBit(b9,7)) {
        Let b10 = M[Offset(Address(loop_var7),1)];
        if (Equal(34,Widen(BwAnd(b9,63)))) {
          if (Equal(Widen(BwAnd(b10,63)),2)) {
            SetByte Offset(Address(loop_var7),2) HiByte(popped3);
            SetByte Offset(Offset(Address(loop_var7),2),1) LoByte(popped3);
          } else {
            SetByte Offset(Address(loop_var7),2) LoByte(popped3);
          }
        } else {
          Assign loop_var7 = DeAddress(Offset(Offset(Address(loop_var7),2),Widen(BwAnd(b10,63))));
          Goto: Label 8
        }
      } else {
        if (TestBit(b9,6)) {
          if (Equal(34,Widen(BwAnd(b9,63)))) {
            SetByte Offset(Address(loop_var7),1) HiByte(popped3);
            SetByte Offset(Offset(Address(loop_var7),1),1) LoByte(popped3);
          } else {
            Assign loop_var7 = DeAddress(Offset(Offset(Address(loop_var7),1),2));
            Goto: Label 8
          }
        } else {
          if (Equal(34,Widen(BwAnd(b9,63)))) {
            SetByte Offset(Address(loop_var7),1) LoByte(popped3);
          } else {
            Assign loop_var7 = DeAddress(Offset(Offset(Address(loop_var7),1),1));
            Goto: Label 8
          }
        }
      }
    }
  }
  Jump: 103745
LocOp 103745:
  TraceOperation 103745 (Test_attr (Var (Global 31)) (Con 27) (Branch T (Dloc 103752)));
  Let b1 = M[007268];
  Let b2 = M[007269];
  Let b3 = M[Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),3)];
  if (TestBit(b3,4)) {
    Jump: 103752
  } else {
    TraceOperation 103749 (Set_attr (Var (Global 31)) (Con 28));
    Let b4 = M[007268];
    Let b5 = M[007269];
    Let b6 = M[Offset(Offset(000378,Mul(MakeHiLo(b4,b5),14)),3)];
    SetByte Offset(Offset(000378,Mul(MakeHiLo(b4,b5),14)),3) SetBit(b6,3);
    Jump: 103752
  }
LocOp 103752:
  TraceOperation 103752 (Set_attr (Var (Global 31)) (Con 3));
  Let b1 = M[007268];
  Let b2 = M[007269];
  Let b3 = M[Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),0)];
  SetByte Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),0) SetBit(b3,4);
  TraceOperation 103755 (Set_attr (Var (Global 31)) (Con 27));
  Let b4 = M[007268];
  Let b5 = M[007269];
  Let b6 = M[Offset(Offset(000378,Mul(MakeHiLo(b4,b5),14)),3)];
  SetByte Offset(Offset(000378,Mul(MakeHiLo(b4,b5),14)),3) SetBit(b6,4);
  TraceOperation 103758 (Call (Floc 102544) [Var (Global 31)] (Global 1));
  Let b7 = M[007268];
  Let b8 = M[007269];
  PushFrame;
  PushReturnAddress 103758;
  SetLocal 1 MakeHiLo(b7,b8);
  MakeRoutineFrame 1;
  Jump: 102545
LocReturn 103758:
  SetByte 007208 HiByte(call_result);
  SetByte 007209 LoByte(call_result);
  TraceOperation 103764 (Store (Con 48) (Var (Global 1)));
  Let b1 = M[007208];
  Let b2 = M[007209];
  SetByte 007270 b1;
  SetByte 007271 b2;
  TraceOperation 103767 (CallN (Floc 103776) []);
  PushFrame;
  PushReturnAddress 103767;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  SetLocal 1 0;
  Jump: 103777
LocReturn 103767:
  TraceOperation 103770 (CallN (Floc 037120) []);
  PushFrame;
  PushReturnAddress 103770;
  MakeRoutineFrame 0;
  Jump: 037121
LocReturn 103770:
  TraceOperation 103773 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 103776:
  MakeRoutineFrame 6;
  if (LessThanByte(num_actuals,6)) {
    SetLocal 6 0;
    if (LessThanByte(num_actuals,5)) {
      SetLocal 5 0;
      if (LessThanByte(num_actuals,4)) {
        SetLocal 4 0;
        if (LessThanByte(num_actuals,3)) {
          SetLocal 3 0;
          if (LessThanByte(num_actuals,2)) {
            SetLocal 2 0;
            if (LessThanByte(num_actuals,1)) {
              SetLocal 1 0;
            }
          }
        }
      }
    }
  }
  Jump: 103777
LocOp 103777:
  TraceOperation 103777 (Jz (Var (Global 32)) (Branch F (Dloc 103781)));
  Let b1 = M[007270];
  Let b2 = M[007271];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 103780 Rtrue;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 103781
  }
LocOp 103781:
  TraceOperation 103781 (Store (Con 1) (Con 1));
  SetLocal 1 1;
  Jump: 103784
LocOp 103784:
  TraceOperation 103784 (Get_prop_addr (Var (Local 1)) (Con 25) (Global 239));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),12)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),12),1)];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let loop_var4 = DeAddress(Offset(Address(MakeHiLo(b1,b2)),Add(Mul(2,Widen(b3)),1)));
  Label 5: {
    Let b6 = M[Address(loop_var4)];
    if (IsZeroByte(b6)) {
      SetByte 007684 0;
      SetByte 007685 0;
    } else {
      if (TestBit(b6,7)) {
        Let b7 = M[Offset(Address(loop_var4),1)];
        if (Equal(25,Widen(BwAnd(b6,63)))) {
          SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var4),2)));
          SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var4),2)));
        } else {
          Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),2),Widen(BwAnd(b7,63))));
          Goto: Label 5
        }
      } else {
        if (TestBit(b6,6)) {
          if (Equal(25,Widen(BwAnd(b6,63)))) {
            SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var4),1)));
            SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var4),1)));
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),2));
            Goto: Label 5
          }
        } else {
          if (Equal(25,Widen(BwAnd(b6,63)))) {
            SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var4),1)));
            SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var4),1)));
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),1));
            Goto: Label 5
          }
        }
      }
    }
  }
  TraceOperation 103788 (Store (Con 5) (Var (Global 239)));
  Let b8 = M[007684];
  Let b9 = M[007685];
  SetLocal 5 MakeHiLo(b8,b9);
  TraceOperation 103791 (Jz (Var (Local 5)) (Branch T (Dloc 103915)));
  if (IsZero(GetLocal(5))) {
    Jump: 103915
  } else {
    TraceOperation 103795 (Test_attr (Var (Local 1)) (Con 0) (Branch T (Dloc 103915)));
    Let b10 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),0)];
    if (TestBit(b10,7)) {
      Jump: 103915
    } else {
      TraceOperation 103800 (Loadw (Var (Local 5)) (Con 0) Sp);
      Let b11 = M[Offset(Address(GetLocal(5)),0)];
      Let b12 = M[Offset(Offset(Address(GetLocal(5)),0),1)];
      PushStack MakeHiLo(b11,b12);
      TraceOperation 103804 (Call (Floc 041004) [Var Sp] Sp);
      PopStack popped13;
      PushFrame;
      PushReturnAddress 103804;
      SetLocal 1 popped13;
      MakeRoutineFrame 1;
      Jump: 041005
    }
  }
LocReturn 103804:
  PushStack call_result;
  TraceOperation 103810 (Je [Var Sp,Con 2] (Branch F (Dloc 103840)));
  PopStack popped1;
  if (Equal(popped1,2)) {
    TraceOperation 103814 (Loadw (Var (Local 5)) (Con 0) (Local 4));
    Let b2 = M[Offset(Address(GetLocal(5)),0)];
    Let b3 = M[Offset(Offset(Address(GetLocal(5)),0),1)];
    SetLocal 4 MakeHiLo(b2,b3);
    Jump: 103818
  } else {
    Jump: 103840
  }
LocOp 103818:
  TraceOperation 103818 (Call (Floc 110196) [Var (Local 4),Con 69,Var (Global 32)] Sp);
  Let b1 = M[007270];
  Let b2 = M[007271];
  PushFrame;
  PushReturnAddress 103818;
  SetLocal 1 GetLocal(4);
  SetLocal 2 69;
  SetLocal 3 MakeHiLo(b1,b2);
  MakeRoutineFrame 15;
  SetLocal 15 0;
  SetLocal 14 0;
  SetLocal 13 0;
  SetLocal 12 0;
  SetLocal 11 0;
  SetLocal 10 0;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 110197
LocReturn 103818:
  PushStack call_result;
  TraceOperation 103826 (Jz (Var Sp) (Branch T (Dloc 103835)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 103835
  } else {
    TraceOperation 103829 (Insert_obj (Var (Local 1)) (Var (Global 32)));
    Let b2 = M[007270];
    Let b3 = M[007271];
    Let b4 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),6)];
    Let b5 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),6),1)];
    if (IsZero(MakeHiLo(b4,b5))) {} else {
      Let b6 = M[Offset(Offset(000378,Mul(MakeHiLo(b4,b5),14)),10)];
      Let b7 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b4,b5),14)),10),1)];
      if (Equal(MakeHiLo(b6,b7),GetLocal(1))) {
        Let b8 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),8)];
        Let b9 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),8),1)];
        SetByte Offset(Offset(000378,Mul(MakeHiLo(b4,b5),14)),10) b8;
        SetByte Offset(Offset(Offset(000378,Mul(MakeHiLo(b4,b5),14)),10),1) b9;
      } else {
        Let loop_var10 = MakeHiLo(b6,b7);
        Label 11: {
          Let b12 = M[Offset(Offset(000378,Mul(loop_var10,14)),8)];
          Let b13 = M[Offset(Offset(Offset(000378,Mul(loop_var10,14)),8),1)];
          if (Equal(MakeHiLo(b12,b13),GetLocal(1))) {
            Let b14 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),8)];
            Let b15 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),8),1)];
            SetByte Offset(Offset(000378,Mul(loop_var10,14)),8) b14;
            SetByte Offset(Offset(Offset(000378,Mul(loop_var10,14)),8),1) b15;
          } else {
            Assign loop_var10 = MakeHiLo(b12,b13);
            Goto: Label 11
          }
        }
      }
    }
    SetByte Offset(Offset(000378,Mul(GetLocal(1),14)),6) b2;
    SetByte Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),6),1) b3;
    Let b16 = M[Offset(Offset(000378,Mul(MakeHiLo(b2,b3),14)),10)];
    Let b17 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b2,b3),14)),10),1)];
    SetByte Offset(Offset(000378,Mul(GetLocal(1),14)),8) b16;
    SetByte Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),8),1) b17;
    SetByte Offset(Offset(000378,Mul(MakeHiLo(b2,b3),14)),10) HiByte(GetLocal(1));
    SetByte Offset(Offset(Offset(000378,Mul(MakeHiLo(b2,b3),14)),10),1) LoByte(GetLocal(1));
    TraceOperation 103832 (Jump 103837);
    Jump: 103837
  }
LocOp 103835:
  TraceOperation 103835 (Remove_obj (Var (Local 1)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),6)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),6),1)];
  if (IsZero(MakeHiLo(b1,b2))) {} else {
    Let b3 = M[Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),10)];
    Let b4 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),10),1)];
    if (Equal(MakeHiLo(b3,b4),GetLocal(1))) {
      Let b5 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),8)];
      Let b6 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),8),1)];
      SetByte Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),10) b5;
      SetByte Offset(Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),10),1) b6;
    } else {
      Let loop_var7 = MakeHiLo(b3,b4);
      Label 8: {
        Let b9 = M[Offset(Offset(000378,Mul(loop_var7,14)),8)];
        Let b10 = M[Offset(Offset(Offset(000378,Mul(loop_var7,14)),8),1)];
        if (Equal(MakeHiLo(b9,b10),GetLocal(1))) {
          Let b11 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),8)];
          Let b12 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),8),1)];
          SetByte Offset(Offset(000378,Mul(loop_var7,14)),8) b11;
          SetByte Offset(Offset(Offset(000378,Mul(loop_var7,14)),8),1) b12;
        } else {
          Assign loop_var7 = MakeHiLo(b9,b10);
          Goto: Label 8
        }
      }
    }
  }
  SetByte Offset(Offset(000378,Mul(GetLocal(1),14)),6) 0;
  SetByte Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),6),1) 0;
  Jump: 103837
LocOp 103837:
  TraceOperation 103837 (Jump 103915);
  Jump: 103915
LocOp 103840:
  TraceOperation 103840 (Get_prop_addr (Var (Local 1)) (Con 25) (Global 239));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),12)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),12),1)];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let loop_var4 = DeAddress(Offset(Address(MakeHiLo(b1,b2)),Add(Mul(2,Widen(b3)),1)));
  Label 5: {
    Let b6 = M[Address(loop_var4)];
    if (IsZeroByte(b6)) {
      SetByte 007684 0;
      SetByte 007685 0;
    } else {
      if (TestBit(b6,7)) {
        Let b7 = M[Offset(Address(loop_var4),1)];
        if (Equal(25,Widen(BwAnd(b6,63)))) {
          SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var4),2)));
          SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var4),2)));
        } else {
          Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),2),Widen(BwAnd(b7,63))));
          Goto: Label 5
        }
      } else {
        if (TestBit(b6,6)) {
          if (Equal(25,Widen(BwAnd(b6,63)))) {
            SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var4),1)));
            SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var4),1)));
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),2));
            Goto: Label 5
          }
        } else {
          if (Equal(25,Widen(BwAnd(b6,63)))) {
            SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var4),1)));
            SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var4),1)));
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),1));
            Goto: Label 5
          }
        }
      }
    }
  }
  TraceOperation 103844 (Jz (Var (Global 239)) (Branch T (Dloc 103850)));
  Let b8 = M[007684];
  Let b9 = M[007685];
  if (IsZero(MakeHiLo(b8,b9))) {
    Jump: 103850
  } else {
    TraceOperation 103847 (Get_prop_len (Var (Global 239)) (Global 239));
    Let b10 = M[007684];
    Let b11 = M[007685];
    if (IsZero(MakeHiLo(b10,b11))) {
      SetByte 007684 0;
      SetByte 007685 0;
    } else {
      Let b12 = M[Offset(Address(MakeHiLo(b10,b11)),-1)];
      if (TestBit(b12,7)) {
        Let b13 = M[Offset(Address(MakeHiLo(b10,b11)),-2)];
        if (TestBit(b13,7)) {
          Let b14 = M[Offset(Offset(Address(MakeHiLo(b10,b11)),-2),1)];
          SetByte 007684 HiByte(Widen(BwAnd(b14,63)));
          SetByte 007685 LoByte(Widen(BwAnd(b14,63)));
        } else {
          if (TestBit(b13,6)) {
            SetByte 007684 0;
            SetByte 007685 2;
          } else {
            SetByte 007684 0;
            SetByte 007685 1;
          }
        }
      } else {
        Let b15 = M[Offset(Address(MakeHiLo(b10,b11)),-1)];
        if (TestBit(b15,7)) {
          Let b16 = M[Offset(Offset(Address(MakeHiLo(b10,b11)),-1),1)];
          SetByte 007684 HiByte(Widen(BwAnd(b16,63)));
          SetByte 007685 LoByte(Widen(BwAnd(b16,63)));
        } else {
          if (TestBit(b15,6)) {
            SetByte 007684 0;
            SetByte 007685 2;
          } else {
            SetByte 007684 0;
            SetByte 007685 1;
          }
        }
      }
    }
    Jump: 103850
  }
LocOp 103850:
  TraceOperation 103850 (Store (Con 2) (Var (Global 239)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  SetLocal 2 MakeHiLo(b1,b2);
  TraceOperation 103853 (Store (Con 3) (Con 0));
  SetLocal 3 0;
  Jump: 103856
LocOp 103856:
  TraceOperation 103856 (Div (Var (Local 2)) (Con 2) Sp);
  PushStack Div(GetLocal(2),2);
  TraceOperation 103860 (Jl (Var (Local 3)) (Var Sp) (Branch F (Dloc 103904)));
  PopStack popped1;
  if (LessThan(GetLocal(3),popped1)) {
    TraceOperation 103864 (Loadw (Var (Local 5)) (Var (Local 3)) (Local 4));
    Let b2 = M[Offset(Address(GetLocal(5)),Mul(2,GetLocal(3)))];
    Let b3 = M[Offset(Offset(Address(GetLocal(5)),Mul(2,GetLocal(3))),1)];
    SetLocal 4 MakeHiLo(b2,b3);
    TraceOperation 103868 (Call (Floc 041004) [Var (Local 4)] Sp);
    PushFrame;
    PushReturnAddress 103868;
    SetLocal 1 GetLocal(4);
    MakeRoutineFrame 1;
    Jump: 041005
  } else {
    Jump: 103904
  }
LocReturn 103868:
  PushStack call_result;
  TraceOperation 103874 (Je [Var Sp,Con 2] (Branch F (Dloc 103881)));
  PopStack popped1;
  if (Equal(popped1,2)) {
    TraceOperation 103878 (Jump 103818);
    Jump: 103818
  } else {
    Jump: 103881
  }
LocOp 103881:
  TraceOperation 103881 (Je [Var (Local 4),Var (Global 32)] (Branch T (Dloc 103889)));
  Let b1 = M[007270];
  Let b2 = M[007271];
  if (Equal(GetLocal(4),MakeHiLo(b1,b2))) {
    Jump: 103889
  } else {
    TraceOperation 103885 (Jin (Var (Local 4)) (Var (Global 32)) (Branch F (Dloc 103899)));
    Let b3 = M[007270];
    Let b4 = M[007271];
    Let b5 = M[Offset(Offset(000378,Mul(GetLocal(4),14)),6)];
    Let b6 = M[Offset(Offset(Offset(000378,Mul(GetLocal(4),14)),6),1)];
    if (Equal(MakeHiLo(b3,b4),MakeHiLo(b5,b6))) {
      Jump: 103889
    } else {
      Jump: 103899
    }
  }
LocOp 103889:
  TraceOperation 103889 (Jin (Var (Local 1)) (Var (Global 32)) (Branch T (Dloc 103896)));
  Let b1 = M[007270];
  Let b2 = M[007271];
  Let b3 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),6)];
  Let b4 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),6),1)];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    Jump: 103896
  } else {
    TraceOperation 103893 (Insert_obj (Var (Local 1)) (Var (Global 32)));
    Let b5 = M[007270];
    Let b6 = M[007271];
    Let b7 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),6)];
    Let b8 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),6),1)];
    if (IsZero(MakeHiLo(b7,b8))) {} else {
      Let b9 = M[Offset(Offset(000378,Mul(MakeHiLo(b7,b8),14)),10)];
      Let b10 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b7,b8),14)),10),1)];
      if (Equal(MakeHiLo(b9,b10),GetLocal(1))) {
        Let b11 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),8)];
        Let b12 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),8),1)];
        SetByte Offset(Offset(000378,Mul(MakeHiLo(b7,b8),14)),10) b11;
        SetByte Offset(Offset(Offset(000378,Mul(MakeHiLo(b7,b8),14)),10),1) b12;
      } else {
        Let loop_var13 = MakeHiLo(b9,b10);
        Label 14: {
          Let b15 = M[Offset(Offset(000378,Mul(loop_var13,14)),8)];
          Let b16 = M[Offset(Offset(Offset(000378,Mul(loop_var13,14)),8),1)];
          if (Equal(MakeHiLo(b15,b16),GetLocal(1))) {
            Let b17 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),8)];
            Let b18 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),8),1)];
            SetByte Offset(Offset(000378,Mul(loop_var13,14)),8) b17;
            SetByte Offset(Offset(Offset(000378,Mul(loop_var13,14)),8),1) b18;
          } else {
            Assign loop_var13 = MakeHiLo(b15,b16);
            Goto: Label 14
          }
        }
      }
    }
    SetByte Offset(Offset(000378,Mul(GetLocal(1),14)),6) b5;
    SetByte Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),6),1) b6;
    Let b19 = M[Offset(Offset(000378,Mul(MakeHiLo(b5,b6),14)),10)];
    Let b20 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b5,b6),14)),10),1)];
    SetByte Offset(Offset(000378,Mul(GetLocal(1),14)),8) b19;
    SetByte Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),8),1) b20;
    SetByte Offset(Offset(000378,Mul(MakeHiLo(b5,b6),14)),10) HiByte(GetLocal(1));
    SetByte Offset(Offset(Offset(000378,Mul(MakeHiLo(b5,b6),14)),10),1) LoByte(GetLocal(1));
    Jump: 103896
  }
LocOp 103896:
  TraceOperation 103896 (Store (Con 6) (Con 1));
  SetLocal 6 1;
  Jump: 103899
LocOp 103899:
  TraceOperation 103899 (Inc (Con 3));
  SetLocal 3 Add(GetLocal(3),1);
  TraceOperation 103901 (Jump 103856);
  Jump: 103856
LocOp 103904:
  TraceOperation 103904 (Jz (Var (Local 6)) (Branch F (Dloc 103915)));
  if (IsZero(GetLocal(6))) {
    TraceOperation 103907 (Get_parent (Var (Local 1)) Sp);
    Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),6)];
    Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),6),1)];
    PushStack MakeHiLo(b1,b2);
    TraceOperation 103910 (Jz (Var Sp) (Branch T (Dloc 103915)));
    PopStack popped3;
    if (IsZero(popped3)) {
      Jump: 103915
    } else {
      TraceOperation 103913 (Remove_obj (Var (Local 1)));
      Let b4 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),6)];
      Let b5 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),6),1)];
      if (IsZero(MakeHiLo(b4,b5))) {} else {
        Let b6 = M[Offset(Offset(000378,Mul(MakeHiLo(b4,b5),14)),10)];
        Let b7 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b4,b5),14)),10),1)];
        if (Equal(MakeHiLo(b6,b7),GetLocal(1))) {
          Let b8 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),8)];
          Let b9 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),8),1)];
          SetByte Offset(Offset(000378,Mul(MakeHiLo(b4,b5),14)),10) b8;
          SetByte Offset(Offset(Offset(000378,Mul(MakeHiLo(b4,b5),14)),10),1) b9;
        } else {
          Let loop_var10 = MakeHiLo(b6,b7);
          Label 11: {
            Let b12 = M[Offset(Offset(000378,Mul(loop_var10,14)),8)];
            Let b13 = M[Offset(Offset(Offset(000378,Mul(loop_var10,14)),8),1)];
            if (Equal(MakeHiLo(b12,b13),GetLocal(1))) {
              Let b14 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),8)];
              Let b15 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),8),1)];
              SetByte Offset(Offset(000378,Mul(loop_var10,14)),8) b14;
              SetByte Offset(Offset(Offset(000378,Mul(loop_var10,14)),8),1) b15;
            } else {
              Assign loop_var10 = MakeHiLo(b12,b13);
              Goto: Label 11
            }
          }
        }
      }
      SetByte Offset(Offset(000378,Mul(GetLocal(1),14)),6) 0;
      SetByte Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),6),1) 0;
      Jump: 103915
    }
  } else {
    Jump: 103915
  }
LocOp 103915:
  TraceOperation 103915 (Inc (Con 1));
  SetLocal 1 Add(GetLocal(1),1);
  TraceOperation 103917 (Jg (Var (Local 1)) (Con 72) (Branch T (Dloc 103926)));
  if (GreaterThan(GetLocal(1),72)) {
    Jump: 103926
  } else {
    TraceOperation 103923 (Jump 103784);
    Jump: 103784
  }
LocOp 103926:
  TraceOperation 103926 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 103928:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 103929
LocOp 103929:
  TraceOperation 103929 (Call (Floc 026172) [Var (Local 1),Con 19] Sp);
  PushFrame;
  PushReturnAddress 103929;
  SetLocal 1 GetLocal(1);
  SetLocal 2 19;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 103929:
  PushStack call_result;
  TraceOperation 103936 (Jz (Var Sp) (Branch F (Dloc 103947)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 103939 (Call (Floc 086692) [Con 53,Var (Local 1)] Sp);
    PushFrame;
    PushReturnAddress 103939;
    SetLocal 1 53;
    SetLocal 2 GetLocal(1);
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 086693
  } else {
    Jump: 103947
  }
LocReturn 103939:
  PushStack call_result;
  TraceOperation 103946 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 103947:
  TraceOperation 103947 (Get_prop_addr (Var (Local 1)) (Con 25) (Global 239));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),12)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),12),1)];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let loop_var4 = DeAddress(Offset(Address(MakeHiLo(b1,b2)),Add(Mul(2,Widen(b3)),1)));
  Label 5: {
    Let b6 = M[Address(loop_var4)];
    if (IsZeroByte(b6)) {
      SetByte 007684 0;
      SetByte 007685 0;
    } else {
      if (TestBit(b6,7)) {
        Let b7 = M[Offset(Address(loop_var4),1)];
        if (Equal(25,Widen(BwAnd(b6,63)))) {
          SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var4),2)));
          SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var4),2)));
        } else {
          Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),2),Widen(BwAnd(b7,63))));
          Goto: Label 5
        }
      } else {
        if (TestBit(b6,6)) {
          if (Equal(25,Widen(BwAnd(b6,63)))) {
            SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var4),1)));
            SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var4),1)));
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),2));
            Goto: Label 5
          }
        } else {
          if (Equal(25,Widen(BwAnd(b6,63)))) {
            SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var4),1)));
            SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var4),1)));
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),1));
            Goto: Label 5
          }
        }
      }
    }
  }
  TraceOperation 103951 (Jz (Var (Global 239)) (Branch T (Dloc 103957)));
  Let b8 = M[007684];
  Let b9 = M[007685];
  if (IsZero(MakeHiLo(b8,b9))) {
    Jump: 103957
  } else {
    TraceOperation 103954 (Get_prop_len (Var (Global 239)) (Global 239));
    Let b10 = M[007684];
    Let b11 = M[007685];
    if (IsZero(MakeHiLo(b10,b11))) {
      SetByte 007684 0;
      SetByte 007685 0;
    } else {
      Let b12 = M[Offset(Address(MakeHiLo(b10,b11)),-1)];
      if (TestBit(b12,7)) {
        Let b13 = M[Offset(Address(MakeHiLo(b10,b11)),-2)];
        if (TestBit(b13,7)) {
          Let b14 = M[Offset(Offset(Address(MakeHiLo(b10,b11)),-2),1)];
          SetByte 007684 HiByte(Widen(BwAnd(b14,63)));
          SetByte 007685 LoByte(Widen(BwAnd(b14,63)));
        } else {
          if (TestBit(b13,6)) {
            SetByte 007684 0;
            SetByte 007685 2;
          } else {
            SetByte 007684 0;
            SetByte 007685 1;
          }
        }
      } else {
        Let b15 = M[Offset(Address(MakeHiLo(b10,b11)),-1)];
        if (TestBit(b15,7)) {
          Let b16 = M[Offset(Offset(Address(MakeHiLo(b10,b11)),-1),1)];
          SetByte 007684 HiByte(Widen(BwAnd(b16,63)));
          SetByte 007685 LoByte(Widen(BwAnd(b16,63)));
        } else {
          if (TestBit(b15,6)) {
            SetByte 007684 0;
            SetByte 007685 2;
          } else {
            SetByte 007684 0;
            SetByte 007685 1;
          }
        }
      }
    }
    Jump: 103957
  }
LocOp 103957:
  TraceOperation 103957 (Push (Var (Global 239)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 103960 (Jg (Var Sp) (Con 2) (Branch F (Dloc 103979)));
  PopStack popped3;
  if (GreaterThan(popped3,2)) {
    TraceOperation 103964 (Get_prop_addr (Var (Local 1)) (Con 25) (Global 239));
    Let b4 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),12)];
    Let b5 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),12),1)];
    Let b6 = M[Address(MakeHiLo(b4,b5))];
    Let loop_var7 = DeAddress(Offset(Address(MakeHiLo(b4,b5)),Add(Mul(2,Widen(b6)),1)));
    Label 8: {
      Let b9 = M[Address(loop_var7)];
      if (IsZeroByte(b9)) {
        SetByte 007684 0;
        SetByte 007685 0;
      } else {
        if (TestBit(b9,7)) {
          Let b10 = M[Offset(Address(loop_var7),1)];
          if (Equal(25,Widen(BwAnd(b9,63)))) {
            SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var7),2)));
            SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var7),2)));
          } else {
            Assign loop_var7 = DeAddress(Offset(Offset(Address(loop_var7),2),Widen(BwAnd(b10,63))));
            Goto: Label 8
          }
        } else {
          if (TestBit(b9,6)) {
            if (Equal(25,Widen(BwAnd(b9,63)))) {
              SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var7),1)));
              SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var7),1)));
            } else {
              Assign loop_var7 = DeAddress(Offset(Offset(Address(loop_var7),1),2));
              Goto: Label 8
            }
          } else {
            if (Equal(25,Widen(BwAnd(b9,63)))) {
              SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var7),1)));
              SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var7),1)));
            } else {
              Assign loop_var7 = DeAddress(Offset(Offset(Address(loop_var7),1),1));
              Goto: Label 8
            }
          }
        }
      }
    }
    TraceOperation 103968 (Store (Con 4) (Var (Global 239)));
    Let b11 = M[007684];
    Let b12 = M[007685];
    SetLocal 4 MakeHiLo(b11,b12);
    TraceOperation 103971 (Storew (Var (Local 4)) (Con 0) (Var (Local 2)));
    SetByte Offset(Address(GetLocal(4)),0) HiByte(GetLocal(2));
    SetByte Offset(Offset(Address(GetLocal(4)),0),1) LoByte(GetLocal(2));
    TraceOperation 103976 (Jump 103984);
    Jump: 103984
  } else {
    Jump: 103979
  }
LocOp 103979:
  TraceOperation 103979 (Put_prop (Var (Local 1)) (Con 25) (Var (Local 2)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),12)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),12),1)];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let loop_var4 = DeAddress(Offset(Address(MakeHiLo(b1,b2)),Add(Mul(2,Widen(b3)),1)));
  Label 5: {
    Let b6 = M[Address(loop_var4)];
    if (IsZeroByte(b6)) {
      Error: ("putProp",25)
    } else {
      if (TestBit(b6,7)) {
        Let b7 = M[Offset(Address(loop_var4),1)];
        if (Equal(25,Widen(BwAnd(b6,63)))) {
          if (Equal(Widen(BwAnd(b7,63)),2)) {
            SetByte Offset(Address(loop_var4),2) HiByte(GetLocal(2));
            SetByte Offset(Offset(Address(loop_var4),2),1) LoByte(GetLocal(2));
          } else {
            SetByte Offset(Address(loop_var4),2) LoByte(GetLocal(2));
          }
        } else {
          Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),2),Widen(BwAnd(b7,63))));
          Goto: Label 5
        }
      } else {
        if (TestBit(b6,6)) {
          if (Equal(25,Widen(BwAnd(b6,63)))) {
            SetByte Offset(Address(loop_var4),1) HiByte(GetLocal(2));
            SetByte Offset(Offset(Address(loop_var4),1),1) LoByte(GetLocal(2));
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),2));
            Goto: Label 5
          }
        } else {
          if (Equal(25,Widen(BwAnd(b6,63)))) {
            SetByte Offset(Address(loop_var4),1) LoByte(GetLocal(2));
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),1));
            Goto: Label 5
          }
        }
      }
    }
  }
  Jump: 103984
LocOp 103984:
  TraceOperation 103984 (Clear_attr (Var (Local 1)) (Con 0));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),0)];
  SetByte Offset(Offset(000378,Mul(GetLocal(1),14)),0) ClearBit(b1,7);
  TraceOperation 103987 (CallN (Floc 103776) []);
  PushFrame;
  PushReturnAddress 103987;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  SetLocal 1 0;
  Jump: 103777
LocReturn 103987:
  TraceOperation 103990 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 103992:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 103993
LocOp 103993:
  TraceOperation 103993 (Jz (Var (Local 1)) (Branch T Dfalse));
  if (IsZero(GetLocal(1))) {
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 0;
    JumpIndirect: (return) return_address_1
  } else {
    TraceOperation 103996 (Jin (Var (Local 1)) (Var (Local 2)) (Branch T (Dloc 104007)));
    Let b2 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),6)];
    Let b3 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),6),1)];
    if (Equal(GetLocal(2),MakeHiLo(b2,b3))) {
      Jump: 104007
    } else {
      TraceOperation 104000 (CallN (Floc 103224) [Var (Local 1),Var (Local 2),Var (Local 3)]);
      PushFrame;
      PushReturnAddress 104000;
      SetLocal 1 GetLocal(1);
      SetLocal 2 GetLocal(2);
      SetLocal 3 GetLocal(3);
      MakeRoutineFrame 5;
      SetLocal 5 0;
      SetLocal 4 0;
      Jump: 103225
    }
  }
LocReturn 104000:
  Jump: 104007
LocOp 104007:
  TraceOperation 104007 (Set_attr (Var (Local 1)) (Con 22));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),2)];
  SetByte Offset(Offset(000378,Mul(GetLocal(1),14)),2) SetBit(b1,1);
  TraceOperation 104010 Rtrue;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult 1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 104012:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 104013
LocOp 104013:
  TraceOperation 104013 (Call (Floc 026172) [Var (Local 1),Con 13] Sp);
  PushFrame;
  PushReturnAddress 104013;
  SetLocal 1 GetLocal(1);
  SetLocal 2 13;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 104013:
  PushStack call_result;
  TraceOperation 104020 (Jz (Var Sp) (Branch T (Dloc 104111)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 104111
  } else {
    TraceOperation 104024 (Jin (Var (Local 2)) (Con 6) (Branch F (Dloc 104111)));
    Let b2 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),6)];
    Let b3 = M[Offset(Offset(Offset(000378,Mul(GetLocal(2),14)),6),1)];
    if (Equal(6,MakeHiLo(b2,b3))) {
      TraceOperation 104029 (Get_prop (Var (Local 2)) (Con 23) (Global 239));
      Let b4 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),12)];
      Let b5 = M[Offset(Offset(Offset(000378,Mul(GetLocal(2),14)),12),1)];
      Let b6 = M[Address(MakeHiLo(b4,b5))];
      Let loop_var7 = DeAddress(Offset(Address(MakeHiLo(b4,b5)),Add(Mul(2,Widen(b6)),1)));
      Label 8: {
        Let b9 = M[Address(loop_var7)];
        if (IsZeroByte(b9)) {
          Let b10 = M[000310];
          Let b11 = M[000311];
          SetByte 007684 b10;
          SetByte 007685 b11;
        } else {
          if (TestBit(b9,7)) {
            Let b12 = M[Offset(Address(loop_var7),1)];
            if (Equal(23,Widen(BwAnd(b9,63)))) {
              if (Equal(Widen(BwAnd(b12,63)),2)) {
                Let b13 = M[Offset(Address(loop_var7),2)];
                Let b14 = M[Offset(Offset(Address(loop_var7),2),1)];
                SetByte 007684 b13;
                SetByte 007685 b14;
              } else {
                Let b15 = M[Offset(Address(loop_var7),2)];
                SetByte 007684 HiByte(Widen(b15));
                SetByte 007685 LoByte(Widen(b15));
              }
            } else {
              Assign loop_var7 = DeAddress(Offset(Offset(Address(loop_var7),2),Widen(BwAnd(b12,63))));
              Goto: Label 8
            }
          } else {
            if (TestBit(b9,6)) {
              if (Equal(23,Widen(BwAnd(b9,63)))) {
                Let b16 = M[Offset(Address(loop_var7),1)];
                Let b17 = M[Offset(Offset(Address(loop_var7),1),1)];
                SetByte 007684 b16;
                SetByte 007685 b17;
              } else {
                Assign loop_var7 = DeAddress(Offset(Offset(Address(loop_var7),1),2));
                Goto: Label 8
              }
            } else {
              if (Equal(23,Widen(BwAnd(b9,63)))) {
                Let b18 = M[Offset(Address(loop_var7),1)];
                SetByte 007684 HiByte(Widen(b18));
                SetByte 007685 LoByte(Widen(b18));
              } else {
                Assign loop_var7 = DeAddress(Offset(Offset(Address(loop_var7),1),1));
                Goto: Label 8
              }
            }
          }
        }
      }
      TraceOperation 104033 (Push (Var (Global 239)));
      Let b19 = M[007684];
      Let b20 = M[007685];
      PushStack MakeHiLo(b19,b20);
      TraceOperation 104036 (Call (Floc 111316) [Var (Local 1),Var Sp] Sp);
      PopStack popped21;
      PushFrame;
      PushReturnAddress 104036;
      SetLocal 1 GetLocal(1);
      SetLocal 2 popped21;
      MakeRoutineFrame 2;
      Jump: 111317
    } else {
      Jump: 104111
    }
  }
LocReturn 104036:
  PushStack call_result;
  TraceOperation 104043 (Jz (Var Sp) (Branch T (Dloc 104111)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 104111
  } else {
    TraceOperation 104047 (Get_prop (Var (Local 2)) (Con 23) (Global 239));
    Let b2 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),12)];
    Let b3 = M[Offset(Offset(Offset(000378,Mul(GetLocal(2),14)),12),1)];
    Let b4 = M[Address(MakeHiLo(b2,b3))];
    Let loop_var5 = DeAddress(Offset(Address(MakeHiLo(b2,b3)),Add(Mul(2,Widen(b4)),1)));
    Label 6: {
      Let b7 = M[Address(loop_var5)];
      if (IsZeroByte(b7)) {
        Let b8 = M[000310];
        Let b9 = M[000311];
        SetByte 007684 b8;
        SetByte 007685 b9;
      } else {
        if (TestBit(b7,7)) {
          Let b10 = M[Offset(Address(loop_var5),1)];
          if (Equal(23,Widen(BwAnd(b7,63)))) {
            if (Equal(Widen(BwAnd(b10,63)),2)) {
              Let b11 = M[Offset(Address(loop_var5),2)];
              Let b12 = M[Offset(Offset(Address(loop_var5),2),1)];
              SetByte 007684 b11;
              SetByte 007685 b12;
            } else {
              Let b13 = M[Offset(Address(loop_var5),2)];
              SetByte 007684 HiByte(Widen(b13));
              SetByte 007685 LoByte(Widen(b13));
            }
          } else {
            Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),2),Widen(BwAnd(b10,63))));
            Goto: Label 6
          }
        } else {
          if (TestBit(b7,6)) {
            if (Equal(23,Widen(BwAnd(b7,63)))) {
              Let b14 = M[Offset(Address(loop_var5),1)];
              Let b15 = M[Offset(Offset(Address(loop_var5),1),1)];
              SetByte 007684 b14;
              SetByte 007685 b15;
            } else {
              Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),1),2));
              Goto: Label 6
            }
          } else {
            if (Equal(23,Widen(BwAnd(b7,63)))) {
              Let b16 = M[Offset(Address(loop_var5),1)];
              SetByte 007684 HiByte(Widen(b16));
              SetByte 007685 LoByte(Widen(b16));
            } else {
              Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),1),1));
              Goto: Label 6
            }
          }
        }
      }
    }
    TraceOperation 104051 (Push (Var (Global 239)));
    Let b17 = M[007684];
    Let b18 = M[007685];
    PushStack MakeHiLo(b17,b18);
    TraceOperation 104054 (Call (Floc 110116) [Var (Local 1),Var Sp] (Local 3));
    PopStack popped19;
    PushFrame;
    PushReturnAddress 104054;
    SetLocal 1 GetLocal(1);
    SetLocal 2 popped19;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 110117
  }
LocReturn 104054:
  SetLocal 3 call_result;
  TraceOperation 104061 (Call (Floc 026172) [Var (Local 3),Con 13] Sp);
  PushFrame;
  PushReturnAddress 104061;
  SetLocal 1 GetLocal(3);
  SetLocal 2 13;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 104061:
  PushStack call_result;
  TraceOperation 104068 (Jz (Var Sp) (Branch T (Dloc 104073)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 104073
  } else {
    TraceOperation 104071 (Ret (Var (Local 3)));
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult GetLocal(3);
    JumpIndirect: (return) return_address_2
  }
LocOp 104073:
  TraceOperation 104073 (Call (Floc 026172) [Var (Local 3),Con 16] Sp);
  PushFrame;
  PushReturnAddress 104073;
  SetLocal 1 GetLocal(3);
  SetLocal 2 16;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 104073:
  PushStack call_result;
  TraceOperation 104080 (Jz (Var Sp) (Branch T (Dloc 104111)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 104111
  } else {
    TraceOperation 104083 (Push (Var (Global 1)));
    Let b2 = M[007208];
    Let b3 = M[007209];
    PushStack MakeHiLo(b2,b3);
    TraceOperation 104086 (Store (Con 17) (Var (Local 1)));
    SetByte 007208 HiByte(GetLocal(1));
    SetByte 007209 LoByte(GetLocal(1));
    TraceOperation 104089 (Call (Floc 110196) [Var (Local 3),Con 24] (Local 4));
    PushFrame;
    PushReturnAddress 104089;
    SetLocal 1 GetLocal(3);
    SetLocal 2 24;
    MakeRoutineFrame 15;
    SetLocal 15 0;
    SetLocal 14 0;
    SetLocal 13 0;
    SetLocal 12 0;
    SetLocal 11 0;
    SetLocal 10 0;
    SetLocal 9 0;
    SetLocal 8 0;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 110197
  }
LocReturn 104089:
  SetLocal 4 call_result;
  TraceOperation 104096 (Pull (Con 17));
  PopStack popped1;
  SetByte 007208 HiByte(popped1);
  SetByte 007209 LoByte(popped1);
  TraceOperation 104099 (Call (Floc 026172) [Var (Local 4),Con 13] Sp);
  PushFrame;
  PushReturnAddress 104099;
  SetLocal 1 GetLocal(4);
  SetLocal 2 13;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 104099:
  PushStack call_result;
  TraceOperation 104106 (Jz (Var Sp) (Branch T (Dloc 104111)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 104111
  } else {
    TraceOperation 104109 (Ret (Var (Local 4)));
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult GetLocal(4);
    JumpIndirect: (return) return_address_2
  }
LocOp 104111:
  TraceOperation 104111 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 104184:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 104185
LocOp 104185:
  TraceOperation 104185 (CallN (Floc 084628) []);
  PushFrame;
  PushReturnAddress 104185;
  MakeRoutineFrame 0;
  Jump: 084629
LocReturn 104185:
  TraceOperation 104188 (Get_prop (Var (Local 2)) (Con 23) (Global 239));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),12)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(2),14)),12),1)];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let loop_var4 = DeAddress(Offset(Address(MakeHiLo(b1,b2)),Add(Mul(2,Widen(b3)),1)));
  Label 5: {
    Let b6 = M[Address(loop_var4)];
    if (IsZeroByte(b6)) {
      Let b7 = M[000310];
      Let b8 = M[000311];
      SetByte 007684 b7;
      SetByte 007685 b8;
    } else {
      if (TestBit(b6,7)) {
        Let b9 = M[Offset(Address(loop_var4),1)];
        if (Equal(23,Widen(BwAnd(b6,63)))) {
          if (Equal(Widen(BwAnd(b9,63)),2)) {
            Let b10 = M[Offset(Address(loop_var4),2)];
            Let b11 = M[Offset(Offset(Address(loop_var4),2),1)];
            SetByte 007684 b10;
            SetByte 007685 b11;
          } else {
            Let b12 = M[Offset(Address(loop_var4),2)];
            SetByte 007684 HiByte(Widen(b12));
            SetByte 007685 LoByte(Widen(b12));
          }
        } else {
          Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),2),Widen(BwAnd(b9,63))));
          Goto: Label 5
        }
      } else {
        if (TestBit(b6,6)) {
          if (Equal(23,Widen(BwAnd(b6,63)))) {
            Let b13 = M[Offset(Address(loop_var4),1)];
            Let b14 = M[Offset(Offset(Address(loop_var4),1),1)];
            SetByte 007684 b13;
            SetByte 007685 b14;
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),2));
            Goto: Label 5
          }
        } else {
          if (Equal(23,Widen(BwAnd(b6,63)))) {
            Let b15 = M[Offset(Address(loop_var4),1)];
            SetByte 007684 HiByte(Widen(b15));
            SetByte 007685 LoByte(Widen(b15));
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),1));
            Goto: Label 5
          }
        }
      }
    }
  }
  TraceOperation 104192 (Store (Con 4) (Var (Global 239)));
  Let b16 = M[007684];
  Let b17 = M[007685];
  SetLocal 4 MakeHiLo(b16,b17);
  TraceOperation 104195 (Call (Floc 111316) [Var (Local 1),Var (Local 4)] Sp);
  PushFrame;
  PushReturnAddress 104195;
  SetLocal 1 GetLocal(1);
  SetLocal 2 GetLocal(4);
  MakeRoutineFrame 2;
  Jump: 111317
LocReturn 104195:
  PushStack call_result;
  TraceOperation 104202 (Jz (Var Sp) (Branch T (Dloc 104266)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 104266
  } else {
    TraceOperation 104206 (Call (Floc 110116) [Var (Local 1),Var (Local 4)] Sp);
    PushFrame;
    PushReturnAddress 104206;
    SetLocal 1 GetLocal(1);
    SetLocal 2 GetLocal(4);
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 110117
  }
LocReturn 104206:
  PushStack call_result;
  TraceOperation 104213 (Jz (Var Sp) (Branch T (Dloc 104233)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 104233
  } else {
    TraceOperation 104216 (Call (Floc 110116) [Var (Local 1),Var (Local 4)] Sp);
    PushFrame;
    PushReturnAddress 104216;
    SetLocal 1 GetLocal(1);
    SetLocal 2 GetLocal(4);
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 110117
  }
LocReturn 104216:
  PushStack call_result;
  TraceOperation 104223 (Call (Floc 026172) [Var Sp,Con 13] Sp);
  PopStack popped1;
  PushFrame;
  PushReturnAddress 104223;
  SetLocal 1 popped1;
  SetLocal 2 13;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 104223:
  PushStack call_result;
  TraceOperation 104230 (Jz (Var Sp) (Branch T (Dloc 104241)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 104241
  } else {
    Jump: 104233
  }
LocOp 104233:
  TraceOperation 104233 (CallN (Floc 110088) [Var (Local 1),Var (Local 4),Var (Local 3)]);
  PushFrame;
  PushReturnAddress 104233;
  SetLocal 1 GetLocal(1);
  SetLocal 2 GetLocal(4);
  SetLocal 3 GetLocal(3);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 110089
LocReturn 104233:
  TraceOperation 104240 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 104241:
  TraceOperation 104241 (Call (Floc 110116) [Var (Local 1),Var (Local 4)] Sp);
  PushFrame;
  PushReturnAddress 104241;
  SetLocal 1 GetLocal(1);
  SetLocal 2 GetLocal(4);
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 110117
LocReturn 104241:
  PushStack call_result;
  TraceOperation 104248 (Call (Floc 026172) [Var Sp,Con 16] Sp);
  PopStack popped1;
  PushFrame;
  PushReturnAddress 104248;
  SetLocal 1 popped1;
  SetLocal 2 16;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 104248:
  PushStack call_result;
  TraceOperation 104255 (Jz (Var Sp) (Branch T (Dloc 104266)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 104266
  } else {
    TraceOperation 104258 (CallN (Floc 086692) [Con 2,Var (Local 1),Var (Local 2)]);
    PushFrame;
    PushReturnAddress 104258;
    SetLocal 1 2;
    SetLocal 2 GetLocal(1);
    SetLocal 3 GetLocal(2);
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    Jump: 086693
  }
LocReturn 104258:
  TraceOperation 104265 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 104266:
  TraceOperation 104266 (CallN (Floc 086692) [Con 3,Var (Local 1),Var (Local 2)]);
  PushFrame;
  PushReturnAddress 104266;
  SetLocal 1 3;
  SetLocal 2 GetLocal(1);
  SetLocal 3 GetLocal(2);
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 086693
LocReturn 104266:
  TraceOperation 104273 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 104276:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 104277
LocOp 104277:
  TraceOperation 104277 (CallN (Floc 084628) []);
  PushFrame;
  PushReturnAddress 104277;
  MakeRoutineFrame 0;
  Jump: 084629
LocReturn 104277:
  TraceOperation 104280 (Get_prop (Var (Local 2)) (Con 23) (Global 239));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),12)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(2),14)),12),1)];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let loop_var4 = DeAddress(Offset(Address(MakeHiLo(b1,b2)),Add(Mul(2,Widen(b3)),1)));
  Label 5: {
    Let b6 = M[Address(loop_var4)];
    if (IsZeroByte(b6)) {
      Let b7 = M[000310];
      Let b8 = M[000311];
      SetByte 007684 b7;
      SetByte 007685 b8;
    } else {
      if (TestBit(b6,7)) {
        Let b9 = M[Offset(Address(loop_var4),1)];
        if (Equal(23,Widen(BwAnd(b6,63)))) {
          if (Equal(Widen(BwAnd(b9,63)),2)) {
            Let b10 = M[Offset(Address(loop_var4),2)];
            Let b11 = M[Offset(Offset(Address(loop_var4),2),1)];
            SetByte 007684 b10;
            SetByte 007685 b11;
          } else {
            Let b12 = M[Offset(Address(loop_var4),2)];
            SetByte 007684 HiByte(Widen(b12));
            SetByte 007685 LoByte(Widen(b12));
          }
        } else {
          Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),2),Widen(BwAnd(b9,63))));
          Goto: Label 5
        }
      } else {
        if (TestBit(b6,6)) {
          if (Equal(23,Widen(BwAnd(b6,63)))) {
            Let b13 = M[Offset(Address(loop_var4),1)];
            Let b14 = M[Offset(Offset(Address(loop_var4),1),1)];
            SetByte 007684 b13;
            SetByte 007685 b14;
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),2));
            Goto: Label 5
          }
        } else {
          if (Equal(23,Widen(BwAnd(b6,63)))) {
            Let b15 = M[Offset(Address(loop_var4),1)];
            SetByte 007684 HiByte(Widen(b15));
            SetByte 007685 LoByte(Widen(b15));
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),1));
            Goto: Label 5
          }
        }
      }
    }
  }
  TraceOperation 104284 (Store (Con 4) (Var (Global 239)));
  Let b16 = M[007684];
  Let b17 = M[007685];
  SetLocal 4 MakeHiLo(b16,b17);
  TraceOperation 104287 (Call (Floc 026172) [Var (Local 1),Con 16] Sp);
  PushFrame;
  PushReturnAddress 104287;
  SetLocal 1 GetLocal(1);
  SetLocal 2 16;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 104287:
  PushStack call_result;
  TraceOperation 104294 (Jz (Var Sp) (Branch T (Dloc 104305)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 104305
  } else {
    TraceOperation 104297 (CallN (Floc 086692) [Con 2,Var (Local 1),Var (Local 2)]);
    PushFrame;
    PushReturnAddress 104297;
    SetLocal 1 2;
    SetLocal 2 GetLocal(1);
    SetLocal 3 GetLocal(2);
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    Jump: 086693
  }
LocReturn 104297:
  TraceOperation 104304 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 104305:
  TraceOperation 104305 (Call (Floc 111316) [Var (Local 1),Var (Local 4)] Sp);
  PushFrame;
  PushReturnAddress 104305;
  SetLocal 1 GetLocal(1);
  SetLocal 2 GetLocal(4);
  MakeRoutineFrame 2;
  Jump: 111317
LocReturn 104305:
  PushStack call_result;
  TraceOperation 104312 (Jz (Var Sp) (Branch T (Dloc 104333)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 104333
  } else {
    TraceOperation 104315 (Call (Floc 110116) [Var (Local 1),Var (Local 4)] Sp);
    PushFrame;
    PushReturnAddress 104315;
    SetLocal 1 GetLocal(1);
    SetLocal 2 GetLocal(4);
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 110117
  }
LocReturn 104315:
  PushStack call_result;
  TraceOperation 104322 (Je [Var Sp,Var (Local 3)] (Branch F (Dloc 104333)));
  PopStack popped1;
  if (Equal(popped1,GetLocal(3))) {
    TraceOperation 104326 (CallN (Floc 110088) [Var (Local 1),Var (Local 4),Con 0]);
    PushFrame;
    PushReturnAddress 104326;
    SetLocal 1 GetLocal(1);
    SetLocal 2 GetLocal(4);
    SetLocal 3 0;
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 110089
  } else {
    Jump: 104333
  }
LocReturn 104326:
  Jump: 104333
LocOp 104333:
  TraceOperation 104333 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 104336:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 104337
LocOp 104337:
  TraceOperation 104337 (Get_child (Con 6) Sp (Branch F (Dloc 104341)));
  Let b1 = M[000472];
  Let b2 = M[000473];
  PushStack MakeHiLo(b1,b2);
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 104341
  } else {
    Jump: 104341
  }
LocOp 104341:
  TraceOperation 104341 (Pull (Con 3));
  PopStack popped1;
  SetLocal 3 popped1;
  TraceOperation 104344 (Jz (Var (Local 3)) (Branch T (Dloc 104380)));
  if (IsZero(GetLocal(3))) {
    Jump: 104380
  } else {
    Jump: 104347
  }
LocOp 104347:
  TraceOperation 104347 (Get_prop (Var (Local 3)) (Con 23) (Global 239));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(3),14)),12)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(3),14)),12),1)];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let loop_var4 = DeAddress(Offset(Address(MakeHiLo(b1,b2)),Add(Mul(2,Widen(b3)),1)));
  Label 5: {
    Let b6 = M[Address(loop_var4)];
    if (IsZeroByte(b6)) {
      Let b7 = M[000310];
      Let b8 = M[000311];
      SetByte 007684 b7;
      SetByte 007685 b8;
    } else {
      if (TestBit(b6,7)) {
        Let b9 = M[Offset(Address(loop_var4),1)];
        if (Equal(23,Widen(BwAnd(b6,63)))) {
          if (Equal(Widen(BwAnd(b9,63)),2)) {
            Let b10 = M[Offset(Address(loop_var4),2)];
            Let b11 = M[Offset(Offset(Address(loop_var4),2),1)];
            SetByte 007684 b10;
            SetByte 007685 b11;
          } else {
            Let b12 = M[Offset(Address(loop_var4),2)];
            SetByte 007684 HiByte(Widen(b12));
            SetByte 007685 LoByte(Widen(b12));
          }
        } else {
          Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),2),Widen(BwAnd(b9,63))));
          Goto: Label 5
        }
      } else {
        if (TestBit(b6,6)) {
          if (Equal(23,Widen(BwAnd(b6,63)))) {
            Let b13 = M[Offset(Address(loop_var4),1)];
            Let b14 = M[Offset(Offset(Address(loop_var4),1),1)];
            SetByte 007684 b13;
            SetByte 007685 b14;
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),2));
            Goto: Label 5
          }
        } else {
          if (Equal(23,Widen(BwAnd(b6,63)))) {
            Let b15 = M[Offset(Address(loop_var4),1)];
            SetByte 007684 HiByte(Widen(b15));
            SetByte 007685 LoByte(Widen(b15));
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),1));
            Goto: Label 5
          }
        }
      }
    }
  }
  TraceOperation 104351 (Store (Con 4) (Var (Global 239)));
  Let b16 = M[007684];
  Let b17 = M[007685];
  SetLocal 4 MakeHiLo(b16,b17);
  TraceOperation 104354 (Call (Floc 111316) [Var (Local 1),Var (Local 4)] Sp);
  PushFrame;
  PushReturnAddress 104354;
  SetLocal 1 GetLocal(1);
  SetLocal 2 GetLocal(4);
  MakeRoutineFrame 2;
  Jump: 111317
LocReturn 104354:
  PushStack call_result;
  TraceOperation 104361 (Jz (Var Sp) (Branch T (Dloc 104375)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 104375
  } else {
    TraceOperation 104364 (Call (Floc 110116) [Var (Local 1),Var (Local 4)] Sp);
    PushFrame;
    PushReturnAddress 104364;
    SetLocal 1 GetLocal(1);
    SetLocal 2 GetLocal(4);
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 110117
  }
LocReturn 104364:
  PushStack call_result;
  TraceOperation 104371 (Je [Var (Local 2),Var Sp] (Branch T Dtrue));
  PopStack popped1;
  if (Equal(GetLocal(2),popped1)) {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  } else {
    Jump: 104375
  }
LocOp 104375:
  TraceOperation 104375 (Get_sibling (Var (Local 3)) (Local 3) (Branch T (Dloc 104347)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(3),14)),8)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(3),14)),8),1)];
  SetLocal 3 MakeHiLo(b1,b2);
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 104380
  } else {
    Jump: 104347
  }
LocOp 104380:
  TraceOperation 104380 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 104384:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 104385
LocOp 104385:
  TraceOperation 104385 (Jz (Var (Local 1)) (Branch T Dfalse));
  if (IsZero(GetLocal(1))) {
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 0;
    JumpIndirect: (return) return_address_1
  } else {
    TraceOperation 104388 (Jz (Var (Local 2)) (Branch T Dfalse));
    if (IsZero(GetLocal(2))) {
      PopFrame;
      PopReturnAddress return_address_2;
      SetResult 0;
      JumpIndirect: (return) return_address_2
    } else {
      TraceOperation 104391 (Call (Floc 026172) [Var (Local 1),Con 13] Sp);
      PushFrame;
      PushReturnAddress 104391;
      SetLocal 1 GetLocal(1);
      SetLocal 2 13;
      MakeRoutineFrame 6;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      SetLocal 3 0;
      Jump: 026173
    }
  }
LocReturn 104391:
  PushStack call_result;
  TraceOperation 104398 (Jz (Var Sp) (Branch F (Dloc 104407)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 104401 (Call (Floc 102544) [Var (Local 1)] (Local 1));
    PushFrame;
    PushReturnAddress 104401;
    SetLocal 1 GetLocal(1);
    MakeRoutineFrame 1;
    Jump: 102545
  } else {
    Jump: 104407
  }
LocReturn 104401:
  SetLocal 1 call_result;
  Jump: 104407
LocOp 104407:
  TraceOperation 104407 (Jz (Var (Local 1)) (Branch T Dfalse));
  if (IsZero(GetLocal(1))) {
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 0;
    JumpIndirect: (return) return_address_1
  } else {
    TraceOperation 104410 (Get_prop (Var (Local 1)) (Con 29) (Global 239));
    Let b2 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),12)];
    Let b3 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),12),1)];
    Let b4 = M[Address(MakeHiLo(b2,b3))];
    Let loop_var5 = DeAddress(Offset(Address(MakeHiLo(b2,b3)),Add(Mul(2,Widen(b4)),1)));
    Label 6: {
      Let b7 = M[Address(loop_var5)];
      if (IsZeroByte(b7)) {
        Let b8 = M[000322];
        Let b9 = M[000323];
        SetByte 007684 b8;
        SetByte 007685 b9;
      } else {
        if (TestBit(b7,7)) {
          Let b10 = M[Offset(Address(loop_var5),1)];
          if (Equal(29,Widen(BwAnd(b7,63)))) {
            if (Equal(Widen(BwAnd(b10,63)),2)) {
              Let b11 = M[Offset(Address(loop_var5),2)];
              Let b12 = M[Offset(Offset(Address(loop_var5),2),1)];
              SetByte 007684 b11;
              SetByte 007685 b12;
            } else {
              Let b13 = M[Offset(Address(loop_var5),2)];
              SetByte 007684 HiByte(Widen(b13));
              SetByte 007685 LoByte(Widen(b13));
            }
          } else {
            Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),2),Widen(BwAnd(b10,63))));
            Goto: Label 6
          }
        } else {
          if (TestBit(b7,6)) {
            if (Equal(29,Widen(BwAnd(b7,63)))) {
              Let b14 = M[Offset(Address(loop_var5),1)];
              Let b15 = M[Offset(Offset(Address(loop_var5),1),1)];
              SetByte 007684 b14;
              SetByte 007685 b15;
            } else {
              Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),1),2));
              Goto: Label 6
            }
          } else {
            if (Equal(29,Widen(BwAnd(b7,63)))) {
              Let b16 = M[Offset(Address(loop_var5),1)];
              SetByte 007684 HiByte(Widen(b16));
              SetByte 007685 LoByte(Widen(b16));
            } else {
              Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),1),1));
              Goto: Label 6
            }
          }
        }
      }
    }
    TraceOperation 104414 (Store (Con 3) (Var (Global 239)));
    Let b17 = M[007684];
    Let b18 = M[007685];
    SetLocal 3 MakeHiLo(b17,b18);
    Jump: 104417
  }
LocOp 104417:
  TraceOperation 104417 (Jz (Var (Local 3)) (Branch T (Dloc 104430)));
  if (IsZero(GetLocal(3))) {
    Jump: 104430
  } else {
    TraceOperation 104420 (Je [Var (Local 3),Var (Local 2)] (Branch T Dtrue));
    if (Equal(GetLocal(3),GetLocal(2))) {
      PopFrame;
      PopReturnAddress return_address_1;
      SetResult 1;
      JumpIndirect: (return) return_address_1
    } else {
      TraceOperation 104424 (Get_parent (Var (Local 3)) (Local 3));
      Let b2 = M[Offset(Offset(000378,Mul(GetLocal(3),14)),6)];
      Let b3 = M[Offset(Offset(Offset(000378,Mul(GetLocal(3),14)),6),1)];
      SetLocal 3 MakeHiLo(b2,b3);
      TraceOperation 104427 (Jump 104417);
      Jump: 104417
    }
  }
LocOp 104430:
  TraceOperation 104430 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 104432:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 104433
LocOp 104433:
  TraceOperation 104433 (Call (Floc 026172) [Var (Local 1),Con 16] Sp);
  PushFrame;
  PushReturnAddress 104433;
  SetLocal 1 GetLocal(1);
  SetLocal 2 16;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 104433:
  PushStack call_result;
  TraceOperation 104440 (Jz (Var Sp) (Branch T Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  } else {
    TraceOperation 104443 (Call (Floc 111316) [Var (Local 1),Con 25] Sp);
    PushFrame;
    PushReturnAddress 104443;
    SetLocal 1 GetLocal(1);
    SetLocal 2 25;
    MakeRoutineFrame 2;
    Jump: 111317
  }
LocReturn 104443:
  PushStack call_result;
  TraceOperation 104450 (Jz (Var Sp) (Branch T (Dloc 104465)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 104465
  } else {
    TraceOperation 104453 (Get_prop_addr (Var (Local 1)) (Con 25) (Global 239));
    Let b2 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),12)];
    Let b3 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),12),1)];
    Let b4 = M[Address(MakeHiLo(b2,b3))];
    Let loop_var5 = DeAddress(Offset(Address(MakeHiLo(b2,b3)),Add(Mul(2,Widen(b4)),1)));
    Label 6: {
      Let b7 = M[Address(loop_var5)];
      if (IsZeroByte(b7)) {
        SetByte 007684 0;
        SetByte 007685 0;
      } else {
        if (TestBit(b7,7)) {
          Let b8 = M[Offset(Address(loop_var5),1)];
          if (Equal(25,Widen(BwAnd(b7,63)))) {
            SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var5),2)));
            SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var5),2)));
          } else {
            Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),2),Widen(BwAnd(b8,63))));
            Goto: Label 6
          }
        } else {
          if (TestBit(b7,6)) {
            if (Equal(25,Widen(BwAnd(b7,63)))) {
              SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var5),1)));
              SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var5),1)));
            } else {
              Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),1),2));
              Goto: Label 6
            }
          } else {
            if (Equal(25,Widen(BwAnd(b7,63)))) {
              SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var5),1)));
              SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var5),1)));
            } else {
              Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),1),1));
              Goto: Label 6
            }
          }
        }
      }
    }
    TraceOperation 104457 (Push (Var (Global 239)));
    Let b9 = M[007684];
    Let b10 = M[007685];
    PushStack MakeHiLo(b9,b10);
    TraceOperation 104460 (Loadw (Var Sp) (Con 0) Sp);
    PopStack popped11;
    Let b12 = M[Offset(Address(popped11),0)];
    Let b13 = M[Offset(Offset(Address(popped11),0),1)];
    PushStack MakeHiLo(b12,b13);
    TraceOperation 104464 Ret_popped;
    PopStack popped14;
    PopFrame;
    PopReturnAddress return_address_15;
    SetResult popped14;
    JumpIndirect: (return) return_address_15
  }
LocOp 104465:
  TraceOperation 104465 (Get_parent (Var (Local 1)) Sp);
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),6)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),6),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 104468 Ret_popped;
  PopStack popped3;
  PopFrame;
  PopReturnAddress return_address_4;
  SetResult popped3;
  JumpIndirect: (return) return_address_4
--------------------------------------------------
LocRoutine 104472:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 104473
LocOp 104473:
  TraceOperation 104473 (Call (Floc 026172) [Var (Local 1),Con 16] Sp);
  PushFrame;
  PushReturnAddress 104473;
  SetLocal 1 GetLocal(1);
  SetLocal 2 16;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 104473:
  PushStack call_result;
  TraceOperation 104480 (Jz (Var Sp) (Branch T Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  } else {
    TraceOperation 104483 (Call (Floc 111316) [Var (Local 1),Con 25] Sp);
    PushFrame;
    PushReturnAddress 104483;
    SetLocal 1 GetLocal(1);
    SetLocal 2 25;
    MakeRoutineFrame 2;
    Jump: 111317
  }
LocReturn 104483:
  PushStack call_result;
  TraceOperation 104490 (Jz (Var Sp) (Branch T (Dloc 104505)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 104505
  } else {
    TraceOperation 104493 (Get_prop_addr (Var (Local 1)) (Con 25) (Global 239));
    Let b2 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),12)];
    Let b3 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),12),1)];
    Let b4 = M[Address(MakeHiLo(b2,b3))];
    Let loop_var5 = DeAddress(Offset(Address(MakeHiLo(b2,b3)),Add(Mul(2,Widen(b4)),1)));
    Label 6: {
      Let b7 = M[Address(loop_var5)];
      if (IsZeroByte(b7)) {
        SetByte 007684 0;
        SetByte 007685 0;
      } else {
        if (TestBit(b7,7)) {
          Let b8 = M[Offset(Address(loop_var5),1)];
          if (Equal(25,Widen(BwAnd(b7,63)))) {
            SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var5),2)));
            SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var5),2)));
          } else {
            Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),2),Widen(BwAnd(b8,63))));
            Goto: Label 6
          }
        } else {
          if (TestBit(b7,6)) {
            if (Equal(25,Widen(BwAnd(b7,63)))) {
              SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var5),1)));
              SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var5),1)));
            } else {
              Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),1),2));
              Goto: Label 6
            }
          } else {
            if (Equal(25,Widen(BwAnd(b7,63)))) {
              SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var5),1)));
              SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var5),1)));
            } else {
              Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),1),1));
              Goto: Label 6
            }
          }
        }
      }
    }
    TraceOperation 104497 (Push (Var (Global 239)));
    Let b9 = M[007684];
    Let b10 = M[007685];
    PushStack MakeHiLo(b9,b10);
    TraceOperation 104500 (Loadw (Var Sp) (Con 1) Sp);
    PopStack popped11;
    Let b12 = M[Offset(Address(popped11),2)];
    Let b13 = M[Offset(Offset(Address(popped11),2),1)];
    PushStack MakeHiLo(b12,b13);
    TraceOperation 104504 Ret_popped;
    PopStack popped14;
    PopFrame;
    PopReturnAddress return_address_15;
    SetResult popped14;
    JumpIndirect: (return) return_address_15
  }
LocOp 104505:
  TraceOperation 104505 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 104508:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 104509
LocOp 104509:
  TraceOperation 104509 (Call (Floc 026172) [Var (Local 1),Con 16] Sp);
  PushFrame;
  PushReturnAddress 104509;
  SetLocal 1 GetLocal(1);
  SetLocal 2 16;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 104509:
  PushStack call_result;
  TraceOperation 104516 (Jz (Var Sp) (Branch T (Dloc 104538)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 104538
  } else {
    TraceOperation 104519 (Push (Var (Global 1)));
    Let b2 = M[007208];
    Let b3 = M[007209];
    PushStack MakeHiLo(b2,b3);
    TraceOperation 104522 (Call (Floc 102544) [Var (Local 2)] (Global 1));
    PushFrame;
    PushReturnAddress 104522;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 1;
    Jump: 102545
  }
LocReturn 104522:
  SetByte 007208 HiByte(call_result);
  SetByte 007209 LoByte(call_result);
  TraceOperation 104528 (Call (Floc 110196) [Var (Local 1),Con 24] (Local 3));
  PushFrame;
  PushReturnAddress 104528;
  SetLocal 1 GetLocal(1);
  SetLocal 2 24;
  MakeRoutineFrame 15;
  SetLocal 15 0;
  SetLocal 14 0;
  SetLocal 13 0;
  SetLocal 12 0;
  SetLocal 11 0;
  SetLocal 10 0;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 110197
LocReturn 104528:
  SetLocal 3 call_result;
  TraceOperation 104535 (Pull (Con 17));
  PopStack popped1;
  SetByte 007208 HiByte(popped1);
  SetByte 007209 LoByte(popped1);
  Jump: 104538
LocOp 104538:
  TraceOperation 104538 (Ret (Var (Local 3)));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult GetLocal(3);
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 104540:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 104541
LocOp 104541:
  TraceOperation 104541 (Call (Floc 026172) [Var (Local 1),Con 16] Sp);
  PushFrame;
  PushReturnAddress 104541;
  SetLocal 1 GetLocal(1);
  SetLocal 2 16;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 104541:
  PushStack call_result;
  TraceOperation 104548 (Jz (Var Sp) (Branch T (Dloc 104601)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 104601
  } else {
    TraceOperation 104551 (Push (Var (Global 1)));
    Let b2 = M[007208];
    Let b3 = M[007209];
    PushStack MakeHiLo(b2,b3);
    TraceOperation 104554 (Call (Floc 102544) [Var (Local 2)] (Global 1));
    PushFrame;
    PushReturnAddress 104554;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 1;
    Jump: 102545
  }
LocReturn 104554:
  SetByte 007208 HiByte(call_result);
  SetByte 007209 LoByte(call_result);
  TraceOperation 104560 (Call (Floc 110196) [Var (Local 1),Con 23] (Local 3));
  PushFrame;
  PushReturnAddress 104560;
  SetLocal 1 GetLocal(1);
  SetLocal 2 23;
  MakeRoutineFrame 15;
  SetLocal 15 0;
  SetLocal 14 0;
  SetLocal 13 0;
  SetLocal 12 0;
  SetLocal 11 0;
  SetLocal 10 0;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 110197
LocReturn 104560:
  SetLocal 3 call_result;
  TraceOperation 104567 (Pull (Con 17));
  PopStack popped1;
  SetByte 007208 HiByte(popped1);
  SetByte 007209 LoByte(popped1);
  TraceOperation 104570 (Jz (Var (Local 3)) (Branch T (Dloc 104601)));
  if (IsZero(GetLocal(3))) {
    Jump: 104601
  } else {
    TraceOperation 104573 (Get_child (Con 6) Sp (Branch F (Dloc 104577)));
    Let b2 = M[000472];
    Let b3 = M[000473];
    PushStack MakeHiLo(b2,b3);
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 104577
    } else {
      Jump: 104577
    }
  }
LocOp 104577:
  TraceOperation 104577 (Pull (Con 4));
  PopStack popped1;
  SetLocal 4 popped1;
  TraceOperation 104580 (Jz (Var (Local 4)) (Branch T (Dloc 104601)));
  if (IsZero(GetLocal(4))) {
    Jump: 104601
  } else {
    Jump: 104583
  }
LocOp 104583:
  TraceOperation 104583 (Get_prop (Var (Local 4)) (Con 23) (Global 239));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(4),14)),12)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(4),14)),12),1)];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let loop_var4 = DeAddress(Offset(Address(MakeHiLo(b1,b2)),Add(Mul(2,Widen(b3)),1)));
  Label 5: {
    Let b6 = M[Address(loop_var4)];
    if (IsZeroByte(b6)) {
      Let b7 = M[000310];
      Let b8 = M[000311];
      SetByte 007684 b7;
      SetByte 007685 b8;
    } else {
      if (TestBit(b6,7)) {
        Let b9 = M[Offset(Address(loop_var4),1)];
        if (Equal(23,Widen(BwAnd(b6,63)))) {
          if (Equal(Widen(BwAnd(b9,63)),2)) {
            Let b10 = M[Offset(Address(loop_var4),2)];
            Let b11 = M[Offset(Offset(Address(loop_var4),2),1)];
            SetByte 007684 b10;
            SetByte 007685 b11;
          } else {
            Let b12 = M[Offset(Address(loop_var4),2)];
            SetByte 007684 HiByte(Widen(b12));
            SetByte 007685 LoByte(Widen(b12));
          }
        } else {
          Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),2),Widen(BwAnd(b9,63))));
          Goto: Label 5
        }
      } else {
        if (TestBit(b6,6)) {
          if (Equal(23,Widen(BwAnd(b6,63)))) {
            Let b13 = M[Offset(Address(loop_var4),1)];
            Let b14 = M[Offset(Offset(Address(loop_var4),1),1)];
            SetByte 007684 b13;
            SetByte 007685 b14;
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),2));
            Goto: Label 5
          }
        } else {
          if (Equal(23,Widen(BwAnd(b6,63)))) {
            Let b15 = M[Offset(Address(loop_var4),1)];
            SetByte 007684 HiByte(Widen(b15));
            SetByte 007685 LoByte(Widen(b15));
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),1));
            Goto: Label 5
          }
        }
      }
    }
  }
  TraceOperation 104587 (Push (Var (Global 239)));
  Let b16 = M[007684];
  Let b17 = M[007685];
  PushStack MakeHiLo(b16,b17);
  TraceOperation 104590 (Je [Var Sp,Var (Local 3)] (Branch F (Dloc 104596)));
  PopStack popped18;
  if (Equal(popped18,GetLocal(3))) {
    TraceOperation 104594 (Ret (Var (Local 4)));
    PopFrame;
    PopReturnAddress return_address_19;
    SetResult GetLocal(4);
    JumpIndirect: (return) return_address_19
  } else {
    Jump: 104596
  }
LocOp 104596:
  TraceOperation 104596 (Get_sibling (Var (Local 4)) (Local 4) (Branch T (Dloc 104583)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(4),14)),8)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(4),14)),8),1)];
  SetLocal 4 MakeHiLo(b1,b2);
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 104601
  } else {
    Jump: 104583
  }
LocOp 104601:
  TraceOperation 104601 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 104604:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 104605
LocOp 104605:
  TraceOperation 104605 (Call (Floc 102432) [Var (Local 1)] Sp);
  PushFrame;
  PushReturnAddress 104605;
  SetLocal 1 GetLocal(1);
  MakeRoutineFrame 1;
  Jump: 102433
LocReturn 104605:
  PushStack call_result;
  TraceOperation 104611 (Get_parent (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(Offset(000378,Mul(popped1,14)),6)];
  Let b3 = M[Offset(Offset(Offset(000378,Mul(popped1,14)),6),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 104614 (Call (Floc 036716) [Var Sp] Sp);
  PopStack popped4;
  PushFrame;
  PushReturnAddress 104614;
  SetLocal 1 popped4;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 036717
LocReturn 104614:
  PushStack call_result;
  TraceOperation 104620 (Jz (Var Sp) (Branch T Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  } else {
    TraceOperation 104623 (Jz (Var (Global 14)) (Branch F Dtrue));
    Let b3 = M[007234];
    Let b4 = M[007235];
    if (IsZero(MakeHiLo(b3,b4))) {
      TraceOperation 104626 (Call (Floc 049948) [Var (Local 2),Var (Local 1)] Sp);
      PushFrame;
      PushReturnAddress 104626;
      SetLocal 1 GetLocal(2);
      SetLocal 2 GetLocal(1);
      MakeRoutineFrame 7;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      SetLocal 3 0;
      Jump: 049949
    } else {
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 1;
      JumpIndirect: (return) return_address_5
    }
  }
LocReturn 104626:
  PushStack call_result;
  TraceOperation 104633 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 104636:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 104637
LocOp 104637:
  TraceOperation 104637 (Call (Floc 049948) [Var (Local 2),Var (Local 1)] Sp);
  PushFrame;
  PushReturnAddress 104637;
  SetLocal 1 GetLocal(2);
  SetLocal 2 GetLocal(1);
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 049949
LocReturn 104637:
  PushStack call_result;
  TraceOperation 104644 (Jz (Var Sp) (Branch T Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  } else {
    TraceOperation 104647 (Call (Floc 037280) [Var (Local 2),Con 1,Con 0,Var (Local 1)] Sp);
    PushFrame;
    PushReturnAddress 104647;
    SetLocal 1 GetLocal(2);
    SetLocal 2 1;
    SetLocal 3 0;
    SetLocal 4 GetLocal(1);
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    Jump: 037281
  }
LocReturn 104647:
  PushStack call_result;
  TraceOperation 104657 (Jz (Var Sp) (Branch F Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 104660 Rtrue;
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  } else {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  }
--------------------------------------------------
LocRoutine 104664:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 104665
LocOp 104665:
  TraceOperation 104665 (Call (Floc 026172) [Var (Local 1),Con 14] Sp);
  PushFrame;
  PushReturnAddress 104665;
  SetLocal 1 GetLocal(1);
  SetLocal 2 14;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 104665:
  PushStack call_result;
  TraceOperation 104672 (Jz (Var Sp) (Branch T (Dloc 104698)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 104698
  } else {
    TraceOperation 104675 (Call (Floc 026172) [Var (Local 2),Con 14] Sp);
    PushFrame;
    PushReturnAddress 104675;
    SetLocal 1 GetLocal(2);
    SetLocal 2 14;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  }
LocReturn 104675:
  PushStack call_result;
  TraceOperation 104682 (Jz (Var Sp) (Branch T (Dloc 104698)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 104698
  } else {
    TraceOperation 104685 (Store (Con 84) (Var (Local 2)));
    SetByte 007342 HiByte(GetLocal(2));
    SetByte 007343 LoByte(GetLocal(2));
    TraceOperation 104688 (Call (Floc 078824) [Con 17,Var (Local 1)] Sp);
    PushFrame;
    PushReturnAddress 104688;
    SetLocal 1 17;
    SetLocal 2 GetLocal(1);
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 078825
  }
LocReturn 104688:
  PushStack call_result;
  TraceOperation 104695 (Jz (Var Sp) (Branch F Dtrue));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 104698
  } else {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  }
LocOp 104698:
  TraceOperation 104698 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 104700:
  MakeRoutineFrame 0;
  Jump: 104701
LocOp 104701:
  TraceOperation 104701 (Call (Floc 078000) [Con 45,Con 22] Sp);
  PushFrame;
  PushReturnAddress 104701;
  SetLocal 1 45;
  SetLocal 2 22;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 078001
LocReturn 104701:
  PushStack call_result;
  TraceOperation 104708 (Jz (Var Sp) (Branch T (Dloc 104712)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 104712
  } else {
    TraceOperation 104711 Rfalse;
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  }
LocOp 104712:
  TraceOperation 104712 (Ret (Con -1));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult -1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 104716:
  MakeRoutineFrame 0;
  Jump: 104717
LocOp 104717:
  TraceOperation 104717 (Call (Floc 078000) [Con 45,Con 22] Sp);
  PushFrame;
  PushReturnAddress 104717;
  SetLocal 1 45;
  SetLocal 2 22;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 078001
LocReturn 104717:
  PushStack call_result;
  TraceOperation 104724 (Jz (Var Sp) (Branch T (Dloc 104728)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 104728
  } else {
    TraceOperation 104727 Rfalse;
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  }
LocOp 104728:
  TraceOperation 104728 (Ret (Con -1));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult -1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 104732:
  MakeRoutineFrame 0;
  Jump: 104733
LocOp 104733:
  TraceOperation 104733 (Call (Floc 078000) [Con 45,Con 22] Sp);
  PushFrame;
  PushReturnAddress 104733;
  SetLocal 1 45;
  SetLocal 2 22;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 078001
LocReturn 104733:
  PushStack call_result;
  TraceOperation 104740 (Jz (Var Sp) (Branch T (Dloc 104744)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 104744
  } else {
    TraceOperation 104743 Rfalse;
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  }
LocOp 104744:
  TraceOperation 104744 (Ret (Con -1));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult -1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 104748:
  MakeRoutineFrame 0;
  Jump: 104749
LocOp 104749:
  TraceOperation 104749 (Je [Var (Global 37),Var (Global 31)] (Branch T (Dloc 104756)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    Jump: 104756
  } else {
    TraceOperation 104753 (Ret (Con -1));
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult -1;
    JumpIndirect: (return) return_address_5
  }
LocOp 104756:
  TraceOperation 104756 (Store (Con 83) (Con 250));
  SetByte 007340 0;
  SetByte 007341 250;
  TraceOperation 104759 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 104760:
  MakeRoutineFrame 0;
  Jump: 104761
LocOp 104761:
  TraceOperation 104761 (Je [Var (Global 37),Var (Global 31)] (Branch T (Dloc 104768)));
  Let b1 = M[007280];
  Let b2 = M[007281];
  Let b3 = M[007268];
  Let b4 = M[007269];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    Jump: 104768
  } else {
    TraceOperation 104765 (Ret (Con -1));
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult -1;
    JumpIndirect: (return) return_address_5
  }
LocOp 104768:
  TraceOperation 104768 (Store (Con 83) (Con 251));
  SetByte 007340 0;
  SetByte 007341 251;
  TraceOperation 104771 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 104772:
  MakeRoutineFrame 0;
  Jump: 104773
LocOp 104773:
  TraceOperation 104773 (Call (Floc 078000) [Con 51,Con 22] Sp);
  PushFrame;
  PushReturnAddress 104773;
  SetLocal 1 51;
  SetLocal 2 22;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 078001
LocReturn 104773:
  PushStack call_result;
  TraceOperation 104780 (Jz (Var Sp) (Branch T (Dloc 104784)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 104784
  } else {
    TraceOperation 104783 Rfalse;
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  }
LocOp 104784:
  TraceOperation 104784 (Ret (Con -1));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult -1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 105044:
  MakeRoutineFrame 0;
  Jump: 105045
LocOp 105045:
  TraceOperation 105045 (And (Con 4) (Con 140) Sp);
  PushStack 4;
  TraceOperation 105049 (Inc_chk (Con 139) (Con 255) (Branch T (Dloc 105114)));
  Let b1 = M[007452];
  Let b2 = M[007453];
  SetByte 007452 HiByte(Add(MakeHiLo(b1,b2),1));
  SetByte 007453 LoByte(Add(MakeHiLo(b1,b2),1));
  if (GreaterThanEqual(MakeHiLo(b1,b2),255)) {
  }
  TraceOperation 105053 (Dec (Con 6));
  SetLocal 6 Sub(GetLocal(6),1);
  TraceOperation 105055 (Inc (Con 5));
  SetLocal 5 Add(GetLocal(5),1);
  TraceOperation 105057 (Jump 104908);
  Jump: 104908
--------------------------------------------------
LocRoutine 105068:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 105069
LocOp 105069:
  TraceOperation 105069 (Div (Var (Local 2)) (Con 2) Sp);
  PushStack Div(GetLocal(2),2);
  TraceOperation 105073 (Add (Var (Local 1)) (Var Sp) Sp);
  PopStack popped1;
  PushStack Add(GetLocal(1),popped1);
  TraceOperation 105077 (Div (Var Sp) (Var (Local 2)) Sp);
  PopStack popped2;
  PushStack Div(popped2,GetLocal(2));
  TraceOperation 105081 (Mul (Var Sp) (Var (Local 2)) Sp);
  PopStack popped3;
  PushStack Mul(popped3,GetLocal(2));
  TraceOperation 105085 Ret_popped;
  PopStack popped4;
  PopFrame;
  PopReturnAddress return_address_5;
  SetResult popped4;
  JumpIndirect: (return) return_address_5
--------------------------------------------------
LocRoutine 105088:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 105089
LocOp 105089:
  TraceOperation 105089 (Jl (Var (Local 1)) (Con 0) (Branch F (Dloc 105105)));
  if (LessThan(GetLocal(1),0)) {
    TraceOperation 105093 (Print "<no time>");
    GamePrint "<no time>";
    TraceOperation 105104 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 105105
  }
LocOp 105105:
  TraceOperation 105105 (Jl (Var (Local 1)) (Con 720) (Branch T (Dloc 105125)));
  if (LessThan(GetLocal(1),720)) {
    Jump: 105125
  } else {
    TraceOperation 105111 (Store (Con 3) (Con -31948));
    SetLocal 3 -31948;
    TraceOperation 105116 (Sub (Var (Local 1)) (Con 720) (Local 1));
    SetLocal 1 Sub(GetLocal(1),720);
    TraceOperation 105122 (Jump 105130);
    Jump: 105130
  }
LocOp 105125:
  TraceOperation 105125 (Store (Con 3) (Con -31947));
  SetLocal 3 -31947;
  Jump: 105130
LocOp 105130:
  TraceOperation 105130 (Div (Var (Local 1)) (Con 60) (Local 2));
  SetLocal 2 Div(GetLocal(1),60);
  TraceOperation 105134 (Jz (Var (Local 2)) (Branch F (Dloc 105140)));
  if (IsZero(GetLocal(2))) {
    TraceOperation 105137 (Store (Con 2) (Con 12));
    SetLocal 2 12;
    Jump: 105140
  } else {
    Jump: 105140
  }
LocOp 105140:
  TraceOperation 105140 (Print_num (Var (Local 2)));
  GamePrint ShowNumber(GetLocal(2));
  TraceOperation 105143 (Print ":");
  GamePrint ":";
  TraceOperation 105146 (Mod (Var (Local 1)) (Con 60) Sp);
  PushStack Mod(GetLocal(1),60);
  TraceOperation 105150 (Jl (Var Sp) (Con 10) (Branch F (Dloc 105157)));
  PopStack popped1;
  if (LessThan(popped1,10)) {
    TraceOperation 105154 (Print "0");
    GamePrint "0";
    Jump: 105157
  } else {
    Jump: 105157
  }
LocOp 105157:
  TraceOperation 105157 (Mod (Var (Local 1)) (Con 60) Sp);
  PushStack Mod(GetLocal(1),60);
  TraceOperation 105161 (Print_num (Var Sp));
  PopStack popped1;
  GamePrint ShowNumber(popped1);
  TraceOperation 105164 (Print " ");
  GamePrint " ";
  TraceOperation 105167 (Print_paddr (Var (Local 3)));
  GamePrint GetText(PackedAddress Z5(GetLocal(3)));
  TraceOperation 105169 Rtrue;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult 1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 105172:
  MakeRoutineFrame 5;
  if (LessThanByte(num_actuals,5)) {
    SetLocal 5 0;
    if (LessThanByte(num_actuals,4)) {
      SetLocal 4 0;
      if (LessThanByte(num_actuals,3)) {
        SetLocal 3 0;
        if (LessThanByte(num_actuals,2)) {
          SetLocal 2 0;
          if (LessThanByte(num_actuals,1)) {
            SetLocal 1 0;
          }
        }
      }
    }
  }
  Jump: 105173
LocOp 105173:
  TraceOperation 105173 (Div (Var (Local 1)) (Con 60) Sp);
  PushStack Div(GetLocal(1),60);
  TraceOperation 105177 (Mod (Var Sp) (Con 12) (Local 2));
  PopStack popped1;
  SetLocal 2 Mod(popped1,12);
  TraceOperation 105181 (Mod (Var (Local 1)) (Con 60) (Local 3));
  SetLocal 3 Mod(GetLocal(1),60);
  TraceOperation 105185 (Jz (Var (Local 2)) (Branch F (Dloc 105191)));
  if (IsZero(GetLocal(2))) {
    TraceOperation 105188 (Store (Con 2) (Con 12));
    SetLocal 2 12;
    Jump: 105191
  } else {
    Jump: 105191
  }
LocOp 105191:
  TraceOperation 105191 (Jz (Var (Local 3)) (Branch F (Dloc 105207)));
  if (IsZero(GetLocal(3))) {
    TraceOperation 105194 (CallN (Floc 080944) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 105194;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 1;
    Jump: 080945
  } else {
    Jump: 105207
  }
LocReturn 105194:
  TraceOperation 105199 (Print " o'clock");
  GamePrint " o'clock";
  TraceOperation 105206 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 105207:
  TraceOperation 105207 (Store (Con 4) (Con -31946));
  SetLocal 4 -31946;
  TraceOperation 105212 (Jg (Var (Local 3)) (Con 30) (Branch F (Dloc 105239)));
  if (GreaterThan(GetLocal(3),30)) {
    TraceOperation 105216 (Sub (Con 60) (Var (Local 3)) (Local 3));
    SetLocal 3 Sub(60,GetLocal(3));
    TraceOperation 105220 (Add (Var (Local 2)) (Con 1) Sp);
    PushStack Add(GetLocal(2),1);
    TraceOperation 105224 (Mod (Var Sp) (Con 12) (Local 2));
    PopStack popped1;
    SetLocal 2 Mod(popped1,12);
    TraceOperation 105228 (Jz (Var (Local 2)) (Branch F (Dloc 105234)));
    if (IsZero(GetLocal(2))) {
      TraceOperation 105231 (Store (Con 2) (Con 12));
      SetLocal 2 12;
      Jump: 105234
    } else {
      Jump: 105234
    }
  } else {
    Jump: 105239
  }
LocOp 105234:
  TraceOperation 105234 (Store (Con 4) (Con -31945));
  SetLocal 4 -31945;
  Jump: 105239
LocOp 105239:
  TraceOperation 105239 (Store (Con 255) (Var (Local 3)));
  SetByte 007684 HiByte(GetLocal(3));
  SetByte 007685 LoByte(GetLocal(3));
  TraceOperation 105242 (Je [Var (Global 239),Con 15] (Branch F (Dloc 105256)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),15)) {
    TraceOperation 105246 (Print "quarter");
    GamePrint "quarter";
    TraceOperation 105253 (Jump 105301);
    Jump: 105301
  } else {
    Jump: 105256
  }
LocOp 105256:
  TraceOperation 105256 (Je [Var (Global 239),Con 30] (Branch F (Dloc 105268)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),30)) {
    TraceOperation 105260 (Print "half");
    GamePrint "half";
    TraceOperation 105265 (Jump 105301);
    Jump: 105301
  } else {
    Jump: 105268
  }
LocOp 105268:
  TraceOperation 105268 (CallN (Floc 080944) [Var (Local 3)]);
  PushFrame;
  PushReturnAddress 105268;
  SetLocal 1 GetLocal(3);
  MakeRoutineFrame 1;
  Jump: 080945
LocReturn 105268:
  TraceOperation 105273 (Mod (Var (Local 3)) (Con 5) Sp);
  PushStack Mod(GetLocal(3),5);
  TraceOperation 105277 (Jz (Var Sp) (Branch T (Dloc 105301)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 105301
  } else {
    TraceOperation 105280 (Je [Var (Local 3),Con 1] (Branch F (Dloc 105294)));
    if (Equal(GetLocal(3),1)) {
      TraceOperation 105284 (Print " minute");
      GamePrint " minute";
      TraceOperation 105291 (Jump 105301);
      Jump: 105301
    } else {
      Jump: 105294
    }
  }
LocOp 105294:
  TraceOperation 105294 (Print " minutes");
  GamePrint " minutes";
  Jump: 105301
LocOp 105301:
  TraceOperation 105301 (Print " ");
  GamePrint " ";
  TraceOperation 105304 (Print_paddr (Var (Local 4)));
  GamePrint GetText(PackedAddress Z5(GetLocal(4)));
  TraceOperation 105306 (Print " ");
  GamePrint " ";
  TraceOperation 105309 (CallN (Floc 080944) [Var (Local 2)]);
  PushFrame;
  PushReturnAddress 105309;
  SetLocal 1 GetLocal(2);
  MakeRoutineFrame 1;
  Jump: 080945
LocReturn 105309:
  TraceOperation 105314 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 105338:
  MakeRoutineFrame 0;
  Jump: 105339
LocOp 105339:
  TraceOperation 105339 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 105410:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 105411
LocOp 105411:
  TraceOperation 105411 (Jump 105417);
  Jump: 105417
--------------------------------------------------
LocRoutine 105416:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 105417
LocOp 105417:
  TraceOperation 105417 (Jump 105451);
  Jump: 105451
--------------------------------------------------
LocRoutine 105446:
  MakeRoutineFrame 0;
  Jump: 105447
LocOp 105447:
  TraceOperation 105447 (Inc_chk (Con 13) (Con 6) (Branch F (Dloc 105855)));
  SetLocal 13 Add(GetLocal(13),1);
  if (GreaterThanEqual(GetLocal(13),6)) {
  }
  TraceOperation 105452 (Test_attr (Con 140) (Con 255) (Branch T (Dloc 102193)));
  Let b1 = M[002369];
  if (TestBit(b1,0)) {
    Jump: 102193
  } else {
    TraceOperation 105457 (Dec_chk (Con 3) (Con 201) (Branch F (Dloc 105462)));
    if (LessThanEqual(GetLocal(3),201)) {
      SetLocal 3 Sub(GetLocal(3),1);
    } else {
      SetLocal 3 Sub(GetLocal(3),1);
    }
    TraceOperation 105461 (Dec_chk (Con 5) (Con 197) (Branch T (Dloc 097278)));
    if (LessThanEqual(GetLocal(5),197)) {
      SetLocal 5 Sub(GetLocal(5),1);
    } else {
      SetLocal 5 Sub(GetLocal(5),1);
    }
    TraceOperation 105466 (Inc_chk (Con 1280) (Con -24571) (Branch T (Dloc 105579)));
    PopStack popped2;
    PushStack Add(popped2,1);
    if (GreaterThanEqual(popped2,-24571)) {
    }
    TraceOperation 105474 (Store (Con 10) (Con 0));
    SetLocal 10 0;
    TraceOperation 105477 (Jump 105486);
    Jump: 105486
  }
--------------------------------------------------
LocRoutine 105570:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 105571
LocOp 105571:
  TraceOperation 105571 (CallN (Fvar (Global 130)) [Con 84]);
  Let b1 = M[007466];
  Let b2 = M[007467];
  if (IsZeroAddress(PackedAddress Z5(MakeHiLo(b1,b2)))) {
    Jump: 105574
  } else {
    PushFrame;
    PushReturnAddress 105571;
    SetLocal 1 84;
    SetNumberActuals 1;
    JumpIndirect: (routine) PackedAddress Z5(MakeHiLo(b1,b2))
  }
LocReturn 105571:
  Jump: 105574
LocOp 105574:
  TraceOperation 105574 (Get_prop (Con 196) (Con 150) (Global 75));
  Let b1 = M[003134];
  Let b2 = M[003135];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let loop_var4 = DeAddress(Offset(Address(MakeHiLo(b1,b2)),Add(Mul(2,Widen(b3)),1)));
  Label 5: {
    Let b6 = M[Address(loop_var4)];
    if (IsZeroByte(b6)) {
      Let b7 = M[000564];
      Let b8 = M[000565];
      SetByte 007356 b7;
      SetByte 007357 b8;
    } else {
      if (TestBit(b6,7)) {
        Let b9 = M[Offset(Address(loop_var4),1)];
        if (Equal(150,Widen(BwAnd(b6,63)))) {
          if (Equal(Widen(BwAnd(b9,63)),2)) {
            Let b10 = M[Offset(Address(loop_var4),2)];
            Let b11 = M[Offset(Offset(Address(loop_var4),2),1)];
            SetByte 007356 b10;
            SetByte 007357 b11;
          } else {
            Let b12 = M[Offset(Address(loop_var4),2)];
            SetByte 007356 HiByte(Widen(b12));
            SetByte 007357 LoByte(Widen(b12));
          }
        } else {
          Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),2),Widen(BwAnd(b9,63))));
          Goto: Label 5
        }
      } else {
        if (TestBit(b6,6)) {
          if (Equal(150,Widen(BwAnd(b6,63)))) {
            Let b13 = M[Offset(Address(loop_var4),1)];
            Let b14 = M[Offset(Offset(Address(loop_var4),1),1)];
            SetByte 007356 b13;
            SetByte 007357 b14;
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),2));
            Goto: Label 5
          }
        } else {
          if (Equal(150,Widen(BwAnd(b6,63)))) {
            Let b15 = M[Offset(Address(loop_var4),1)];
            SetByte 007356 HiByte(Widen(b15));
            SetByte 007357 LoByte(Widen(b15));
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),1));
            Goto: Label 5
          }
        }
      }
    }
  }
  TraceOperation 105578 Rtrue;
  PopFrame;
  PopReturnAddress return_address_16;
  SetResult 1;
  JumpIndirect: (return) return_address_16
--------------------------------------------------
LocRoutine 105714:
  MakeRoutineFrame 0;
  Jump: 105715
LocOp 105715:
  TraceOperation 105715 (Jump 105721);
  Jump: 105721
--------------------------------------------------
LocRoutine 105752:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 105753
LocOp 105753:
  TraceOperation 105753 (Jump 105787);
  Jump: 105787
--------------------------------------------------
LocRoutine 105804:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 105805
LocOp 105805:
  TraceOperation 105805 (CallN (Fvar (Global 130)) [Con 84]);
  Let b1 = M[007466];
  Let b2 = M[007467];
  if (IsZeroAddress(PackedAddress Z5(MakeHiLo(b1,b2)))) {
    Jump: 105808
  } else {
    PushFrame;
    PushReturnAddress 105805;
    SetLocal 1 84;
    SetNumberActuals 1;
    JumpIndirect: (routine) PackedAddress Z5(MakeHiLo(b1,b2))
  }
LocReturn 105805:
  Jump: 105808
LocOp 105808:
  TraceOperation 105808 (Get_prop (Con 89) (Con 222) (Global 180));
  Let b1 = M[001636];
  Let b2 = M[001637];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let loop_var4 = DeAddress(Offset(Address(MakeHiLo(b1,b2)),Add(Mul(2,Widen(b3)),1)));
  Label 5: {
    Let b6 = M[Address(loop_var4)];
    if (IsZeroByte(b6)) {
      Let b7 = M[000708];
      Let b8 = M[000709];
      SetByte 007566 b7;
      SetByte 007567 b8;
    } else {
      if (TestBit(b6,7)) {
        Let b9 = M[Offset(Address(loop_var4),1)];
        if (Equal(222,Widen(BwAnd(b6,63)))) {
          if (Equal(Widen(BwAnd(b9,63)),2)) {
            Let b10 = M[Offset(Address(loop_var4),2)];
            Let b11 = M[Offset(Offset(Address(loop_var4),2),1)];
            SetByte 007566 b10;
            SetByte 007567 b11;
          } else {
            Let b12 = M[Offset(Address(loop_var4),2)];
            SetByte 007566 HiByte(Widen(b12));
            SetByte 007567 LoByte(Widen(b12));
          }
        } else {
          Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),2),Widen(BwAnd(b9,63))));
          Goto: Label 5
        }
      } else {
        if (TestBit(b6,6)) {
          if (Equal(222,Widen(BwAnd(b6,63)))) {
            Let b13 = M[Offset(Address(loop_var4),1)];
            Let b14 = M[Offset(Offset(Address(loop_var4),1),1)];
            SetByte 007566 b13;
            SetByte 007567 b14;
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),2));
            Goto: Label 5
          }
        } else {
          if (Equal(222,Widen(BwAnd(b6,63)))) {
            Let b15 = M[Offset(Address(loop_var4),1)];
            SetByte 007566 HiByte(Widen(b15));
            SetByte 007567 LoByte(Widen(b15));
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),1));
            Goto: Label 5
          }
        }
      }
    }
  }
  TraceOperation 105812 (Dec (Con 91));
  Let b16 = M[007356];
  Let b17 = M[007357];
  SetByte 007356 HiByte(Sub(MakeHiLo(b16,b17),1));
  SetByte 007357 LoByte(Sub(MakeHiLo(b16,b17),1));
  TraceOperation 105814 Rtrue;
  PopFrame;
  PopReturnAddress return_address_18;
  SetResult 1;
  JumpIndirect: (return) return_address_18
--------------------------------------------------
LocRoutine 105816:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 105817
LocOp 105817:
  TraceOperation 105817 (Jl (Var (Local 1)) (Con 24) (Branch T (Dloc 105824)));
  if (LessThan(GetLocal(1),24)) {
    Jump: 105824
  } else {
    TraceOperation 105821 (Ret (Con -1));
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult -1;
    JumpIndirect: (return) return_address_1
  }
LocOp 105824:
  TraceOperation 105824 (Jl (Var (Local 2)) (Con 60) (Branch T (Dloc 105831)));
  if (LessThan(GetLocal(2),60)) {
    Jump: 105831
  } else {
    TraceOperation 105828 (Ret (Con -1));
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult -1;
    JumpIndirect: (return) return_address_1
  }
LocOp 105831:
  TraceOperation 105831 (Mul (Var (Local 1)) (Con 60) Sp);
  PushStack Mul(GetLocal(1),60);
  TraceOperation 105835 (Add (Var Sp) (Var (Local 2)) (Local 4));
  PopStack popped1;
  SetLocal 4 Add(popped1,GetLocal(2));
  TraceOperation 105839 (Jl (Var (Local 1)) (Con 13) (Branch T (Dloc 105845)));
  if (LessThan(GetLocal(1),13)) {
    Jump: 105845
  } else {
    TraceOperation 105843 (Ret (Var (Local 4)));
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult GetLocal(4);
    JumpIndirect: (return) return_address_2
  }
LocOp 105845:
  TraceOperation 105845 (Mod (Var (Local 4)) (Con 720) (Local 4));
  SetLocal 4 Mod(GetLocal(4),720);
  TraceOperation 105851 (Je [Var (Local 3),Con 23186] (Branch F (Dloc 105863)));
  if (Equal(GetLocal(3),23186)) {
    TraceOperation 105857 (Add (Var (Local 4)) (Con 720) (Local 4));
    SetLocal 4 Add(GetLocal(4),720);
    Jump: 105863
  } else {
    Jump: 105863
  }
LocOp 105863:
  TraceOperation 105863 (Je [Var (Local 3),Con 21521,Con 23186] (Branch T (Dloc 105881)));
  if (LogOr(Equal(GetLocal(3),21521),Equal(GetLocal(3),23186))) {
    Jump: 105881
  } else {
    TraceOperation 105871 (Je [Var (Local 1),Con 12] (Branch F (Dloc 105881)));
    if (Equal(GetLocal(1),12)) {
      TraceOperation 105875 (Add (Var (Local 4)) (Con 720) (Local 4));
      SetLocal 4 Add(GetLocal(4),720);
      Jump: 105881
    } else {
      Jump: 105881
    }
  }
LocOp 105881:
  TraceOperation 105881 (Ret (Var (Local 4)));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult GetLocal(4);
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 105884:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 105885
LocOp 105885:
  TraceOperation 105885 (Store (Con 1) (Var (Global 47)));
  Let b1 = M[007300];
  Let b2 = M[007301];
  SetLocal 1 MakeHiLo(b1,b2);
  TraceOperation 105888 (Call (Floc 026172) [Var (Global 47),Con 15] Sp);
  Let b3 = M[007300];
  Let b4 = M[007301];
  PushFrame;
  PushReturnAddress 105888;
  SetLocal 1 MakeHiLo(b3,b4);
  SetLocal 2 15;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 105888:
  PushStack call_result;
  TraceOperation 105895 (Jz (Var Sp) (Branch F (Dloc 105904)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 105898 (Push (Con 0));
    PushStack 0;
    TraceOperation 105901 (Jump 105907);
    Jump: 105907
  } else {
    Jump: 105904
  }
LocOp 105904:
  TraceOperation 105904 (Push (Con 1));
  PushStack 1;
  Jump: 105907
LocOp 105907:
  TraceOperation 105907 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 105908:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 105909
LocOp 105909:
  TraceOperation 105909 (Store (Con 1) (Var (Global 47)));
  Let b1 = M[007300];
  Let b2 = M[007301];
  SetLocal 1 MakeHiLo(b1,b2);
  TraceOperation 105912 (Call (Floc 026172) [Var (Global 47),Con 15] Sp);
  Let b3 = M[007300];
  Let b4 = M[007301];
  PushFrame;
  PushReturnAddress 105912;
  SetLocal 1 MakeHiLo(b3,b4);
  SetLocal 2 15;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 105912:
  PushStack call_result;
  TraceOperation 105919 (Jz (Var Sp) (Branch F (Dloc 105928)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 105922 (Push (Con 0));
    PushStack 0;
    TraceOperation 105925 (Jump 105931);
    Jump: 105931
  } else {
    Jump: 105928
  }
LocOp 105928:
  TraceOperation 105928 (Push (Con 1));
  PushStack 1;
  Jump: 105931
LocOp 105931:
  TraceOperation 105931 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 105932:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 105933
LocOp 105933:
  TraceOperation 105933 (Store (Con 1) (Var (Global 47)));
  Let b1 = M[007300];
  Let b2 = M[007301];
  SetLocal 1 MakeHiLo(b1,b2);
  TraceOperation 105936 (Call (Floc 026172) [Var (Global 47),Con 15] Sp);
  Let b3 = M[007300];
  Let b4 = M[007301];
  PushFrame;
  PushReturnAddress 105936;
  SetLocal 1 MakeHiLo(b3,b4);
  SetLocal 2 15;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 105936:
  PushStack call_result;
  TraceOperation 105943 (Jz (Var Sp) (Branch F (Dloc 105952)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 105946 (Push (Con 0));
    PushStack 0;
    TraceOperation 105949 (Jump 105955);
    Jump: 105955
  } else {
    Jump: 105952
  }
LocOp 105952:
  TraceOperation 105952 (Push (Con 1));
  PushStack 1;
  Jump: 105955
LocOp 105955:
  TraceOperation 105955 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 105956:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 105957
LocOp 105957:
  TraceOperation 105957 (Store (Con 2) (Var (Global 42)));
  Let b1 = M[007290];
  Let b2 = M[007291];
  SetLocal 2 MakeHiLo(b1,b2);
  TraceOperation 105960 (Store (Con 3) (Var (Global 43)));
  Let b3 = M[007292];
  Let b4 = M[007293];
  SetLocal 3 MakeHiLo(b3,b4);
  TraceOperation 105963 (Store (Con 58) (Var (Global 47)));
  Let b5 = M[007300];
  Let b6 = M[007301];
  SetByte 007290 b5;
  SetByte 007291 b6;
  TraceOperation 105966 (Store (Con 59) (Var (Global 48)));
  Let b7 = M[007302];
  Let b8 = M[007303];
  SetByte 007292 b7;
  SetByte 007293 b8;
  TraceOperation 105969 (Call (Floc 088684) [Con 24] (Local 4));
  PushFrame;
  PushReturnAddress 105969;
  SetLocal 1 24;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 088685
LocReturn 105969:
  SetLocal 4 call_result;
  TraceOperation 105975 (Store (Con 58) (Var (Local 2)));
  SetByte 007290 HiByte(GetLocal(2));
  SetByte 007291 LoByte(GetLocal(2));
  TraceOperation 105978 (Store (Con 59) (Var (Local 3)));
  SetByte 007292 HiByte(GetLocal(3));
  SetByte 007293 LoByte(GetLocal(3));
  TraceOperation 105981 (Jz (Var (Local 4)) (Branch T (Dloc 106033)));
  if (IsZero(GetLocal(4))) {
    Jump: 106033
  } else {
    TraceOperation 105984 (Call (Floc 089832) [] Sp);
    PushFrame;
    PushReturnAddress 105984;
    MakeRoutineFrame 0;
    Jump: 089833
  }
LocReturn 105984:
  PushStack call_result;
  TraceOperation 105988 (Jz (Var Sp) (Branch T (Dloc 106033)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 106033
  } else {
    TraceOperation 105991 (Call (Floc 089844) [] (Local 1));
    PushFrame;
    PushReturnAddress 105991;
    MakeRoutineFrame 1;
    SetLocal 1 0;
    Jump: 089845
  }
LocReturn 105991:
  SetLocal 1 call_result;
  TraceOperation 105995 (Je [Var (Local 1),Con 29337] (Branch F (Dloc 106003)));
  if (Equal(GetLocal(1),29337)) {
    TraceOperation 106001 (Ret (Con 4));
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 4;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 106003
  }
LocOp 106003:
  TraceOperation 106003 (Je [Var (Local 1),Con 29340] (Branch F (Dloc 106011)));
  if (Equal(GetLocal(1),29340)) {
    TraceOperation 106009 (Ret (Con 3));
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 3;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 106011
  }
LocOp 106011:
  TraceOperation 106011 (Je [Var (Local 1),Con 29342] (Branch F (Dloc 106019)));
  if (Equal(GetLocal(1),29342)) {
    TraceOperation 106017 (Ret (Con 2));
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 2;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 106019
  }
LocOp 106019:
  TraceOperation 106019 (Je [Var (Local 1),Con 29345] (Branch F (Dloc 106026)));
  if (Equal(GetLocal(1),29345)) {
    TraceOperation 106025 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 106026
  }
LocOp 106026:
  TraceOperation 106026 (Je [Var (Local 1),Con 29348] (Branch F (Dloc 106033)));
  if (Equal(GetLocal(1),29348)) {
    TraceOperation 106032 Rfalse;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 0;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 106033
  }
LocOp 106033:
  TraceOperation 106033 (Ret (Con 2));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 2;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 106036:
  MakeRoutineFrame 0;
  Jump: 106037
LocOp 106037:
  TraceOperation 106037 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 106040:
  MakeRoutineFrame 0;
  Jump: 106041
LocOp 106041:
  TraceOperation 106041 (Store (Con 20) (Con 1));
  SetByte 007214 0;
  SetByte 007215 1;
  TraceOperation 106044 (Call (Floc 078000) [Con 45,Con 22] Sp);
  PushFrame;
  PushReturnAddress 106044;
  SetLocal 1 45;
  SetLocal 2 22;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 078001
LocReturn 106044:
  PushStack call_result;
  TraceOperation 106051 (Jz (Var Sp) (Branch F (Dloc 106057)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 106054 (Jump 106066);
    Jump: 106066
  } else {
    Jump: 106057
  }
LocOp 106057:
  TraceOperation 106057 (CallN (Floc 080952) [Con -31250]);
  PushFrame;
  PushReturnAddress 106057;
  SetLocal 1 -31250;
  MakeRoutineFrame 1;
  Jump: 080953
LocReturn 106057:
  TraceOperation 106063 (Jump 106072);
  Jump: 106072
LocOp 106066:
  TraceOperation 106066 (CallN (Floc 080952) [Con -31266]);
  PushFrame;
  PushReturnAddress 106066;
  SetLocal 1 -31266;
  MakeRoutineFrame 1;
  Jump: 080953
LocReturn 106066:
  Jump: 106072
LocOp 106072:
  TraceOperation 106072 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 106076:
  MakeRoutineFrame 0;
  Jump: 106077
LocOp 106077:
  TraceOperation 106077 (Store (Con 20) (Con 1));
  SetByte 007214 0;
  SetByte 007215 1;
  TraceOperation 106080 (CallN (Floc 080952) [Con -31750]);
  PushFrame;
  PushReturnAddress 106080;
  SetLocal 1 -31750;
  MakeRoutineFrame 1;
  Jump: 080953
LocReturn 106080:
  TraceOperation 106086 (Call (Floc 088304) [Con 62,Con 12] Sp);
  PushFrame;
  PushReturnAddress 106086;
  SetLocal 1 62;
  SetLocal 2 12;
  MakeRoutineFrame 2;
  Jump: 088305
LocReturn 106086:
  PushStack call_result;
  TraceOperation 106093 (Jz (Var Sp) (Branch F (Dloc 106099)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 106096 (Jump 106108);
    Jump: 106108
  } else {
    Jump: 106099
  }
LocOp 106099:
  TraceOperation 106099 (CallN (Floc 080952) [Con -31267]);
  PushFrame;
  PushReturnAddress 106099;
  SetLocal 1 -31267;
  MakeRoutineFrame 1;
  Jump: 080953
LocReturn 106099:
  TraceOperation 106105 (Jump 106114);
  Jump: 106114
LocOp 106108:
  TraceOperation 106108 (CallN (Floc 080952) [Con -31268]);
  PushFrame;
  PushReturnAddress 106108;
  SetLocal 1 -31268;
  MakeRoutineFrame 1;
  Jump: 080953
LocReturn 106108:
  Jump: 106114
LocOp 106114:
  TraceOperation 106114 (Call (Floc 088304) [Con 49,Con 36] Sp);
  PushFrame;
  PushReturnAddress 106114;
  SetLocal 1 49;
  SetLocal 2 36;
  MakeRoutineFrame 2;
  Jump: 088305
LocReturn 106114:
  PushStack call_result;
  TraceOperation 106121 (Jz (Var Sp) (Branch F (Dloc 106127)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 106124 (Jump 106133);
    Jump: 106133
  } else {
    Jump: 106127
  }
LocOp 106127:
  TraceOperation 106127 (CallN (Floc 080952) [Con -31846]);
  PushFrame;
  PushReturnAddress 106127;
  SetLocal 1 -31846;
  MakeRoutineFrame 1;
  Jump: 080953
LocReturn 106127:
  Jump: 106133
LocOp 106133:
  TraceOperation 106133 (CallN (Floc 080952) [Con -31842]);
  PushFrame;
  PushReturnAddress 106133;
  SetLocal 1 -31842;
  MakeRoutineFrame 1;
  Jump: 080953
LocReturn 106133:
  TraceOperation 106139 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 106140:
  MakeRoutineFrame 0;
  Jump: 106141
LocOp 106141:
  TraceOperation 106141 (Store (Con 20) (Con 1));
  SetByte 007214 0;
  SetByte 007215 1;
  TraceOperation 106144 (CallN (Floc 080952) [Con -31263]);
  PushFrame;
  PushReturnAddress 106144;
  SetLocal 1 -31263;
  MakeRoutineFrame 1;
  Jump: 080953
LocReturn 106144:
  TraceOperation 106150 (CallN (Floc 056692) []);
  PushFrame;
  PushReturnAddress 106150;
  MakeRoutineFrame 0;
  Jump: 056693
LocReturn 106150:
  TraceOperation 106153 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 106156:
  MakeRoutineFrame 0;
  Jump: 106157
LocOp 106157:
  TraceOperation 106157 (Store (Con 20) (Con 1));
  SetByte 007214 0;
  SetByte 007215 1;
  TraceOperation 106160 (CallN (Floc 080952) [Con -31760]);
  PushFrame;
  PushReturnAddress 106160;
  SetLocal 1 -31760;
  MakeRoutineFrame 1;
  Jump: 080953
LocReturn 106160:
  TraceOperation 106166 (Call (Floc 109820) [] Sp);
  PushFrame;
  PushReturnAddress 106166;
  MakeRoutineFrame 1;
  SetLocal 1 0;
  Jump: 109821
LocReturn 106166:
  PushStack call_result;
  TraceOperation 106170 (Jz (Var Sp) (Branch F (Dloc 106176)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 106173 (Jump 106252);
    Jump: 106252
  } else {
    Jump: 106176
  }
LocOp 106176:
  TraceOperation 106176 (CallN (Floc 080952) [Con -31941]);
  PushFrame;
  PushReturnAddress 106176;
  SetLocal 1 -31941;
  MakeRoutineFrame 1;
  Jump: 080953
LocReturn 106176:
  TraceOperation 106182 (Push (Var (Global 10)));
  Let b1 = M[007226];
  Let b2 = M[007227];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 106185 (Store (Con 26) (Con 1));
  SetByte 007226 0;
  SetByte 007227 1;
  Jump: 106188
LocOp 106188:
  TraceOperation 106188 (Call (Floc 026172) [Var (Global 10),Con 2] Sp);
  Let b1 = M[007226];
  Let b2 = M[007227];
  PushFrame;
  PushReturnAddress 106188;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 2;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 106188:
  PushStack call_result;
  TraceOperation 106195 (Jz (Var Sp) (Branch T (Dloc 106227)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 106227
  } else {
    TraceOperation 106198 (Call (Floc 026172) [Var (Global 10),Con 14] Sp);
    Let b2 = M[007226];
    Let b3 = M[007227];
    PushFrame;
    PushReturnAddress 106198;
    SetLocal 1 MakeHiLo(b2,b3);
    SetLocal 2 14;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  }
LocReturn 106198:
  PushStack call_result;
  TraceOperation 106205 (Jz (Var Sp) (Branch T (Dloc 106224)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 106224
  } else {
    TraceOperation 106208 (Call (Floc 102816) [Var (Global 10)] Sp);
    Let b2 = M[007226];
    Let b3 = M[007227];
    PushFrame;
    PushReturnAddress 106208;
    SetLocal 1 MakeHiLo(b2,b3);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 102817
  }
LocReturn 106208:
  PushStack call_result;
  TraceOperation 106214 (Je [Con 67,Var Sp] (Branch F (Dloc 106224)));
  PopStack popped1;
  if (Equal(67,popped1)) {
    TraceOperation 106218 (Set_attr (Var (Global 10)) (Con 35));
    Let b2 = M[007226];
    Let b3 = M[007227];
    Let b4 = M[Offset(Offset(000378,Mul(MakeHiLo(b2,b3),14)),4)];
    SetByte Offset(Offset(000378,Mul(MakeHiLo(b2,b3),14)),4) SetBit(b4,4);
    TraceOperation 106221 (Jump 106227);
    Jump: 106227
  } else {
    Jump: 106224
  }
LocOp 106224:
  TraceOperation 106224 (Clear_attr (Var (Global 10)) (Con 35));
  Let b1 = M[007226];
  Let b2 = M[007227];
  Let b3 = M[Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),4)];
  SetByte Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),4) ClearBit(b3,4);
  Jump: 106227
LocOp 106227:
  TraceOperation 106227 (Inc (Con 26));
  Let b1 = M[007226];
  Let b2 = M[007227];
  SetByte 007226 HiByte(Add(MakeHiLo(b1,b2),1));
  SetByte 007227 LoByte(Add(MakeHiLo(b1,b2),1));
  TraceOperation 106229 (Jg (Var (Global 10)) (Con 72) (Branch T (Dloc 106238)));
  Let b3 = M[007226];
  Let b4 = M[007227];
  if (GreaterThan(MakeHiLo(b3,b4),72)) {
    Jump: 106238
  } else {
    TraceOperation 106235 (Jump 106188);
    Jump: 106188
  }
LocOp 106238:
  TraceOperation 106238 (CallN (Floc 037780) [Con 8]);
  PushFrame;
  PushReturnAddress 106238;
  SetLocal 1 8;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 037781
LocReturn 106238:
  TraceOperation 106243 (Pull (Con 26));
  PopStack popped1;
  SetByte 007226 HiByte(popped1);
  SetByte 007227 LoByte(popped1);
  TraceOperation 106246 (CallN (Floc 080952) [Con -31842]);
  PushFrame;
  PushReturnAddress 106246;
  SetLocal 1 -31842;
  MakeRoutineFrame 1;
  Jump: 080953
LocReturn 106246:
  Jump: 106252
LocOp 106252:
  TraceOperation 106252 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 106256:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 106257
LocOp 106257:
  TraceOperation 106257 (Store (Con 1) (Con 0));
  SetLocal 1 0;
  Jump: 106260
LocOp 106260:
  TraceOperation 106260 (Jl (Var (Local 1)) (Con 2) (Branch F (Dloc 106283)));
  if (LessThan(GetLocal(1),2)) {
    TraceOperation 106266 (Loadw (Con 19850) (Var (Local 1)) Sp);
    Let b1 = M[Offset(019850,Mul(2,GetLocal(1)))];
    Let b2 = M[Offset(Offset(019850,Mul(2,GetLocal(1))),1)];
    PushStack MakeHiLo(b1,b2);
    TraceOperation 106272 (Storew (Con 19844) (Var (Local 1)) (Var Sp));
    PopStack popped3;
    SetByte Offset(019844,Mul(2,GetLocal(1))) HiByte(popped3);
    SetByte Offset(Offset(019844,Mul(2,GetLocal(1))),1) LoByte(popped3);
    TraceOperation 106278 (Inc (Con 1));
    SetLocal 1 Add(GetLocal(1),1);
    TraceOperation 106280 (Jump 106260);
    Jump: 106260
  } else {
    Jump: 106283
  }
LocOp 106283:
  TraceOperation 106283 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 106284:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 106285
LocOp 106285:
  TraceOperation 106285 (Store (Con 1) (Con 0));
  SetLocal 1 0;
  Jump: 106288
LocOp 106288:
  TraceOperation 106288 (Jl (Var (Local 1)) (Con 2) (Branch F (Dloc 106309)));
  if (LessThan(GetLocal(1),2)) {
    TraceOperation 106294 (CallN (Floc 106316) [Con 0,Var (Local 1),Con 1,Con -1]);
    PushFrame;
    PushReturnAddress 106294;
    SetLocal 1 0;
    SetLocal 2 GetLocal(1);
    SetLocal 3 1;
    SetLocal 4 -1;
    MakeRoutineFrame 10;
    SetLocal 10 0;
    SetLocal 9 0;
    SetLocal 8 0;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    Jump: 106317
  } else {
    Jump: 106309
  }
LocReturn 106294:
  TraceOperation 106304 (Inc (Con 1));
  SetLocal 1 Add(GetLocal(1),1);
  TraceOperation 106306 (Jump 106288);
  Jump: 106288
LocOp 106309:
  TraceOperation 106309 (CallN (Floc 106256) []);
  PushFrame;
  PushReturnAddress 106309;
  MakeRoutineFrame 1;
  SetLocal 1 0;
  Jump: 106257
LocReturn 106309:
  TraceOperation 106312 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 106316:
  MakeRoutineFrame 10;
  if (LessThanByte(num_actuals,10)) {
    SetLocal 10 0;
    if (LessThanByte(num_actuals,9)) {
      SetLocal 9 0;
      if (LessThanByte(num_actuals,8)) {
        SetLocal 8 0;
        if (LessThanByte(num_actuals,7)) {
          SetLocal 7 0;
          if (LessThanByte(num_actuals,6)) {
            SetLocal 6 0;
            if (LessThanByte(num_actuals,5)) {
              SetLocal 5 0;
              if (LessThanByte(num_actuals,4)) {
                SetLocal 4 0;
                if (LessThanByte(num_actuals,3)) {
                  SetLocal 3 0;
                  if (LessThanByte(num_actuals,2)) {
                    SetLocal 2 0;
                    if (LessThanByte(num_actuals,1)) {
                      SetLocal 1 0;
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  Jump: 106317
LocOp 106317:
  TraceOperation 106317 (Jz (Var (Local 1)) (Branch T (Dloc 106365)));
  if (IsZero(GetLocal(1))) {
    Jump: 106365
  } else {
    TraceOperation 106320 (Loadw (Con 19844) (Var (Local 2)) Sp);
    Let b1 = M[Offset(019844,Mul(2,GetLocal(2)))];
    Let b2 = M[Offset(Offset(019844,Mul(2,GetLocal(2))),1)];
    PushStack MakeHiLo(b1,b2);
    TraceOperation 106326 (And (Var Sp) (Con 1) (Local 6));
    PopStack popped3;
    SetLocal 6 And(popped3,1);
    TraceOperation 106330 (Loadw (Con 19844) (Var (Local 2)) Sp);
    Let b4 = M[Offset(019844,Mul(2,GetLocal(2)))];
    Let b5 = M[Offset(Offset(019844,Mul(2,GetLocal(2))),1)];
    PushStack MakeHiLo(b4,b5);
    TraceOperation 106336 (And (Var Sp) (Con 254) Sp);
    PopStack popped6;
    PushStack And(popped6,254);
    TraceOperation 106340 (Div (Var Sp) (Con 2) (Local 7));
    PopStack popped7;
    SetLocal 7 Div(popped7,2);
    TraceOperation 106344 (Loadw (Con 19844) (Var (Local 2)) Sp);
    Let b8 = M[Offset(019844,Mul(2,GetLocal(2)))];
    Let b9 = M[Offset(Offset(019844,Mul(2,GetLocal(2))),1)];
    PushStack MakeHiLo(b8,b9);
    TraceOperation 106350 (And (Var Sp) (Con 32512) Sp);
    PopStack popped10;
    PushStack And(popped10,32512);
    TraceOperation 106356 (Div (Var Sp) (Con 256) (Local 8));
    PopStack popped11;
    SetLocal 8 Div(popped11,256);
    TraceOperation 106362 (Jump 106507);
    Jump: 106507
  }
LocOp 106365:
  TraceOperation 106365 (Loadw (Con 19850) (Var (Local 2)) Sp);
  Let b1 = M[Offset(019850,Mul(2,GetLocal(2)))];
  Let b2 = M[Offset(Offset(019850,Mul(2,GetLocal(2))),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 106371 (And (Var Sp) (Con 1) (Local 5));
  PopStack popped3;
  SetLocal 5 And(popped3,1);
  TraceOperation 106375 (Loadw (Con 19850) (Var (Local 2)) Sp);
  Let b4 = M[Offset(019850,Mul(2,GetLocal(2)))];
  Let b5 = M[Offset(Offset(019850,Mul(2,GetLocal(2))),1)];
  PushStack MakeHiLo(b4,b5);
  TraceOperation 106381 (And (Var Sp) (Con 254) Sp);
  PopStack popped6;
  PushStack And(popped6,254);
  TraceOperation 106385 (Div (Var Sp) (Con 2) (Local 7));
  PopStack popped7;
  SetLocal 7 Div(popped7,2);
  TraceOperation 106389 (Loadw (Con 19850) (Var (Local 2)) Sp);
  Let b8 = M[Offset(019850,Mul(2,GetLocal(2)))];
  Let b9 = M[Offset(Offset(019850,Mul(2,GetLocal(2))),1)];
  PushStack MakeHiLo(b8,b9);
  TraceOperation 106395 (And (Var Sp) (Con 32512) Sp);
  PopStack popped10;
  PushStack And(popped10,32512);
  TraceOperation 106401 (Div (Var Sp) (Con 256) (Local 8));
  PopStack popped11;
  SetLocal 8 Div(popped11,256);
  TraceOperation 106407 (Store (Con 255) (Var (Local 2)));
  SetByte 007684 HiByte(GetLocal(2));
  SetByte 007685 LoByte(GetLocal(2));
  TraceOperation 106410 (Je [Var (Global 239),Con 0] (Branch F (Dloc 106424)));
  Let b12 = M[007684];
  Let b13 = M[007685];
  if (Equal(MakeHiLo(b12,b13),0)) {
    TraceOperation 106414 (Call (Floc 088304) [Con 62,Con 12] (Local 6));
    PushFrame;
    PushReturnAddress 106414;
    SetLocal 1 62;
    SetLocal 2 12;
    MakeRoutineFrame 2;
    Jump: 088305
  } else {
    Jump: 106424
  }
LocReturn 106414:
  SetLocal 6 call_result;
  TraceOperation 106421 (Jump 106450);
  Jump: 106450
LocOp 106424:
  TraceOperation 106424 (Je [Var (Global 239),Con 1] (Branch F (Dloc 106450)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),1)) {
    TraceOperation 106428 (Call (Floc 088304) [Con 62,Con 12] Sp);
    PushFrame;
    PushReturnAddress 106428;
    SetLocal 1 62;
    SetLocal 2 12;
    MakeRoutineFrame 2;
    Jump: 088305
  } else {
    Jump: 106450
  }
LocReturn 106428:
  PushStack call_result;
  TraceOperation 106435 (Jz (Var Sp) (Branch T (Dloc 106444)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 106444
  } else {
    TraceOperation 106438 (Push (Con 0));
    PushStack 0;
    TraceOperation 106441 (Jump 106447);
    Jump: 106447
  }
LocOp 106444:
  TraceOperation 106444 (Push (Con 1));
  PushStack 1;
  Jump: 106447
LocOp 106447:
  TraceOperation 106447 (Pull (Con 6));
  PopStack popped1;
  SetLocal 6 popped1;
  Jump: 106450
LocOp 106450:
  TraceOperation 106450 (Jz (Var (Local 6)) (Branch F (Dloc 106459)));
  if (IsZero(GetLocal(6))) {
    TraceOperation 106453 (Store (Con 8) (Con 0));
    SetLocal 8 0;
    TraceOperation 106456 (Jump 106483);
    Jump: 106483
  } else {
    Jump: 106459
  }
LocOp 106459:
  TraceOperation 106459 (Jz (Var (Local 5)) (Branch F (Dloc 106471)));
  if (IsZero(GetLocal(5))) {
    TraceOperation 106462 (Inc (Con 7));
    SetLocal 7 Add(GetLocal(7),1);
    TraceOperation 106464 (Jg (Var (Local 7)) (Con 127) (Branch F (Dloc 106471)));
    if (GreaterThan(GetLocal(7),127)) {
      TraceOperation 106468 (Store (Con 7) (Con 127));
      SetLocal 7 127;
      Jump: 106471
    } else {
      Jump: 106471
    }
  } else {
    Jump: 106471
  }
LocOp 106471:
  TraceOperation 106471 (Jz (Var (Local 3)) (Branch T (Dloc 106483)));
  if (IsZero(GetLocal(3))) {
    Jump: 106483
  } else {
    TraceOperation 106474 (Inc (Con 8));
    SetLocal 8 Add(GetLocal(8),1);
    TraceOperation 106476 (Jg (Var (Local 8)) (Con 127) (Branch F (Dloc 106483)));
    if (GreaterThan(GetLocal(8),127)) {
      TraceOperation 106480 (Store (Con 8) (Con 127));
      SetLocal 8 127;
      Jump: 106483
    } else {
      Jump: 106483
    }
  }
LocOp 106483:
  TraceOperation 106483 (Mul (Con 256) (Var (Local 8)) Sp);
  PushStack Mul(256,GetLocal(8));
  TraceOperation 106489 (Mul (Con 2) (Var (Local 7)) Sp);
  PushStack Mul(2,GetLocal(7));
  TraceOperation 106493 (Add (Var (Local 6)) (Var Sp) Sp);
  PopStack popped1;
  PushStack Add(GetLocal(6),popped1);
  TraceOperation 106497 (Add (Var Sp) (Var Sp) Sp);
  PopStack popped2;
  PopStack popped3;
  PushStack Add(popped2,popped3);
  TraceOperation 106501 (Storew (Con 19850) (Var (Local 2)) (Var Sp));
  PopStack popped4;
  SetByte Offset(019850,Mul(2,GetLocal(2))) HiByte(popped4);
  SetByte Offset(Offset(019850,Mul(2,GetLocal(2))),1) LoByte(popped4);
  Jump: 106507
LocOp 106507:
  TraceOperation 106507 (Store (Con 255) (Var (Local 4)));
  SetByte 007684 HiByte(GetLocal(4));
  SetByte 007685 LoByte(GetLocal(4));
  TraceOperation 106510 (Je [Var (Global 239),Con 0] (Branch F (Dloc 106522)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),0)) {
    TraceOperation 106514 (Jz (Var (Local 6)) (Branch T (Dloc 106519)));
    if (IsZero(GetLocal(6))) {
      Jump: 106519
    } else {
      TraceOperation 106517 (Ret (Var (Local 6)));
      PopFrame;
      PopReturnAddress return_address_3;
      SetResult GetLocal(6);
      JumpIndirect: (return) return_address_3
    }
  } else {
    Jump: 106522
  }
LocOp 106519:
  TraceOperation 106519 (Jump 106564);
  Jump: 106564
LocOp 106522:
  TraceOperation 106522 (Je [Var (Global 239),Con 1] (Branch F (Dloc 106534)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),1)) {
    TraceOperation 106526 (Jz (Var (Local 6)) (Branch T (Dloc 106531)));
    if (IsZero(GetLocal(6))) {
      Jump: 106531
    } else {
      TraceOperation 106529 (Ret (Var (Local 7)));
      PopFrame;
      PopReturnAddress return_address_3;
      SetResult GetLocal(7);
      JumpIndirect: (return) return_address_3
    }
  } else {
    Jump: 106534
  }
LocOp 106531:
  TraceOperation 106531 (Jump 106564);
  Jump: 106564
LocOp 106534:
  TraceOperation 106534 (Je [Var (Global 239),Con 2] (Branch F (Dloc 106546)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),2)) {
    TraceOperation 106538 (Jz (Var (Local 6)) (Branch T (Dloc 106543)));
    if (IsZero(GetLocal(6))) {
      Jump: 106543
    } else {
      TraceOperation 106541 (Ret (Var (Local 8)));
      PopFrame;
      PopReturnAddress return_address_3;
      SetResult GetLocal(8);
      JumpIndirect: (return) return_address_3
    }
  } else {
    Jump: 106546
  }
LocOp 106543:
  TraceOperation 106543 (Jump 106564);
  Jump: 106564
LocOp 106546:
  TraceOperation 106546 (Je [Var (Global 239),Con 4] (Branch F (Dloc 106552)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),4)) {
    TraceOperation 106550 (Ret (Var (Local 6)));
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult GetLocal(6);
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 106552
  }
LocOp 106552:
  TraceOperation 106552 (Je [Var (Global 239),Con 5] (Branch F (Dloc 106558)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),5)) {
    TraceOperation 106556 (Ret (Var (Local 7)));
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult GetLocal(7);
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 106558
  }
LocOp 106558:
  TraceOperation 106558 (Je [Var (Global 239),Con 6] (Branch F (Dloc 106564)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),6)) {
    TraceOperation 106562 (Ret (Var (Local 8)));
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult GetLocal(8);
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 106564
  }
LocOp 106564:
  TraceOperation 106564 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 106568:
  MakeRoutineFrame 0;
  Jump: 106569
LocOp 106569:
  TraceOperation 106569 (Je [Var (Global 40),Con 20] (Branch F (Dloc 106581)));
  Let b1 = M[007286];
  Let b2 = M[007287];
  if (Equal(MakeHiLo(b1,b2),20)) {
    TraceOperation 106573 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 106581)));
    Let b3 = M[007280];
    Let b4 = M[007281];
    Let b5 = M[007268];
    Let b6 = M[007269];
    if (Equal(MakeHiLo(b3,b4),MakeHiLo(b5,b6))) {
      TraceOperation 106577 (Je [Var (Global 47),Con 61] (Branch T Dtrue));
      Let b7 = M[007300];
      Let b8 = M[007301];
      if (Equal(MakeHiLo(b7,b8),61)) {
        PopFrame;
        PopReturnAddress return_address_9;
        SetResult 1;
        JumpIndirect: (return) return_address_9
      } else {
        Jump: 106581
      }
    } else {
      Jump: 106581
    }
  } else {
    Jump: 106581
  }
LocOp 106581:
  TraceOperation 106581 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 106584:
  MakeRoutineFrame 0;
  Jump: 106585
LocOp 106585:
  TraceOperation 106585 (Je [Var (Global 40),Con 77] (Branch F (Dloc 106597)));
  Let b1 = M[007286];
  Let b2 = M[007287];
  if (Equal(MakeHiLo(b1,b2),77)) {
    TraceOperation 106589 (Je [Var (Global 37),Var (Global 31)] (Branch F (Dloc 106597)));
    Let b3 = M[007280];
    Let b4 = M[007281];
    Let b5 = M[007268];
    Let b6 = M[007269];
    if (Equal(MakeHiLo(b3,b4),MakeHiLo(b5,b6))) {
      TraceOperation 106593 (Je [Var (Global 47),Con 57] (Branch T Dtrue));
      Let b7 = M[007300];
      Let b8 = M[007301];
      if (Equal(MakeHiLo(b7,b8),57)) {
        PopFrame;
        PopReturnAddress return_address_9;
        SetResult 1;
        JumpIndirect: (return) return_address_9
      } else {
        Jump: 106597
      }
    } else {
      Jump: 106597
    }
  } else {
    Jump: 106597
  }
LocOp 106597:
  TraceOperation 106597 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 106600:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 106601
LocOp 106601:
  TraceOperation 106601 (Store (Con 4) (Con 0));
  SetLocal 4 0;
  Jump: 106604
LocOp 106604:
  TraceOperation 106604 (Loadw (Con 19818) (Var (Local 4)) Sp);
  Let b1 = M[Offset(019818,Mul(2,GetLocal(4)))];
  Let b2 = M[Offset(Offset(019818,Mul(2,GetLocal(4))),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 106610 (Jz (Var Sp) (Branch T (Dloc 106719)));
  PopStack popped3;
  if (IsZero(popped3)) {
    Jump: 106719
  } else {
    TraceOperation 106614 (Loadw (Con 19818) (Var (Local 4)) Sp);
    Let b4 = M[Offset(019818,Mul(2,GetLocal(4)))];
    Let b5 = M[Offset(Offset(019818,Mul(2,GetLocal(4))),1)];
    PushStack MakeHiLo(b4,b5);
    TraceOperation 106620 (Call (Floc 110196) [Var Sp,Con 69] Sp);
    PopStack popped6;
    PushFrame;
    PushReturnAddress 106620;
    SetLocal 1 popped6;
    SetLocal 2 69;
    MakeRoutineFrame 15;
    SetLocal 15 0;
    SetLocal 14 0;
    SetLocal 13 0;
    SetLocal 12 0;
    SetLocal 11 0;
    SetLocal 10 0;
    SetLocal 9 0;
    SetLocal 8 0;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 110197
  }
LocReturn 106620:
  PushStack call_result;
  TraceOperation 106627 (Jz (Var Sp) (Branch T (Dloc 106705)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 106705
  } else {
    TraceOperation 106631 (Jz (Var (Local 1)) (Branch T (Dloc 106637)));
    if (IsZero(GetLocal(1))) {
      Jump: 106637
    } else {
      TraceOperation 106634 (Jump 106714);
      Jump: 106714
    }
  }
LocOp 106637:
  TraceOperation 106637 (Store (Con 255) (Con 19826));
  SetByte 007684 77;
  SetByte 007685 114;
  TraceOperation 106642 (Store (Con 254) (Var (Local 4)));
  SetByte 007682 HiByte(GetLocal(4));
  SetByte 007683 LoByte(GetLocal(4));
  TraceOperation 106645 (Loadw (Var (Global 239)) (Var (Global 238)) (Global 237));
  Let b1 = M[007684];
  Let b2 = M[007685];
  Let b3 = M[007682];
  Let b4 = M[007683];
  Let b5 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4)))];
  Let b6 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4))),1)];
  SetByte 007680 b5;
  SetByte 007681 b6;
  TraceOperation 106649 (Inc (Con 253));
  Let b7 = M[007680];
  Let b8 = M[007681];
  SetByte 007680 HiByte(Add(MakeHiLo(b7,b8),1));
  SetByte 007681 LoByte(Add(MakeHiLo(b7,b8),1));
  TraceOperation 106651 (Storew (Var (Global 239)) (Var (Global 238)) (Var (Global 237)));
  Let b9 = M[007684];
  Let b10 = M[007685];
  Let b11 = M[007682];
  Let b12 = M[007683];
  Let b13 = M[007680];
  Let b14 = M[007681];
  SetByte Offset(Address(MakeHiLo(b9,b10)),Mul(2,MakeHiLo(b11,b12))) b13;
  SetByte Offset(Offset(Address(MakeHiLo(b9,b10)),Mul(2,MakeHiLo(b11,b12))),1) b14;
  TraceOperation 106656 (Jz (Var (Global 49)) (Branch F (Dloc 106702)));
  Let b15 = M[007304];
  Let b16 = M[007305];
  if (IsZero(MakeHiLo(b15,b16))) {
    TraceOperation 106659 (Add (Var (Global 23)) (Con 5) Sp);
    Let b17 = M[007252];
    Let b18 = M[007253];
    PushStack Add(MakeHiLo(b17,b18),5);
    TraceOperation 106663 (Loadw (Con 19838) (Var (Local 4)) Sp);
    Let b19 = M[Offset(019838,Mul(2,GetLocal(4)))];
    Let b20 = M[Offset(Offset(019838,Mul(2,GetLocal(4))),1)];
    PushStack MakeHiLo(b19,b20);
    TraceOperation 106669 (Je [Var Sp,Var Sp] (Branch T (Dloc 106683)));
    PopStack popped21;
    PopStack popped22;
    if (Equal(popped21,popped22)) {
      Jump: 106683
    } else {
      TraceOperation 106673 (Add (Var (Global 23)) (Con 5) Sp);
      Let b23 = M[007252];
      Let b24 = M[007253];
      PushStack Add(MakeHiLo(b23,b24),5);
      TraceOperation 106677 (Storew (Con 19838) (Var (Local 4)) (Var Sp));
      PopStack popped25;
      SetByte Offset(019838,Mul(2,GetLocal(4))) HiByte(popped25);
      SetByte Offset(Offset(019838,Mul(2,GetLocal(4))),1) LoByte(popped25);
      Jump: 106683
    }
  } else {
    Jump: 106702
  }
LocOp 106683:
  TraceOperation 106683 (Store (Con 255) (Con 19832));
  SetByte 007684 77;
  SetByte 007685 120;
  TraceOperation 106688 (Store (Con 254) (Var (Local 4)));
  SetByte 007682 HiByte(GetLocal(4));
  SetByte 007683 LoByte(GetLocal(4));
  TraceOperation 106691 (Loadw (Var (Global 239)) (Var (Global 238)) (Global 237));
  Let b1 = M[007684];
  Let b2 = M[007685];
  Let b3 = M[007682];
  Let b4 = M[007683];
  Let b5 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4)))];
  Let b6 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4))),1)];
  SetByte 007680 b5;
  SetByte 007681 b6;
  TraceOperation 106695 (Inc (Con 253));
  Let b7 = M[007680];
  Let b8 = M[007681];
  SetByte 007680 HiByte(Add(MakeHiLo(b7,b8),1));
  SetByte 007681 LoByte(Add(MakeHiLo(b7,b8),1));
  TraceOperation 106697 (Storew (Var (Global 239)) (Var (Global 238)) (Var (Global 237)));
  Let b9 = M[007684];
  Let b10 = M[007685];
  Let b11 = M[007682];
  Let b12 = M[007683];
  Let b13 = M[007680];
  Let b14 = M[007681];
  SetByte Offset(Address(MakeHiLo(b9,b10)),Mul(2,MakeHiLo(b11,b12))) b13;
  SetByte Offset(Offset(Address(MakeHiLo(b9,b10)),Mul(2,MakeHiLo(b11,b12))),1) b14;
  Jump: 106702
LocOp 106702:
  TraceOperation 106702 (Jump 106714);
  Jump: 106714
LocOp 106705:
  TraceOperation 106705 (Jz (Var (Global 49)) (Branch F (Dloc 106714)));
  Let b1 = M[007304];
  Let b2 = M[007305];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 106708 (Storew (Con 19832) (Var (Local 4)) (Con 0));
    SetByte Offset(019832,Mul(2,GetLocal(4))) 0;
    SetByte Offset(Offset(019832,Mul(2,GetLocal(4))),1) 0;
    Jump: 106714
  } else {
    Jump: 106714
  }
LocOp 106714:
  TraceOperation 106714 (Inc (Con 4));
  SetLocal 4 Add(GetLocal(4),1);
  TraceOperation 106716 (Jump 106604);
  Jump: 106604
LocOp 106719:
  TraceOperation 106719 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 106798:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 106799
LocOp 106799:
  TraceOperation 106799 (Jump 106781);
  Jump: 106781
--------------------------------------------------
LocRoutine 107016:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 107017
LocOp 107017:
  TraceOperation 107017 (Set_colour (Var (Global 144)) (Con 4));
  Let b1 = M[007494];
  Let b2 = M[007495];
  Note "(Set_colour (Var (Global 144)) (Con 4),\"-->\",MakeHiLo(b1,b2),4)";
  TraceOperation 107020 (Inc_chk (Var (Global 123)) (Con 255) (Branch T (Dloc 107085)));
  Let b3 = M[007452];
  Let b4 = M[007453];
  if (IsZeroByte(b4)) {
    PopStack popped5;
    PushStack Add(popped5,1);
    if (GreaterThanEqual(popped5,255)) {
    }
  } else {
    if (LessThanByte(b4,16)) {
      SetLocal b4 Add(GetLocal(b4),1);
      if (GreaterThanEqual(GetLocal(b4),255)) {
      }
    } else {
      Let b6 = M[Offset(007206,Mul(2,Widen(MinusByte(b4,16))))];
      Let b7 = M[Offset(Offset(007206,Mul(2,Widen(MinusByte(b4,16)))),1)];
      SetByte Offset(007206,Mul(2,Widen(MinusByte(b4,16)))) HiByte(Add(MakeHiLo(b6,b7),1));
      SetByte Offset(Offset(007206,Mul(2,Widen(MinusByte(b4,16)))),1) LoByte(Add(MakeHiLo(b6,b7),1));
      if (GreaterThanEqual(MakeHiLo(b6,b7),255)) {
      }
    }
  }
  TraceOperation 107024 (CallN (Floc 051600) [Var (Local 1),Var (Local 4)]);
  PushFrame;
  PushReturnAddress 107024;
  SetLocal 1 GetLocal(1);
  SetLocal 2 GetLocal(4);
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 051601
LocReturn 107024:
  TraceOperation 107030 (Ret (Var (Local 4)));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult GetLocal(4);
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 107110:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 107111
LocOp 107111:
  TraceOperation 107111 (Jump 107093);
  Jump: 107093
--------------------------------------------------
LocRoutine 107210:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 107211
LocOp 107211:
  TraceOperation 107211 (Set_colour (Var (Global 144)) (Con 4));
  Let b1 = M[007494];
  Let b2 = M[007495];
  Note "(Set_colour (Var (Global 144)) (Con 4),\"-->\",MakeHiLo(b1,b2),4)";
  TraceOperation 107214 (Inc_chk (Var (Global 123)) (Con 255) (Branch T (Dloc 107279)));
  Let b3 = M[007452];
  Let b4 = M[007453];
  if (IsZeroByte(b4)) {
    PopStack popped5;
    PushStack Add(popped5,1);
    if (GreaterThanEqual(popped5,255)) {
    }
  } else {
    if (LessThanByte(b4,16)) {
      SetLocal b4 Add(GetLocal(b4),1);
      if (GreaterThanEqual(GetLocal(b4),255)) {
      }
    } else {
      Let b6 = M[Offset(007206,Mul(2,Widen(MinusByte(b4,16))))];
      Let b7 = M[Offset(Offset(007206,Mul(2,Widen(MinusByte(b4,16)))),1)];
      SetByte Offset(007206,Mul(2,Widen(MinusByte(b4,16)))) HiByte(Add(MakeHiLo(b6,b7),1));
      SetByte Offset(Offset(007206,Mul(2,Widen(MinusByte(b4,16)))),1) LoByte(Add(MakeHiLo(b6,b7),1));
      if (GreaterThanEqual(MakeHiLo(b6,b7),255)) {
      }
    }
  }
  TraceOperation 107218 (CallN (Floc 051600) [Var (Local 1),Var (Local 4)]);
  PushFrame;
  PushReturnAddress 107218;
  SetLocal 1 GetLocal(1);
  SetLocal 2 GetLocal(4);
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 051601
LocReturn 107218:
  TraceOperation 107224 (Ret (Var (Local 4)));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult GetLocal(4);
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 107306:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 107307
LocOp 107307:
  TraceOperation 107307 (Jump 107289);
  Jump: 107289
--------------------------------------------------
LocRoutine 107434:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 107435
LocOp 107435:
  TraceOperation 107435 (Inc_chk (Var (Global 29)) (Con 4) (Branch F (Dloc 110626)));
  Let b1 = M[007264];
  Let b2 = M[007265];
  if (IsZeroByte(b2)) {
    PopStack popped3;
    PushStack Add(popped3,1);
    if (GreaterThanEqual(popped3,4)) {
    }
  } else {
    if (LessThanByte(b2,16)) {
      SetLocal b2 Add(GetLocal(b2),1);
      if (GreaterThanEqual(GetLocal(b2),4)) {
      }
    } else {
      Let b4 = M[Offset(007206,Mul(2,Widen(MinusByte(b2,16))))];
      Let b5 = M[Offset(Offset(007206,Mul(2,Widen(MinusByte(b2,16)))),1)];
      SetByte Offset(007206,Mul(2,Widen(MinusByte(b2,16)))) HiByte(Add(MakeHiLo(b4,b5),1));
      SetByte Offset(Offset(007206,Mul(2,Widen(MinusByte(b2,16)))),1) LoByte(Add(MakeHiLo(b4,b5),1));
      if (GreaterThanEqual(MakeHiLo(b4,b5),4)) {
      }
    }
  }
  TraceOperation 107440 (Je [Con 4,Con 91] (Branch T (Dloc 099255)));
  TraceOperation 107445 (Inc_chk (Var (Global 123)) (Con 255) (Branch T (Dloc 107510)));
  Let b6 = M[007452];
  Let b7 = M[007453];
  if (IsZeroByte(b7)) {
    PopStack popped8;
    PushStack Add(popped8,1);
    if (GreaterThanEqual(popped8,255)) {
    }
  } else {
    if (LessThanByte(b7,16)) {
      SetLocal b7 Add(GetLocal(b7),1);
      if (GreaterThanEqual(GetLocal(b7),255)) {
      }
    } else {
      Let b9 = M[Offset(007206,Mul(2,Widen(MinusByte(b7,16))))];
      Let b10 = M[Offset(Offset(007206,Mul(2,Widen(MinusByte(b7,16)))),1)];
      SetByte Offset(007206,Mul(2,Widen(MinusByte(b7,16)))) HiByte(Add(MakeHiLo(b9,b10),1));
      SetByte Offset(Offset(007206,Mul(2,Widen(MinusByte(b7,16)))),1) LoByte(Add(MakeHiLo(b9,b10),1));
      if (GreaterThanEqual(MakeHiLo(b9,b10),255)) {
      }
    }
  }
  TraceOperation 107449 (CallN (Floc 051600) [Var (Local 1),Var (Local 4)]);
  PushFrame;
  PushReturnAddress 107449;
  SetLocal 1 GetLocal(1);
  SetLocal 2 GetLocal(4);
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 051601
LocReturn 107449:
  TraceOperation 107455 (Ret (Var (Local 4)));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult GetLocal(4);
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 107538:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 107539
LocOp 107539:
  TraceOperation 107539 (Jump 107521);
  Jump: 107521
--------------------------------------------------
LocRoutine 107638:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 107639
LocOp 107639:
  TraceOperation 107639 (Set_colour (Var (Global 144)) (Con 4));
  Let b1 = M[007494];
  Let b2 = M[007495];
  Note "(Set_colour (Var (Global 144)) (Con 4),\"-->\",MakeHiLo(b1,b2),4)";
  TraceOperation 107642 (Inc_chk (Var (Global 123)) (Con 255) (Branch T (Dloc 107707)));
  Let b3 = M[007452];
  Let b4 = M[007453];
  if (IsZeroByte(b4)) {
    PopStack popped5;
    PushStack Add(popped5,1);
    if (GreaterThanEqual(popped5,255)) {
    }
  } else {
    if (LessThanByte(b4,16)) {
      SetLocal b4 Add(GetLocal(b4),1);
      if (GreaterThanEqual(GetLocal(b4),255)) {
      }
    } else {
      Let b6 = M[Offset(007206,Mul(2,Widen(MinusByte(b4,16))))];
      Let b7 = M[Offset(Offset(007206,Mul(2,Widen(MinusByte(b4,16)))),1)];
      SetByte Offset(007206,Mul(2,Widen(MinusByte(b4,16)))) HiByte(Add(MakeHiLo(b6,b7),1));
      SetByte Offset(Offset(007206,Mul(2,Widen(MinusByte(b4,16)))),1) LoByte(Add(MakeHiLo(b6,b7),1));
      if (GreaterThanEqual(MakeHiLo(b6,b7),255)) {
      }
    }
  }
  TraceOperation 107646 (CallN (Floc 051600) [Var (Local 1),Var (Local 4)]);
  PushFrame;
  PushReturnAddress 107646;
  SetLocal 1 GetLocal(1);
  SetLocal 2 GetLocal(4);
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 051601
LocReturn 107646:
  TraceOperation 107652 (Ret (Var (Local 4)));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult GetLocal(4);
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 107734:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 107735
LocOp 107735:
  TraceOperation 107735 (Jump 107717);
  Jump: 107717
--------------------------------------------------
LocRoutine 107834:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 107835
LocOp 107835:
  TraceOperation 107835 (Set_colour (Var (Global 144)) (Con 4));
  Let b1 = M[007494];
  Let b2 = M[007495];
  Note "(Set_colour (Var (Global 144)) (Con 4),\"-->\",MakeHiLo(b1,b2),4)";
  TraceOperation 107838 (Inc_chk (Var (Global 123)) (Con 255) (Branch T (Dloc 107903)));
  Let b3 = M[007452];
  Let b4 = M[007453];
  if (IsZeroByte(b4)) {
    PopStack popped5;
    PushStack Add(popped5,1);
    if (GreaterThanEqual(popped5,255)) {
    }
  } else {
    if (LessThanByte(b4,16)) {
      SetLocal b4 Add(GetLocal(b4),1);
      if (GreaterThanEqual(GetLocal(b4),255)) {
      }
    } else {
      Let b6 = M[Offset(007206,Mul(2,Widen(MinusByte(b4,16))))];
      Let b7 = M[Offset(Offset(007206,Mul(2,Widen(MinusByte(b4,16)))),1)];
      SetByte Offset(007206,Mul(2,Widen(MinusByte(b4,16)))) HiByte(Add(MakeHiLo(b6,b7),1));
      SetByte Offset(Offset(007206,Mul(2,Widen(MinusByte(b4,16)))),1) LoByte(Add(MakeHiLo(b6,b7),1));
      if (GreaterThanEqual(MakeHiLo(b6,b7),255)) {
      }
    }
  }
  TraceOperation 107842 (CallN (Floc 051600) [Var (Local 1),Var (Local 4)]);
  PushFrame;
  PushReturnAddress 107842;
  SetLocal 1 GetLocal(1);
  SetLocal 2 GetLocal(4);
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 051601
LocReturn 107842:
  TraceOperation 107848 (Ret (Var (Local 4)));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult GetLocal(4);
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 107852:
  MakeRoutineFrame 6;
  if (LessThanByte(num_actuals,6)) {
    SetLocal 6 0;
    if (LessThanByte(num_actuals,5)) {
      SetLocal 5 0;
      if (LessThanByte(num_actuals,4)) {
        SetLocal 4 0;
        if (LessThanByte(num_actuals,3)) {
          SetLocal 3 0;
          if (LessThanByte(num_actuals,2)) {
            SetLocal 2 0;
            if (LessThanByte(num_actuals,1)) {
              SetLocal 1 0;
            }
          }
        }
      }
    }
  }
  Jump: 107853
LocOp 107853:
  TraceOperation 107853 (Store (Con 91) (Var (Local 1)));
  SetByte 007356 HiByte(GetLocal(1));
  SetByte 007357 LoByte(GetLocal(1));
  TraceOperation 107856 (Store (Con 3) (Var (Global 75)));
  Let b1 = M[007356];
  Let b2 = M[007357];
  SetLocal 3 MakeHiLo(b1,b2);
  TraceOperation 107859 (Store (Con 6) (Con 0));
  SetLocal 6 0;
  TraceOperation 107862 (Call (Floc 041228) [] Sp);
  PushFrame;
  PushReturnAddress 107862;
  MakeRoutineFrame 1;
  SetLocal 1 0;
  Jump: 041229
LocReturn 107862:
  PushStack call_result;
  TraceOperation 107866 (Je [Var Sp,Con 23357] (Branch T (Dloc 107875)));
  PopStack popped1;
  if (Equal(popped1,23357)) {
    Jump: 107875
  } else {
    TraceOperation 107872 (Jump 107888);
    Jump: 107888
  }
LocOp 107875:
  TraceOperation 107875 (Jz (Var (Local 2)) (Branch T (Dloc 107886)));
  if (IsZero(GetLocal(2))) {
    Jump: 107886
  } else {
    TraceOperation 107878 (Sub (Var (Global 75)) (Var (Local 1)) Sp);
    Let b1 = M[007356];
    Let b2 = M[007357];
    PushStack Sub(MakeHiLo(b1,b2),GetLocal(1));
    TraceOperation 107882 (Je [Var Sp,Var (Local 2)] (Branch F (Dloc 107888)));
    PopStack popped3;
    if (Equal(popped3,GetLocal(2))) {
      Jump: 107886
    } else {
      Jump: 107888
    }
  }
LocOp 107886:
  TraceOperation 107886 (Ret (Var (Local 6)));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult GetLocal(6);
  JumpIndirect: (return) return_address_1
LocOp 107888:
  TraceOperation 107888 (Store (Con 6) (Con 0));
  SetLocal 6 0;
  TraceOperation 107891 (Store (Con 91) (Var (Local 3)));
  SetByte 007356 HiByte(GetLocal(3));
  SetByte 007357 LoByte(GetLocal(3));
  TraceOperation 107894 (Ret (Con -1));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult -1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 107900:
  MakeRoutineFrame 6;
  if (LessThanByte(num_actuals,6)) {
    SetLocal 6 0;
    if (LessThanByte(num_actuals,5)) {
      SetLocal 5 0;
      if (LessThanByte(num_actuals,4)) {
        SetLocal 4 0;
        if (LessThanByte(num_actuals,3)) {
          SetLocal 3 0;
          if (LessThanByte(num_actuals,2)) {
            SetLocal 2 0;
            if (LessThanByte(num_actuals,1)) {
              SetLocal 1 0;
            }
          }
        }
      }
    }
  }
  Jump: 107901
LocOp 107901:
  TraceOperation 107901 (Store (Con 91) (Var (Local 1)));
  SetByte 007356 HiByte(GetLocal(1));
  SetByte 007357 LoByte(GetLocal(1));
  TraceOperation 107904 (Store (Con 3) (Var (Global 75)));
  Let b1 = M[007356];
  Let b2 = M[007357];
  SetLocal 3 MakeHiLo(b1,b2);
  TraceOperation 107907 (Store (Con 6) (Con 0));
  SetLocal 6 0;
  TraceOperation 107910 (Call (Floc 041228) [] Sp);
  PushFrame;
  PushReturnAddress 107910;
  MakeRoutineFrame 1;
  SetLocal 1 0;
  Jump: 041229
LocReturn 107910:
  PushStack call_result;
  TraceOperation 107914 (Je [Var Sp,Con 23366] (Branch T (Dloc 107923)));
  PopStack popped1;
  if (Equal(popped1,23366)) {
    Jump: 107923
  } else {
    TraceOperation 107920 (Jump 107936);
    Jump: 107936
  }
LocOp 107923:
  TraceOperation 107923 (Jz (Var (Local 2)) (Branch T (Dloc 107934)));
  if (IsZero(GetLocal(2))) {
    Jump: 107934
  } else {
    TraceOperation 107926 (Sub (Var (Global 75)) (Var (Local 1)) Sp);
    Let b1 = M[007356];
    Let b2 = M[007357];
    PushStack Sub(MakeHiLo(b1,b2),GetLocal(1));
    TraceOperation 107930 (Je [Var Sp,Var (Local 2)] (Branch F (Dloc 107936)));
    PopStack popped3;
    if (Equal(popped3,GetLocal(2))) {
      Jump: 107934
    } else {
      Jump: 107936
    }
  }
LocOp 107934:
  TraceOperation 107934 (Ret (Var (Local 6)));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult GetLocal(6);
  JumpIndirect: (return) return_address_1
LocOp 107936:
  TraceOperation 107936 (Store (Con 6) (Con 0));
  SetLocal 6 0;
  TraceOperation 107939 (Store (Con 91) (Var (Local 3)));
  SetByte 007356 HiByte(GetLocal(3));
  SetByte 007357 LoByte(GetLocal(3));
  TraceOperation 107942 (Ret (Con -1));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult -1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 107948:
  MakeRoutineFrame 6;
  if (LessThanByte(num_actuals,6)) {
    SetLocal 6 0;
    if (LessThanByte(num_actuals,5)) {
      SetLocal 5 0;
      if (LessThanByte(num_actuals,4)) {
        SetLocal 4 0;
        if (LessThanByte(num_actuals,3)) {
          SetLocal 3 0;
          if (LessThanByte(num_actuals,2)) {
            SetLocal 2 0;
            if (LessThanByte(num_actuals,1)) {
              SetLocal 1 0;
            }
          }
        }
      }
    }
  }
  Jump: 107949
LocOp 107949:
  TraceOperation 107949 (Store (Con 91) (Var (Local 1)));
  SetByte 007356 HiByte(GetLocal(1));
  SetByte 007357 LoByte(GetLocal(1));
  TraceOperation 107952 (Store (Con 3) (Var (Global 75)));
  Let b1 = M[007356];
  Let b2 = M[007357];
  SetLocal 3 MakeHiLo(b1,b2);
  TraceOperation 107955 (Store (Con 6) (Con 0));
  SetLocal 6 0;
  TraceOperation 107958 (Call (Floc 041228) [] Sp);
  PushFrame;
  PushReturnAddress 107958;
  MakeRoutineFrame 1;
  SetLocal 1 0;
  Jump: 041229
LocReturn 107958:
  PushStack call_result;
  TraceOperation 107962 (Je [Var Sp,Con 21530] (Branch T (Dloc 107971)));
  PopStack popped1;
  if (Equal(popped1,21530)) {
    Jump: 107971
  } else {
    TraceOperation 107968 (Jump 107984);
    Jump: 107984
  }
LocOp 107971:
  TraceOperation 107971 (Jz (Var (Local 2)) (Branch T (Dloc 107982)));
  if (IsZero(GetLocal(2))) {
    Jump: 107982
  } else {
    TraceOperation 107974 (Sub (Var (Global 75)) (Var (Local 1)) Sp);
    Let b1 = M[007356];
    Let b2 = M[007357];
    PushStack Sub(MakeHiLo(b1,b2),GetLocal(1));
    TraceOperation 107978 (Je [Var Sp,Var (Local 2)] (Branch F (Dloc 107984)));
    PopStack popped3;
    if (Equal(popped3,GetLocal(2))) {
      Jump: 107982
    } else {
      Jump: 107984
    }
  }
LocOp 107982:
  TraceOperation 107982 (Ret (Var (Local 6)));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult GetLocal(6);
  JumpIndirect: (return) return_address_1
LocOp 107984:
  TraceOperation 107984 (Store (Con 6) (Con 0));
  SetLocal 6 0;
  TraceOperation 107987 (Store (Con 91) (Var (Local 3)));
  SetByte 007356 HiByte(GetLocal(3));
  SetByte 007357 LoByte(GetLocal(3));
  TraceOperation 107990 (Ret (Con -1));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult -1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 107996:
  MakeRoutineFrame 6;
  if (LessThanByte(num_actuals,6)) {
    SetLocal 6 0;
    if (LessThanByte(num_actuals,5)) {
      SetLocal 5 0;
      if (LessThanByte(num_actuals,4)) {
        SetLocal 4 0;
        if (LessThanByte(num_actuals,3)) {
          SetLocal 3 0;
          if (LessThanByte(num_actuals,2)) {
            SetLocal 2 0;
            if (LessThanByte(num_actuals,1)) {
              SetLocal 1 0;
            }
          }
        }
      }
    }
  }
  Jump: 107997
LocOp 107997:
  TraceOperation 107997 (Store (Con 91) (Var (Local 1)));
  SetByte 007356 HiByte(GetLocal(1));
  SetByte 007357 LoByte(GetLocal(1));
  TraceOperation 108000 (Store (Con 3) (Var (Global 75)));
  Let b1 = M[007356];
  Let b2 = M[007357];
  SetLocal 3 MakeHiLo(b1,b2);
  TraceOperation 108003 (Store (Con 6) (Con 0));
  SetLocal 6 0;
  TraceOperation 108006 (Call (Floc 041228) [] Sp);
  PushFrame;
  PushReturnAddress 108006;
  MakeRoutineFrame 1;
  SetLocal 1 0;
  Jump: 041229
LocReturn 108006:
  PushStack call_result;
  TraceOperation 108010 (Je [Var Sp,Con 23321] (Branch T (Dloc 108019)));
  PopStack popped1;
  if (Equal(popped1,23321)) {
    Jump: 108019
  } else {
    TraceOperation 108016 (Jump 108032);
    Jump: 108032
  }
LocOp 108019:
  TraceOperation 108019 (Jz (Var (Local 2)) (Branch T (Dloc 108030)));
  if (IsZero(GetLocal(2))) {
    Jump: 108030
  } else {
    TraceOperation 108022 (Sub (Var (Global 75)) (Var (Local 1)) Sp);
    Let b1 = M[007356];
    Let b2 = M[007357];
    PushStack Sub(MakeHiLo(b1,b2),GetLocal(1));
    TraceOperation 108026 (Je [Var Sp,Var (Local 2)] (Branch F (Dloc 108032)));
    PopStack popped3;
    if (Equal(popped3,GetLocal(2))) {
      Jump: 108030
    } else {
      Jump: 108032
    }
  }
LocOp 108030:
  TraceOperation 108030 (Ret (Var (Local 6)));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult GetLocal(6);
  JumpIndirect: (return) return_address_1
LocOp 108032:
  TraceOperation 108032 (Store (Con 6) (Con 0));
  SetLocal 6 0;
  TraceOperation 108035 (Store (Con 91) (Var (Local 3)));
  SetByte 007356 HiByte(GetLocal(3));
  SetByte 007357 LoByte(GetLocal(3));
  TraceOperation 108038 (Ret (Con -1));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult -1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 108044:
  MakeRoutineFrame 6;
  if (LessThanByte(num_actuals,6)) {
    SetLocal 6 0;
    if (LessThanByte(num_actuals,5)) {
      SetLocal 5 0;
      if (LessThanByte(num_actuals,4)) {
        SetLocal 4 0;
        if (LessThanByte(num_actuals,3)) {
          SetLocal 3 0;
          if (LessThanByte(num_actuals,2)) {
            SetLocal 2 0;
            if (LessThanByte(num_actuals,1)) {
              SetLocal 1 0;
            }
          }
        }
      }
    }
  }
  Jump: 108045
LocOp 108045:
  TraceOperation 108045 (Store (Con 91) (Var (Local 1)));
  SetByte 007356 HiByte(GetLocal(1));
  SetByte 007357 LoByte(GetLocal(1));
  TraceOperation 108048 (Store (Con 3) (Var (Global 75)));
  Let b1 = M[007356];
  Let b2 = M[007357];
  SetLocal 3 MakeHiLo(b1,b2);
  TraceOperation 108051 (Store (Con 6) (Con 0));
  SetLocal 6 0;
  TraceOperation 108054 (Call (Floc 041228) [] Sp);
  PushFrame;
  PushReturnAddress 108054;
  MakeRoutineFrame 1;
  SetLocal 1 0;
  Jump: 041229
LocReturn 108054:
  PushStack call_result;
  TraceOperation 108058 (Je [Var Sp,Con 24284] (Branch T (Dloc 108067)));
  PopStack popped1;
  if (Equal(popped1,24284)) {
    Jump: 108067
  } else {
    TraceOperation 108064 (Jump 108080);
    Jump: 108080
  }
LocOp 108067:
  TraceOperation 108067 (Jz (Var (Local 2)) (Branch T (Dloc 108078)));
  if (IsZero(GetLocal(2))) {
    Jump: 108078
  } else {
    TraceOperation 108070 (Sub (Var (Global 75)) (Var (Local 1)) Sp);
    Let b1 = M[007356];
    Let b2 = M[007357];
    PushStack Sub(MakeHiLo(b1,b2),GetLocal(1));
    TraceOperation 108074 (Je [Var Sp,Var (Local 2)] (Branch F (Dloc 108080)));
    PopStack popped3;
    if (Equal(popped3,GetLocal(2))) {
      Jump: 108078
    } else {
      Jump: 108080
    }
  }
LocOp 108078:
  TraceOperation 108078 (Ret (Var (Local 6)));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult GetLocal(6);
  JumpIndirect: (return) return_address_1
LocOp 108080:
  TraceOperation 108080 (Store (Con 6) (Con 0));
  SetLocal 6 0;
  TraceOperation 108083 (Store (Con 91) (Var (Local 3)));
  SetByte 007356 HiByte(GetLocal(3));
  SetByte 007357 LoByte(GetLocal(3));
  TraceOperation 108086 (Ret (Con -1));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult -1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 108092:
  MakeRoutineFrame 0;
  Jump: 108093
LocOp 108093:
  TraceOperation 108093 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 108096:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 108097
LocOp 108097:
  TraceOperation 108097 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 108100:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 108101
LocOp 108101:
  TraceOperation 108101 (Store (Con 1) (Con 41));
  SetLocal 1 41;
  TraceOperation 108104 (Jump 108114);
  Jump: 108114
--------------------------------------------------
LocRoutine 108144:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 108145
LocOp 108145:
  TraceOperation 108145 (Jz (Var (Local 1)) (Branch T (Dloc 108151)));
  if (IsZero(GetLocal(1))) {
    Jump: 108151
  } else {
    TraceOperation 108148 (Jump 108179);
    Jump: 108179
  }
LocOp 108151:
  TraceOperation 108151 (Store (Con 1) (Con 41));
  SetLocal 1 41;
  TraceOperation 108154 (Jump 108164);
  Jump: 108164
--------------------------------------------------
LocRoutine 108178:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 108179
LocOp 108179:
  TraceOperation 108179 (Jump 108157);
  Jump: 108157
--------------------------------------------------
LocRoutine 108184:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 108185
LocOp 108185:
  TraceOperation 108185 (Jz (Var (Local 1)) (Branch T (Dloc 108191)));
  if (IsZero(GetLocal(1))) {
    Jump: 108191
  } else {
    TraceOperation 108188 (Jump 108209);
    Jump: 108209
  }
LocOp 108191:
  TraceOperation 108191 (Store (Con 1) (Con 41));
  SetLocal 1 41;
  TraceOperation 108194 (Jump 108204);
  Jump: 108204
--------------------------------------------------
LocRoutine 108208:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 108209
LocOp 108209:
  TraceOperation 108209 (Jump 108197);
  Jump: 108197
--------------------------------------------------
LocRoutine 108216:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 108217
LocOp 108217:
  TraceOperation 108217 (Jz (Var (Local 1)) (Branch T (Dloc 108223)));
  if (IsZero(GetLocal(1))) {
    Jump: 108223
  } else {
    TraceOperation 108220 (Jump 108241);
    Jump: 108241
  }
LocOp 108223:
  TraceOperation 108223 (Store (Con 1) (Con 41));
  SetLocal 1 41;
  TraceOperation 108226 (Jump 108236);
  Jump: 108236
--------------------------------------------------
LocRoutine 108240:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 108241
LocOp 108241:
  TraceOperation 108241 (Jump 108229);
  Jump: 108229
--------------------------------------------------
LocRoutine 108248:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 108249
LocOp 108249:
  TraceOperation 108249 (Jz (Var (Local 1)) (Branch T (Dloc 108255)));
  if (IsZero(GetLocal(1))) {
    Jump: 108255
  } else {
    TraceOperation 108252 (Jump 108273);
    Jump: 108273
  }
LocOp 108255:
  TraceOperation 108255 (Store (Con 1) (Con 41));
  SetLocal 1 41;
  TraceOperation 108258 (Jump 108268);
  Jump: 108268
--------------------------------------------------
LocRoutine 108272:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 108273
LocOp 108273:
  TraceOperation 108273 (Jump 108261);
  Jump: 108261
--------------------------------------------------
LocRoutine 108280:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 108281
LocOp 108281:
  TraceOperation 108281 (Store (Con 1) (Con 41));
  SetLocal 1 41;
  TraceOperation 108284 (Jump 108294);
  Jump: 108294
--------------------------------------------------
LocRoutine 108308:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 108309
LocOp 108309:
  TraceOperation 108309 (Jump 108312);
  Jump: 108312
--------------------------------------------------
LocRoutine 108320:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 108321
LocOp 108321:
  TraceOperation 108321 (Jz (Var (Local 1)) (Branch T (Dloc 108327)));
  if (IsZero(GetLocal(1))) {
    Jump: 108327
  } else {
    TraceOperation 108324 (Jump 108355);
    Jump: 108355
  }
LocOp 108327:
  TraceOperation 108327 (Store (Con 1) (Con 41));
  SetLocal 1 41;
  TraceOperation 108330 (Jump 108340);
  Jump: 108340
--------------------------------------------------
LocRoutine 108354:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 108355
LocOp 108355:
  TraceOperation 108355 (Jump 108333);
  Jump: 108333
--------------------------------------------------
LocRoutine 108526:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 108527
LocOp 108527:
  TraceOperation 108527 (Jump 108493);
  Jump: 108493
--------------------------------------------------
LocRoutine 108546:
  MakeRoutineFrame 0;
  Jump: 108547
LocOp 108547:
  TraceOperation 108547 (Store (Con 2) (Con 41));
  SetLocal 2 41;
  TraceOperation 108550 (Jump 108560);
  Jump: 108560
--------------------------------------------------
LocRoutine 108580:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 108581
LocOp 108581:
  TraceOperation 108581 (Jump 108584);
  Jump: 108584
--------------------------------------------------
LocRoutine 108626:
  MakeRoutineFrame 0;
  Jump: 108627
LocOp 108627:
  TraceOperation 108627 (Jz (Var Sp) (Branch F (Dloc 108635)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 108630 (Inc (Con 4));
    SetLocal 4 Add(GetLocal(4),1);
    TraceOperation 108632 (Jump 108635);
    Jump: 108635
  } else {
    Jump: 108635
  }
LocOp 108635:
  TraceOperation 108635 (Jump 108610);
  Jump: 108610
--------------------------------------------------
LocRoutine 108664:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 108665
LocOp 108665:
  TraceOperation 108665 (Jz (Var (Local 2)) (Branch T (Dloc 108683)));
  if (IsZero(GetLocal(2))) {
    Jump: 108683
  } else {
    TraceOperation 108668 (Call (Floc 088304) [Var (Local 2),Con 30] Sp);
    PushFrame;
    PushReturnAddress 108668;
    SetLocal 1 GetLocal(2);
    SetLocal 2 30;
    MakeRoutineFrame 2;
    Jump: 088305
  }
LocReturn 108668:
  PushStack call_result;
  TraceOperation 108675 (Jz (Var Sp) (Branch F (Dloc 108680)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 108678 (Ret (Var (Local 2)));
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult GetLocal(2);
    JumpIndirect: (return) return_address_2
  } else {
    Jump: 108680
  }
LocOp 108680:
  TraceOperation 108680 (Jump 108658);
  Jump: 108658
LocOp 108683:
  TraceOperation 108683 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 108706:
  MakeRoutineFrame 0;
  Jump: 108707
LocOp 108707:
  TraceOperation 108707 (Jz (Var Sp) (Branch T Dtrue));
  PopStack popped1;
  if (IsZero(popped1)) {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  } else {
    TraceOperation 108710 Rfalse;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  }
--------------------------------------------------
LocRoutine 108712:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 108713
LocOp 108713:
  TraceOperation 108713 (Get_child (Var (Local 1)) Sp (Branch F (Dloc 108717)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),10)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),10),1)];
  PushStack MakeHiLo(b1,b2);
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 108717
  } else {
    Jump: 108717
  }
LocOp 108717:
  TraceOperation 108717 (Pull (Con 2));
  PopStack popped1;
  SetLocal 2 popped1;
  TraceOperation 108720 (Jz (Var (Local 2)) (Branch T (Dloc 108760)));
  if (IsZero(GetLocal(2))) {
    Jump: 108760
  } else {
    Jump: 108723
  }
LocOp 108723:
  TraceOperation 108723 (Get_parent (Var (Local 2)) Sp);
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),6)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(2),14)),6),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 108726 (Call (Floc 102968) [Var (Local 2)] Sp);
  PushFrame;
  PushReturnAddress 108726;
  SetLocal 1 GetLocal(2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 102969
LocReturn 108726:
  PushStack call_result;
  TraceOperation 108732 (Je [Var Sp,Var Sp] (Branch F (Dloc 108755)));
  PopStack popped1;
  PopStack popped2;
  if (Equal(popped1,popped2)) {
    TraceOperation 108736 (Call (Floc 026172) [Var (Local 2),Con 14] Sp);
    PushFrame;
    PushReturnAddress 108736;
    SetLocal 1 GetLocal(2);
    SetLocal 2 14;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 108755
  }
LocReturn 108736:
  PushStack call_result;
  TraceOperation 108743 (Jz (Var Sp) (Branch T (Dloc 108755)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 108755
  } else {
    TraceOperation 108746 (Call (Floc 075780) [Var (Local 2)] Sp);
    PushFrame;
    PushReturnAddress 108746;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 1;
    Jump: 075781
  }
LocReturn 108746:
  PushStack call_result;
  TraceOperation 108752 (Jz (Var Sp) (Branch F Dtrue));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 108755
  } else {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  }
LocOp 108755:
  TraceOperation 108755 (Get_sibling (Var (Local 2)) (Local 2) (Branch T (Dloc 108723)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),8)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(2),14)),8),1)];
  SetLocal 2 MakeHiLo(b1,b2);
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 108760
  } else {
    Jump: 108723
  }
LocOp 108760:
  TraceOperation 108760 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 108764:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 108765
LocOp 108765:
  TraceOperation 108765 (Jz (Var (Local 2)) (Branch T (Dloc 108771)));
  if (IsZero(GetLocal(2))) {
    Jump: 108771
  } else {
    TraceOperation 108768 (Jump 108806);
    Jump: 108806
  }
LocOp 108771:
  TraceOperation 108771 (Get_child (Var (Local 1)) Sp (Branch F (Dloc 108775)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),10)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),10),1)];
  PushStack MakeHiLo(b1,b2);
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 108775
  } else {
    Jump: 108775
  }
LocOp 108775:
  TraceOperation 108775 (Pull (Con 2));
  PopStack popped1;
  SetLocal 2 popped1;
  TraceOperation 108778 (Jz (Var (Local 2)) (Branch T (Dloc 108811)));
  if (IsZero(GetLocal(2))) {
    Jump: 108811
  } else {
    Jump: 108781
  }
LocOp 108781:
  TraceOperation 108781 (Get_parent (Var (Local 2)) Sp);
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),6)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(2),14)),6),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 108784 (Call (Floc 102968) [Var (Local 2)] Sp);
  PushFrame;
  PushReturnAddress 108784;
  SetLocal 1 GetLocal(2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 102969
LocReturn 108784:
  PushStack call_result;
  TraceOperation 108790 (Je [Var Sp,Var Sp] (Branch F (Dloc 108806)));
  PopStack popped1;
  PopStack popped2;
  if (Equal(popped1,popped2)) {
    TraceOperation 108794 (Call (Floc 026172) [Var (Local 2),Con 14] Sp);
    PushFrame;
    PushReturnAddress 108794;
    SetLocal 1 GetLocal(2);
    SetLocal 2 14;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 108806
  }
LocReturn 108794:
  PushStack call_result;
  TraceOperation 108801 (Jz (Var Sp) (Branch T (Dloc 108806)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 108806
  } else {
    TraceOperation 108804 (Ret (Var (Local 2)));
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult GetLocal(2);
    JumpIndirect: (return) return_address_2
  }
LocOp 108806:
  TraceOperation 108806 (Get_sibling (Var (Local 2)) (Local 2) (Branch T (Dloc 108781)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),8)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(2),14)),8),1)];
  SetLocal 2 MakeHiLo(b1,b2);
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 108811
  } else {
    Jump: 108781
  }
LocOp 108811:
  TraceOperation 108811 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 108812:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 108813
LocOp 108813:
  TraceOperation 108813 (Get_child (Var (Local 1)) Sp (Branch F (Dloc 108817)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),10)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),10),1)];
  PushStack MakeHiLo(b1,b2);
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 108817
  } else {
    Jump: 108817
  }
LocOp 108817:
  TraceOperation 108817 (Pull (Con 2));
  PopStack popped1;
  SetLocal 2 popped1;
  TraceOperation 108820 (Jz (Var (Local 2)) (Branch T (Dloc 108860)));
  if (IsZero(GetLocal(2))) {
    Jump: 108860
  } else {
    Jump: 108823
  }
LocOp 108823:
  TraceOperation 108823 (Get_parent (Var (Local 2)) Sp);
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),6)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(2),14)),6),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 108826 (Call (Floc 102968) [Var (Local 2)] Sp);
  PushFrame;
  PushReturnAddress 108826;
  SetLocal 1 GetLocal(2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 102969
LocReturn 108826:
  PushStack call_result;
  TraceOperation 108832 (Je [Var Sp,Var Sp] (Branch F (Dloc 108855)));
  PopStack popped1;
  PopStack popped2;
  if (Equal(popped1,popped2)) {
    TraceOperation 108836 (Call (Floc 026172) [Var (Local 2),Con 14] Sp);
    PushFrame;
    PushReturnAddress 108836;
    SetLocal 1 GetLocal(2);
    SetLocal 2 14;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 108855
  }
LocReturn 108836:
  PushStack call_result;
  TraceOperation 108843 (Jz (Var Sp) (Branch T (Dloc 108855)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 108855
  } else {
    TraceOperation 108846 (Call (Floc 075780) [Var (Local 2)] Sp);
    PushFrame;
    PushReturnAddress 108846;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 1;
    Jump: 075781
  }
LocReturn 108846:
  PushStack call_result;
  TraceOperation 108852 (Jz (Var Sp) (Branch F Dtrue));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 108855
  } else {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  }
LocOp 108855:
  TraceOperation 108855 (Get_sibling (Var (Local 2)) (Local 2) (Branch T (Dloc 108823)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),8)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(2),14)),8),1)];
  SetLocal 2 MakeHiLo(b1,b2);
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 108860
  } else {
    Jump: 108823
  }
LocOp 108860:
  TraceOperation 108860 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 108864:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 108865
LocOp 108865:
  TraceOperation 108865 (Jz (Var (Local 2)) (Branch T (Dloc 108871)));
  if (IsZero(GetLocal(2))) {
    Jump: 108871
  } else {
    TraceOperation 108868 (Jump 108906);
    Jump: 108906
  }
LocOp 108871:
  TraceOperation 108871 (Get_child (Var (Local 1)) Sp (Branch F (Dloc 108875)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),10)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),10),1)];
  PushStack MakeHiLo(b1,b2);
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 108875
  } else {
    Jump: 108875
  }
LocOp 108875:
  TraceOperation 108875 (Pull (Con 2));
  PopStack popped1;
  SetLocal 2 popped1;
  TraceOperation 108878 (Jz (Var (Local 2)) (Branch T (Dloc 108911)));
  if (IsZero(GetLocal(2))) {
    Jump: 108911
  } else {
    Jump: 108881
  }
LocOp 108881:
  TraceOperation 108881 (Get_parent (Var (Local 2)) Sp);
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),6)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(2),14)),6),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 108884 (Call (Floc 102968) [Var (Local 2)] Sp);
  PushFrame;
  PushReturnAddress 108884;
  SetLocal 1 GetLocal(2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 102969
LocReturn 108884:
  PushStack call_result;
  TraceOperation 108890 (Je [Var Sp,Var Sp] (Branch F (Dloc 108906)));
  PopStack popped1;
  PopStack popped2;
  if (Equal(popped1,popped2)) {
    TraceOperation 108894 (Call (Floc 026172) [Var (Local 2),Con 14] Sp);
    PushFrame;
    PushReturnAddress 108894;
    SetLocal 1 GetLocal(2);
    SetLocal 2 14;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 108906
  }
LocReturn 108894:
  PushStack call_result;
  TraceOperation 108901 (Jz (Var Sp) (Branch T (Dloc 108906)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 108906
  } else {
    TraceOperation 108904 (Ret (Var (Local 2)));
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult GetLocal(2);
    JumpIndirect: (return) return_address_2
  }
LocOp 108906:
  TraceOperation 108906 (Get_sibling (Var (Local 2)) (Local 2) (Branch T (Dloc 108881)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),8)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(2),14)),8),1)];
  SetLocal 2 MakeHiLo(b1,b2);
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 108911
  } else {
    Jump: 108881
  }
LocOp 108911:
  TraceOperation 108911 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 108918:
  MakeRoutineFrame 0;
  Jump: 108919
LocOp 108919:
  TraceOperation 108919 (Store (Con 2) (Con 43));
  SetLocal 2 43;
  TraceOperation 108922 (Jump 108932);
  Jump: 108932
--------------------------------------------------
LocRoutine 108936:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 108937
LocOp 108937:
  TraceOperation 108937 (Je [Var (Local 1),Var (Local 2)] (Branch F (Dloc 108943)));
  if (Equal(GetLocal(1),GetLocal(2))) {
    TraceOperation 108941 (Inc (Con 3));
    SetLocal 3 Add(GetLocal(3),1);
    Jump: 108943
  } else {
    Jump: 108943
  }
LocOp 108943:
  TraceOperation 108943 (Jump 108925);
  Jump: 108925
--------------------------------------------------
LocRoutine 108958:
  MakeRoutineFrame 0;
  Jump: 108959
LocOp 108959:
  TraceOperation 108959 (Store (Con 2) (Con 41));
  SetLocal 2 41;
  TraceOperation 108962 (Jump 108972);
  Jump: 108972
--------------------------------------------------
LocRoutine 108976:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 108977
LocOp 108977:
  TraceOperation 108977 (Je [Var (Local 1),Var (Local 2)] (Branch F (Dloc 108983)));
  if (Equal(GetLocal(1),GetLocal(2))) {
    TraceOperation 108981 (Inc (Con 3));
    SetLocal 3 Add(GetLocal(3),1);
    Jump: 108983
  } else {
    Jump: 108983
  }
LocOp 108983:
  TraceOperation 108983 (Jump 108965);
  Jump: 108965
--------------------------------------------------
LocRoutine 108992:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 108993
LocOp 108993:
  TraceOperation 108993 (Get_child (Var (Local 1)) Sp (Branch F (Dloc 108997)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),10)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),10),1)];
  PushStack MakeHiLo(b1,b2);
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 108997
  } else {
    Jump: 108997
  }
LocOp 108997:
  TraceOperation 108997 (Pull (Con 2));
  PopStack popped1;
  SetLocal 2 popped1;
  TraceOperation 109000 (Jz (Var (Local 2)) (Branch T (Dloc 109036)));
  if (IsZero(GetLocal(2))) {
    Jump: 109036
  } else {
    Jump: 109003
  }
LocOp 109003:
  TraceOperation 109003 (Get_parent (Var (Local 2)) Sp);
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),6)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(2),14)),6),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 109006 (Call (Floc 102992) [Var (Local 2)] Sp);
  PushFrame;
  PushReturnAddress 109006;
  SetLocal 1 GetLocal(2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 102993
LocReturn 109006:
  PushStack call_result;
  TraceOperation 109012 (Je [Var Sp,Var Sp] (Branch F (Dloc 109031)));
  PopStack popped1;
  PopStack popped2;
  if (Equal(popped1,popped2)) {
    TraceOperation 109016 (Call (Floc 026172) [Var (Local 2),Con 14] Sp);
    PushFrame;
    PushReturnAddress 109016;
    SetLocal 1 GetLocal(2);
    SetLocal 2 14;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 109031
  }
LocReturn 109016:
  PushStack call_result;
  TraceOperation 109023 (Jz (Var Sp) (Branch T (Dloc 109031)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 109031
  } else {
    TraceOperation 109026 (Inc (Con 3));
    SetLocal 3 Add(GetLocal(3),1);
    TraceOperation 109028 (Jump 109031);
    Jump: 109031
  }
LocOp 109031:
  TraceOperation 109031 (Get_sibling (Var (Local 2)) (Local 2) (Branch T (Dloc 109003)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),8)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(2),14)),8),1)];
  SetLocal 2 MakeHiLo(b1,b2);
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 109036
  } else {
    Jump: 109003
  }
LocOp 109036:
  TraceOperation 109036 (Ret (Var (Local 3)));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult GetLocal(3);
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 109040:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 109041
LocOp 109041:
  TraceOperation 109041 (Store (Con 2) (Con 0));
  SetLocal 2 0;
  Jump: 109044
LocOp 109044:
  TraceOperation 109044 (Jz (Var (Local 2)) (Branch T (Dloc 109069)));
  if (IsZero(GetLocal(2))) {
    Jump: 109069
  } else {
    TraceOperation 109047 (Call (Floc 102384) [Var (Local 2)] Sp);
    PushFrame;
    PushReturnAddress 109047;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 1;
    Jump: 102385
  }
LocReturn 109047:
  PushStack call_result;
  TraceOperation 109053 (Je [Var (Local 1),Var Sp] (Branch F (Dloc 109066)));
  PopStack popped1;
  if (Equal(GetLocal(1),popped1)) {
    TraceOperation 109057 (Storew (Con 7796) (Con 0) (Var (Local 2)));
    SetByte 007796 HiByte(GetLocal(2));
    SetByte 007797 LoByte(GetLocal(2));
    TraceOperation 109063 (Jz (Con 1) (Branch F Dtrue));
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  } else {
    Jump: 109066
  }
LocOp 109066:
  TraceOperation 109066 (Jump 109044);
  Jump: 109044
LocOp 109069:
  TraceOperation 109069 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 109072:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 109073
LocOp 109073:
  TraceOperation 109073 (Jz (Var (Local 2)) (Branch T (Dloc 109079)));
  if (IsZero(GetLocal(2))) {
    Jump: 109079
  } else {
    TraceOperation 109076 (Jump 109114);
    Jump: 109114
  }
LocOp 109079:
  TraceOperation 109079 (Get_child (Var (Local 1)) Sp (Branch F (Dloc 109083)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),10)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),10),1)];
  PushStack MakeHiLo(b1,b2);
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 109083
  } else {
    Jump: 109083
  }
LocOp 109083:
  TraceOperation 109083 (Pull (Con 2));
  PopStack popped1;
  SetLocal 2 popped1;
  TraceOperation 109086 (Jz (Var (Local 2)) (Branch T (Dloc 109119)));
  if (IsZero(GetLocal(2))) {
    Jump: 109119
  } else {
    Jump: 109089
  }
LocOp 109089:
  TraceOperation 109089 (Get_parent (Var (Local 2)) Sp);
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),6)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(2),14)),6),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 109092 (Call (Floc 102992) [Var (Local 2)] Sp);
  PushFrame;
  PushReturnAddress 109092;
  SetLocal 1 GetLocal(2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 102993
LocReturn 109092:
  PushStack call_result;
  TraceOperation 109098 (Je [Var Sp,Var Sp] (Branch F (Dloc 109114)));
  PopStack popped1;
  PopStack popped2;
  if (Equal(popped1,popped2)) {
    TraceOperation 109102 (Call (Floc 026172) [Var (Local 2),Con 14] Sp);
    PushFrame;
    PushReturnAddress 109102;
    SetLocal 1 GetLocal(2);
    SetLocal 2 14;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 109114
  }
LocReturn 109102:
  PushStack call_result;
  TraceOperation 109109 (Jz (Var Sp) (Branch T (Dloc 109114)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 109114
  } else {
    TraceOperation 109112 (Ret (Var (Local 2)));
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult GetLocal(2);
    JumpIndirect: (return) return_address_2
  }
LocOp 109114:
  TraceOperation 109114 (Get_sibling (Var (Local 2)) (Local 2) (Branch T (Dloc 109089)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),8)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(2),14)),8),1)];
  SetLocal 2 MakeHiLo(b1,b2);
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 109119
  } else {
    Jump: 109089
  }
LocOp 109119:
  TraceOperation 109119 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 109120:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 109121
LocOp 109121:
  TraceOperation 109121 (Get_child (Var (Local 1)) Sp (Branch F (Dloc 109125)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),10)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),10),1)];
  PushStack MakeHiLo(b1,b2);
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 109125
  } else {
    Jump: 109125
  }
LocOp 109125:
  TraceOperation 109125 (Pull (Con 2));
  PopStack popped1;
  SetLocal 2 popped1;
  TraceOperation 109128 (Jz (Var (Local 2)) (Branch T (Dloc 109164)));
  if (IsZero(GetLocal(2))) {
    Jump: 109164
  } else {
    Jump: 109131
  }
LocOp 109131:
  TraceOperation 109131 (Get_parent (Var (Local 2)) Sp);
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),6)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(2),14)),6),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 109134 (Call (Floc 102992) [Var (Local 2)] Sp);
  PushFrame;
  PushReturnAddress 109134;
  SetLocal 1 GetLocal(2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 102993
LocReturn 109134:
  PushStack call_result;
  TraceOperation 109140 (Je [Var Sp,Var Sp] (Branch F (Dloc 109159)));
  PopStack popped1;
  PopStack popped2;
  if (Equal(popped1,popped2)) {
    TraceOperation 109144 (Call (Floc 026172) [Var (Local 2),Con 14] Sp);
    PushFrame;
    PushReturnAddress 109144;
    SetLocal 1 GetLocal(2);
    SetLocal 2 14;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 109159
  }
LocReturn 109144:
  PushStack call_result;
  TraceOperation 109151 (Jz (Var Sp) (Branch T (Dloc 109159)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 109159
  } else {
    TraceOperation 109154 (Inc (Con 3));
    SetLocal 3 Add(GetLocal(3),1);
    TraceOperation 109156 (Jump 109159);
    Jump: 109159
  }
LocOp 109159:
  TraceOperation 109159 (Get_sibling (Var (Local 2)) (Local 2) (Branch T (Dloc 109131)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),8)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(2),14)),8),1)];
  SetLocal 2 MakeHiLo(b1,b2);
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 109164
  } else {
    Jump: 109131
  }
LocOp 109164:
  TraceOperation 109164 (Ret (Var (Local 3)));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult GetLocal(3);
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 109168:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 109169
LocOp 109169:
  TraceOperation 109169 (Get_child (Var (Local 1)) Sp (Branch F (Dloc 109173)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),10)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),10),1)];
  PushStack MakeHiLo(b1,b2);
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 109173
  } else {
    Jump: 109173
  }
LocOp 109173:
  TraceOperation 109173 (Pull (Con 2));
  PopStack popped1;
  SetLocal 2 popped1;
  TraceOperation 109176 (Jz (Var (Local 2)) (Branch T (Dloc 109212)));
  if (IsZero(GetLocal(2))) {
    Jump: 109212
  } else {
    Jump: 109179
  }
LocOp 109179:
  TraceOperation 109179 (Get_parent (Var (Local 2)) Sp);
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),6)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(2),14)),6),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 109182 (Call (Floc 102968) [Var (Local 2)] Sp);
  PushFrame;
  PushReturnAddress 109182;
  SetLocal 1 GetLocal(2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 102969
LocReturn 109182:
  PushStack call_result;
  TraceOperation 109188 (Je [Var Sp,Var Sp] (Branch F (Dloc 109207)));
  PopStack popped1;
  PopStack popped2;
  if (Equal(popped1,popped2)) {
    TraceOperation 109192 (Call (Floc 026172) [Var (Local 2),Con 14] Sp);
    PushFrame;
    PushReturnAddress 109192;
    SetLocal 1 GetLocal(2);
    SetLocal 2 14;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 109207
  }
LocReturn 109192:
  PushStack call_result;
  TraceOperation 109199 (Jz (Var Sp) (Branch T (Dloc 109207)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 109207
  } else {
    TraceOperation 109202 (Inc (Con 3));
    SetLocal 3 Add(GetLocal(3),1);
    TraceOperation 109204 (Jump 109207);
    Jump: 109207
  }
LocOp 109207:
  TraceOperation 109207 (Get_sibling (Var (Local 2)) (Local 2) (Branch T (Dloc 109179)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),8)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(2),14)),8),1)];
  SetLocal 2 MakeHiLo(b1,b2);
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 109212
  } else {
    Jump: 109179
  }
LocOp 109212:
  TraceOperation 109212 (Ret (Var (Local 3)));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult GetLocal(3);
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 109216:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 109217
LocOp 109217:
  TraceOperation 109217 (Call (Floc 102880) [Var (Local 1)] (Local 2));
  PushFrame;
  PushReturnAddress 109217;
  SetLocal 1 GetLocal(1);
  MakeRoutineFrame 3;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 102881
LocReturn 109217:
  SetLocal 2 call_result;
  TraceOperation 109223 (Jump 109233);
  Jump: 109233
--------------------------------------------------
LocRoutine 109242:
  MakeRoutineFrame 0;
  Jump: 109243
LocOp 109243:
  TraceOperation 109243 (Jz (Var Sp) (Branch T (Dloc 109251)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 109251
  } else {
    TraceOperation 109246 (Inc (Con 3));
    SetLocal 3 Add(GetLocal(3),1);
    TraceOperation 109248 (Jump 109251);
    Jump: 109251
  }
LocOp 109251:
  TraceOperation 109251 (Jump 109226);
  Jump: 109226
--------------------------------------------------
LocRoutine 109262:
  MakeRoutineFrame 0;
  Jump: 109263
LocOp 109263:
  TraceOperation 109263 (Store (Con 2) (Con 44));
  SetLocal 2 44;
  TraceOperation 109266 (Jump 109276);
  Jump: 109276
--------------------------------------------------
LocRoutine 109280:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 109281
LocOp 109281:
  TraceOperation 109281 (Je [Var (Local 1),Var (Local 2)] (Branch F (Dloc 109287)));
  if (Equal(GetLocal(1),GetLocal(2))) {
    TraceOperation 109285 (Inc (Con 3));
    SetLocal 3 Add(GetLocal(3),1);
    Jump: 109287
  } else {
    Jump: 109287
  }
LocOp 109287:
  TraceOperation 109287 (Jump 109269);
  Jump: 109269
--------------------------------------------------
LocRoutine 109296:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 109297
LocOp 109297:
  TraceOperation 109297 (Get_child (Var (Local 1)) Sp (Branch F (Dloc 109301)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),10)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),10),1)];
  PushStack MakeHiLo(b1,b2);
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 109301
  } else {
    Jump: 109301
  }
LocOp 109301:
  TraceOperation 109301 (Pull (Con 2));
  PopStack popped1;
  SetLocal 2 popped1;
  TraceOperation 109304 (Jz (Var (Local 2)) (Branch T (Dloc 109340)));
  if (IsZero(GetLocal(2))) {
    Jump: 109340
  } else {
    Jump: 109307
  }
LocOp 109307:
  TraceOperation 109307 (Get_parent (Var (Local 2)) Sp);
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),6)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(2),14)),6),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 109310 (Call (Floc 102968) [Var (Local 2)] Sp);
  PushFrame;
  PushReturnAddress 109310;
  SetLocal 1 GetLocal(2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 102969
LocReturn 109310:
  PushStack call_result;
  TraceOperation 109316 (Je [Var Sp,Var Sp] (Branch F (Dloc 109335)));
  PopStack popped1;
  PopStack popped2;
  if (Equal(popped1,popped2)) {
    TraceOperation 109320 (Call (Floc 026172) [Var (Local 2),Con 14] Sp);
    PushFrame;
    PushReturnAddress 109320;
    SetLocal 1 GetLocal(2);
    SetLocal 2 14;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 109335
  }
LocReturn 109320:
  PushStack call_result;
  TraceOperation 109327 (Jz (Var Sp) (Branch T (Dloc 109335)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 109335
  } else {
    TraceOperation 109330 (Inc (Con 3));
    SetLocal 3 Add(GetLocal(3),1);
    TraceOperation 109332 (Jump 109335);
    Jump: 109335
  }
LocOp 109335:
  TraceOperation 109335 (Get_sibling (Var (Local 2)) (Local 2) (Branch T (Dloc 109307)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),8)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(2),14)),8),1)];
  SetLocal 2 MakeHiLo(b1,b2);
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 109340
  } else {
    Jump: 109307
  }
LocOp 109340:
  TraceOperation 109340 (Ret (Var (Local 3)));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult GetLocal(3);
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 109350:
  MakeRoutineFrame 0;
  Jump: 109351
LocOp 109351:
  TraceOperation 109351 (Store (Con 2) (Con 46));
  SetLocal 2 46;
  TraceOperation 109354 (Jump 109364);
  Jump: 109364
--------------------------------------------------
LocRoutine 109368:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 109369
LocOp 109369:
  TraceOperation 109369 (Je [Var (Local 1),Var (Local 2)] (Branch F (Dloc 109375)));
  if (Equal(GetLocal(1),GetLocal(2))) {
    TraceOperation 109373 (Inc (Con 3));
    SetLocal 3 Add(GetLocal(3),1);
    Jump: 109375
  } else {
    Jump: 109375
  }
LocOp 109375:
  TraceOperation 109375 (Jump 109357);
  Jump: 109357
--------------------------------------------------
LocRoutine 109384:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 109385
LocOp 109385:
  TraceOperation 109385 (Call (Floc 102880) [Var (Local 1)] (Local 2));
  PushFrame;
  PushReturnAddress 109385;
  SetLocal 1 GetLocal(1);
  MakeRoutineFrame 3;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 102881
LocReturn 109385:
  SetLocal 2 call_result;
  TraceOperation 109391 (Jump 109401);
  Jump: 109401
--------------------------------------------------
LocRoutine 109410:
  MakeRoutineFrame 0;
  Jump: 109411
LocOp 109411:
  TraceOperation 109411 (Jz (Var Sp) (Branch T (Dloc 109419)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 109419
  } else {
    TraceOperation 109414 (Inc (Con 3));
    SetLocal 3 Add(GetLocal(3),1);
    TraceOperation 109416 (Jump 109419);
    Jump: 109419
  }
LocOp 109419:
  TraceOperation 109419 (Jump 109394);
  Jump: 109394
--------------------------------------------------
LocRoutine 109430:
  MakeRoutineFrame 0;
  Jump: 109431
LocOp 109431:
  TraceOperation 109431 (Store (Con 2) (Con 41));
  SetLocal 2 41;
  TraceOperation 109434 (Jump 109444);
  Jump: 109444
--------------------------------------------------
LocRoutine 109448:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 109449
LocOp 109449:
  TraceOperation 109449 (Je [Var (Local 1),Var (Local 2)] (Branch F (Dloc 109455)));
  if (Equal(GetLocal(1),GetLocal(2))) {
    TraceOperation 109453 (Inc (Con 3));
    SetLocal 3 Add(GetLocal(3),1);
    Jump: 109455
  } else {
    Jump: 109455
  }
LocOp 109455:
  TraceOperation 109455 (Jump 109437);
  Jump: 109437
--------------------------------------------------
LocRoutine 109470:
  MakeRoutineFrame 0;
  Jump: 109471
LocOp 109471:
  TraceOperation 109471 (Store (Con 2) (Con 46));
  SetLocal 2 46;
  TraceOperation 109474 (Jump 109484);
  Jump: 109484
--------------------------------------------------
LocRoutine 109488:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 109489
LocOp 109489:
  TraceOperation 109489 (Je [Var (Local 1),Var (Local 2)] (Branch F (Dloc 109495)));
  if (Equal(GetLocal(1),GetLocal(2))) {
    TraceOperation 109493 (Inc (Con 3));
    SetLocal 3 Add(GetLocal(3),1);
    Jump: 109495
  } else {
    Jump: 109495
  }
LocOp 109495:
  TraceOperation 109495 (Jump 109477);
  Jump: 109477
--------------------------------------------------
LocRoutine 109510:
  MakeRoutineFrame 0;
  Jump: 109511
LocOp 109511:
  TraceOperation 109511 (Store (Con 2) (Con 44));
  SetLocal 2 44;
  TraceOperation 109514 (Jump 109524);
  Jump: 109524
--------------------------------------------------
LocRoutine 109528:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 109529
LocOp 109529:
  TraceOperation 109529 (Je [Var (Local 1),Var (Local 2)] (Branch F (Dloc 109535)));
  if (Equal(GetLocal(1),GetLocal(2))) {
    TraceOperation 109533 (Inc (Con 3));
    SetLocal 3 Add(GetLocal(3),1);
    Jump: 109535
  } else {
    Jump: 109535
  }
LocOp 109535:
  TraceOperation 109535 (Jump 109517);
  Jump: 109517
--------------------------------------------------
LocRoutine 109544:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 109545
LocOp 109545:
  TraceOperation 109545 (Call (Floc 102880) [Var (Local 1)] (Local 2));
  PushFrame;
  PushReturnAddress 109545;
  SetLocal 1 GetLocal(1);
  MakeRoutineFrame 3;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 102881
LocReturn 109545:
  SetLocal 2 call_result;
  TraceOperation 109551 (Jump 109561);
  Jump: 109561
--------------------------------------------------
LocRoutine 109560:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 109561
LocOp 109561:
  TraceOperation 109561 (Jz (Var (Local 2)) (Branch T (Dloc 109597)));
  if (IsZero(GetLocal(2))) {
    Jump: 109597
  } else {
    TraceOperation 109564 (Call (Floc 026172) [Var (Local 2),Con 14] Sp);
    PushFrame;
    PushReturnAddress 109564;
    SetLocal 1 GetLocal(2);
    SetLocal 2 14;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  }
LocReturn 109564:
  PushStack call_result;
  TraceOperation 109571 (Jz (Var Sp) (Branch T (Dloc 109594)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 109594
  } else {
    TraceOperation 109574 (Call (Floc 088304) [Var (Local 2),Con 3] Sp);
    PushFrame;
    PushReturnAddress 109574;
    SetLocal 1 GetLocal(2);
    SetLocal 2 3;
    MakeRoutineFrame 2;
    Jump: 088305
  }
LocReturn 109574:
  PushStack call_result;
  TraceOperation 109581 (Jz (Var Sp) (Branch F (Dloc 109594)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 109584 (Call (Floc 088304) [Var (Local 2),Con 15] Sp);
    PushFrame;
    PushReturnAddress 109584;
    SetLocal 1 GetLocal(2);
    SetLocal 2 15;
    MakeRoutineFrame 2;
    Jump: 088305
  } else {
    Jump: 109594
  }
LocReturn 109584:
  PushStack call_result;
  TraceOperation 109591 (Jz (Var Sp) (Branch T Dtrue));
  PopStack popped1;
  if (IsZero(popped1)) {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  } else {
    Jump: 109594
  }
LocOp 109594:
  TraceOperation 109594 (Jump 109554);
  Jump: 109554
LocOp 109597:
  TraceOperation 109597 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 109600:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 109601
LocOp 109601:
  TraceOperation 109601 (Get_child (Var (Local 1)) Sp (Branch F (Dloc 109605)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),10)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),10),1)];
  PushStack MakeHiLo(b1,b2);
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 109605
  } else {
    Jump: 109605
  }
LocOp 109605:
  TraceOperation 109605 (Pull (Con 2));
  PopStack popped1;
  SetLocal 2 popped1;
  TraceOperation 109608 (Jz (Var (Local 2)) (Branch T (Dloc 109659)));
  if (IsZero(GetLocal(2))) {
    Jump: 109659
  } else {
    Jump: 109611
  }
LocOp 109611:
  TraceOperation 109611 (Get_parent (Var (Local 2)) Sp);
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),6)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(2),14)),6),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 109614 (Call (Floc 102968) [Var (Local 2)] Sp);
  PushFrame;
  PushReturnAddress 109614;
  SetLocal 1 GetLocal(2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 102969
LocReturn 109614:
  PushStack call_result;
  TraceOperation 109620 (Je [Var Sp,Var Sp] (Branch F (Dloc 109654)));
  PopStack popped1;
  PopStack popped2;
  if (Equal(popped1,popped2)) {
    TraceOperation 109624 (Call (Floc 026172) [Var (Local 2),Con 14] Sp);
    PushFrame;
    PushReturnAddress 109624;
    SetLocal 1 GetLocal(2);
    SetLocal 2 14;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 109654
  }
LocReturn 109624:
  PushStack call_result;
  TraceOperation 109631 (Jz (Var Sp) (Branch T (Dloc 109654)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 109654
  } else {
    TraceOperation 109634 (Call (Floc 088304) [Var (Local 2),Con 3] Sp);
    PushFrame;
    PushReturnAddress 109634;
    SetLocal 1 GetLocal(2);
    SetLocal 2 3;
    MakeRoutineFrame 2;
    Jump: 088305
  }
LocReturn 109634:
  PushStack call_result;
  TraceOperation 109641 (Jz (Var Sp) (Branch F (Dloc 109654)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 109644 (Call (Floc 088304) [Var (Local 2),Con 15] Sp);
    PushFrame;
    PushReturnAddress 109644;
    SetLocal 1 GetLocal(2);
    SetLocal 2 15;
    MakeRoutineFrame 2;
    Jump: 088305
  } else {
    Jump: 109654
  }
LocReturn 109644:
  PushStack call_result;
  TraceOperation 109651 (Jz (Var Sp) (Branch T Dtrue));
  PopStack popped1;
  if (IsZero(popped1)) {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  } else {
    Jump: 109654
  }
LocOp 109654:
  TraceOperation 109654 (Get_sibling (Var (Local 2)) (Local 2) (Branch T (Dloc 109611)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),8)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(2),14)),8),1)];
  SetLocal 2 MakeHiLo(b1,b2);
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 109659
  } else {
    Jump: 109611
  }
LocOp 109659:
  TraceOperation 109659 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 109666:
  MakeRoutineFrame 0;
  Jump: 109667
LocOp 109667:
  TraceOperation 109667 (Store (Con 2) (Con 41));
  SetLocal 2 41;
  TraceOperation 109670 (Jump 109680);
  Jump: 109680
--------------------------------------------------
LocRoutine 109684:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 109685
LocOp 109685:
  TraceOperation 109685 (Je [Var (Local 1),Var (Local 2)] (Branch F (Dloc 109691)));
  if (Equal(GetLocal(1),GetLocal(2))) {
    TraceOperation 109689 (Inc (Con 3));
    SetLocal 3 Add(GetLocal(3),1);
    Jump: 109691
  } else {
    Jump: 109691
  }
LocOp 109691:
  TraceOperation 109691 (Jump 109673);
  Jump: 109673
--------------------------------------------------
LocRoutine 109706:
  MakeRoutineFrame 0;
  Jump: 109707
LocOp 109707:
  TraceOperation 109707 (Store (Con 2) (Con 41));
  SetLocal 2 41;
  TraceOperation 109710 (Jump 109720);
  Jump: 109720
--------------------------------------------------
LocRoutine 109724:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 109725
LocOp 109725:
  TraceOperation 109725 (Je [Var (Local 1),Var (Local 2)] (Branch F (Dloc 109731)));
  if (Equal(GetLocal(1),GetLocal(2))) {
    TraceOperation 109729 (Inc (Con 3));
    SetLocal 3 Add(GetLocal(3),1);
    Jump: 109731
  } else {
    Jump: 109731
  }
LocOp 109731:
  TraceOperation 109731 (Jump 109713);
  Jump: 109713
--------------------------------------------------
LocRoutine 109746:
  MakeRoutineFrame 0;
  Jump: 109747
LocOp 109747:
  TraceOperation 109747 (Store (Con 2) (Con 41));
  SetLocal 2 41;
  TraceOperation 109750 (Jump 109760);
  Jump: 109760
--------------------------------------------------
LocRoutine 109764:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 109765
LocOp 109765:
  TraceOperation 109765 (Je [Var (Local 1),Var (Local 2)] (Branch F (Dloc 109771)));
  if (Equal(GetLocal(1),GetLocal(2))) {
    TraceOperation 109769 (Inc (Con 3));
    SetLocal 3 Add(GetLocal(3),1);
    Jump: 109771
  } else {
    Jump: 109771
  }
LocOp 109771:
  TraceOperation 109771 (Jump 109753);
  Jump: 109753
--------------------------------------------------
LocRoutine 109786:
  MakeRoutineFrame 0;
  Jump: 109787
LocOp 109787:
  TraceOperation 109787 (Store (Con 2) (Con 29));
  SetLocal 2 29;
  TraceOperation 109790 (Jump 109800);
  Jump: 109800
--------------------------------------------------
LocRoutine 109804:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 109805
LocOp 109805:
  TraceOperation 109805 (Je [Var (Local 1),Var (Local 2)] (Branch F (Dloc 109811)));
  if (Equal(GetLocal(1),GetLocal(2))) {
    TraceOperation 109809 (Inc (Con 3));
    SetLocal 3 Add(GetLocal(3),1);
    Jump: 109811
  } else {
    Jump: 109811
  }
LocOp 109811:
  TraceOperation 109811 (Jump 109793);
  Jump: 109793
--------------------------------------------------
LocRoutine 109820:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 109821
LocOp 109821:
  TraceOperation 109821 (Call (Floc 102880) [Con 67] (Local 1));
  PushFrame;
  PushReturnAddress 109821;
  SetLocal 1 67;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 102881
LocReturn 109821:
  SetLocal 1 call_result;
  TraceOperation 109827 (Jump 109837);
  Jump: 109837
--------------------------------------------------
LocRoutine 109836:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 109837
LocOp 109837:
  TraceOperation 109837 (Jz (Var (Local 1)) (Branch T (Dloc 109853)));
  if (IsZero(GetLocal(1))) {
    Jump: 109853
  } else {
    TraceOperation 109840 (Call (Floc 026172) [Var (Local 1),Con 14] Sp);
    PushFrame;
    PushReturnAddress 109840;
    SetLocal 1 GetLocal(1);
    SetLocal 2 14;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  }
LocReturn 109840:
  PushStack call_result;
  TraceOperation 109847 (Jz (Var Sp) (Branch F Dtrue));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 109850 (Jump 109830);
    Jump: 109830
  } else {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  }
LocOp 109853:
  TraceOperation 109853 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 109856:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 109857
LocOp 109857:
  TraceOperation 109857 (Ret (Var (Local 1)));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult GetLocal(1);
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 109868:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 109869
LocOp 109869:
  TraceOperation 109869 (Call (Floc 026172) [Var (Local 1),Con 15] Sp);
  PushFrame;
  PushReturnAddress 109869;
  SetLocal 1 GetLocal(1);
  SetLocal 2 15;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 109869:
  PushStack call_result;
  TraceOperation 109876 (Jz (Var Sp) (Branch T (Dloc 109897)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 109897
  } else {
    TraceOperation 109879 (Call (Floc 026172) [Var (Local 2),Con 13] Sp);
    PushFrame;
    PushReturnAddress 109879;
    SetLocal 1 GetLocal(2);
    SetLocal 2 13;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  }
LocReturn 109879:
  PushStack call_result;
  TraceOperation 109886 (Jz (Var Sp) (Branch T (Dloc 109897)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 109897
  } else {
    TraceOperation 109889 (Call (Floc 104112) [Var (Local 2),Var (Local 1)] Sp);
    PushFrame;
    PushReturnAddress 109889;
    SetLocal 1 GetLocal(2);
    SetLocal 2 GetLocal(1);
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 104113
  }
LocReturn 109889:
  PushStack call_result;
  TraceOperation 109896 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 109897:
  TraceOperation 109897 (CallN (Floc 088012) [Var (Local 3),Var (Local 4)]);
  PushFrame;
  PushReturnAddress 109897;
  SetLocal 1 GetLocal(3);
  SetLocal 2 GetLocal(4);
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 088013
LocReturn 109897:
  TraceOperation 109903 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 109904:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 109905
LocOp 109905:
  TraceOperation 109905 (Call (Floc 026172) [Var (Local 1),Con 16] Sp);
  PushFrame;
  PushReturnAddress 109905;
  SetLocal 1 GetLocal(1);
  SetLocal 2 16;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 109905:
  PushStack call_result;
  TraceOperation 109912 (Jz (Var Sp) (Branch T (Dloc 109933)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 109933
  } else {
    TraceOperation 109915 (Call (Floc 026172) [Var (Local 2),Con 13] Sp);
    PushFrame;
    PushReturnAddress 109915;
    SetLocal 1 GetLocal(2);
    SetLocal 2 13;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  }
LocReturn 109915:
  PushStack call_result;
  TraceOperation 109922 (Jz (Var Sp) (Branch T (Dloc 109933)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 109933
  } else {
    TraceOperation 109925 (Call (Floc 104508) [Var (Local 1),Var (Local 2)] Sp);
    PushFrame;
    PushReturnAddress 109925;
    SetLocal 1 GetLocal(1);
    SetLocal 2 GetLocal(2);
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 104509
  }
LocReturn 109925:
  PushStack call_result;
  TraceOperation 109932 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 109933:
  TraceOperation 109933 (CallN (Floc 088012) [Var (Local 3),Var (Local 4)]);
  PushFrame;
  PushReturnAddress 109933;
  SetLocal 1 GetLocal(3);
  SetLocal 2 GetLocal(4);
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 088013
LocReturn 109933:
  TraceOperation 109939 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 109940:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 109941
LocOp 109941:
  TraceOperation 109941 (Call (Floc 026172) [Var (Local 1),Con 15] Sp);
  PushFrame;
  PushReturnAddress 109941;
  SetLocal 1 GetLocal(1);
  SetLocal 2 15;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 109941:
  PushStack call_result;
  TraceOperation 109948 (Jz (Var Sp) (Branch T (Dloc 109969)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 109969
  } else {
    TraceOperation 109951 (Call (Floc 026172) [Var (Local 2),Con 13] Sp);
    PushFrame;
    PushReturnAddress 109951;
    SetLocal 1 GetLocal(2);
    SetLocal 2 13;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  }
LocReturn 109951:
  PushStack call_result;
  TraceOperation 109958 (Jz (Var Sp) (Branch T (Dloc 109969)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 109969
  } else {
    TraceOperation 109961 (Call (Floc 104012) [Var (Local 2),Var (Local 1)] Sp);
    PushFrame;
    PushReturnAddress 109961;
    SetLocal 1 GetLocal(2);
    SetLocal 2 GetLocal(1);
    MakeRoutineFrame 4;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 104013
  }
LocReturn 109961:
  PushStack call_result;
  TraceOperation 109968 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 109969:
  TraceOperation 109969 (CallN (Floc 088012) [Var (Local 3),Var (Local 4)]);
  PushFrame;
  PushReturnAddress 109969;
  SetLocal 1 GetLocal(3);
  SetLocal 2 GetLocal(4);
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 088013
LocReturn 109969:
  TraceOperation 109975 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 109976:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 109977
LocOp 109977:
  TraceOperation 109977 (Call (Floc 026172) [Var (Local 2),Con 13] Sp);
  PushFrame;
  PushReturnAddress 109977;
  SetLocal 1 GetLocal(2);
  SetLocal 2 13;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 109977:
  PushStack call_result;
  TraceOperation 109984 (Jz (Var Sp) (Branch T (Dloc 109995)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 109995
  } else {
    TraceOperation 109987 (Call (Floc 104112) [Var (Local 2),Var (Local 1)] Sp);
    PushFrame;
    PushReturnAddress 109987;
    SetLocal 1 GetLocal(2);
    SetLocal 2 GetLocal(1);
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 104113
  }
LocReturn 109987:
  PushStack call_result;
  TraceOperation 109994 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 109995:
  TraceOperation 109995 (CallN (Floc 088012) [Var (Local 3),Var (Local 4)]);
  PushFrame;
  PushReturnAddress 109995;
  SetLocal 1 GetLocal(3);
  SetLocal 2 GetLocal(4);
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 088013
LocReturn 109995:
  TraceOperation 110001 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 110004:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 110005
LocOp 110005:
  TraceOperation 110005 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 110008:
  MakeRoutineFrame 0;
  Jump: 110009
LocOp 110009:
  TraceOperation 110009 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 110012:
  MakeRoutineFrame 0;
  Jump: 110013
LocOp 110013:
  TraceOperation 110013 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 110016:
  MakeRoutineFrame 0;
  Jump: 110017
LocOp 110017:
  TraceOperation 110017 (Print_paddr (Con -31247));
  Note "<static Gettext address>";
  GamePrint "This story file does not use a heap of managed memory.";
  TraceOperation 110020 New_line;
  GamePrint "\n";
  TraceOperation 110021 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 110024:
  MakeRoutineFrame 0;
  Jump: 110025
LocOp 110025:
  TraceOperation 110025 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 110028:
  MakeRoutineFrame 0;
  Jump: 110029
LocOp 110029:
  TraceOperation 110029 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 110032:
  MakeRoutineFrame 0;
  Jump: 110033
LocOp 110033:
  TraceOperation 110033 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 110036:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 110037
LocOp 110037:
  TraceOperation 110037 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 110044:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 110045
LocOp 110045:
  TraceOperation 110045 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 110048:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 110049
LocOp 110049:
  TraceOperation 110049 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 110052:
  MakeRoutineFrame 0;
  Jump: 110053
LocOp 110053:
  TraceOperation 110053 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 110060:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 110061
LocOp 110061:
  TraceOperation 110061 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 110076:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 110077
LocOp 110077:
  TraceOperation 110077 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 110080:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 110081
LocOp 110081:
  TraceOperation 110081 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 110084:
  MakeRoutineFrame 0;
  Jump: 110085
LocOp 110085:
  TraceOperation 110085 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 110088:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 110089
LocOp 110089:
  TraceOperation 110089 (Call (Floc 110912) [Var (Local 1),Var (Local 2)] (Local 4));
  PushFrame;
  PushReturnAddress 110089;
  SetLocal 1 GetLocal(1);
  SetLocal 2 GetLocal(2);
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 110913
LocReturn 110089:
  SetLocal 4 call_result;
  TraceOperation 110096 (Jz (Var (Local 4)) (Branch F (Dloc 110108)));
  if (IsZero(GetLocal(4))) {
    TraceOperation 110099 (CallN (Floc 111668) [Con -31237,Var (Local 1),Var (Local 2)]);
    PushFrame;
    PushReturnAddress 110099;
    SetLocal 1 -31237;
    SetLocal 2 GetLocal(1);
    SetLocal 3 GetLocal(2);
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    Jump: 111669
  } else {
    Jump: 110108
  }
LocReturn 110099:
  TraceOperation 110107 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 110108:
  TraceOperation 110108 (Storew (Var (Local 4)) (Con 0) (Var (Local 3)));
  SetByte Offset(Address(GetLocal(4)),0) HiByte(GetLocal(3));
  SetByte Offset(Offset(Address(GetLocal(4)),0),1) LoByte(GetLocal(3));
  TraceOperation 110113 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 110116:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 110117
LocOp 110117:
  TraceOperation 110117 (Call (Floc 110912) [Var (Local 1),Var (Local 2)] (Local 3));
  PushFrame;
  PushReturnAddress 110117;
  SetLocal 1 GetLocal(1);
  SetLocal 2 GetLocal(2);
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 110913
LocReturn 110117:
  SetLocal 3 call_result;
  TraceOperation 110124 (Jz (Var (Local 3)) (Branch F (Dloc 110169)));
  if (IsZero(GetLocal(3))) {
    TraceOperation 110127 (Jl (Var (Local 2)) (Con 1) (Branch T (Dloc 110160)));
    if (LessThan(GetLocal(2),1)) {
      Jump: 110160
    } else {
      TraceOperation 110131 (Jl (Var (Local 2)) (Con 64) (Branch F (Dloc 110160)));
      if (LessThan(GetLocal(2),64)) {
        TraceOperation 110135 (Get_prop_addr (Var (Local 1)) (Var (Local 2)) (Global 239));
        Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),12)];
        Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),12),1)];
        Let b3 = M[Address(MakeHiLo(b1,b2))];
        Let loop_var4 = DeAddress(Offset(Address(MakeHiLo(b1,b2)),Add(Mul(2,Widen(b3)),1)));
        Label 5: {
          Let b6 = M[Address(loop_var4)];
          if (IsZeroByte(b6)) {
            SetByte 007684 0;
            SetByte 007685 0;
          } else {
            if (TestBit(b6,7)) {
              Let b7 = M[Offset(Address(loop_var4),1)];
              if (Equal(GetLocal(2),Widen(BwAnd(b6,63)))) {
                SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var4),2)));
                SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var4),2)));
              } else {
                Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),2),Widen(BwAnd(b7,63))));
                Goto: Label 5
              }
            } else {
              if (TestBit(b6,6)) {
                if (Equal(GetLocal(2),Widen(BwAnd(b6,63)))) {
                  SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var4),1)));
                  SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var4),1)));
                } else {
                  Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),2));
                  Goto: Label 5
                }
              } else {
                if (Equal(GetLocal(2),Widen(BwAnd(b6,63)))) {
                  SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var4),1)));
                  SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var4),1)));
                } else {
                  Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),1));
                  Goto: Label 5
                }
              }
            }
          }
        }
        TraceOperation 110139 (Jz (Var (Global 239)) (Branch T (Dloc 110145)));
        Let b8 = M[007684];
        Let b9 = M[007685];
        if (IsZero(MakeHiLo(b8,b9))) {
          Jump: 110145
        } else {
          TraceOperation 110142 (Get_prop_len (Var (Global 239)) (Global 239));
          Let b10 = M[007684];
          Let b11 = M[007685];
          if (IsZero(MakeHiLo(b10,b11))) {
            SetByte 007684 0;
            SetByte 007685 0;
          } else {
            Let b12 = M[Offset(Address(MakeHiLo(b10,b11)),-1)];
            if (TestBit(b12,7)) {
              Let b13 = M[Offset(Address(MakeHiLo(b10,b11)),-2)];
              if (TestBit(b13,7)) {
                Let b14 = M[Offset(Offset(Address(MakeHiLo(b10,b11)),-2),1)];
                SetByte 007684 HiByte(Widen(BwAnd(b14,63)));
                SetByte 007685 LoByte(Widen(BwAnd(b14,63)));
              } else {
                if (TestBit(b13,6)) {
                  SetByte 007684 0;
                  SetByte 007685 2;
                } else {
                  SetByte 007684 0;
                  SetByte 007685 1;
                }
              }
            } else {
              Let b15 = M[Offset(Address(MakeHiLo(b10,b11)),-1)];
              if (TestBit(b15,7)) {
                Let b16 = M[Offset(Offset(Address(MakeHiLo(b10,b11)),-1),1)];
                SetByte 007684 HiByte(Widen(BwAnd(b16,63)));
                SetByte 007685 LoByte(Widen(BwAnd(b16,63)));
              } else {
                if (TestBit(b15,6)) {
                  SetByte 007684 0;
                  SetByte 007685 2;
                } else {
                  SetByte 007684 0;
                  SetByte 007685 1;
                }
              }
            }
          }
          Jump: 110145
        }
      } else {
        Jump: 110160
      }
    }
  } else {
    Jump: 110169
  }
LocOp 110145:
  TraceOperation 110145 (Push (Var (Global 239)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 110148 (Jg (Var Sp) (Con 2) (Branch T (Dloc 110160)));
  PopStack popped3;
  if (GreaterThan(popped3,2)) {
    Jump: 110160
  } else {
    TraceOperation 110152 (Get_prop (Var (Local 1)) (Var (Local 2)) (Global 239));
    Let b4 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),12)];
    Let b5 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),12),1)];
    Let b6 = M[Address(MakeHiLo(b4,b5))];
    Let loop_var7 = DeAddress(Offset(Address(MakeHiLo(b4,b5)),Add(Mul(2,Widen(b6)),1)));
    Label 8: {
      Let b9 = M[Address(loop_var7)];
      if (IsZeroByte(b9)) {
        Let b10 = M[Offset(000266,Mul(2,Sub(GetLocal(2),1)))];
        Let b11 = M[Offset(Offset(000266,Mul(2,Sub(GetLocal(2),1))),1)];
        SetByte 007684 b10;
        SetByte 007685 b11;
      } else {
        if (TestBit(b9,7)) {
          Let b12 = M[Offset(Address(loop_var7),1)];
          if (Equal(GetLocal(2),Widen(BwAnd(b9,63)))) {
            if (Equal(Widen(BwAnd(b12,63)),2)) {
              Let b13 = M[Offset(Address(loop_var7),2)];
              Let b14 = M[Offset(Offset(Address(loop_var7),2),1)];
              SetByte 007684 b13;
              SetByte 007685 b14;
            } else {
              Let b15 = M[Offset(Address(loop_var7),2)];
              SetByte 007684 HiByte(Widen(b15));
              SetByte 007685 LoByte(Widen(b15));
            }
          } else {
            Assign loop_var7 = DeAddress(Offset(Offset(Address(loop_var7),2),Widen(BwAnd(b12,63))));
            Goto: Label 8
          }
        } else {
          if (TestBit(b9,6)) {
            if (Equal(GetLocal(2),Widen(BwAnd(b9,63)))) {
              Let b16 = M[Offset(Address(loop_var7),1)];
              Let b17 = M[Offset(Offset(Address(loop_var7),1),1)];
              SetByte 007684 b16;
              SetByte 007685 b17;
            } else {
              Assign loop_var7 = DeAddress(Offset(Offset(Address(loop_var7),1),2));
              Goto: Label 8
            }
          } else {
            if (Equal(GetLocal(2),Widen(BwAnd(b9,63)))) {
              Let b18 = M[Offset(Address(loop_var7),1)];
              SetByte 007684 HiByte(Widen(b18));
              SetByte 007685 LoByte(Widen(b18));
            } else {
              Assign loop_var7 = DeAddress(Offset(Offset(Address(loop_var7),1),1));
              Goto: Label 8
            }
          }
        }
      }
    }
    TraceOperation 110156 (Push (Var (Global 239)));
    Let b19 = M[007684];
    Let b20 = M[007685];
    PushStack MakeHiLo(b19,b20);
    TraceOperation 110159 Ret_popped;
    PopStack popped21;
    PopFrame;
    PopReturnAddress return_address_22;
    SetResult popped21;
    JumpIndirect: (return) return_address_22
  }
LocOp 110160:
  TraceOperation 110160 (CallN (Floc 111668) [Con -31235,Var (Local 1),Var (Local 2)]);
  PushFrame;
  PushReturnAddress 110160;
  SetLocal 1 -31235;
  SetLocal 2 GetLocal(1);
  SetLocal 3 GetLocal(2);
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 111669
LocReturn 110160:
  TraceOperation 110168 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 110169:
  TraceOperation 110169 (Call (Floc 111216) [Var (Local 1),Var (Local 2)] Sp);
  PushFrame;
  PushReturnAddress 110169;
  SetLocal 1 GetLocal(1);
  SetLocal 2 GetLocal(2);
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 111217
LocReturn 110169:
  PushStack call_result;
  TraceOperation 110176 (Jg (Var Sp) (Con 2) (Branch F (Dloc 110190)));
  PopStack popped1;
  if (GreaterThan(popped1,2)) {
    TraceOperation 110180 (CallN (Floc 111668) [Con -31234,Var (Local 1),Var (Local 2),Con 2]);
    PushFrame;
    PushReturnAddress 110180;
    SetLocal 1 -31234;
    SetLocal 2 GetLocal(1);
    SetLocal 3 GetLocal(2);
    SetLocal 4 2;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    Jump: 111669
  } else {
    Jump: 110190
  }
LocReturn 110180:
  Jump: 110190
LocOp 110190:
  TraceOperation 110190 (Loadw (Var (Local 3)) (Con 0) Sp);
  Let b1 = M[Offset(Address(GetLocal(3)),0)];
  Let b2 = M[Offset(Offset(Address(GetLocal(3)),0),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 110194 Ret_popped;
  PopStack popped3;
  PopFrame;
  PopReturnAddress return_address_4;
  SetResult popped3;
  JumpIndirect: (return) return_address_4
--------------------------------------------------
LocRoutine 110196:
  MakeRoutineFrame 15;
  if (LessThanByte(num_actuals,15)) {
    SetLocal 15 0;
    if (LessThanByte(num_actuals,14)) {
      SetLocal 14 0;
      if (LessThanByte(num_actuals,13)) {
        SetLocal 13 0;
        if (LessThanByte(num_actuals,12)) {
          SetLocal 12 0;
          if (LessThanByte(num_actuals,11)) {
            SetLocal 11 0;
            if (LessThanByte(num_actuals,10)) {
              SetLocal 10 0;
              if (LessThanByte(num_actuals,9)) {
                SetLocal 9 0;
                if (LessThanByte(num_actuals,8)) {
                  SetLocal 8 0;
                  if (LessThanByte(num_actuals,7)) {
                    SetLocal 7 0;
                    if (LessThanByte(num_actuals,6)) {
                      SetLocal 6 0;
                      if (LessThanByte(num_actuals,5)) {
                        SetLocal 5 0;
                        if (LessThanByte(num_actuals,4)) {
                          SetLocal 4 0;
                          if (LessThanByte(num_actuals,3)) {
                            SetLocal 3 0;
                            if (LessThanByte(num_actuals,2)) {
                              SetLocal 2 0;
                              if (LessThanByte(num_actuals,1)) {
                                SetLocal 1 0;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  Jump: 110197
LocOp 110197:
  TraceOperation 110197 (Jl (Var (Local 1)) (Con 1) (Branch T (Dloc 110212)));
  if (LessThan(GetLocal(1),1)) {
    Jump: 110212
  } else {
    TraceOperation 110201 (Sub (Con 327) (Con 255) Sp);
    PushStack 72;
    TraceOperation 110207 (Jg (Var (Local 1)) (Var Sp) (Branch F (Dloc 110299)));
    PopStack popped1;
    if (GreaterThan(GetLocal(1),popped1)) {
      Jump: 110212
    } else {
      Jump: 110299
    }
  }
LocOp 110212:
  TraceOperation 110212 (Call (Floc 112868) [Var (Local 1)] Sp);
  PushFrame;
  PushReturnAddress 110212;
  SetLocal 1 GetLocal(1);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 112869
LocReturn 110212:
  PushStack call_result;
  TraceOperation 110218 (Pull (Con 255));
  PopStack popped1;
  SetByte 007684 HiByte(popped1);
  SetByte 007685 LoByte(popped1);
  TraceOperation 110221 (Je [Var (Global 239),Con 2] (Branch F (Dloc 110263)));
  Let b2 = M[007684];
  Let b3 = M[007685];
  if (Equal(MakeHiLo(b2,b3),2)) {
    TraceOperation 110225 (Je [Var (Local 2),Con 69] (Branch F (Dloc 110260)));
    if (Equal(GetLocal(2),69)) {
      TraceOperation 110229 (Store (Con 12) (Var (Global 234)));
      Let b4 = M[007674];
      Let b5 = M[007675];
      SetLocal 12 MakeHiLo(b4,b5);
      TraceOperation 110232 (Store (Con 250) (Var (Global 235)));
      Let b6 = M[007676];
      Let b7 = M[007677];
      SetByte 007674 b6;
      SetByte 007675 b7;
      TraceOperation 110235 (Store (Con 251) (Var (Local 1)));
      SetByte 007676 HiByte(GetLocal(1));
      SetByte 007677 LoByte(GetLocal(1));
      TraceOperation 110238 (Store (Con 249) (Var (Global 40)));
      Let b8 = M[007286];
      Let b9 = M[007287];
      SetByte 007672 b8;
      SetByte 007673 b9;
      TraceOperation 110241 (Call (Fvar (Local 1)) [Var (Local 3),Var (Local 4),Var (Local 5),Var (Local 6),Var (Local 7),Var (Local 8)] (Local 9));
      if (IsZeroAddress(PackedAddress Z5(GetLocal(1)))) {
        SetLocal 9 0;
        Jump: 110252
      } else {
        PushFrame;
        PushReturnAddress 110241;
        SetLocal 1 GetLocal(3);
        SetLocal 2 GetLocal(4);
        SetLocal 3 GetLocal(5);
        SetLocal 4 GetLocal(6);
        SetLocal 5 GetLocal(7);
        SetLocal 6 GetLocal(8);
        SetNumberActuals 6;
        JumpIndirect: (routine) PackedAddress Z5(GetLocal(1))
      }
    } else {
      Jump: 110260
    }
  } else {
    Jump: 110263
  }
LocReturn 110241:
  SetLocal 9 call_result;
  Jump: 110252
LocOp 110252:
  TraceOperation 110252 (Store (Con 251) (Var (Global 234)));
  Let b1 = M[007674];
  Let b2 = M[007675];
  SetByte 007676 b1;
  SetByte 007677 b2;
  TraceOperation 110255 (Store (Con 250) (Var (Local 12)));
  SetByte 007674 HiByte(GetLocal(12));
  SetByte 007675 LoByte(GetLocal(12));
  TraceOperation 110258 (Ret (Var (Local 9)));
  PopFrame;
  PopReturnAddress return_address_3;
  SetResult GetLocal(9);
  JumpIndirect: (return) return_address_3
LocOp 110260:
  TraceOperation 110260 (Jump 110614);
  Jump: 110614
LocOp 110263:
  TraceOperation 110263 (Je [Var (Global 239),Con 3] (Branch F (Dloc 110296)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),3)) {
    TraceOperation 110267 (Je [Var (Local 2),Con 70] (Branch F (Dloc 110274)));
    if (Equal(GetLocal(2),70)) {
      TraceOperation 110271 (Print_paddr (Var (Local 1)));
      GamePrint GetText(PackedAddress Z5(GetLocal(1)));
      TraceOperation 110273 Rtrue;
      PopFrame;
      PopReturnAddress return_address_3;
      SetResult 1;
      JumpIndirect: (return) return_address_3
    } else {
      Jump: 110274
    }
  } else {
    Jump: 110296
  }
LocOp 110274:
  TraceOperation 110274 (Je [Var (Local 2),Con 71] (Branch F (Dloc 110293)));
  if (Equal(GetLocal(2),71)) {
    TraceOperation 110278 (Output_stream (Con 3) (Just (Var (Local 3))));
    Note "Output_stream (Con 3) (Just (Var (Local 3)))";
    TraceOperation 110282 (Print_paddr (Var (Local 1)));
    GamePrint GetText(PackedAddress Z5(GetLocal(1)));
    TraceOperation 110284 (Output_stream (Con -3) Nothing);
    Note "Output_stream (Con -3) Nothing";
    TraceOperation 110288 (Loadw (Var (Local 3)) (Con 0) Sp);
    Let b1 = M[Offset(Address(GetLocal(3)),0)];
    Let b2 = M[Offset(Offset(Address(GetLocal(3)),0),1)];
    PushStack MakeHiLo(b1,b2);
    TraceOperation 110292 Ret_popped;
    PopStack popped3;
    PopFrame;
    PopReturnAddress return_address_4;
    SetResult popped3;
    JumpIndirect: (return) return_address_4
  } else {
    Jump: 110293
  }
LocOp 110293:
  TraceOperation 110293 (Jump 110614);
  Jump: 110614
LocOp 110296:
  TraceOperation 110296 (Jump 110614);
  Jump: 110614
LocOp 110299:
  TraceOperation 110299 (Check_arg_count (Con 3) (Branch F (Dloc 110335)));
  if (GreaterThanEqual(Widen(num_actuals),3)) {
    TraceOperation 110303 (Inc (Con 10));
    SetLocal 10 Add(GetLocal(10),1);
    TraceOperation 110305 (Check_arg_count (Con 4) (Branch F (Dloc 110335)));
    if (GreaterThanEqual(Widen(num_actuals),4)) {
      TraceOperation 110309 (Inc (Con 10));
      SetLocal 10 Add(GetLocal(10),1);
      TraceOperation 110311 (Check_arg_count (Con 5) (Branch F (Dloc 110335)));
      if (GreaterThanEqual(Widen(num_actuals),5)) {
        TraceOperation 110315 (Inc (Con 10));
        SetLocal 10 Add(GetLocal(10),1);
        TraceOperation 110317 (Check_arg_count (Con 6) (Branch F (Dloc 110335)));
        if (GreaterThanEqual(Widen(num_actuals),6)) {
          TraceOperation 110321 (Inc (Con 10));
          SetLocal 10 Add(GetLocal(10),1);
          TraceOperation 110323 (Check_arg_count (Con 7) (Branch F (Dloc 110335)));
          if (GreaterThanEqual(Widen(num_actuals),7)) {
            TraceOperation 110327 (Inc (Con 10));
            SetLocal 10 Add(GetLocal(10),1);
            TraceOperation 110329 (Check_arg_count (Con 8) (Branch F (Dloc 110335)));
            if (GreaterThanEqual(Widen(num_actuals),8)) {
              TraceOperation 110333 (Inc (Con 10));
              SetLocal 10 Add(GetLocal(10),1);
              Jump: 110335
            } else {
              Jump: 110335
            }
          } else {
            Jump: 110335
          }
        } else {
          Jump: 110335
        }
      } else {
        Jump: 110335
      }
    } else {
      Jump: 110335
    }
  } else {
    Jump: 110335
  }
LocOp 110335:
  TraceOperation 110335 (Je [Var (Local 14),Con 1] (Branch F (Dloc 110522)));
  if (Equal(GetLocal(14),1)) {
    TraceOperation 110340 (Print "[ \"");
    GamePrint "[ \"";
    TraceOperation 110347 (CallN (Floc 082048) [Var (Local 1)]);
    PushFrame;
    PushReturnAddress 110347;
    SetLocal 1 GetLocal(1);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 082049
  } else {
    Jump: 110522
  }
LocReturn 110347:
  TraceOperation 110352 (Print "\".");
  GamePrint "\".";
  TraceOperation 110357 (CallN (Floc 113460) [Var (Local 2)]);
  PushFrame;
  PushReturnAddress 110357;
  SetLocal 1 GetLocal(2);
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 113461
LocReturn 110357:
  TraceOperation 110362 (Print "(");
  GamePrint "(";
  TraceOperation 110365 (Store (Con 255) (Var (Local 10)));
  SetByte 007684 HiByte(GetLocal(10));
  SetByte 007685 LoByte(GetLocal(10));
  TraceOperation 110368 (Je [Var (Global 239),Con 1] (Branch F (Dloc 110378)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),1)) {
    TraceOperation 110372 (Print_num (Var (Local 3)));
    GamePrint ShowNumber(GetLocal(3));
    TraceOperation 110375 (Jump 110515);
    Jump: 110515
  } else {
    Jump: 110378
  }
LocOp 110378:
  TraceOperation 110378 (Je [Var (Global 239),Con 2] (Branch F (Dloc 110394)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),2)) {
    TraceOperation 110382 (Print_num (Var (Local 3)));
    GamePrint ShowNumber(GetLocal(3));
    TraceOperation 110385 (Print ",");
    GamePrint ",";
    TraceOperation 110388 (Print_num (Var (Local 4)));
    GamePrint ShowNumber(GetLocal(4));
    TraceOperation 110391 (Jump 110515);
    Jump: 110515
  } else {
    Jump: 110394
  }
LocOp 110394:
  TraceOperation 110394 (Je [Var (Global 239),Con 3] (Branch F (Dloc 110416)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),3)) {
    TraceOperation 110398 (Print_num (Var (Local 3)));
    GamePrint ShowNumber(GetLocal(3));
    TraceOperation 110401 (Print ",");
    GamePrint ",";
    TraceOperation 110404 (Print_num (Var (Local 4)));
    GamePrint ShowNumber(GetLocal(4));
    TraceOperation 110407 (Print ",");
    GamePrint ",";
    TraceOperation 110410 (Print_num (Var (Local 5)));
    GamePrint ShowNumber(GetLocal(5));
    TraceOperation 110413 (Jump 110515);
    Jump: 110515
  } else {
    Jump: 110416
  }
LocOp 110416:
  TraceOperation 110416 (Je [Var (Global 239),Con 4] (Branch F (Dloc 110444)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),4)) {
    TraceOperation 110420 (Print_num (Var (Local 3)));
    GamePrint ShowNumber(GetLocal(3));
    TraceOperation 110423 (Print ",");
    GamePrint ",";
    TraceOperation 110426 (Print_num (Var (Local 4)));
    GamePrint ShowNumber(GetLocal(4));
    TraceOperation 110429 (Print ",");
    GamePrint ",";
    TraceOperation 110432 (Print_num (Var (Local 5)));
    GamePrint ShowNumber(GetLocal(5));
    TraceOperation 110435 (Print ",");
    GamePrint ",";
    TraceOperation 110438 (Print_num (Var (Local 6)));
    GamePrint ShowNumber(GetLocal(6));
    TraceOperation 110441 (Jump 110515);
    Jump: 110515
  } else {
    Jump: 110444
  }
LocOp 110444:
  TraceOperation 110444 (Je [Var (Global 239),Con 5] (Branch F (Dloc 110478)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),5)) {
    TraceOperation 110448 (Print_num (Var (Local 3)));
    GamePrint ShowNumber(GetLocal(3));
    TraceOperation 110451 (Print ",");
    GamePrint ",";
    TraceOperation 110454 (Print_num (Var (Local 4)));
    GamePrint ShowNumber(GetLocal(4));
    TraceOperation 110457 (Print ",");
    GamePrint ",";
    TraceOperation 110460 (Print_num (Var (Local 5)));
    GamePrint ShowNumber(GetLocal(5));
    TraceOperation 110463 (Print ",");
    GamePrint ",";
    TraceOperation 110466 (Print_num (Var (Local 6)));
    GamePrint ShowNumber(GetLocal(6));
    TraceOperation 110469 (Print ",");
    GamePrint ",";
    TraceOperation 110472 (Print_num (Var (Local 7)));
    GamePrint ShowNumber(GetLocal(7));
    TraceOperation 110475 (Jump 110515);
    Jump: 110515
  } else {
    Jump: 110478
  }
LocOp 110478:
  TraceOperation 110478 (Je [Var (Global 239),Con 6] (Branch F (Dloc 110515)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),6)) {
    TraceOperation 110482 (Print_num (Var (Local 3)));
    GamePrint ShowNumber(GetLocal(3));
    TraceOperation 110485 (Print ",");
    GamePrint ",";
    TraceOperation 110488 (Print_num (Var (Local 4)));
    GamePrint ShowNumber(GetLocal(4));
    TraceOperation 110491 (Print ",");
    GamePrint ",";
    TraceOperation 110494 (Print_num (Var (Local 5)));
    GamePrint ShowNumber(GetLocal(5));
    TraceOperation 110497 (Print ",");
    GamePrint ",";
    TraceOperation 110500 (Print_num (Var (Local 6)));
    GamePrint ShowNumber(GetLocal(6));
    TraceOperation 110503 (Print ",");
    GamePrint ",";
    TraceOperation 110506 (Print_num (Var (Local 7)));
    GamePrint ShowNumber(GetLocal(7));
    TraceOperation 110509 (Print ",");
    GamePrint ",";
    TraceOperation 110512 (Print_num (Var (Local 8)));
    GamePrint ShowNumber(GetLocal(8));
    Jump: 110515
  } else {
    Jump: 110515
  }
LocOp 110515:
  TraceOperation 110515 (Print ") ]\n");
  GamePrint ") ]\n";
  Jump: 110522
LocOp 110522:
  TraceOperation 110522 (Jg (Var (Local 2)) (Con 0) (Branch F (Dloc 110578)));
  if (GreaterThan(GetLocal(2),0)) {
    TraceOperation 110526 (Jl (Var (Local 2)) (Con 64) (Branch F (Dloc 110578)));
    if (LessThan(GetLocal(2),64)) {
      TraceOperation 110530 (Get_prop_addr (Var (Local 1)) (Var (Local 2)) (Global 239));
      Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),12)];
      Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),12),1)];
      Let b3 = M[Address(MakeHiLo(b1,b2))];
      Let loop_var4 = DeAddress(Offset(Address(MakeHiLo(b1,b2)),Add(Mul(2,Widen(b3)),1)));
      Label 5: {
        Let b6 = M[Address(loop_var4)];
        if (IsZeroByte(b6)) {
          SetByte 007684 0;
          SetByte 007685 0;
        } else {
          if (TestBit(b6,7)) {
            Let b7 = M[Offset(Address(loop_var4),1)];
            if (Equal(GetLocal(2),Widen(BwAnd(b6,63)))) {
              SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var4),2)));
              SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var4),2)));
            } else {
              Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),2),Widen(BwAnd(b7,63))));
              Goto: Label 5
            }
          } else {
            if (TestBit(b6,6)) {
              if (Equal(GetLocal(2),Widen(BwAnd(b6,63)))) {
                SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var4),1)));
                SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var4),1)));
              } else {
                Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),2));
                Goto: Label 5
              }
            } else {
              if (Equal(GetLocal(2),Widen(BwAnd(b6,63)))) {
                SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var4),1)));
                SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var4),1)));
              } else {
                Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),1));
                Goto: Label 5
              }
            }
          }
        }
      }
      TraceOperation 110534 (Store (Con 9) (Var (Global 239)));
      Let b8 = M[007684];
      Let b9 = M[007685];
      SetLocal 9 MakeHiLo(b8,b9);
      TraceOperation 110537 (Jz (Var (Local 9)) (Branch F (Dloc 110562)));
      if (IsZero(GetLocal(9))) {
        TraceOperation 110540 (Sub (Var (Local 2)) (Con 1) Sp);
        PushStack Sub(GetLocal(2),1);
        TraceOperation 110544 (Mul (Con 2) (Var Sp) Sp);
        PopStack popped10;
        PushStack Mul(2,popped10);
        TraceOperation 110548 (Loadw (Con 10) (Con 0) Sp);
        PushStack 266;
        TraceOperation 110552 (Add (Var Sp) (Var Sp) (Local 9));
        PopStack popped11;
        PopStack popped12;
        SetLocal 9 Add(popped11,popped12);
        TraceOperation 110556 (Store (Con 14) (Con 2));
        SetLocal 14 2;
        TraceOperation 110559 (Jump 110575);
        Jump: 110575
      } else {
        Jump: 110562
      }
    } else {
      Jump: 110578
    }
  } else {
    Jump: 110578
  }
LocOp 110562:
  TraceOperation 110562 (Get_prop_addr (Var (Local 1)) (Var (Local 2)) (Global 239));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),12)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),12),1)];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let loop_var4 = DeAddress(Offset(Address(MakeHiLo(b1,b2)),Add(Mul(2,Widen(b3)),1)));
  Label 5: {
    Let b6 = M[Address(loop_var4)];
    if (IsZeroByte(b6)) {
      SetByte 007684 0;
      SetByte 007685 0;
    } else {
      if (TestBit(b6,7)) {
        Let b7 = M[Offset(Address(loop_var4),1)];
        if (Equal(GetLocal(2),Widen(BwAnd(b6,63)))) {
          SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var4),2)));
          SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var4),2)));
        } else {
          Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),2),Widen(BwAnd(b7,63))));
          Goto: Label 5
        }
      } else {
        if (TestBit(b6,6)) {
          if (Equal(GetLocal(2),Widen(BwAnd(b6,63)))) {
            SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var4),1)));
            SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var4),1)));
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),2));
            Goto: Label 5
          }
        } else {
          if (Equal(GetLocal(2),Widen(BwAnd(b6,63)))) {
            SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var4),1)));
            SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var4),1)));
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),1));
            Goto: Label 5
          }
        }
      }
    }
  }
  TraceOperation 110566 (Jz (Var (Global 239)) (Branch T (Dloc 110572)));
  Let b8 = M[007684];
  Let b9 = M[007685];
  if (IsZero(MakeHiLo(b8,b9))) {
    Jump: 110572
  } else {
    TraceOperation 110569 (Get_prop_len (Var (Global 239)) (Global 239));
    Let b10 = M[007684];
    Let b11 = M[007685];
    if (IsZero(MakeHiLo(b10,b11))) {
      SetByte 007684 0;
      SetByte 007685 0;
    } else {
      Let b12 = M[Offset(Address(MakeHiLo(b10,b11)),-1)];
      if (TestBit(b12,7)) {
        Let b13 = M[Offset(Address(MakeHiLo(b10,b11)),-2)];
        if (TestBit(b13,7)) {
          Let b14 = M[Offset(Offset(Address(MakeHiLo(b10,b11)),-2),1)];
          SetByte 007684 HiByte(Widen(BwAnd(b14,63)));
          SetByte 007685 LoByte(Widen(BwAnd(b14,63)));
        } else {
          if (TestBit(b13,6)) {
            SetByte 007684 0;
            SetByte 007685 2;
          } else {
            SetByte 007684 0;
            SetByte 007685 1;
          }
        }
      } else {
        Let b15 = M[Offset(Address(MakeHiLo(b10,b11)),-1)];
        if (TestBit(b15,7)) {
          Let b16 = M[Offset(Offset(Address(MakeHiLo(b10,b11)),-1),1)];
          SetByte 007684 HiByte(Widen(BwAnd(b16,63)));
          SetByte 007685 LoByte(Widen(BwAnd(b16,63)));
        } else {
          if (TestBit(b15,6)) {
            SetByte 007684 0;
            SetByte 007685 2;
          } else {
            SetByte 007684 0;
            SetByte 007685 1;
          }
        }
      }
    }
    Jump: 110572
  }
LocOp 110572:
  TraceOperation 110572 (Store (Con 14) (Var (Global 239)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  SetLocal 14 MakeHiLo(b1,b2);
  Jump: 110575
LocOp 110575:
  TraceOperation 110575 (Jump 110678);
  Jump: 110678
LocOp 110578:
  TraceOperation 110578 (Jl (Var (Local 2)) (Con 64) (Branch T (Dloc 110604)));
  if (LessThan(GetLocal(2),64)) {
    Jump: 110604
  } else {
    TraceOperation 110582 (Jl (Var (Local 2)) (Con 69) (Branch F (Dloc 110604)));
    if (LessThan(GetLocal(2),69)) {
      TraceOperation 110586 (Jin (Var (Local 1)) (Con 1) (Branch F (Dloc 110604)));
      Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),6)];
      Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),6),1)];
      if (Equal(1,MakeHiLo(b1,b2))) {
        TraceOperation 110590 (Call (Floc 113056) [Var (Local 1),Var (Local 2),Var (Local 10),Var (Local 3),Var (Local 4),Var (Local 5),Var (Local 6)] Sp);
        PushFrame;
        PushReturnAddress 110590;
        SetLocal 1 GetLocal(1);
        SetLocal 2 GetLocal(2);
        SetLocal 3 GetLocal(10);
        SetLocal 4 GetLocal(3);
        SetLocal 5 GetLocal(4);
        SetLocal 6 GetLocal(5);
        SetLocal 7 GetLocal(6);
        MakeRoutineFrame 8;
        SetLocal 8 0;
        Jump: 113057
      } else {
        Jump: 110604
      }
    } else {
      Jump: 110604
    }
  }
LocReturn 110590:
  PushStack call_result;
  TraceOperation 110603 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 110604:
  TraceOperation 110604 (Call (Floc 110912) [Var (Local 1),Var (Local 2)] (Local 9));
  PushFrame;
  PushReturnAddress 110604;
  SetLocal 1 GetLocal(1);
  SetLocal 2 GetLocal(2);
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 110913
LocReturn 110604:
  SetLocal 9 call_result;
  TraceOperation 110611 (Jz (Var (Local 9)) (Branch F (Dloc 110623)));
  if (IsZero(GetLocal(9))) {
    Jump: 110614
  } else {
    Jump: 110623
  }
LocOp 110614:
  TraceOperation 110614 (CallN (Floc 111668) [Con -31233,Var (Local 1),Var (Local 2)]);
  PushFrame;
  PushReturnAddress 110614;
  SetLocal 1 -31233;
  SetLocal 2 GetLocal(1);
  SetLocal 3 GetLocal(2);
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 111669
LocReturn 110614:
  TraceOperation 110622 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 110623:
  TraceOperation 110623 (Sub (Var (Local 9)) (Con 1) Sp);
  PushStack Sub(GetLocal(9),1);
  TraceOperation 110627 (Loadb (Con 0) (Var Sp) (Local 14));
  PopStack popped1;
  Let b2 = M[Offset(000000,popped1)];
  SetLocal 14 Widen(b2);
  TraceOperation 110631 (And (Var (Local 2)) (Con -16384) Sp);
  PushStack And(GetLocal(2),-16384);
  TraceOperation 110637 (Je [Var Sp,Con 16384] (Branch F (Dloc 110678)));
  PopStack popped3;
  if (Equal(popped3,16384)) {
    TraceOperation 110643 (And (Var (Local 14)) (Con 192) Sp);
    PushStack And(GetLocal(14),192);
    TraceOperation 110647 (Pull (Con 255));
    PopStack popped4;
    SetByte 007684 HiByte(popped4);
    SetByte 007685 LoByte(popped4);
    TraceOperation 110650 (Je [Var (Global 239),Con 0] (Branch F (Dloc 110660)));
    Let b5 = M[007684];
    Let b6 = M[007685];
    if (Equal(MakeHiLo(b5,b6),0)) {
      TraceOperation 110654 (Store (Con 14) (Con 1));
      SetLocal 14 1;
      TraceOperation 110657 (Jump 110678);
      Jump: 110678
    } else {
      Jump: 110660
    }
  } else {
    Jump: 110678
  }
LocOp 110660:
  TraceOperation 110660 (Je [Var (Global 239),Con 64] (Branch F (Dloc 110670)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),64)) {
    TraceOperation 110664 (Store (Con 14) (Con 2));
    SetLocal 14 2;
    TraceOperation 110667 (Jump 110678);
    Jump: 110678
  } else {
    Jump: 110670
  }
LocOp 110670:
  TraceOperation 110670 (Je [Var (Global 239),Con 128] (Branch F (Dloc 110678)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),128)) {
    TraceOperation 110674 (And (Var (Local 14)) (Con 63) (Local 14));
    SetLocal 14 And(GetLocal(14),63);
    Jump: 110678
  } else {
    Jump: 110678
  }
LocOp 110678:
  TraceOperation 110678 (Mul (Con 2) (Var (Local 15)) Sp);
  PushStack Mul(2,GetLocal(15));
  TraceOperation 110682 (Jl (Var Sp) (Var (Local 14)) (Branch F (Dloc 110908)));
  PopStack popped1;
  if (LessThan(popped1,GetLocal(14))) {
    TraceOperation 110687 (Loadw (Var (Local 9)) (Var (Local 15)) Sp);
    Let b2 = M[Offset(Address(GetLocal(9)),Mul(2,GetLocal(15)))];
    Let b3 = M[Offset(Offset(Address(GetLocal(9)),Mul(2,GetLocal(15))),1)];
    PushStack MakeHiLo(b2,b3);
    TraceOperation 110691 (Je [Var Sp,Con -1] (Branch T Dfalse));
    PopStack popped4;
    if (Equal(popped4,-1)) {
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 0;
      JumpIndirect: (return) return_address_5
    } else {
      TraceOperation 110697 (Loadw (Var (Local 9)) (Var (Local 15)) Sp);
      Let b6 = M[Offset(Address(GetLocal(9)),Mul(2,GetLocal(15)))];
      Let b7 = M[Offset(Offset(Address(GetLocal(9)),Mul(2,GetLocal(15))),1)];
      PushStack MakeHiLo(b6,b7);
      TraceOperation 110701 (Call (Floc 112868) [Var Sp] Sp);
      PopStack popped8;
      PushFrame;
      PushReturnAddress 110701;
      SetLocal 1 popped8;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 112869
    }
  } else {
    Jump: 110908
  }
LocReturn 110701:
  PushStack call_result;
  TraceOperation 110707 (Pull (Con 255));
  PopStack popped1;
  SetByte 007684 HiByte(popped1);
  SetByte 007685 LoByte(popped1);
  TraceOperation 110710 (Je [Var (Global 239),Con 2] (Branch F (Dloc 110886)));
  Let b2 = M[007684];
  Let b3 = M[007685];
  if (Equal(MakeHiLo(b2,b3),2)) {
    TraceOperation 110715 (Store (Con 12) (Var (Global 234)));
    Let b4 = M[007674];
    Let b5 = M[007675];
    SetLocal 12 MakeHiLo(b4,b5);
    TraceOperation 110718 (Store (Con 250) (Var (Global 235)));
    Let b6 = M[007676];
    Let b7 = M[007677];
    SetByte 007674 b6;
    SetByte 007675 b7;
    TraceOperation 110721 (Store (Con 251) (Var (Local 1)));
    SetByte 007676 HiByte(GetLocal(1));
    SetByte 007677 LoByte(GetLocal(1));
    TraceOperation 110724 (Store (Con 13) (Var (Global 233)));
    Let b8 = M[007672];
    Let b9 = M[007673];
    SetLocal 13 MakeHiLo(b8,b9);
    TraceOperation 110727 (Je [Var (Local 2),Con -1] (Branch F (Dloc 110739)));
    if (Equal(GetLocal(2),-1)) {
      TraceOperation 110733 (Store (Con 249) (Var (Global 84)));
      Let b10 = M[007374];
      Let b11 = M[007375];
      SetByte 007672 b10;
      SetByte 007673 b11;
      TraceOperation 110736 (Jump 110742);
      Jump: 110742
    } else {
      Jump: 110739
    }
  } else {
    Jump: 110886
  }
LocOp 110739:
  TraceOperation 110739 (Store (Con 249) (Var (Global 40)));
  Let b1 = M[007286];
  Let b2 = M[007287];
  SetByte 007672 b1;
  SetByte 007673 b2;
  Jump: 110742
LocOp 110742:
  TraceOperation 110742 (Store (Con 255) (Var (Local 10)));
  SetByte 007684 HiByte(GetLocal(10));
  SetByte 007685 LoByte(GetLocal(10));
  TraceOperation 110745 (Je [Var (Global 239),Con 0] (Branch F (Dloc 110759)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),0)) {
    TraceOperation 110749 (Loadw (Var (Local 9)) (Var (Local 15)) Sp);
    Let b3 = M[Offset(Address(GetLocal(9)),Mul(2,GetLocal(15)))];
    Let b4 = M[Offset(Offset(Address(GetLocal(9)),Mul(2,GetLocal(15))),1)];
    PushStack MakeHiLo(b3,b4);
    TraceOperation 110753 (Call (Fvar Sp) [] (Local 11));
    PopStack popped5;
    if (IsZeroAddress(PackedAddress Z5(popped5))) {
      SetLocal 11 0;
      Jump: 110756
    } else {
      PushFrame;
      PushReturnAddress 110753;
      SetNumberActuals 0;
      JumpIndirect: (routine) PackedAddress Z5(popped5)
    }
  } else {
    Jump: 110759
  }
LocReturn 110753:
  SetLocal 11 call_result;
  Jump: 110756
LocOp 110756:
  TraceOperation 110756 (Jump 110869);
  Jump: 110869
LocOp 110759:
  TraceOperation 110759 (Je [Var (Global 239),Con 1] (Branch F (Dloc 110774)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),1)) {
    TraceOperation 110763 (Loadw (Var (Local 9)) (Var (Local 15)) Sp);
    Let b3 = M[Offset(Address(GetLocal(9)),Mul(2,GetLocal(15)))];
    Let b4 = M[Offset(Offset(Address(GetLocal(9)),Mul(2,GetLocal(15))),1)];
    PushStack MakeHiLo(b3,b4);
    TraceOperation 110767 (Call (Fvar Sp) [Var (Local 3)] (Local 11));
    PopStack popped5;
    if (IsZeroAddress(PackedAddress Z5(popped5))) {
      SetLocal 11 0;
      Jump: 110771
    } else {
      PushFrame;
      PushReturnAddress 110767;
      SetLocal 1 GetLocal(3);
      SetNumberActuals 1;
      JumpIndirect: (routine) PackedAddress Z5(popped5)
    }
  } else {
    Jump: 110774
  }
LocReturn 110767:
  SetLocal 11 call_result;
  Jump: 110771
LocOp 110771:
  TraceOperation 110771 (Jump 110869);
  Jump: 110869
LocOp 110774:
  TraceOperation 110774 (Je [Var (Global 239),Con 2] (Branch F (Dloc 110791)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),2)) {
    TraceOperation 110778 (Loadw (Var (Local 9)) (Var (Local 15)) Sp);
    Let b3 = M[Offset(Address(GetLocal(9)),Mul(2,GetLocal(15)))];
    Let b4 = M[Offset(Offset(Address(GetLocal(9)),Mul(2,GetLocal(15))),1)];
    PushStack MakeHiLo(b3,b4);
    TraceOperation 110782 (Call (Fvar Sp) [Var (Local 3),Var (Local 4)] (Local 11));
    PopStack popped5;
    if (IsZeroAddress(PackedAddress Z5(popped5))) {
      SetLocal 11 0;
      Jump: 110788
    } else {
      PushFrame;
      PushReturnAddress 110782;
      SetLocal 1 GetLocal(3);
      SetLocal 2 GetLocal(4);
      SetNumberActuals 2;
      JumpIndirect: (routine) PackedAddress Z5(popped5)
    }
  } else {
    Jump: 110791
  }
LocReturn 110782:
  SetLocal 11 call_result;
  Jump: 110788
LocOp 110788:
  TraceOperation 110788 (Jump 110869);
  Jump: 110869
LocOp 110791:
  TraceOperation 110791 (Je [Var (Global 239),Con 3] (Branch F (Dloc 110809)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),3)) {
    TraceOperation 110795 (Loadw (Var (Local 9)) (Var (Local 15)) Sp);
    Let b3 = M[Offset(Address(GetLocal(9)),Mul(2,GetLocal(15)))];
    Let b4 = M[Offset(Offset(Address(GetLocal(9)),Mul(2,GetLocal(15))),1)];
    PushStack MakeHiLo(b3,b4);
    TraceOperation 110799 (Call (Fvar Sp) [Var (Local 3),Var (Local 4),Var (Local 5)] (Local 11));
    PopStack popped5;
    if (IsZeroAddress(PackedAddress Z5(popped5))) {
      SetLocal 11 0;
      Jump: 110806
    } else {
      PushFrame;
      PushReturnAddress 110799;
      SetLocal 1 GetLocal(3);
      SetLocal 2 GetLocal(4);
      SetLocal 3 GetLocal(5);
      SetNumberActuals 3;
      JumpIndirect: (routine) PackedAddress Z5(popped5)
    }
  } else {
    Jump: 110809
  }
LocReturn 110799:
  SetLocal 11 call_result;
  Jump: 110806
LocOp 110806:
  TraceOperation 110806 (Jump 110869);
  Jump: 110869
LocOp 110809:
  TraceOperation 110809 (Je [Var (Global 239),Con 4] (Branch F (Dloc 110829)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),4)) {
    TraceOperation 110813 (Loadw (Var (Local 9)) (Var (Local 15)) Sp);
    Let b3 = M[Offset(Address(GetLocal(9)),Mul(2,GetLocal(15)))];
    Let b4 = M[Offset(Offset(Address(GetLocal(9)),Mul(2,GetLocal(15))),1)];
    PushStack MakeHiLo(b3,b4);
    TraceOperation 110817 (Call (Fvar Sp) [Var (Local 3),Var (Local 4),Var (Local 5),Var (Local 6)] (Local 11));
    PopStack popped5;
    if (IsZeroAddress(PackedAddress Z5(popped5))) {
      SetLocal 11 0;
      Jump: 110826
    } else {
      PushFrame;
      PushReturnAddress 110817;
      SetLocal 1 GetLocal(3);
      SetLocal 2 GetLocal(4);
      SetLocal 3 GetLocal(5);
      SetLocal 4 GetLocal(6);
      SetNumberActuals 4;
      JumpIndirect: (routine) PackedAddress Z5(popped5)
    }
  } else {
    Jump: 110829
  }
LocReturn 110817:
  SetLocal 11 call_result;
  Jump: 110826
LocOp 110826:
  TraceOperation 110826 (Jump 110869);
  Jump: 110869
LocOp 110829:
  TraceOperation 110829 (Je [Var (Global 239),Con 5] (Branch F (Dloc 110850)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),5)) {
    TraceOperation 110833 (Loadw (Var (Local 9)) (Var (Local 15)) Sp);
    Let b3 = M[Offset(Address(GetLocal(9)),Mul(2,GetLocal(15)))];
    Let b4 = M[Offset(Offset(Address(GetLocal(9)),Mul(2,GetLocal(15))),1)];
    PushStack MakeHiLo(b3,b4);
    TraceOperation 110837 (Call (Fvar Sp) [Var (Local 3),Var (Local 4),Var (Local 5),Var (Local 6),Var (Local 7)] (Local 11));
    PopStack popped5;
    if (IsZeroAddress(PackedAddress Z5(popped5))) {
      SetLocal 11 0;
      Jump: 110847
    } else {
      PushFrame;
      PushReturnAddress 110837;
      SetLocal 1 GetLocal(3);
      SetLocal 2 GetLocal(4);
      SetLocal 3 GetLocal(5);
      SetLocal 4 GetLocal(6);
      SetLocal 5 GetLocal(7);
      SetNumberActuals 5;
      JumpIndirect: (routine) PackedAddress Z5(popped5)
    }
  } else {
    Jump: 110850
  }
LocReturn 110837:
  SetLocal 11 call_result;
  Jump: 110847
LocOp 110847:
  TraceOperation 110847 (Jump 110869);
  Jump: 110869
LocOp 110850:
  TraceOperation 110850 (Je [Var (Global 239),Con 6] (Branch F (Dloc 110869)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),6)) {
    TraceOperation 110854 (Loadw (Var (Local 9)) (Var (Local 15)) Sp);
    Let b3 = M[Offset(Address(GetLocal(9)),Mul(2,GetLocal(15)))];
    Let b4 = M[Offset(Offset(Address(GetLocal(9)),Mul(2,GetLocal(15))),1)];
    PushStack MakeHiLo(b3,b4);
    TraceOperation 110858 (Call (Fvar Sp) [Var (Local 3),Var (Local 4),Var (Local 5),Var (Local 6),Var (Local 7),Var (Local 8)] (Local 11));
    PopStack popped5;
    if (IsZeroAddress(PackedAddress Z5(popped5))) {
      SetLocal 11 0;
      Jump: 110869
    } else {
      PushFrame;
      PushReturnAddress 110858;
      SetLocal 1 GetLocal(3);
      SetLocal 2 GetLocal(4);
      SetLocal 3 GetLocal(5);
      SetLocal 4 GetLocal(6);
      SetLocal 5 GetLocal(7);
      SetLocal 6 GetLocal(8);
      SetNumberActuals 6;
      JumpIndirect: (routine) PackedAddress Z5(popped5)
    }
  } else {
    Jump: 110869
  }
LocReturn 110858:
  SetLocal 11 call_result;
  Jump: 110869
LocOp 110869:
  TraceOperation 110869 (Store (Con 251) (Var (Global 234)));
  Let b1 = M[007674];
  Let b2 = M[007675];
  SetByte 007676 b1;
  SetByte 007677 b2;
  TraceOperation 110872 (Store (Con 250) (Var (Local 12)));
  SetByte 007674 HiByte(GetLocal(12));
  SetByte 007675 LoByte(GetLocal(12));
  TraceOperation 110875 (Store (Con 249) (Var (Local 13)));
  SetByte 007672 HiByte(GetLocal(13));
  SetByte 007673 LoByte(GetLocal(13));
  TraceOperation 110878 (Jz (Var (Local 11)) (Branch T (Dloc 110883)));
  if (IsZero(GetLocal(11))) {
    Jump: 110883
  } else {
    TraceOperation 110881 (Ret (Var (Local 11)));
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult GetLocal(11);
    JumpIndirect: (return) return_address_3
  }
LocOp 110883:
  TraceOperation 110883 (Jump 110903);
  Jump: 110903
LocOp 110886:
  TraceOperation 110886 (Je [Var (Global 239),Con 3] (Branch F (Dloc 110898)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),3)) {
    TraceOperation 110890 (Loadw (Var (Local 9)) (Var (Local 15)) Sp);
    Let b3 = M[Offset(Address(GetLocal(9)),Mul(2,GetLocal(15)))];
    Let b4 = M[Offset(Offset(Address(GetLocal(9)),Mul(2,GetLocal(15))),1)];
    PushStack MakeHiLo(b3,b4);
    TraceOperation 110894 (Print_paddr (Var Sp));
    PopStack popped5;
    GamePrint GetText(PackedAddress Z5(popped5));
    TraceOperation 110896 New_line;
    GamePrint "\n";
    TraceOperation 110897 Rtrue;
    PopFrame;
    PopReturnAddress return_address_6;
    SetResult 1;
    JumpIndirect: (return) return_address_6
  } else {
    Jump: 110898
  }
LocOp 110898:
  TraceOperation 110898 (Loadw (Var (Local 9)) (Var (Local 15)) Sp);
  Let b1 = M[Offset(Address(GetLocal(9)),Mul(2,GetLocal(15)))];
  Let b2 = M[Offset(Offset(Address(GetLocal(9)),Mul(2,GetLocal(15))),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 110902 Ret_popped;
  PopStack popped3;
  PopFrame;
  PopReturnAddress return_address_4;
  SetResult popped3;
  JumpIndirect: (return) return_address_4
LocOp 110903:
  TraceOperation 110903 (Inc (Con 15));
  SetLocal 15 Add(GetLocal(15),1);
  TraceOperation 110905 (Jump 110678);
  Jump: 110678
LocOp 110908:
  TraceOperation 110908 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 110912:
  MakeRoutineFrame 5;
  if (LessThanByte(num_actuals,5)) {
    SetLocal 5 0;
    if (LessThanByte(num_actuals,4)) {
      SetLocal 4 0;
      if (LessThanByte(num_actuals,3)) {
        SetLocal 3 0;
        if (LessThanByte(num_actuals,2)) {
          SetLocal 2 0;
          if (LessThanByte(num_actuals,1)) {
            SetLocal 1 0;
          }
        }
      }
    }
  }
  Jump: 110913
LocOp 110913:
  TraceOperation 110913 (Jz (Var (Local 1)) (Branch T Dfalse));
  if (IsZero(GetLocal(1))) {
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 0;
    JumpIndirect: (return) return_address_1
  } else {
    TraceOperation 110916 (Jl (Var (Local 2)) (Con 64) (Branch F (Dloc 110932)));
    if (LessThan(GetLocal(2),64)) {
      TraceOperation 110920 (Jg (Var (Local 2)) (Con 0) (Branch F (Dloc 110932)));
      if (GreaterThan(GetLocal(2),0)) {
        TraceOperation 110924 (Get_prop_addr (Var (Local 1)) (Var (Local 2)) (Global 239));
        Let b2 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),12)];
        Let b3 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),12),1)];
        Let b4 = M[Address(MakeHiLo(b2,b3))];
        Let loop_var5 = DeAddress(Offset(Address(MakeHiLo(b2,b3)),Add(Mul(2,Widen(b4)),1)));
        Label 6: {
          Let b7 = M[Address(loop_var5)];
          if (IsZeroByte(b7)) {
            SetByte 007684 0;
            SetByte 007685 0;
          } else {
            if (TestBit(b7,7)) {
              Let b8 = M[Offset(Address(loop_var5),1)];
              if (Equal(GetLocal(2),Widen(BwAnd(b7,63)))) {
                SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var5),2)));
                SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var5),2)));
              } else {
                Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),2),Widen(BwAnd(b8,63))));
                Goto: Label 6
              }
            } else {
              if (TestBit(b7,6)) {
                if (Equal(GetLocal(2),Widen(BwAnd(b7,63)))) {
                  SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var5),1)));
                  SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var5),1)));
                } else {
                  Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),1),2));
                  Goto: Label 6
                }
              } else {
                if (Equal(GetLocal(2),Widen(BwAnd(b7,63)))) {
                  SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var5),1)));
                  SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var5),1)));
                } else {
                  Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),1),1));
                  Goto: Label 6
                }
              }
            }
          }
        }
        TraceOperation 110928 (Push (Var (Global 239)));
        Let b9 = M[007684];
        Let b10 = M[007685];
        PushStack MakeHiLo(b9,b10);
        TraceOperation 110931 Ret_popped;
        PopStack popped11;
        PopFrame;
        PopReturnAddress return_address_12;
        SetResult popped11;
        JumpIndirect: (return) return_address_12
      } else {
        Jump: 110932
      }
    } else {
      Jump: 110932
    }
  }
LocOp 110932:
  TraceOperation 110932 (And (Var (Local 2)) (Con -32768) Sp);
  PushStack And(GetLocal(2),-32768);
  TraceOperation 110938 (Jz (Var Sp) (Branch T (Dloc 111017)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 111017
  } else {
    TraceOperation 110942 (And (Var (Local 2)) (Con 255) Sp);
    PushStack And(GetLocal(2),255);
    TraceOperation 110946 (Loadw (Con 4675) (Var Sp) (Local 5));
    PopStack popped2;
    Let b3 = M[Offset(004675,Mul(2,popped2))];
    Let b4 = M[Offset(Offset(004675,Mul(2,popped2)),1)];
    SetLocal 5 MakeHiLo(b3,b4);
    TraceOperation 110952 (Get_prop_addr (Var (Local 5)) (Con 3) (Global 239));
    Let b5 = M[Offset(Offset(000378,Mul(GetLocal(5),14)),12)];
    Let b6 = M[Offset(Offset(Offset(000378,Mul(GetLocal(5),14)),12),1)];
    Let b7 = M[Address(MakeHiLo(b5,b6))];
    Let loop_var8 = DeAddress(Offset(Address(MakeHiLo(b5,b6)),Add(Mul(2,Widen(b7)),1)));
    Label 9: {
      Let b10 = M[Address(loop_var8)];
      if (IsZeroByte(b10)) {
        SetByte 007684 0;
        SetByte 007685 0;
      } else {
        if (TestBit(b10,7)) {
          Let b11 = M[Offset(Address(loop_var8),1)];
          if (Equal(3,Widen(BwAnd(b10,63)))) {
            SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var8),2)));
            SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var8),2)));
          } else {
            Assign loop_var8 = DeAddress(Offset(Offset(Address(loop_var8),2),Widen(BwAnd(b11,63))));
            Goto: Label 9
          }
        } else {
          if (TestBit(b10,6)) {
            if (Equal(3,Widen(BwAnd(b10,63)))) {
              SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var8),1)));
              SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var8),1)));
            } else {
              Assign loop_var8 = DeAddress(Offset(Offset(Address(loop_var8),1),2));
              Goto: Label 9
            }
          } else {
            if (Equal(3,Widen(BwAnd(b10,63)))) {
              SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var8),1)));
              SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var8),1)));
            } else {
              Assign loop_var8 = DeAddress(Offset(Offset(Address(loop_var8),1),1));
              Goto: Label 9
            }
          }
        }
      }
    }
    TraceOperation 110956 (Push (Var (Global 239)));
    Let b12 = M[007684];
    Let b13 = M[007685];
    PushStack MakeHiLo(b12,b13);
    TraceOperation 110959 (Jz (Var Sp) (Branch T Dfalse));
    PopStack popped14;
    if (IsZero(popped14)) {
      PopFrame;
      PopReturnAddress return_address_15;
      SetResult 0;
      JumpIndirect: (return) return_address_15
    } else {
      TraceOperation 110962 (Call (Floc 026172) [Var (Local 1),Var (Local 5)] Sp);
      PushFrame;
      PushReturnAddress 110962;
      SetLocal 1 GetLocal(1);
      SetLocal 2 GetLocal(5);
      MakeRoutineFrame 6;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      SetLocal 3 0;
      Jump: 026173
    }
  }
LocReturn 110962:
  PushStack call_result;
  TraceOperation 110969 (Jz (Var Sp) (Branch T Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  } else {
    TraceOperation 110972 (And (Var (Local 2)) (Con 32512) Sp);
    PushStack And(GetLocal(2),32512);
    TraceOperation 110978 (Div (Var Sp) (Con 256) (Local 2));
    PopStack popped3;
    SetLocal 2 Div(popped3,256);
    TraceOperation 110984 (Get_prop (Var (Local 5)) (Con 3) (Global 239));
    Let b4 = M[Offset(Offset(000378,Mul(GetLocal(5),14)),12)];
    Let b5 = M[Offset(Offset(Offset(000378,Mul(GetLocal(5),14)),12),1)];
    Let b6 = M[Address(MakeHiLo(b4,b5))];
    Let loop_var7 = DeAddress(Offset(Address(MakeHiLo(b4,b5)),Add(Mul(2,Widen(b6)),1)));
    Label 8: {
      Let b9 = M[Address(loop_var7)];
      if (IsZeroByte(b9)) {
        Let b10 = M[000270];
        Let b11 = M[000271];
        SetByte 007684 b10;
        SetByte 007685 b11;
      } else {
        if (TestBit(b9,7)) {
          Let b12 = M[Offset(Address(loop_var7),1)];
          if (Equal(3,Widen(BwAnd(b9,63)))) {
            if (Equal(Widen(BwAnd(b12,63)),2)) {
              Let b13 = M[Offset(Address(loop_var7),2)];
              Let b14 = M[Offset(Offset(Address(loop_var7),2),1)];
              SetByte 007684 b13;
              SetByte 007685 b14;
            } else {
              Let b15 = M[Offset(Address(loop_var7),2)];
              SetByte 007684 HiByte(Widen(b15));
              SetByte 007685 LoByte(Widen(b15));
            }
          } else {
            Assign loop_var7 = DeAddress(Offset(Offset(Address(loop_var7),2),Widen(BwAnd(b12,63))));
            Goto: Label 8
          }
        } else {
          if (TestBit(b9,6)) {
            if (Equal(3,Widen(BwAnd(b9,63)))) {
              Let b16 = M[Offset(Address(loop_var7),1)];
              Let b17 = M[Offset(Offset(Address(loop_var7),1),1)];
              SetByte 007684 b16;
              SetByte 007685 b17;
            } else {
              Assign loop_var7 = DeAddress(Offset(Offset(Address(loop_var7),1),2));
              Goto: Label 8
            }
          } else {
            if (Equal(3,Widen(BwAnd(b9,63)))) {
              Let b18 = M[Offset(Address(loop_var7),1)];
              SetByte 007684 HiByte(Widen(b18));
              SetByte 007685 LoByte(Widen(b18));
            } else {
              Assign loop_var7 = DeAddress(Offset(Offset(Address(loop_var7),1),1));
              Goto: Label 8
            }
          }
        }
      }
    }
    TraceOperation 110988 (Store (Con 3) (Var (Global 239)));
    Let b19 = M[007684];
    Let b20 = M[007685];
    SetLocal 3 MakeHiLo(b19,b20);
    Jump: 110991
  }
LocOp 110991:
  TraceOperation 110991 (Jg (Var (Local 2)) (Con 0) (Branch F (Dloc 111012)));
  if (GreaterThan(GetLocal(2),0)) {
    TraceOperation 110995 (Dec (Con 2));
    SetLocal 2 Sub(GetLocal(2),1);
    TraceOperation 110997 (Loadb (Var (Local 3)) (Con 2) Sp);
    Let b1 = M[Offset(Address(GetLocal(3)),2)];
    PushStack Widen(b1);
    TraceOperation 111001 (Add (Var (Local 3)) (Var Sp) Sp);
    PopStack popped2;
    PushStack Add(GetLocal(3),popped2);
    TraceOperation 111005 (Add (Var Sp) (Con 3) (Local 3));
    PopStack popped3;
    SetLocal 3 Add(popped3,3);
    TraceOperation 111009 (Jump 110991);
    Jump: 110991
  } else {
    Jump: 111012
  }
LocOp 111012:
  TraceOperation 111012 (Add (Var (Local 3)) (Con 3) Sp);
  PushStack Add(GetLocal(3),3);
  TraceOperation 111016 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 111017:
  TraceOperation 111017 (And (Var (Local 2)) (Con 16384) Sp);
  PushStack And(GetLocal(2),16384);
  TraceOperation 111023 (Jz (Var Sp) (Branch T (Dloc 111136)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 111136
  } else {
    TraceOperation 111027 (And (Var (Local 2)) (Con 255) Sp);
    PushStack And(GetLocal(2),255);
    TraceOperation 111031 (Loadw (Con 4675) (Var Sp) (Local 5));
    PopStack popped2;
    Let b3 = M[Offset(004675,Mul(2,popped2))];
    Let b4 = M[Offset(Offset(004675,Mul(2,popped2)),1)];
    SetLocal 5 MakeHiLo(b3,b4);
    TraceOperation 111037 (And (Var (Local 2)) (Con 16128) Sp);
    PushStack And(GetLocal(2),16128);
    TraceOperation 111043 (Div (Var Sp) (Con 256) (Local 2));
    PopStack popped5;
    SetLocal 2 Div(popped5,256);
    TraceOperation 111049 (Call (Floc 026172) [Var (Local 1),Var (Local 5)] Sp);
    PushFrame;
    PushReturnAddress 111049;
    SetLocal 1 GetLocal(1);
    SetLocal 2 GetLocal(5);
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  }
LocReturn 111049:
  PushStack call_result;
  TraceOperation 111056 (Jz (Var Sp) (Branch T Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  } else {
    TraceOperation 111059 (Loadw (Con 0) (Con 5) (Local 3));
    SetLocal 3 266;
    TraceOperation 111063 (Je [Var (Local 5),Con 2] (Branch F (Dloc 111080)));
    if (Equal(GetLocal(5),2)) {
      TraceOperation 111067 (Mul (Con 2) (Var (Local 2)) Sp);
      PushStack Mul(2,GetLocal(2));
      TraceOperation 111071 (Add (Var (Local 3)) (Var Sp) Sp);
      PopStack popped3;
      PushStack Add(GetLocal(3),popped3);
      TraceOperation 111075 (Sub (Var Sp) (Con 2) Sp);
      PopStack popped4;
      PushStack Sub(popped4,2);
      TraceOperation 111079 Ret_popped;
      PopStack popped5;
      PopFrame;
      PopReturnAddress return_address_6;
      SetResult popped5;
      JumpIndirect: (return) return_address_6
    } else {
      Jump: 111080
    }
  }
LocOp 111080:
  TraceOperation 111080 (Mul (Var (Local 5)) (Con 14) Sp);
  PushStack Mul(GetLocal(5),14);
  TraceOperation 111084 (Add (Var (Local 3)) (Con 124) Sp);
  PushStack Add(GetLocal(3),124);
  TraceOperation 111088 (Add (Var Sp) (Var Sp) Sp);
  PopStack popped1;
  PopStack popped2;
  PushStack Add(popped1,popped2);
  TraceOperation 111092 (Div (Var Sp) (Con 2) Sp);
  PopStack popped3;
  PushStack Div(popped3,2);
  TraceOperation 111096 (Loadw (Con 0) (Var Sp) (Local 3));
  PopStack popped4;
  Let b5 = M[Offset(000000,Mul(2,popped4))];
  Let b6 = M[Offset(Offset(000000,Mul(2,popped4)),1)];
  SetLocal 3 MakeHiLo(b5,b6);
  TraceOperation 111100 (Loadb (Con 0) (Var (Local 3)) Sp);
  Let b7 = M[Offset(000000,GetLocal(3))];
  PushStack Widen(b7);
  TraceOperation 111104 (Mul (Con 2) (Var Sp) Sp);
  PopStack popped8;
  PushStack Mul(2,popped8);
  TraceOperation 111108 (Add (Var (Local 3)) (Var Sp) Sp);
  PopStack popped9;
  PushStack Add(GetLocal(3),popped9);
  TraceOperation 111112 (Add (Var Sp) (Con 1) Sp);
  PopStack popped10;
  PushStack Add(popped10,1);
  TraceOperation 111116 (Call (Floc 112980) [Var Sp,Con -1] Sp);
  PopStack popped11;
  PushFrame;
  PushReturnAddress 111116;
  SetLocal 1 popped11;
  SetLocal 2 -1;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 112981
LocReturn 111116:
  PushStack call_result;
  TraceOperation 111124 (Add (Var Sp) (Con 6) (Local 3));
  PopStack popped1;
  SetLocal 3 Add(popped1,6);
  TraceOperation 111128 (Call (Floc 112980) [Var (Local 3),Var (Local 2)] Sp);
  PushFrame;
  PushReturnAddress 111128;
  SetLocal 1 GetLocal(3);
  SetLocal 2 GetLocal(2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 112981
LocReturn 111128:
  PushStack call_result;
  TraceOperation 111135 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 111136:
  TraceOperation 111136 (Get_prop_addr (Var (Local 1)) (Con 3) (Global 239));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),12)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),12),1)];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let loop_var4 = DeAddress(Offset(Address(MakeHiLo(b1,b2)),Add(Mul(2,Widen(b3)),1)));
  Label 5: {
    Let b6 = M[Address(loop_var4)];
    if (IsZeroByte(b6)) {
      SetByte 007684 0;
      SetByte 007685 0;
    } else {
      if (TestBit(b6,7)) {
        Let b7 = M[Offset(Address(loop_var4),1)];
        if (Equal(3,Widen(BwAnd(b6,63)))) {
          SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var4),2)));
          SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var4),2)));
        } else {
          Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),2),Widen(BwAnd(b7,63))));
          Goto: Label 5
        }
      } else {
        if (TestBit(b6,6)) {
          if (Equal(3,Widen(BwAnd(b6,63)))) {
            SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var4),1)));
            SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var4),1)));
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),2));
            Goto: Label 5
          }
        } else {
          if (Equal(3,Widen(BwAnd(b6,63)))) {
            SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var4),1)));
            SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var4),1)));
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),1));
            Goto: Label 5
          }
        }
      }
    }
  }
  TraceOperation 111140 (Push (Var (Global 239)));
  Let b8 = M[007684];
  Let b9 = M[007685];
  PushStack MakeHiLo(b8,b9);
  TraceOperation 111143 (Jz (Var Sp) (Branch T Dfalse));
  PopStack popped10;
  if (IsZero(popped10)) {
    PopFrame;
    PopReturnAddress return_address_11;
    SetResult 0;
    JumpIndirect: (return) return_address_11
  } else {
    TraceOperation 111146 (Jin (Var (Local 1)) (Con 1) (Branch F (Dloc 111158)));
    Let b12 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),6)];
    Let b13 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),6),1)];
    if (Equal(1,MakeHiLo(b12,b13))) {
      TraceOperation 111150 (Jl (Var (Local 2)) (Con 64) (Branch T Dfalse));
      if (LessThan(GetLocal(2),64)) {
        PopFrame;
        PopReturnAddress return_address_14;
        SetResult 0;
        JumpIndirect: (return) return_address_14
      } else {
        TraceOperation 111154 (Jl (Var (Local 2)) (Con 72) (Branch F Dfalse));
        if (LessThan(GetLocal(2),72)) {
          Jump: 111158
        } else {
          PopFrame;
          PopReturnAddress return_address_15;
          SetResult 0;
          JumpIndirect: (return) return_address_15
        }
      }
    } else {
      Jump: 111158
    }
  }
LocOp 111158:
  TraceOperation 111158 (Je [Var (Global 235),Var (Local 1)] (Branch F (Dloc 111168)));
  Let b1 = M[007676];
  Let b2 = M[007677];
  if (Equal(MakeHiLo(b1,b2),GetLocal(1))) {
    TraceOperation 111162 (Or (Var (Local 2)) (Con -32768) (Local 4));
    SetLocal 4 Or(GetLocal(2),-32768);
    Jump: 111168
  } else {
    Jump: 111168
  }
LocOp 111168:
  TraceOperation 111168 (Get_prop (Var (Local 1)) (Con 3) (Global 239));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),12)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),12),1)];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let loop_var4 = DeAddress(Offset(Address(MakeHiLo(b1,b2)),Add(Mul(2,Widen(b3)),1)));
  Label 5: {
    Let b6 = M[Address(loop_var4)];
    if (IsZeroByte(b6)) {
      Let b7 = M[000270];
      Let b8 = M[000271];
      SetByte 007684 b7;
      SetByte 007685 b8;
    } else {
      if (TestBit(b6,7)) {
        Let b9 = M[Offset(Address(loop_var4),1)];
        if (Equal(3,Widen(BwAnd(b6,63)))) {
          if (Equal(Widen(BwAnd(b9,63)),2)) {
            Let b10 = M[Offset(Address(loop_var4),2)];
            Let b11 = M[Offset(Offset(Address(loop_var4),2),1)];
            SetByte 007684 b10;
            SetByte 007685 b11;
          } else {
            Let b12 = M[Offset(Address(loop_var4),2)];
            SetByte 007684 HiByte(Widen(b12));
            SetByte 007685 LoByte(Widen(b12));
          }
        } else {
          Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),2),Widen(BwAnd(b9,63))));
          Goto: Label 5
        }
      } else {
        if (TestBit(b6,6)) {
          if (Equal(3,Widen(BwAnd(b6,63)))) {
            Let b13 = M[Offset(Address(loop_var4),1)];
            Let b14 = M[Offset(Offset(Address(loop_var4),1),1)];
            SetByte 007684 b13;
            SetByte 007685 b14;
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),2));
            Goto: Label 5
          }
        } else {
          if (Equal(3,Widen(BwAnd(b6,63)))) {
            Let b15 = M[Offset(Address(loop_var4),1)];
            SetByte 007684 HiByte(Widen(b15));
            SetByte 007685 LoByte(Widen(b15));
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),1));
            Goto: Label 5
          }
        }
      }
    }
  }
  TraceOperation 111172 (Store (Con 3) (Var (Global 239)));
  Let b16 = M[007684];
  Let b17 = M[007685];
  SetLocal 3 MakeHiLo(b16,b17);
  Jump: 111175
LocOp 111175:
  TraceOperation 111175 (Loadw (Var (Local 3)) (Con 0) Sp);
  Let b1 = M[Offset(Address(GetLocal(3)),0)];
  Let b2 = M[Offset(Offset(Address(GetLocal(3)),0),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 111179 (Jz (Var Sp) (Branch T (Dloc 111212)));
  PopStack popped3;
  if (IsZero(popped3)) {
    Jump: 111212
  } else {
    TraceOperation 111182 (Loadw (Var (Local 3)) (Con 0) Sp);
    Let b4 = M[Offset(Address(GetLocal(3)),0)];
    Let b5 = M[Offset(Offset(Address(GetLocal(3)),0),1)];
    PushStack MakeHiLo(b4,b5);
    TraceOperation 111186 (Je [Var Sp,Var (Local 2),Var (Local 4)] (Branch F (Dloc 111197)));
    PopStack popped6;
    if (LogOr(Equal(popped6,GetLocal(2)),Equal(popped6,GetLocal(4)))) {
      TraceOperation 111192 (Add (Var (Local 3)) (Con 3) Sp);
      PushStack Add(GetLocal(3),3);
      TraceOperation 111196 Ret_popped;
      PopStack popped7;
      PopFrame;
      PopReturnAddress return_address_8;
      SetResult popped7;
      JumpIndirect: (return) return_address_8
    } else {
      Jump: 111197
    }
  }
LocOp 111197:
  TraceOperation 111197 (Loadb (Var (Local 3)) (Con 2) Sp);
  Let b1 = M[Offset(Address(GetLocal(3)),2)];
  PushStack Widen(b1);
  TraceOperation 111201 (Add (Var (Local 3)) (Var Sp) Sp);
  PopStack popped2;
  PushStack Add(GetLocal(3),popped2);
  TraceOperation 111205 (Add (Var Sp) (Con 3) (Local 3));
  PopStack popped3;
  SetLocal 3 Add(popped3,3);
  TraceOperation 111209 (Jump 111175);
  Jump: 111175
LocOp 111212:
  TraceOperation 111212 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 111216:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 111217
LocOp 111217:
  TraceOperation 111217 (Jl (Var (Local 2)) (Con 64) (Branch F (Dloc 111239)));
  if (LessThan(GetLocal(2),64)) {
    TraceOperation 111221 (Jg (Var (Local 2)) (Con 0) (Branch F (Dloc 111239)));
    if (GreaterThan(GetLocal(2),0)) {
      TraceOperation 111225 (Get_prop_addr (Var (Local 1)) (Var (Local 2)) (Global 239));
      Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),12)];
      Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),12),1)];
      Let b3 = M[Address(MakeHiLo(b1,b2))];
      Let loop_var4 = DeAddress(Offset(Address(MakeHiLo(b1,b2)),Add(Mul(2,Widen(b3)),1)));
      Label 5: {
        Let b6 = M[Address(loop_var4)];
        if (IsZeroByte(b6)) {
          SetByte 007684 0;
          SetByte 007685 0;
        } else {
          if (TestBit(b6,7)) {
            Let b7 = M[Offset(Address(loop_var4),1)];
            if (Equal(GetLocal(2),Widen(BwAnd(b6,63)))) {
              SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var4),2)));
              SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var4),2)));
            } else {
              Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),2),Widen(BwAnd(b7,63))));
              Goto: Label 5
            }
          } else {
            if (TestBit(b6,6)) {
              if (Equal(GetLocal(2),Widen(BwAnd(b6,63)))) {
                SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var4),1)));
                SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var4),1)));
              } else {
                Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),2));
                Goto: Label 5
              }
            } else {
              if (Equal(GetLocal(2),Widen(BwAnd(b6,63)))) {
                SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var4),1)));
                SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var4),1)));
              } else {
                Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),1));
                Goto: Label 5
              }
            }
          }
        }
      }
      TraceOperation 111229 (Jz (Var (Global 239)) (Branch T (Dloc 111235)));
      Let b8 = M[007684];
      Let b9 = M[007685];
      if (IsZero(MakeHiLo(b8,b9))) {
        Jump: 111235
      } else {
        TraceOperation 111232 (Get_prop_len (Var (Global 239)) (Global 239));
        Let b10 = M[007684];
        Let b11 = M[007685];
        if (IsZero(MakeHiLo(b10,b11))) {
          SetByte 007684 0;
          SetByte 007685 0;
        } else {
          Let b12 = M[Offset(Address(MakeHiLo(b10,b11)),-1)];
          if (TestBit(b12,7)) {
            Let b13 = M[Offset(Address(MakeHiLo(b10,b11)),-2)];
            if (TestBit(b13,7)) {
              Let b14 = M[Offset(Offset(Address(MakeHiLo(b10,b11)),-2),1)];
              SetByte 007684 HiByte(Widen(BwAnd(b14,63)));
              SetByte 007685 LoByte(Widen(BwAnd(b14,63)));
            } else {
              if (TestBit(b13,6)) {
                SetByte 007684 0;
                SetByte 007685 2;
              } else {
                SetByte 007684 0;
                SetByte 007685 1;
              }
            }
          } else {
            Let b15 = M[Offset(Address(MakeHiLo(b10,b11)),-1)];
            if (TestBit(b15,7)) {
              Let b16 = M[Offset(Offset(Address(MakeHiLo(b10,b11)),-1),1)];
              SetByte 007684 HiByte(Widen(BwAnd(b16,63)));
              SetByte 007685 LoByte(Widen(BwAnd(b16,63)));
            } else {
              if (TestBit(b15,6)) {
                SetByte 007684 0;
                SetByte 007685 2;
              } else {
                SetByte 007684 0;
                SetByte 007685 1;
              }
            }
          }
        }
        Jump: 111235
      }
    } else {
      Jump: 111239
    }
  } else {
    Jump: 111239
  }
LocOp 111235:
  TraceOperation 111235 (Push (Var (Global 239)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 111238 Ret_popped;
  PopStack popped3;
  PopFrame;
  PopReturnAddress return_address_4;
  SetResult popped3;
  JumpIndirect: (return) return_address_4
LocOp 111239:
  TraceOperation 111239 (Call (Floc 110912) [Var (Local 1),Var (Local 2)] (Local 3));
  PushFrame;
  PushReturnAddress 111239;
  SetLocal 1 GetLocal(1);
  SetLocal 2 GetLocal(2);
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 110913
LocReturn 111239:
  SetLocal 3 call_result;
  TraceOperation 111246 (Jz (Var (Local 3)) (Branch T Dfalse));
  if (IsZero(GetLocal(3))) {
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 0;
    JumpIndirect: (return) return_address_1
  } else {
    TraceOperation 111249 (And (Var (Local 2)) (Con -16384) Sp);
    PushStack And(GetLocal(2),-16384);
    TraceOperation 111255 (Je [Var Sp,Con 16384] (Branch F (Dloc 111304)));
    PopStack popped2;
    if (Equal(popped2,16384)) {
      TraceOperation 111261 (Sub (Var (Local 3)) (Con 1) Sp);
      PushStack Sub(GetLocal(3),1);
      TraceOperation 111265 (Loadb (Var Sp) (Con 0) Sp);
      PopStack popped3;
      Let b4 = M[Offset(Address(popped3),0)];
      PushStack Widen(b4);
      TraceOperation 111269 (And (Var Sp) (Con 192) Sp);
      PopStack popped5;
      PushStack And(popped5,192);
      TraceOperation 111273 (Pull (Con 255));
      PopStack popped6;
      SetByte 007684 HiByte(popped6);
      SetByte 007685 LoByte(popped6);
      TraceOperation 111276 (Je [Var (Global 239),Con 0] (Branch F (Dloc 111281)));
      Let b7 = M[007684];
      Let b8 = M[007685];
      if (Equal(MakeHiLo(b7,b8),0)) {
        TraceOperation 111280 Rtrue;
        PopFrame;
        PopReturnAddress return_address_9;
        SetResult 1;
        JumpIndirect: (return) return_address_9
      } else {
        Jump: 111281
      }
    } else {
      Jump: 111304
    }
  }
LocOp 111281:
  TraceOperation 111281 (Je [Var (Global 239),Con 64] (Branch F (Dloc 111287)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),64)) {
    TraceOperation 111285 (Ret (Con 2));
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 2;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 111287
  }
LocOp 111287:
  TraceOperation 111287 (Je [Var (Global 239),Con 128] (Branch F (Dloc 111304)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),128)) {
    TraceOperation 111291 (Sub (Var (Local 3)) (Con 1) Sp);
    PushStack Sub(GetLocal(3),1);
    TraceOperation 111295 (Loadb (Var Sp) (Con 0) Sp);
    PopStack popped3;
    Let b4 = M[Offset(Address(popped3),0)];
    PushStack Widen(b4);
    TraceOperation 111299 (And (Var Sp) (Con 63) Sp);
    PopStack popped5;
    PushStack And(popped5,63);
    TraceOperation 111303 Ret_popped;
    PopStack popped6;
    PopFrame;
    PopReturnAddress return_address_7;
    SetResult popped6;
    JumpIndirect: (return) return_address_7
  } else {
    Jump: 111304
  }
LocOp 111304:
  TraceOperation 111304 (Sub (Var (Local 3)) (Con 1) Sp);
  PushStack Sub(GetLocal(3),1);
  TraceOperation 111308 (Loadb (Var Sp) (Con 0) Sp);
  PopStack popped1;
  Let b2 = M[Offset(Address(popped1),0)];
  PushStack Widen(b2);
  TraceOperation 111312 Ret_popped;
  PopStack popped3;
  PopFrame;
  PopReturnAddress return_address_4;
  SetResult popped3;
  JumpIndirect: (return) return_address_4
--------------------------------------------------
LocRoutine 111316:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 111317
LocOp 111317:
  TraceOperation 111317 (Jl (Var (Local 1)) (Con 1) (Branch T (Dloc 111331)));
  if (LessThan(GetLocal(1),1)) {
    Jump: 111331
  } else {
    TraceOperation 111321 (Sub (Con 327) (Con 255) Sp);
    PushStack 72;
    TraceOperation 111327 (Jg (Var (Local 1)) (Var Sp) (Branch F (Dloc 111369)));
    PopStack popped1;
    if (GreaterThan(GetLocal(1),popped1)) {
      Jump: 111331
    } else {
      Jump: 111369
    }
  }
LocOp 111331:
  TraceOperation 111331 (Je [Var (Local 2),Con 70,Con 71,Con 69] (Branch F Dfalse));
  if (LogOr(LogOr(Equal(GetLocal(2),70),Equal(GetLocal(2),71)),Equal(GetLocal(2),69))) {
    TraceOperation 111338 (Call (Floc 112868) [Var (Local 1)] Sp);
    PushFrame;
    PushReturnAddress 111338;
    SetLocal 1 GetLocal(1);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 112869
  } else {
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 0;
    JumpIndirect: (return) return_address_1
  }
LocReturn 111338:
  PushStack call_result;
  TraceOperation 111344 (Pull (Con 255));
  PopStack popped1;
  SetByte 007684 HiByte(popped1);
  SetByte 007685 LoByte(popped1);
  TraceOperation 111347 (Je [Var (Global 239),Con 2] (Branch F (Dloc 111358)));
  Let b2 = M[007684];
  Let b3 = M[007685];
  if (Equal(MakeHiLo(b2,b3),2)) {
    TraceOperation 111351 (Je [Var (Local 2),Con 69] (Branch T Dtrue));
    if (Equal(GetLocal(2),69)) {
      PopFrame;
      PopReturnAddress return_address_4;
      SetResult 1;
      JumpIndirect: (return) return_address_4
    } else {
      TraceOperation 111355 (Jump 111368);
      Jump: 111368
    }
  } else {
    Jump: 111358
  }
LocOp 111358:
  TraceOperation 111358 (Je [Var (Global 239),Con 3] (Branch F (Dloc 111368)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),3)) {
    TraceOperation 111362 (Je [Var (Local 2),Con 70,Con 71] (Branch T Dtrue));
    if (LogOr(Equal(GetLocal(2),70),Equal(GetLocal(2),71))) {
      PopFrame;
      PopReturnAddress return_address_3;
      SetResult 1;
      JumpIndirect: (return) return_address_3
    } else {
      Jump: 111368
    }
  } else {
    Jump: 111368
  }
LocOp 111368:
  TraceOperation 111368 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
LocOp 111369:
  TraceOperation 111369 (Jl (Var (Local 2)) (Con 64) (Branch F (Dloc 111384)));
  if (LessThan(GetLocal(2),64)) {
    TraceOperation 111373 (Get_prop_addr (Var (Local 1)) (Var (Local 2)) (Global 239));
    Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),12)];
    Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),12),1)];
    Let b3 = M[Address(MakeHiLo(b1,b2))];
    Let loop_var4 = DeAddress(Offset(Address(MakeHiLo(b1,b2)),Add(Mul(2,Widen(b3)),1)));
    Label 5: {
      Let b6 = M[Address(loop_var4)];
      if (IsZeroByte(b6)) {
        SetByte 007684 0;
        SetByte 007685 0;
      } else {
        if (TestBit(b6,7)) {
          Let b7 = M[Offset(Address(loop_var4),1)];
          if (Equal(GetLocal(2),Widen(BwAnd(b6,63)))) {
            SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var4),2)));
            SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var4),2)));
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),2),Widen(BwAnd(b7,63))));
            Goto: Label 5
          }
        } else {
          if (TestBit(b6,6)) {
            if (Equal(GetLocal(2),Widen(BwAnd(b6,63)))) {
              SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var4),1)));
              SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var4),1)));
            } else {
              Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),2));
              Goto: Label 5
            }
          } else {
            if (Equal(GetLocal(2),Widen(BwAnd(b6,63)))) {
              SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var4),1)));
              SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var4),1)));
            } else {
              Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),1));
              Goto: Label 5
            }
          }
        }
      }
    }
    TraceOperation 111377 (Push (Var (Global 239)));
    Let b8 = M[007684];
    Let b9 = M[007685];
    PushStack MakeHiLo(b8,b9);
    TraceOperation 111380 (Jz (Var Sp) (Branch F Dtrue));
    PopStack popped10;
    if (IsZero(popped10)) {
      TraceOperation 111383 Rfalse;
      PopFrame;
      PopReturnAddress return_address_11;
      SetResult 0;
      JumpIndirect: (return) return_address_11
    } else {
      PopFrame;
      PopReturnAddress return_address_12;
      SetResult 1;
      JumpIndirect: (return) return_address_12
    }
  } else {
    Jump: 111384
  }
LocOp 111384:
  TraceOperation 111384 (Call (Floc 110912) [Var (Local 1),Var (Local 2)] Sp);
  PushFrame;
  PushReturnAddress 111384;
  SetLocal 1 GetLocal(1);
  SetLocal 2 GetLocal(2);
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 110913
LocReturn 111384:
  PushStack call_result;
  TraceOperation 111391 (Jz (Var Sp) (Branch F Dtrue));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 111394 (Jl (Var (Local 2)) (Con 72) (Branch F (Dloc 111402)));
    if (LessThan(GetLocal(2),72)) {
      TraceOperation 111398 (Jin (Var (Local 1)) (Con 1) (Branch T Dtrue));
      Let b2 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),6)];
      Let b3 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),6),1)];
      if (Equal(1,MakeHiLo(b2,b3))) {
        PopFrame;
        PopReturnAddress return_address_4;
        SetResult 1;
        JumpIndirect: (return) return_address_4
      } else {
        Jump: 111402
      }
    } else {
      Jump: 111402
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult 1;
    JumpIndirect: (return) return_address_5
  }
LocOp 111402:
  TraceOperation 111402 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 111404:
  MakeRoutineFrame 9;
  if (LessThanByte(num_actuals,9)) {
    SetLocal 9 0;
    if (LessThanByte(num_actuals,8)) {
      SetLocal 8 0;
      if (LessThanByte(num_actuals,7)) {
        SetLocal 7 0;
        if (LessThanByte(num_actuals,6)) {
          SetLocal 6 0;
          if (LessThanByte(num_actuals,5)) {
            SetLocal 5 0;
            if (LessThanByte(num_actuals,4)) {
              SetLocal 4 0;
              if (LessThanByte(num_actuals,3)) {
                SetLocal 3 0;
                if (LessThanByte(num_actuals,2)) {
                  SetLocal 2 0;
                  if (LessThanByte(num_actuals,1)) {
                    SetLocal 1 0;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  Jump: 111405
LocOp 111405:
  TraceOperation 111405 (Store (Con 5) (Con 0));
  SetLocal 5 0;
  Jump: 111408
LocOp 111408:
  TraceOperation 111408 (Jl (Var (Local 5)) (Con 48) (Branch F (Dloc 111430)));
  if (LessThan(GetLocal(5),48)) {
    TraceOperation 111412 (Test_attr (Var (Local 2)) (Var (Local 5)) (Branch F (Dloc 111422)));
    Let b1 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),Div8(GetLocal(5)))];
    if (TestBit(b1,SevenMinus(LoByte(Mod(GetLocal(5),8))))) {
      TraceOperation 111416 (Set_attr (Var (Local 1)) (Var (Local 5)));
      Let b2 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),Div8(GetLocal(5)))];
      SetByte Offset(Offset(000378,Mul(GetLocal(1),14)),Div8(GetLocal(5))) SetBit(b2,SevenMinus(LoByte(Mod(GetLocal(5),8))));
      TraceOperation 111419 (Jump 111425);
      Jump: 111425
    } else {
      Jump: 111422
    }
  } else {
    Jump: 111430
  }
LocOp 111422:
  TraceOperation 111422 (Clear_attr (Var (Local 1)) (Var (Local 5)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),Div8(GetLocal(5)))];
  SetByte Offset(Offset(000378,Mul(GetLocal(1),14)),Div8(GetLocal(5))) ClearBit(b1,SevenMinus(LoByte(Mod(GetLocal(5),8))));
  Jump: 111425
LocOp 111425:
  TraceOperation 111425 (Inc (Con 5));
  SetLocal 5 Add(GetLocal(5),1);
  TraceOperation 111427 (Jump 111408);
  Jump: 111408
LocOp 111430:
  TraceOperation 111430 (Store (Con 5) (Con 1));
  SetLocal 5 1;
  Jump: 111433
LocOp 111433:
  TraceOperation 111433 (Jl (Var (Local 5)) (Con 64) (Branch F (Dloc 111521)));
  if (LessThan(GetLocal(5),64)) {
    TraceOperation 111438 (Je [Var (Local 5),Con 2,Con 3] (Branch T (Dloc 111516)));
    if (LogOr(Equal(GetLocal(5),2),Equal(GetLocal(5),3))) {
      Jump: 111516
    } else {
      TraceOperation 111445 (Get_prop_addr (Var (Local 1)) (Var (Local 5)) (Global 239));
      Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),12)];
      Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),12),1)];
      Let b3 = M[Address(MakeHiLo(b1,b2))];
      Let loop_var4 = DeAddress(Offset(Address(MakeHiLo(b1,b2)),Add(Mul(2,Widen(b3)),1)));
      Label 5: {
        Let b6 = M[Address(loop_var4)];
        if (IsZeroByte(b6)) {
          SetByte 007684 0;
          SetByte 007685 0;
        } else {
          if (TestBit(b6,7)) {
            Let b7 = M[Offset(Address(loop_var4),1)];
            if (Equal(GetLocal(5),Widen(BwAnd(b6,63)))) {
              SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var4),2)));
              SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var4),2)));
            } else {
              Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),2),Widen(BwAnd(b7,63))));
              Goto: Label 5
            }
          } else {
            if (TestBit(b6,6)) {
              if (Equal(GetLocal(5),Widen(BwAnd(b6,63)))) {
                SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var4),1)));
                SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var4),1)));
              } else {
                Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),2));
                Goto: Label 5
              }
            } else {
              if (Equal(GetLocal(5),Widen(BwAnd(b6,63)))) {
                SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var4),1)));
                SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var4),1)));
              } else {
                Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),1));
                Goto: Label 5
              }
            }
          }
        }
      }
      TraceOperation 111449 (Store (Con 3) (Var (Global 239)));
      Let b8 = M[007684];
      Let b9 = M[007685];
      SetLocal 3 MakeHiLo(b8,b9);
      TraceOperation 111452 (Get_prop_addr (Var (Local 2)) (Var (Local 5)) (Global 239));
      Let b10 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),12)];
      Let b11 = M[Offset(Offset(Offset(000378,Mul(GetLocal(2),14)),12),1)];
      Let b12 = M[Address(MakeHiLo(b10,b11))];
      Let loop_var13 = DeAddress(Offset(Address(MakeHiLo(b10,b11)),Add(Mul(2,Widen(b12)),1)));
      Label 14: {
        Let b15 = M[Address(loop_var13)];
        if (IsZeroByte(b15)) {
          SetByte 007684 0;
          SetByte 007685 0;
        } else {
          if (TestBit(b15,7)) {
            Let b16 = M[Offset(Address(loop_var13),1)];
            if (Equal(GetLocal(5),Widen(BwAnd(b15,63)))) {
              SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var13),2)));
              SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var13),2)));
            } else {
              Assign loop_var13 = DeAddress(Offset(Offset(Address(loop_var13),2),Widen(BwAnd(b16,63))));
              Goto: Label 14
            }
          } else {
            if (TestBit(b15,6)) {
              if (Equal(GetLocal(5),Widen(BwAnd(b15,63)))) {
                SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var13),1)));
                SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var13),1)));
              } else {
                Assign loop_var13 = DeAddress(Offset(Offset(Address(loop_var13),1),2));
                Goto: Label 14
              }
            } else {
              if (Equal(GetLocal(5),Widen(BwAnd(b15,63)))) {
                SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var13),1)));
                SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var13),1)));
              } else {
                Assign loop_var13 = DeAddress(Offset(Offset(Address(loop_var13),1),1));
                Goto: Label 14
              }
            }
          }
        }
      }
      TraceOperation 111456 (Store (Con 4) (Var (Global 239)));
      Let b17 = M[007684];
      Let b18 = M[007685];
      SetLocal 4 MakeHiLo(b17,b18);
      TraceOperation 111459 (Get_prop_addr (Var (Local 1)) (Var (Local 5)) (Global 239));
      Let b19 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),12)];
      Let b20 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),12),1)];
      Let b21 = M[Address(MakeHiLo(b19,b20))];
      Let loop_var22 = DeAddress(Offset(Address(MakeHiLo(b19,b20)),Add(Mul(2,Widen(b21)),1)));
      Label 23: {
        Let b24 = M[Address(loop_var22)];
        if (IsZeroByte(b24)) {
          SetByte 007684 0;
          SetByte 007685 0;
        } else {
          if (TestBit(b24,7)) {
            Let b25 = M[Offset(Address(loop_var22),1)];
            if (Equal(GetLocal(5),Widen(BwAnd(b24,63)))) {
              SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var22),2)));
              SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var22),2)));
            } else {
              Assign loop_var22 = DeAddress(Offset(Offset(Address(loop_var22),2),Widen(BwAnd(b25,63))));
              Goto: Label 23
            }
          } else {
            if (TestBit(b24,6)) {
              if (Equal(GetLocal(5),Widen(BwAnd(b24,63)))) {
                SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var22),1)));
                SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var22),1)));
              } else {
                Assign loop_var22 = DeAddress(Offset(Offset(Address(loop_var22),1),2));
                Goto: Label 23
              }
            } else {
              if (Equal(GetLocal(5),Widen(BwAnd(b24,63)))) {
                SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var22),1)));
                SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var22),1)));
              } else {
                Assign loop_var22 = DeAddress(Offset(Offset(Address(loop_var22),1),1));
                Goto: Label 23
              }
            }
          }
        }
      }
      TraceOperation 111463 (Jz (Var (Global 239)) (Branch T (Dloc 111469)));
      Let b26 = M[007684];
      Let b27 = M[007685];
      if (IsZero(MakeHiLo(b26,b27))) {
        Jump: 111469
      } else {
        TraceOperation 111466 (Get_prop_len (Var (Global 239)) (Global 239));
        Let b28 = M[007684];
        Let b29 = M[007685];
        if (IsZero(MakeHiLo(b28,b29))) {
          SetByte 007684 0;
          SetByte 007685 0;
        } else {
          Let b30 = M[Offset(Address(MakeHiLo(b28,b29)),-1)];
          if (TestBit(b30,7)) {
            Let b31 = M[Offset(Address(MakeHiLo(b28,b29)),-2)];
            if (TestBit(b31,7)) {
              Let b32 = M[Offset(Offset(Address(MakeHiLo(b28,b29)),-2),1)];
              SetByte 007684 HiByte(Widen(BwAnd(b32,63)));
              SetByte 007685 LoByte(Widen(BwAnd(b32,63)));
            } else {
              if (TestBit(b31,6)) {
                SetByte 007684 0;
                SetByte 007685 2;
              } else {
                SetByte 007684 0;
                SetByte 007685 1;
              }
            }
          } else {
            Let b33 = M[Offset(Address(MakeHiLo(b28,b29)),-1)];
            if (TestBit(b33,7)) {
              Let b34 = M[Offset(Offset(Address(MakeHiLo(b28,b29)),-1),1)];
              SetByte 007684 HiByte(Widen(BwAnd(b34,63)));
              SetByte 007685 LoByte(Widen(BwAnd(b34,63)));
            } else {
              if (TestBit(b33,6)) {
                SetByte 007684 0;
                SetByte 007685 2;
              } else {
                SetByte 007684 0;
                SetByte 007685 1;
              }
            }
          }
        }
        Jump: 111469
      }
    }
  } else {
    Jump: 111521
  }
LocOp 111469:
  TraceOperation 111469 (Store (Con 8) (Var (Global 239)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  SetLocal 8 MakeHiLo(b1,b2);
  TraceOperation 111472 (Jz (Var (Local 3)) (Branch T (Dloc 111516)));
  if (IsZero(GetLocal(3))) {
    Jump: 111516
  } else {
    TraceOperation 111475 (Jz (Var (Local 4)) (Branch T (Dloc 111516)));
    if (IsZero(GetLocal(4))) {
      Jump: 111516
    } else {
      TraceOperation 111478 (Get_prop_addr (Var (Local 2)) (Var (Local 5)) (Global 239));
      Let b3 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),12)];
      Let b4 = M[Offset(Offset(Offset(000378,Mul(GetLocal(2),14)),12),1)];
      Let b5 = M[Address(MakeHiLo(b3,b4))];
      Let loop_var6 = DeAddress(Offset(Address(MakeHiLo(b3,b4)),Add(Mul(2,Widen(b5)),1)));
      Label 7: {
        Let b8 = M[Address(loop_var6)];
        if (IsZeroByte(b8)) {
          SetByte 007684 0;
          SetByte 007685 0;
        } else {
          if (TestBit(b8,7)) {
            Let b9 = M[Offset(Address(loop_var6),1)];
            if (Equal(GetLocal(5),Widen(BwAnd(b8,63)))) {
              SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var6),2)));
              SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var6),2)));
            } else {
              Assign loop_var6 = DeAddress(Offset(Offset(Address(loop_var6),2),Widen(BwAnd(b9,63))));
              Goto: Label 7
            }
          } else {
            if (TestBit(b8,6)) {
              if (Equal(GetLocal(5),Widen(BwAnd(b8,63)))) {
                SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var6),1)));
                SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var6),1)));
              } else {
                Assign loop_var6 = DeAddress(Offset(Offset(Address(loop_var6),1),2));
                Goto: Label 7
              }
            } else {
              if (Equal(GetLocal(5),Widen(BwAnd(b8,63)))) {
                SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var6),1)));
                SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var6),1)));
              } else {
                Assign loop_var6 = DeAddress(Offset(Offset(Address(loop_var6),1),1));
                Goto: Label 7
              }
            }
          }
        }
      }
      TraceOperation 111482 (Jz (Var (Global 239)) (Branch T (Dloc 111488)));
      Let b10 = M[007684];
      Let b11 = M[007685];
      if (IsZero(MakeHiLo(b10,b11))) {
        Jump: 111488
      } else {
        TraceOperation 111485 (Get_prop_len (Var (Global 239)) (Global 239));
        Let b12 = M[007684];
        Let b13 = M[007685];
        if (IsZero(MakeHiLo(b12,b13))) {
          SetByte 007684 0;
          SetByte 007685 0;
        } else {
          Let b14 = M[Offset(Address(MakeHiLo(b12,b13)),-1)];
          if (TestBit(b14,7)) {
            Let b15 = M[Offset(Address(MakeHiLo(b12,b13)),-2)];
            if (TestBit(b15,7)) {
              Let b16 = M[Offset(Offset(Address(MakeHiLo(b12,b13)),-2),1)];
              SetByte 007684 HiByte(Widen(BwAnd(b16,63)));
              SetByte 007685 LoByte(Widen(BwAnd(b16,63)));
            } else {
              if (TestBit(b15,6)) {
                SetByte 007684 0;
                SetByte 007685 2;
              } else {
                SetByte 007684 0;
                SetByte 007685 1;
              }
            }
          } else {
            Let b17 = M[Offset(Address(MakeHiLo(b12,b13)),-1)];
            if (TestBit(b17,7)) {
              Let b18 = M[Offset(Offset(Address(MakeHiLo(b12,b13)),-1),1)];
              SetByte 007684 HiByte(Widen(BwAnd(b18,63)));
              SetByte 007685 LoByte(Widen(BwAnd(b18,63)));
            } else {
              if (TestBit(b17,6)) {
                SetByte 007684 0;
                SetByte 007685 2;
              } else {
                SetByte 007684 0;
                SetByte 007685 1;
              }
            }
          }
        }
        Jump: 111488
      }
    }
  }
LocOp 111488:
  TraceOperation 111488 (Push (Var (Global 239)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 111491 (Je [Var (Local 8),Var Sp] (Branch F (Dloc 111516)));
  PopStack popped3;
  if (Equal(GetLocal(8),popped3)) {
    TraceOperation 111495 (Store (Con 6) (Con 0));
    SetLocal 6 0;
    Jump: 111498
  } else {
    Jump: 111516
  }
LocOp 111498:
  TraceOperation 111498 (Jl (Var (Local 6)) (Var (Local 8)) (Branch F (Dloc 111516)));
  if (LessThan(GetLocal(6),GetLocal(8))) {
    TraceOperation 111502 (Loadb (Var (Local 4)) (Var (Local 6)) Sp);
    Let b1 = M[Offset(Address(GetLocal(4)),GetLocal(6))];
    PushStack Widen(b1);
    TraceOperation 111506 (Storeb (Var (Local 3)) (Var (Local 6)) (Var Sp));
    PopStack popped2;
    SetByte Offset(Address(GetLocal(3)),GetLocal(6)) LoByte(popped2);
    TraceOperation 111511 (Inc (Con 6));
    SetLocal 6 Add(GetLocal(6),1);
    TraceOperation 111513 (Jump 111498);
    Jump: 111498
  } else {
    Jump: 111516
  }
LocOp 111516:
  TraceOperation 111516 (Inc (Con 5));
  SetLocal 5 Add(GetLocal(5),1);
  TraceOperation 111518 (Jump 111433);
  Jump: 111433
LocOp 111521:
  TraceOperation 111521 (Get_prop_addr (Var (Local 1)) (Con 3) (Global 239));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),12)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),12),1)];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let loop_var4 = DeAddress(Offset(Address(MakeHiLo(b1,b2)),Add(Mul(2,Widen(b3)),1)));
  Label 5: {
    Let b6 = M[Address(loop_var4)];
    if (IsZeroByte(b6)) {
      SetByte 007684 0;
      SetByte 007685 0;
    } else {
      if (TestBit(b6,7)) {
        Let b7 = M[Offset(Address(loop_var4),1)];
        if (Equal(3,Widen(BwAnd(b6,63)))) {
          SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var4),2)));
          SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var4),2)));
        } else {
          Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),2),Widen(BwAnd(b7,63))));
          Goto: Label 5
        }
      } else {
        if (TestBit(b6,6)) {
          if (Equal(3,Widen(BwAnd(b6,63)))) {
            SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var4),1)));
            SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var4),1)));
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),2));
            Goto: Label 5
          }
        } else {
          if (Equal(3,Widen(BwAnd(b6,63)))) {
            SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var4),1)));
            SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var4),1)));
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),1));
            Goto: Label 5
          }
        }
      }
    }
  }
  TraceOperation 111525 (Push (Var (Global 239)));
  Let b8 = M[007684];
  Let b9 = M[007685];
  PushStack MakeHiLo(b8,b9);
  TraceOperation 111528 (Jz (Var Sp) (Branch T (Dloc 111541)));
  PopStack popped10;
  if (IsZero(popped10)) {
    Jump: 111541
  } else {
    TraceOperation 111531 (Get_prop_addr (Var (Local 2)) (Con 3) (Global 239));
    Let b11 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),12)];
    Let b12 = M[Offset(Offset(Offset(000378,Mul(GetLocal(2),14)),12),1)];
    Let b13 = M[Address(MakeHiLo(b11,b12))];
    Let loop_var14 = DeAddress(Offset(Address(MakeHiLo(b11,b12)),Add(Mul(2,Widen(b13)),1)));
    Label 15: {
      Let b16 = M[Address(loop_var14)];
      if (IsZeroByte(b16)) {
        SetByte 007684 0;
        SetByte 007685 0;
      } else {
        if (TestBit(b16,7)) {
          Let b17 = M[Offset(Address(loop_var14),1)];
          if (Equal(3,Widen(BwAnd(b16,63)))) {
            SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var14),2)));
            SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var14),2)));
          } else {
            Assign loop_var14 = DeAddress(Offset(Offset(Address(loop_var14),2),Widen(BwAnd(b17,63))));
            Goto: Label 15
          }
        } else {
          if (TestBit(b16,6)) {
            if (Equal(3,Widen(BwAnd(b16,63)))) {
              SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var14),1)));
              SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var14),1)));
            } else {
              Assign loop_var14 = DeAddress(Offset(Offset(Address(loop_var14),1),2));
              Goto: Label 15
            }
          } else {
            if (Equal(3,Widen(BwAnd(b16,63)))) {
              SetByte 007684 HiByte(DeAddress(Offset(Address(loop_var14),1)));
              SetByte 007685 LoByte(DeAddress(Offset(Address(loop_var14),1)));
            } else {
              Assign loop_var14 = DeAddress(Offset(Offset(Address(loop_var14),1),1));
              Goto: Label 15
            }
          }
        }
      }
    }
    TraceOperation 111535 (Push (Var (Global 239)));
    Let b18 = M[007684];
    Let b19 = M[007685];
    PushStack MakeHiLo(b18,b19);
    TraceOperation 111538 (Jz (Var Sp) (Branch F (Dloc 111542)));
    PopStack popped20;
    if (IsZero(popped20)) {
      Jump: 111541
    } else {
      Jump: 111542
    }
  }
LocOp 111541:
  TraceOperation 111541 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 111542:
  TraceOperation 111542 (Get_prop (Var (Local 2)) (Con 3) (Global 239));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),12)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(2),14)),12),1)];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let loop_var4 = DeAddress(Offset(Address(MakeHiLo(b1,b2)),Add(Mul(2,Widen(b3)),1)));
  Label 5: {
    Let b6 = M[Address(loop_var4)];
    if (IsZeroByte(b6)) {
      Let b7 = M[000270];
      Let b8 = M[000271];
      SetByte 007684 b7;
      SetByte 007685 b8;
    } else {
      if (TestBit(b6,7)) {
        Let b9 = M[Offset(Address(loop_var4),1)];
        if (Equal(3,Widen(BwAnd(b6,63)))) {
          if (Equal(Widen(BwAnd(b9,63)),2)) {
            Let b10 = M[Offset(Address(loop_var4),2)];
            Let b11 = M[Offset(Offset(Address(loop_var4),2),1)];
            SetByte 007684 b10;
            SetByte 007685 b11;
          } else {
            Let b12 = M[Offset(Address(loop_var4),2)];
            SetByte 007684 HiByte(Widen(b12));
            SetByte 007685 LoByte(Widen(b12));
          }
        } else {
          Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),2),Widen(BwAnd(b9,63))));
          Goto: Label 5
        }
      } else {
        if (TestBit(b6,6)) {
          if (Equal(3,Widen(BwAnd(b6,63)))) {
            Let b13 = M[Offset(Address(loop_var4),1)];
            Let b14 = M[Offset(Offset(Address(loop_var4),1),1)];
            SetByte 007684 b13;
            SetByte 007685 b14;
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),2));
            Goto: Label 5
          }
        } else {
          if (Equal(3,Widen(BwAnd(b6,63)))) {
            Let b15 = M[Offset(Address(loop_var4),1)];
            SetByte 007684 HiByte(Widen(b15));
            SetByte 007685 LoByte(Widen(b15));
          } else {
            Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),1));
            Goto: Label 5
          }
        }
      }
    }
  }
  TraceOperation 111546 (Store (Con 5) (Var (Global 239)));
  Let b16 = M[007684];
  Let b17 = M[007685];
  SetLocal 5 MakeHiLo(b16,b17);
  TraceOperation 111549 (Jump 111560);
  Jump: 111560
--------------------------------------------------
LocRoutine 111652:
  MakeRoutineFrame 0;
  Jump: 111653
LocOp 111653:
  TraceOperation 111653 (Inc (Con 7));
  SetLocal 7 Add(GetLocal(7),1);
  TraceOperation 111655 (Jump 111636);
  Jump: 111636
--------------------------------------------------
LocRoutine 111668:
  MakeRoutineFrame 6;
  if (LessThanByte(num_actuals,6)) {
    SetLocal 6 0;
    if (LessThanByte(num_actuals,5)) {
      SetLocal 5 0;
      if (LessThanByte(num_actuals,4)) {
        SetLocal 4 0;
        if (LessThanByte(num_actuals,3)) {
          SetLocal 3 0;
          if (LessThanByte(num_actuals,2)) {
            SetLocal 2 0;
            if (LessThanByte(num_actuals,1)) {
              SetLocal 1 0;
            }
          }
        }
      }
    }
  }
  Jump: 111669
LocOp 111669:
  TraceOperation 111669 (Print "\n[** Programming error: ");
  GamePrint "\n[** Programming error: ";
  TraceOperation 111694 (Jl (Var (Local 1)) (Con 0) (Branch F (Dloc 111701)));
  if (LessThan(GetLocal(1),0)) {
    TraceOperation 111698 (Jump 112674);
    Jump: 112674
  } else {
    Jump: 111701
  }
LocOp 111701:
  TraceOperation 111701 (Je [Var (Local 1),Con 1] (Branch F (Dloc 111717)));
  if (Equal(GetLocal(1),1)) {
    TraceOperation 111705 (Print "class ");
    GamePrint "class ";
    TraceOperation 111710 (Print_obj (Var (Local 2)));
    Let b1 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),12)];
    Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(2),14)),12),1)];
    Let b3 = M[Address(MakeHiLo(b1,b2))];
    Let ite_res4 = Ite((IsZeroByte(b3),"",GetText(Offset(Address(MakeHiLo(b1,b2)),1))));
    GamePrint ite_res4;
    TraceOperation 111712 (Print_paddr (Con -31231));
    Note "<static Gettext address>";
    GamePrint ": 'create' can have 0 to 3 parameters only **]";
    TraceOperation 111715 New_line;
    GamePrint "\n";
    TraceOperation 111716 Rtrue;
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult 1;
    JumpIndirect: (return) return_address_5
  } else {
    Jump: 111717
  }
LocOp 111717:
  TraceOperation 111717 (Je [Var (Local 1),Con 32] (Branch F (Dloc 111734)));
  if (Equal(GetLocal(1),32)) {
    TraceOperation 111721 (Print_paddr (Con -31221));
    Note "<static Gettext address>";
    GamePrint "objectloop broken because the object ";
    TraceOperation 111724 (CallN (Floc 082048) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 111724;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 082049
  } else {
    Jump: 111734
  }
LocReturn 111724:
  TraceOperation 111729 (Print_paddr (Con -31214));
  Note "<static Gettext address>";
  GamePrint " was moved while the loop passed through it **]";
  TraceOperation 111732 New_line;
  GamePrint "\n";
  TraceOperation 111733 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 111734:
  TraceOperation 111734 (Je [Var (Local 1),Con 33] (Branch F (Dloc 111763)));
  if (Equal(GetLocal(1),33)) {
    TraceOperation 111738 (Print "tried to print (char) ");
    GamePrint "tried to print (char) ";
    TraceOperation 111755 (Print_num (Var (Local 2)));
    GamePrint ShowNumber(GetLocal(2));
    TraceOperation 111758 (Print_paddr (Con -31204));
    Note "<static Gettext address>";
    GamePrint ", which is not a valid ZSCII character code for output **]";
    TraceOperation 111761 New_line;
    GamePrint "\n";
    TraceOperation 111762 Rtrue;
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 111763
  }
LocOp 111763:
  TraceOperation 111763 (Je [Var (Local 1),Con 34] (Branch F (Dloc 111797)));
  if (Equal(GetLocal(1),34)) {
    TraceOperation 111767 (Print_paddr (Con -31191));
    Note "<static Gettext address>";
    GamePrint "tried to print (address) on something not the ";
    TraceOperation 111770 (Print_ret "byte address of a string **]");
    GamePrint "byte address of a string **]\n";
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 111797
  }
LocOp 111797:
  TraceOperation 111797 (Je [Var (Local 1),Con 35] (Branch F (Dloc 111819)));
  if (Equal(GetLocal(1),35)) {
    TraceOperation 111801 (Print_paddr (Con -31183));
    Note "<static Gettext address>";
    GamePrint "tried to print (string) on something not a ";
    TraceOperation 111804 (Print_ret "string **]");
    GamePrint "string **]\n";
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 111819
  }
LocOp 111819:
  TraceOperation 111819 (Je [Var (Local 1),Con 36] (Branch F (Dloc 111847)));
  if (Equal(GetLocal(1),36)) {
    TraceOperation 111823 (Print_paddr (Con -31175));
    Note "<static Gettext address>";
    GamePrint "tried to print (object) on something not an ";
    TraceOperation 111826 (Print_ret "object or class **]");
    GamePrint "object or class **]\n";
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 111847
  }
LocOp 111847:
  TraceOperation 111847 (Jl (Var (Local 1)) (Con 32) (Branch F (Dloc 112674)));
  if (LessThan(GetLocal(1),32)) {
    TraceOperation 111852 (Print "tried to ");
    GamePrint "tried to ";
    TraceOperation 111859 (Jl (Var (Local 1)) (Con 28) (Branch T (Dloc 112068)));
    if (LessThan(GetLocal(1),28)) {
      Jump: 112068
    } else {
      TraceOperation 111864 (Je [Var (Local 1),Con 28,Con 29] (Branch F (Dloc 111882)));
      if (LogOr(Equal(GetLocal(1),28),Equal(GetLocal(1),29))) {
        TraceOperation 111870 (Print "read from ");
        GamePrint "read from ";
        TraceOperation 111879 (Jump 111889);
        Jump: 111889
      } else {
        Jump: 111882
      }
    }
  } else {
    Jump: 112674
  }
LocOp 111882:
  TraceOperation 111882 (Print "write to ");
  GamePrint "write to ";
  Jump: 111889
LocOp 111889:
  TraceOperation 111889 (Je [Var (Local 1),Con 29,Con 31] (Branch F (Dloc 111898)));
  if (LogOr(Equal(GetLocal(1),29),Equal(GetLocal(1),31))) {
    TraceOperation 111895 (Print "-");
    GamePrint "-";
    Jump: 111898
  } else {
    Jump: 111898
  }
LocOp 111898:
  TraceOperation 111898 (Print "->");
  GamePrint "->";
  TraceOperation 111903 (Print_num (Var (Local 2)));
  GamePrint ShowNumber(GetLocal(2));
  TraceOperation 111906 (Print " in the");
  GamePrint " in the";
  TraceOperation 111913 (And (Var (Local 4)) (Con 7) Sp);
  PushStack And(GetLocal(4),7);
  TraceOperation 111917 (Pull (Con 255));
  PopStack popped1;
  SetByte 007684 HiByte(popped1);
  SetByte 007685 LoByte(popped1);
  TraceOperation 111920 (Je [Var (Global 239),Con 0,Con 1] (Branch F (Dloc 111932)));
  Let b2 = M[007684];
  Let b3 = M[007685];
  if (LogOr(Equal(MakeHiLo(b2,b3),0),Equal(MakeHiLo(b2,b3),1))) {
    TraceOperation 111926 (Store (Con 6) (Con 0));
    SetLocal 6 0;
    TraceOperation 111929 (Jump 111978);
    Jump: 111978
  } else {
    Jump: 111932
  }
LocOp 111932:
  TraceOperation 111932 (Je [Var (Global 239),Con 2] (Branch F (Dloc 111949)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),2)) {
    TraceOperation 111936 (Print " string");
    GamePrint " string";
    TraceOperation 111943 (Store (Con 6) (Con 1));
    SetLocal 6 1;
    TraceOperation 111946 (Jump 111978);
    Jump: 111978
  } else {
    Jump: 111949
  }
LocOp 111949:
  TraceOperation 111949 (Je [Var (Global 239),Con 3] (Branch F (Dloc 111964)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),3)) {
    TraceOperation 111953 (Print " table");
    GamePrint " table";
    TraceOperation 111958 (Store (Con 6) (Con 1));
    SetLocal 6 1;
    TraceOperation 111961 (Jump 111978);
    Jump: 111978
  } else {
    Jump: 111964
  }
LocOp 111964:
  TraceOperation 111964 (Je [Var (Global 239),Con 4] (Branch F (Dloc 111978)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),4)) {
    TraceOperation 111968 (Print " buffer");
    GamePrint " buffer";
    TraceOperation 111975 (Store (Con 6) (Con 2));
    SetLocal 6 2;
    Jump: 111978
  } else {
    Jump: 111978
  }
LocOp 111978:
  TraceOperation 111978 (And (Var (Local 4)) (Con 16) Sp);
  PushStack And(GetLocal(4),16);
  TraceOperation 111982 (Jz (Var Sp) (Branch T (Dloc 111994)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 111994
  } else {
    TraceOperation 111985 (Print " (->)");
    GamePrint " (->)";
    Jump: 111994
  }
LocOp 111994:
  TraceOperation 111994 (And (Var (Local 4)) (Con 8) Sp);
  PushStack And(GetLocal(4),8);
  TraceOperation 111998 (Jz (Var Sp) (Branch T (Dloc 112012)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 112012
  } else {
    TraceOperation 112001 (Print " (-->)");
    GamePrint " (-->)";
    Jump: 112012
  }
LocOp 112012:
  TraceOperation 112012 (Print " array \"");
  GamePrint " array \"";
  TraceOperation 112019 (Loadw (Con 5167) (Var (Local 5)) Sp);
  Let b1 = M[Offset(005167,Mul(2,GetLocal(5)))];
  Let b2 = M[Offset(Offset(005167,Mul(2,GetLocal(5))),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 112025 (Print_paddr (Var Sp));
  PopStack popped3;
  GamePrint GetText(PackedAddress Z5(popped3));
  TraceOperation 112027 (Print "\", which has entries ");
  GamePrint "\", which has entries ";
  TraceOperation 112044 (Print_num (Var (Local 6)));
  GamePrint ShowNumber(GetLocal(6));
  TraceOperation 112047 (Print " up to ");
  GamePrint " up to ";
  TraceOperation 112054 (Print_num (Var (Local 3)));
  GamePrint ShowNumber(GetLocal(3));
  TraceOperation 112057 (Print_ret " **]");
  GamePrint " **]\n";
  PopFrame;
  PopReturnAddress return_address_4;
  SetResult 1;
  JumpIndirect: (return) return_address_4
LocOp 112068:
  TraceOperation 112068 (Jl (Var (Local 1)) (Con 24) (Branch T (Dloc 112157)));
  if (LessThan(GetLocal(1),24)) {
    Jump: 112157
  } else {
    TraceOperation 112073 (Jg (Var (Local 1)) (Con 27) (Branch T (Dloc 112157)));
    if (GreaterThan(GetLocal(1),27)) {
      Jump: 112157
    } else {
      TraceOperation 112078 (Jg (Var (Local 1)) (Con 25) (Branch T (Dloc 112090)));
      if (GreaterThan(GetLocal(1),25)) {
        Jump: 112090
      } else {
        TraceOperation 112082 (Print "read");
        GamePrint "read";
        TraceOperation 112087 (Jump 112095);
        Jump: 112095
      }
    }
  }
LocOp 112090:
  TraceOperation 112090 (Print "write");
  GamePrint "write";
  Jump: 112095
LocOp 112095:
  TraceOperation 112095 (Print " outside memory using ");
  GamePrint " outside memory using ";
  TraceOperation 112112 (Store (Con 255) (Var (Local 1)));
  SetByte 007684 HiByte(GetLocal(1));
  SetByte 007685 LoByte(GetLocal(1));
  TraceOperation 112115 (Je [Var (Global 239),Con 24,Con 26] (Branch F (Dloc 112136)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (LogOr(Equal(MakeHiLo(b1,b2),24),Equal(MakeHiLo(b1,b2),26))) {
    TraceOperation 112121 (Print_ret "-> **]");
    GamePrint "-> **]\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 112136
  }
LocOp 112136:
  TraceOperation 112136 (Je [Var (Global 239),Con 25,Con 27] (Branch F (Dloc 112157)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (LogOr(Equal(MakeHiLo(b1,b2),25),Equal(MakeHiLo(b1,b2),27))) {
    TraceOperation 112142 (Print_ret "--> **]");
    GamePrint "--> **]\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 112157
  }
LocOp 112157:
  TraceOperation 112157 (Jl (Var (Local 1)) (Con 4) (Branch F (Dloc 112169)));
  if (LessThan(GetLocal(1),4)) {
    TraceOperation 112161 (Print "test ");
    GamePrint "test ";
    TraceOperation 112166 (Jump 112196);
    Jump: 112196
  } else {
    Jump: 112169
  }
LocOp 112169:
  TraceOperation 112169 (Jl (Var (Local 1)) (Con 12) (Branch T (Dloc 112177)));
  if (LessThan(GetLocal(1),12)) {
    Jump: 112177
  } else {
    TraceOperation 112173 (Jg (Var (Local 1)) (Con 20) (Branch F (Dloc 112187)));
    if (GreaterThan(GetLocal(1),20)) {
      Jump: 112177
    } else {
      Jump: 112187
    }
  }
LocOp 112177:
  TraceOperation 112177 (Print "find the ");
  GamePrint "find the ";
  TraceOperation 112184 (Jump 112196);
  Jump: 112196
LocOp 112187:
  TraceOperation 112187 (Jl (Var (Local 1)) (Con 14) (Branch F (Dloc 112196)));
  if (LessThan(GetLocal(1),14)) {
    TraceOperation 112191 (Print "use ");
    GamePrint "use ";
    Jump: 112196
  } else {
    Jump: 112196
  }
LocOp 112196:
  TraceOperation 112196 (Je [Var (Local 1),Con 20] (Branch F (Dloc 112219)));
  if (Equal(GetLocal(1),20)) {
    TraceOperation 112200 (Print_ret "divide by zero **]");
    GamePrint "divide by zero **]\n";
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 1;
    JumpIndirect: (return) return_address_1
  } else {
    Jump: 112219
  }
LocOp 112219:
  TraceOperation 112219 (Print "\"");
  GamePrint "\"";
  TraceOperation 112222 (Store (Con 255) (Var (Local 1)));
  SetByte 007684 HiByte(GetLocal(1));
  SetByte 007685 LoByte(GetLocal(1));
  TraceOperation 112225 (Je [Var (Global 239),Con 2] (Branch F (Dloc 112243)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),2)) {
    TraceOperation 112229 (Print "in\" or \"notin");
    GamePrint "in\" or \"notin";
    TraceOperation 112240 (Jump 112653);
    Jump: 112653
  } else {
    Jump: 112243
  }
LocOp 112243:
  TraceOperation 112243 (Je [Var (Global 239),Con 3] (Branch F (Dloc 112263)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),3)) {
    TraceOperation 112247 (Print "has\" or \"hasnt");
    GamePrint "has\" or \"hasnt";
    TraceOperation 112260 (Jump 112653);
    Jump: 112653
  } else {
    Jump: 112263
  }
LocOp 112263:
  TraceOperation 112263 (Je [Var (Global 239),Con 4] (Branch F (Dloc 112275)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),4)) {
    TraceOperation 112267 (Print "parent");
    GamePrint "parent";
    TraceOperation 112272 (Jump 112653);
    Jump: 112653
  } else {
    Jump: 112275
  }
LocOp 112275:
  TraceOperation 112275 (Je [Var (Global 239),Con 5] (Branch F (Dloc 112287)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),5)) {
    TraceOperation 112279 (Print "eldest");
    GamePrint "eldest";
    TraceOperation 112284 (Jump 112653);
    Jump: 112653
  } else {
    Jump: 112287
  }
LocOp 112287:
  TraceOperation 112287 (Je [Var (Global 239),Con 6] (Branch F (Dloc 112299)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),6)) {
    TraceOperation 112291 (Print "child");
    GamePrint "child";
    TraceOperation 112296 (Jump 112653);
    Jump: 112653
  } else {
    Jump: 112299
  }
LocOp 112299:
  TraceOperation 112299 (Je [Var (Global 239),Con 7] (Branch F (Dloc 112313)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),7)) {
    TraceOperation 112303 (Print "younger");
    GamePrint "younger";
    TraceOperation 112310 (Jump 112653);
    Jump: 112653
  } else {
    Jump: 112313
  }
LocOp 112313:
  TraceOperation 112313 (Je [Var (Global 239),Con 8] (Branch F (Dloc 112327)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),8)) {
    TraceOperation 112317 (Print "sibling");
    GamePrint "sibling";
    TraceOperation 112324 (Jump 112653);
    Jump: 112653
  } else {
    Jump: 112327
  }
LocOp 112327:
  TraceOperation 112327 (Je [Var (Global 239),Con 9] (Branch F (Dloc 112341)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),9)) {
    TraceOperation 112331 (Print "children");
    GamePrint "children";
    TraceOperation 112338 (Jump 112653);
    Jump: 112653
  } else {
    Jump: 112341
  }
LocOp 112341:
  TraceOperation 112341 (Je [Var (Global 239),Con 10] (Branch F (Dloc 112355)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),10)) {
    TraceOperation 112345 (Print "youngest");
    GamePrint "youngest";
    TraceOperation 112352 (Jump 112653);
    Jump: 112653
  } else {
    Jump: 112355
  }
LocOp 112355:
  TraceOperation 112355 (Je [Var (Global 239),Con 11] (Branch F (Dloc 112367)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),11)) {
    TraceOperation 112359 (Print "elder");
    GamePrint "elder";
    TraceOperation 112364 (Jump 112653);
    Jump: 112653
  } else {
    Jump: 112367
  }
LocOp 112367:
  TraceOperation 112367 (Je [Var (Global 239),Con 12] (Branch F (Dloc 112383)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),12)) {
    TraceOperation 112371 (Print "objectloop");
    GamePrint "objectloop";
    TraceOperation 112380 (Jump 112653);
    Jump: 112653
  } else {
    Jump: 112383
  }
LocOp 112383:
  TraceOperation 112383 (Je [Var (Global 239),Con 13] (Branch F (Dloc 112411)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),13)) {
    TraceOperation 112387 (Print "}\" at end of \"objectloop");
    GamePrint "}\" at end of \"objectloop";
    TraceOperation 112408 (Jump 112653);
    Jump: 112653
  } else {
    Jump: 112411
  }
LocOp 112411:
  TraceOperation 112411 (Je [Var (Global 239),Con 14] (Branch F (Dloc 112448)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),14)) {
    TraceOperation 112415 (Print "give\" an attribute to ");
    GamePrint "give\" an attribute to ";
    TraceOperation 112432 (CallN (Floc 082048) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 112432;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 082049
  } else {
    Jump: 112448
  }
LocReturn 112432:
  TraceOperation 112437 (Print_ret " **]");
  GamePrint " **]\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 112448:
  TraceOperation 112448 (Je [Var (Global 239),Con 15] (Branch F (Dloc 112475)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),15)) {
    TraceOperation 112452 (Print "remove\" ");
    GamePrint "remove\" ";
    TraceOperation 112459 (CallN (Floc 082048) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 112459;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 082049
  } else {
    Jump: 112475
  }
LocReturn 112459:
  TraceOperation 112464 (Print_ret " **]");
  GamePrint " **]\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 112475:
  TraceOperation 112475 (Je [Var (Global 239),Con 16,Con 17,Con 18] (Branch F (Dloc 112599)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),16),Equal(MakeHiLo(b1,b2),17)),Equal(MakeHiLo(b1,b2),18))) {
    TraceOperation 112483 (Print "move\" ");
    GamePrint "move\" ";
    TraceOperation 112490 (CallN (Floc 082048) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 112490;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 082049
  } else {
    Jump: 112599
  }
LocReturn 112490:
  TraceOperation 112495 (Print " to ");
  GamePrint " to ";
  TraceOperation 112500 (CallN (Floc 082048) [Var (Local 3)]);
  PushFrame;
  PushReturnAddress 112500;
  SetLocal 1 GetLocal(3);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 082049
LocReturn 112500:
  TraceOperation 112505 (Je [Var (Local 1),Con 18] (Branch F (Dloc 112588)));
  if (Equal(GetLocal(1),18)) {
    TraceOperation 112510 (Print ", which would make a loop: ");
    GamePrint ", which would make a loop: ";
    TraceOperation 112531 (CallN (Floc 082048) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 112531;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 082049
  } else {
    Jump: 112588
  }
LocReturn 112531:
  TraceOperation 112536 (Store (Con 5) (Var (Local 3)));
  SetLocal 5 GetLocal(3);
  TraceOperation 112539 (Je [Var (Local 5),Var (Local 2)] (Branch F (Dloc 112549)));
  if (Equal(GetLocal(5),GetLocal(2))) {
    TraceOperation 112543 (Store (Con 5) (Var (Local 2)));
    SetLocal 5 GetLocal(2);
    TraceOperation 112546 (Jump 112567);
    Jump: 112567
  } else {
    Jump: 112549
  }
LocOp 112549:
  TraceOperation 112549 (Print " in ");
  GamePrint " in ";
  TraceOperation 112554 (CallN (Floc 082048) [Var (Local 5)]);
  PushFrame;
  PushReturnAddress 112554;
  SetLocal 1 GetLocal(5);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 082049
LocReturn 112554:
  TraceOperation 112559 (Get_parent (Var (Local 5)) (Local 5));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(5),14)),6)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(5),14)),6),1)];
  SetLocal 5 MakeHiLo(b1,b2);
  TraceOperation 112562 (Je [Var (Local 5),Var (Local 2)] (Branch F (Dloc 112549)));
  if (Equal(GetLocal(5),GetLocal(2))) {
    Jump: 112567
  } else {
    Jump: 112549
  }
LocOp 112567:
  TraceOperation 112567 (Print " in ");
  GamePrint " in ";
  TraceOperation 112572 (CallN (Floc 082048) [Var (Local 5)]);
  PushFrame;
  PushReturnAddress 112572;
  SetLocal 1 GetLocal(5);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 082049
LocReturn 112572:
  TraceOperation 112577 (Print_ret " **]");
  GamePrint " **]\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 112588:
  TraceOperation 112588 (Print_ret " **]");
  GamePrint " **]\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 112599:
  TraceOperation 112599 (Je [Var (Global 239),Con 19] (Branch F (Dloc 112622)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),19)) {
    TraceOperation 112603 (Print_paddr (Con -31167));
    Note "<static Gettext address>";
    GamePrint "give\" or test \"has\" or \"hasnt\" with a non-attribute on the object ";
    TraceOperation 112606 (CallN (Floc 082048) [Var (Local 2)]);
    PushFrame;
    PushReturnAddress 112606;
    SetLocal 1 GetLocal(2);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 082049
  } else {
    Jump: 112622
  }
LocReturn 112606:
  TraceOperation 112611 (Print_ret " **]");
  GamePrint " **]\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 112622:
  TraceOperation 112622 (Je [Var (Global 239),Con 21] (Branch F (Dloc 112634)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),21)) {
    TraceOperation 112626 (Print ".&");
    GamePrint ".&";
    TraceOperation 112631 (Jump 112653);
    Jump: 112653
  } else {
    Jump: 112634
  }
LocOp 112634:
  TraceOperation 112634 (Je [Var (Global 239),Con 22] (Branch F (Dloc 112646)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),22)) {
    TraceOperation 112638 (Print ".#");
    GamePrint ".#";
    TraceOperation 112643 (Jump 112653);
    Jump: 112653
  } else {
    Jump: 112646
  }
LocOp 112646:
  TraceOperation 112646 (Je [Var (Global 239),Con 23] (Branch F (Dloc 112653)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),23)) {
    TraceOperation 112650 (Print ".");
    GamePrint ".";
    Jump: 112653
  } else {
    Jump: 112653
  }
LocOp 112653:
  TraceOperation 112653 (Print "\" of ");
  GamePrint "\" of ";
  TraceOperation 112658 (CallN (Floc 082048) [Var (Local 2)]);
  PushFrame;
  PushReturnAddress 112658;
  SetLocal 1 GetLocal(2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 082049
LocReturn 112658:
  TraceOperation 112663 (Print_ret " **]");
  GamePrint " **]\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 112674:
  TraceOperation 112674 (Jl (Var (Local 2)) (Con 0) (Branch T (Dloc 112718)));
  if (LessThan(GetLocal(2),0)) {
    Jump: 112718
  } else {
    TraceOperation 112678 (Sub (Con 327) (Con 255) Sp);
    PushStack 72;
    TraceOperation 112684 (Jg (Var (Local 2)) (Var Sp) (Branch T (Dloc 112718)));
    PopStack popped1;
    if (GreaterThan(GetLocal(2),popped1)) {
      Jump: 112718
    } else {
      TraceOperation 112688 (Jz (Var (Local 2)) (Branch T (Dloc 112700)));
      if (IsZero(GetLocal(2))) {
        Jump: 112700
      } else {
        TraceOperation 112691 (Jin (Var (Local 2)) (Con 1) (Branch F (Dloc 112700)));
        Let b2 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),6)];
        Let b3 = M[Offset(Offset(Offset(000378,Mul(GetLocal(2),14)),6),1)];
        if (Equal(1,MakeHiLo(b2,b3))) {
          TraceOperation 112695 (Print "class ");
          GamePrint "class ";
          Jump: 112700
        } else {
          Jump: 112700
        }
      }
    }
  }
LocOp 112700:
  TraceOperation 112700 (Jz (Var (Local 2)) (Branch T (Dloc 112708)));
  if (IsZero(GetLocal(2))) {
    Jump: 112708
  } else {
    TraceOperation 112703 (Print_obj (Var (Local 2)));
    Let b1 = M[Offset(Offset(000378,Mul(GetLocal(2),14)),12)];
    Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(2),14)),12),1)];
    Let b3 = M[Address(MakeHiLo(b1,b2))];
    Let ite_res4 = Ite((IsZeroByte(b3),"",GetText(Offset(Address(MakeHiLo(b1,b2)),1))));
    GamePrint ite_res4;
    TraceOperation 112705 (Jump 112715);
    Jump: 112715
  }
LocOp 112708:
  TraceOperation 112708 (Print "nothing");
  GamePrint "nothing";
  Jump: 112715
LocOp 112715:
  TraceOperation 112715 (Print " ");
  GamePrint " ";
  Jump: 112718
LocOp 112718:
  TraceOperation 112718 (Print "(object number ");
  GamePrint "(object number ";
  TraceOperation 112731 (Print_num (Var (Local 2)));
  GamePrint ShowNumber(GetLocal(2));
  TraceOperation 112734 (Print ") ");
  GamePrint ") ";
  TraceOperation 112737 (Jl (Var (Local 3)) (Con 0) (Branch F (Dloc 112766)));
  if (LessThan(GetLocal(3),0)) {
    TraceOperation 112741 (Print "is not of class ");
    GamePrint "is not of class ";
    TraceOperation 112754 (Sub (Con 0) (Var (Local 3)) Sp);
    PushStack Sub(0,GetLocal(3));
    TraceOperation 112758 (CallN (Floc 082048) [Var Sp]);
    PopStack popped1;
    PushFrame;
    PushReturnAddress 112758;
    SetLocal 1 popped1;
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 082049
  } else {
    Jump: 112766
  }
LocReturn 112758:
  TraceOperation 112763 (Jump 112849);
  Jump: 112849
LocOp 112766:
  TraceOperation 112766 (Jz (Var (Local 4)) (Branch T (Dloc 112791)));
  if (IsZero(GetLocal(4))) {
    Jump: 112791
  } else {
    TraceOperation 112769 (Print "has a property ");
    GamePrint "has a property ";
    TraceOperation 112780 (CallN (Floc 113460) [Var (Local 3)]);
    PushFrame;
    PushReturnAddress 112780;
    SetLocal 1 GetLocal(3);
    MakeRoutineFrame 5;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 113461
  }
LocReturn 112780:
  TraceOperation 112785 (Print_paddr (Con -31155));
  Note "<static Gettext address>";
  GamePrint ", but it is longer than 2 bytes so you cannot use \".\"";
  TraceOperation 112788 (Jump 112849);
  Jump: 112849
LocOp 112791:
  TraceOperation 112791 (Print " has no property ");
  GamePrint " has no property ";
  TraceOperation 112804 (CallN (Floc 113460) [Var (Local 3)]);
  PushFrame;
  PushReturnAddress 112804;
  SetLocal 1 GetLocal(3);
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 113461
LocReturn 112804:
  TraceOperation 112809 (Store (Con 5) (Con 4719));
  SetLocal 5 4719;
  TraceOperation 112814 (Loadw (Var (Local 5)) (Con 0) (Local 4));
  Let b1 = M[Offset(Address(GetLocal(5)),0)];
  Let b2 = M[Offset(Offset(Address(GetLocal(5)),0),1)];
  SetLocal 4 MakeHiLo(b1,b2);
  TraceOperation 112818 (Jl (Var (Local 3)) (Con 0) (Branch T (Dloc 112826)));
  if (LessThan(GetLocal(3),0)) {
    Jump: 112826
  } else {
    TraceOperation 112822 (Jl (Var (Local 3)) (Var (Local 4)) (Branch T (Dloc 112849)));
    if (LessThan(GetLocal(3),GetLocal(4))) {
      Jump: 112849
    } else {
      Jump: 112826
    }
  }
LocOp 112826:
  TraceOperation 112826 (Print " (and nor has any other object)");
  GamePrint " (and nor has any other object)";
  Jump: 112849
LocOp 112849:
  TraceOperation 112849 (Print " to ");
  GamePrint " to ";
  TraceOperation 112854 (Print_paddr (Var (Local 1)));
  GamePrint GetText(PackedAddress Z5(GetLocal(1)));
  TraceOperation 112856 (Print " **]\n");
  GamePrint " **]\n";
  TraceOperation 112867 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 112868:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 112869
LocOp 112869:
  TraceOperation 112869 (Je [Var (Local 1),Con 0,Con -1] (Branch T Dfalse));
  if (LogOr(Equal(GetLocal(1),0),Equal(GetLocal(1),-1))) {
    PopFrame;
    PopReturnAddress return_address_1;
    SetResult 0;
    JumpIndirect: (return) return_address_1
  } else {
    TraceOperation 112876 (Store (Con 2) (Var (Local 1)));
    SetLocal 2 GetLocal(1);
    TraceOperation 112879 (Loadw (Con 26) (Con 0) Sp);
    PushStack -29609;
    TraceOperation 112883 (Call (Floc 026308) [Var (Local 2),Var Sp] Sp);
    PopStack popped2;
    PushFrame;
    PushReturnAddress 112883;
    SetLocal 1 GetLocal(2);
    SetLocal 2 popped2;
    MakeRoutineFrame 4;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026309
  }
LocReturn 112883:
  PushStack call_result;
  TraceOperation 112890 (Jl (Var Sp) (Con 0) (Branch F Dfalse));
  PopStack popped1;
  if (LessThan(popped1,0)) {
    TraceOperation 112894 (Jl (Var (Local 1)) (Con 1) (Branch T (Dloc 112908)));
    if (LessThan(GetLocal(1),1)) {
      Jump: 112908
    } else {
      TraceOperation 112898 (Sub (Con 327) (Con 255) Sp);
      PushStack 72;
      TraceOperation 112904 (Jg (Var (Local 1)) (Var Sp) (Branch F Dtrue));
      PopStack popped2;
      if (GreaterThan(GetLocal(1),popped2)) {
        Jump: 112908
      } else {
        PopFrame;
        PopReturnAddress return_address_3;
        SetResult 1;
        JumpIndirect: (return) return_address_3
      }
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_4;
    SetResult 0;
    JumpIndirect: (return) return_address_4
  }
LocOp 112908:
  TraceOperation 112908 (Call (Floc 026308) [Var (Local 1),Con 28407] Sp);
  PushFrame;
  PushReturnAddress 112908;
  SetLocal 1 GetLocal(1);
  SetLocal 2 28407;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026309
LocReturn 112908:
  PushStack call_result;
  TraceOperation 112916 (Jl (Var Sp) (Con 0) (Branch T (Dloc 112922)));
  PopStack popped1;
  if (LessThan(popped1,0)) {
    Jump: 112922
  } else {
    TraceOperation 112920 (Ret (Con 3));
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 3;
    JumpIndirect: (return) return_address_2
  }
LocOp 112922:
  TraceOperation 112922 (Call (Floc 026308) [Var (Local 1),Con 6139] Sp);
  PushFrame;
  PushReturnAddress 112922;
  SetLocal 1 GetLocal(1);
  SetLocal 2 6139;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026309
LocReturn 112922:
  PushStack call_result;
  TraceOperation 112930 (Jl (Var Sp) (Con 0) (Branch T (Dloc 112936)));
  PopStack popped1;
  if (LessThan(popped1,0)) {
    Jump: 112936
  } else {
    TraceOperation 112934 (Ret (Con 2));
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 2;
    JumpIndirect: (return) return_address_2
  }
LocOp 112936:
  TraceOperation 112936 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 112940:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 112941
LocOp 112941:
  TraceOperation 112941 (Call (Floc 112868) [Var (Local 1)] Sp);
  PushFrame;
  PushReturnAddress 112941;
  SetLocal 1 GetLocal(1);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 112869
LocReturn 112941:
  PushStack call_result;
  TraceOperation 112947 (Pull (Con 255));
  PopStack popped1;
  SetByte 007684 HiByte(popped1);
  SetByte 007685 LoByte(popped1);
  TraceOperation 112950 (Je [Var (Global 239),Con 2] (Branch F (Dloc 112956)));
  Let b2 = M[007684];
  Let b3 = M[007685];
  if (Equal(MakeHiLo(b2,b3),2)) {
    TraceOperation 112954 (Ret (Con 3));
    PopFrame;
    PopReturnAddress return_address_4;
    SetResult 3;
    JumpIndirect: (return) return_address_4
  } else {
    Jump: 112956
  }
LocOp 112956:
  TraceOperation 112956 (Je [Var (Global 239),Con 3] (Branch F (Dloc 112962)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),3)) {
    TraceOperation 112960 (Ret (Con 4));
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 4;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 112962
  }
LocOp 112962:
  TraceOperation 112962 (Je [Var (Global 239),Con 1] (Branch F (Dloc 112977)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),1)) {
    TraceOperation 112966 (Jin (Var (Local 1)) (Con 1) (Branch T (Dloc 112974)));
    Let b3 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),6)];
    Let b4 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),6),1)];
    if (Equal(1,MakeHiLo(b3,b4))) {
      Jump: 112974
    } else {
      TraceOperation 112970 (Jg (Var (Local 1)) (Con 4) (Branch T (Dloc 112975)));
      if (GreaterThan(GetLocal(1),4)) {
        Jump: 112975
      } else {
        Jump: 112974
      }
    }
  } else {
    Jump: 112977
  }
LocOp 112974:
  TraceOperation 112974 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 112975:
  TraceOperation 112975 (Ret (Con 2));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 2;
  JumpIndirect: (return) return_address_1
LocOp 112977:
  TraceOperation 112977 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 112980:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 112981
LocOp 112981:
  TraceOperation 112981 (Loadb (Con 0) (Var (Local 1)) (Local 3));
  Let b1 = M[Offset(000000,GetLocal(1))];
  SetLocal 3 Widen(b1);
  TraceOperation 112985 (Jz (Var (Local 3)) (Branch T (Dloc 113043)));
  if (IsZero(GetLocal(3))) {
    Jump: 113043
  } else {
    TraceOperation 112988 (And (Var (Local 3)) (Con 128) Sp);
    PushStack And(GetLocal(3),128);
    TraceOperation 112992 (Jz (Var Sp) (Branch T (Dloc 113008)));
    PopStack popped2;
    if (IsZero(popped2)) {
      Jump: 113008
    } else {
      TraceOperation 112995 (Inc (Con 1));
      SetLocal 1 Add(GetLocal(1),1);
      TraceOperation 112997 (Loadb (Con 0) (Var (Local 1)) Sp);
      Let b3 = M[Offset(000000,GetLocal(1))];
      PushStack Widen(b3);
      TraceOperation 113001 (And (Var Sp) (Con 63) (Local 4));
      PopStack popped4;
      SetLocal 4 And(popped4,63);
      TraceOperation 113005 (Jump 113024);
      Jump: 113024
    }
  }
LocOp 113008:
  TraceOperation 113008 (And (Var (Local 3)) (Con 64) Sp);
  PushStack And(GetLocal(3),64);
  TraceOperation 113012 (Jz (Var Sp) (Branch T (Dloc 113021)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 113021
  } else {
    TraceOperation 113015 (Store (Con 4) (Con 2));
    SetLocal 4 2;
    TraceOperation 113018 (Jump 113024);
    Jump: 113024
  }
LocOp 113021:
  TraceOperation 113021 (Store (Con 4) (Con 1));
  SetLocal 4 1;
  Jump: 113024
LocOp 113024:
  TraceOperation 113024 (Inc (Con 1));
  SetLocal 1 Add(GetLocal(1),1);
  TraceOperation 113026 (And (Var (Local 3)) (Con 63) Sp);
  PushStack And(GetLocal(3),63);
  TraceOperation 113030 (Je [Var Sp,Var (Local 2)] (Branch F (Dloc 113036)));
  PopStack popped1;
  if (Equal(popped1,GetLocal(2))) {
    TraceOperation 113034 (Ret (Var (Local 1)));
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult GetLocal(1);
    JumpIndirect: (return) return_address_2
  } else {
    Jump: 113036
  }
LocOp 113036:
  TraceOperation 113036 (Add (Var (Local 1)) (Var (Local 4)) (Local 1));
  SetLocal 1 Add(GetLocal(1),GetLocal(4));
  TraceOperation 113040 (Jump 112981);
  Jump: 112981
LocOp 113043:
  TraceOperation 113043 (Jl (Var (Local 2)) (Con 0) (Branch F (Dloc 113052)));
  if (LessThan(GetLocal(2),0)) {
    TraceOperation 113047 (Add (Var (Local 1)) (Con 1) Sp);
    PushStack Add(GetLocal(1),1);
    TraceOperation 113051 Ret_popped;
    PopStack popped1;
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult popped1;
    JumpIndirect: (return) return_address_2
  } else {
    Jump: 113052
  }
LocOp 113052:
  TraceOperation 113052 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 113056:
  MakeRoutineFrame 8;
  if (LessThanByte(num_actuals,8)) {
    SetLocal 8 0;
    if (LessThanByte(num_actuals,7)) {
      SetLocal 7 0;
      if (LessThanByte(num_actuals,6)) {
        SetLocal 6 0;
        if (LessThanByte(num_actuals,5)) {
          SetLocal 5 0;
          if (LessThanByte(num_actuals,4)) {
            SetLocal 4 0;
            if (LessThanByte(num_actuals,3)) {
              SetLocal 3 0;
              if (LessThanByte(num_actuals,2)) {
                SetLocal 2 0;
                if (LessThanByte(num_actuals,1)) {
                  SetLocal 1 0;
                }
              }
            }
          }
        }
      }
    }
  }
  Jump: 113057
LocOp 113057:
  TraceOperation 113057 (Store (Con 255) (Var (Local 2)));
  SetByte 007684 HiByte(GetLocal(2));
  SetByte 007685 LoByte(GetLocal(2));
  TraceOperation 113060 (Je [Var (Global 239),Con 64] (Branch F (Dloc 113165)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),64)) {
    TraceOperation 113065 (Store (Con 255) (Con 0));
    SetByte 007684 0;
    SetByte 007685 0;
    TraceOperation 113068 (Get_child (Var (Local 1)) Sp (Branch F (Dloc 113079)));
    Let b3 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),10)];
    Let b4 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),10),1)];
    PushStack MakeHiLo(b3,b4);
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 113079
    } else {
      Jump: 113072
    }
  } else {
    Jump: 113165
  }
LocOp 113072:
  TraceOperation 113072 (Inc (Con 255));
  Let b1 = M[007684];
  Let b2 = M[007685];
  SetByte 007684 HiByte(Add(MakeHiLo(b1,b2),1));
  SetByte 007685 LoByte(Add(MakeHiLo(b1,b2),1));
  TraceOperation 113074 (Get_sibling (Var Sp) Sp (Branch T (Dloc 113072)));
  PopStack popped3;
  Let b4 = M[Offset(Offset(000378,Mul(popped3,14)),8)];
  Let b5 = M[Offset(Offset(Offset(000378,Mul(popped3,14)),8),1)];
  PushStack MakeHiLo(b4,b5);
  if (IsZero(MakeHiLo(b4,b5))) {
    Jump: 113079
  } else {
    Jump: 113072
  }
LocOp 113079:
  TraceOperation 113079 (Pull (Con 254));
  PopStack popped1;
  SetByte 007682 HiByte(popped1);
  SetByte 007683 LoByte(popped1);
  TraceOperation 113082 (Push (Var (Global 239)));
  Let b2 = M[007684];
  Let b3 = M[007685];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 113085 (Jg (Var Sp) (Con 1) (Branch F Dfalse));
  PopStack popped4;
  if (GreaterThan(popped4,1)) {
    TraceOperation 113089 (Get_child (Var (Local 1)) (Local 8) (Branch F (Dloc 113093)));
    Let b5 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),10)];
    Let b6 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),10),1)];
    SetLocal 8 MakeHiLo(b5,b6);
    if (IsZero(MakeHiLo(b5,b6))) {
      Jump: 113093
    } else {
      Jump: 113093
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_7;
    SetResult 0;
    JumpIndirect: (return) return_address_7
  }
LocOp 113093:
  TraceOperation 113093 (Remove_obj (Var (Local 8)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(8),14)),6)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(8),14)),6),1)];
  if (IsZero(MakeHiLo(b1,b2))) {} else {
    Let b3 = M[Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),10)];
    Let b4 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),10),1)];
    if (Equal(MakeHiLo(b3,b4),GetLocal(8))) {
      Let b5 = M[Offset(Offset(000378,Mul(GetLocal(8),14)),8)];
      Let b6 = M[Offset(Offset(Offset(000378,Mul(GetLocal(8),14)),8),1)];
      SetByte Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),10) b5;
      SetByte Offset(Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),10),1) b6;
    } else {
      Let loop_var7 = MakeHiLo(b3,b4);
      Label 8: {
        Let b9 = M[Offset(Offset(000378,Mul(loop_var7,14)),8)];
        Let b10 = M[Offset(Offset(Offset(000378,Mul(loop_var7,14)),8),1)];
        if (Equal(MakeHiLo(b9,b10),GetLocal(8))) {
          Let b11 = M[Offset(Offset(000378,Mul(GetLocal(8),14)),8)];
          Let b12 = M[Offset(Offset(Offset(000378,Mul(GetLocal(8),14)),8),1)];
          SetByte Offset(Offset(000378,Mul(loop_var7,14)),8) b11;
          SetByte Offset(Offset(Offset(000378,Mul(loop_var7,14)),8),1) b12;
        } else {
          Assign loop_var7 = MakeHiLo(b9,b10);
          Goto: Label 8
        }
      }
    }
  }
  SetByte Offset(Offset(000378,Mul(GetLocal(8),14)),6) 0;
  SetByte Offset(Offset(Offset(000378,Mul(GetLocal(8),14)),6),1) 0;
  TraceOperation 113095 (Call (Floc 111316) [Var (Local 8),Con 64] Sp);
  PushFrame;
  PushReturnAddress 113095;
  SetLocal 1 GetLocal(8);
  SetLocal 2 64;
  MakeRoutineFrame 2;
  Jump: 111317
LocReturn 113095:
  PushStack call_result;
  TraceOperation 113102 (Jz (Var Sp) (Branch T (Dloc 113163)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 113163
  } else {
    TraceOperation 113106 (Jz (Var (Local 3)) (Branch F (Dloc 113115)));
    if (IsZero(GetLocal(3))) {
      TraceOperation 113109 (CallN (Floc 110196) [Var (Local 8),Con 64]);
      PushFrame;
      PushReturnAddress 113109;
      SetLocal 1 GetLocal(8);
      SetLocal 2 64;
      MakeRoutineFrame 15;
      SetLocal 15 0;
      SetLocal 14 0;
      SetLocal 13 0;
      SetLocal 12 0;
      SetLocal 11 0;
      SetLocal 10 0;
      SetLocal 9 0;
      SetLocal 8 0;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      SetLocal 3 0;
      Jump: 110197
    } else {
      Jump: 113115
    }
  }
LocReturn 113109:
  Jump: 113115
LocOp 113115:
  TraceOperation 113115 (Je [Var (Local 3),Con 1] (Branch F (Dloc 113126)));
  if (Equal(GetLocal(3),1)) {
    TraceOperation 113119 (CallN (Floc 110196) [Var (Local 8),Con 64,Var (Local 4)]);
    PushFrame;
    PushReturnAddress 113119;
    SetLocal 1 GetLocal(8);
    SetLocal 2 64;
    SetLocal 3 GetLocal(4);
    MakeRoutineFrame 15;
    SetLocal 15 0;
    SetLocal 14 0;
    SetLocal 13 0;
    SetLocal 12 0;
    SetLocal 11 0;
    SetLocal 10 0;
    SetLocal 9 0;
    SetLocal 8 0;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    Jump: 110197
  } else {
    Jump: 113126
  }
LocReturn 113119:
  Jump: 113126
LocOp 113126:
  TraceOperation 113126 (Je [Var (Local 3),Con 2] (Branch F (Dloc 113139)));
  if (Equal(GetLocal(3),2)) {
    TraceOperation 113130 (CallN (Floc 110196) [Var (Local 8),Con 64,Var (Local 4),Var (Local 5)]);
    PushFrame;
    PushReturnAddress 113130;
    SetLocal 1 GetLocal(8);
    SetLocal 2 64;
    SetLocal 3 GetLocal(4);
    SetLocal 4 GetLocal(5);
    MakeRoutineFrame 15;
    SetLocal 15 0;
    SetLocal 14 0;
    SetLocal 13 0;
    SetLocal 12 0;
    SetLocal 11 0;
    SetLocal 10 0;
    SetLocal 9 0;
    SetLocal 8 0;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    Jump: 110197
  } else {
    Jump: 113139
  }
LocReturn 113130:
  Jump: 113139
LocOp 113139:
  TraceOperation 113139 (Jg (Var (Local 3)) (Con 3) (Branch F (Dloc 113149)));
  if (GreaterThan(GetLocal(3),3)) {
    TraceOperation 113143 (CallN (Floc 111668) [Con 1,Var (Local 1)]);
    PushFrame;
    PushReturnAddress 113143;
    SetLocal 1 1;
    SetLocal 2 GetLocal(1);
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 111669
  } else {
    Jump: 113149
  }
LocReturn 113143:
  Jump: 113149
LocOp 113149:
  TraceOperation 113149 (Jl (Var (Local 3)) (Con 3) (Branch T (Dloc 113163)));
  if (LessThan(GetLocal(3),3)) {
    Jump: 113163
  } else {
    TraceOperation 113153 (CallN (Floc 110196) [Var (Local 8),Con 64,Var (Local 4),Var (Local 5),Var (Local 6)]);
    PushFrame;
    PushReturnAddress 113153;
    SetLocal 1 GetLocal(8);
    SetLocal 2 64;
    SetLocal 3 GetLocal(4);
    SetLocal 4 GetLocal(5);
    SetLocal 5 GetLocal(6);
    MakeRoutineFrame 15;
    SetLocal 15 0;
    SetLocal 14 0;
    SetLocal 13 0;
    SetLocal 12 0;
    SetLocal 11 0;
    SetLocal 10 0;
    SetLocal 9 0;
    SetLocal 8 0;
    SetLocal 7 0;
    SetLocal 6 0;
    Jump: 110197
  }
LocReturn 113153:
  Jump: 113163
LocOp 113163:
  TraceOperation 113163 (Ret (Var (Local 8)));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult GetLocal(8);
  JumpIndirect: (return) return_address_1
LocOp 113165:
  TraceOperation 113165 (Je [Var (Global 239),Con 65] (Branch F (Dloc 113273)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),65)) {
    TraceOperation 113170 (Call (Floc 026172) [Var (Local 4),Var (Local 1)] Sp);
    PushFrame;
    PushReturnAddress 113170;
    SetLocal 1 GetLocal(4);
    SetLocal 2 GetLocal(1);
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 113273
  }
LocReturn 113170:
  PushStack call_result;
  TraceOperation 113177 (Jz (Var Sp) (Branch F (Dloc 113193)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 113180 (Sub (Con 0) (Var (Local 1)) Sp);
    PushStack Sub(0,GetLocal(1));
    TraceOperation 113184 (CallN (Floc 111668) [Con -31145,Var (Local 4),Var Sp]);
    PopStack popped2;
    PushFrame;
    PushReturnAddress 113184;
    SetLocal 1 -31145;
    SetLocal 2 GetLocal(4);
    SetLocal 3 popped2;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    Jump: 111669
  } else {
    Jump: 113193
  }
LocReturn 113184:
  TraceOperation 113192 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
LocOp 113193:
  TraceOperation 113193 (Get_child (Var (Local 1)) Sp (Branch F (Dloc 113197)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),10)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),10),1)];
  PushStack MakeHiLo(b1,b2);
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 113197
  } else {
    Jump: 113197
  }
LocOp 113197:
  TraceOperation 113197 (CallN (Floc 111404) [Var (Local 4),Var Sp]);
  PopStack popped1;
  PushFrame;
  PushReturnAddress 113197;
  SetLocal 1 GetLocal(4);
  SetLocal 2 popped1;
  MakeRoutineFrame 9;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 111405
LocReturn 113197:
  TraceOperation 113203 (Call (Floc 111316) [Var (Local 4),Con 64] Sp);
  PushFrame;
  PushReturnAddress 113203;
  SetLocal 1 GetLocal(4);
  SetLocal 2 64;
  MakeRoutineFrame 2;
  Jump: 111317
LocReturn 113203:
  PushStack call_result;
  TraceOperation 113210 (Jz (Var Sp) (Branch T (Dloc 113272)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 113272
  } else {
    TraceOperation 113214 (Je [Var (Local 3),Con 1] (Branch F (Dloc 113224)));
    if (Equal(GetLocal(3),1)) {
      TraceOperation 113218 (CallN (Floc 110196) [Var (Local 4),Con 64]);
      PushFrame;
      PushReturnAddress 113218;
      SetLocal 1 GetLocal(4);
      SetLocal 2 64;
      MakeRoutineFrame 15;
      SetLocal 15 0;
      SetLocal 14 0;
      SetLocal 13 0;
      SetLocal 12 0;
      SetLocal 11 0;
      SetLocal 10 0;
      SetLocal 9 0;
      SetLocal 8 0;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      SetLocal 3 0;
      Jump: 110197
    } else {
      Jump: 113224
    }
  }
LocReturn 113218:
  Jump: 113224
LocOp 113224:
  TraceOperation 113224 (Je [Var (Local 3),Con 2] (Branch F (Dloc 113235)));
  if (Equal(GetLocal(3),2)) {
    TraceOperation 113228 (CallN (Floc 110196) [Var (Local 4),Con 64,Var (Local 5)]);
    PushFrame;
    PushReturnAddress 113228;
    SetLocal 1 GetLocal(4);
    SetLocal 2 64;
    SetLocal 3 GetLocal(5);
    MakeRoutineFrame 15;
    SetLocal 15 0;
    SetLocal 14 0;
    SetLocal 13 0;
    SetLocal 12 0;
    SetLocal 11 0;
    SetLocal 10 0;
    SetLocal 9 0;
    SetLocal 8 0;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    Jump: 110197
  } else {
    Jump: 113235
  }
LocReturn 113228:
  Jump: 113235
LocOp 113235:
  TraceOperation 113235 (Je [Var (Local 3),Con 3] (Branch F (Dloc 113248)));
  if (Equal(GetLocal(3),3)) {
    TraceOperation 113239 (CallN (Floc 110196) [Var (Local 4),Con 64,Var (Local 5),Var (Local 6)]);
    PushFrame;
    PushReturnAddress 113239;
    SetLocal 1 GetLocal(4);
    SetLocal 2 64;
    SetLocal 3 GetLocal(5);
    SetLocal 4 GetLocal(6);
    MakeRoutineFrame 15;
    SetLocal 15 0;
    SetLocal 14 0;
    SetLocal 13 0;
    SetLocal 12 0;
    SetLocal 11 0;
    SetLocal 10 0;
    SetLocal 9 0;
    SetLocal 8 0;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    Jump: 110197
  } else {
    Jump: 113248
  }
LocReturn 113239:
  Jump: 113248
LocOp 113248:
  TraceOperation 113248 (Jg (Var (Local 3)) (Con 4) (Branch F (Dloc 113258)));
  if (GreaterThan(GetLocal(3),4)) {
    TraceOperation 113252 (CallN (Floc 111668) [Con 1,Var (Local 1)]);
    PushFrame;
    PushReturnAddress 113252;
    SetLocal 1 1;
    SetLocal 2 GetLocal(1);
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 111669
  } else {
    Jump: 113258
  }
LocReturn 113252:
  Jump: 113258
LocOp 113258:
  TraceOperation 113258 (Jl (Var (Local 3)) (Con 4) (Branch T (Dloc 113272)));
  if (LessThan(GetLocal(3),4)) {
    Jump: 113272
  } else {
    TraceOperation 113262 (CallN (Floc 110196) [Var (Local 4),Con 64,Var (Local 5),Var (Local 6),Var (Local 7)]);
    PushFrame;
    PushReturnAddress 113262;
    SetLocal 1 GetLocal(4);
    SetLocal 2 64;
    SetLocal 3 GetLocal(5);
    SetLocal 4 GetLocal(6);
    SetLocal 5 GetLocal(7);
    MakeRoutineFrame 15;
    SetLocal 15 0;
    SetLocal 14 0;
    SetLocal 13 0;
    SetLocal 12 0;
    SetLocal 11 0;
    SetLocal 10 0;
    SetLocal 9 0;
    SetLocal 8 0;
    SetLocal 7 0;
    SetLocal 6 0;
    Jump: 110197
  }
LocReturn 113262:
  Jump: 113272
LocOp 113272:
  TraceOperation 113272 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
LocOp 113273:
  TraceOperation 113273 (Je [Var (Global 239),Con 66] (Branch F (Dloc 113330)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),66)) {
    TraceOperation 113277 (Call (Floc 026172) [Var (Local 4),Var (Local 1)] Sp);
    PushFrame;
    PushReturnAddress 113277;
    SetLocal 1 GetLocal(4);
    SetLocal 2 GetLocal(1);
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 113330
  }
LocReturn 113277:
  PushStack call_result;
  TraceOperation 113284 (Jz (Var Sp) (Branch F (Dloc 113300)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 113287 (Sub (Con 0) (Var (Local 1)) Sp);
    PushStack Sub(0,GetLocal(1));
    TraceOperation 113291 (CallN (Floc 111668) [Con -31143,Var (Local 4),Var Sp]);
    PopStack popped2;
    PushFrame;
    PushReturnAddress 113291;
    SetLocal 1 -31143;
    SetLocal 2 GetLocal(4);
    SetLocal 3 popped2;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    Jump: 111669
  } else {
    Jump: 113300
  }
LocReturn 113291:
  TraceOperation 113299 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
LocOp 113300:
  TraceOperation 113300 (Call (Floc 111316) [Var (Local 4),Con 66] Sp);
  PushFrame;
  PushReturnAddress 113300;
  SetLocal 1 GetLocal(4);
  SetLocal 2 66;
  MakeRoutineFrame 2;
  Jump: 111317
LocReturn 113300:
  PushStack call_result;
  TraceOperation 113307 (Jz (Var Sp) (Branch T (Dloc 113316)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 113316
  } else {
    TraceOperation 113310 (CallN (Floc 110196) [Var (Local 4),Con 66]);
    PushFrame;
    PushReturnAddress 113310;
    SetLocal 1 GetLocal(4);
    SetLocal 2 66;
    MakeRoutineFrame 15;
    SetLocal 15 0;
    SetLocal 14 0;
    SetLocal 13 0;
    SetLocal 12 0;
    SetLocal 11 0;
    SetLocal 10 0;
    SetLocal 9 0;
    SetLocal 8 0;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 110197
  }
LocReturn 113310:
  Jump: 113316
LocOp 113316:
  TraceOperation 113316 (Get_child (Var (Local 1)) Sp (Branch F (Dloc 113320)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),10)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),10),1)];
  PushStack MakeHiLo(b1,b2);
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 113320
  } else {
    Jump: 113320
  }
LocOp 113320:
  TraceOperation 113320 (CallN (Floc 111404) [Var (Local 4),Var Sp]);
  PopStack popped1;
  PushFrame;
  PushReturnAddress 113320;
  SetLocal 1 GetLocal(4);
  SetLocal 2 popped1;
  MakeRoutineFrame 9;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 111405
LocReturn 113320:
  TraceOperation 113326 (Insert_obj (Var (Local 4)) (Var (Local 1)));
  Let b1 = M[Offset(Offset(000378,Mul(GetLocal(4),14)),6)];
  Let b2 = M[Offset(Offset(Offset(000378,Mul(GetLocal(4),14)),6),1)];
  if (IsZero(MakeHiLo(b1,b2))) {} else {
    Let b3 = M[Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),10)];
    Let b4 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),10),1)];
    if (Equal(MakeHiLo(b3,b4),GetLocal(4))) {
      Let b5 = M[Offset(Offset(000378,Mul(GetLocal(4),14)),8)];
      Let b6 = M[Offset(Offset(Offset(000378,Mul(GetLocal(4),14)),8),1)];
      SetByte Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),10) b5;
      SetByte Offset(Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),10),1) b6;
    } else {
      Let loop_var7 = MakeHiLo(b3,b4);
      Label 8: {
        Let b9 = M[Offset(Offset(000378,Mul(loop_var7,14)),8)];
        Let b10 = M[Offset(Offset(Offset(000378,Mul(loop_var7,14)),8),1)];
        if (Equal(MakeHiLo(b9,b10),GetLocal(4))) {
          Let b11 = M[Offset(Offset(000378,Mul(GetLocal(4),14)),8)];
          Let b12 = M[Offset(Offset(Offset(000378,Mul(GetLocal(4),14)),8),1)];
          SetByte Offset(Offset(000378,Mul(loop_var7,14)),8) b11;
          SetByte Offset(Offset(Offset(000378,Mul(loop_var7,14)),8),1) b12;
        } else {
          Assign loop_var7 = MakeHiLo(b9,b10);
          Goto: Label 8
        }
      }
    }
  }
  SetByte Offset(Offset(000378,Mul(GetLocal(4),14)),6) HiByte(GetLocal(1));
  SetByte Offset(Offset(Offset(000378,Mul(GetLocal(4),14)),6),1) LoByte(GetLocal(1));
  Let b13 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),10)];
  Let b14 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),10),1)];
  SetByte Offset(Offset(000378,Mul(GetLocal(4),14)),8) b13;
  SetByte Offset(Offset(Offset(000378,Mul(GetLocal(4),14)),8),1) b14;
  SetByte Offset(Offset(000378,Mul(GetLocal(1),14)),10) HiByte(GetLocal(4));
  SetByte Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),10),1) LoByte(GetLocal(4));
  TraceOperation 113329 Rfalse;
  PopFrame;
  PopReturnAddress return_address_15;
  SetResult 0;
  JumpIndirect: (return) return_address_15
LocOp 113330:
  TraceOperation 113330 (Je [Var (Global 239),Con 67] (Branch F (Dloc 113359)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),67)) {
    TraceOperation 113334 (Store (Con 255) (Con 0));
    SetByte 007684 0;
    SetByte 007685 0;
    TraceOperation 113337 (Get_child (Var (Local 1)) Sp (Branch F (Dloc 113348)));
    Let b3 = M[Offset(Offset(000378,Mul(GetLocal(1),14)),10)];
    Let b4 = M[Offset(Offset(Offset(000378,Mul(GetLocal(1),14)),10),1)];
    PushStack MakeHiLo(b3,b4);
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 113348
    } else {
      Jump: 113341
    }
  } else {
    Jump: 113359
  }
LocOp 113341:
  TraceOperation 113341 (Inc (Con 255));
  Let b1 = M[007684];
  Let b2 = M[007685];
  SetByte 007684 HiByte(Add(MakeHiLo(b1,b2),1));
  SetByte 007685 LoByte(Add(MakeHiLo(b1,b2),1));
  TraceOperation 113343 (Get_sibling (Var Sp) Sp (Branch T (Dloc 113341)));
  PopStack popped3;
  Let b4 = M[Offset(Offset(000378,Mul(popped3,14)),8)];
  Let b5 = M[Offset(Offset(Offset(000378,Mul(popped3,14)),8),1)];
  PushStack MakeHiLo(b4,b5);
  if (IsZero(MakeHiLo(b4,b5))) {
    Jump: 113348
  } else {
    Jump: 113341
  }
LocOp 113348:
  TraceOperation 113348 (Pull (Con 254));
  PopStack popped1;
  SetByte 007682 HiByte(popped1);
  SetByte 007683 LoByte(popped1);
  TraceOperation 113351 (Push (Var (Global 239)));
  Let b2 = M[007684];
  Let b3 = M[007685];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 113354 (Sub (Var Sp) (Con 1) Sp);
  PopStack popped4;
  PushStack Sub(popped4,1);
  TraceOperation 113358 Ret_popped;
  PopStack popped5;
  PopFrame;
  PopReturnAddress return_address_6;
  SetResult popped5;
  JumpIndirect: (return) return_address_6
LocOp 113359:
  TraceOperation 113359 (Je [Var (Global 239),Con 68] (Branch F (Dloc 113416)));
  Let b1 = M[007684];
  Let b2 = M[007685];
  if (Equal(MakeHiLo(b1,b2),68)) {
    TraceOperation 113363 (Call (Floc 026172) [Var (Local 4),Var (Local 1)] Sp);
    PushFrame;
    PushReturnAddress 113363;
    SetLocal 1 GetLocal(4);
    SetLocal 2 GetLocal(1);
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 026173
  } else {
    Jump: 113416
  }
LocReturn 113363:
  PushStack call_result;
  TraceOperation 113370 (Jz (Var Sp) (Branch F (Dloc 113386)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 113373 (Sub (Con 0) (Var (Local 1)) Sp);
    PushStack Sub(0,GetLocal(1));
    TraceOperation 113377 (CallN (Floc 111668) [Con -31141,Var (Local 4),Var Sp]);
    PopStack popped2;
    PushFrame;
    PushReturnAddress 113377;
    SetLocal 1 -31141;
    SetLocal 2 GetLocal(4);
    SetLocal 3 popped2;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    Jump: 111669
  } else {
    Jump: 113386
  }
LocReturn 113377:
  TraceOperation 113385 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
LocOp 113386:
  TraceOperation 113386 (Call (Floc 026172) [Var (Local 5),Var (Local 1)] Sp);
  PushFrame;
  PushReturnAddress 113386;
  SetLocal 1 GetLocal(5);
  SetLocal 2 GetLocal(1);
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026173
LocReturn 113386:
  PushStack call_result;
  TraceOperation 113393 (Jz (Var Sp) (Branch F (Dloc 113409)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 113396 (Sub (Con 0) (Var (Local 1)) Sp);
    PushStack Sub(0,GetLocal(1));
    TraceOperation 113400 (CallN (Floc 111668) [Con -31140,Var (Local 5),Var Sp]);
    PopStack popped2;
    PushFrame;
    PushReturnAddress 113400;
    SetLocal 1 -31140;
    SetLocal 2 GetLocal(5);
    SetLocal 3 popped2;
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    Jump: 111669
  } else {
    Jump: 113409
  }
LocReturn 113400:
  TraceOperation 113408 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
LocOp 113409:
  TraceOperation 113409 (CallN (Floc 111404) [Var (Local 4),Var (Local 5)]);
  PushFrame;
  PushReturnAddress 113409;
  SetLocal 1 GetLocal(4);
  SetLocal 2 GetLocal(5);
  MakeRoutineFrame 9;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 111405
LocReturn 113409:
  TraceOperation 113415 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
LocOp 113416:
  TraceOperation 113416 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 113420:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 113421
LocOp 113421:
  TraceOperation 113421 (Print "[Setting ");
  GamePrint "[Setting ";
  TraceOperation 113432 (CallN (Floc 082048) [Var (Local 1)]);
  PushFrame;
  PushReturnAddress 113432;
  SetLocal 1 GetLocal(1);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 082049
LocReturn 113432:
  TraceOperation 113437 (Print ".");
  GamePrint ".";
  TraceOperation 113440 (CallN (Floc 113460) [Var (Local 2)]);
  PushFrame;
  PushReturnAddress 113440;
  SetLocal 1 GetLocal(2);
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 113461
LocReturn 113440:
  TraceOperation 113445 (Print " to ");
  GamePrint " to ";
  TraceOperation 113450 (Print_num (Var (Local 3)));
  GamePrint ShowNumber(GetLocal(3));
  TraceOperation 113453 (Print "]\n");
  GamePrint "]\n";
  TraceOperation 113458 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 113460:
  MakeRoutineFrame 5;
  if (LessThanByte(num_actuals,5)) {
    SetLocal 5 0;
    if (LessThanByte(num_actuals,4)) {
      SetLocal 4 0;
      if (LessThanByte(num_actuals,3)) {
        SetLocal 3 0;
        if (LessThanByte(num_actuals,2)) {
          SetLocal 2 0;
          if (LessThanByte(num_actuals,1)) {
            SetLocal 1 0;
          }
        }
      }
    }
  }
  Jump: 113461
LocOp 113461:
  TraceOperation 113461 (And (Var (Local 1)) (Con -16384) Sp);
  PushStack And(GetLocal(1),-16384);
  TraceOperation 113467 (Jz (Var Sp) (Branch T (Dloc 113572)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 113572
  } else {
    TraceOperation 113471 (And (Var (Local 1)) (Con 255) Sp);
    PushStack And(GetLocal(1),255);
    TraceOperation 113475 (Loadw (Con 4675) (Var Sp) (Local 4));
    PopStack popped2;
    Let b3 = M[Offset(004675,Mul(2,popped2))];
    Let b4 = M[Offset(Offset(004675,Mul(2,popped2)),1)];
    SetLocal 4 MakeHiLo(b3,b4);
    TraceOperation 113481 (CallN (Floc 082048) [Var (Local 4)]);
    PushFrame;
    PushReturnAddress 113481;
    SetLocal 1 GetLocal(4);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 082049
  }
LocReturn 113481:
  TraceOperation 113486 (Print "::");
  GamePrint "::";
  TraceOperation 113491 (And (Var (Local 1)) (Con -32768) Sp);
  PushStack And(GetLocal(1),-32768);
  TraceOperation 113497 (Jz (Var Sp) (Branch F (Dloc 113515)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 113500 (And (Var (Local 1)) (Con 16128) Sp);
    PushStack And(GetLocal(1),16128);
    TraceOperation 113506 (Div (Var Sp) (Con 256) (Local 1));
    PopStack popped2;
    SetLocal 1 Div(popped2,256);
    TraceOperation 113512 (Jump 113572);
    Jump: 113572
  } else {
    Jump: 113515
  }
LocOp 113515:
  TraceOperation 113515 (And (Var (Local 1)) (Con 32512) Sp);
  PushStack And(GetLocal(1),32512);
  TraceOperation 113521 (Div (Var Sp) (Con 256) (Local 1));
  PopStack popped1;
  SetLocal 1 Div(popped1,256);
  TraceOperation 113527 (Get_prop (Var (Local 4)) (Con 3) (Global 239));
  Let b2 = M[Offset(Offset(000378,Mul(GetLocal(4),14)),12)];
  Let b3 = M[Offset(Offset(Offset(000378,Mul(GetLocal(4),14)),12),1)];
  Let b4 = M[Address(MakeHiLo(b2,b3))];
  Let loop_var5 = DeAddress(Offset(Address(MakeHiLo(b2,b3)),Add(Mul(2,Widen(b4)),1)));
  Label 6: {
    Let b7 = M[Address(loop_var5)];
    if (IsZeroByte(b7)) {
      Let b8 = M[000270];
      Let b9 = M[000271];
      SetByte 007684 b8;
      SetByte 007685 b9;
    } else {
      if (TestBit(b7,7)) {
        Let b10 = M[Offset(Address(loop_var5),1)];
        if (Equal(3,Widen(BwAnd(b7,63)))) {
          if (Equal(Widen(BwAnd(b10,63)),2)) {
            Let b11 = M[Offset(Address(loop_var5),2)];
            Let b12 = M[Offset(Offset(Address(loop_var5),2),1)];
            SetByte 007684 b11;
            SetByte 007685 b12;
          } else {
            Let b13 = M[Offset(Address(loop_var5),2)];
            SetByte 007684 HiByte(Widen(b13));
            SetByte 007685 LoByte(Widen(b13));
          }
        } else {
          Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),2),Widen(BwAnd(b10,63))));
          Goto: Label 6
        }
      } else {
        if (TestBit(b7,6)) {
          if (Equal(3,Widen(BwAnd(b7,63)))) {
            Let b14 = M[Offset(Address(loop_var5),1)];
            Let b15 = M[Offset(Offset(Address(loop_var5),1),1)];
            SetByte 007684 b14;
            SetByte 007685 b15;
          } else {
            Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),1),2));
            Goto: Label 6
          }
        } else {
          if (Equal(3,Widen(BwAnd(b7,63)))) {
            Let b16 = M[Offset(Address(loop_var5),1)];
            SetByte 007684 HiByte(Widen(b16));
            SetByte 007685 LoByte(Widen(b16));
          } else {
            Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),1),1));
            Goto: Label 6
          }
        }
      }
    }
  }
  TraceOperation 113531 (Store (Con 5) (Var (Global 239)));
  Let b17 = M[007684];
  Let b18 = M[007685];
  SetLocal 5 MakeHiLo(b17,b18);
  Jump: 113534
LocOp 113534:
  TraceOperation 113534 (Loadw (Var (Local 5)) (Con 0) Sp);
  Let b1 = M[Offset(Address(GetLocal(5)),0)];
  Let b2 = M[Offset(Offset(Address(GetLocal(5)),0),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 113538 (Jz (Var Sp) (Branch T (Dloc 113562)));
  PopStack popped3;
  if (IsZero(popped3)) {
    Jump: 113562
  } else {
    TraceOperation 113541 (Jg (Var (Local 1)) (Con 0) (Branch F (Dloc 113562)));
    if (GreaterThan(GetLocal(1),0)) {
      TraceOperation 113545 (Loadb (Var (Local 5)) (Con 2) Sp);
      Let b4 = M[Offset(Address(GetLocal(5)),2)];
      PushStack Widen(b4);
      TraceOperation 113549 (Add (Var (Local 5)) (Var Sp) Sp);
      PopStack popped5;
      PushStack Add(GetLocal(5),popped5);
      TraceOperation 113553 (Add (Var Sp) (Con 3) (Local 5));
      PopStack popped6;
      SetLocal 5 Add(popped6,3);
      TraceOperation 113557 (Dec (Con 1));
      SetLocal 1 Sub(GetLocal(1),1);
      TraceOperation 113559 (Jump 113534);
      Jump: 113534
    } else {
      Jump: 113562
    }
  }
LocOp 113562:
  TraceOperation 113562 (Loadw (Var (Local 5)) (Con 0) Sp);
  Let b1 = M[Offset(Address(GetLocal(5)),0)];
  Let b2 = M[Offset(Offset(Address(GetLocal(5)),0),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 113566 (And (Var Sp) (Con 32767) (Local 1));
  PopStack popped3;
  SetLocal 1 And(popped3,32767);
  Jump: 113572
LocOp 113572:
  TraceOperation 113572 (Store (Con 2) (Con 4719));
  SetLocal 2 4719;
  TraceOperation 113577 (Loadw (Var (Local 2)) (Con 0) (Local 3));
  Let b1 = M[Offset(Address(GetLocal(2)),0)];
  Let b2 = M[Offset(Offset(Address(GetLocal(2)),0),1)];
  SetLocal 3 MakeHiLo(b1,b2);
  TraceOperation 113581 (Jg (Var (Local 1)) (Con 0) (Branch F (Dloc 113596)));
  if (GreaterThan(GetLocal(1),0)) {
    TraceOperation 113585 (Jl (Var (Local 1)) (Var (Local 3)) (Branch F (Dloc 113596)));
    if (LessThan(GetLocal(1),GetLocal(3))) {
      TraceOperation 113589 (Loadw (Var (Local 2)) (Var (Local 1)) Sp);
      Let b3 = M[Offset(Address(GetLocal(2)),Mul(2,GetLocal(1)))];
      Let b4 = M[Offset(Offset(Address(GetLocal(2)),Mul(2,GetLocal(1))),1)];
      PushStack MakeHiLo(b3,b4);
      TraceOperation 113593 (Jz (Var Sp) (Branch F (Dloc 113616)));
      PopStack popped5;
      if (IsZero(popped5)) {
        Jump: 113596
      } else {
        Jump: 113616
      }
    } else {
      Jump: 113596
    }
  } else {
    Jump: 113596
  }
LocOp 113596:
  TraceOperation 113596 (Print "<number ");
  GamePrint "<number ";
  TraceOperation 113605 (Print_num (Var (Local 1)));
  GamePrint ShowNumber(GetLocal(1));
  TraceOperation 113608 (Print ">");
  GamePrint ">";
  TraceOperation 113613 (Jump 113622);
  Jump: 113622
LocOp 113616:
  TraceOperation 113616 (Loadw (Var (Local 2)) (Var (Local 1)) Sp);
  Let b1 = M[Offset(Address(GetLocal(2)),Mul(2,GetLocal(1)))];
  Let b2 = M[Offset(Offset(Address(GetLocal(2)),Mul(2,GetLocal(1))),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 113620 (Print_paddr (Var Sp));
  PopStack popped3;
  GamePrint GetText(PackedAddress Z5(popped3));
  Jump: 113622
LocOp 113622:
  TraceOperation 113622 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 113624:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 113625
LocOp 113625:
  TraceOperation 113625 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 113782:
  MakeRoutineFrame 0;
  Jump: 113783
LocOp 113783:
  TraceOperation 113783 (Ret (Con 18));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 18;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 114198:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 114199
LocOp 114199:
  TraceOperation 114199 (Ret (Con 467));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 467;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 115268:
  MakeRoutineFrame 0;
  Jump: 115269
LocOp 115269:
  TraceOperation 115269 (Load (Con 262) (Global 60));
  SetByte 007326 HiByte(GetLocal(6));
  SetByte 007327 LoByte(GetLocal(6));
  TraceOperation 115273 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 115582:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 115583
LocOp 115583:
  TraceOperation 115583 (Ret (Con 813));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 813;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 117630:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 117631
LocOp 117631:
  TraceOperation 117631 (Ret (Con 582));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 582;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 117994:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 117995
LocOp 117995:
  TraceOperation 117995 (Ret (Con -21339));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult -21339;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 118028:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 118029
LocOp 118029:
  TraceOperation 118029 (Ret (Con -21339));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult -21339;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 118492:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 118493
LocOp 118493:
  TraceOperation 118493 (Ret (Con -21339));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult -21339;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 120098:
  MakeRoutineFrame 0;
  Jump: 120099
LocOp 120099:
  TraceOperation 120099 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 120428:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 120429
LocOp 120429:
  TraceOperation 120429 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 120502:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 120503
LocOp 120503:
  TraceOperation 120503 (Ret (Con 870));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 870;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 121160:
  MakeRoutineFrame 0;
  Jump: 121161
LocOp 121161:
  TraceOperation 121161 (Jump 127892);
  Jump: 127892
--------------------------------------------------
LocRoutine 121184:
  MakeRoutineFrame 0;
  Jump: 121185
LocOp 121185:
  TraceOperation 121185 (Jump 127916);
  Jump: 127916
--------------------------------------------------
LocRoutine 121604:
  MakeRoutineFrame 0;
  Jump: 121605
LocOp 121605:
  TraceOperation 121605 (Jump 145824);
  Jump: 145824
--------------------------------------------------
LocRoutine 121626:
  MakeRoutineFrame 0;
  Jump: 121627
LocOp 121627:
  TraceOperation 121627 (Jump 145846);
  Jump: 145846
--------------------------------------------------
LocRoutine 121924:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 121925
LocOp 121925:
  TraceOperation 121925 (Ret (Con 192));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 192;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 122078:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 122079
LocOp 122079:
  TraceOperation 122079 (Ret (Con 294));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 294;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 122112:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 122113
LocOp 122113:
  TraceOperation 122113 (Ret (Con 294));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 294;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 122186:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 122187
LocOp 122187:
  TraceOperation 122187 (Ret (Con 558));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 558;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 122220:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 122221
LocOp 122221:
  TraceOperation 122221 (Ret (Con 558));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 558;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 123204:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 123205
LocOp 123205:
  TraceOperation 123205 (Add (Var (Global 90)) (Var (Global 80)) (Global 79));
  Let b1 = M[007386];
  Let b2 = M[007387];
  Let b3 = M[007366];
  Let b4 = M[007367];
  SetByte 007364 HiByte(Add(MakeHiLo(b1,b2),MakeHiLo(b3,b4)));
  SetByte 007365 LoByte(Add(MakeHiLo(b1,b2),MakeHiLo(b3,b4)));
  TraceOperation 123209 (Get_prop (Var (Global 24)) (Con 244) (Global 194));
  Let b5 = M[007254];
  Let b6 = M[007255];
  Let b7 = M[Offset(Offset(000378,Mul(MakeHiLo(b5,b6),14)),12)];
  Let b8 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b5,b6),14)),12),1)];
  Let b9 = M[Address(MakeHiLo(b7,b8))];
  Let loop_var10 = DeAddress(Offset(Address(MakeHiLo(b7,b8)),Add(Mul(2,Widen(b9)),1)));
  Label 11: {
    Let b12 = M[Address(loop_var10)];
    if (IsZeroByte(b12)) {
      Let b13 = M[000752];
      Let b14 = M[000753];
      SetByte 007594 b13;
      SetByte 007595 b14;
    } else {
      if (TestBit(b12,7)) {
        Let b15 = M[Offset(Address(loop_var10),1)];
        if (Equal(244,Widen(BwAnd(b12,63)))) {
          if (Equal(Widen(BwAnd(b15,63)),2)) {
            Let b16 = M[Offset(Address(loop_var10),2)];
            Let b17 = M[Offset(Offset(Address(loop_var10),2),1)];
            SetByte 007594 b16;
            SetByte 007595 b17;
          } else {
            Let b18 = M[Offset(Address(loop_var10),2)];
            SetByte 007594 HiByte(Widen(b18));
            SetByte 007595 LoByte(Widen(b18));
          }
        } else {
          Assign loop_var10 = DeAddress(Offset(Offset(Address(loop_var10),2),Widen(BwAnd(b15,63))));
          Goto: Label 11
        }
      } else {
        if (TestBit(b12,6)) {
          if (Equal(244,Widen(BwAnd(b12,63)))) {
            Let b19 = M[Offset(Address(loop_var10),1)];
            Let b20 = M[Offset(Offset(Address(loop_var10),1),1)];
            SetByte 007594 b19;
            SetByte 007595 b20;
          } else {
            Assign loop_var10 = DeAddress(Offset(Offset(Address(loop_var10),1),2));
            Goto: Label 11
          }
        } else {
          if (Equal(244,Widen(BwAnd(b12,63)))) {
            Let b21 = M[Offset(Address(loop_var10),1)];
            SetByte 007594 HiByte(Widen(b21));
            SetByte 007595 LoByte(Widen(b21));
          } else {
            Assign loop_var10 = DeAddress(Offset(Offset(Address(loop_var10),1),1));
            Goto: Label 11
          }
        }
      }
    }
  }
  TraceOperation 123213 (Inc_chk (Con 0) (Con 0) (Branch F (Dloc 129737)));
  PopStack popped22;
  PushStack Add(popped22,1);
  if (GreaterThanEqual(popped22,0)) {
  }
  TraceOperation 123218 (Test_attr (Con 224) (Var (Global 3)) (Branch F (Dloc 129963)));
  Let b23 = M[007212];
  Let b24 = M[007213];
  Let b25 = M[Offset(003514,Div8(MakeHiLo(b23,b24)))];
  if (TestBit(b25,SevenMinus(LoByte(Mod(MakeHiLo(b23,b24),8))))) {
    TraceOperation 123223 Rfalse;
    PopFrame;
    PopReturnAddress return_address_26;
    SetResult 0;
    JumpIndirect: (return) return_address_26
  } else {
    Jump: 129963
  }
--------------------------------------------------
LocRoutine 123582:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 123583
LocOp 123583:
  TraceOperation 123583 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 124546:
  MakeRoutineFrame 0;
  Jump: 124547
LocOp 124547:
  TraceOperation 124547 (Jump 145495);
  Jump: 145495
--------------------------------------------------
LocRoutine 124564:
  MakeRoutineFrame 0;
  Jump: 124565
LocOp 124565:
  TraceOperation 124565 (Jump 145513);
  Jump: 145513
--------------------------------------------------
LocRoutine 124710:
  MakeRoutineFrame 0;
  Jump: 124711
LocOp 124711:
  TraceOperation 124711 (Jump 135777);
  Jump: 135777
--------------------------------------------------
LocRoutine 124716:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 124717
LocOp 124717:
  TraceOperation 124717 (Ret (Con 11287));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 11287;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 124732:
  MakeRoutineFrame 0;
  Jump: 124733
LocOp 124733:
  TraceOperation 124733 (Jump 135799);
  Jump: 135799
--------------------------------------------------
LocRoutine 124738:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 124739
LocOp 124739:
  TraceOperation 124739 (Ret (Con 11287));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 11287;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 125578:
  MakeRoutineFrame 0;
  Jump: 125579
LocOp 125579:
  TraceOperation 125579 (Jump 140794);
  Jump: 140794
--------------------------------------------------
LocRoutine 125600:
  MakeRoutineFrame 0;
  Jump: 125601
LocOp 125601:
  TraceOperation 125601 (Jump 140816);
  Jump: 140816
--------------------------------------------------
LocRoutine 128318:
  MakeRoutineFrame 0;
  Jump: 128319
LocOp 128319:
  TraceOperation 128319 (Ret (Con 42));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 42;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 128348:
  MakeRoutineFrame 0;
  Jump: 128349
LocOp 128349:
  TraceOperation 128349 (Ret (Con 42));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 42;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 129318:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 129319
LocOp 129319:
  TraceOperation 129319 (Ret (Con 11287));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 11287;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 129352:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 129353
LocOp 129353:
  TraceOperation 129353 (Ret (Con 11287));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 11287;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 129908:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 129909
LocOp 129909:
  TraceOperation 129909 (Ret (Con 430));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 430;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 129932:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 129933
LocOp 129933:
  TraceOperation 129933 (Ret (Con 200));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 200;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 129964:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 129965
LocOp 129965:
  TraceOperation 129965 (Ret (Con 200));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 200;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 129996:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 129997
LocOp 129997:
  TraceOperation 129997 (Ret (Con 200));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 200;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 130078:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 130079
LocOp 130079:
  TraceOperation 130079 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 130536:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 130537
LocOp 130537:
  TraceOperation 130537 (Remove_obj (Con 53));
  Let b1 = M[001126];
  Let b2 = M[001127];
  if (IsZero(MakeHiLo(b1,b2))) {} else {
    Let b3 = M[Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),10)];
    Let b4 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),10),1)];
    if (Equal(MakeHiLo(b3,b4),53)) {
      Let b5 = M[001128];
      Let b6 = M[001129];
      SetByte Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),10) b5;
      SetByte Offset(Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),10),1) b6;
    } else {
      Let loop_var7 = MakeHiLo(b3,b4);
      Label 8: {
        Let b9 = M[Offset(Offset(000378,Mul(loop_var7,14)),8)];
        Let b10 = M[Offset(Offset(Offset(000378,Mul(loop_var7,14)),8),1)];
        if (Equal(MakeHiLo(b9,b10),53)) {
          Let b11 = M[001128];
          Let b12 = M[001129];
          SetByte Offset(Offset(000378,Mul(loop_var7,14)),8) b11;
          SetByte Offset(Offset(Offset(000378,Mul(loop_var7,14)),8),1) b12;
        } else {
          Assign loop_var7 = MakeHiLo(b9,b10);
          Goto: Label 8
        }
      }
    }
  }
  SetByte 001126 0;
  SetByte 001127 0;
  TraceOperation 130539 (Div (Var (Local 2)) (Con 170) (Global 66));
  SetByte 007338 HiByte(Div(GetLocal(2),170));
  SetByte 007339 LoByte(Div(GetLocal(2),170));
  TraceOperation 130543 Rfalse;
  PopFrame;
  PopReturnAddress return_address_13;
  SetResult 0;
  JumpIndirect: (return) return_address_13
--------------------------------------------------
LocRoutine 130592:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 130593
LocOp 130593:
  TraceOperation 130593 (Jin (Con 65) (Var (Global 48)) (Branch F (Dloc 129358)));
  Let b1 = M[007302];
  Let b2 = M[007303];
  Let b3 = M[001294];
  Let b4 = M[001295];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 130598 (Set_attr (Var Sp) (Con 83));
    PopStack popped5;
    Let b6 = M[Offset(Offset(000378,Mul(popped5,14)),10)];
    SetByte Offset(Offset(000378,Mul(popped5,14)),10) SetBit(b6,4);
    TraceOperation 130601 (Call (Fvar (Local 2)) [Con 139] (Local 2));
    if (IsZeroAddress(PackedAddress Z5(GetLocal(2)))) {
      SetLocal 2 0;
      Jump: 130605
    } else {
      PushFrame;
      PushReturnAddress 130601;
      SetLocal 1 139;
      SetNumberActuals 1;
      JumpIndirect: (routine) PackedAddress Z5(GetLocal(2))
    }
  } else {
    Jump: 129358
  }
LocReturn 130601:
  SetLocal 2 call_result;
  Jump: 130605
LocOp 130605:
  TraceOperation 130605 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 130694:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 130695
LocOp 130695:
  TraceOperation 130695 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 130792:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 130793
LocOp 130793:
  TraceOperation 130793 (Div (Con 82) (Var (Global 144)) (Global 97));
  Let b1 = M[007494];
  Let b2 = M[007495];
  SetByte 007400 HiByte(Div(82,MakeHiLo(b1,b2)));
  SetByte 007401 LoByte(Div(82,MakeHiLo(b1,b2)));
  TraceOperation 130797 (Dec (Var (Global 84)));
  Let b3 = M[007374];
  Let b4 = M[007375];
  if (IsZeroByte(b4)) {
    PopStack popped5;
    PushStack Sub(popped5,1);
  } else {
    if (LessThanByte(b4,16)) {
      SetLocal b4 Sub(GetLocal(b4),1);
    } else {
      Let b6 = M[Offset(007206,Mul(2,Widen(MinusByte(b4,16))))];
      Let b7 = M[Offset(Offset(007206,Mul(2,Widen(MinusByte(b4,16)))),1)];
      SetByte Offset(007206,Mul(2,Widen(MinusByte(b4,16)))) HiByte(Sub(MakeHiLo(b6,b7),1));
      SetByte Offset(Offset(007206,Mul(2,Widen(MinusByte(b4,16)))),1) LoByte(Sub(MakeHiLo(b6,b7),1));
    }
  }
  TraceOperation 130799 Ret_popped;
  PopStack popped8;
  PopFrame;
  PopReturnAddress return_address_9;
  SetResult popped8;
  JumpIndirect: (return) return_address_9
--------------------------------------------------
LocRoutine 131728:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 131729
LocOp 131729:
  TraceOperation 131729 (Remove_obj (Con 53));
  Let b1 = M[001126];
  Let b2 = M[001127];
  if (IsZero(MakeHiLo(b1,b2))) {} else {
    Let b3 = M[Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),10)];
    Let b4 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),10),1)];
    if (Equal(MakeHiLo(b3,b4),53)) {
      Let b5 = M[001128];
      Let b6 = M[001129];
      SetByte Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),10) b5;
      SetByte Offset(Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),10),1) b6;
    } else {
      Let loop_var7 = MakeHiLo(b3,b4);
      Label 8: {
        Let b9 = M[Offset(Offset(000378,Mul(loop_var7,14)),8)];
        Let b10 = M[Offset(Offset(Offset(000378,Mul(loop_var7,14)),8),1)];
        if (Equal(MakeHiLo(b9,b10),53)) {
          Let b11 = M[001128];
          Let b12 = M[001129];
          SetByte Offset(Offset(000378,Mul(loop_var7,14)),8) b11;
          SetByte Offset(Offset(Offset(000378,Mul(loop_var7,14)),8),1) b12;
        } else {
          Assign loop_var7 = MakeHiLo(b9,b10);
          Goto: Label 8
        }
      }
    }
  }
  SetByte 001126 0;
  SetByte 001127 0;
  TraceOperation 131731 (Div (Var (Local 2)) (Con 170) (Global 66));
  SetByte 007338 HiByte(Div(GetLocal(2),170));
  SetByte 007339 LoByte(Div(GetLocal(2),170));
  TraceOperation 131735 Rfalse;
  PopFrame;
  PopReturnAddress return_address_13;
  SetResult 0;
  JumpIndirect: (return) return_address_13
--------------------------------------------------
LocRoutine 131752:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 131753
LocOp 131753:
  TraceOperation 131753 (Remove_obj (Con 53));
  Let b1 = M[001126];
  Let b2 = M[001127];
  if (IsZero(MakeHiLo(b1,b2))) {} else {
    Let b3 = M[Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),10)];
    Let b4 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),10),1)];
    if (Equal(MakeHiLo(b3,b4),53)) {
      Let b5 = M[001128];
      Let b6 = M[001129];
      SetByte Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),10) b5;
      SetByte Offset(Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),10),1) b6;
    } else {
      Let loop_var7 = MakeHiLo(b3,b4);
      Label 8: {
        Let b9 = M[Offset(Offset(000378,Mul(loop_var7,14)),8)];
        Let b10 = M[Offset(Offset(Offset(000378,Mul(loop_var7,14)),8),1)];
        if (Equal(MakeHiLo(b9,b10),53)) {
          Let b11 = M[001128];
          Let b12 = M[001129];
          SetByte Offset(Offset(000378,Mul(loop_var7,14)),8) b11;
          SetByte Offset(Offset(Offset(000378,Mul(loop_var7,14)),8),1) b12;
        } else {
          Assign loop_var7 = MakeHiLo(b9,b10);
          Goto: Label 8
        }
      }
    }
  }
  SetByte 001126 0;
  SetByte 001127 0;
  TraceOperation 131755 (Div (Var (Local 2)) (Con 170) (Global 66));
  SetByte 007338 HiByte(Div(GetLocal(2),170));
  SetByte 007339 LoByte(Div(GetLocal(2),170));
  TraceOperation 131759 Rfalse;
  PopFrame;
  PopReturnAddress return_address_13;
  SetResult 0;
  JumpIndirect: (return) return_address_13
--------------------------------------------------
LocRoutine 131844:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 131845
LocOp 131845:
  TraceOperation 131845 (Remove_obj (Con 53));
  Let b1 = M[001126];
  Let b2 = M[001127];
  if (IsZero(MakeHiLo(b1,b2))) {} else {
    Let b3 = M[Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),10)];
    Let b4 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),10),1)];
    if (Equal(MakeHiLo(b3,b4),53)) {
      Let b5 = M[001128];
      Let b6 = M[001129];
      SetByte Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),10) b5;
      SetByte Offset(Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),10),1) b6;
    } else {
      Let loop_var7 = MakeHiLo(b3,b4);
      Label 8: {
        Let b9 = M[Offset(Offset(000378,Mul(loop_var7,14)),8)];
        Let b10 = M[Offset(Offset(Offset(000378,Mul(loop_var7,14)),8),1)];
        if (Equal(MakeHiLo(b9,b10),53)) {
          Let b11 = M[001128];
          Let b12 = M[001129];
          SetByte Offset(Offset(000378,Mul(loop_var7,14)),8) b11;
          SetByte Offset(Offset(Offset(000378,Mul(loop_var7,14)),8),1) b12;
        } else {
          Assign loop_var7 = MakeHiLo(b9,b10);
          Goto: Label 8
        }
      }
    }
  }
  SetByte 001126 0;
  SetByte 001127 0;
  TraceOperation 131847 (Div (Var (Local 2)) (Con 170) (Global 66));
  SetByte 007338 HiByte(Div(GetLocal(2),170));
  SetByte 007339 LoByte(Div(GetLocal(2),170));
  TraceOperation 131851 Rfalse;
  PopFrame;
  PopReturnAddress return_address_13;
  SetResult 0;
  JumpIndirect: (return) return_address_13
--------------------------------------------------
LocRoutine 131868:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 131869
LocOp 131869:
  TraceOperation 131869 (Add (Con 34) (Var Sp) (Global 97));
  PopStack popped1;
  SetByte 007400 HiByte(Add(34,popped1));
  SetByte 007401 LoByte(Add(34,popped1));
  TraceOperation 131873 (Dec (Var (Global 84)));
  Let b2 = M[007374];
  Let b3 = M[007375];
  if (IsZeroByte(b3)) {
    PopStack popped4;
    PushStack Sub(popped4,1);
  } else {
    if (LessThanByte(b3,16)) {
      SetLocal b3 Sub(GetLocal(b3),1);
    } else {
      Let b5 = M[Offset(007206,Mul(2,Widen(MinusByte(b3,16))))];
      Let b6 = M[Offset(Offset(007206,Mul(2,Widen(MinusByte(b3,16)))),1)];
      SetByte Offset(007206,Mul(2,Widen(MinusByte(b3,16)))) HiByte(Sub(MakeHiLo(b5,b6),1));
      SetByte Offset(Offset(007206,Mul(2,Widen(MinusByte(b3,16)))),1) LoByte(Sub(MakeHiLo(b5,b6),1));
    }
  }
  TraceOperation 131875 Ret_popped;
  PopStack popped7;
  PopFrame;
  PopReturnAddress return_address_8;
  SetResult popped7;
  JumpIndirect: (return) return_address_8
--------------------------------------------------
LocRoutine 132110:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 132111
LocOp 132111:
  TraceOperation 132111 (Ret (Con 11287));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 11287;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 132510:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 132511
LocOp 132511:
  TraceOperation 132511 (Remove_obj (Con 53));
  Let b1 = M[001126];
  Let b2 = M[001127];
  if (IsZero(MakeHiLo(b1,b2))) {} else {
    Let b3 = M[Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),10)];
    Let b4 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),10),1)];
    if (Equal(MakeHiLo(b3,b4),53)) {
      Let b5 = M[001128];
      Let b6 = M[001129];
      SetByte Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),10) b5;
      SetByte Offset(Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),10),1) b6;
    } else {
      Let loop_var7 = MakeHiLo(b3,b4);
      Label 8: {
        Let b9 = M[Offset(Offset(000378,Mul(loop_var7,14)),8)];
        Let b10 = M[Offset(Offset(Offset(000378,Mul(loop_var7,14)),8),1)];
        if (Equal(MakeHiLo(b9,b10),53)) {
          Let b11 = M[001128];
          Let b12 = M[001129];
          SetByte Offset(Offset(000378,Mul(loop_var7,14)),8) b11;
          SetByte Offset(Offset(Offset(000378,Mul(loop_var7,14)),8),1) b12;
        } else {
          Assign loop_var7 = MakeHiLo(b9,b10);
          Goto: Label 8
        }
      }
    }
  }
  SetByte 001126 0;
  SetByte 001127 0;
  TraceOperation 132513 (Div (Var (Local 2)) (Con 170) (Global 66));
  SetByte 007338 HiByte(Div(GetLocal(2),170));
  SetByte 007339 LoByte(Div(GetLocal(2),170));
  TraceOperation 132517 Rfalse;
  PopFrame;
  PopReturnAddress return_address_13;
  SetResult 0;
  JumpIndirect: (return) return_address_13
--------------------------------------------------
LocRoutine 132528:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 132529
LocOp 132529:
  TraceOperation 132529 Quit;
  Quit
--------------------------------------------------
LocRoutine 132556:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 132557
LocOp 132557:
  TraceOperation 132557 Quit;
  Quit
--------------------------------------------------
LocRoutine 132696:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 132697
LocOp 132697:
  TraceOperation 132697 (Print_obj (Var (Global 66)));
  Let b1 = M[007338];
  Let b2 = M[007339];
  Let b3 = M[Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),12)];
  Let b4 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),12),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  Let ite_res6 = Ite((IsZeroByte(b5),"",GetText(Offset(Address(MakeHiLo(b3,b4)),1))));
  GamePrint ite_res6;
  TraceOperation 132699 Rfalse;
  PopFrame;
  PopReturnAddress return_address_7;
  SetResult 0;
  JumpIndirect: (return) return_address_7
--------------------------------------------------
LocRoutine 132990:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 132991
LocOp 132991:
  TraceOperation 132991 (Ret (Con 11287));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 11287;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 133260:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 133261
LocOp 133261:
  TraceOperation 133261 (Ret (Con 788));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 788;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 133418:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 133419
LocOp 133419:
  TraceOperation 133419 (Ret (Con 11289));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 11289;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 134010:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 134011
LocOp 134011:
  TraceOperation 134011 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 134154:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 134155
LocOp 134155:
  TraceOperation 134155 (Ret (Con 11287));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 11287;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 134652:
  MakeRoutineFrame 0;
  Jump: 134653
LocOp 134653:
  TraceOperation 134653 (Ret (Con 24009));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 24009;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 135146:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 135147
LocOp 135147:
  TraceOperation 135147 (Get_sibling (Con 36) (Global 172) (Branch F (Dloc 130246)));
  Let b1 = M[000890];
  Let b2 = M[000891];
  SetByte 007550 b1;
  SetByte 007551 b2;
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 130246
  } else {
    TraceOperation 135152 (Sub (Con 212) (Var (Global 61)) (Global 57));
    Let b3 = M[007328];
    Let b4 = M[007329];
    SetByte 007320 HiByte(Sub(212,MakeHiLo(b3,b4)));
    SetByte 007321 LoByte(Sub(212,MakeHiLo(b3,b4)));
    TraceOperation 135156 (Je [Con 134,Con 96] (Branch F (Dloc 141405)));
    Jump: 141405
  }
--------------------------------------------------
LocRoutine 136090:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 136091
LocOp 136091:
  TraceOperation 136091 (Ret (Con 980));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 980;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 136476:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 136477
LocOp 136477:
  TraceOperation 136477 (Print_obj (Var (Global 77)));
  Let b1 = M[007360];
  Let b2 = M[007361];
  Let b3 = M[Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),12)];
  Let b4 = M[Offset(Offset(Offset(000378,Mul(MakeHiLo(b1,b2),14)),12),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  Let ite_res6 = Ite((IsZeroByte(b5),"",GetText(Offset(Address(MakeHiLo(b3,b4)),1))));
  GamePrint ite_res6;
  TraceOperation 136479 (Inc_chk (Var (Global 184)) (Con 165) (Branch F Dfalse));
  Let b7 = M[007574];
  Let b8 = M[007575];
  if (IsZeroByte(b8)) {
    PopStack popped9;
    PushStack Add(popped9,1);
    if (GreaterThanEqual(popped9,165)) {} else {
      PopFrame;
      PopReturnAddress return_address_10;
    }
  } else {
    if (LessThanByte(b8,16)) {
      SetLocal b8 Add(GetLocal(b8),1);
      if (GreaterThanEqual(GetLocal(b8),165)) {} else {
        PopFrame;
        PopReturnAddress return_address_11;
      }
    } else {
      Let b12 = M[Offset(007206,Mul(2,Widen(MinusByte(b8,16))))];
      Let b13 = M[Offset(Offset(007206,Mul(2,Widen(MinusByte(b8,16)))),1)];
      SetByte Offset(007206,Mul(2,Widen(MinusByte(b8,16)))) HiByte(Add(MakeHiLo(b12,b13),1));
      SetByte Offset(Offset(007206,Mul(2,Widen(MinusByte(b8,16)))),1) LoByte(Add(MakeHiLo(b12,b13),1));
      if (GreaterThanEqual(MakeHiLo(b12,b13),165)) {} else {
        PopFrame;
        PopReturnAddress return_address_14;
      }
    }
  }
  TraceOperation 136484 (Get_next_prop (Con 45) (Con 42) (Global 218));
  Let b15 = M[001020];
  Let b16 = M[001021];
  Let b17 = M[Address(MakeHiLo(b15,b16))];
  Let loop_var18 = DeAddress(Offset(Address(MakeHiLo(b15,b16)),Add(Mul(2,Widen(b17)),1)));
  Label 19: {
    Let b20 = M[Address(loop_var18)];
    if (IsZeroByte(b20)) {
      Error: ("getNextProp",42)
    } else {
      if (TestBit(b20,7)) {
        Let b21 = M[Offset(Address(loop_var18),1)];
        if (Equal(42,Widen(BwAnd(b20,63)))) {
          Let b22 = M[Offset(Offset(Address(loop_var18),2),Widen(BwAnd(b21,63)))];
          SetByte 007642 HiByte(Widen(BwAnd(b22,63)));
          SetByte 007643 LoByte(Widen(BwAnd(b22,63)));
        } else {
          Assign loop_var18 = DeAddress(Offset(Offset(Address(loop_var18),2),Widen(BwAnd(b21,63))));
          Goto: Label 19
        }
      } else {
        if (TestBit(b20,6)) {
          if (Equal(42,Widen(BwAnd(b20,63)))) {
            Let b23 = M[Offset(Offset(Address(loop_var18),1),2)];
            SetByte 007642 HiByte(Widen(BwAnd(b23,63)));
            SetByte 007643 LoByte(Widen(BwAnd(b23,63)));
          } else {
            Assign loop_var18 = DeAddress(Offset(Offset(Address(loop_var18),1),2));
            Goto: Label 19
          }
        } else {
          if (Equal(42,Widen(BwAnd(b20,63)))) {
            Let b24 = M[Offset(Offset(Address(loop_var18),1),1)];
            SetByte 007642 HiByte(Widen(BwAnd(b24,63)));
            SetByte 007643 LoByte(Widen(BwAnd(b24,63)));
          } else {
            Assign loop_var18 = DeAddress(Offset(Offset(Address(loop_var18),1),1));
            Goto: Label 19
          }
        }
      }
    }
  }
  TraceOperation 136488 (Je [Con 216,Con 0] (Branch T Dfalse));
  TraceOperation 136492 (Jg (Var (Global 39)) (Var (Global 66)) (Branch F (Dloc 136538)));
  Let b25 = M[007284];
  Let b26 = M[007285];
  Let b27 = M[007338];
  Let b28 = M[007339];
  if (GreaterThan(MakeHiLo(b25,b26),MakeHiLo(b27,b28))) {
    TraceOperation 136496 (Jg (Con 18) (Con 42) (Branch F (Dloc 132661)));
    Jump: 132661
  } else {
    Jump: 136538
  }
--------------------------------------------------
LocRoutine 136566:
  MakeRoutineFrame 0;
  Jump: 136567
LocOp 136567:
  TraceOperation 136567 (Ret (Con 24009));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 24009;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 136598:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 136599
LocOp 136599:
  TraceOperation 136599 (Ret (Con 813));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 813;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 136788:
  MakeRoutineFrame 0;
  Jump: 136789
LocOp 136789:
  TraceOperation 136789 (Ret (Con 24009));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 24009;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 136814:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 136815
LocOp 136815:
  TraceOperation 136815 (Ret (Con 11443));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 11443;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 137180:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 137181
LocOp 137181:
  TraceOperation 137181 (Ret (Con 582));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 582;
  JumpIndirect: (return) return_address_1
