Code for 513 routines
--[1]--------------------------------------------------
LocRoutine 012202:
  MakeRoutineFrame 0;
  Jump: 012203
LocOp 012203:
  TraceOperation 012203 (Jump 012460);
  Jump: 012460
--[2]--------------------------------------------------
LocRoutine 012210:
  MakeRoutineFrame 0;
  Jump: 012211
LocOp 012211:
  TraceOperation 012211 (Jump 012222);
  Jump: 012222
--[3]--------------------------------------------------
LocRoutine 012236:
  MakeRoutineFrame 0;
  Jump: 012237
LocOp 012237:
  TraceOperation 012237 (Ret (Con 511));
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 511
--[4]--------------------------------------------------
LocRoutine 015996:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 34;
  }
  Jump: 015999
LocOp 015999:
  TraceOperation 015999 (Ret (Con -21037));
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: -21037
--[5]--------------------------------------------------
LocRoutine 016158:
  MakeRoutineFrame 0;
  Jump: 016159
LocOp 016159:
  TraceOperation 016159 (Dec_chk (Con 210) (Var (Global 188)) (Branch T (Dloc 009315)));
  Let b1 = M[009205];
  Let b2 = M[009206];
  Let b3 = M[009193];
  Let b4 = M[009194];
  if (LessThanEqual(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    SetByte 009205 HiByte(Sub(MakeHiLo(b1,b2),1));
    SetByte 009206 LoByte(Sub(MakeHiLo(b1,b2),1));
    Jump: 009315
  } else {
    SetByte 009205 HiByte(Sub(MakeHiLo(b1,b2),1));
    SetByte 009206 LoByte(Sub(MakeHiLo(b1,b2),1));
    TraceOperation 016164 (Ret (Con 0));
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 0
  }
--[6]--------------------------------------------------
LocRoutine 017166:
  MakeRoutineFrame 0;
  Jump: 017167
LocOp 017167:
  TraceOperation 017167 (Sub (Con 210) (Var (Global 132)) (Global 149));
  Let b1 = M[009081];
  Let b2 = M[009082];
  SetByte 009115 HiByte(Sub(210,MakeHiLo(b1,b2)));
  SetByte 009116 LoByte(Sub(210,MakeHiLo(b1,b2)));
  TraceOperation 017171 (Jz (Con 256) (Branch F (Dloc 014575)));
  Jump: 014575
--[7]--------------------------------------------------
LocRoutine 017236:
  MakeRoutineFrame 0;
  Jump: 017237
LocOp 017237:
  TraceOperation 017237 (Mod (Con 165) (Var (Global 132)) (Global 149));
  Let b1 = M[009081];
  Let b2 = M[009082];
  SetByte 009115 HiByte(Mod(165,MakeHiLo(b1,b2)));
  SetByte 009116 LoByte(Mod(165,MakeHiLo(b1,b2)));
  TraceOperation 017241 (Je [Var (Global 110),Con 0] (Branch F (Dloc 015599)));
  Let b3 = M[009037];
  Let b4 = M[009038];
  if (Equal(MakeHiLo(b3,b4),0)) {
    TraceOperation 017246 New_line;
    GamePrint "\n";
    TraceOperation 017247 (Test_attr (Con 65) (Var (Global 131)) (Branch F (Dloc 017308)));
    Let b5 = M[009079];
    Let b6 = M[009080];
    Let b7 = M[Offset(001326,Div8(MakeHiLo(b5,b6)))];
    if (TestBit(b7,SevenMinus(LoByte(Mod(MakeHiLo(b5,b6),8))))) {
      TraceOperation 017252 (Test (Var (Global 168)) (Con 234) (Branch F Dtrue));
      Let b8 = M[009153];
      Let b9 = M[009154];
      if (Equal(And(MakeHiLo(b8,b9),234),234)) {
        TraceOperation 017256 (Get_sibling (Var Sp) (Global 42) (Branch F (Dloc 017279)));
        PopStack popped10;
        Let b11 = M[Offset(Offset(000741,Mul(popped10,9)),5)];
        SetByte 008901 HiByte(Widen(b11));
        SetByte 008902 LoByte(Widen(b11));
        if (IsZero(Widen(b11))) {
          Jump: 017279
        } else {
          TraceOperation 017260 (Ret (Con 24));
          PopFrame return_address_12;
          JumpReturn: return_address_12, result: 24
        }
      } else {
        PopFrame return_address_13;
        JumpReturn: return_address_13, result: 1
      }
    } else {
      Jump: 017308
    }
  } else {
    Jump: 015599
  }
--[8]--------------------------------------------------
LocRoutine 017418:
  MakeRoutineFrame 0;
  Jump: 017419
LocOp 017419:
  TraceOperation 017419 (Je [Var (Global 193),Con 196] (Branch T (Dloc 010575)));
  Let b1 = M[009203];
  Let b2 = M[009204];
  if (Equal(MakeHiLo(b1,b2),196)) {
    Jump: 010575
  } else {
    TraceOperation 017424 Ret_popped;
    PopStack popped3;
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: popped3
  }
--[9]--------------------------------------------------
LocRoutine 017684:
  MakeRoutineFrame 0;
  Jump: 017685
LocOp 017685:
  TraceOperation 017685 (Test (Var (Global 67)) (Con 161) (Branch T (Dloc 010904)));
  Let b1 = M[008951];
  Let b2 = M[008952];
  if (Equal(And(MakeHiLo(b1,b2),161),161)) {
    Jump: 010904
  } else {
    TraceOperation 017690 (Je [Con 0,Con 71] (Branch F (Dloc 017711)));
    Jump: 017711
  }
--[10]--------------------------------------------------
LocRoutine 018972:
  MakeRoutineFrame 0;
  Jump: 018973
LocOp 018973:
  TraceOperation 018973 (Jl (Var (Global 22)) (Var (Global 160)) (Branch T (Dloc 012192)));
  Let b1 = M[008861];
  Let b2 = M[008862];
  Let b3 = M[009137];
  Let b4 = M[009138];
  if (LessThan(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    Jump: 012192
  } else {
    TraceOperation 018978 (Je [Con 0,Con 98] (Branch F (Dloc 012573)));
    Jump: 012573
  }
--[11]--------------------------------------------------
LocRoutine 019546:
  MakeRoutineFrame 0;
  Jump: 019547
LocOp 019547:
  TraceOperation 019547 (Jin (Var (Global 214)) (Var (Global 197)) (Branch F (Dloc 016606)));
  Let b1 = M[009245];
  Let b2 = M[009246];
  Let b3 = M[009211];
  Let b4 = M[009212];
  Let b5 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),4)];
  if (Equal(MakeHiLo(b3,b4),Widen(b5))) {
    TraceOperation 019552 (Je [Con 0,Con 102] (Branch T (Dloc 019596)));
    TraceOperation 019556 (Ret (Con 26));
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 26
  } else {
    Jump: 016606
  }
--[12]--------------------------------------------------
LocRoutine 020024:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 020027
LocOp 020027:
  TraceOperation 020027 (Print "a ");
  GamePrint "a ";
  TraceOperation 020030 (Print_obj (Var (Local 1)));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),7)];
  Let b2 = M[Offset(Offset(Offset(000741,Mul(GetLocal(1),9)),7),1)];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  if (IsZeroByte(b3)) {
    GamePrint "";
    TraceOperation 020032 Rtrue;
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
    TraceOperation 020032 Rtrue;
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  }
--[13]--------------------------------------------------
LocRoutine 020034:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 020037
LocOp 020037:
  TraceOperation 020037 (Jz (Var (Global 60)) (Branch T (Dloc 020049)));
  Let b1 = M[008937];
  Let b2 = M[008938];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 020049
  } else {
    TraceOperation 020040 (Random (Con 100) Sp);
    LetRandom random3 100;
    PushStack random3;
    TraceOperation 020044 (Jg (Var (Local 1)) (Var Sp) (Branch T Dtrue));
    PopStack popped4;
    if (GreaterThan(GetLocal(1),popped4)) {
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 1
    } else {
      TraceOperation 020048 Rfalse;
      PopFrame return_address_6;
      JumpReturn: return_address_6, result: 0
    }
  }
LocOp 020049:
  TraceOperation 020049 (Random (Con 300) Sp);
  LetRandom random1 300;
  PushStack random1;
  TraceOperation 020054 (Jg (Var (Local 1)) (Var Sp) (Branch T Dtrue));
  PopStack popped2;
  if (GreaterThan(GetLocal(1),popped2)) {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    TraceOperation 020058 Rfalse;
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 0
  }
--[14]--------------------------------------------------
LocRoutine 020060:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 020063
LocOp 020063:
  TraceOperation 020063 (Loadw (Var (Local 1)) (Con 0) Sp);
  Let b1 = M[Offset(Address(GetLocal(1)),0)];
  Let b2 = M[Offset(Offset(Address(GetLocal(1)),0),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 020067 (Random (Var Sp) Sp);
  PopStack popped3;
  LetRandom random4 popped3;
  PushStack random4;
  TraceOperation 020071 (Loadw (Var (Local 1)) (Var Sp) Sp);
  PopStack popped5;
  Let b6 = M[Offset(Address(GetLocal(1)),Mul(2,popped5))];
  Let b7 = M[Offset(Offset(Address(GetLocal(1)),Mul(2,popped5)),1)];
  PushStack MakeHiLo(b6,b7);
  TraceOperation 020075 Ret_popped;
  PopStack popped8;
  PopFrame return_address_9;
  JumpReturn: return_address_9, result: popped8
--[15]--------------------------------------------------
LocRoutine 020076:
  MakeRoutineFrame 6;
  if (LessThanByte(num_actuals,6)) {
    SetLocal 6 0;
    if (LessThanByte(num_actuals,5)) {
      SetLocal 5 0;
      if (LessThanByte(num_actuals,4)) {
        SetLocal 4 0;
        if (LessThanByte(num_actuals,3)) {
          SetLocal 3 0;
          if (LessThanByte(num_actuals,2)) {
            SetLocal 2 0;
            if (LessThanByte(num_actuals,1)) {
              SetLocal 1 0;
            }
          }
        }
      }
    }
  }
  Jump: 020089
LocOp 020089:
  TraceOperation 020089 (Loadw (Var (Local 1)) (Con 0) (Local 2));
  Let b1 = M[Offset(Address(GetLocal(1)),0)];
  Let b2 = M[Offset(Offset(Address(GetLocal(1)),0),1)];
  SetLocal 2 MakeHiLo(b1,b2);
  TraceOperation 020093 (Loadw (Var (Local 1)) (Con 1) (Local 3));
  Let b3 = M[Offset(Address(GetLocal(1)),2)];
  Let b4 = M[Offset(Offset(Address(GetLocal(1)),2),1)];
  SetLocal 3 MakeHiLo(b3,b4);
  TraceOperation 020097 (Dec (Con 2));
  SetLocal 2 Sub(GetLocal(2),1);
  TraceOperation 020099 (Add (Var (Local 1)) (Con 2) (Local 1));
  SetLocal 1 Add(GetLocal(1),2);
  TraceOperation 020103 (Mul (Var (Local 3)) (Con 2) Sp);
  PushStack Mul(GetLocal(3),2);
  TraceOperation 020107 (Add (Var (Local 1)) (Var Sp) (Local 6));
  PopStack popped5;
  SetLocal 6 Add(GetLocal(1),popped5);
  TraceOperation 020111 (Sub (Var (Local 2)) (Var (Local 3)) Sp);
  PushStack Sub(GetLocal(2),GetLocal(3));
  TraceOperation 020115 (Random (Var Sp) (Local 4));
  PopStack popped6;
  LetRandom random7 popped6;
  SetLocal 4 random7;
  TraceOperation 020119 (Loadw (Var (Local 6)) (Var (Local 4)) (Local 5));
  Let b8 = M[Offset(Address(GetLocal(6)),Mul(2,GetLocal(4)))];
  Let b9 = M[Offset(Offset(Address(GetLocal(6)),Mul(2,GetLocal(4))),1)];
  SetLocal 5 MakeHiLo(b8,b9);
  TraceOperation 020123 (Loadw (Var (Local 6)) (Con 1) Sp);
  Let b10 = M[Offset(Address(GetLocal(6)),2)];
  Let b11 = M[Offset(Offset(Address(GetLocal(6)),2),1)];
  PushStack MakeHiLo(b10,b11);
  TraceOperation 020127 (Storew (Var (Local 6)) (Var (Local 4)) (Var Sp));
  PopStack popped12;
  SetByte Offset(Address(GetLocal(6)),Mul(2,GetLocal(4))) HiByte(popped12);
  SetByte Offset(Offset(Address(GetLocal(6)),Mul(2,GetLocal(4))),1) LoByte(popped12);
  TraceOperation 020132 (Storew (Var (Local 6)) (Con 1) (Var (Local 5)));
  SetByte Offset(Address(GetLocal(6)),2) HiByte(GetLocal(5));
  SetByte Offset(Offset(Address(GetLocal(6)),2),1) LoByte(GetLocal(5));
  TraceOperation 020137 (Inc (Con 3));
  SetLocal 3 Add(GetLocal(3),1);
  TraceOperation 020139 (Je [Var (Local 3),Var (Local 2)] (Branch F (Dloc 020146)));
  if (Equal(GetLocal(3),GetLocal(2))) {
    TraceOperation 020143 (Store (Con 3) (Con 0));
    SetLocal 3 0;
    Jump: 020146
  } else {
    Jump: 020146
  }
LocOp 020146:
  TraceOperation 020146 (Storew (Var (Local 1)) (Con 0) (Var (Local 3)));
  SetByte Offset(Address(GetLocal(1)),0) HiByte(GetLocal(3));
  SetByte Offset(Offset(Address(GetLocal(1)),0),1) LoByte(GetLocal(3));
  TraceOperation 020151 (Ret (Var (Local 5)));
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: GetLocal(5)
--[16]--------------------------------------------------
LocRoutine 020154:
  MakeRoutineFrame 0;
  Jump: 020155
LocOp 020155:
  TraceOperation 020155 (Je [Var (Global 120),Con 43] (Branch F Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),43)) {
    TraceOperation 020159 (Call (Floc 037050) [Con 163] Sp);
    PushFrame 020159;
    SetLocal 1 163;
    JumpCall: 037050, #actuals: 1
  } else {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  }
LocReturn 020159:
  PushStack call_result;
  TraceOperation 020165 Rfalse;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 0
--[17]--------------------------------------------------
LocRoutine 020166:
  MakeRoutineFrame 0;
  Jump: 020167
LocOp 020167:
  TraceOperation 020167 (Jz (Var (Global 46)) (Branch T (Dloc 020193)));
  Let b1 = M[008909];
  Let b2 = M[008910];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 020193
  } else {
    TraceOperation 020170 (Test_attr (Con 174) (Con 11) (Branch F (Dloc 020176)));
    Let b3 = M[002308];
    if (TestBit(b3,4)) {
      TraceOperation 020174 (Ret (Con 57));
      PopFrame return_address_4;
      JumpReturn: return_address_4, result: 57
    } else {
      Jump: 020176
    }
  }
LocOp 020176:
  TraceOperation 020176 (Print "The grating is closed!");
  GamePrint "The grating is closed!";
  TraceOperation 020185 New_line;
  GamePrint "\n";
  TraceOperation 020186 (Call (Floc 038192) [Con 174] Sp);
  PushFrame 020186;
  SetLocal 1 174;
  JumpCall: 038192, #actuals: 1
LocReturn 020186:
  PushStack call_result;
  TraceOperation 020192 Rfalse;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 0
LocOp 020193:
  TraceOperation 020193 (Print "You can't go that way.");
  GamePrint "You can't go that way.";
  TraceOperation 020204 New_line;
  GamePrint "\n";
  TraceOperation 020205 Rfalse;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 0
--[18]--------------------------------------------------
LocRoutine 020206:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 020209
LocOp 020209:
  TraceOperation 020209 (Je [Var (Local 1),Con 1] (Branch F Dfalse));
  if (Equal(GetLocal(1),1)) {
    TraceOperation 020213 (Je [Var (Global 120),Con 69] (Branch F Dfalse));
    Let b1 = M[009057];
    Let b2 = M[009058];
    if (Equal(MakeHiLo(b1,b2),69)) {
      TraceOperation 020217 (Jz (Var (Global 118)) (Branch F Dfalse));
      Let b3 = M[009053];
      Let b4 = M[009054];
      if (IsZero(MakeHiLo(b3,b4))) {
        TraceOperation 020220 (Call (Floc 067174) [Con -26565] Sp);
        PushFrame 020220;
        SetLocal 1 -26565;
        JumpCall: 067174, #actuals: 1
      } else {
        PopFrame return_address_5;
        JumpReturn: return_address_5, result: 0
      }
    } else {
      PopFrame return_address_6;
      JumpReturn: return_address_6, result: 0
    }
  } else {
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 0
  }
LocReturn 020220:
  PushStack call_result;
  TraceOperation 020227 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[19]--------------------------------------------------
LocRoutine 020228:
  MakeRoutineFrame 0;
  Jump: 020229
LocOp 020229:
  TraceOperation 020229 (Call (Floc 021618) [Con -32752,Con -1] Sp);
  PushFrame 020229;
  SetLocal 1 -32752;
  SetLocal 2 -1;
  JumpCall: 021618, #actuals: 2
LocReturn 020229:
  PushStack call_result;
  TraceOperation 020238 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 020243 (Call (Floc 021618) [Con -32644,Con -1] Sp);
  PushFrame 020243;
  SetLocal 1 -32644;
  SetLocal 2 -1;
  JumpCall: 021618, #actuals: 2
LocReturn 020243:
  PushStack call_result;
  TraceOperation 020252 (Call (Floc 021618) [Con -32528,Con -1] Sp);
  PushFrame 020252;
  SetLocal 1 -32528;
  SetLocal 2 -1;
  JumpCall: 021618, #actuals: 2
LocReturn 020252:
  PushStack call_result;
  TraceOperation 020261 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 020266 (Call (Floc 021618) [Con 28522,Con 40] Sp);
  PushFrame 020266;
  SetLocal 1 28522;
  SetLocal 2 40;
  JumpCall: 021618, #actuals: 2
LocReturn 020266:
  PushStack call_result;
  TraceOperation 020274 (Call (Floc 021618) [Con 28501,Con 200] Sp);
  PushFrame 020274;
  SetLocal 1 28501;
  SetLocal 2 200;
  JumpCall: 021618, #actuals: 2
LocReturn 020274:
  PushStack call_result;
  TraceOperation 020282 (Put_prop (Con 156) (Con 6) (Con 4));
  Let b1 = M[002152];
  Let b2 = M[002153];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Error: getPropsA
LocReturn 020344:
  PushStack call_result;
  TraceOperation 020350 (Test_attr (Var (Global 0)) (Con 3) (Branch T (Dloc 020360)));
  Let b1 = M[008817];
  Let b2 = M[008818];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),0)];
  if (TestBit(b3,4)) {
    Jump: 020360
  } else {
    TraceOperation 020354 (Call (Floc 028384) [] Sp);
    PushFrame 020354;
    JumpCall: 028384, #actuals: 0
  }
LocReturn 020354:
  PushStack call_result;
  TraceOperation 020359 New_line;
  GamePrint "\n";
  Jump: 020360
LocOp 020360:
  TraceOperation 020360 (Store (Con 82) (Con 1));
  SetByte 008949 0;
  SetByte 008950 1;
  TraceOperation 020363 (Store (Con 127) (Con 4));
  SetByte 009039 0;
  SetByte 009040 4;
  TraceOperation 020366 (Store (Con 144) (Var (Global 111)));
  Let b1 = M[009039];
  Let b2 = M[009040];
  SetByte 009073 b1;
  SetByte 009074 b2;
  TraceOperation 020369 (Insert_obj (Var (Global 111)) (Var (Global 0)));
  Let b3 = M[009039];
  Let b4 = M[009040];
  Let b5 = M[008817];
  Let b6 = M[008818];
  Let b7 = M[Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),4)];
  if (IsZero(Widen(b7))) {
    SetByte Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),4) b6;
    Let b8 = M[Offset(Offset(000741,Mul(MakeHiLo(b5,b6),9)),6)];
    SetByte Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),5) LoByte(Widen(b8));
    SetByte Offset(Offset(000741,Mul(MakeHiLo(b5,b6),9)),6) b4;
    TraceOperation 020372 (Call (Floc 032260) [] Sp);
    PushFrame 020372;
    JumpCall: 032260, #actuals: 0
  } else {
    Let b9 = M[Offset(Offset(000741,Mul(Widen(b7),9)),6)];
    if (Equal(Widen(b9),MakeHiLo(b3,b4))) {
      Let b10 = M[Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),5)];
      SetByte Offset(Offset(000741,Mul(Widen(b7),9)),6) LoByte(Widen(b10));
      SetByte Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),4) b6;
      Let b11 = M[Offset(Offset(000741,Mul(MakeHiLo(b5,b6),9)),6)];
      SetByte Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),5) LoByte(Widen(b11));
      SetByte Offset(Offset(000741,Mul(MakeHiLo(b5,b6),9)),6) b4;
      TraceOperation 020372 (Call (Floc 032260) [] Sp);
      PushFrame 020372;
      JumpCall: 032260, #actuals: 0
    } else {
      Error: unlink/loop
    }
  }
LocReturn 020372:
  PushStack call_result;
  TraceOperation 020377 (Call (Floc 021802) [] Sp);
  PushFrame 020377;
  JumpCall: 021802, #actuals: 0
LocReturn 020377:
  PushStack call_result;
  TraceOperation 020382 (Jump 020229);
  Jump: 020229
--[20]--------------------------------------------------
LocRoutine 020386:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 1;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 020393
LocOp 020393:
  TraceOperation 020393 (Je [Var (Global 118),Con 11] (Branch F (Dloc 020420)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  if (Equal(MakeHiLo(b1,b2),11)) {
    TraceOperation 020397 (Je [Var (Global 119),Con 11] (Branch F (Dloc 020420)));
    Let b3 = M[009055];
    Let b4 = M[009056];
    if (Equal(MakeHiLo(b3,b4),11)) {
      TraceOperation 020401 (Print_ret "Those things aren't here!");
      GamePrint "Those things aren't here!\n";
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 1
    } else {
      Jump: 020420
    }
  } else {
    Jump: 020420
  }
LocOp 020420:
  TraceOperation 020420 (Je [Var (Global 118),Con 11] (Branch F (Dloc 020430)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  if (Equal(MakeHiLo(b1,b2),11)) {
    TraceOperation 020424 (Store (Con 1) (Var (Global 86)));
    Let b3 = M[008989];
    Let b4 = M[008990];
    SetLocal 1 MakeHiLo(b3,b4);
    TraceOperation 020427 (Jump 020436);
    Jump: 020436
  } else {
    Jump: 020430
  }
LocOp 020430:
  TraceOperation 020430 (Store (Con 1) (Var (Global 85)));
  Let b1 = M[008987];
  Let b2 = M[008988];
  SetLocal 1 MakeHiLo(b1,b2);
  TraceOperation 020433 (Store (Con 2) (Con 0));
  SetLocal 2 0;
  Jump: 020436
LocOp 020436:
  TraceOperation 020436 (Store (Con 124) (Con 0));
  SetByte 009033 0;
  SetByte 009034 0;
  TraceOperation 020439 (Store (Con 112) (Con 0));
  SetByte 009009 0;
  SetByte 009010 0;
  TraceOperation 020442 (Je [Var (Global 111),Var (Global 128)] (Branch F (Dloc 020466)));
  Let b1 = M[009039];
  Let b2 = M[009040];
  Let b3 = M[009073];
  Let b4 = M[009074];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 020446 (Print "You can't see any");
    GamePrint "You can't see any";
    TraceOperation 020455 (Call (Floc 020626) [Var (Local 2)] Sp);
    PushFrame 020455;
    SetLocal 1 GetLocal(2);
    JumpCall: 020626, #actuals: 1
  } else {
    Jump: 020466
  }
LocReturn 020455:
  PushStack call_result;
  TraceOperation 020461 (Print_ret " here!");
  GamePrint " here!\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 020466:
  TraceOperation 020466 (Print "The ");
  GamePrint "The ";
  TraceOperation 020469 (Print_obj (Var (Global 111)));
  Let b1 = M[009039];
  Let b2 = M[009040];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  if (IsZeroByte(b5)) {
    GamePrint "";
    TraceOperation 020471 (Print " seems confused. \"I don't see any");
    GamePrint " seems confused. \"I don't see any";
    TraceOperation 020490 (Call (Floc 020626) [Var (Local 2)] Sp);
    PushFrame 020490;
    SetLocal 1 GetLocal(2);
    JumpCall: 020626, #actuals: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
    TraceOperation 020471 (Print " seems confused. \"I don't see any");
    GamePrint " seems confused. \"I don't see any";
    TraceOperation 020490 (Call (Floc 020626) [Var (Local 2)] Sp);
    PushFrame 020490;
    SetLocal 1 GetLocal(2);
    JumpCall: 020626, #actuals: 1
  }
LocReturn 020490:
  PushStack call_result;
  TraceOperation 020496 (Print_ret " here!\"");
  GamePrint " here!\"\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[21]--------------------------------------------------
LocRoutine 020504:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 020513
LocOp 020513:
  TraceOperation 020513 (Call (Floc 026748) [Var (Local 1)] (Local 3));
  PushFrame 020513;
  SetLocal 1 GetLocal(1);
  JumpCall: 026748, #actuals: 1
LocReturn 020513:
  SetLocal 3 call_result;
  TraceOperation 020519 (Jg (Var (Local 3)) (Con 1) (Branch F (Dloc 020540)));
  if (GreaterThan(GetLocal(3),1)) {
    TraceOperation 020523 (Loadw (Var (Local 1)) (Con 1) Sp);
    Let b1 = M[Offset(Address(GetLocal(1)),2)];
    Let b2 = M[Offset(Offset(Address(GetLocal(1)),2),1)];
    PushStack MakeHiLo(b1,b2);
    TraceOperation 020527 (Get_prop (Var Sp) (Con 5) (Local 4));
    PopStack popped3;
    Let b4 = M[Offset(Offset(000741,Mul(popped3,9)),7)];
    Let b5 = M[Offset(Offset(Offset(000741,Mul(popped3,9)),7),1)];
    Let b6 = M[Address(MakeHiLo(b4,b5))];
    Error: getPropsA
  } else {
    Jump: 020540
  }
LocOp 020540:
  TraceOperation 020540 (Je [Con 1,Var (Local 3)] (Branch F (Dloc 020555)));
  if (Equal(1,GetLocal(3))) {
    TraceOperation 020544 (Jz (Var (Local 2)) (Branch T (Dloc 020551)));
    if (IsZero(GetLocal(2))) {
      Jump: 020551
    } else {
      TraceOperation 020547 (Store (Con 134) (Var (Global 76)));
      Let b1 = M[008969];
      Let b2 = M[008970];
      SetByte 009053 b1;
      SetByte 009054 b2;
      TraceOperation 020550 Rfalse;
      PopFrame return_address_3;
      JumpReturn: return_address_3, result: 0
    }
  } else {
    Jump: 020555
  }
LocOp 020551:
  TraceOperation 020551 (Store (Con 135) (Var (Global 76)));
  Let b1 = M[008969];
  Let b2 = M[008970];
  SetByte 009055 b1;
  SetByte 009056 b2;
  TraceOperation 020554 Rfalse;
  PopFrame return_address_3;
  JumpReturn: return_address_3, result: 0
LocOp 020555:
  TraceOperation 020555 (Jz (Var (Local 2)) (Branch F (Dloc 020584)));
  if (IsZero(GetLocal(2))) {
    TraceOperation 020558 (Print "You wouldn't find any");
    GamePrint "You wouldn't find any";
    TraceOperation 020573 (Call (Floc 020626) [Var (Local 2)] Sp);
    PushFrame 020573;
    SetLocal 1 GetLocal(2);
    JumpCall: 020626, #actuals: 1
  } else {
    Jump: 020584
  }
LocReturn 020573:
  PushStack call_result;
  TraceOperation 020579 (Print_ret " there.");
  GamePrint " there.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 020584:
  TraceOperation 020584 (Ret (Con 11));
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 11
--[22]--------------------------------------------------
LocRoutine 020586:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 020589
LocOp 020589:
  TraceOperation 020589 (Store (Con 124) (Con 0));
  SetByte 009033 0;
  SetByte 009034 0;
  TraceOperation 020592 (Store (Con 112) (Con 0));
  SetByte 009009 0;
  SetByte 009010 0;
  TraceOperation 020595 (Print "You can't see any");
  GamePrint "You can't see any";
  TraceOperation 020604 (Je [Var (Local 1),Var (Global 118)] (Branch F (Dloc 020616)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  if (Equal(GetLocal(1),MakeHiLo(b1,b2))) {
    TraceOperation 020608 (Call (Floc 027852) [] Sp);
    PushFrame 020608;
    JumpCall: 027852, #actuals: 0
  } else {
    Jump: 020616
  }
LocReturn 020608:
  PushStack call_result;
  TraceOperation 020613 (Jump 020621);
  Jump: 020621
LocOp 020616:
  TraceOperation 020616 (Call (Floc 027892) [] Sp);
  PushFrame 020616;
  JumpCall: 027892, #actuals: 0
LocReturn 020616:
  PushStack call_result;
  Jump: 020621
LocOp 020621:
  TraceOperation 020621 (Print_ret " here.");
  GamePrint " here.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[23]--------------------------------------------------
LocRoutine 020626:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 020631
LocOp 020631:
  TraceOperation 020631 (Jz (Var (Global 105)) (Branch T (Dloc 020651)));
  Let b1 = M[009027];
  Let b2 = M[009028];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 020651
  } else {
    TraceOperation 020634 (Jz (Var (Global 74)) (Branch T (Dloc 020642)));
    Let b3 = M[008965];
    Let b4 = M[008966];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 020642
    } else {
      TraceOperation 020637 (Print " ");
      GamePrint " ";
      TraceOperation 020640 (Print_addr (Var (Global 73)));
      Let b5 = M[008963];
      Let b6 = M[008964];
      GamePrint GetText(Address(MakeHiLo(b5,b6)));
      Jump: 020642
    }
  }
LocOp 020642:
  TraceOperation 020642 (Jz (Var (Global 75)) (Branch T Dfalse));
  Let b1 = M[008967];
  Let b2 = M[008968];
  if (IsZero(MakeHiLo(b1,b2))) {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  } else {
    TraceOperation 020645 (Print " ");
    GamePrint " ";
    TraceOperation 020648 (Print_addr (Var (Global 75)));
    Let b4 = M[008967];
    Let b5 = M[008968];
    GamePrint GetText(Address(MakeHiLo(b4,b5)));
    TraceOperation 020650 Rtrue;
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 1
  }
LocOp 020651:
  TraceOperation 020651 (Jz (Var (Local 1)) (Branch T (Dloc 020671)));
  if (IsZero(GetLocal(1))) {
    Jump: 020671
  } else {
    TraceOperation 020654 (Loadw (Var (Global 100)) (Con 6) (Local 2));
    Let b1 = M[009017];
    Let b2 = M[009018];
    Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),12)];
    Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),12),1)];
    SetLocal 2 MakeHiLo(b3,b4);
    TraceOperation 020658 (Loadw (Var (Global 100)) (Con 7) Sp);
    Let b5 = M[009017];
    Let b6 = M[009018];
    Let b7 = M[Offset(Address(MakeHiLo(b5,b6)),14)];
    Let b8 = M[Offset(Offset(Address(MakeHiLo(b5,b6)),14),1)];
    PushStack MakeHiLo(b7,b8);
    TraceOperation 020662 (Call (Floc 025326) [Var (Local 2),Var Sp,Con 0] Sp);
    PopStack popped9;
    PushFrame 020662;
    SetLocal 1 GetLocal(2);
    SetLocal 2 popped9;
    SetLocal 3 0;
    JumpCall: 025326, #actuals: 3
  }
LocReturn 020662:
  PushStack call_result;
  TraceOperation 020670 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 020671:
  TraceOperation 020671 (Loadw (Var (Global 100)) (Con 8) (Local 2));
  Let b1 = M[009017];
  Let b2 = M[009018];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),16)];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),16),1)];
  SetLocal 2 MakeHiLo(b3,b4);
  TraceOperation 020675 (Loadw (Var (Global 100)) (Con 9) Sp);
  Let b5 = M[009017];
  Let b6 = M[009018];
  Let b7 = M[Offset(Address(MakeHiLo(b5,b6)),18)];
  Let b8 = M[Offset(Offset(Address(MakeHiLo(b5,b6)),18),1)];
  PushStack MakeHiLo(b7,b8);
  TraceOperation 020679 (Call (Floc 025326) [Var (Local 2),Var Sp,Con 0] Sp);
  PopStack popped9;
  PushFrame 020679;
  SetLocal 1 GetLocal(2);
  SetLocal 2 popped9;
  SetLocal 3 0;
  JumpCall: 025326, #actuals: 3
LocReturn 020679:
  PushStack call_result;
  TraceOperation 020687 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[24]--------------------------------------------------
LocRoutine 020688:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 020693
LocOp 020693:
  TraceOperation 020693 Rfalse;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 0
--[25]--------------------------------------------------
LocRoutine 020694:
  MakeRoutineFrame 0;
  Jump: 020695
LocOp 020695:
  TraceOperation 020695 (Je [Var (Global 120),Con 34] (Branch F Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),34)) {
    TraceOperation 020699 (Print_ret "You should say whether you want to go up or down.");
    GamePrint "You should say whether you want to go up or down.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 0
  }
--[26]--------------------------------------------------
LocRoutine 020730:
  MakeRoutineFrame 0;
  Jump: 020731
LocOp 020731:
  TraceOperation 020731 (Je [Var (Global 120),Con 66] (Branch F Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),66)) {
    TraceOperation 020735 (Inc (Con 85));
    Let b3 = M[008955];
    Let b4 = M[008956];
    SetByte 008955 HiByte(Add(MakeHiLo(b3,b4),1));
    SetByte 008956 LoByte(Add(MakeHiLo(b3,b4),1));
    TraceOperation 020737 (Call (Floc 020688) [] Sp);
    PushFrame 020737;
    JumpCall: 020688, #actuals: 0
  } else {
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 0
  }
LocReturn 020737:
  PushStack call_result;
  TraceOperation 020742 (Mod (Var (Global 69)) (Con 20) Sp);
  Let b1 = M[008955];
  Let b2 = M[008956];
  PushStack Mod(MakeHiLo(b1,b2),20);
  TraceOperation 020746 (Jz (Var Sp) (Branch F (Dloc 020772)));
  PopStack popped3;
  if (IsZero(popped3)) {
    TraceOperation 020749 (Print_ret "You seem to be repeating yourself.");
    GamePrint "You seem to be repeating yourself.\n";
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 1
  } else {
    Jump: 020772
  }
LocOp 020772:
  TraceOperation 020772 (Mod (Var (Global 69)) (Con 10) Sp);
  Let b1 = M[008955];
  Let b2 = M[008956];
  PushStack Mod(MakeHiLo(b1,b2),10);
  TraceOperation 020776 (Jz (Var Sp) (Branch F (Dloc 020806)));
  PopStack popped3;
  if (IsZero(popped3)) {
    TraceOperation 020779 (Print_ret "I think that phrase is getting a bit worn out.");
    GamePrint "I think that phrase is getting a bit worn out.\n";
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 1
  } else {
    Jump: 020806
  }
LocOp 020806:
  TraceOperation 020806 (Print_ret "Nothing happens here.");
  GamePrint "Nothing happens here.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[27]--------------------------------------------------
LocRoutine 020822:
  MakeRoutineFrame 0;
  Jump: 020823
LocOp 020823:
  TraceOperation 020823 (Je [Var (Global 120),Con 50,Con 18] (Branch F (Dloc 020841)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (LogOr(Equal(MakeHiLo(b1,b2),50),Equal(MakeHiLo(b1,b2),18))) {
    TraceOperation 020829 (Je [Var (Global 119),Con 8] (Branch F (Dloc 020841)));
    Let b3 = M[009055];
    Let b4 = M[009056];
    if (Equal(MakeHiLo(b3,b4),8)) {
      TraceOperation 020833 (Call (Floc 022396) [Con 49,Var (Global 118)] Sp);
      Let b5 = M[009053];
      Let b6 = M[009054];
      PushFrame 020833;
      SetLocal 1 49;
      SetLocal 2 MakeHiLo(b5,b6);
      JumpCall: 022396, #actuals: 2
    } else {
      Jump: 020841
    }
  } else {
    Jump: 020841
  }
LocReturn 020833:
  PushStack call_result;
  TraceOperation 020840 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 020841:
  TraceOperation 020841 (Je [Var (Global 0),Con 126] (Branch F (Dloc 020851)));
  Let b1 = M[008817];
  Let b2 = M[008818];
  if (Equal(MakeHiLo(b1,b2),126)) {
    TraceOperation 020845 (Call (Floc 060870) [] Sp);
    PushFrame 020845;
    JumpCall: 060870, #actuals: 0
  } else {
    Jump: 020851
  }
LocReturn 020845:
  PushStack call_result;
  TraceOperation 020850 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 020851:
  TraceOperation 020851 (Je [Var (Global 120),Con 44] (Branch F Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),44)) {
    TraceOperation 020855 (Print_ret "The ground is too hard for digging here.");
    GamePrint "The ground is too hard for digging here.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 0
  }
--[28]--------------------------------------------------
LocRoutine 020874:
  MakeRoutineFrame 0;
  Jump: 020875
LocOp 020875:
  TraceOperation 020875 (Je [Var (Global 120),Con 56] (Branch F (Dloc 021049)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),56)) {
    TraceOperation 020880 (Print_ret "The grue is a sinister, lurking presence in the dark places of the earth. Its favorite diet is adventurers, but its insatiable appetite is tempered by its fear of light. No grue has ever been seen by the light of day, and few have survived its fearsome jaws to tell the tale.");
    GamePrint "The grue is a sinister, lurking presence in the dark places of the earth. Its favorite diet is adventurers, but its insatiable appetite is tempered by its fear of light. No grue has ever been seen by the light of day, and few have survived its fearsome jaws to tell the tale.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 021049
  }
LocOp 021049:
  TraceOperation 021049 (Je [Var (Global 120),Con 60] (Branch F (Dloc 021133)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),60)) {
    TraceOperation 021054 (Print_ret "There is no grue here, but I'm sure there is at least one lurking in the darkness nearby. I wouldn't let my light go out if I were you!");
    GamePrint "There is no grue here, but I'm sure there is at least one lurking in the darkness nearby. I wouldn't let my light go out if I were you!\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 021133
  }
LocOp 021133:
  TraceOperation 021133 (Je [Var (Global 120),Con 77] (Branch F Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),77)) {
    TraceOperation 021137 (Print_ret "It makes no sound but is always lurking in the darkness nearby.");
    GamePrint "It makes no sound but is always lurking in the darkness nearby.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 0
  }
--[29]--------------------------------------------------
LocRoutine 021176:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 021179
LocOp 021179:
  TraceOperation 021179 (Je [Var (Global 120),Con 111] (Branch F (Dloc 021236)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),111)) {
    TraceOperation 021183 (Store (Con 124) (Con 0));
    SetByte 009033 0;
    SetByte 009034 0;
    TraceOperation 021186 (Store (Con 112) (Con 0));
    SetByte 009009 0;
    SetByte 009010 0;
    TraceOperation 021189 (Print_ret "Talking to yourself is said to be a sign of impending mental collapse.");
    GamePrint "Talking to yourself is said to be a sign of impending mental collapse.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 021236
  }
LocOp 021236:
  TraceOperation 021236 (Je [Var (Global 120),Con 63] (Branch F (Dloc 021252)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),63)) {
    TraceOperation 021240 (Je [Var (Global 119),Con 5] (Branch F (Dloc 021252)));
    Let b3 = M[009055];
    Let b4 = M[009056];
    if (Equal(MakeHiLo(b3,b4),5)) {
      TraceOperation 021244 (Call (Floc 022396) [Con 93,Var (Global 118)] Sp);
      Let b5 = M[009053];
      Let b6 = M[009054];
      PushFrame 021244;
      SetLocal 1 93;
      SetLocal 2 MakeHiLo(b5,b6);
      JumpCall: 022396, #actuals: 2
    } else {
      Jump: 021252
    }
  } else {
    Jump: 021252
  }
LocReturn 021244:
  PushStack call_result;
  TraceOperation 021251 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 021252:
  TraceOperation 021252 (Je [Var (Global 120),Con 86] (Branch F (Dloc 021269)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),86)) {
    TraceOperation 021256 (Print_ret "Only you can do that.");
    GamePrint "Only you can do that.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 021269
  }
LocOp 021269:
  TraceOperation 021269 (Je [Var (Global 120),Con 45] (Branch F (Dloc 021294)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),45)) {
    TraceOperation 021273 (Print_ret "You'll have to do that on your own.");
    GamePrint "You'll have to do that on your own.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 021294
  }
LocOp 021294:
  TraceOperation 021294 (Je [Var (Global 120),Con 51] (Branch F (Dloc 021321)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),51)) {
    TraceOperation 021298 (Print_ret "Auto-cannibalism is not the answer.");
    GamePrint "Auto-cannibalism is not the answer.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 021321
  }
LocOp 021321:
  TraceOperation 021321 (Je [Var (Global 120),Con 42,Con 19] (Branch F (Dloc 021359)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (LogOr(Equal(MakeHiLo(b1,b2),42),Equal(MakeHiLo(b1,b2),19))) {
    TraceOperation 021327 (Jz (Var (Global 119)) (Branch T (Dloc 021342)));
    Let b3 = M[009055];
    Let b4 = M[009056];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 021342
    } else {
      TraceOperation 021330 (Test_attr (Var (Global 119)) (Con 29) (Branch F (Dloc 021342)));
      Let b5 = M[009055];
      Let b6 = M[009056];
      Let b7 = M[Offset(Offset(000741,Mul(MakeHiLo(b5,b6),9)),3)];
      if (TestBit(b7,2)) {
        TraceOperation 021334 (Call (Floc 067174) [Con -26055] Sp);
        PushFrame 021334;
        SetLocal 1 -26055;
        JumpCall: 067174, #actuals: 1
      } else {
        Jump: 021342
      }
    }
  } else {
    Jump: 021359
  }
LocReturn 021334:
  PushStack call_result;
  TraceOperation 021341 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 021342:
  TraceOperation 021342 (Print_ret "Suicide is not the answer.");
  GamePrint "Suicide is not the answer.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 021359:
  TraceOperation 021359 (Je [Var (Global 120),Con 93] (Branch F (Dloc 021374)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),93)) {
    TraceOperation 021363 (Print_ret "How romantic!");
    GamePrint "How romantic!\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 021374
  }
LocOp 021374:
  TraceOperation 021374 (Je [Var (Global 120),Con 56] (Branch F Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),56)) {
    TraceOperation 021378 (Get_parent (Con 151) (Local 1));
    Let b3 = M[002104];
    SetLocal 1 Widen(b3);
    TraceOperation 021381 (Get_parent (Con 153) Sp);
    Let b4 = M[002122];
    PushStack Widen(b4);
    TraceOperation 021384 (Je [Var (Global 0),Var (Local 1),Var Sp] (Branch F (Dloc 021413)));
    Let b5 = M[008817];
    Let b6 = M[008818];
    PopStack popped7;
    if (LogOr(Equal(MakeHiLo(b5,b6),GetLocal(1)),Equal(MakeHiLo(b5,b6),popped7))) {
      TraceOperation 021390 (Print_ret "Your image in the mirror looks tired.");
      GamePrint "Your image in the mirror looks tired.\n";
      PopFrame return_address_8;
      JumpReturn: return_address_8, result: 1
    } else {
      Jump: 021413
    }
  } else {
    PopFrame return_address_9;
    JumpReturn: return_address_9, result: 0
  }
LocOp 021413:
  TraceOperation 021413 (Print_ret "That's difficult unless your eyes are prehensile.");
  GamePrint "That's difficult unless your eyes are prehensile.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[30]--------------------------------------------------
LocRoutine 021446:
  MakeRoutineFrame 0;
  Jump: 021447
LocOp 021447:
  TraceOperation 021447 (Je [Var (Global 120),Con 61,Con 93] (Branch F (Dloc 021476)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (LogOr(Equal(MakeHiLo(b1,b2),61),Equal(MakeHiLo(b1,b2),93))) {
    TraceOperation 021453 (Print_ret "You must specify a direction to go.");
    GamePrint "You must specify a direction to go.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 021476
  }
LocOp 021476:
  TraceOperation 021476 (Je [Var (Global 120),Con 60] (Branch F (Dloc 021497)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),60)) {
    TraceOperation 021480 (Print_ret "I can't help you there....");
    GamePrint "I can't help you there....\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 021497
  }
LocOp 021497:
  TraceOperation 021497 (Je [Var (Global 120),Con 44] (Branch F Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),44)) {
    TraceOperation 021501 (Print_ret "Not a chance.");
    GamePrint "Not a chance.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 0
  }
--[31]--------------------------------------------------
LocRoutine 021512:
  MakeRoutineFrame 0;
  Jump: 021513
LocOp 021513:
  TraceOperation 021513 (Je [Var (Global 120),Con 56] (Branch F (Dloc 021556)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),56)) {
    TraceOperation 021517 (Print_ret "The zorkmid is the unit of currency of the Great Underground Empire.");
    GamePrint "The zorkmid is the unit of currency of the Great Underground Empire.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 021556
  }
LocOp 021556:
  TraceOperation 021556 (Je [Var (Global 120),Con 60] (Branch F Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),60)) {
    TraceOperation 021560 (Print_ret "The best way to find zorkmids is to go out and look for them.");
    GamePrint "The best way to find zorkmids is to go out and look for them.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 0
  }
--[32]--------------------------------------------------
LocRoutine 021596:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 021603
LocOp 021603:
  TraceOperation 021603 (Call (Floc 021638) [Var (Local 1),Con 1] (Local 3));
  PushFrame 021603;
  SetLocal 1 GetLocal(1);
  SetLocal 2 1;
  JumpCall: 021638, #actuals: 2
LocReturn 021603:
  SetLocal 3 call_result;
  TraceOperation 021610 (Storew (Var (Local 3)) (Con 1) (Var (Local 2)));
  SetByte Offset(Address(GetLocal(3)),2) HiByte(GetLocal(2));
  SetByte Offset(Offset(Address(GetLocal(3)),2),1) LoByte(GetLocal(2));
  TraceOperation 021615 (Ret (Var (Local 3)));
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: GetLocal(3)
--[33]--------------------------------------------------
LocRoutine 021618:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 021625
LocOp 021625:
  TraceOperation 021625 (Call (Floc 021638) [Var (Local 1)] (Local 3));
  PushFrame 021625;
  SetLocal 1 GetLocal(1);
  JumpCall: 021638, #actuals: 1
LocReturn 021625:
  SetLocal 3 call_result;
  TraceOperation 021631 (Storew (Var (Local 3)) (Con 1) (Var (Local 2)));
  SetByte Offset(Address(GetLocal(3)),2) HiByte(GetLocal(2));
  SetByte Offset(Offset(Address(GetLocal(3)),2),1) LoByte(GetLocal(2));
  TraceOperation 021636 (Ret (Var (Local 3)));
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: GetLocal(3)
--[34]--------------------------------------------------
LocRoutine 021638:
  MakeRoutineFrame 5;
  if (LessThanByte(num_actuals,5)) {
    SetLocal 5 0;
    if (LessThanByte(num_actuals,4)) {
      SetLocal 4 0;
      if (LessThanByte(num_actuals,3)) {
        SetLocal 3 0;
        if (LessThanByte(num_actuals,2)) {
          SetLocal 2 0;
          if (LessThanByte(num_actuals,1)) {
            SetLocal 1 0;
          }
        }
      }
    }
  }
  Jump: 021649
LocOp 021649:
  TraceOperation 021649 (Add (Var (Global 132)) (Con 180) (Local 3));
  Let b1 = M[009081];
  Let b2 = M[009082];
  SetLocal 3 Add(MakeHiLo(b1,b2),180);
  TraceOperation 021653 (Add (Var (Global 132)) (Var (Global 130)) (Local 4));
  Let b3 = M[009081];
  Let b4 = M[009082];
  Let b5 = M[009077];
  Let b6 = M[009078];
  SetLocal 4 Add(MakeHiLo(b3,b4),MakeHiLo(b5,b6));
  Jump: 021657
LocOp 021657:
  TraceOperation 021657 (Je [Var (Local 4),Var (Local 3)] (Branch F (Dloc 021683)));
  if (Equal(GetLocal(4),GetLocal(3))) {
    TraceOperation 021661 (Sub (Var (Global 130)) (Con 6) (Global 130));
    Let b1 = M[009077];
    Let b2 = M[009078];
    SetByte 009077 HiByte(Sub(MakeHiLo(b1,b2),6));
    SetByte 009078 LoByte(Sub(MakeHiLo(b1,b2),6));
    TraceOperation 021665 (Jz (Var (Local 2)) (Branch T (Dloc 021672)));
    if (IsZero(GetLocal(2))) {
      Jump: 021672
    } else {
      TraceOperation 021668 (Sub (Var (Global 131)) (Con 6) (Global 131));
      Let b3 = M[009079];
      Let b4 = M[009080];
      SetByte 009079 HiByte(Sub(MakeHiLo(b3,b4),6));
      SetByte 009080 LoByte(Sub(MakeHiLo(b3,b4),6));
      Jump: 021672
    }
  } else {
    Jump: 021683
  }
LocOp 021672:
  TraceOperation 021672 (Add (Var (Global 132)) (Var (Global 130)) (Local 5));
  Let b1 = M[009081];
  Let b2 = M[009082];
  Let b3 = M[009077];
  Let b4 = M[009078];
  SetLocal 5 Add(MakeHiLo(b1,b2),MakeHiLo(b3,b4));
  TraceOperation 021676 (Storew (Var (Local 5)) (Con 2) (Var (Local 1)));
  SetByte Offset(Address(GetLocal(5)),4) HiByte(GetLocal(1));
  SetByte Offset(Offset(Address(GetLocal(5)),4),1) LoByte(GetLocal(1));
  TraceOperation 021681 (Ret (Var (Local 5)));
  PopFrame return_address_5;
  JumpReturn: return_address_5, result: GetLocal(5)
LocOp 021683:
  TraceOperation 021683 (Loadw (Var (Local 4)) (Con 2) Sp);
  Let b1 = M[Offset(Address(GetLocal(4)),4)];
  Let b2 = M[Offset(Offset(Address(GetLocal(4)),4),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 021687 (Je [Var Sp,Var (Local 1)] (Branch F (Dloc 021693)));
  PopStack popped3;
  if (Equal(popped3,GetLocal(1))) {
    TraceOperation 021691 (Ret (Var (Local 4)));
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: GetLocal(4)
  } else {
    Jump: 021693
  }
LocOp 021693:
  TraceOperation 021693 (Add (Var (Local 4)) (Con 6) (Local 4));
  SetLocal 4 Add(GetLocal(4),6);
  TraceOperation 021697 (Jump 021657);
  Jump: 021657
--[35]--------------------------------------------------
LocRoutine 021700:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 021709
LocOp 021709:
  TraceOperation 021709 (Jz (Var (Global 129)) (Branch T (Dloc 021716)));
  Let b1 = M[009075];
  Let b2 = M[009076];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 021716
  } else {
    TraceOperation 021712 (Store (Con 145) (Con 0));
    SetByte 009075 0;
    SetByte 009076 0;
    TraceOperation 021715 Rfalse;
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  }
LocOp 021716:
  TraceOperation 021716 (Jz (Var (Global 127)) (Branch T (Dloc 021725)));
  Let b1 = M[009071];
  Let b2 = M[009072];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 021725
  } else {
    TraceOperation 021719 (Push (Var (Global 130)));
    Let b3 = M[009077];
    Let b4 = M[009078];
    PushStack MakeHiLo(b3,b4);
    TraceOperation 021722 (Jump 021728);
    Jump: 021728
  }
LocOp 021725:
  TraceOperation 021725 (Push (Var (Global 131)));
  Let b1 = M[009079];
  Let b2 = M[009080];
  PushStack MakeHiLo(b1,b2);
  Jump: 021728
LocOp 021728:
  TraceOperation 021728 (Add (Var (Global 132)) (Var Sp) (Local 1));
  Let b1 = M[009081];
  Let b2 = M[009082];
  PopStack popped3;
  SetLocal 1 Add(MakeHiLo(b1,b2),popped3);
  TraceOperation 021732 (Add (Var (Global 132)) (Con 180) (Local 2));
  Let b4 = M[009081];
  Let b5 = M[009082];
  SetLocal 2 Add(MakeHiLo(b4,b5),180);
  Jump: 021736
LocOp 021736:
  TraceOperation 021736 (Je [Var (Local 1),Var (Local 2)] (Branch F (Dloc 021751)));
  if (Equal(GetLocal(1),GetLocal(2))) {
    TraceOperation 021740 (Inc_chk (Con 18) (Con 999) (Branch F (Dloc 021749)));
    Let b1 = M[008821];
    Let b2 = M[008822];
    SetByte 008821 HiByte(Add(MakeHiLo(b1,b2),1));
    SetByte 008822 LoByte(Add(MakeHiLo(b1,b2),1));
    if (GreaterThanEqual(MakeHiLo(b1,b2),999)) {
      TraceOperation 021746 (Store (Con 18) (Con 0));
      SetByte 008821 0;
      SetByte 008822 0;
      Jump: 021749
    } else {
      Jump: 021749
    }
  } else {
    Jump: 021751
  }
LocOp 021749:
  TraceOperation 021749 (Ret (Var (Local 4)));
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: GetLocal(4)
LocOp 021751:
  TraceOperation 021751 (Loadw (Var (Local 1)) (Con 0) Sp);
  Let b1 = M[Offset(Address(GetLocal(1)),0)];
  Let b2 = M[Offset(Offset(Address(GetLocal(1)),0),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 021755 (Jz (Var Sp) (Branch T (Dloc 021795)));
  PopStack popped3;
  if (IsZero(popped3)) {
    Jump: 021795
  } else {
    TraceOperation 021758 (Loadw (Var (Local 1)) (Con 1) (Local 3));
    Let b4 = M[Offset(Address(GetLocal(1)),2)];
    Let b5 = M[Offset(Offset(Address(GetLocal(1)),2),1)];
    SetLocal 3 MakeHiLo(b4,b5);
    TraceOperation 021762 (Jz (Var (Local 3)) (Branch F (Dloc 021768)));
    if (IsZero(GetLocal(3))) {
      TraceOperation 021765 (Jump 021795);
      Jump: 021795
    } else {
      Jump: 021768
    }
  }
LocOp 021768:
  TraceOperation 021768 (Sub (Var (Local 3)) (Con 1) Sp);
  PushStack Sub(GetLocal(3),1);
  TraceOperation 021772 (Storew (Var (Local 1)) (Con 1) (Var Sp));
  PopStack popped1;
  SetByte Offset(Address(GetLocal(1)),2) HiByte(popped1);
  SetByte Offset(Offset(Address(GetLocal(1)),2),1) LoByte(popped1);
  TraceOperation 021777 (Jg (Var (Local 3)) (Con 1) (Branch T (Dloc 021795)));
  if (GreaterThan(GetLocal(3),1)) {
    Jump: 021795
  } else {
    TraceOperation 021781 (Loadw (Var (Local 1)) (Con 2) Sp);
    Let b2 = M[Offset(Address(GetLocal(1)),4)];
    Let b3 = M[Offset(Offset(Address(GetLocal(1)),4),1)];
    PushStack MakeHiLo(b2,b3);
    TraceOperation 021785 (Call (Fvar Sp) [] Sp);
    PopStack popped4;
    if (IsZeroAddress(PackedAddress Z3(popped4))) {
      PushStack 0;
      TraceOperation 021789 (Jz (Var Sp) (Branch T (Dloc 021795)));
      PopStack popped5;
      if (IsZero(popped5)) {
        Jump: 021795
      } else {
        TraceOperation 021792 (Store (Con 4) (Con 1));
        SetLocal 4 1;
        Jump: 021795
      }
    } else {
      PushFrame 021785;
      JumpCall: PackedAddress Z3(popped4), #actuals: 0
    }
  }
LocReturn 021785:
  PushStack call_result;
  TraceOperation 021789 (Jz (Var Sp) (Branch T (Dloc 021795)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 021795
  } else {
    TraceOperation 021792 (Store (Con 4) (Con 1));
    SetLocal 4 1;
    Jump: 021795
  }
LocOp 021795:
  TraceOperation 021795 (Add (Var (Local 1)) (Con 6) (Local 1));
  SetLocal 1 Add(GetLocal(1),6);
  TraceOperation 021799 (Jump 021736);
  Jump: 021736
--[36]--------------------------------------------------
LocRoutine 021802:
  MakeRoutineFrame 10;
  if (LessThanByte(num_actuals,10)) {
    SetLocal 10 0;
    if (LessThanByte(num_actuals,9)) {
      SetLocal 9 0;
      if (LessThanByte(num_actuals,8)) {
        SetLocal 8 0;
        if (LessThanByte(num_actuals,7)) {
          SetLocal 7 0;
          if (LessThanByte(num_actuals,6)) {
            SetLocal 6 0;
            if (LessThanByte(num_actuals,5)) {
              SetLocal 5 0;
              if (LessThanByte(num_actuals,4)) {
                SetLocal 4 0;
                if (LessThanByte(num_actuals,3)) {
                  SetLocal 3 0;
                  if (LessThanByte(num_actuals,2)) {
                    SetLocal 2 0;
                    if (LessThanByte(num_actuals,1)) {
                      SetLocal 1 0;
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  Jump: 021823
LocOp 021823:
  TraceOperation 021823 (Store (Con 4) (Con 0));
  SetLocal 4 0;
  TraceOperation 021826 (Store (Con 5) (Con 0));
  SetLocal 5 0;
  TraceOperation 021829 (Store (Con 8) (Con 1));
  SetLocal 8 1;
  TraceOperation 021832 (Call (Floc 022656) [] (Global 127));
  PushFrame 021832;
  JumpCall: 022656, #actuals: 0
LocReturn 021832:
  SetByte 009071 HiByte(call_result);
  SetByte 009072 LoByte(call_result);
  TraceOperation 021837 (Jz (Var (Global 127)) (Branch T (Dloc 022347)));
  Let b1 = M[009071];
  Let b2 = M[009072];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 022347
  } else {
    TraceOperation 021841 (Loadw (Var (Global 85)) (Var (Global 81)) (Local 1));
    Let b3 = M[008987];
    Let b4 = M[008988];
    Let b5 = M[008979];
    Let b6 = M[008980];
    Let b7 = M[Offset(Address(MakeHiLo(b3,b4)),Mul(2,MakeHiLo(b5,b6)))];
    Let b8 = M[Offset(Offset(Address(MakeHiLo(b3,b4)),Mul(2,MakeHiLo(b5,b6))),1)];
    SetLocal 1 MakeHiLo(b7,b8);
    TraceOperation 021845 (Loadw (Var (Global 86)) (Var (Global 81)) (Local 2));
    Let b9 = M[008989];
    Let b10 = M[008990];
    Let b11 = M[008979];
    Let b12 = M[008980];
    Let b13 = M[Offset(Address(MakeHiLo(b9,b10)),Mul(2,MakeHiLo(b11,b12)))];
    Let b14 = M[Offset(Offset(Address(MakeHiLo(b9,b10)),Mul(2,MakeHiLo(b11,b12))),1)];
    SetLocal 2 MakeHiLo(b13,b14);
    TraceOperation 021849 (Jz (Var (Local 2)) (Branch F (Dloc 021858)));
    if (IsZero(GetLocal(2))) {
      TraceOperation 021852 (Push (Var (Local 2)));
      PushStack GetLocal(2);
      TraceOperation 021855 (Jump 021907);
      Jump: 021907
    } else {
      Jump: 021858
    }
  }
LocOp 021858:
  TraceOperation 021858 (Jg (Var (Local 2)) (Con 1) (Branch F (Dloc 021884)));
  if (GreaterThan(GetLocal(2),1)) {
    TraceOperation 021862 (Store (Con 6) (Var (Global 86)));
    Let b1 = M[008989];
    Let b2 = M[008990];
    SetLocal 6 MakeHiLo(b1,b2);
    TraceOperation 021865 (Jz (Var (Local 1)) (Branch F (Dloc 021874)));
    if (IsZero(GetLocal(1))) {
      TraceOperation 021868 (Store (Con 5) (Con 0));
      SetLocal 5 0;
      TraceOperation 021871 (Jump 021878);
      Jump: 021878
    } else {
      Jump: 021874
    }
  } else {
    Jump: 021884
  }
LocOp 021874:
  TraceOperation 021874 (Loadw (Var (Global 85)) (Con 1) (Local 5));
  Let b1 = M[008987];
  Let b2 = M[008988];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),2)];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),2),1)];
  SetLocal 5 MakeHiLo(b3,b4);
  Jump: 021878
LocOp 021878:
  TraceOperation 021878 (Push (Var (Local 2)));
  PushStack GetLocal(2);
  TraceOperation 021881 (Jump 021907);
  Jump: 021907
LocOp 021884:
  TraceOperation 021884 (Jg (Var (Local 1)) (Con 1) (Branch F (Dloc 021904)));
  if (GreaterThan(GetLocal(1),1)) {
    TraceOperation 021888 (Store (Con 8) (Con 0));
    SetLocal 8 0;
    TraceOperation 021891 (Store (Con 6) (Var (Global 85)));
    Let b1 = M[008987];
    Let b2 = M[008988];
    SetLocal 6 MakeHiLo(b1,b2);
    TraceOperation 021894 (Loadw (Var (Global 86)) (Con 1) (Local 5));
    Let b3 = M[008989];
    Let b4 = M[008990];
    Let b5 = M[Offset(Address(MakeHiLo(b3,b4)),2)];
    Let b6 = M[Offset(Offset(Address(MakeHiLo(b3,b4)),2),1)];
    SetLocal 5 MakeHiLo(b5,b6);
    TraceOperation 021898 (Push (Var (Local 1)));
    PushStack GetLocal(1);
    TraceOperation 021901 (Jump 021907);
    Jump: 021907
  } else {
    Jump: 021904
  }
LocOp 021904:
  TraceOperation 021904 (Push (Con 1));
  PushStack 1;
  Jump: 021907
LocOp 021907:
  TraceOperation 021907 (Store (Con 3) (Var Sp));
  PopStack popped1;
  SetLocal 3 popped1;
  TraceOperation 021910 (Jz (Var (Local 5)) (Branch F (Dloc 021921)));
  if (IsZero(GetLocal(5))) {
    TraceOperation 021913 (Je [Var (Local 1),Con 1] (Branch F (Dloc 021921)));
    if (Equal(GetLocal(1),1)) {
      TraceOperation 021917 (Loadw (Var (Global 85)) (Con 1) (Local 5));
      Let b2 = M[008987];
      Let b3 = M[008988];
      Let b4 = M[Offset(Address(MakeHiLo(b2,b3)),2)];
      Let b5 = M[Offset(Offset(Address(MakeHiLo(b2,b3)),2),1)];
      SetLocal 5 MakeHiLo(b4,b5);
      Jump: 021921
    } else {
      Jump: 021921
    }
  } else {
    Jump: 021921
  }
LocOp 021921:
  TraceOperation 021921 (Je [Var (Global 120),Con 137] (Branch F (Dloc 021935)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),137)) {
    TraceOperation 021925 (Call (Floc 022396) [Var (Global 120),Var (Global 118)] (Local 7));
    Let b3 = M[009057];
    Let b4 = M[009058];
    Let b5 = M[009053];
    Let b6 = M[009054];
    PushFrame 021925;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 MakeHiLo(b5,b6);
    JumpCall: 022396, #actuals: 2
  } else {
    Jump: 021935
  }
LocReturn 021925:
  SetLocal 7 call_result;
  TraceOperation 021932 (Jump 022295);
  Jump: 022295
LocOp 021935:
  TraceOperation 021935 (Jz (Var (Local 3)) (Branch F (Dloc 022016)));
  if (IsZero(GetLocal(3))) {
    TraceOperation 021939 (Loadb (Var (Global 115)) (Con 0) Sp);
    Let b1 = M[009047];
    Let b2 = M[009048];
    Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),0)];
    PushStack Widen(b3);
    TraceOperation 021943 (And (Var Sp) (Con 3) Sp);
    PopStack popped4;
    PushStack And(popped4,3);
    TraceOperation 021947 (Jz (Var Sp) (Branch F (Dloc 021962)));
    PopStack popped5;
    if (IsZero(popped5)) {
      TraceOperation 021950 (Call (Floc 022396) [Var (Global 120)] (Local 7));
      Let b6 = M[009057];
      Let b7 = M[009058];
      PushFrame 021950;
      SetLocal 1 MakeHiLo(b6,b7);
      JumpCall: 022396, #actuals: 1
    } else {
      Jump: 021962
    }
  } else {
    Jump: 022016
  }
LocReturn 021950:
  SetLocal 7 call_result;
  TraceOperation 021956 (Store (Con 134) (Con 0));
  SetByte 009053 0;
  SetByte 009054 0;
  TraceOperation 021959 (Jump 022295);
  Jump: 022295
LocOp 021962:
  TraceOperation 021962 (Jz (Var (Global 66)) (Branch F (Dloc 021982)));
  Let b1 = M[008949];
  Let b2 = M[008950];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 021965 (Print "It's too dark to see.");
    GamePrint "It's too dark to see.";
    TraceOperation 021978 New_line;
    GamePrint "\n";
    TraceOperation 021979 (Jump 022295);
    Jump: 022295
  } else {
    Jump: 021982
  }
LocOp 021982:
  TraceOperation 021982 (Print "It's not clear what you're referring to.");
  GamePrint "It's not clear what you're referring to.";
  TraceOperation 022009 New_line;
  GamePrint "\n";
  TraceOperation 022010 (Store (Con 7) (Con 0));
  SetLocal 7 0;
  TraceOperation 022013 (Jump 022295);
  Jump: 022295
LocOp 022016:
  TraceOperation 022016 (Store (Con 138) (Con 0));
  SetByte 009061 0;
  SetByte 009062 0;
  TraceOperation 022019 (Store (Con 139) (Con 0));
  SetByte 009063 0;
  SetByte 009064 0;
  TraceOperation 022022 (Jg (Var (Local 3)) (Con 1) (Branch F (Dloc 022029)));
  if (GreaterThan(GetLocal(3),1)) {
    TraceOperation 022026 (Store (Con 139) (Con 1));
    SetByte 009063 0;
    SetByte 009064 1;
    Jump: 022029
  } else {
    Jump: 022029
  }
LocOp 022029:
  TraceOperation 022029 (Store (Con 10) (Con 0));
  SetLocal 10 0;
  Jump: 022032
LocOp 022032:
  TraceOperation 022032 (Inc_chk (Con 4) (Var (Local 3)) (Branch F (Dloc 022126)));
  SetLocal 4 Add(GetLocal(4),1);
  if (GreaterThanEqual(GetLocal(4),GetLocal(3))) {
    TraceOperation 022037 (Jg (Var (Global 122)) (Con 0) (Branch F (Dloc 022101)));
    Let b1 = M[009061];
    Let b2 = M[009062];
    if (GreaterThan(MakeHiLo(b1,b2),0)) {
      TraceOperation 022042 (Print "The ");
      GamePrint "The ";
      TraceOperation 022045 (Je [Var (Global 122),Var (Local 3)] (Branch T (Dloc 022052)));
      Let b3 = M[009061];
      Let b4 = M[009062];
      if (Equal(MakeHiLo(b3,b4),GetLocal(3))) {
        Jump: 022052
      } else {
        TraceOperation 022049 (Print "other ");
        GamePrint "other ";
        Jump: 022052
      }
    } else {
      Jump: 022101
    }
  } else {
    Jump: 022126
  }
LocOp 022052:
  TraceOperation 022052 (Print "object");
  GamePrint "object";
  TraceOperation 022057 (Je [Var (Global 122),Con 1] (Branch T (Dloc 022064)));
  Let b1 = M[009061];
  Let b2 = M[009062];
  if (Equal(MakeHiLo(b1,b2),1)) {
    Jump: 022064
  } else {
    TraceOperation 022061 (Print "s");
    GamePrint "s";
    Jump: 022064
  }
LocOp 022064:
  TraceOperation 022064 (Print " that you mentioned ");
  GamePrint " that you mentioned ";
  TraceOperation 022077 (Je [Var (Global 122),Con 1] (Branch T (Dloc 022087)));
  Let b1 = M[009061];
  Let b2 = M[009062];
  if (Equal(MakeHiLo(b1,b2),1)) {
    Jump: 022087
  } else {
    TraceOperation 022081 (Print "are");
    GamePrint "are";
    TraceOperation 022084 (Jump 022090);
    Jump: 022090
  }
LocOp 022087:
  TraceOperation 022087 (Print "is");
  GamePrint "is";
  Jump: 022090
LocOp 022090:
  TraceOperation 022090 (Print "n't here.");
  GamePrint "n't here.";
  TraceOperation 022097 New_line;
  GamePrint "\n";
  TraceOperation 022098 (Jump 022295);
  Jump: 022295
LocOp 022101:
  TraceOperation 022101 (Jz (Var (Local 10)) (Branch F (Dloc 022295)));
  if (IsZero(GetLocal(10))) {
    TraceOperation 022105 (Print "There's nothing here you can take.");
    GamePrint "There's nothing here you can take.";
    TraceOperation 022122 New_line;
    GamePrint "\n";
    TraceOperation 022123 (Jump 022295);
    Jump: 022295
  } else {
    Jump: 022295
  }
LocOp 022126:
  TraceOperation 022126 (Jz (Var (Local 8)) (Branch T (Dloc 022136)));
  if (IsZero(GetLocal(8))) {
    Jump: 022136
  } else {
    TraceOperation 022129 (Loadw (Var (Global 86)) (Var (Local 4)) (Local 9));
    Let b1 = M[008989];
    Let b2 = M[008990];
    Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,GetLocal(4)))];
    Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,GetLocal(4))),1)];
    SetLocal 9 MakeHiLo(b3,b4);
    TraceOperation 022133 (Jump 022140);
    Jump: 022140
  }
LocOp 022136:
  TraceOperation 022136 (Loadw (Var (Global 85)) (Var (Local 4)) (Local 9));
  Let b1 = M[008987];
  Let b2 = M[008988];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,GetLocal(4)))];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,GetLocal(4))),1)];
  SetLocal 9 MakeHiLo(b3,b4);
  Jump: 022140
LocOp 022140:
  TraceOperation 022140 (Jz (Var (Local 8)) (Branch T (Dloc 022149)));
  if (IsZero(GetLocal(8))) {
    Jump: 022149
  } else {
    TraceOperation 022143 (Push (Var (Local 9)));
    PushStack GetLocal(9);
    TraceOperation 022146 (Jump 022152);
    Jump: 022152
  }
LocOp 022149:
  TraceOperation 022149 (Push (Var (Local 5)));
  PushStack GetLocal(5);
  Jump: 022152
LocOp 022152:
  TraceOperation 022152 (Store (Con 134) (Var Sp));
  PopStack popped1;
  SetByte 009053 HiByte(popped1);
  SetByte 009054 LoByte(popped1);
  TraceOperation 022155 (Jz (Var (Local 8)) (Branch T (Dloc 022164)));
  if (IsZero(GetLocal(8))) {
    Jump: 022164
  } else {
    TraceOperation 022158 (Push (Var (Local 5)));
    PushStack GetLocal(5);
    TraceOperation 022161 (Jump 022167);
    Jump: 022167
  }
LocOp 022164:
  TraceOperation 022164 (Push (Var (Local 9)));
  PushStack GetLocal(9);
  Jump: 022167
LocOp 022167:
  TraceOperation 022167 (Store (Con 135) (Var Sp));
  PopStack popped1;
  SetByte 009055 HiByte(popped1);
  SetByte 009056 LoByte(popped1);
  TraceOperation 022170 (Jg (Var (Local 3)) (Con 1) (Branch T (Dloc 022189)));
  if (GreaterThan(GetLocal(3),1)) {
    Jump: 022189
  } else {
    TraceOperation 022174 (Loadw (Var (Global 100)) (Con 6) Sp);
    Let b2 = M[009017];
    Let b3 = M[009018];
    Let b4 = M[Offset(Address(MakeHiLo(b2,b3)),12)];
    Let b5 = M[Offset(Offset(Address(MakeHiLo(b2,b3)),12),1)];
    PushStack MakeHiLo(b4,b5);
    TraceOperation 022178 (Loadw (Var Sp) (Con 0) Sp);
    PopStack popped6;
    Let b7 = M[Offset(Address(popped6),0)];
    Let b8 = M[Offset(Offset(Address(popped6),0),1)];
    PushStack MakeHiLo(b7,b8);
    TraceOperation 022182 (Je [Var Sp,Con 15228] (Branch F (Dloc 022276)));
    PopStack popped9;
    if (Equal(popped9,15228)) {
      Jump: 022189
    } else {
      Jump: 022276
    }
  }
LocOp 022189:
  TraceOperation 022189 (Je [Var (Local 9),Con 11] (Branch F (Dloc 022198)));
  if (Equal(GetLocal(9),11)) {
    TraceOperation 022193 (Inc (Con 138));
    Let b1 = M[009061];
    Let b2 = M[009062];
    SetByte 009061 HiByte(Add(MakeHiLo(b1,b2),1));
    SetByte 009062 LoByte(Add(MakeHiLo(b1,b2),1));
    TraceOperation 022195 (Jump 022032);
    Jump: 022032
  } else {
    Jump: 022198
  }
LocOp 022198:
  TraceOperation 022198 (Je [Var (Global 120),Con 93] (Branch F (Dloc 022226)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),93)) {
    TraceOperation 022202 (Jz (Var (Global 119)) (Branch T (Dloc 022226)));
    Let b3 = M[009055];
    Let b4 = M[009056];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 022226
    } else {
      TraceOperation 022205 (Loadw (Var (Global 100)) (Con 6) Sp);
      Let b5 = M[009017];
      Let b6 = M[009018];
      Let b7 = M[Offset(Address(MakeHiLo(b5,b6)),12)];
      Let b8 = M[Offset(Offset(Address(MakeHiLo(b5,b6)),12),1)];
      PushStack MakeHiLo(b7,b8);
      TraceOperation 022209 (Loadw (Var Sp) (Con 0) Sp);
      PopStack popped9;
      Let b10 = M[Offset(Address(popped9),0)];
      Let b11 = M[Offset(Offset(Address(popped9),0),1)];
      PushStack MakeHiLo(b10,b11);
      TraceOperation 022213 (Je [Var Sp,Con 15228] (Branch F (Dloc 022226)));
      PopStack popped12;
      if (Equal(popped12,15228)) {
        TraceOperation 022219 (Jin (Var (Global 118)) (Var (Global 119)) (Branch T (Dloc 022226)));
        Let b13 = M[009053];
        Let b14 = M[009054];
        Let b15 = M[009055];
        Let b16 = M[009056];
        Let b17 = M[Offset(Offset(000741,Mul(MakeHiLo(b13,b14),9)),4)];
        if (Equal(MakeHiLo(b15,b16),Widen(b17))) {
          Jump: 022226
        } else {
          TraceOperation 022223 (Jump 022032);
          Jump: 022032
        }
      } else {
        Jump: 022226
      }
    }
  } else {
    Jump: 022226
  }
LocOp 022226:
  TraceOperation 022226 (Je [Var (Global 80),Con 1] (Branch F (Dloc 022262)));
  Let b1 = M[008977];
  Let b2 = M[008978];
  if (Equal(MakeHiLo(b1,b2),1)) {
    TraceOperation 022230 (Je [Var (Global 120),Con 93] (Branch F (Dloc 022262)));
    Let b3 = M[009057];
    Let b4 = M[009058];
    if (Equal(MakeHiLo(b3,b4),93)) {
      TraceOperation 022234 (Get_parent (Var (Local 9)) Sp);
      Let b5 = M[Offset(Offset(000741,Mul(GetLocal(9),9)),4)];
      PushStack Widen(b5);
      TraceOperation 022237 (Je [Var Sp,Var (Global 111),Var (Global 0)] (Branch T (Dloc 022251)));
      PopStack popped6;
      Let b7 = M[009039];
      Let b8 = M[009040];
      Let b9 = M[008817];
      Let b10 = M[008818];
      if (LogOr(Equal(popped6,MakeHiLo(b7,b8)),Equal(popped6,MakeHiLo(b9,b10)))) {
        Jump: 022251
      } else {
        TraceOperation 022243 (Get_parent (Var (Local 9)) Sp);
        Let b11 = M[Offset(Offset(000741,Mul(GetLocal(9),9)),4)];
        PushStack Widen(b11);
        TraceOperation 022246 (Test_attr (Var Sp) (Con 10) (Branch F (Dloc 022032)));
        PopStack popped12;
        Let b13 = M[Offset(Offset(000741,Mul(popped12,9)),1)];
        if (TestBit(b13,5)) {
          Jump: 022251
        } else {
          Jump: 022032
        }
      }
    } else {
      Jump: 022262
    }
  } else {
    Jump: 022262
  }
LocOp 022251:
  TraceOperation 022251 (Test_attr (Var (Local 9)) (Con 17) (Branch T (Dloc 022262)));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(9),9)),2)];
  if (TestBit(b1,6)) {
    Jump: 022262
  } else {
    TraceOperation 022255 (Test_attr (Var (Local 9)) (Con 13) (Branch T (Dloc 022262)));
    Let b2 = M[Offset(Offset(000741,Mul(GetLocal(9),9)),1)];
    if (TestBit(b2,2)) {
      Jump: 022262
    } else {
      TraceOperation 022259 (Jump 022032);
      Jump: 022032
    }
  }
LocOp 022262:
  TraceOperation 022262 (Je [Var (Local 9),Con 12] (Branch F (Dloc 022271)));
  if (Equal(GetLocal(9),12)) {
    TraceOperation 022266 (Print_obj (Var (Global 107)));
    Let b1 = M[009031];
    Let b2 = M[009032];
    Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7)];
    Let b4 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7),1)];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    if (IsZeroByte(b5)) {
      GamePrint "";
      TraceOperation 022268 (Jump 022273);
      Jump: 022273
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
      TraceOperation 022268 (Jump 022273);
      Jump: 022273
    }
  } else {
    Jump: 022271
  }
LocOp 022271:
  TraceOperation 022271 (Print_obj (Var (Local 9)));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(9),9)),7)];
  Let b2 = M[Offset(Offset(Offset(000741,Mul(GetLocal(9),9)),7),1)];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  if (IsZeroByte(b3)) {
    GamePrint "";
    Jump: 022273
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
    Jump: 022273
  }
LocOp 022273:
  TraceOperation 022273 (Print ": ");
  GamePrint ": ";
  Jump: 022276
LocOp 022276:
  TraceOperation 022276 (Store (Con 10) (Con 1));
  SetLocal 10 1;
  TraceOperation 022279 (Call (Floc 022396) [Var (Global 120),Var (Global 118),Var (Global 119)] (Local 7));
  Let b1 = M[009057];
  Let b2 = M[009058];
  Let b3 = M[009053];
  Let b4 = M[009054];
  Let b5 = M[009055];
  Let b6 = M[009056];
  PushFrame 022279;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 MakeHiLo(b3,b4);
  SetLocal 3 MakeHiLo(b5,b6);
  JumpCall: 022396, #actuals: 3
LocReturn 022279:
  SetLocal 7 call_result;
  TraceOperation 022287 (Je [Var (Local 7),Con 2] (Branch F (Dloc 022032)));
  if (Equal(GetLocal(7),2)) {
    TraceOperation 022292 (Jump 022295);
    Jump: 022295
  } else {
    Jump: 022032
  }
LocOp 022295:
  TraceOperation 022295 (Je [Var (Local 7),Con 2] (Branch T (Dloc 022311)));
  if (Equal(GetLocal(7),2)) {
    Jump: 022311
  } else {
    TraceOperation 022299 (Get_parent (Var (Global 111)) Sp);
    Let b1 = M[009039];
    Let b2 = M[009040];
    Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),4)];
    PushStack Widen(b3);
    TraceOperation 022302 (Get_prop (Var Sp) (Con 17) Sp);
    PopStack popped4;
    Let b5 = M[Offset(Offset(000741,Mul(popped4,9)),7)];
    Let b6 = M[Offset(Offset(Offset(000741,Mul(popped4,9)),7),1)];
    Let b7 = M[Address(MakeHiLo(b5,b6))];
    Error: getPropsA
  }
LocReturn 022306:
  SetLocal 7 call_result;
  Jump: 022311
LocOp 022311:
  TraceOperation 022311 (Je [Var (Global 120),Con 8,Con 137,Con 15] (Branch T (Dloc 022337)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),8),Equal(MakeHiLo(b1,b2),137)),Equal(MakeHiLo(b1,b2),15))) {
    Jump: 022337
  } else {
    TraceOperation 022318 (Je [Var (Global 120),Con 12,Con 9,Con 7] (Branch F (Dloc 022328)));
    Let b3 = M[009057];
    Let b4 = M[009058];
    if (LogOr(LogOr(Equal(MakeHiLo(b3,b4),12),Equal(MakeHiLo(b3,b4),9)),Equal(MakeHiLo(b3,b4),7))) {
      TraceOperation 022325 (Jump 022337);
      Jump: 022337
    } else {
      Jump: 022328
    }
  }
LocOp 022328:
  TraceOperation 022328 (Store (Con 142) (Var (Global 120)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  SetByte 009069 b1;
  SetByte 009070 b2;
  TraceOperation 022331 (Store (Con 141) (Var (Global 118)));
  Let b3 = M[009053];
  Let b4 = M[009054];
  SetByte 009067 b3;
  SetByte 009068 b4;
  TraceOperation 022334 (Store (Con 140) (Var (Global 119)));
  Let b5 = M[009055];
  Let b6 = M[009056];
  SetByte 009065 b5;
  SetByte 009066 b6;
  Jump: 022337
LocOp 022337:
  TraceOperation 022337 (Je [Var (Local 7),Con 2] (Branch F (Dloc 022350)));
  if (Equal(GetLocal(7),2)) {
    TraceOperation 022341 (Store (Con 124) (Con 0));
    SetByte 009033 0;
    SetByte 009034 0;
    TraceOperation 022344 (Jump 022350);
    Jump: 022350
  } else {
    Jump: 022350
  }
LocOp 022347:
  TraceOperation 022347 (Store (Con 124) (Con 0));
  SetByte 009033 0;
  SetByte 009034 0;
  Jump: 022350
LocOp 022350:
  TraceOperation 022350 (Jz (Var (Global 127)) (Branch T (Dloc 021823)));
  Let b1 = M[009071];
  Let b2 = M[009072];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 021823
  } else {
    TraceOperation 022354 (Je [Var (Global 120),Con 2,Con 1,Con 111] (Branch T (Dloc 021823)));
    Let b3 = M[009057];
    Let b4 = M[009058];
    if (LogOr(LogOr(Equal(MakeHiLo(b3,b4),2),Equal(MakeHiLo(b3,b4),1)),Equal(MakeHiLo(b3,b4),111))) {
      Jump: 021823
    } else {
      TraceOperation 022362 (Je [Var (Global 120),Con 12,Con 8,Con 0] (Branch T (Dloc 021823)));
      Let b5 = M[009057];
      Let b6 = M[009058];
      if (LogOr(LogOr(Equal(MakeHiLo(b5,b6),12),Equal(MakeHiLo(b5,b6),8)),Equal(MakeHiLo(b5,b6),0))) {
        Jump: 021823
      } else {
        TraceOperation 022370 (Je [Var (Global 120),Con 9,Con 6,Con 5] (Branch T (Dloc 021823)));
        Let b7 = M[009057];
        Let b8 = M[009058];
        if (LogOr(LogOr(Equal(MakeHiLo(b7,b8),9),Equal(MakeHiLo(b7,b8),6)),Equal(MakeHiLo(b7,b8),5))) {
          Jump: 021823
        } else {
          TraceOperation 022378 (Je [Var (Global 120),Con 7,Con 11,Con 10] (Branch F (Dloc 022388)));
          Let b9 = M[009057];
          Let b10 = M[009058];
          if (LogOr(LogOr(Equal(MakeHiLo(b9,b10),7),Equal(MakeHiLo(b9,b10),11)),Equal(MakeHiLo(b9,b10),10))) {
            TraceOperation 022385 (Jump 021823);
            Jump: 021823
          } else {
            Jump: 022388
          }
        }
      }
    }
  }
LocOp 022388:
  TraceOperation 022388 (Call (Floc 021700) [] (Local 7));
  PushFrame 022388;
  JumpCall: 021700, #actuals: 0
LocReturn 022388:
  SetLocal 7 call_result;
  TraceOperation 022393 (Jump 021823);
  Jump: 021823
--[37]--------------------------------------------------
LocRoutine 022396:
  MakeRoutineFrame 7;
  if (LessThanByte(num_actuals,7)) {
    SetLocal 7 0;
    if (LessThanByte(num_actuals,6)) {
      SetLocal 6 0;
      if (LessThanByte(num_actuals,5)) {
        SetLocal 5 0;
        if (LessThanByte(num_actuals,4)) {
          SetLocal 4 0;
          if (LessThanByte(num_actuals,3)) {
            SetLocal 3 0;
            if (LessThanByte(num_actuals,2)) {
              SetLocal 2 0;
              if (LessThanByte(num_actuals,1)) {
                SetLocal 1 0;
              }
            }
          }
        }
      }
    }
  }
  Jump: 022411
LocOp 022411:
  TraceOperation 022411 (Store (Con 5) (Var (Global 120)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  SetLocal 5 MakeHiLo(b1,b2);
  TraceOperation 022414 (Store (Con 6) (Var (Global 118)));
  Let b3 = M[009053];
  Let b4 = M[009054];
  SetLocal 6 MakeHiLo(b3,b4);
  TraceOperation 022417 (Store (Con 7) (Var (Global 119)));
  Let b5 = M[009055];
  Let b6 = M[009056];
  SetLocal 7 MakeHiLo(b5,b6);
  TraceOperation 022420 (Je [Con 12,Var (Local 3),Var (Local 2)] (Branch F (Dloc 022456)));
  if (LogOr(Equal(12,GetLocal(3)),Equal(12,GetLocal(2)))) {
    TraceOperation 022426 (Je [Var (Global 106),Var (Global 0)] (Branch T (Dloc 022456)));
    Let b7 = M[009029];
    Let b8 = M[009030];
    Let b9 = M[008817];
    Let b10 = M[008818];
    if (Equal(MakeHiLo(b7,b8),MakeHiLo(b9,b10))) {
      Jump: 022456
    } else {
      TraceOperation 022430 (Print "I don't see what you are referring to.");
      GamePrint "I don't see what you are referring to.";
      TraceOperation 022453 New_line;
      GamePrint "\n";
      TraceOperation 022454 (Ret (Con 2));
      PopFrame return_address_11;
      JumpReturn: return_address_11, result: 2
    }
  } else {
    Jump: 022456
  }
LocOp 022456:
  TraceOperation 022456 (Je [Var (Local 2),Con 12] (Branch F (Dloc 022463)));
  if (Equal(GetLocal(2),12)) {
    TraceOperation 022460 (Store (Con 2) (Var (Global 107)));
    Let b1 = M[009031];
    Let b2 = M[009032];
    SetLocal 2 MakeHiLo(b1,b2);
    Jump: 022463
  } else {
    Jump: 022463
  }
LocOp 022463:
  TraceOperation 022463 (Je [Var (Local 3),Con 12] (Branch F (Dloc 022470)));
  if (Equal(GetLocal(3),12)) {
    TraceOperation 022467 (Store (Con 3) (Var (Global 107)));
    Let b1 = M[009031];
    Let b2 = M[009032];
    SetLocal 3 MakeHiLo(b1,b2);
    Jump: 022470
  } else {
    Jump: 022470
  }
LocOp 022470:
  TraceOperation 022470 (Store (Con 136) (Var (Local 1)));
  SetByte 009057 HiByte(GetLocal(1));
  SetByte 009058 LoByte(GetLocal(1));
  TraceOperation 022473 (Store (Con 134) (Var (Local 2)));
  SetByte 009053 HiByte(GetLocal(2));
  SetByte 009054 LoByte(GetLocal(2));
  TraceOperation 022476 (Jz (Var (Global 118)) (Branch T (Dloc 022493)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 022493
  } else {
    TraceOperation 022479 (Je [Var (Global 119),Con 12] (Branch T (Dloc 022493)));
    Let b3 = M[009055];
    Let b4 = M[009056];
    if (Equal(MakeHiLo(b3,b4),12)) {
      Jump: 022493
    } else {
      TraceOperation 022483 (Je [Var (Global 120),Con 137] (Branch T (Dloc 022493)));
      Let b5 = M[009057];
      Let b6 = M[009058];
      if (Equal(MakeHiLo(b5,b6),137)) {
        Jump: 022493
      } else {
        TraceOperation 022487 (Store (Con 123) (Var (Global 118)));
        Let b7 = M[009053];
        Let b8 = M[009054];
        SetByte 009031 b7;
        SetByte 009032 b8;
        TraceOperation 022490 (Store (Con 122) (Var (Global 0)));
        Let b9 = M[008817];
        Let b10 = M[008818];
        SetByte 009029 b9;
        SetByte 009030 b10;
        Jump: 022493
      }
    }
  }
LocOp 022493:
  TraceOperation 022493 (Store (Con 135) (Var (Local 3)));
  SetByte 009055 HiByte(GetLocal(3));
  SetByte 009056 LoByte(GetLocal(3));
  TraceOperation 022496 (Je [Con 11,Var (Global 118),Var (Global 119)] (Branch F (Dloc 022513)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[009055];
  Let b4 = M[009056];
  if (LogOr(Equal(11,MakeHiLo(b1,b2)),Equal(11,MakeHiLo(b3,b4)))) {
    TraceOperation 022502 (Call (Floc 020386) [] (Local 4));
    PushFrame 022502;
    JumpCall: 020386, #actuals: 0
  } else {
    Jump: 022513
  }
LocReturn 022502:
  SetLocal 4 call_result;
  TraceOperation 022507 (Jz (Var (Local 4)) (Branch T (Dloc 022513)));
  if (IsZero(GetLocal(4))) {
    Jump: 022513
  } else {
    TraceOperation 022510 (Jump 022644);
    Jump: 022644
  }
LocOp 022513:
  TraceOperation 022513 (Store (Con 2) (Var (Global 118)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  SetLocal 2 MakeHiLo(b1,b2);
  TraceOperation 022516 (Store (Con 3) (Var (Global 119)));
  Let b3 = M[009055];
  Let b4 = M[009056];
  SetLocal 3 MakeHiLo(b3,b4);
  TraceOperation 022519 (Get_prop (Var (Global 111)) (Con 17) Sp);
  Let b5 = M[009039];
  Let b6 = M[009040];
  Let b7 = M[Offset(Offset(000741,Mul(MakeHiLo(b5,b6),9)),7)];
  Let b8 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b5,b6),9)),7),1)];
  Let b9 = M[Address(MakeHiLo(b7,b8))];
  Error: getPropsA
LocReturn 022523:
  SetLocal 4 call_result;
  TraceOperation 022527 (Jz (Var (Local 4)) (Branch T (Dloc 022533)));
  if (IsZero(GetLocal(4))) {
    Jump: 022533
  } else {
    TraceOperation 022530 (Jump 022644);
    Jump: 022644
  }
LocOp 022533:
  TraceOperation 022533 (Get_parent (Var (Global 111)) Sp);
  Let b1 = M[009039];
  Let b2 = M[009040];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),4)];
  PushStack Widen(b3);
  TraceOperation 022536 (Get_prop (Var Sp) (Con 17) Sp);
  PopStack popped4;
  Let b5 = M[Offset(Offset(000741,Mul(popped4,9)),7)];
  Let b6 = M[Offset(Offset(Offset(000741,Mul(popped4,9)),7),1)];
  Let b7 = M[Address(MakeHiLo(b5,b6))];
  Error: getPropsA
LocReturn 022540:
  SetLocal 4 call_result;
  TraceOperation 022545 (Jz (Var (Local 4)) (Branch T (Dloc 022551)));
  if (IsZero(GetLocal(4))) {
    Jump: 022551
  } else {
    TraceOperation 022548 (Jump 022644);
    Jump: 022644
  }
LocOp 022551:
  TraceOperation 022551 (Loadw (Var (Global 156)) (Var (Local 1)) Sp);
  Let b1 = M[009129];
  Let b2 = M[009130];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,GetLocal(1)))];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,GetLocal(1))),1)];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 022555 (Call (Fvar Sp) [] (Local 4));
  PopStack popped5;
  if (IsZeroAddress(PackedAddress Z3(popped5))) {
    SetLocal 4 0;
    TraceOperation 022559 (Jz (Var (Local 4)) (Branch T (Dloc 022565)));
    if (IsZero(GetLocal(4))) {
      Jump: 022565
    } else {
      TraceOperation 022562 (Jump 022644);
      Jump: 022644
    }
  } else {
    PushFrame 022555;
    JumpCall: PackedAddress Z3(popped5), #actuals: 0
  }
LocReturn 022555:
  SetLocal 4 call_result;
  TraceOperation 022559 (Jz (Var (Local 4)) (Branch T (Dloc 022565)));
  if (IsZero(GetLocal(4))) {
    Jump: 022565
  } else {
    TraceOperation 022562 (Jump 022644);
    Jump: 022644
  }
LocOp 022565:
  TraceOperation 022565 (Jz (Var (Local 3)) (Branch T (Dloc 022582)));
  if (IsZero(GetLocal(3))) {
    Jump: 022582
  } else {
    TraceOperation 022568 (Get_prop (Var (Local 3)) (Con 17) Sp);
    Let b1 = M[Offset(Offset(000741,Mul(GetLocal(3),9)),7)];
    Let b2 = M[Offset(Offset(Offset(000741,Mul(GetLocal(3),9)),7),1)];
    Let b3 = M[Address(MakeHiLo(b1,b2))];
    Error: getPropsA
  }
LocReturn 022572:
  SetLocal 4 call_result;
  TraceOperation 022576 (Jz (Var (Local 4)) (Branch T (Dloc 022582)));
  if (IsZero(GetLocal(4))) {
    Jump: 022582
  } else {
    TraceOperation 022579 (Jump 022644);
    Jump: 022644
  }
LocOp 022582:
  TraceOperation 022582 (Jz (Var (Local 2)) (Branch T (Dloc 022612)));
  if (IsZero(GetLocal(2))) {
    Jump: 022612
  } else {
    TraceOperation 022585 (Je [Var (Local 1),Con 137] (Branch T (Dloc 022612)));
    if (Equal(GetLocal(1),137)) {
      Jump: 022612
    } else {
      TraceOperation 022589 (Get_parent (Var (Local 2)) Sp);
      Let b1 = M[Offset(Offset(000741,Mul(GetLocal(2),9)),4)];
      PushStack Widen(b1);
      TraceOperation 022592 (Jz (Var Sp) (Branch T (Dloc 022612)));
      PopStack popped2;
      if (IsZero(popped2)) {
        Jump: 022612
      } else {
        TraceOperation 022595 (Get_parent (Var (Local 2)) Sp);
        Let b3 = M[Offset(Offset(000741,Mul(GetLocal(2),9)),4)];
        PushStack Widen(b3);
        TraceOperation 022598 (Get_prop (Var Sp) (Con 2) Sp);
        PopStack popped4;
        Let b5 = M[Offset(Offset(000741,Mul(popped4,9)),7)];
        Let b6 = M[Offset(Offset(Offset(000741,Mul(popped4,9)),7),1)];
        Let b7 = M[Address(MakeHiLo(b5,b6))];
        Error: getPropsA
      }
    }
  }
LocReturn 022602:
  SetLocal 4 call_result;
  TraceOperation 022606 (Jz (Var (Local 4)) (Branch T (Dloc 022612)));
  if (IsZero(GetLocal(4))) {
    Jump: 022612
  } else {
    TraceOperation 022609 (Jump 022644);
    Jump: 022644
  }
LocOp 022612:
  TraceOperation 022612 (Jz (Var (Local 2)) (Branch T (Dloc 022633)));
  if (IsZero(GetLocal(2))) {
    Jump: 022633
  } else {
    TraceOperation 022615 (Je [Var (Local 1),Con 137] (Branch T (Dloc 022633)));
    if (Equal(GetLocal(1),137)) {
      Jump: 022633
    } else {
      TraceOperation 022619 (Get_prop (Var (Local 2)) (Con 17) Sp);
      Let b1 = M[Offset(Offset(000741,Mul(GetLocal(2),9)),7)];
      Let b2 = M[Offset(Offset(Offset(000741,Mul(GetLocal(2),9)),7),1)];
      Let b3 = M[Address(MakeHiLo(b1,b2))];
      Error: getPropsA
    }
  }
LocReturn 022623:
  SetLocal 4 call_result;
  TraceOperation 022627 (Jz (Var (Local 4)) (Branch T (Dloc 022633)));
  if (IsZero(GetLocal(4))) {
    Jump: 022633
  } else {
    TraceOperation 022630 (Jump 022644);
    Jump: 022644
  }
LocOp 022633:
  TraceOperation 022633 (Loadw (Var (Global 155)) (Var (Local 1)) Sp);
  Let b1 = M[009127];
  Let b2 = M[009128];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,GetLocal(1)))];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,GetLocal(1))),1)];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 022637 (Call (Fvar Sp) [] (Local 4));
  PopStack popped5;
  if (IsZeroAddress(PackedAddress Z3(popped5))) {
    SetLocal 4 0;
    TraceOperation 022641 (Jz (Var (Local 4)) (Branch T (Dloc 022644)));
    if (IsZero(GetLocal(4))) {
      Jump: 022644
    } else {
      Jump: 022644
    }
  } else {
    PushFrame 022637;
    JumpCall: PackedAddress Z3(popped5), #actuals: 0
  }
LocReturn 022637:
  SetLocal 4 call_result;
  TraceOperation 022641 (Jz (Var (Local 4)) (Branch T (Dloc 022644)));
  if (IsZero(GetLocal(4))) {
    Jump: 022644
  } else {
    Jump: 022644
  }
LocOp 022644:
  TraceOperation 022644 (Store (Con 136) (Var (Local 5)));
  SetByte 009057 HiByte(GetLocal(5));
  SetByte 009058 LoByte(GetLocal(5));
  TraceOperation 022647 (Store (Con 134) (Var (Local 6)));
  SetByte 009053 HiByte(GetLocal(6));
  SetByte 009054 LoByte(GetLocal(6));
  TraceOperation 022650 (Store (Con 135) (Var (Local 7)));
  SetByte 009055 HiByte(GetLocal(7));
  SetByte 009056 LoByte(GetLocal(7));
  TraceOperation 022653 (Ret (Var (Local 4)));
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: GetLocal(4)
--[38]--------------------------------------------------
LocRoutine 022656:
  MakeRoutineFrame 11;
  if (LessThanByte(num_actuals,11)) {
    SetLocal 11 -1;
    if (LessThanByte(num_actuals,10)) {
      SetLocal 10 0;
      if (LessThanByte(num_actuals,9)) {
        SetLocal 9 0;
        if (LessThanByte(num_actuals,8)) {
          SetLocal 8 0;
          if (LessThanByte(num_actuals,7)) {
            SetLocal 7 0;
            if (LessThanByte(num_actuals,6)) {
              SetLocal 6 0;
              if (LessThanByte(num_actuals,5)) {
                SetLocal 5 0;
                if (LessThanByte(num_actuals,4)) {
                  SetLocal 4 0;
                  if (LessThanByte(num_actuals,3)) {
                    SetLocal 3 0;
                    if (LessThanByte(num_actuals,2)) {
                      SetLocal 2 0;
                      if (LessThanByte(num_actuals,1)) {
                        SetLocal 1 1;
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  Jump: 022679
LocOp 022679:
  TraceOperation 022679 (Inc_chk (Con 11) (Con 9) (Branch F (Dloc 022686)));
  SetLocal 11 Add(GetLocal(11),1);
  if (GreaterThanEqual(GetLocal(11),9)) {
    TraceOperation 022683 (Jump 022694);
    Jump: 022694
  } else {
    Jump: 022686
  }
LocOp 022686:
  TraceOperation 022686 (Storew (Var (Global 100)) (Var (Local 11)) (Con 0));
  Let b1 = M[009017];
  Let b2 = M[009018];
  SetByte Offset(Address(MakeHiLo(b1,b2)),Mul(2,GetLocal(11))) 0;
  SetByte Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,GetLocal(11))),1) 0;
  TraceOperation 022691 (Jump 022679);
  Jump: 022679
LocOp 022694:
  TraceOperation 022694 (Store (Con 104) (Con 0));
  SetByte 008993 0;
  SetByte 008994 0;
  TraceOperation 022697 (Store (Con 120) (Con 0));
  SetByte 009025 0;
  SetByte 009026 0;
  TraceOperation 022700 (Storew (Var (Global 86)) (Var (Global 81)) (Con 0));
  Let b1 = M[008989];
  Let b2 = M[008990];
  Let b3 = M[008979];
  Let b4 = M[008980];
  SetByte Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4))) 0;
  SetByte Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4))),1) 0;
  TraceOperation 022705 (Storew (Var (Global 85)) (Var (Global 81)) (Con 0));
  Let b5 = M[008987];
  Let b6 = M[008988];
  Let b7 = M[008979];
  Let b8 = M[008980];
  SetByte Offset(Address(MakeHiLo(b5,b6)),Mul(2,MakeHiLo(b7,b8))) 0;
  SetByte Offset(Offset(Address(MakeHiLo(b5,b6)),Mul(2,MakeHiLo(b7,b8))),1) 0;
  TraceOperation 022710 (Storew (Var (Global 84)) (Var (Global 81)) (Con 0));
  Let b9 = M[008985];
  Let b10 = M[008986];
  Let b11 = M[008979];
  Let b12 = M[008980];
  SetByte Offset(Address(MakeHiLo(b9,b10)),Mul(2,MakeHiLo(b11,b12))) 0;
  SetByte Offset(Offset(Address(MakeHiLo(b9,b10)),Mul(2,MakeHiLo(b11,b12))),1) 0;
  TraceOperation 022715 (Jz (Var (Global 96)) (Branch F (Dloc 022741)));
  Let b13 = M[009009];
  Let b14 = M[009010];
  if (IsZero(MakeHiLo(b13,b14))) {
    TraceOperation 022718 (Je [Var (Global 111),Var (Global 128)] (Branch T (Dloc 022741)));
    Let b15 = M[009039];
    Let b16 = M[009040];
    Let b17 = M[009073];
    Let b18 = M[009074];
    if (Equal(MakeHiLo(b15,b16),MakeHiLo(b17,b18))) {
      Jump: 022741
    } else {
      TraceOperation 022722 (Store (Con 127) (Var (Global 128)));
      Let b19 = M[009073];
      Let b20 = M[009074];
      SetByte 009039 b19;
      SetByte 009040 b20;
      TraceOperation 022725 (Get_parent (Var (Global 111)) Sp);
      Let b21 = M[009039];
      Let b22 = M[009040];
      Let b23 = M[Offset(Offset(000741,Mul(MakeHiLo(b21,b22),9)),4)];
      PushStack Widen(b23);
      TraceOperation 022728 (Test_attr (Var Sp) (Con 27) (Branch T (Dloc 022735)));
      PopStack popped24;
      Let b25 = M[Offset(Offset(000741,Mul(popped24,9)),3)];
      if (TestBit(b25,4)) {
        Jump: 022735
      } else {
        TraceOperation 022732 (Get_parent (Var (Global 111)) (Global 0));
        Let b26 = M[009039];
        Let b27 = M[009040];
        Let b28 = M[Offset(Offset(000741,Mul(MakeHiLo(b26,b27),9)),4)];
        SetByte 008817 HiByte(Widen(b28));
        SetByte 008818 LoByte(Widen(b28));
        Jump: 022735
      }
    }
  } else {
    Jump: 022741
  }
LocOp 022735:
  TraceOperation 022735 (Call (Floc 027746) [Var (Global 0)] (Global 66));
  Let b1 = M[008817];
  Let b2 = M[008818];
  PushFrame 022735;
  SetLocal 1 MakeHiLo(b1,b2);
  JumpCall: 027746, #actuals: 1
LocReturn 022735:
  SetByte 008949 HiByte(call_result);
  SetByte 008950 LoByte(call_result);
  Jump: 022741
LocOp 022741:
  TraceOperation 022741 (Jz (Var (Global 108)) (Branch T (Dloc 022765)));
  Let b1 = M[009033];
  Let b2 = M[009034];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 022765
  } else {
    TraceOperation 022744 (Store (Con 1) (Var (Global 108)));
    Let b3 = M[009033];
    Let b4 = M[009034];
    SetLocal 1 MakeHiLo(b3,b4);
    TraceOperation 022747 (Jz (Var (Global 70)) (Branch F (Dloc 022759)));
    Let b5 = M[008957];
    Let b6 = M[008958];
    if (IsZero(MakeHiLo(b5,b6))) {
      TraceOperation 022750 (Je [Var (Global 128),Var (Global 111)] (Branch F (Dloc 022759)));
      Let b7 = M[009073];
      Let b8 = M[009074];
      Let b9 = M[009039];
      Let b10 = M[009040];
      if (Equal(MakeHiLo(b7,b8),MakeHiLo(b9,b10))) {
        TraceOperation 022754 (Je [Var (Global 120),Con 112] (Branch T (Dloc 022759)));
        Let b11 = M[009057];
        Let b12 = M[009058];
        if (Equal(MakeHiLo(b11,b12),112)) {
          Jump: 022759
        } else {
          TraceOperation 022758 New_line;
          GamePrint "\n";
          Jump: 022759
        }
      } else {
        Jump: 022759
      }
    } else {
      Jump: 022759
    }
  }
LocOp 022759:
  TraceOperation 022759 (Store (Con 124) (Con 0));
  SetByte 009033 0;
  SetByte 009034 0;
  TraceOperation 022762 (Jump 022800);
  Jump: 022800
LocOp 022765:
  TraceOperation 022765 (Store (Con 127) (Var (Global 128)));
  Let b1 = M[009073];
  Let b2 = M[009074];
  SetByte 009039 b1;
  SetByte 009040 b2;
  TraceOperation 022768 (Store (Con 112) (Con 0));
  SetByte 009009 0;
  SetByte 009010 0;
  TraceOperation 022771 (Get_parent (Var (Global 111)) Sp);
  Let b3 = M[009039];
  Let b4 = M[009040];
  Let b5 = M[Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),4)];
  PushStack Widen(b5);
  TraceOperation 022774 (Test_attr (Var Sp) (Con 27) (Branch T (Dloc 022781)));
  PopStack popped6;
  Let b7 = M[Offset(Offset(000741,Mul(popped6,9)),3)];
  if (TestBit(b7,4)) {
    Jump: 022781
  } else {
    TraceOperation 022778 (Get_parent (Var (Global 111)) (Global 0));
    Let b8 = M[009039];
    Let b9 = M[009040];
    Let b10 = M[Offset(Offset(000741,Mul(MakeHiLo(b8,b9),9)),4)];
    SetByte 008817 HiByte(Widen(b10));
    SetByte 008818 LoByte(Widen(b10));
    Jump: 022781
  }
LocOp 022781:
  TraceOperation 022781 (Call (Floc 027746) [Var (Global 0)] (Global 66));
  Let b1 = M[008817];
  Let b2 = M[008818];
  PushFrame 022781;
  SetLocal 1 MakeHiLo(b1,b2);
  JumpCall: 027746, #actuals: 1
LocReturn 022781:
  SetByte 008949 HiByte(call_result);
  SetByte 008950 LoByte(call_result);
  TraceOperation 022787 (Jz (Var (Global 70)) (Branch F (Dloc 022791)));
  Let b1 = M[008957];
  Let b2 = M[008958];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 022790 New_line;
    GamePrint "\n";
    Jump: 022791
  } else {
    Jump: 022791
  }
LocOp 022791:
  TraceOperation 022791 (Print ">");
  GamePrint ">";
  TraceOperation 022796 (Sread (Var (Global 109)) (Var (Global 110)));
  Let b1 = M[008817];
  Let b2 = M[008818];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  if (IsZeroByte(b5)) {
    Let b6 = M[008819];
    Let b7 = M[008820];
    Let b8 = M[008821];
    Let b9 = M[008822];
    ReadInputFromUser (Just (StatusInfo {room = "", score = MakeHiLo(b6,b7), turns = MakeHiLo(b8,b9)})) user_command_line_10;
    Let b11 = M[009035];
    Let b12 = M[009036];
    Let b13 = M[009037];
    Let b14 = M[009038];
    Tokenize user_command_line_10 (num_tokens_15,position_words_16,canonicalized17);
    StringBytes canonicalized17 string_bytes_18;
    ForeachB: (index19,byte20) in (string_bytes_18) {
      SetByte Offset(Offset(Address(MakeHiLo(b11,b12)),1),index19) byte20;
    }
    SetByte Offset(Address(MakeHiLo(b13,b14)),1) num_tokens_15;
    ForeachB: (index21,pos22,word23) in (position_words_16) {
      Let lookee24 = LookupInDict(word23);
      SetByte Offset(Offset(Offset(Address(MakeHiLo(b13,b14)),2),Mul(4,index21)),0) HiByte(DeAddress(lookee24));
      SetByte Offset(Offset(Offset(Address(MakeHiLo(b13,b14)),2),Mul(4,index21)),1) LoByte(DeAddress(lookee24));
      SetByte Offset(Offset(Offset(Address(MakeHiLo(b13,b14)),2),Mul(4,index21)),2) StringLength(word23);
      SetByte Offset(Offset(Offset(Address(MakeHiLo(b13,b14)),2),Mul(4,index21)),3) pos22;
    }
    Jump: 022800
  } else {
    Let b25 = M[008819];
    Let b26 = M[008820];
    Let b27 = M[008821];
    Let b28 = M[008822];
    ReadInputFromUser (Just (StatusInfo {room = GetText(Offset(Address(MakeHiLo(b3,b4)),1)), score = MakeHiLo(b25,b26), turns = MakeHiLo(b27,b28)})) user_command_line_29;
    Let b30 = M[009035];
    Let b31 = M[009036];
    Let b32 = M[009037];
    Let b33 = M[009038];
    Tokenize user_command_line_29 (num_tokens_34,position_words_35,canonicalized36);
    StringBytes canonicalized36 string_bytes_37;
    ForeachB: (index38,byte39) in (string_bytes_37) {
      SetByte Offset(Offset(Address(MakeHiLo(b30,b31)),1),index38) byte39;
    }
    SetByte Offset(Address(MakeHiLo(b32,b33)),1) num_tokens_34;
    ForeachB: (index40,pos41,word42) in (position_words_35) {
      Let lookee43 = LookupInDict(word42);
      SetByte Offset(Offset(Offset(Address(MakeHiLo(b32,b33)),2),Mul(4,index40)),0) HiByte(DeAddress(lookee43));
      SetByte Offset(Offset(Offset(Address(MakeHiLo(b32,b33)),2),Mul(4,index40)),1) LoByte(DeAddress(lookee43));
      SetByte Offset(Offset(Offset(Address(MakeHiLo(b32,b33)),2),Mul(4,index40)),2) StringLength(word42);
      SetByte Offset(Offset(Offset(Address(MakeHiLo(b32,b33)),2),Mul(4,index40)),3) pos41;
    }
    Jump: 022800
  }
LocOp 022800:
  TraceOperation 022800 (Loadb (Var (Global 110)) (Con 1) (Global 113));
  Let b1 = M[009037];
  Let b2 = M[009038];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),1)];
  SetByte 009043 HiByte(Widen(b3));
  SetByte 009044 LoByte(Widen(b3));
  TraceOperation 022804 (Jz (Var (Global 113)) (Branch F (Dloc 022822)));
  Let b4 = M[009043];
  Let b5 = M[009044];
  if (IsZero(MakeHiLo(b4,b5))) {
    TraceOperation 022807 (Print "I beg your pardon?");
    GamePrint "I beg your pardon?";
    TraceOperation 022820 New_line;
    GamePrint "\n";
    TraceOperation 022821 Rfalse;
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 0
  } else {
    Jump: 022822
  }
LocOp 022822:
  TraceOperation 022822 (Store (Con 5) (Var (Global 113)));
  Let b1 = M[009043];
  Let b2 = M[009044];
  SetLocal 5 MakeHiLo(b1,b2);
  TraceOperation 022825 (Store (Con 128) (Con 0));
  SetByte 009041 0;
  SetByte 009042 0;
  TraceOperation 022828 (Store (Con 113) (Con 0));
  SetByte 009011 0;
  SetByte 009012 0;
  TraceOperation 022831 (Store (Con 96) (Con 0));
  SetByte 008977 0;
  SetByte 008978 0;
  Jump: 022834
LocOp 022834:
  TraceOperation 022834 (Dec_chk (Con 129) (Con 0) (Branch F (Dloc 022844)));
  Let b1 = M[009043];
  Let b2 = M[009044];
  if (LessThanEqual(MakeHiLo(b1,b2),0)) {
    SetByte 009043 HiByte(Sub(MakeHiLo(b1,b2),1));
    SetByte 009044 LoByte(Sub(MakeHiLo(b1,b2),1));
    TraceOperation 022838 (Store (Con 112) (Con 0));
    SetByte 009009 0;
    SetByte 009010 0;
    TraceOperation 022841 (Jump 023407);
    Jump: 023407
  } else {
    SetByte 009043 HiByte(Sub(MakeHiLo(b1,b2),1));
    SetByte 009044 LoByte(Sub(MakeHiLo(b1,b2),1));
    Jump: 022844
  }
LocOp 022844:
  TraceOperation 022844 (Loadw (Var (Global 110)) (Var (Local 1)) (Local 2));
  Let b1 = M[009037];
  Let b2 = M[009038];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,GetLocal(1)))];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,GetLocal(1))),1)];
  SetLocal 2 MakeHiLo(b3,b4);
  TraceOperation 022848 (Jz (Var (Local 2)) (Branch F (Dloc 022861)));
  if (IsZero(GetLocal(2))) {
    TraceOperation 022851 (Call (Floc 023992) [Var (Local 1)] (Local 2));
    PushFrame 022851;
    SetLocal 1 GetLocal(1);
    JumpCall: 023992, #actuals: 1
  } else {
    Jump: 022861
  }
LocReturn 022851:
  SetLocal 2 call_result;
  TraceOperation 022857 (Jz (Var (Local 2)) (Branch T (Dloc 023390)));
  if (IsZero(GetLocal(2))) {
    Jump: 023390
  } else {
    Jump: 022861
  }
LocOp 022861:
  TraceOperation 022861 (Je [Var (Local 2),Con 19456] (Branch F (Dloc 022879)));
  if (Equal(GetLocal(2),19456)) {
    TraceOperation 022867 (Je [Var (Local 4),Con 239] (Branch F (Dloc 022879)));
    if (Equal(GetLocal(4),239)) {
      TraceOperation 022871 (Store (Con 2) (Con 15165));
      SetLocal 2 15165;
      TraceOperation 022876 (Jump 022906);
      Jump: 022906
    } else {
      Jump: 022879
    }
  } else {
    Jump: 022879
  }
LocOp 022879:
  TraceOperation 022879 (Je [Var (Local 2),Con 19393] (Branch F (Dloc 022906)));
  if (Equal(GetLocal(2),19393)) {
    TraceOperation 022885 (Jz (Var (Local 4)) (Branch F (Dloc 022906)));
    if (IsZero(GetLocal(4))) {
      TraceOperation 022888 (Jz (Var (Global 96)) (Branch F (Dloc 022906)));
      Let b1 = M[009009];
      Let b2 = M[009010];
      if (IsZero(MakeHiLo(b1,b2))) {
        TraceOperation 022891 (Storew (Var (Global 100)) (Con 0) (Con 239));
        Let b3 = M[009017];
        Let b4 = M[009018];
        SetByte Offset(Address(MakeHiLo(b3,b4)),0) 0;
        SetByte Offset(Offset(Address(MakeHiLo(b3,b4)),0),1) 239;
        TraceOperation 022896 (Storew (Var (Global 100)) (Con 1) (Con 0));
        Let b5 = M[009017];
        Let b6 = M[009018];
        SetByte Offset(Address(MakeHiLo(b5,b6)),2) 0;
        SetByte Offset(Offset(Address(MakeHiLo(b5,b6)),2),1) 0;
        TraceOperation 022901 (Store (Con 2) (Con 15165));
        SetLocal 2 15165;
        Jump: 022906
      } else {
        Jump: 022906
      }
    } else {
      Jump: 022906
    }
  } else {
    Jump: 022906
  }
LocOp 022906:
  TraceOperation 022906 (Je [Var (Local 2),Con 19393,Con 15151] (Branch T (Dloc 022920)));
  if (LogOr(Equal(GetLocal(2),19393),Equal(GetLocal(2),15151))) {
    Jump: 022920
  } else {
    TraceOperation 022914 (Je [Var (Local 2),Con 15165] (Branch F (Dloc 022953)));
    if (Equal(GetLocal(2),15165)) {
      Jump: 022920
    } else {
      Jump: 022953
    }
  }
LocOp 022920:
  TraceOperation 022920 (Je [Var (Local 2),Con 15165] (Branch F (Dloc 022938)));
  if (Equal(GetLocal(2),15165)) {
    TraceOperation 022926 (Jz (Var (Global 96)) (Branch T (Dloc 022935)));
    Let b1 = M[009009];
    Let b2 = M[009010];
    if (IsZero(MakeHiLo(b1,b2))) {
      Jump: 022935
    } else {
      TraceOperation 022929 (Store (Con 112) (Con 0));
      SetByte 009009 0;
      SetByte 009010 0;
      TraceOperation 022932 (Jump 022938);
      Jump: 022938
    }
  } else {
    Jump: 022938
  }
LocOp 022935:
  TraceOperation 022935 (Store (Con 112) (Con 1));
  SetByte 009009 0;
  SetByte 009010 1;
  Jump: 022938
LocOp 022938:
  TraceOperation 022938 (Jz (Var (Global 113)) (Branch T (Dloc 022945)));
  Let b1 = M[009043];
  Let b2 = M[009044];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 022945
  } else {
    TraceOperation 022941 (Add (Var (Local 1)) (Con 2) (Global 108));
    SetByte 009033 HiByte(Add(GetLocal(1),2));
    SetByte 009034 LoByte(Add(GetLocal(1),2));
    Jump: 022945
  }
LocOp 022945:
  TraceOperation 022945 (Storeb (Var (Global 110)) (Con 1) (Var (Global 113)));
  Let b1 = M[009037];
  Let b2 = M[009038];
  Let b3 = M[009043];
  Let b4 = M[009044];
  SetByte Offset(Address(MakeHiLo(b1,b2)),1) b4;
  TraceOperation 022950 (Jump 023407);
  Jump: 023407
LocOp 022953:
  TraceOperation 022953 (Call (Floc 023466) [Var (Local 2),Con 16,Con 3] (Local 3));
  PushFrame 022953;
  SetLocal 1 GetLocal(2);
  SetLocal 2 16;
  SetLocal 3 3;
  JumpCall: 023466, #actuals: 3
LocReturn 022953:
  SetLocal 3 call_result;
  TraceOperation 022961 (Jz (Var (Local 3)) (Branch T (Dloc 023064)));
  if (IsZero(GetLocal(3))) {
    Jump: 023064
  } else {
    TraceOperation 022965 (Je [Var (Local 4),Con 0,Con 248] (Branch F (Dloc 023064)));
    if (LogOr(Equal(GetLocal(4),0),Equal(GetLocal(4),248))) {
      TraceOperation 022972 (Je [Var (Local 5),Con 1] (Branch T (Dloc 023032)));
      if (Equal(GetLocal(5),1)) {
        Jump: 023032
      } else {
        TraceOperation 022977 (Je [Var (Local 5),Con 2] (Branch F (Dloc 022985)));
        if (Equal(GetLocal(5),2)) {
          TraceOperation 022981 (Je [Var (Local 4),Con 248] (Branch T (Dloc 023032)));
          if (Equal(GetLocal(4),248)) {
            Jump: 023032
          } else {
            Jump: 022985
          }
        } else {
          Jump: 022985
        }
      }
    } else {
      Jump: 023064
    }
  }
LocOp 022985:
  TraceOperation 022985 (Add (Var (Local 1)) (Con 2) Sp);
  PushStack Add(GetLocal(1),2);
  TraceOperation 022989 (Loadw (Var (Global 110)) (Var Sp) (Local 7));
  Let b1 = M[009037];
  Let b2 = M[009038];
  PopStack popped3;
  Let b4 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,popped3))];
  Let b5 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,popped3)),1)];
  SetLocal 7 MakeHiLo(b4,b5);
  TraceOperation 022993 (Je [Var (Local 7),Con 19393,Con 15151,Con 15165] (Branch F (Dloc 023007)));
  if (LogOr(LogOr(Equal(GetLocal(7),19393),Equal(GetLocal(7),15151)),Equal(GetLocal(7),15165))) {
    TraceOperation 023003 (Jl (Var (Local 5)) (Con 2) (Branch F (Dloc 023032)));
    if (LessThan(GetLocal(5),2)) {
      Jump: 023007
    } else {
      Jump: 023032
    }
  } else {
    Jump: 023007
  }
LocOp 023007:
  TraceOperation 023007 (Jz (Var (Global 96)) (Branch T (Dloc 023020)));
  Let b1 = M[009009];
  Let b2 = M[009010];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 023020
  } else {
    TraceOperation 023010 (Je [Var (Local 5),Con 2] (Branch F (Dloc 023020)));
    if (Equal(GetLocal(5),2)) {
      TraceOperation 023014 (Je [Var (Local 7),Con 15165] (Branch T (Dloc 023032)));
      if (Equal(GetLocal(7),15165)) {
        Jump: 023032
      } else {
        Jump: 023020
      }
    } else {
      Jump: 023020
    }
  }
LocOp 023020:
  TraceOperation 023020 (Jg (Var (Local 5)) (Con 2) (Branch F (Dloc 023064)));
  if (GreaterThan(GetLocal(5),2)) {
    TraceOperation 023024 (Je [Var (Local 7),Con 15158,Con 15256] (Branch F (Dloc 023064)));
    if (LogOr(Equal(GetLocal(7),15158),Equal(GetLocal(7),15256))) {
      Jump: 023032
    } else {
      Jump: 023064
    }
  } else {
    Jump: 023064
  }
LocOp 023032:
  TraceOperation 023032 (Store (Con 6) (Var (Local 3)));
  SetLocal 6 GetLocal(3);
  TraceOperation 023035 (Je [Var (Local 7),Con 15158,Con 15256] (Branch F (Dloc 023053)));
  if (LogOr(Equal(GetLocal(7),15158),Equal(GetLocal(7),15256))) {
    TraceOperation 023043 (Add (Var (Local 1)) (Con 2) Sp);
    PushStack Add(GetLocal(1),2);
    TraceOperation 023047 (Storew (Var (Global 110)) (Var Sp) (Con 19393));
    Let b1 = M[009037];
    Let b2 = M[009038];
    PopStack popped3;
    SetByte Offset(Address(MakeHiLo(b1,b2)),Mul(2,popped3)) 75;
    SetByte Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,popped3)),1) 193;
    Jump: 023053
  } else {
    Jump: 023053
  }
LocOp 023053:
  TraceOperation 023053 (Jg (Var (Local 5)) (Con 2) (Branch T (Dloc 023397)));
  if (GreaterThan(GetLocal(5),2)) {
    Jump: 023397
  } else {
    TraceOperation 023058 (Store (Con 112) (Con 0));
    SetByte 009009 0;
    SetByte 009010 0;
    TraceOperation 023061 (Jump 023407);
    Jump: 023407
  }
LocOp 023064:
  TraceOperation 023064 (Call (Floc 023466) [Var (Local 2),Con 64,Con 1] (Local 3));
  PushFrame 023064;
  SetLocal 1 GetLocal(2);
  SetLocal 2 64;
  SetLocal 3 1;
  JumpCall: 023466, #actuals: 3
LocReturn 023064:
  SetLocal 3 call_result;
  TraceOperation 023072 (Jz (Var (Local 3)) (Branch T (Dloc 023129)));
  if (IsZero(GetLocal(3))) {
    Jump: 023129
  } else {
    TraceOperation 023075 (Jz (Var (Local 4)) (Branch F (Dloc 023129)));
    if (IsZero(GetLocal(4))) {
      TraceOperation 023078 (Store (Con 4) (Var (Local 3)));
      SetLocal 4 GetLocal(3);
      TraceOperation 023081 (Storew (Var (Global 100)) (Con 0) (Var (Local 3)));
      Let b1 = M[009017];
      Let b2 = M[009018];
      SetByte Offset(Address(MakeHiLo(b1,b2)),0) HiByte(GetLocal(3));
      SetByte Offset(Offset(Address(MakeHiLo(b1,b2)),0),1) LoByte(GetLocal(3));
      TraceOperation 023086 (Storew (Var (Global 100)) (Con 1) (Var (Global 98)));
      Let b3 = M[009017];
      Let b4 = M[009018];
      Let b5 = M[009013];
      Let b6 = M[009014];
      SetByte Offset(Address(MakeHiLo(b3,b4)),2) b5;
      SetByte Offset(Offset(Address(MakeHiLo(b3,b4)),2),1) b6;
      TraceOperation 023091 (Storew (Var (Global 98)) (Con 0) (Var (Local 2)));
      Let b7 = M[009013];
      Let b8 = M[009014];
      SetByte Offset(Address(MakeHiLo(b7,b8)),0) HiByte(GetLocal(2));
      SetByte Offset(Offset(Address(MakeHiLo(b7,b8)),0),1) LoByte(GetLocal(2));
      TraceOperation 023096 (Mul (Var (Local 1)) (Con 2) Sp);
      PushStack Mul(GetLocal(1),2);
      TraceOperation 023100 (Add (Var Sp) (Con 2) (Local 9));
      PopStack popped9;
      SetLocal 9 Add(popped9,2);
      TraceOperation 023104 (Loadb (Var (Global 110)) (Var (Local 9)) Sp);
      Let b10 = M[009037];
      Let b11 = M[009038];
      Let b12 = M[Offset(Address(MakeHiLo(b10,b11)),GetLocal(9))];
      PushStack Widen(b12);
      TraceOperation 023108 (Storeb (Var (Global 98)) (Con 2) (Var Sp));
      Let b13 = M[009013];
      Let b14 = M[009014];
      PopStack popped15;
      SetByte Offset(Address(MakeHiLo(b13,b14)),2) LoByte(popped15);
      TraceOperation 023113 (Add (Var (Local 9)) (Con 1) Sp);
      PushStack Add(GetLocal(9),1);
      TraceOperation 023117 (Loadb (Var (Global 110)) (Var Sp) Sp);
      Let b16 = M[009037];
      Let b17 = M[009038];
      PopStack popped18;
      Let b19 = M[Offset(Address(MakeHiLo(b16,b17)),popped18)];
      PushStack Widen(b19);
      TraceOperation 023121 (Storeb (Var (Global 98)) (Con 3) (Var Sp));
      Let b20 = M[009013];
      Let b21 = M[009014];
      PopStack popped22;
      SetByte Offset(Address(MakeHiLo(b20,b21)),3) LoByte(popped22);
      TraceOperation 023126 (Jump 023397);
      Jump: 023397
    } else {
      Jump: 023129
    }
  }
LocOp 023129:
  TraceOperation 023129 (Call (Floc 023466) [Var (Local 2),Con 8,Con 0] (Local 3));
  PushFrame 023129;
  SetLocal 1 GetLocal(2);
  SetLocal 2 8;
  SetLocal 3 0;
  JumpCall: 023466, #actuals: 3
LocReturn 023129:
  SetLocal 3 call_result;
  TraceOperation 023137 (Jz (Var (Local 3)) (Branch F (Dloc 023172)));
  if (IsZero(GetLocal(3))) {
    TraceOperation 023140 (Je [Var (Local 2),Con 15228,Con 18042] (Branch T (Dloc 023169)));
    if (LogOr(Equal(GetLocal(2),15228),Equal(GetLocal(2),18042))) {
      Jump: 023169
    } else {
      TraceOperation 023148 (Call (Floc 023466) [Var (Local 2),Con 32] Sp);
      PushFrame 023148;
      SetLocal 1 GetLocal(2);
      SetLocal 2 32;
      JumpCall: 023466, #actuals: 2
    }
  } else {
    Jump: 023172
  }
LocReturn 023148:
  PushStack call_result;
  TraceOperation 023155 (Jz (Var Sp) (Branch F (Dloc 023169)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 023158 (Call (Floc 023466) [Var (Local 2),Con 128] Sp);
    PushFrame 023158;
    SetLocal 1 GetLocal(2);
    SetLocal 2 128;
    JumpCall: 023466, #actuals: 2
  } else {
    Jump: 023169
  }
LocReturn 023158:
  PushStack call_result;
  TraceOperation 023165 (Jz (Var Sp) (Branch T (Dloc 023301)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 023301
  } else {
    Jump: 023169
  }
LocOp 023169:
  TraceOperation 023169 (Store (Con 3) (Con 0));
  SetLocal 3 0;
  Jump: 023172
LocOp 023172:
  TraceOperation 023172 (Jg (Var (Global 113)) (Con 0) (Branch F (Dloc 023206)));
  Let b1 = M[009043];
  Let b2 = M[009044];
  if (GreaterThan(MakeHiLo(b1,b2),0)) {
    TraceOperation 023176 (Add (Var (Local 1)) (Con 2) Sp);
    PushStack Add(GetLocal(1),2);
    TraceOperation 023180 (Loadw (Var (Global 110)) (Var Sp) Sp);
    Let b3 = M[009037];
    Let b4 = M[009038];
    PopStack popped5;
    Let b6 = M[Offset(Address(MakeHiLo(b3,b4)),Mul(2,popped5))];
    Let b7 = M[Offset(Offset(Address(MakeHiLo(b3,b4)),Mul(2,popped5)),1)];
    PushStack MakeHiLo(b6,b7);
    TraceOperation 023184 (Je [Var Sp,Con 18000] (Branch F (Dloc 023206)));
    PopStack popped8;
    if (Equal(popped8,18000)) {
      TraceOperation 023190 (Jz (Var (Local 3)) (Branch F (Dloc 023206)));
      if (IsZero(GetLocal(3))) {
        TraceOperation 023193 (Je [Var (Local 2),Con 15228,Con 18042,Con 15172] (Branch T (Dloc 023206)));
        if (LogOr(LogOr(Equal(GetLocal(2),15228),Equal(GetLocal(2),18042)),Equal(GetLocal(2),15172))) {
          Jump: 023206
        } else {
          TraceOperation 023203 (Jump 023397);
          Jump: 023397
        }
      } else {
        Jump: 023206
      }
    } else {
      Jump: 023206
    }
  } else {
    Jump: 023206
  }
LocOp 023206:
  TraceOperation 023206 (Jz (Var (Local 3)) (Branch T (Dloc 023246)));
  if (IsZero(GetLocal(3))) {
    Jump: 023246
  } else {
    TraceOperation 023209 (Jz (Var (Global 113)) (Branch T (Dloc 023228)));
    Let b1 = M[009043];
    Let b2 = M[009044];
    if (IsZero(MakeHiLo(b1,b2))) {
      Jump: 023228
    } else {
      TraceOperation 023212 (Add (Var (Local 1)) (Con 2) Sp);
      PushStack Add(GetLocal(1),2);
      TraceOperation 023216 (Loadw (Var (Global 110)) (Var Sp) Sp);
      Let b3 = M[009037];
      Let b4 = M[009038];
      PopStack popped5;
      Let b6 = M[Offset(Address(MakeHiLo(b3,b4)),Mul(2,popped5))];
      Let b7 = M[Offset(Offset(Address(MakeHiLo(b3,b4)),Mul(2,popped5)),1)];
      PushStack MakeHiLo(b6,b7);
      TraceOperation 023220 (Je [Var Sp,Con 19393,Con 15151] (Branch F (Dloc 023246)));
      PopStack popped8;
      if (LogOr(Equal(popped8,19393),Equal(popped8,15151))) {
        Jump: 023228
      } else {
        Jump: 023246
      }
    }
  }
LocOp 023228:
  TraceOperation 023228 (Jl (Var (Global 97)) (Con 2) (Branch F (Dloc 023397)));
  Let b1 = M[009011];
  Let b2 = M[009012];
  if (LessThan(MakeHiLo(b1,b2),2)) {
    TraceOperation 023233 (Storew (Var (Global 100)) (Con 2) (Var (Local 3)));
    Let b3 = M[009017];
    Let b4 = M[009018];
    SetByte Offset(Address(MakeHiLo(b3,b4)),4) HiByte(GetLocal(3));
    SetByte Offset(Offset(Address(MakeHiLo(b3,b4)),4),1) LoByte(GetLocal(3));
    TraceOperation 023238 (Storew (Var (Global 100)) (Con 3) (Var (Local 2)));
    Let b5 = M[009017];
    Let b6 = M[009018];
    SetByte Offset(Address(MakeHiLo(b5,b6)),6) HiByte(GetLocal(2));
    SetByte Offset(Offset(Address(MakeHiLo(b5,b6)),6),1) LoByte(GetLocal(2));
    TraceOperation 023243 (Jump 023397);
    Jump: 023397
  } else {
    Jump: 023397
  }
LocOp 023246:
  TraceOperation 023246 (Je [Var (Global 97),Con 2] (Branch F (Dloc 023277)));
  Let b1 = M[009011];
  Let b2 = M[009012];
  if (Equal(MakeHiLo(b1,b2),2)) {
    TraceOperation 023250 (Print "There were too many nouns in that sentence.");
    GamePrint "There were too many nouns in that sentence.";
    TraceOperation 023275 New_line;
    GamePrint "\n";
    TraceOperation 023276 Rfalse;
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  } else {
    Jump: 023277
  }
LocOp 023277:
  TraceOperation 023277 (Inc (Con 113));
  Let b1 = M[009011];
  Let b2 = M[009012];
  SetByte 009011 HiByte(Add(MakeHiLo(b1,b2),1));
  SetByte 009012 LoByte(Add(MakeHiLo(b1,b2),1));
  TraceOperation 023279 (Call (Floc 023504) [Var (Local 1),Var (Local 3),Var (Local 2)] (Local 1));
  PushFrame 023279;
  SetLocal 1 GetLocal(1);
  SetLocal 2 GetLocal(3);
  SetLocal 3 GetLocal(2);
  JumpCall: 023504, #actuals: 3
LocReturn 023279:
  SetLocal 1 call_result;
  TraceOperation 023287 (Jz (Var (Local 1)) (Branch T Dfalse));
  if (IsZero(GetLocal(1))) {
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 0
  } else {
    TraceOperation 023290 (Jl (Var (Local 1)) (Con 0) (Branch F (Dloc 023397)));
    if (LessThan(GetLocal(1),0)) {
      TraceOperation 023295 (Store (Con 112) (Con 0));
      SetByte 009009 0;
      SetByte 009010 0;
      TraceOperation 023298 (Jump 023407);
      Jump: 023407
    } else {
      Jump: 023397
    }
  }
LocOp 023301:
  TraceOperation 023301 (Call (Floc 023466) [Var (Local 2),Con 4] Sp);
  PushFrame 023301;
  SetLocal 1 GetLocal(2);
  SetLocal 2 4;
  JumpCall: 023466, #actuals: 2
LocReturn 023301:
  PushStack call_result;
  TraceOperation 023308 (Jz (Var Sp) (Branch T (Dloc 023314)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 023314
  } else {
    TraceOperation 023311 (Jump 023397);
    Jump: 023397
  }
LocOp 023314:
  TraceOperation 023314 (Je [Var (Local 4),Con 239] (Branch F (Dloc 023383)));
  if (Equal(GetLocal(4),239)) {
    TraceOperation 023319 (Call (Floc 023466) [Var (Local 2),Con 64,Con 1] Sp);
    PushFrame 023319;
    SetLocal 1 GetLocal(2);
    SetLocal 2 64;
    SetLocal 3 1;
    JumpCall: 023466, #actuals: 3
  } else {
    Jump: 023383
  }
LocReturn 023319:
  PushStack call_result;
  TraceOperation 023327 (Jz (Var Sp) (Branch T (Dloc 023383)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 023383
  } else {
    TraceOperation 023330 (Print "Please consult your manual for the correct way to talk to other people or creatures.");
    GamePrint "Please consult your manual for the correct way to talk to other people or creatures.";
    TraceOperation 023381 New_line;
    GamePrint "\n";
    TraceOperation 023382 Rfalse;
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  }
LocOp 023383:
  TraceOperation 023383 (Call (Floc 024640) [Var (Local 1)] Sp);
  PushFrame 023383;
  SetLocal 1 GetLocal(1);
  JumpCall: 024640, #actuals: 1
LocReturn 023383:
  PushStack call_result;
  TraceOperation 023389 Rfalse;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 0
LocOp 023390:
  TraceOperation 023390 (Call (Floc 024560) [Var (Local 1)] Sp);
  PushFrame 023390;
  SetLocal 1 GetLocal(1);
  JumpCall: 024560, #actuals: 1
LocReturn 023390:
  PushStack call_result;
  TraceOperation 023396 Rfalse;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 0
LocOp 023397:
  TraceOperation 023397 (Store (Con 8) (Var (Local 2)));
  SetLocal 8 GetLocal(2);
  TraceOperation 023400 (Add (Var (Local 1)) (Con 2) (Local 1));
  SetLocal 1 Add(GetLocal(1),2);
  TraceOperation 023404 (Jump 022834);
  Jump: 022834
LocOp 023407:
  TraceOperation 023407 (Jz (Var (Local 6)) (Branch T (Dloc 023421)));
  if (IsZero(GetLocal(6))) {
    Jump: 023421
  } else {
    TraceOperation 023410 (Store (Con 136) (Con 137));
    SetByte 009057 0;
    SetByte 009058 137;
    TraceOperation 023413 (Store (Con 134) (Var (Local 6)));
    SetByte 009053 HiByte(GetLocal(6));
    SetByte 009054 LoByte(GetLocal(6));
    TraceOperation 023416 (Store (Con 111) (Var (Local 6)));
    SetByte 009007 HiByte(GetLocal(6));
    SetByte 009008 LoByte(GetLocal(6));
    TraceOperation 023419 (Ret (Con 1));
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 1
  }
LocOp 023421:
  TraceOperation 023421 (Store (Con 111) (Con 0));
  SetByte 009007 0;
  SetByte 009008 0;
  TraceOperation 023424 (Jz (Var (Global 105)) (Branch T (Dloc 023432)));
  Let b1 = M[009027];
  Let b2 = M[009028];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 023432
  } else {
    TraceOperation 023427 (Call (Floc 024130) [] Sp);
    PushFrame 023427;
    JumpCall: 024130, #actuals: 0
  }
LocReturn 023427:
  PushStack call_result;
  Jump: 023432
LocOp 023432:
  TraceOperation 023432 (Call (Floc 024736) [] Sp);
  PushFrame 023432;
  JumpCall: 024736, #actuals: 0
LocReturn 023432:
  PushStack call_result;
  TraceOperation 023437 (Jz (Var Sp) (Branch T Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  } else {
    TraceOperation 023440 (Call (Floc 025802) [] Sp);
    PushFrame 023440;
    JumpCall: 025802, #actuals: 0
  }
LocReturn 023440:
  PushStack call_result;
  TraceOperation 023445 (Jz (Var Sp) (Branch T Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  } else {
    TraceOperation 023448 (Call (Floc 027544) [] Sp);
    PushFrame 023448;
    JumpCall: 027544, #actuals: 0
  }
LocReturn 023448:
  PushStack call_result;
  TraceOperation 023453 (Jz (Var Sp) (Branch T Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  } else {
    TraceOperation 023456 (Call (Floc 027352) [] Sp);
    PushFrame 023456;
    JumpCall: 027352, #actuals: 0
  }
LocReturn 023456:
  PushStack call_result;
  TraceOperation 023461 (Jz (Var Sp) (Branch T Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  } else {
    TraceOperation 023464 Rtrue;
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  }
--[39]--------------------------------------------------
LocRoutine 023466:
  MakeRoutineFrame 5;
  if (LessThanByte(num_actuals,5)) {
    SetLocal 5 0;
    if (LessThanByte(num_actuals,4)) {
      SetLocal 4 5;
      if (LessThanByte(num_actuals,3)) {
        SetLocal 3 5;
        if (LessThanByte(num_actuals,2)) {
          SetLocal 2 0;
          if (LessThanByte(num_actuals,1)) {
            SetLocal 1 0;
          }
        }
      }
    }
  }
  Jump: 023477
LocOp 023477:
  TraceOperation 023477 (Loadb (Var (Local 1)) (Con 4) (Local 5));
  Let b1 = M[Offset(Address(GetLocal(1)),4)];
  SetLocal 5 Widen(b1);
  TraceOperation 023481 (Test (Var (Local 5)) (Var (Local 2)) (Branch F Dfalse));
  if (Equal(And(GetLocal(5),GetLocal(2)),GetLocal(2))) {
    TraceOperation 023485 (Jg (Var (Local 3)) (Con 4) (Branch T Dtrue));
    if (GreaterThan(GetLocal(3),4)) {
      PopFrame return_address_2;
      JumpReturn: return_address_2, result: 1
    } else {
      TraceOperation 023489 (And (Var (Local 5)) (Con 3) (Local 5));
      SetLocal 5 And(GetLocal(5),3);
      TraceOperation 023493 (Je [Var (Local 5),Var (Local 3)] (Branch T (Dloc 023499)));
      if (Equal(GetLocal(5),GetLocal(3))) {
        Jump: 023499
      } else {
        TraceOperation 023497 (Inc (Con 4));
        SetLocal 4 Add(GetLocal(4),1);
        Jump: 023499
      }
    }
  } else {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  }
LocOp 023499:
  TraceOperation 023499 (Loadb (Var (Local 1)) (Var (Local 4)) Sp);
  Let b1 = M[Offset(Address(GetLocal(1)),GetLocal(4))];
  PushStack Widen(b1);
  TraceOperation 023503 Ret_popped;
  PopStack popped2;
  PopFrame return_address_3;
  JumpReturn: return_address_3, result: popped2
--[40]--------------------------------------------------
LocRoutine 023504:
  MakeRoutineFrame 10;
  if (LessThanByte(num_actuals,10)) {
    SetLocal 10 0;
    if (LessThanByte(num_actuals,9)) {
      SetLocal 9 0;
      if (LessThanByte(num_actuals,8)) {
        SetLocal 8 0;
        if (LessThanByte(num_actuals,7)) {
          SetLocal 7 1;
          if (LessThanByte(num_actuals,6)) {
            SetLocal 6 0;
            if (LessThanByte(num_actuals,5)) {
              SetLocal 5 0;
              if (LessThanByte(num_actuals,4)) {
                SetLocal 4 0;
                if (LessThanByte(num_actuals,3)) {
                  SetLocal 3 0;
                  if (LessThanByte(num_actuals,2)) {
                    SetLocal 2 0;
                    if (LessThanByte(num_actuals,1)) {
                      SetLocal 1 0;
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  Jump: 023525
LocOp 023525:
  TraceOperation 023525 (Sub (Var (Global 97)) (Con 1) Sp);
  Let b1 = M[009011];
  Let b2 = M[009012];
  PushStack Sub(MakeHiLo(b1,b2),1);
  TraceOperation 023529 (Mul (Var Sp) (Con 2) (Local 4));
  PopStack popped3;
  SetLocal 4 Mul(popped3,2);
  TraceOperation 023533 (Jz (Var (Local 2)) (Branch T (Dloc 023561)));
  if (IsZero(GetLocal(2))) {
    Jump: 023561
  } else {
    TraceOperation 023536 (Add (Con 2) (Var (Local 4)) (Local 5));
    SetLocal 5 Add(2,GetLocal(4));
    TraceOperation 023540 (Storew (Var (Global 100)) (Var (Local 5)) (Var (Local 2)));
    Let b4 = M[009017];
    Let b5 = M[009018];
    SetByte Offset(Address(MakeHiLo(b4,b5)),Mul(2,GetLocal(5))) HiByte(GetLocal(2));
    SetByte Offset(Offset(Address(MakeHiLo(b4,b5)),Mul(2,GetLocal(5))),1) LoByte(GetLocal(2));
    TraceOperation 023545 (Add (Var (Local 5)) (Con 1) Sp);
    PushStack Add(GetLocal(5),1);
    TraceOperation 023549 (Storew (Var (Global 100)) (Var Sp) (Var (Local 3)));
    Let b6 = M[009017];
    Let b7 = M[009018];
    PopStack popped8;
    SetByte Offset(Address(MakeHiLo(b6,b7)),Mul(2,popped8)) HiByte(GetLocal(3));
    SetByte Offset(Offset(Address(MakeHiLo(b6,b7)),Mul(2,popped8)),1) LoByte(GetLocal(3));
    TraceOperation 023554 (Add (Var (Local 1)) (Con 2) (Local 1));
    SetLocal 1 Add(GetLocal(1),2);
    TraceOperation 023558 (Jump 023563);
    Jump: 023563
  }
LocOp 023561:
  TraceOperation 023561 (Inc (Con 129));
  Let b1 = M[009043];
  Let b2 = M[009044];
  SetByte 009043 HiByte(Add(MakeHiLo(b1,b2),1));
  SetByte 009044 LoByte(Add(MakeHiLo(b1,b2),1));
  Jump: 023563
LocOp 023563:
  TraceOperation 023563 (Jz (Var (Global 113)) (Branch F (Dloc 023571)));
  Let b1 = M[009043];
  Let b2 = M[009044];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 023566 (Dec (Con 113));
    Let b3 = M[009011];
    Let b4 = M[009012];
    SetByte 009011 HiByte(Sub(MakeHiLo(b3,b4),1));
    SetByte 009012 LoByte(Sub(MakeHiLo(b3,b4),1));
    TraceOperation 023568 (Ret (Con -1));
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: -1
  } else {
    Jump: 023571
  }
LocOp 023571:
  TraceOperation 023571 (Add (Con 6) (Var (Local 4)) (Local 5));
  SetLocal 5 Add(6,GetLocal(4));
  TraceOperation 023575 (Mul (Var (Local 1)) (Con 2) Sp);
  PushStack Mul(GetLocal(1),2);
  TraceOperation 023579 (Add (Var (Global 110)) (Var Sp) Sp);
  Let b1 = M[009037];
  Let b2 = M[009038];
  PopStack popped3;
  PushStack Add(MakeHiLo(b1,b2),popped3);
  TraceOperation 023583 (Storew (Var (Global 100)) (Var (Local 5)) (Var Sp));
  Let b4 = M[009017];
  Let b5 = M[009018];
  PopStack popped6;
  SetByte Offset(Address(MakeHiLo(b4,b5)),Mul(2,GetLocal(5))) HiByte(popped6);
  SetByte Offset(Offset(Address(MakeHiLo(b4,b5)),Mul(2,GetLocal(5))),1) LoByte(popped6);
  TraceOperation 023588 (Loadw (Var (Global 110)) (Var (Local 1)) Sp);
  Let b7 = M[009037];
  Let b8 = M[009038];
  Let b9 = M[Offset(Address(MakeHiLo(b7,b8)),Mul(2,GetLocal(1)))];
  Let b10 = M[Offset(Offset(Address(MakeHiLo(b7,b8)),Mul(2,GetLocal(1))),1)];
  PushStack MakeHiLo(b9,b10);
  TraceOperation 023592 (Je [Var Sp,Con 19379,Con 15172,Con 15242] (Branch F (Dloc 023615)));
  PopStack popped11;
  if (LogOr(LogOr(Equal(popped11,19379),Equal(popped11,15172)),Equal(popped11,15242))) {
    TraceOperation 023602 (Loadw (Var (Global 100)) (Var (Local 5)) Sp);
    Let b12 = M[009017];
    Let b13 = M[009018];
    Let b14 = M[Offset(Address(MakeHiLo(b12,b13)),Mul(2,GetLocal(5)))];
    Let b15 = M[Offset(Offset(Address(MakeHiLo(b12,b13)),Mul(2,GetLocal(5))),1)];
    PushStack MakeHiLo(b14,b15);
    TraceOperation 023606 (Add (Var Sp) (Con 4) Sp);
    PopStack popped16;
    PushStack Add(popped16,4);
    TraceOperation 023610 (Storew (Var (Global 100)) (Var (Local 5)) (Var Sp));
    Let b17 = M[009017];
    Let b18 = M[009018];
    PopStack popped19;
    SetByte Offset(Address(MakeHiLo(b17,b18)),Mul(2,GetLocal(5))) HiByte(popped19);
    SetByte Offset(Offset(Address(MakeHiLo(b17,b18)),Mul(2,GetLocal(5))),1) LoByte(popped19);
    Jump: 023615
  } else {
    Jump: 023615
  }
LocOp 023615:
  TraceOperation 023615 (Dec_chk (Con 129) (Con 0) (Branch F (Dloc 023639)));
  Let b1 = M[009043];
  Let b2 = M[009044];
  if (LessThanEqual(MakeHiLo(b1,b2),0)) {
    SetByte 009043 HiByte(Sub(MakeHiLo(b1,b2),1));
    SetByte 009044 LoByte(Sub(MakeHiLo(b1,b2),1));
    TraceOperation 023619 (Add (Var (Local 5)) (Con 1) (Local 10));
    SetLocal 10 Add(GetLocal(5),1);
    TraceOperation 023623 (Mul (Var (Local 1)) (Con 2) Sp);
    PushStack Mul(GetLocal(1),2);
    TraceOperation 023627 (Add (Var (Global 110)) (Var Sp) Sp);
    Let b3 = M[009037];
    Let b4 = M[009038];
    PopStack popped5;
    PushStack Add(MakeHiLo(b3,b4),popped5);
    TraceOperation 023631 (Storew (Var (Global 100)) (Var (Local 10)) (Var Sp));
    Let b6 = M[009017];
    Let b7 = M[009018];
    PopStack popped8;
    SetByte Offset(Address(MakeHiLo(b6,b7)),Mul(2,GetLocal(10))) HiByte(popped8);
    SetByte Offset(Offset(Address(MakeHiLo(b6,b7)),Mul(2,GetLocal(10))),1) LoByte(popped8);
    TraceOperation 023636 (Ret (Con -1));
    PopFrame return_address_9;
    JumpReturn: return_address_9, result: -1
  } else {
    SetByte 009043 HiByte(Sub(MakeHiLo(b1,b2),1));
    SetByte 009044 LoByte(Sub(MakeHiLo(b1,b2),1));
    Jump: 023639
  }
LocOp 023639:
  TraceOperation 023639 (Loadw (Var (Global 110)) (Var (Local 1)) (Local 3));
  Let b1 = M[009037];
  Let b2 = M[009038];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,GetLocal(1)))];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,GetLocal(1))),1)];
  SetLocal 3 MakeHiLo(b3,b4);
  TraceOperation 023643 (Jz (Var (Local 3)) (Branch F (Dloc 023656)));
  if (IsZero(GetLocal(3))) {
    TraceOperation 023646 (Call (Floc 023992) [Var (Local 1)] (Local 3));
    PushFrame 023646;
    SetLocal 1 GetLocal(1);
    JumpCall: 023992, #actuals: 1
  } else {
    Jump: 023656
  }
LocReturn 023646:
  SetLocal 3 call_result;
  TraceOperation 023652 (Jz (Var (Local 3)) (Branch T (Dloc 023972)));
  if (IsZero(GetLocal(3))) {
    Jump: 023972
  } else {
    Jump: 023656
  }
LocOp 023656:
  TraceOperation 023656 (Jz (Var (Global 113)) (Branch F (Dloc 023665)));
  Let b1 = M[009043];
  Let b2 = M[009044];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 023659 (Store (Con 8) (Con 0));
    SetLocal 8 0;
    TraceOperation 023662 (Jump 023673);
    Jump: 023673
  } else {
    Jump: 023665
  }
LocOp 023665:
  TraceOperation 023665 (Add (Var (Local 1)) (Con 2) Sp);
  PushStack Add(GetLocal(1),2);
  TraceOperation 023669 (Loadw (Var (Global 110)) (Var Sp) (Local 8));
  Let b1 = M[009037];
  Let b2 = M[009038];
  PopStack popped3;
  Let b4 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,popped3))];
  Let b5 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,popped3)),1)];
  SetLocal 8 MakeHiLo(b4,b5);
  Jump: 023673
LocOp 023673:
  TraceOperation 023673 (Je [Var (Local 3),Con 15256,Con 15158] (Branch F (Dloc 023687)));
  if (LogOr(Equal(GetLocal(3),15256),Equal(GetLocal(3),15158))) {
    TraceOperation 023681 (Store (Con 6) (Con 1));
    SetLocal 6 1;
    TraceOperation 023684 (Jump 023979);
    Jump: 023979
  } else {
    Jump: 023687
  }
LocOp 023687:
  TraceOperation 023687 (Je [Var (Local 3),Con 15228,Con 18042] (Branch F (Dloc 023711)));
  if (LogOr(Equal(GetLocal(3),15228),Equal(GetLocal(3),18042))) {
    TraceOperation 023695 (Je [Var (Local 8),Con 18000] (Branch F (Dloc 023979)));
    if (Equal(GetLocal(8),18000)) {
      TraceOperation 023702 (Dec (Con 129));
      Let b1 = M[009043];
      Let b2 = M[009044];
      SetByte 009043 HiByte(Sub(MakeHiLo(b1,b2),1));
      SetByte 009044 LoByte(Sub(MakeHiLo(b1,b2),1));
      TraceOperation 023704 (Add (Var (Local 1)) (Con 2) (Local 1));
      SetLocal 1 Add(GetLocal(1),2);
      TraceOperation 023708 (Jump 023979);
      Jump: 023979
    } else {
      Jump: 023979
    }
  } else {
    Jump: 023711
  }
LocOp 023711:
  TraceOperation 023711 (Je [Var (Local 3),Con 19393,Con 15151] (Branch T (Dloc 023739)));
  if (LogOr(Equal(GetLocal(3),19393),Equal(GetLocal(3),15151))) {
    Jump: 023739
  } else {
    TraceOperation 023719 (Call (Floc 023466) [Var (Local 3),Con 8] Sp);
    PushFrame 023719;
    SetLocal 1 GetLocal(3);
    SetLocal 2 8;
    JumpCall: 023466, #actuals: 2
  }
LocReturn 023719:
  PushStack call_result;
  TraceOperation 023726 (Jz (Var Sp) (Branch T (Dloc 023764)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 023764
  } else {
    TraceOperation 023729 (Loadw (Var (Global 100)) (Con 0) Sp);
    Let b2 = M[009017];
    Let b3 = M[009018];
    Let b4 = M[Offset(Address(MakeHiLo(b2,b3)),0)];
    Let b5 = M[Offset(Offset(Address(MakeHiLo(b2,b3)),0),1)];
    PushStack MakeHiLo(b4,b5);
    TraceOperation 023733 (Jz (Var Sp) (Branch T (Dloc 023764)));
    PopStack popped6;
    if (IsZero(popped6)) {
      Jump: 023764
    } else {
      TraceOperation 023736 (Jz (Var (Local 7)) (Branch F (Dloc 023764)));
      if (IsZero(GetLocal(7))) {
        Jump: 023739
      } else {
        Jump: 023764
      }
    }
  }
LocOp 023739:
  TraceOperation 023739 (Inc (Con 129));
  Let b1 = M[009043];
  Let b2 = M[009044];
  SetByte 009043 HiByte(Add(MakeHiLo(b1,b2),1));
  SetByte 009044 LoByte(Add(MakeHiLo(b1,b2),1));
  TraceOperation 023741 (Add (Var (Local 5)) (Con 1) (Local 10));
  SetLocal 10 Add(GetLocal(5),1);
  TraceOperation 023745 (Mul (Var (Local 1)) (Con 2) Sp);
  PushStack Mul(GetLocal(1),2);
  TraceOperation 023749 (Add (Var (Global 110)) (Var Sp) Sp);
  Let b3 = M[009037];
  Let b4 = M[009038];
  PopStack popped5;
  PushStack Add(MakeHiLo(b3,b4),popped5);
  TraceOperation 023753 (Storew (Var (Global 100)) (Var (Local 10)) (Var Sp));
  Let b6 = M[009017];
  Let b7 = M[009018];
  PopStack popped8;
  SetByte Offset(Address(MakeHiLo(b6,b7)),Mul(2,GetLocal(10))) HiByte(popped8);
  SetByte Offset(Offset(Address(MakeHiLo(b6,b7)),Mul(2,GetLocal(10))),1) LoByte(popped8);
  TraceOperation 023758 (Sub (Var (Local 1)) (Con 2) Sp);
  PushStack Sub(GetLocal(1),2);
  TraceOperation 023762 (Ret (Var Sp));
  PopStack popped9;
  PopFrame return_address_10;
  JumpReturn: return_address_10, result: popped9
LocOp 023764:
  TraceOperation 023764 (Call (Floc 023466) [Var (Local 3),Con 128] Sp);
  PushFrame 023764;
  SetLocal 1 GetLocal(3);
  SetLocal 2 128;
  JumpCall: 023466, #actuals: 2
LocReturn 023764:
  PushStack call_result;
  TraceOperation 023771 (Jz (Var Sp) (Branch T (Dloc 023871)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 023871
  } else {
    TraceOperation 023775 (Jg (Var (Global 113)) (Con 0) (Branch F (Dloc 023796)));
    Let b2 = M[009043];
    Let b3 = M[009044];
    if (GreaterThan(MakeHiLo(b2,b3),0)) {
      TraceOperation 023779 (Je [Var (Local 8),Con 18000] (Branch F (Dloc 023796)));
      if (Equal(GetLocal(8),18000)) {
        TraceOperation 023785 (Je [Var (Local 3),Con 15228,Con 18042] (Branch T (Dloc 023796)));
        if (LogOr(Equal(GetLocal(3),15228),Equal(GetLocal(3),18042))) {
          Jump: 023796
        } else {
          TraceOperation 023793 (Jump 023979);
          Jump: 023979
        }
      } else {
        Jump: 023796
      }
    } else {
      Jump: 023796
    }
  }
LocOp 023796:
  TraceOperation 023796 (Call (Floc 023466) [Var (Local 3),Con 32,Con 2] Sp);
  PushFrame 023796;
  SetLocal 1 GetLocal(3);
  SetLocal 2 32;
  SetLocal 3 2;
  JumpCall: 023466, #actuals: 3
LocReturn 023796:
  PushStack call_result;
  TraceOperation 023804 (Jz (Var Sp) (Branch T (Dloc 023823)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 023823
  } else {
    TraceOperation 023807 (Jz (Var (Local 8)) (Branch T (Dloc 023823)));
    if (IsZero(GetLocal(8))) {
      Jump: 023823
    } else {
      TraceOperation 023810 (Call (Floc 023466) [Var (Local 8),Con 128] Sp);
      PushFrame 023810;
      SetLocal 1 GetLocal(8);
      SetLocal 2 128;
      JumpCall: 023466, #actuals: 2
    }
  }
LocReturn 023810:
  PushStack call_result;
  TraceOperation 023817 (Jz (Var Sp) (Branch T (Dloc 023823)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 023823
  } else {
    TraceOperation 023820 (Jump 023979);
    Jump: 023979
  }
LocOp 023823:
  TraceOperation 023823 (Jz (Var (Local 6)) (Branch F (Dloc 023865)));
  if (IsZero(GetLocal(6))) {
    TraceOperation 023826 (Je [Var (Local 8),Con 15767,Con 16481] (Branch T (Dloc 023865)));
    if (LogOr(Equal(GetLocal(8),15767),Equal(GetLocal(8),16481))) {
      Jump: 023865
    } else {
      TraceOperation 023834 (Je [Var (Local 8),Con 15256,Con 15158] (Branch T (Dloc 023865)));
      if (LogOr(Equal(GetLocal(8),15256),Equal(GetLocal(8),15158))) {
        Jump: 023865
      } else {
        TraceOperation 023842 (Add (Var (Local 5)) (Con 1) (Local 10));
        SetLocal 10 Add(GetLocal(5),1);
        TraceOperation 023846 (Add (Var (Local 1)) (Con 2) Sp);
        PushStack Add(GetLocal(1),2);
        TraceOperation 023850 (Mul (Var Sp) (Con 2) Sp);
        PopStack popped1;
        PushStack Mul(popped1,2);
        TraceOperation 023854 (Add (Var (Global 110)) (Var Sp) Sp);
        Let b2 = M[009037];
        Let b3 = M[009038];
        PopStack popped4;
        PushStack Add(MakeHiLo(b2,b3),popped4);
        TraceOperation 023858 (Storew (Var (Global 100)) (Var (Local 10)) (Var Sp));
        Let b5 = M[009017];
        Let b6 = M[009018];
        PopStack popped7;
        SetByte Offset(Address(MakeHiLo(b5,b6)),Mul(2,GetLocal(10))) HiByte(popped7);
        SetByte Offset(Offset(Address(MakeHiLo(b5,b6)),Mul(2,GetLocal(10))),1) LoByte(popped7);
        TraceOperation 023863 (Ret (Var (Local 1)));
        PopFrame return_address_8;
        JumpReturn: return_address_8, result: GetLocal(1)
      }
    }
  } else {
    Jump: 023865
  }
LocOp 023865:
  TraceOperation 023865 (Store (Con 6) (Con 0));
  SetLocal 6 0;
  TraceOperation 023868 (Jump 023979);
  Jump: 023979
LocOp 023871:
  TraceOperation 023871 (Jz (Var (Global 104)) (Branch F (Dloc 023884)));
  Let b1 = M[009025];
  Let b2 = M[009026];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 023874 (Jz (Var (Global 105)) (Branch F (Dloc 023884)));
    Let b3 = M[009027];
    Let b4 = M[009028];
    if (IsZero(MakeHiLo(b3,b4))) {
      TraceOperation 023877 (Loadw (Var (Global 100)) (Con 0) Sp);
      Let b5 = M[009017];
      Let b6 = M[009018];
      Let b7 = M[Offset(Address(MakeHiLo(b5,b6)),0)];
      Let b8 = M[Offset(Offset(Address(MakeHiLo(b5,b6)),0),1)];
      PushStack MakeHiLo(b7,b8);
      TraceOperation 023881 (Jz (Var Sp) (Branch T (Dloc 023908)));
      PopStack popped9;
      if (IsZero(popped9)) {
        Jump: 023908
      } else {
        Jump: 023884
      }
    } else {
      Jump: 023884
    }
  } else {
    Jump: 023884
  }
LocOp 023884:
  TraceOperation 023884 (Call (Floc 023466) [Var (Local 3),Con 32] Sp);
  PushFrame 023884;
  SetLocal 1 GetLocal(3);
  SetLocal 2 32;
  JumpCall: 023466, #actuals: 2
LocReturn 023884:
  PushStack call_result;
  TraceOperation 023891 (Jz (Var Sp) (Branch F (Dloc 023979)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 023895 (Call (Floc 023466) [Var (Local 3),Con 4] Sp);
    PushFrame 023895;
    SetLocal 1 GetLocal(3);
    SetLocal 2 4;
    JumpCall: 023466, #actuals: 2
  } else {
    Jump: 023979
  }
LocReturn 023895:
  PushStack call_result;
  TraceOperation 023902 (Jz (Var Sp) (Branch T (Dloc 023908)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 023908
  } else {
    TraceOperation 023905 (Jump 023979);
    Jump: 023979
  }
LocOp 023908:
  TraceOperation 023908 (Jz (Var (Local 6)) (Branch T (Dloc 023952)));
  if (IsZero(GetLocal(6))) {
    Jump: 023952
  } else {
    TraceOperation 023911 (Call (Floc 023466) [Var (Local 3),Con 16] Sp);
    PushFrame 023911;
    SetLocal 1 GetLocal(3);
    SetLocal 2 16;
    JumpCall: 023466, #actuals: 2
  }
LocReturn 023911:
  PushStack call_result;
  TraceOperation 023918 (Jz (Var Sp) (Branch F (Dloc 023931)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 023921 (Call (Floc 023466) [Var (Local 3),Con 64] Sp);
    PushFrame 023921;
    SetLocal 1 GetLocal(3);
    SetLocal 2 64;
    JumpCall: 023466, #actuals: 2
  } else {
    Jump: 023931
  }
LocReturn 023921:
  PushStack call_result;
  TraceOperation 023928 (Jz (Var Sp) (Branch T (Dloc 023952)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 023952
  } else {
    Jump: 023931
  }
LocOp 023931:
  TraceOperation 023931 (Sub (Var (Local 1)) (Con 4) (Local 1));
  SetLocal 1 Sub(GetLocal(1),4);
  TraceOperation 023935 (Add (Var (Local 1)) (Con 2) Sp);
  PushStack Add(GetLocal(1),2);
  TraceOperation 023939 (Storew (Var (Global 110)) (Var Sp) (Con 19393));
  Let b1 = M[009037];
  Let b2 = M[009038];
  PopStack popped3;
  SetByte Offset(Address(MakeHiLo(b1,b2)),Mul(2,popped3)) 75;
  SetByte Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,popped3)),1) 193;
  TraceOperation 023945 (Add (Var (Global 113)) (Con 2) (Global 113));
  Let b4 = M[009043];
  Let b5 = M[009044];
  SetByte 009043 HiByte(Add(MakeHiLo(b4,b5),2));
  SetByte 009044 LoByte(Add(MakeHiLo(b4,b5),2));
  TraceOperation 023949 (Jump 023979);
  Jump: 023979
LocOp 023952:
  TraceOperation 023952 (Call (Floc 023466) [Var (Local 3),Con 8] Sp);
  PushFrame 023952;
  SetLocal 1 GetLocal(3);
  SetLocal 2 8;
  JumpCall: 023466, #actuals: 2
LocReturn 023952:
  PushStack call_result;
  TraceOperation 023959 (Jz (Var Sp) (Branch T (Dloc 023965)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 023965
  } else {
    TraceOperation 023962 (Jump 023979);
    Jump: 023979
  }
LocOp 023965:
  TraceOperation 023965 (Call (Floc 024640) [Var (Local 1)] Sp);
  PushFrame 023965;
  SetLocal 1 GetLocal(1);
  JumpCall: 024640, #actuals: 1
LocReturn 023965:
  PushStack call_result;
  TraceOperation 023971 Rfalse;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 0
LocOp 023972:
  TraceOperation 023972 (Call (Floc 024560) [Var (Local 1)] Sp);
  PushFrame 023972;
  SetLocal 1 GetLocal(1);
  JumpCall: 024560, #actuals: 1
LocReturn 023972:
  PushStack call_result;
  TraceOperation 023978 Rfalse;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 0
LocOp 023979:
  TraceOperation 023979 (Store (Con 9) (Var (Local 3)));
  SetLocal 9 GetLocal(3);
  TraceOperation 023982 (Store (Con 7) (Con 0));
  SetLocal 7 0;
  TraceOperation 023985 (Add (Var (Local 1)) (Con 2) (Local 1));
  SetLocal 1 Add(GetLocal(1),2);
  TraceOperation 023989 (Jump 023615);
  Jump: 023615
--[41]--------------------------------------------------
LocRoutine 023992:
  MakeRoutineFrame 7;
  if (LessThanByte(num_actuals,7)) {
    SetLocal 7 0;
    if (LessThanByte(num_actuals,6)) {
      SetLocal 6 0;
      if (LessThanByte(num_actuals,5)) {
        SetLocal 5 0;
        if (LessThanByte(num_actuals,4)) {
          SetLocal 4 0;
          if (LessThanByte(num_actuals,3)) {
            SetLocal 3 0;
            if (LessThanByte(num_actuals,2)) {
              SetLocal 2 0;
              if (LessThanByte(num_actuals,1)) {
                SetLocal 1 0;
              }
            }
          }
        }
      }
    }
  }
  Jump: 024007
LocOp 024007:
  TraceOperation 024007 (Mul (Var (Local 1)) (Con 2) Sp);
  PushStack Mul(GetLocal(1),2);
  TraceOperation 024011 (Add (Var (Global 110)) (Var Sp) Sp);
  Let b1 = M[009037];
  Let b2 = M[009038];
  PopStack popped3;
  PushStack Add(MakeHiLo(b1,b2),popped3);
  TraceOperation 024015 (Loadb (Var Sp) (Con 2) (Local 2));
  PopStack popped4;
  Let b5 = M[Offset(Address(popped4),2)];
  SetLocal 2 Widen(b5);
  TraceOperation 024019 (Mul (Var (Local 1)) (Con 2) Sp);
  PushStack Mul(GetLocal(1),2);
  TraceOperation 024023 (Add (Var (Global 110)) (Var Sp) Sp);
  Let b6 = M[009037];
  Let b7 = M[009038];
  PopStack popped8;
  PushStack Add(MakeHiLo(b6,b7),popped8);
  TraceOperation 024027 (Loadb (Var Sp) (Con 3) (Local 3));
  PopStack popped9;
  Let b10 = M[Offset(Address(popped9),3)];
  SetLocal 3 Widen(b10);
  Jump: 024031
LocOp 024031:
  TraceOperation 024031 (Dec_chk (Con 2) (Con 0) (Branch F (Dloc 024038)));
  if (LessThanEqual(GetLocal(2),0)) {
    SetLocal 2 Sub(GetLocal(2),1);
    TraceOperation 024035 (Jump 024086);
    Jump: 024086
  } else {
    SetLocal 2 Sub(GetLocal(2),1);
    Jump: 024038
  }
LocOp 024038:
  TraceOperation 024038 (Loadb (Var (Global 109)) (Var (Local 3)) (Local 4));
  Let b1 = M[009035];
  Let b2 = M[009036];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),GetLocal(3))];
  SetLocal 4 Widen(b3);
  TraceOperation 024042 (Je [Var (Local 4),Con 58] (Branch F (Dloc 024055)));
  if (Equal(GetLocal(4),58)) {
    TraceOperation 024046 (Store (Con 6) (Var (Local 5)));
    SetLocal 6 GetLocal(5);
    TraceOperation 024049 (Store (Con 5) (Con 0));
    SetLocal 5 0;
    TraceOperation 024052 (Jump 024081);
    Jump: 024081
  } else {
    Jump: 024055
  }
LocOp 024055:
  TraceOperation 024055 (Jg (Var (Local 5)) (Con 10000) (Branch T Dfalse));
  if (GreaterThan(GetLocal(5),10000)) {
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 0
  } else {
    TraceOperation 024061 (Jl (Var (Local 4)) (Con 58) (Branch F Dfalse));
    if (LessThan(GetLocal(4),58)) {
      TraceOperation 024065 (Jg (Var (Local 4)) (Con 47) (Branch F Dfalse));
      if (GreaterThan(GetLocal(4),47)) {
        TraceOperation 024069 (Mul (Var (Local 5)) (Con 10) (Local 7));
        SetLocal 7 Mul(GetLocal(5),10);
        TraceOperation 024073 (Sub (Var (Local 4)) (Con 48) Sp);
        PushStack Sub(GetLocal(4),48);
        TraceOperation 024077 (Add (Var (Local 7)) (Var Sp) (Local 5));
        PopStack popped2;
        SetLocal 5 Add(GetLocal(7),popped2);
        Jump: 024081
      } else {
        PopFrame return_address_3;
        JumpReturn: return_address_3, result: 0
      }
    } else {
      PopFrame return_address_4;
      JumpReturn: return_address_4, result: 0
    }
  }
LocOp 024081:
  TraceOperation 024081 (Inc (Con 3));
  SetLocal 3 Add(GetLocal(3),1);
  TraceOperation 024083 (Jump 024031);
  Jump: 024031
LocOp 024086:
  TraceOperation 024086 (Storew (Var (Global 110)) (Var (Local 1)) (Con 17321));
  Let b1 = M[009037];
  Let b2 = M[009038];
  SetByte Offset(Address(MakeHiLo(b1,b2)),Mul(2,GetLocal(1))) 67;
  SetByte Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,GetLocal(1))),1) 169;
  TraceOperation 024092 (Jg (Var (Local 5)) (Con 1000) (Branch T Dfalse));
  if (GreaterThan(GetLocal(5),1000)) {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  } else {
    TraceOperation 024098 (Jz (Var (Local 6)) (Branch T (Dloc 024124)));
    if (IsZero(GetLocal(6))) {
      Jump: 024124
    } else {
      TraceOperation 024101 (Jl (Var (Local 6)) (Con 8) (Branch F (Dloc 024112)));
      if (LessThan(GetLocal(6),8)) {
        TraceOperation 024105 (Add (Var (Local 6)) (Con 12) (Local 6));
        SetLocal 6 Add(GetLocal(6),12);
        TraceOperation 024109 (Jump 024116);
        Jump: 024116
      } else {
        Jump: 024112
      }
    }
  }
LocOp 024112:
  TraceOperation 024112 (Jg (Var (Local 6)) (Con 23) (Branch T Dfalse));
  if (GreaterThan(GetLocal(6),23)) {
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 0
  } else {
    Jump: 024116
  }
LocOp 024116:
  TraceOperation 024116 (Mul (Var (Local 6)) (Con 60) Sp);
  PushStack Mul(GetLocal(6),60);
  TraceOperation 024120 (Add (Var (Local 5)) (Var Sp) (Local 5));
  PopStack popped1;
  SetLocal 5 Add(GetLocal(5),popped1);
  Jump: 024124
LocOp 024124:
  TraceOperation 024124 (Store (Con 110) (Var (Local 5)));
  SetByte 009005 HiByte(GetLocal(5));
  SetByte 009006 LoByte(GetLocal(5));
  TraceOperation 024127 (Ret (Con 17321));
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 17321
--[42]--------------------------------------------------
LocRoutine 024130:
  MakeRoutineFrame 8;
  if (LessThanByte(num_actuals,8)) {
    SetLocal 8 0;
    if (LessThanByte(num_actuals,7)) {
      SetLocal 7 0;
      if (LessThanByte(num_actuals,6)) {
        SetLocal 6 0;
        if (LessThanByte(num_actuals,5)) {
          SetLocal 5 0;
          if (LessThanByte(num_actuals,4)) {
            SetLocal 4 0;
            if (LessThanByte(num_actuals,3)) {
              SetLocal 3 0;
              if (LessThanByte(num_actuals,2)) {
                SetLocal 2 0;
                if (LessThanByte(num_actuals,1)) {
                  SetLocal 1 -1;
                }
              }
            }
          }
        }
      }
    }
  }
  Jump: 024147
LocOp 024147:
  TraceOperation 024147 (Store (Con 121) (Con 0));
  SetByte 009027 0;
  SetByte 009028 0;
  TraceOperation 024150 (Loadw (Var (Global 100)) (Con 1) Sp);
  Let b1 = M[009017];
  Let b2 = M[009018];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),2)];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),2),1)];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 024154 (Loadw (Var Sp) (Con 0) Sp);
  PopStack popped5;
  Let b6 = M[Offset(Address(popped5),0)];
  Let b7 = M[Offset(Offset(Address(popped5),0),1)];
  PushStack MakeHiLo(b6,b7);
  TraceOperation 024158 (Call (Floc 023466) [Var Sp,Con 32,Con 2] Sp);
  PopStack popped8;
  PushFrame 024158;
  SetLocal 1 popped8;
  SetLocal 2 32;
  SetLocal 3 2;
  JumpCall: 023466, #actuals: 3
LocReturn 024158:
  PushStack call_result;
  TraceOperation 024166 (Jz (Var Sp) (Branch T (Dloc 024172)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 024172
  } else {
    TraceOperation 024169 (Store (Con 6) (Con 1));
    SetLocal 6 1;
    Jump: 024172
  }
LocOp 024172:
  TraceOperation 024172 (Loadw (Var (Global 100)) (Con 0) (Local 3));
  Let b1 = M[009017];
  Let b2 = M[009018];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),0)];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),0),1)];
  SetLocal 3 MakeHiLo(b3,b4);
  TraceOperation 024176 (Jz (Var (Local 3)) (Branch T (Dloc 024190)));
  if (IsZero(GetLocal(3))) {
    Jump: 024190
  } else {
    TraceOperation 024179 (Jz (Var (Local 6)) (Branch F (Dloc 024190)));
    if (IsZero(GetLocal(6))) {
      TraceOperation 024182 (Loadw (Var (Global 99)) (Con 0) Sp);
      Let b5 = M[009015];
      Let b6 = M[009016];
      Let b7 = M[Offset(Address(MakeHiLo(b5,b6)),0)];
      Let b8 = M[Offset(Offset(Address(MakeHiLo(b5,b6)),0),1)];
      PushStack MakeHiLo(b7,b8);
      TraceOperation 024186 (Je [Var (Local 3),Var Sp] (Branch F Dfalse));
      PopStack popped9;
      if (Equal(GetLocal(3),popped9)) {
        Jump: 024190
      } else {
        PopFrame return_address_10;
        JumpReturn: return_address_10, result: 0
      }
    } else {
      Jump: 024190
    }
  }
LocOp 024190:
  TraceOperation 024190 (Je [Var (Global 97),Con 2] (Branch T Dfalse));
  Let b1 = M[009011];
  Let b2 = M[009012];
  if (Equal(MakeHiLo(b1,b2),2)) {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  } else {
    TraceOperation 024194 (Loadw (Var (Global 99)) (Con 6) Sp);
    Let b4 = M[009015];
    Let b5 = M[009016];
    Let b6 = M[Offset(Address(MakeHiLo(b4,b5)),12)];
    Let b7 = M[Offset(Offset(Address(MakeHiLo(b4,b5)),12),1)];
    PushStack MakeHiLo(b6,b7);
    TraceOperation 024198 (Je [Var Sp,Con 1] (Branch F (Dloc 024263)));
    PopStack popped8;
    if (Equal(popped8,1)) {
      TraceOperation 024203 (Loadw (Var (Global 100)) (Con 2) (Local 2));
      Let b9 = M[009017];
      Let b10 = M[009018];
      Let b11 = M[Offset(Address(MakeHiLo(b9,b10)),4)];
      Let b12 = M[Offset(Offset(Address(MakeHiLo(b9,b10)),4),1)];
      SetLocal 2 MakeHiLo(b11,b12);
      TraceOperation 024207 (Loadw (Var (Global 99)) (Con 2) Sp);
      Let b13 = M[009015];
      Let b14 = M[009016];
      Let b15 = M[Offset(Address(MakeHiLo(b13,b14)),4)];
      Let b16 = M[Offset(Offset(Address(MakeHiLo(b13,b14)),4),1)];
      PushStack MakeHiLo(b15,b16);
      TraceOperation 024211 (Je [Var (Local 2),Var Sp] (Branch T (Dloc 024218)));
      PopStack popped17;
      if (Equal(GetLocal(2),popped17)) {
        Jump: 024218
      } else {
        TraceOperation 024215 (Jz (Var (Local 2)) (Branch F Dfalse));
        if (IsZero(GetLocal(2))) {
          Jump: 024218
        } else {
          PopFrame return_address_18;
          JumpReturn: return_address_18, result: 0
        }
      }
    } else {
      Jump: 024263
    }
  }
LocOp 024218:
  TraceOperation 024218 (Jz (Var (Local 6)) (Branch T (Dloc 024242)));
  if (IsZero(GetLocal(6))) {
    Jump: 024242
  } else {
    TraceOperation 024221 (Add (Var (Global 110)) (Con 2) Sp);
    Let b1 = M[009037];
    Let b2 = M[009038];
    PushStack Add(MakeHiLo(b1,b2),2);
    TraceOperation 024225 (Storew (Var (Global 99)) (Con 6) (Var Sp));
    Let b3 = M[009015];
    Let b4 = M[009016];
    PopStack popped5;
    SetByte Offset(Address(MakeHiLo(b3,b4)),12) HiByte(popped5);
    SetByte Offset(Offset(Address(MakeHiLo(b3,b4)),12),1) LoByte(popped5);
    TraceOperation 024230 (Add (Var (Global 110)) (Con 6) Sp);
    Let b6 = M[009037];
    Let b7 = M[009038];
    PushStack Add(MakeHiLo(b6,b7),6);
    TraceOperation 024234 (Storew (Var (Global 99)) (Con 7) (Var Sp));
    Let b8 = M[009015];
    Let b9 = M[009016];
    PopStack popped10;
    SetByte Offset(Address(MakeHiLo(b8,b9)),14) HiByte(popped10);
    SetByte Offset(Offset(Address(MakeHiLo(b8,b9)),14),1) LoByte(popped10);
    TraceOperation 024239 (Jump 024475);
    Jump: 024475
  }
LocOp 024242:
  TraceOperation 024242 (Loadw (Var (Global 100)) (Con 6) Sp);
  Let b1 = M[009017];
  Let b2 = M[009018];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),12)];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),12),1)];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 024246 (Storew (Var (Global 99)) (Con 6) (Var Sp));
  Let b5 = M[009015];
  Let b6 = M[009016];
  PopStack popped7;
  SetByte Offset(Address(MakeHiLo(b5,b6)),12) HiByte(popped7);
  SetByte Offset(Offset(Address(MakeHiLo(b5,b6)),12),1) LoByte(popped7);
  TraceOperation 024251 (Loadw (Var (Global 100)) (Con 7) Sp);
  Let b8 = M[009017];
  Let b9 = M[009018];
  Let b10 = M[Offset(Address(MakeHiLo(b8,b9)),14)];
  Let b11 = M[Offset(Offset(Address(MakeHiLo(b8,b9)),14),1)];
  PushStack MakeHiLo(b10,b11);
  TraceOperation 024255 (Storew (Var (Global 99)) (Con 7) (Var Sp));
  Let b12 = M[009015];
  Let b13 = M[009016];
  PopStack popped14;
  SetByte Offset(Address(MakeHiLo(b12,b13)),14) HiByte(popped14);
  SetByte Offset(Offset(Address(MakeHiLo(b12,b13)),14),1) LoByte(popped14);
  TraceOperation 024260 (Jump 024475);
  Jump: 024475
LocOp 024263:
  TraceOperation 024263 (Loadw (Var (Global 99)) (Con 8) Sp);
  Let b1 = M[009015];
  Let b2 = M[009016];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),16)];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),16),1)];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 024267 (Je [Var Sp,Con 1] (Branch F (Dloc 024332)));
  PopStack popped5;
  if (Equal(popped5,1)) {
    TraceOperation 024272 (Loadw (Var (Global 100)) (Con 2) (Local 2));
    Let b6 = M[009017];
    Let b7 = M[009018];
    Let b8 = M[Offset(Address(MakeHiLo(b6,b7)),4)];
    Let b9 = M[Offset(Offset(Address(MakeHiLo(b6,b7)),4),1)];
    SetLocal 2 MakeHiLo(b8,b9);
    TraceOperation 024276 (Loadw (Var (Global 99)) (Con 4) Sp);
    Let b10 = M[009015];
    Let b11 = M[009016];
    Let b12 = M[Offset(Address(MakeHiLo(b10,b11)),8)];
    Let b13 = M[Offset(Offset(Address(MakeHiLo(b10,b11)),8),1)];
    PushStack MakeHiLo(b12,b13);
    TraceOperation 024280 (Je [Var (Local 2),Var Sp] (Branch T (Dloc 024287)));
    PopStack popped14;
    if (Equal(GetLocal(2),popped14)) {
      Jump: 024287
    } else {
      TraceOperation 024284 (Jz (Var (Local 2)) (Branch F Dfalse));
      if (IsZero(GetLocal(2))) {
        Jump: 024287
      } else {
        PopFrame return_address_15;
        JumpReturn: return_address_15, result: 0
      }
    }
  } else {
    Jump: 024332
  }
LocOp 024287:
  TraceOperation 024287 (Jz (Var (Local 6)) (Branch T (Dloc 024308)));
  if (IsZero(GetLocal(6))) {
    Jump: 024308
  } else {
    TraceOperation 024290 (Add (Var (Global 110)) (Con 2) Sp);
    Let b1 = M[009037];
    Let b2 = M[009038];
    PushStack Add(MakeHiLo(b1,b2),2);
    TraceOperation 024294 (Storew (Var (Global 100)) (Con 6) (Var Sp));
    Let b3 = M[009017];
    Let b4 = M[009018];
    PopStack popped5;
    SetByte Offset(Address(MakeHiLo(b3,b4)),12) HiByte(popped5);
    SetByte Offset(Offset(Address(MakeHiLo(b3,b4)),12),1) LoByte(popped5);
    TraceOperation 024299 (Add (Var (Global 110)) (Con 6) Sp);
    Let b6 = M[009037];
    Let b7 = M[009038];
    PushStack Add(MakeHiLo(b6,b7),6);
    TraceOperation 024303 (Storew (Var (Global 100)) (Con 7) (Var Sp));
    Let b8 = M[009017];
    Let b9 = M[009018];
    PopStack popped10;
    SetByte Offset(Address(MakeHiLo(b8,b9)),14) HiByte(popped10);
    SetByte Offset(Offset(Address(MakeHiLo(b8,b9)),14),1) LoByte(popped10);
    Jump: 024308
  }
LocOp 024308:
  TraceOperation 024308 (Loadw (Var (Global 100)) (Con 6) Sp);
  Let b1 = M[009017];
  Let b2 = M[009018];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),12)];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),12),1)];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 024312 (Storew (Var (Global 99)) (Con 8) (Var Sp));
  Let b5 = M[009015];
  Let b6 = M[009016];
  PopStack popped7;
  SetByte Offset(Address(MakeHiLo(b5,b6)),16) HiByte(popped7);
  SetByte Offset(Offset(Address(MakeHiLo(b5,b6)),16),1) LoByte(popped7);
  TraceOperation 024317 (Loadw (Var (Global 100)) (Con 7) Sp);
  Let b8 = M[009017];
  Let b9 = M[009018];
  Let b10 = M[Offset(Address(MakeHiLo(b8,b9)),14)];
  Let b11 = M[Offset(Offset(Address(MakeHiLo(b8,b9)),14),1)];
  PushStack MakeHiLo(b10,b11);
  TraceOperation 024321 (Storew (Var (Global 99)) (Con 9) (Var Sp));
  Let b12 = M[009015];
  Let b13 = M[009016];
  PopStack popped14;
  SetByte Offset(Address(MakeHiLo(b12,b13)),18) HiByte(popped14);
  SetByte Offset(Offset(Address(MakeHiLo(b12,b13)),18),1) LoByte(popped14);
  TraceOperation 024326 (Store (Con 113) (Con 2));
  SetByte 009011 0;
  SetByte 009012 2;
  TraceOperation 024329 (Jump 024475);
  Jump: 024475
LocOp 024332:
  TraceOperation 024332 (Jz (Var (Global 103)) (Branch T (Dloc 024475)));
  Let b1 = M[009023];
  Let b2 = M[009024];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 024475
  } else {
    TraceOperation 024336 (Je [Var (Global 97),Con 1] (Branch T (Dloc 024347)));
    Let b3 = M[009011];
    Let b4 = M[009012];
    if (Equal(MakeHiLo(b3,b4),1)) {
      Jump: 024347
    } else {
      TraceOperation 024340 (Jz (Var (Local 6)) (Branch F (Dloc 024347)));
      if (IsZero(GetLocal(6))) {
        TraceOperation 024343 (Store (Con 119) (Con 0));
        SetByte 009023 0;
        SetByte 009024 0;
        TraceOperation 024346 Rfalse;
        PopFrame return_address_5;
        JumpReturn: return_address_5, result: 0
      } else {
        Jump: 024347
      }
    }
  }
LocOp 024347:
  TraceOperation 024347 (Loadw (Var (Global 100)) (Con 6) (Local 4));
  Let b1 = M[009017];
  Let b2 = M[009018];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),12)];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),12),1)];
  SetLocal 4 MakeHiLo(b3,b4);
  TraceOperation 024351 (Jz (Var (Local 6)) (Branch T (Dloc 024361)));
  if (IsZero(GetLocal(6))) {
    Jump: 024361
  } else {
    TraceOperation 024354 (Add (Var (Global 110)) (Con 2) (Local 4));
    Let b5 = M[009037];
    Let b6 = M[009038];
    SetLocal 4 Add(MakeHiLo(b5,b6),2);
    TraceOperation 024358 (Store (Con 6) (Con 0));
    SetLocal 6 0;
    Jump: 024361
  }
LocOp 024361:
  TraceOperation 024361 (Loadw (Var (Global 100)) (Con 7) (Local 5));
  Let b1 = M[009017];
  Let b2 = M[009018];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),14)];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),14),1)];
  SetLocal 5 MakeHiLo(b3,b4);
  Jump: 024365
LocOp 024365:
  TraceOperation 024365 (Loadw (Var (Local 4)) (Con 0) (Local 7));
  Let b1 = M[Offset(Address(GetLocal(4)),0)];
  Let b2 = M[Offset(Offset(Address(GetLocal(4)),0),1)];
  SetLocal 7 MakeHiLo(b1,b2);
  TraceOperation 024369 (Je [Var (Local 4),Var (Local 5)] (Branch F (Dloc 024389)));
  if (Equal(GetLocal(4),GetLocal(5))) {
    TraceOperation 024373 (Jz (Var (Local 6)) (Branch T (Dloc 024385)));
    if (IsZero(GetLocal(6))) {
      Jump: 024385
    } else {
      TraceOperation 024376 (Call (Floc 024496) [Var (Local 6)] Sp);
      PushFrame 024376;
      SetLocal 1 GetLocal(6);
      JumpCall: 024496, #actuals: 1
    }
  } else {
    Jump: 024389
  }
LocReturn 024376:
  PushStack call_result;
  TraceOperation 024382 (Jump 024475);
  Jump: 024475
LocOp 024385:
  TraceOperation 024385 (Store (Con 119) (Con 0));
  SetByte 009023 0;
  SetByte 009024 0;
  TraceOperation 024388 Rfalse;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 0
LocOp 024389:
  TraceOperation 024389 (Jz (Var (Local 6)) (Branch F (Dloc 024414)));
  if (IsZero(GetLocal(6))) {
    TraceOperation 024392 (Loadb (Var (Local 7)) (Con 4) Sp);
    Let b1 = M[Offset(Address(GetLocal(7)),4)];
    PushStack Widen(b1);
    TraceOperation 024396 (Test (Var Sp) (Con 32) (Branch T (Dloc 024408)));
    PopStack popped2;
    if (Equal(And(popped2,32),32)) {
      Jump: 024408
    } else {
      TraceOperation 024400 (Je [Var (Local 7),Con 15228,Con 18042] (Branch F (Dloc 024414)));
      if (LogOr(Equal(GetLocal(7),15228),Equal(GetLocal(7),18042))) {
        Jump: 024408
      } else {
        Jump: 024414
      }
    }
  } else {
    Jump: 024414
  }
LocOp 024408:
  TraceOperation 024408 (Store (Con 6) (Var (Local 7)));
  SetLocal 6 GetLocal(7);
  TraceOperation 024411 (Jump 024444);
  Jump: 024444
LocOp 024414:
  TraceOperation 024414 (Loadb (Var (Local 7)) (Con 4) Sp);
  Let b1 = M[Offset(Address(GetLocal(7)),4)];
  PushStack Widen(b1);
  TraceOperation 024418 (Test (Var Sp) (Con 128) (Branch T (Dloc 024428)));
  PopStack popped2;
  if (Equal(And(popped2,128),128)) {
    Jump: 024428
  } else {
    TraceOperation 024422 (Je [Var (Local 7),Con 18042] (Branch F (Dloc 024444)));
    if (Equal(GetLocal(7),18042)) {
      Jump: 024428
    } else {
      Jump: 024444
    }
  }
LocOp 024428:
  TraceOperation 024428 (Je [Var (Local 7),Var (Global 102),Con 18042] (Branch F Dfalse));
  Let b1 = M[009021];
  Let b2 = M[009022];
  if (LogOr(Equal(GetLocal(7),MakeHiLo(b1,b2)),Equal(GetLocal(7),18042))) {
    TraceOperation 024435 (Call (Floc 024496) [Var (Local 6)] Sp);
    PushFrame 024435;
    SetLocal 1 GetLocal(6);
    JumpCall: 024496, #actuals: 1
  } else {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  }
LocReturn 024435:
  PushStack call_result;
  TraceOperation 024441 (Jump 024475);
  Jump: 024475
LocOp 024444:
  TraceOperation 024444 (Add (Var (Local 4)) (Con 4) (Local 4));
  SetLocal 4 Add(GetLocal(4),4);
  TraceOperation 024448 (Jz (Var (Local 5)) (Branch F (Dloc 024365)));
  if (IsZero(GetLocal(5))) {
    TraceOperation 024452 (Store (Con 5) (Var (Local 4)));
    SetLocal 5 GetLocal(4);
    TraceOperation 024455 (Store (Con 113) (Con 1));
    SetByte 009011 0;
    SetByte 009012 1;
    TraceOperation 024458 (Sub (Var (Local 4)) (Con 4) Sp);
    PushStack Sub(GetLocal(4),4);
    TraceOperation 024462 (Storew (Var (Global 100)) (Con 6) (Var Sp));
    Let b1 = M[009017];
    Let b2 = M[009018];
    PopStack popped3;
    SetByte Offset(Address(MakeHiLo(b1,b2)),12) HiByte(popped3);
    SetByte Offset(Offset(Address(MakeHiLo(b1,b2)),12),1) LoByte(popped3);
    TraceOperation 024467 (Storew (Var (Global 100)) (Con 7) (Var (Local 4)));
    Let b4 = M[009017];
    Let b5 = M[009018];
    SetByte Offset(Address(MakeHiLo(b4,b5)),14) HiByte(GetLocal(4));
    SetByte Offset(Offset(Address(MakeHiLo(b4,b5)),14),1) LoByte(GetLocal(4));
    TraceOperation 024472 (Jump 024365);
    Jump: 024365
  } else {
    Jump: 024365
  }
LocOp 024475:
  TraceOperation 024475 (Inc_chk (Con 1) (Con 9) (Branch F (Dloc 024483)));
  SetLocal 1 Add(GetLocal(1),1);
  if (GreaterThanEqual(GetLocal(1),9)) {
    TraceOperation 024479 (Store (Con 120) (Con 1));
    SetByte 009025 0;
    SetByte 009026 1;
    TraceOperation 024482 Rtrue;
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 1
  } else {
    Jump: 024483
  }
LocOp 024483:
  TraceOperation 024483 (Loadw (Var (Global 99)) (Var (Local 1)) Sp);
  Let b1 = M[009015];
  Let b2 = M[009016];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,GetLocal(1)))];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,GetLocal(1))),1)];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 024487 (Storew (Var (Global 100)) (Var (Local 1)) (Var Sp));
  Let b5 = M[009017];
  Let b6 = M[009018];
  PopStack popped7;
  SetByte Offset(Address(MakeHiLo(b5,b6)),Mul(2,GetLocal(1))) HiByte(popped7);
  SetByte Offset(Offset(Address(MakeHiLo(b5,b6)),Mul(2,GetLocal(1))),1) LoByte(popped7);
  TraceOperation 024492 (Jump 024475);
  Jump: 024475
--[43]--------------------------------------------------
LocRoutine 024496:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 024499
LocOp 024499:
  TraceOperation 024499 (Loadw (Var (Global 99)) (Con 0) Sp);
  Let b1 = M[009015];
  Let b2 = M[009016];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),0)];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),0),1)];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 024503 (Storew (Var (Global 100)) (Con 0) (Var Sp));
  Let b5 = M[009017];
  Let b6 = M[009018];
  PopStack popped7;
  SetByte Offset(Address(MakeHiLo(b5,b6)),0) HiByte(popped7);
  SetByte Offset(Offset(Address(MakeHiLo(b5,b6)),0),1) LoByte(popped7);
  TraceOperation 024508 (Store (Con 130) (Var (Global 99)));
  Let b8 = M[009015];
  Let b9 = M[009016];
  SetByte 009045 b8;
  SetByte 009046 b9;
  TraceOperation 024511 (Add (Var (Global 103)) (Con 1) Sp);
  Let b10 = M[009023];
  Let b11 = M[009024];
  PushStack Add(MakeHiLo(b10,b11),1);
  TraceOperation 024515 (Call (Floc 025502) [Var (Global 103),Var Sp,Var (Local 1)] Sp);
  Let b12 = M[009023];
  Let b13 = M[009024];
  PopStack popped14;
  PushFrame 024515;
  SetLocal 1 MakeHiLo(b12,b13);
  SetLocal 2 popped14;
  SetLocal 3 GetLocal(1);
  JumpCall: 025502, #actuals: 3
LocReturn 024515:
  PushStack call_result;
  TraceOperation 024523 (Loadw (Var (Global 99)) (Con 8) Sp);
  Let b1 = M[009015];
  Let b2 = M[009016];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),16)];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),16),1)];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 024527 (Jz (Var Sp) (Branch T (Dloc 024533)));
  PopStack popped5;
  if (IsZero(popped5)) {
    Jump: 024533
  } else {
    TraceOperation 024530 (Store (Con 113) (Con 2));
    SetByte 009011 0;
    SetByte 009012 2;
    Jump: 024533
  }
LocOp 024533:
  TraceOperation 024533 (Store (Con 119) (Con 0));
  SetByte 009023 0;
  SetByte 009024 0;
  TraceOperation 024536 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[44]--------------------------------------------------
LocRoutine 024538:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 024543
LocOp 024543:
  TraceOperation 024543 (Dec_chk (Con 1) (Con 0) (Branch T Dtrue));
  if (LessThanEqual(GetLocal(1),0)) {
    SetLocal 1 Sub(GetLocal(1),1);
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 1
  } else {
    SetLocal 1 Sub(GetLocal(1),1);
    TraceOperation 024547 (Loadb (Var (Global 109)) (Var (Local 2)) Sp);
    Let b2 = M[009035];
    Let b3 = M[009036];
    Let b4 = M[Offset(Address(MakeHiLo(b2,b3)),GetLocal(2))];
    PushStack Widen(b4);
    TraceOperation 024551 (Print_char (Var Sp));
    PopStack popped5;
    GamePrint SingleChar(popped5);
    TraceOperation 024554 (Inc (Con 2));
    SetLocal 2 Add(GetLocal(2),1);
    TraceOperation 024556 (Jump 024543);
    Jump: 024543
  }
--[45]--------------------------------------------------
LocRoutine 024560:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 024567
LocOp 024567:
  TraceOperation 024567 (Je [Var (Global 120),Con 112] (Branch F (Dloc 024586)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),112)) {
    TraceOperation 024571 (Print "Nothing happens.");
    GamePrint "Nothing happens.";
    TraceOperation 024584 New_line;
    GamePrint "\n";
    TraceOperation 024585 Rfalse;
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  } else {
    Jump: 024586
  }
LocOp 024586:
  TraceOperation 024586 (Print "I don't know the word \"");
  GamePrint "I don't know the word \"";
  TraceOperation 024599 (Mul (Var (Local 1)) (Con 2) (Local 2));
  SetLocal 2 Mul(GetLocal(1),2);
  TraceOperation 024603 (Add (Var (Global 110)) (Var (Local 2)) Sp);
  Let b1 = M[009037];
  Let b2 = M[009038];
  PushStack Add(MakeHiLo(b1,b2),GetLocal(2));
  TraceOperation 024607 (Loadb (Var Sp) (Con 2) (Local 3));
  PopStack popped3;
  Let b4 = M[Offset(Address(popped3),2)];
  SetLocal 3 Widen(b4);
  TraceOperation 024611 (Add (Var (Global 110)) (Var (Local 2)) Sp);
  Let b5 = M[009037];
  Let b6 = M[009038];
  PushStack Add(MakeHiLo(b5,b6),GetLocal(2));
  TraceOperation 024615 (Loadb (Var Sp) (Con 3) Sp);
  PopStack popped7;
  Let b8 = M[Offset(Address(popped7),3)];
  PushStack Widen(b8);
  TraceOperation 024619 (Call (Floc 024538) [Var (Local 3),Var Sp] Sp);
  PopStack popped9;
  PushFrame 024619;
  SetLocal 1 GetLocal(3);
  SetLocal 2 popped9;
  JumpCall: 024538, #actuals: 2
LocReturn 024619:
  PushStack call_result;
  TraceOperation 024626 (Print "\".");
  GamePrint "\".";
  TraceOperation 024631 New_line;
  GamePrint "\n";
  TraceOperation 024632 (Store (Con 112) (Con 0));
  SetByte 009009 0;
  SetByte 009010 0;
  TraceOperation 024635 (Store (Con 121) (Con 0));
  SetByte 009027 0;
  SetByte 009028 0;
  TraceOperation 024638 (Ret (Var (Global 105)));
  Let b1 = M[009027];
  Let b2 = M[009028];
  PopFrame return_address_3;
  JumpReturn: return_address_3, result: MakeHiLo(b1,b2)
--[46]--------------------------------------------------
LocRoutine 024640:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 024647
LocOp 024647:
  TraceOperation 024647 (Je [Var (Global 120),Con 112] (Branch F (Dloc 024666)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),112)) {
    TraceOperation 024651 (Print "Nothing happens.");
    GamePrint "Nothing happens.";
    TraceOperation 024664 New_line;
    GamePrint "\n";
    TraceOperation 024665 Rfalse;
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  } else {
    Jump: 024666
  }
LocOp 024666:
  TraceOperation 024666 (Print "You used the word \"");
  GamePrint "You used the word \"";
  TraceOperation 024679 (Mul (Var (Local 1)) (Con 2) (Local 2));
  SetLocal 2 Mul(GetLocal(1),2);
  TraceOperation 024683 (Add (Var (Global 110)) (Var (Local 2)) Sp);
  Let b1 = M[009037];
  Let b2 = M[009038];
  PushStack Add(MakeHiLo(b1,b2),GetLocal(2));
  TraceOperation 024687 (Loadb (Var Sp) (Con 2) (Local 3));
  PopStack popped3;
  Let b4 = M[Offset(Address(popped3),2)];
  SetLocal 3 Widen(b4);
  TraceOperation 024691 (Add (Var (Global 110)) (Var (Local 2)) Sp);
  Let b5 = M[009037];
  Let b6 = M[009038];
  PushStack Add(MakeHiLo(b5,b6),GetLocal(2));
  TraceOperation 024695 (Loadb (Var Sp) (Con 3) Sp);
  PopStack popped7;
  Let b8 = M[Offset(Address(popped7),3)];
  PushStack Widen(b8);
  TraceOperation 024699 (Call (Floc 024538) [Var (Local 3),Var Sp] Sp);
  PopStack popped9;
  PushFrame 024699;
  SetLocal 1 GetLocal(3);
  SetLocal 2 popped9;
  JumpCall: 024538, #actuals: 2
LocReturn 024699:
  PushStack call_result;
  TraceOperation 024706 (Print "\" in a way that I don't understand.");
  GamePrint "\" in a way that I don't understand.";
  TraceOperation 024727 New_line;
  GamePrint "\n";
  TraceOperation 024728 (Store (Con 112) (Con 0));
  SetByte 009009 0;
  SetByte 009010 0;
  TraceOperation 024731 (Store (Con 121) (Con 0));
  SetByte 009027 0;
  SetByte 009028 0;
  TraceOperation 024734 (Ret (Var (Global 105)));
  Let b1 = M[009027];
  Let b2 = M[009028];
  PopFrame return_address_3;
  JumpReturn: return_address_3, result: MakeHiLo(b1,b2)
--[47]--------------------------------------------------
LocRoutine 024736:
  MakeRoutineFrame 11;
  if (LessThanByte(num_actuals,11)) {
    SetLocal 11 0;
    if (LessThanByte(num_actuals,10)) {
      SetLocal 10 0;
      if (LessThanByte(num_actuals,9)) {
        SetLocal 9 0;
        if (LessThanByte(num_actuals,8)) {
          SetLocal 8 0;
          if (LessThanByte(num_actuals,7)) {
            SetLocal 7 0;
            if (LessThanByte(num_actuals,6)) {
              SetLocal 6 0;
              if (LessThanByte(num_actuals,5)) {
                SetLocal 5 0;
                if (LessThanByte(num_actuals,4)) {
                  SetLocal 4 0;
                  if (LessThanByte(num_actuals,3)) {
                    SetLocal 3 0;
                    if (LessThanByte(num_actuals,2)) {
                      SetLocal 2 0;
                      if (LessThanByte(num_actuals,1)) {
                        SetLocal 1 0;
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  Jump: 024759
LocOp 024759:
  TraceOperation 024759 (Loadw (Var (Global 100)) (Con 0) (Local 8));
  Let b1 = M[009017];
  Let b2 = M[009018];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),0)];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),0),1)];
  SetLocal 8 MakeHiLo(b3,b4);
  TraceOperation 024763 (Jz (Var (Local 8)) (Branch F (Dloc 024789)));
  if (IsZero(GetLocal(8))) {
    TraceOperation 024766 (Print "There was no verb in that sentence!");
    GamePrint "There was no verb in that sentence!";
    TraceOperation 024787 New_line;
    GamePrint "\n";
    TraceOperation 024788 Rfalse;
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 0
  } else {
    Jump: 024789
  }
LocOp 024789:
  TraceOperation 024789 (Sub (Con 255) (Var (Local 8)) Sp);
  PushStack Sub(255,GetLocal(8));
  TraceOperation 024793 (Loadw (Var (Global 157)) (Var Sp) (Local 1));
  Let b1 = M[009131];
  Let b2 = M[009132];
  PopStack popped3;
  Let b4 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,popped3))];
  Let b5 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,popped3)),1)];
  SetLocal 1 MakeHiLo(b4,b5);
  TraceOperation 024797 (Loadb (Var (Local 1)) (Con 0) (Local 2));
  Let b6 = M[Offset(Address(GetLocal(1)),0)];
  SetLocal 2 Widen(b6);
  TraceOperation 024801 (Add (Con 1) (Var (Local 1)) (Local 1));
  SetLocal 1 Add(1,GetLocal(1));
  Jump: 024805
LocOp 024805:
  TraceOperation 024805 (Loadb (Var (Local 1)) (Con 0) Sp);
  Let b1 = M[Offset(Address(GetLocal(1)),0)];
  PushStack Widen(b1);
  TraceOperation 024809 (And (Var Sp) (Con 3) (Local 3));
  PopStack popped2;
  SetLocal 3 And(popped2,3);
  TraceOperation 024813 (Jg (Var (Global 97)) (Var (Local 3)) (Branch F (Dloc 024820)));
  Let b3 = M[009011];
  Let b4 = M[009012];
  if (GreaterThan(MakeHiLo(b3,b4),GetLocal(3))) {
    TraceOperation 024817 (Jump 024893);
    Jump: 024893
  } else {
    Jump: 024820
  }
LocOp 024820:
  TraceOperation 024820 (Jl (Var (Local 3)) (Con 1) (Branch T (Dloc 024848)));
  if (LessThan(GetLocal(3),1)) {
    Jump: 024848
  } else {
    TraceOperation 024824 (Jz (Var (Global 97)) (Branch F (Dloc 024848)));
    Let b1 = M[009011];
    Let b2 = M[009012];
    if (IsZero(MakeHiLo(b1,b2))) {
      TraceOperation 024827 (Loadw (Var (Global 100)) (Con 2) (Local 7));
      Let b3 = M[009017];
      Let b4 = M[009018];
      Let b5 = M[Offset(Address(MakeHiLo(b3,b4)),4)];
      Let b6 = M[Offset(Offset(Address(MakeHiLo(b3,b4)),4),1)];
      SetLocal 7 MakeHiLo(b5,b6);
      TraceOperation 024831 (Jz (Var (Local 7)) (Branch T (Dloc 024842)));
      if (IsZero(GetLocal(7))) {
        Jump: 024842
      } else {
        TraceOperation 024834 (Loadb (Var (Local 1)) (Con 1) Sp);
        Let b7 = M[Offset(Address(GetLocal(1)),1)];
        PushStack Widen(b7);
        TraceOperation 024838 (Je [Var (Local 7),Var Sp] (Branch F (Dloc 024848)));
        PopStack popped8;
        if (Equal(GetLocal(7),popped8)) {
          Jump: 024842
        } else {
          Jump: 024848
        }
      }
    } else {
      Jump: 024848
    }
  }
LocOp 024842:
  TraceOperation 024842 (Store (Con 5) (Var (Local 1)));
  SetLocal 5 GetLocal(1);
  TraceOperation 024845 (Jump 024893);
  Jump: 024893
LocOp 024848:
  TraceOperation 024848 (Loadb (Var (Local 1)) (Con 1) (Local 11));
  Let b1 = M[Offset(Address(GetLocal(1)),1)];
  SetLocal 11 Widen(b1);
  TraceOperation 024852 (Loadw (Var (Global 100)) (Con 2) Sp);
  Let b2 = M[009017];
  Let b3 = M[009018];
  Let b4 = M[Offset(Address(MakeHiLo(b2,b3)),4)];
  Let b5 = M[Offset(Offset(Address(MakeHiLo(b2,b3)),4),1)];
  PushStack MakeHiLo(b4,b5);
  TraceOperation 024856 (Je [Var (Local 11),Var Sp] (Branch F (Dloc 024893)));
  PopStack popped6;
  if (Equal(GetLocal(11),popped6)) {
    TraceOperation 024860 (Je [Var (Local 3),Con 2] (Branch F (Dloc 024874)));
    if (Equal(GetLocal(3),2)) {
      TraceOperation 024864 (Je [Var (Global 97),Con 1] (Branch F (Dloc 024874)));
      Let b7 = M[009011];
      Let b8 = M[009012];
      if (Equal(MakeHiLo(b7,b8),1)) {
        TraceOperation 024868 (Store (Con 6) (Var (Local 1)));
        SetLocal 6 GetLocal(1);
        TraceOperation 024871 (Jump 024893);
        Jump: 024893
      } else {
        Jump: 024874
      }
    } else {
      Jump: 024874
    }
  } else {
    Jump: 024893
  }
LocOp 024874:
  TraceOperation 024874 (Loadb (Var (Local 1)) (Con 2) (Local 11));
  Let b1 = M[Offset(Address(GetLocal(1)),2)];
  SetLocal 11 Widen(b1);
  TraceOperation 024878 (Loadw (Var (Global 100)) (Con 4) Sp);
  Let b2 = M[009017];
  Let b3 = M[009018];
  Let b4 = M[Offset(Address(MakeHiLo(b2,b3)),8)];
  Let b5 = M[Offset(Offset(Address(MakeHiLo(b2,b3)),8),1)];
  PushStack MakeHiLo(b4,b5);
  TraceOperation 024882 (Je [Var (Local 11),Var Sp] (Branch F (Dloc 024893)));
  PopStack popped6;
  if (Equal(GetLocal(11),popped6)) {
    TraceOperation 024886 (Call (Floc 025674) [Var (Local 1)] Sp);
    PushFrame 024886;
    SetLocal 1 GetLocal(1);
    JumpCall: 025674, #actuals: 1
  } else {
    Jump: 024893
  }
LocReturn 024886:
  PushStack call_result;
  TraceOperation 024892 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 024893:
  TraceOperation 024893 (Dec_chk (Con 2) (Con 1) (Branch F (Dloc 024935)));
  if (LessThanEqual(GetLocal(2),1)) {
    SetLocal 2 Sub(GetLocal(2),1);
    TraceOperation 024897 (Jz (Var (Local 5)) (Branch F (Dloc 024942)));
    if (IsZero(GetLocal(5))) {
      TraceOperation 024900 (Jz (Var (Local 6)) (Branch T (Dloc 024906)));
      if (IsZero(GetLocal(6))) {
        Jump: 024906
      } else {
        TraceOperation 024903 (Jump 024942);
        Jump: 024942
      }
    } else {
      Jump: 024942
    }
  } else {
    SetLocal 2 Sub(GetLocal(2),1);
    Jump: 024935
  }
LocOp 024906:
  TraceOperation 024906 (Print "That sentence isn't one I recognize.");
  GamePrint "That sentence isn't one I recognize.";
  TraceOperation 024933 New_line;
  GamePrint "\n";
  TraceOperation 024934 Rfalse;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 0
LocOp 024935:
  TraceOperation 024935 (Add (Var (Local 1)) (Con 8) (Local 1));
  SetLocal 1 Add(GetLocal(1),8);
  TraceOperation 024939 (Jump 024805);
  Jump: 024805
LocOp 024942:
  TraceOperation 024942 (Jz (Var (Local 5)) (Branch T (Dloc 024985)));
  if (IsZero(GetLocal(5))) {
    Jump: 024985
  } else {
    TraceOperation 024945 (Loadb (Var (Local 5)) (Con 3) (Local 10));
    Let b1 = M[Offset(Address(GetLocal(5)),3)];
    SetLocal 10 Widen(b1);
    TraceOperation 024949 (Loadb (Var (Local 5)) (Con 5) (Local 11));
    Let b2 = M[Offset(Address(GetLocal(5)),5)];
    SetLocal 11 Widen(b2);
    TraceOperation 024953 (Loadb (Var (Local 5)) (Con 1) Sp);
    Let b3 = M[Offset(Address(GetLocal(5)),1)];
    PushStack Widen(b3);
    TraceOperation 024957 (Call (Floc 025686) [Var (Local 10),Var (Local 11),Var Sp] (Local 4));
    PopStack popped4;
    PushFrame 024957;
    SetLocal 1 GetLocal(10);
    SetLocal 2 GetLocal(11);
    SetLocal 3 popped4;
    JumpCall: 025686, #actuals: 3
  }
LocReturn 024957:
  SetLocal 4 call_result;
  TraceOperation 024965 (Jz (Var (Local 4)) (Branch T (Dloc 024985)));
  if (IsZero(GetLocal(4))) {
    Jump: 024985
  } else {
    TraceOperation 024968 (Storew (Var (Global 86)) (Var (Global 81)) (Con 1));
    Let b1 = M[008989];
    Let b2 = M[008990];
    Let b3 = M[008979];
    Let b4 = M[008980];
    SetByte Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4))) 0;
    SetByte Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4))),1) 1;
    TraceOperation 024973 (Storew (Var (Global 86)) (Con 1) (Var (Local 4)));
    Let b5 = M[008989];
    Let b6 = M[008990];
    SetByte Offset(Address(MakeHiLo(b5,b6)),2) HiByte(GetLocal(4));
    SetByte Offset(Offset(Address(MakeHiLo(b5,b6)),2),1) LoByte(GetLocal(4));
    TraceOperation 024978 (Call (Floc 025674) [Var (Local 5)] Sp);
    PushFrame 024978;
    SetLocal 1 GetLocal(5);
    JumpCall: 025674, #actuals: 1
  }
LocReturn 024978:
  PushStack call_result;
  TraceOperation 024984 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 024985:
  TraceOperation 024985 (Jz (Var (Local 6)) (Branch T (Dloc 025028)));
  if (IsZero(GetLocal(6))) {
    Jump: 025028
  } else {
    TraceOperation 024988 (Loadb (Var (Local 6)) (Con 4) (Local 10));
    Let b1 = M[Offset(Address(GetLocal(6)),4)];
    SetLocal 10 Widen(b1);
    TraceOperation 024992 (Loadb (Var (Local 6)) (Con 6) (Local 11));
    Let b2 = M[Offset(Address(GetLocal(6)),6)];
    SetLocal 11 Widen(b2);
    TraceOperation 024996 (Loadb (Var (Local 6)) (Con 2) Sp);
    Let b3 = M[Offset(Address(GetLocal(6)),2)];
    PushStack Widen(b3);
    TraceOperation 025000 (Call (Floc 025686) [Var (Local 10),Var (Local 11),Var Sp] (Local 4));
    PopStack popped4;
    PushFrame 025000;
    SetLocal 1 GetLocal(10);
    SetLocal 2 GetLocal(11);
    SetLocal 3 popped4;
    JumpCall: 025686, #actuals: 3
  }
LocReturn 025000:
  SetLocal 4 call_result;
  TraceOperation 025008 (Jz (Var (Local 4)) (Branch T (Dloc 025028)));
  if (IsZero(GetLocal(4))) {
    Jump: 025028
  } else {
    TraceOperation 025011 (Storew (Var (Global 85)) (Var (Global 81)) (Con 1));
    Let b1 = M[008987];
    Let b2 = M[008988];
    Let b3 = M[008979];
    Let b4 = M[008980];
    SetByte Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4))) 0;
    SetByte Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4))),1) 1;
    TraceOperation 025016 (Storew (Var (Global 85)) (Con 1) (Var (Local 4)));
    Let b5 = M[008987];
    Let b6 = M[008988];
    SetByte Offset(Address(MakeHiLo(b5,b6)),2) HiByte(GetLocal(4));
    SetByte Offset(Offset(Address(MakeHiLo(b5,b6)),2),1) LoByte(GetLocal(4));
    TraceOperation 025021 (Call (Floc 025674) [Var (Local 6)] Sp);
    PushFrame 025021;
    SetLocal 1 GetLocal(6);
    JumpCall: 025674, #actuals: 1
  }
LocReturn 025021:
  PushStack call_result;
  TraceOperation 025027 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 025028:
  TraceOperation 025028 (Je [Var (Local 8),Con 172] (Branch F (Dloc 025055)));
  if (Equal(GetLocal(8),172)) {
    TraceOperation 025032 (Print "That question can't be answered.");
    GamePrint "That question can't be answered.";
    TraceOperation 025053 New_line;
    GamePrint "\n";
    TraceOperation 025054 Rfalse;
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 0
  } else {
    Jump: 025055
  }
LocOp 025055:
  TraceOperation 025055 (Je [Var (Global 111),Var (Global 128)] (Branch T (Dloc 025065)));
  Let b1 = M[009039];
  Let b2 = M[009040];
  Let b3 = M[009073];
  Let b4 = M[009074];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    Jump: 025065
  } else {
    TraceOperation 025059 (Call (Floc 025174) [] Sp);
    PushFrame 025059;
    JumpCall: 025174, #actuals: 0
  }
LocReturn 025059:
  PushStack call_result;
  TraceOperation 025064 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 025065:
  TraceOperation 025065 (Call (Floc 025208) [Var (Local 5),Var (Local 6)] Sp);
  PushFrame 025065;
  SetLocal 1 GetLocal(5);
  SetLocal 2 GetLocal(6);
  JumpCall: 025208, #actuals: 2
LocReturn 025065:
  PushStack call_result;
  TraceOperation 025072 (Print "What do you want to ");
  GamePrint "What do you want to ";
  TraceOperation 025085 (Loadw (Var (Global 99)) (Con 1) (Local 9));
  Let b1 = M[009015];
  Let b2 = M[009016];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),2)];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),2),1)];
  SetLocal 9 MakeHiLo(b3,b4);
  TraceOperation 025089 (Jz (Var (Local 9)) (Branch F (Dloc 025100)));
  if (IsZero(GetLocal(9))) {
    TraceOperation 025092 (Print "tell");
    GamePrint "tell";
    TraceOperation 025097 (Jump 025136);
    Jump: 025136
  } else {
    Jump: 025100
  }
LocOp 025100:
  TraceOperation 025100 (Loadb (Var (Global 98)) (Con 2) Sp);
  Let b1 = M[009013];
  Let b2 = M[009014];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),2)];
  PushStack Widen(b3);
  TraceOperation 025104 (Jz (Var Sp) (Branch F (Dloc 025116)));
  PopStack popped4;
  if (IsZero(popped4)) {
    TraceOperation 025107 (Loadw (Var (Local 9)) (Con 0) Sp);
    Let b5 = M[Offset(Address(GetLocal(9)),0)];
    Let b6 = M[Offset(Offset(Address(GetLocal(9)),0),1)];
    PushStack MakeHiLo(b5,b6);
    TraceOperation 025111 (Print_addr (Var Sp));
    PopStack popped7;
    GamePrint GetText(Address(popped7));
    TraceOperation 025113 (Jump 025136);
    Jump: 025136
  } else {
    Jump: 025116
  }
LocOp 025116:
  TraceOperation 025116 (Loadb (Var (Local 9)) (Con 2) (Local 11));
  Let b1 = M[Offset(Address(GetLocal(9)),2)];
  SetLocal 11 Widen(b1);
  TraceOperation 025120 (Loadb (Var (Local 9)) (Con 3) Sp);
  Let b2 = M[Offset(Address(GetLocal(9)),3)];
  PushStack Widen(b2);
  TraceOperation 025124 (Call (Floc 024538) [Var (Local 11),Var Sp] Sp);
  PopStack popped3;
  PushFrame 025124;
  SetLocal 1 GetLocal(11);
  SetLocal 2 popped3;
  JumpCall: 024538, #actuals: 2
LocReturn 025124:
  PushStack call_result;
  TraceOperation 025131 (Storeb (Var (Global 98)) (Con 2) (Con 0));
  Let b1 = M[009013];
  Let b2 = M[009014];
  SetByte Offset(Address(MakeHiLo(b1,b2)),2) 0;
  Jump: 025136
LocOp 025136:
  TraceOperation 025136 (Jz (Var (Local 6)) (Branch T (Dloc 025146)));
  if (IsZero(GetLocal(6))) {
    Jump: 025146
  } else {
    TraceOperation 025139 (Call (Floc 025300) [Con 6,Con 7] Sp);
    PushFrame 025139;
    SetLocal 1 6;
    SetLocal 2 7;
    JumpCall: 025300, #actuals: 2
  }
LocReturn 025139:
  PushStack call_result;
  Jump: 025146
LocOp 025146:
  TraceOperation 025146 (Store (Con 121) (Con 1));
  SetByte 009027 0;
  SetByte 009028 1;
  TraceOperation 025149 (Jz (Var (Local 5)) (Branch T (Dloc 025159)));
  if (IsZero(GetLocal(5))) {
    Jump: 025159
  } else {
    TraceOperation 025152 (Loadb (Var (Local 5)) (Con 1) Sp);
    Let b1 = M[Offset(Address(GetLocal(5)),1)];
    PushStack Widen(b1);
    TraceOperation 025156 (Jump 025163);
    Jump: 025163
  }
LocOp 025159:
  TraceOperation 025159 (Loadb (Var (Local 6)) (Con 2) Sp);
  Let b1 = M[Offset(Address(GetLocal(6)),2)];
  PushStack Widen(b1);
  Jump: 025163
LocOp 025163:
  TraceOperation 025163 (Call (Floc 025482) [Var Sp] Sp);
  PopStack popped1;
  PushFrame 025163;
  SetLocal 1 popped1;
  JumpCall: 025482, #actuals: 1
LocReturn 025163:
  PushStack call_result;
  TraceOperation 025169 (Print "?");
  GamePrint "?";
  TraceOperation 025172 New_line;
  GamePrint "\n";
  TraceOperation 025173 Rfalse;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 0
--[48]--------------------------------------------------
LocRoutine 025174:
  MakeRoutineFrame 0;
  Jump: 025175
LocOp 025175:
  TraceOperation 025175 (Print "\"I don't understand! What are you referring to?\"");
  GamePrint "\"I don't understand! What are you referring to?\"";
  TraceOperation 025206 New_line;
  GamePrint "\n";
  TraceOperation 025207 Rfalse;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 0
--[49]--------------------------------------------------
LocRoutine 025208:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 -1;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 025215
LocOp 025215:
  TraceOperation 025215 (Storew (Var (Global 82)) (Var (Global 81)) (Con 0));
  Let b1 = M[008981];
  Let b2 = M[008982];
  Let b3 = M[008979];
  Let b4 = M[008980];
  SetByte Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4))) 0;
  SetByte Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4))),1) 0;
  TraceOperation 025220 (Store (Con 130) (Var (Global 100)));
  Let b5 = M[009017];
  Let b6 = M[009018];
  SetByte 009045 b5;
  SetByte 009046 b6;
  Jump: 025223
LocOp 025223:
  TraceOperation 025223 (Inc_chk (Con 3) (Con 9) (Branch F (Dloc 025230)));
  SetLocal 3 Add(GetLocal(3),1);
  if (GreaterThanEqual(GetLocal(3),9)) {
    TraceOperation 025227 (Jump 025242);
    Jump: 025242
  } else {
    Jump: 025230
  }
LocOp 025230:
  TraceOperation 025230 (Loadw (Var (Global 100)) (Var (Local 3)) Sp);
  Let b1 = M[009017];
  Let b2 = M[009018];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,GetLocal(3)))];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,GetLocal(3))),1)];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 025234 (Storew (Var (Global 99)) (Var (Local 3)) (Var Sp));
  Let b5 = M[009015];
  Let b6 = M[009016];
  PopStack popped7;
  SetByte Offset(Address(MakeHiLo(b5,b6)),Mul(2,GetLocal(3))) HiByte(popped7);
  SetByte Offset(Offset(Address(MakeHiLo(b5,b6)),Mul(2,GetLocal(3))),1) LoByte(popped7);
  TraceOperation 025239 (Jump 025223);
  Jump: 025223
LocOp 025242:
  TraceOperation 025242 (Je [Var (Global 97),Con 2] (Branch F (Dloc 025253)));
  Let b1 = M[009011];
  Let b2 = M[009012];
  if (Equal(MakeHiLo(b1,b2),2)) {
    TraceOperation 025246 (Call (Floc 025502) [Con 8,Con 9] Sp);
    PushFrame 025246;
    SetLocal 1 8;
    SetLocal 2 9;
    JumpCall: 025502, #actuals: 2
  } else {
    Jump: 025253
  }
LocReturn 025246:
  PushStack call_result;
  Jump: 025253
LocOp 025253:
  TraceOperation 025253 (Jl (Var (Global 97)) (Con 1) (Branch T (Dloc 025264)));
  Let b1 = M[009011];
  Let b2 = M[009012];
  if (LessThan(MakeHiLo(b1,b2),1)) {
    Jump: 025264
  } else {
    TraceOperation 025257 (Call (Floc 025502) [Con 6,Con 7] Sp);
    PushFrame 025257;
    SetLocal 1 6;
    SetLocal 2 7;
    JumpCall: 025502, #actuals: 2
  }
LocReturn 025257:
  PushStack call_result;
  Jump: 025264
LocOp 025264:
  TraceOperation 025264 (Jz (Var (Local 1)) (Branch T (Dloc 025282)));
  if (IsZero(GetLocal(1))) {
    Jump: 025282
  } else {
    TraceOperation 025267 (Loadb (Var (Local 1)) (Con 1) Sp);
    Let b1 = M[Offset(Address(GetLocal(1)),1)];
    PushStack Widen(b1);
    TraceOperation 025271 (Storew (Var (Global 99)) (Con 2) (Var Sp));
    Let b2 = M[009015];
    Let b3 = M[009016];
    PopStack popped4;
    SetByte Offset(Address(MakeHiLo(b2,b3)),4) HiByte(popped4);
    SetByte Offset(Offset(Address(MakeHiLo(b2,b3)),4),1) LoByte(popped4);
    TraceOperation 025276 (Storew (Var (Global 99)) (Con 6) (Con 1));
    Let b5 = M[009015];
    Let b6 = M[009016];
    SetByte Offset(Address(MakeHiLo(b5,b6)),12) 0;
    SetByte Offset(Offset(Address(MakeHiLo(b5,b6)),12),1) 1;
    TraceOperation 025281 Rtrue;
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 1
  }
LocOp 025282:
  TraceOperation 025282 (Jz (Var (Local 2)) (Branch T Dfalse));
  if (IsZero(GetLocal(2))) {
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 0
  } else {
    TraceOperation 025285 (Loadb (Var (Local 2)) (Con 2) Sp);
    Let b2 = M[Offset(Address(GetLocal(2)),2)];
    PushStack Widen(b2);
    TraceOperation 025289 (Storew (Var (Global 99)) (Con 4) (Var Sp));
    Let b3 = M[009015];
    Let b4 = M[009016];
    PopStack popped5;
    SetByte Offset(Address(MakeHiLo(b3,b4)),8) HiByte(popped5);
    SetByte Offset(Offset(Address(MakeHiLo(b3,b4)),8),1) LoByte(popped5);
    TraceOperation 025294 (Storew (Var (Global 99)) (Con 8) (Con 1));
    Let b6 = M[009015];
    Let b7 = M[009016];
    SetByte Offset(Address(MakeHiLo(b6,b7)),16) 0;
    SetByte Offset(Offset(Address(MakeHiLo(b6,b7)),16),1) 1;
    TraceOperation 025299 Rtrue;
    PopFrame return_address_8;
    JumpReturn: return_address_8, result: 1
  }
--[50]--------------------------------------------------
LocRoutine 025300:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 1;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 025309
LocOp 025309:
  TraceOperation 025309 (Loadw (Var (Global 100)) (Var (Local 1)) (Local 4));
  Let b1 = M[009017];
  Let b2 = M[009018];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,GetLocal(1)))];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,GetLocal(1))),1)];
  SetLocal 4 MakeHiLo(b3,b4);
  TraceOperation 025313 (Loadw (Var (Global 100)) (Var (Local 2)) Sp);
  Let b5 = M[009017];
  Let b6 = M[009018];
  Let b7 = M[Offset(Address(MakeHiLo(b5,b6)),Mul(2,GetLocal(2)))];
  Let b8 = M[Offset(Offset(Address(MakeHiLo(b5,b6)),Mul(2,GetLocal(2))),1)];
  PushStack MakeHiLo(b7,b8);
  TraceOperation 025317 (Call (Floc 025326) [Var (Local 4),Var Sp,Var (Local 3)] Sp);
  PopStack popped9;
  PushFrame 025317;
  SetLocal 1 GetLocal(4);
  SetLocal 2 popped9;
  SetLocal 3 GetLocal(3);
  JumpCall: 025326, #actuals: 3
LocReturn 025317:
  PushStack call_result;
  TraceOperation 025325 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[51]--------------------------------------------------
LocRoutine 025326:
  MakeRoutineFrame 8;
  if (LessThanByte(num_actuals,8)) {
    SetLocal 8 0;
    if (LessThanByte(num_actuals,7)) {
      SetLocal 7 0;
      if (LessThanByte(num_actuals,6)) {
        SetLocal 6 1;
        if (LessThanByte(num_actuals,5)) {
          SetLocal 5 0;
          if (LessThanByte(num_actuals,4)) {
            SetLocal 4 0;
            if (LessThanByte(num_actuals,3)) {
              SetLocal 3 0;
              if (LessThanByte(num_actuals,2)) {
                SetLocal 2 0;
                if (LessThanByte(num_actuals,1)) {
                  SetLocal 1 0;
                }
              }
            }
          }
        }
      }
    }
  }
  Jump: 025343
LocOp 025343:
  TraceOperation 025343 (Je [Var (Local 1),Var (Local 2)] (Branch T Dtrue));
  if (Equal(GetLocal(1),GetLocal(2))) {
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 1
  } else {
    TraceOperation 025347 (Jz (Var (Local 4)) (Branch T (Dloc 025356)));
    if (IsZero(GetLocal(4))) {
      Jump: 025356
    } else {
      TraceOperation 025350 (Store (Con 4) (Con 0));
      SetLocal 4 0;
      TraceOperation 025353 (Jump 025359);
      Jump: 025359
    }
  }
LocOp 025356:
  TraceOperation 025356 (Print " ");
  GamePrint " ";
  Jump: 025359
LocOp 025359:
  TraceOperation 025359 (Loadw (Var (Local 1)) (Con 0) (Local 5));
  Let b1 = M[Offset(Address(GetLocal(1)),0)];
  Let b2 = M[Offset(Offset(Address(GetLocal(1)),0),1)];
  SetLocal 5 MakeHiLo(b1,b2);
  TraceOperation 025363 (Je [Var (Local 5),Con 15151] (Branch F (Dloc 025375)));
  if (Equal(GetLocal(5),15151)) {
    TraceOperation 025369 (Store (Con 4) (Con 1));
    SetLocal 4 1;
    TraceOperation 025372 (Jump 025431);
    Jump: 025431
  } else {
    Jump: 025375
  }
LocOp 025375:
  TraceOperation 025375 (Jz (Var (Local 6)) (Branch T (Dloc 025387)));
  if (IsZero(GetLocal(6))) {
    Jump: 025387
  } else {
    TraceOperation 025378 (Jz (Var (Local 7)) (Branch F (Dloc 025387)));
    if (IsZero(GetLocal(7))) {
      TraceOperation 025381 (Jz (Var (Local 3)) (Branch T (Dloc 025387)));
      if (IsZero(GetLocal(3))) {
        Jump: 025387
      } else {
        TraceOperation 025384 (Print "the ");
        GamePrint "the ";
        Jump: 025387
      }
    } else {
      Jump: 025387
    }
  }
LocOp 025387:
  TraceOperation 025387 (Jz (Var (Global 105)) (Branch F (Dloc 025393)));
  Let b1 = M[009027];
  Let b2 = M[009028];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 025390 (Jz (Var (Global 104)) (Branch T (Dloc 025398)));
    Let b3 = M[009025];
    Let b4 = M[009026];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 025398
    } else {
      Jump: 025393
    }
  } else {
    Jump: 025393
  }
LocOp 025393:
  TraceOperation 025393 (Print_addr (Var (Local 5)));
  GamePrint GetText(Address(GetLocal(5)));
  TraceOperation 025395 (Jump 025428);
  Jump: 025428
LocOp 025398:
  TraceOperation 025398 (Je [Var (Local 5),Con 17356] (Branch F (Dloc 025413)));
  if (Equal(GetLocal(5),17356)) {
    TraceOperation 025404 (Je [Var (Global 106),Var (Global 0)] (Branch F (Dloc 025413)));
    Let b1 = M[009029];
    Let b2 = M[009030];
    Let b3 = M[008817];
    Let b4 = M[008818];
    if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
      TraceOperation 025408 (Print_obj (Var (Global 107)));
      Let b5 = M[009031];
      Let b6 = M[009032];
      Let b7 = M[Offset(Offset(000741,Mul(MakeHiLo(b5,b6),9)),7)];
      Let b8 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b5,b6),9)),7),1)];
      Let b9 = M[Address(MakeHiLo(b7,b8))];
      if (IsZeroByte(b9)) {
        GamePrint "";
        TraceOperation 025410 (Jump 025428);
        Jump: 025428
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b7,b8)),1));
        TraceOperation 025410 (Jump 025428);
        Jump: 025428
      }
    } else {
      Jump: 025413
    }
  } else {
    Jump: 025413
  }
LocOp 025413:
  TraceOperation 025413 (Loadb (Var (Local 1)) (Con 2) (Local 8));
  Let b1 = M[Offset(Address(GetLocal(1)),2)];
  SetLocal 8 Widen(b1);
  TraceOperation 025417 (Loadb (Var (Local 1)) (Con 3) Sp);
  Let b2 = M[Offset(Address(GetLocal(1)),3)];
  PushStack Widen(b2);
  TraceOperation 025421 (Call (Floc 024538) [Var (Local 8),Var Sp] Sp);
  PopStack popped3;
  PushFrame 025421;
  SetLocal 1 GetLocal(8);
  SetLocal 2 popped3;
  JumpCall: 024538, #actuals: 2
LocReturn 025421:
  PushStack call_result;
  Jump: 025428
LocOp 025428:
  TraceOperation 025428 (Store (Con 6) (Con 0));
  SetLocal 6 0;
  Jump: 025431
LocOp 025431:
  TraceOperation 025431 (Add (Var (Local 1)) (Con 4) (Local 1));
  SetLocal 1 Add(GetLocal(1),4);
  TraceOperation 025435 (Jump 025343);
  Jump: 025343
--[52]--------------------------------------------------
LocRoutine 025438:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 025443
LocOp 025443:
  TraceOperation 025443 (Loadb (Var (Local 1)) (Con 3) Sp);
  Let b1 = M[Offset(Address(GetLocal(1)),3)];
  PushStack Widen(b1);
  TraceOperation 025447 (Loadb (Var (Global 109)) (Var Sp) Sp);
  Let b2 = M[009035];
  Let b3 = M[009036];
  PopStack popped4;
  Let b5 = M[Offset(Address(MakeHiLo(b2,b3)),popped4)];
  PushStack Widen(b5);
  TraceOperation 025451 (Sub (Var Sp) (Con 32) Sp);
  PopStack popped6;
  PushStack Sub(popped6,32);
  TraceOperation 025455 (Print_char (Var Sp));
  PopStack popped7;
  GamePrint SingleChar(popped7);
  TraceOperation 025458 (Loadb (Var (Local 1)) (Con 2) Sp);
  Let b8 = M[Offset(Address(GetLocal(1)),2)];
  PushStack Widen(b8);
  TraceOperation 025462 (Sub (Var Sp) (Con 1) (Local 2));
  PopStack popped9;
  SetLocal 2 Sub(popped9,1);
  TraceOperation 025466 (Loadb (Var (Local 1)) (Con 3) Sp);
  Let b10 = M[Offset(Address(GetLocal(1)),3)];
  PushStack Widen(b10);
  TraceOperation 025470 (Add (Var Sp) (Con 1) Sp);
  PopStack popped11;
  PushStack Add(popped11,1);
  TraceOperation 025474 (Call (Floc 024538) [Var (Local 2),Var Sp] Sp);
  PopStack popped12;
  PushFrame 025474;
  SetLocal 1 GetLocal(2);
  SetLocal 2 popped12;
  JumpCall: 024538, #actuals: 2
LocReturn 025474:
  PushStack call_result;
  TraceOperation 025481 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[53]--------------------------------------------------
LocRoutine 025482:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 025487
LocOp 025487:
  TraceOperation 025487 (Jz (Var (Local 1)) (Branch T Dfalse));
  if (IsZero(GetLocal(1))) {
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 0
  } else {
    TraceOperation 025490 (Print " ");
    GamePrint " ";
    TraceOperation 025493 (Call (Floc 025636) [Var (Local 1)] (Local 2));
    PushFrame 025493;
    SetLocal 1 GetLocal(1);
    JumpCall: 025636, #actuals: 1
  }
LocReturn 025493:
  SetLocal 2 call_result;
  TraceOperation 025499 (Print_addr (Var (Local 2)));
  GamePrint GetText(Address(GetLocal(2)));
  TraceOperation 025501 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[54]--------------------------------------------------
LocRoutine 025502:
  MakeRoutineFrame 5;
  if (LessThanByte(num_actuals,5)) {
    SetLocal 5 0;
    if (LessThanByte(num_actuals,4)) {
      SetLocal 4 0;
      if (LessThanByte(num_actuals,3)) {
        SetLocal 3 0;
        if (LessThanByte(num_actuals,2)) {
          SetLocal 2 0;
          if (LessThanByte(num_actuals,1)) {
            SetLocal 1 0;
          }
        }
      }
    }
  }
  Jump: 025513
LocOp 025513:
  TraceOperation 025513 (Loadw (Var (Global 114)) (Var (Local 1)) (Local 4));
  Let b1 = M[009045];
  Let b2 = M[009046];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,GetLocal(1)))];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,GetLocal(1))),1)];
  SetLocal 4 MakeHiLo(b3,b4);
  TraceOperation 025517 (Loadw (Var (Global 114)) (Var (Local 2)) (Local 5));
  Let b5 = M[009045];
  Let b6 = M[009046];
  Let b7 = M[Offset(Address(MakeHiLo(b5,b6)),Mul(2,GetLocal(2)))];
  Let b8 = M[Offset(Offset(Address(MakeHiLo(b5,b6)),Mul(2,GetLocal(2))),1)];
  SetLocal 5 MakeHiLo(b7,b8);
  TraceOperation 025521 (Loadw (Var (Global 82)) (Var (Global 81)) Sp);
  Let b9 = M[008981];
  Let b10 = M[008982];
  Let b11 = M[008979];
  Let b12 = M[008980];
  Let b13 = M[Offset(Address(MakeHiLo(b9,b10)),Mul(2,MakeHiLo(b11,b12)))];
  Let b14 = M[Offset(Offset(Address(MakeHiLo(b9,b10)),Mul(2,MakeHiLo(b11,b12))),1)];
  PushStack MakeHiLo(b13,b14);
  TraceOperation 025525 (Mul (Var Sp) (Con 2) Sp);
  PopStack popped15;
  PushStack Mul(popped15,2);
  TraceOperation 025529 (Add (Var Sp) (Con 2) Sp);
  PopStack popped16;
  PushStack Add(popped16,2);
  TraceOperation 025533 (Add (Var (Global 82)) (Var Sp) Sp);
  Let b17 = M[008981];
  Let b18 = M[008982];
  PopStack popped19;
  PushStack Add(MakeHiLo(b17,b18),popped19);
  TraceOperation 025537 (Storew (Var (Global 99)) (Var (Local 1)) (Var Sp));
  Let b20 = M[009015];
  Let b21 = M[009016];
  PopStack popped22;
  SetByte Offset(Address(MakeHiLo(b20,b21)),Mul(2,GetLocal(1))) HiByte(popped22);
  SetByte Offset(Offset(Address(MakeHiLo(b20,b21)),Mul(2,GetLocal(1))),1) LoByte(popped22);
  Jump: 025542
LocOp 025542:
  TraceOperation 025542 (Je [Var (Local 4),Var (Local 5)] (Branch F (Dloc 025568)));
  if (Equal(GetLocal(4),GetLocal(5))) {
    TraceOperation 025546 (Loadw (Var (Global 82)) (Var (Global 81)) Sp);
    Let b1 = M[008981];
    Let b2 = M[008982];
    Let b3 = M[008979];
    Let b4 = M[008980];
    Let b5 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4)))];
    Let b6 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4))),1)];
    PushStack MakeHiLo(b5,b6);
    TraceOperation 025550 (Mul (Var Sp) (Con 2) Sp);
    PopStack popped7;
    PushStack Mul(popped7,2);
    TraceOperation 025554 (Add (Var Sp) (Con 2) Sp);
    PopStack popped8;
    PushStack Add(popped8,2);
    TraceOperation 025558 (Add (Var (Global 82)) (Var Sp) Sp);
    Let b9 = M[008981];
    Let b10 = M[008982];
    PopStack popped11;
    PushStack Add(MakeHiLo(b9,b10),popped11);
    TraceOperation 025562 (Storew (Var (Global 99)) (Var (Local 2)) (Var Sp));
    Let b12 = M[009015];
    Let b13 = M[009016];
    PopStack popped14;
    SetByte Offset(Address(MakeHiLo(b12,b13)),Mul(2,GetLocal(2))) HiByte(popped14);
    SetByte Offset(Offset(Address(MakeHiLo(b12,b13)),Mul(2,GetLocal(2))),1) LoByte(popped14);
    TraceOperation 025567 Rtrue;
    PopFrame return_address_15;
    JumpReturn: return_address_15, result: 1
  } else {
    Jump: 025568
  }
LocOp 025568:
  TraceOperation 025568 (Jz (Var (Local 3)) (Branch T (Dloc 025585)));
  if (IsZero(GetLocal(3))) {
    Jump: 025585
  } else {
    TraceOperation 025571 (Loadw (Var (Local 4)) (Con 0) Sp);
    Let b1 = M[Offset(Address(GetLocal(4)),0)];
    Let b2 = M[Offset(Offset(Address(GetLocal(4)),0),1)];
    PushStack MakeHiLo(b1,b2);
    TraceOperation 025575 (Je [Var (Global 102),Var Sp] (Branch F (Dloc 025585)));
    Let b3 = M[009021];
    Let b4 = M[009022];
    PopStack popped5;
    if (Equal(MakeHiLo(b3,b4),popped5)) {
      TraceOperation 025579 (Call (Floc 025602) [Var (Local 3)] Sp);
      PushFrame 025579;
      SetLocal 1 GetLocal(3);
      JumpCall: 025602, #actuals: 1
    } else {
      Jump: 025585
    }
  }
LocReturn 025579:
  PushStack call_result;
  Jump: 025585
LocOp 025585:
  TraceOperation 025585 (Loadw (Var (Local 4)) (Con 0) Sp);
  Let b1 = M[Offset(Address(GetLocal(4)),0)];
  Let b2 = M[Offset(Offset(Address(GetLocal(4)),0),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 025589 (Call (Floc 025602) [Var Sp] Sp);
  PopStack popped3;
  PushFrame 025589;
  SetLocal 1 popped3;
  JumpCall: 025602, #actuals: 1
LocReturn 025589:
  PushStack call_result;
  TraceOperation 025595 (Add (Var (Local 4)) (Con 4) (Local 4));
  SetLocal 4 Add(GetLocal(4),4);
  TraceOperation 025599 (Jump 025542);
  Jump: 025542
--[55]--------------------------------------------------
LocRoutine 025602:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 025607
LocOp 025607:
  TraceOperation 025607 (Loadw (Var (Global 82)) (Var (Global 81)) Sp);
  Let b1 = M[008981];
  Let b2 = M[008982];
  Let b3 = M[008979];
  Let b4 = M[008980];
  Let b5 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4)))];
  Let b6 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4))),1)];
  PushStack MakeHiLo(b5,b6);
  TraceOperation 025611 (Add (Var Sp) (Con 2) (Local 2));
  PopStack popped7;
  SetLocal 2 Add(popped7,2);
  TraceOperation 025615 (Sub (Var (Local 2)) (Con 1) Sp);
  PushStack Sub(GetLocal(2),1);
  TraceOperation 025619 (Storew (Var (Global 82)) (Var Sp) (Var (Local 1)));
  Let b8 = M[008981];
  Let b9 = M[008982];
  PopStack popped10;
  SetByte Offset(Address(MakeHiLo(b8,b9)),Mul(2,popped10)) HiByte(GetLocal(1));
  SetByte Offset(Offset(Address(MakeHiLo(b8,b9)),Mul(2,popped10)),1) LoByte(GetLocal(1));
  TraceOperation 025624 (Storew (Var (Global 82)) (Var (Local 2)) (Con 0));
  Let b11 = M[008981];
  Let b12 = M[008982];
  SetByte Offset(Address(MakeHiLo(b11,b12)),Mul(2,GetLocal(2))) 0;
  SetByte Offset(Offset(Address(MakeHiLo(b11,b12)),Mul(2,GetLocal(2))),1) 0;
  TraceOperation 025629 (Storew (Var (Global 82)) (Var (Global 81)) (Var (Local 2)));
  Let b13 = M[008981];
  Let b14 = M[008982];
  Let b15 = M[008979];
  Let b16 = M[008980];
  SetByte Offset(Address(MakeHiLo(b13,b14)),Mul(2,MakeHiLo(b15,b16))) HiByte(GetLocal(2));
  SetByte Offset(Offset(Address(MakeHiLo(b13,b14)),Mul(2,MakeHiLo(b15,b16))),1) LoByte(GetLocal(2));
  TraceOperation 025634 Rtrue;
  PopFrame return_address_17;
  JumpReturn: return_address_17, result: 1
--[56]--------------------------------------------------
LocRoutine 025636:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 025643
LocOp 025643:
  TraceOperation 025643 (Loadw (Var (Global 154)) (Con 0) Sp);
  Let b1 = M[009125];
  Let b2 = M[009126];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),0)];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),0),1)];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 025647 (Mul (Var Sp) (Con 2) (Local 3));
  PopStack popped5;
  SetLocal 3 Mul(popped5,2);
  Jump: 025651
LocOp 025651:
  TraceOperation 025651 (Inc_chk (Con 2) (Var (Local 3)) (Branch T Dfalse));
  SetLocal 2 Add(GetLocal(2),1);
  if (GreaterThanEqual(GetLocal(2),GetLocal(3))) {
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 0
  } else {
    TraceOperation 025655 (Loadw (Var (Global 154)) (Var (Local 2)) Sp);
    Let b2 = M[009125];
    Let b3 = M[009126];
    Let b4 = M[Offset(Address(MakeHiLo(b2,b3)),Mul(2,GetLocal(2)))];
    Let b5 = M[Offset(Offset(Address(MakeHiLo(b2,b3)),Mul(2,GetLocal(2))),1)];
    PushStack MakeHiLo(b4,b5);
    TraceOperation 025659 (Je [Var Sp,Var (Local 1)] (Branch F (Dloc 025651)));
    PopStack popped6;
    if (Equal(popped6,GetLocal(1))) {
      TraceOperation 025664 (Sub (Var (Local 2)) (Con 1) Sp);
      PushStack Sub(GetLocal(2),1);
      TraceOperation 025668 (Loadw (Var (Global 154)) (Var Sp) Sp);
      Let b7 = M[009125];
      Let b8 = M[009126];
      PopStack popped9;
      Let b10 = M[Offset(Address(MakeHiLo(b7,b8)),Mul(2,popped9))];
      Let b11 = M[Offset(Offset(Address(MakeHiLo(b7,b8)),Mul(2,popped9)),1)];
      PushStack MakeHiLo(b10,b11);
      TraceOperation 025672 (Ret (Var Sp));
      PopStack popped12;
      PopFrame return_address_13;
      JumpReturn: return_address_13, result: popped12
    } else {
      Jump: 025651
    }
  }
--[57]--------------------------------------------------
LocRoutine 025674:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 025677
LocOp 025677:
  TraceOperation 025677 (Store (Con 131) (Var (Local 1)));
  SetByte 009047 HiByte(GetLocal(1));
  SetByte 009048 LoByte(GetLocal(1));
  TraceOperation 025680 (Loadb (Var (Local 1)) (Con 7) (Global 120));
  Let b1 = M[Offset(Address(GetLocal(1)),7)];
  SetByte 009057 HiByte(Widen(b1));
  SetByte 009058 LoByte(Widen(b1));
  TraceOperation 025684 (Ret (Var (Global 120)));
  Let b2 = M[009057];
  Let b3 = M[009058];
  PopFrame return_address_4;
  JumpReturn: return_address_4, result: MakeHiLo(b2,b3)
--[58]--------------------------------------------------
LocRoutine 025686:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 025695
LocOp 025695:
  TraceOperation 025695 (Je [Var (Local 1),Con 18] (Branch F (Dloc 025701)));
  if (Equal(GetLocal(1),18)) {
    TraceOperation 025699 (Ret (Con 82));
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 82
  } else {
    Jump: 025701
  }
LocOp 025701:
  TraceOperation 025701 (Store (Con 107) (Var (Local 1)));
  SetByte 008999 HiByte(GetLocal(1));
  SetByte 009000 LoByte(GetLocal(1));
  TraceOperation 025704 (Store (Con 108) (Var (Local 2)));
  SetByte 009001 HiByte(GetLocal(2));
  SetByte 009002 LoByte(GetLocal(2));
  TraceOperation 025707 (Storew (Var (Global 83)) (Var (Global 81)) (Con 0));
  Let b1 = M[008983];
  Let b2 = M[008984];
  Let b3 = M[008979];
  Let b4 = M[008980];
  SetByte Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4))) 0;
  SetByte Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4))),1) 0;
  TraceOperation 025712 (Call (Floc 026306) [Var (Global 83),Con 0] Sp);
  Let b5 = M[008983];
  Let b6 = M[008984];
  PushFrame 025712;
  SetLocal 1 MakeHiLo(b5,b6);
  SetLocal 2 0;
  JumpCall: 026306, #actuals: 2
LocReturn 025712:
  PushStack call_result;
  TraceOperation 025719 (Jz (Var Sp) (Branch T (Dloc 025797)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 025797
  } else {
    TraceOperation 025723 (Store (Con 107) (Con 0));
    SetByte 008999 0;
    SetByte 009000 0;
    TraceOperation 025726 (Loadw (Var (Global 83)) (Var (Global 81)) Sp);
    Let b2 = M[008983];
    Let b3 = M[008984];
    Let b4 = M[008979];
    Let b5 = M[008980];
    Let b6 = M[Offset(Address(MakeHiLo(b2,b3)),Mul(2,MakeHiLo(b4,b5)))];
    Let b7 = M[Offset(Offset(Address(MakeHiLo(b2,b3)),Mul(2,MakeHiLo(b4,b5))),1)];
    PushStack MakeHiLo(b6,b7);
    TraceOperation 025730 (Je [Var Sp,Con 1] (Branch F Dfalse));
    PopStack popped8;
    if (Equal(popped8,1)) {
      TraceOperation 025734 (Loadw (Var (Global 83)) (Con 1) (Local 4));
      Let b9 = M[008983];
      Let b10 = M[008984];
      Let b11 = M[Offset(Address(MakeHiLo(b9,b10)),2)];
      Let b12 = M[Offset(Offset(Address(MakeHiLo(b9,b10)),2),1)];
      SetLocal 4 MakeHiLo(b11,b12);
      TraceOperation 025738 (Je [Var (Local 4),Con 5] (Branch T Dfalse));
      if (Equal(GetLocal(4),5)) {
        PopFrame return_address_13;
        JumpReturn: return_address_13, result: 0
      } else {
        TraceOperation 025742 (Print "(");
        GamePrint "(";
        TraceOperation 025745 (Jz (Var (Local 3)) (Branch T (Dloc 025785)));
        if (IsZero(GetLocal(3))) {
          Jump: 025785
        } else {
          TraceOperation 025748 (Call (Floc 025636) [Var (Local 3)] (Local 3));
          PushFrame 025748;
          SetLocal 1 GetLocal(3);
          JumpCall: 025636, #actuals: 1
        }
      }
    } else {
      PopFrame return_address_14;
      JumpReturn: return_address_14, result: 0
    }
  }
LocReturn 025748:
  SetLocal 3 call_result;
  TraceOperation 025754 (Print_addr (Var (Local 3)));
  GamePrint GetText(Address(GetLocal(3)));
  TraceOperation 025756 (Je [Var (Local 3),Con 18077] (Branch F (Dloc 025765)));
  if (Equal(GetLocal(3),18077)) {
    TraceOperation 025762 (Print " of");
    GamePrint " of";
    Jump: 025765
  } else {
    Jump: 025765
  }
LocOp 025765:
  TraceOperation 025765 (Je [Var (Local 4),Con 1] (Branch F (Dloc 025782)));
  if (Equal(GetLocal(4),1)) {
    TraceOperation 025769 (Print " your hands)");
    GamePrint " your hands)";
    TraceOperation 025778 New_line;
    GamePrint "\n";
    TraceOperation 025779 (Jump 025785);
    Jump: 025785
  } else {
    Jump: 025782
  }
LocOp 025782:
  TraceOperation 025782 (Print " the ");
  GamePrint " the ";
  Jump: 025785
LocOp 025785:
  TraceOperation 025785 (Je [Var (Local 4),Con 1] (Branch T (Dloc 025795)));
  if (Equal(GetLocal(4),1)) {
    Jump: 025795
  } else {
    TraceOperation 025789 (Print_obj (Var (Local 4)));
    Let b1 = M[Offset(Offset(000741,Mul(GetLocal(4),9)),7)];
    Let b2 = M[Offset(Offset(Offset(000741,Mul(GetLocal(4),9)),7),1)];
    Let b3 = M[Address(MakeHiLo(b1,b2))];
    if (IsZeroByte(b3)) {
      GamePrint "";
      TraceOperation 025791 (Print ")");
      GamePrint ")";
      TraceOperation 025794 New_line;
      GamePrint "\n";
      Jump: 025795
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
      TraceOperation 025791 (Print ")");
      GamePrint ")";
      TraceOperation 025794 New_line;
      GamePrint "\n";
      Jump: 025795
    }
  }
LocOp 025795:
  TraceOperation 025795 (Ret (Var (Local 4)));
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: GetLocal(4)
LocOp 025797:
  TraceOperation 025797 (Store (Con 107) (Con 0));
  SetByte 008999 0;
  SetByte 009000 0;
  TraceOperation 025800 Rfalse;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 0
--[59]--------------------------------------------------
LocRoutine 025802:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 025805
LocOp 025805:
  TraceOperation 025805 (Loadw (Var (Global 100)) (Con 6) (Local 1));
  Let b1 = M[009017];
  Let b2 = M[009018];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),12)];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),12),1)];
  SetLocal 1 MakeHiLo(b3,b4);
  TraceOperation 025809 (Jz (Var (Local 1)) (Branch T (Dloc 025844)));
  if (IsZero(GetLocal(1))) {
    Jump: 025844
  } else {
    TraceOperation 025812 (Loadb (Var (Global 115)) (Con 5) (Global 92));
    Let b5 = M[009047];
    Let b6 = M[009048];
    Let b7 = M[Offset(Address(MakeHiLo(b5,b6)),5)];
    SetByte 009001 HiByte(Widen(b7));
    SetByte 009002 LoByte(Widen(b7));
    TraceOperation 025816 (Loadw (Var (Global 100)) (Con 7) Sp);
    Let b8 = M[009017];
    Let b9 = M[009018];
    Let b10 = M[Offset(Address(MakeHiLo(b8,b9)),14)];
    Let b11 = M[Offset(Offset(Address(MakeHiLo(b8,b9)),14),1)];
    PushStack MakeHiLo(b10,b11);
    TraceOperation 025820 (Call (Floc 025978) [Var (Local 1),Var Sp,Var (Global 86)] Sp);
    PopStack popped12;
    Let b13 = M[008989];
    Let b14 = M[008990];
    PushFrame 025820;
    SetLocal 1 GetLocal(1);
    SetLocal 2 popped12;
    SetLocal 3 MakeHiLo(b13,b14);
    JumpCall: 025978, #actuals: 3
  }
LocReturn 025820:
  PushStack call_result;
  TraceOperation 025828 (Jz (Var Sp) (Branch T Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  } else {
    TraceOperation 025831 (Loadw (Var (Global 84)) (Var (Global 81)) Sp);
    Let b3 = M[008985];
    Let b4 = M[008986];
    Let b5 = M[008979];
    Let b6 = M[008980];
    Let b7 = M[Offset(Address(MakeHiLo(b3,b4)),Mul(2,MakeHiLo(b5,b6)))];
    Let b8 = M[Offset(Offset(Address(MakeHiLo(b3,b4)),Mul(2,MakeHiLo(b5,b6))),1)];
    PushStack MakeHiLo(b7,b8);
    TraceOperation 025835 (Jz (Var Sp) (Branch T (Dloc 025844)));
    PopStack popped9;
    if (IsZero(popped9)) {
      Jump: 025844
    } else {
      TraceOperation 025838 (Call (Floc 025900) [Var (Global 86)] (Global 86));
      Let b10 = M[008989];
      Let b11 = M[008990];
      PushFrame 025838;
      SetLocal 1 MakeHiLo(b10,b11);
      JumpCall: 025900, #actuals: 1
    }
  }
LocReturn 025838:
  SetByte 008989 HiByte(call_result);
  SetByte 008990 LoByte(call_result);
  Jump: 025844
LocOp 025844:
  TraceOperation 025844 (Loadw (Var (Global 100)) (Con 8) (Local 1));
  Let b1 = M[009017];
  Let b2 = M[009018];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),16)];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),16),1)];
  SetLocal 1 MakeHiLo(b3,b4);
  TraceOperation 025848 (Jz (Var (Local 1)) (Branch T Dtrue));
  if (IsZero(GetLocal(1))) {
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  } else {
    TraceOperation 025851 (Loadb (Var (Global 115)) (Con 6) (Global 92));
    Let b6 = M[009047];
    Let b7 = M[009048];
    Let b8 = M[Offset(Address(MakeHiLo(b6,b7)),6)];
    SetByte 009001 HiByte(Widen(b8));
    SetByte 009002 LoByte(Widen(b8));
    TraceOperation 025855 (Loadw (Var (Global 100)) (Con 9) Sp);
    Let b9 = M[009017];
    Let b10 = M[009018];
    Let b11 = M[Offset(Address(MakeHiLo(b9,b10)),18)];
    Let b12 = M[Offset(Offset(Address(MakeHiLo(b9,b10)),18),1)];
    PushStack MakeHiLo(b11,b12);
    TraceOperation 025859 (Call (Floc 025978) [Var (Local 1),Var Sp,Var (Global 85)] Sp);
    PopStack popped13;
    Let b14 = M[008987];
    Let b15 = M[008988];
    PushFrame 025859;
    SetLocal 1 GetLocal(1);
    SetLocal 2 popped13;
    SetLocal 3 MakeHiLo(b14,b15);
    JumpCall: 025978, #actuals: 3
  }
LocReturn 025859:
  PushStack call_result;
  TraceOperation 025867 (Jz (Var Sp) (Branch T Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  } else {
    TraceOperation 025870 (Loadw (Var (Global 84)) (Var (Global 81)) Sp);
    Let b3 = M[008985];
    Let b4 = M[008986];
    Let b5 = M[008979];
    Let b6 = M[008980];
    Let b7 = M[Offset(Address(MakeHiLo(b3,b4)),Mul(2,MakeHiLo(b5,b6)))];
    Let b8 = M[Offset(Offset(Address(MakeHiLo(b3,b4)),Mul(2,MakeHiLo(b5,b6))),1)];
    PushStack MakeHiLo(b7,b8);
    TraceOperation 025874 (Jz (Var Sp) (Branch T Dtrue));
    PopStack popped9;
    if (IsZero(popped9)) {
      PopFrame return_address_10;
      JumpReturn: return_address_10, result: 1
    } else {
      TraceOperation 025877 (Loadw (Var (Global 85)) (Var (Global 81)) Sp);
      Let b11 = M[008987];
      Let b12 = M[008988];
      Let b13 = M[008979];
      Let b14 = M[008980];
      Let b15 = M[Offset(Address(MakeHiLo(b11,b12)),Mul(2,MakeHiLo(b13,b14)))];
      Let b16 = M[Offset(Offset(Address(MakeHiLo(b11,b12)),Mul(2,MakeHiLo(b13,b14))),1)];
      PushStack MakeHiLo(b15,b16);
      TraceOperation 025881 (Je [Var Sp,Con 1] (Branch F (Dloc 025892)));
      PopStack popped17;
      if (Equal(popped17,1)) {
        TraceOperation 025885 (Call (Floc 025900) [Var (Global 86)] (Global 86));
        Let b18 = M[008989];
        Let b19 = M[008990];
        PushFrame 025885;
        SetLocal 1 MakeHiLo(b18,b19);
        JumpCall: 025900, #actuals: 1
      } else {
        Jump: 025892
      }
    }
  }
LocReturn 025885:
  SetByte 008989 HiByte(call_result);
  SetByte 008990 LoByte(call_result);
  TraceOperation 025891 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 025892:
  TraceOperation 025892 (Call (Floc 025900) [Var (Global 85)] (Global 85));
  Let b1 = M[008987];
  Let b2 = M[008988];
  PushFrame 025892;
  SetLocal 1 MakeHiLo(b1,b2);
  JumpCall: 025900, #actuals: 1
LocReturn 025892:
  SetByte 008987 HiByte(call_result);
  SetByte 008988 LoByte(call_result);
  TraceOperation 025898 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[60]--------------------------------------------------
LocRoutine 025900:
  MakeRoutineFrame 7;
  if (LessThanByte(num_actuals,7)) {
    SetLocal 7 0;
    if (LessThanByte(num_actuals,6)) {
      SetLocal 6 0;
      if (LessThanByte(num_actuals,5)) {
        SetLocal 5 0;
        if (LessThanByte(num_actuals,4)) {
          SetLocal 4 1;
          if (LessThanByte(num_actuals,3)) {
            SetLocal 3 0;
            if (LessThanByte(num_actuals,2)) {
              SetLocal 2 0;
              if (LessThanByte(num_actuals,1)) {
                SetLocal 1 0;
              }
            }
          }
        }
      }
    }
  }
  Jump: 025915
LocOp 025915:
  TraceOperation 025915 (Loadw (Var (Local 1)) (Var (Global 81)) (Local 2));
  Let b1 = M[008979];
  Let b2 = M[008980];
  Let b3 = M[Offset(Address(GetLocal(1)),Mul(2,MakeHiLo(b1,b2)))];
  Let b4 = M[Offset(Offset(Address(GetLocal(1)),Mul(2,MakeHiLo(b1,b2))),1)];
  SetLocal 2 MakeHiLo(b3,b4);
  TraceOperation 025919 (Storew (Var (Global 83)) (Var (Global 81)) (Con 0));
  Let b5 = M[008983];
  Let b6 = M[008984];
  Let b7 = M[008979];
  Let b8 = M[008980];
  SetByte Offset(Address(MakeHiLo(b5,b6)),Mul(2,MakeHiLo(b7,b8))) 0;
  SetByte Offset(Offset(Address(MakeHiLo(b5,b6)),Mul(2,MakeHiLo(b7,b8))),1) 0;
  Jump: 025924
LocOp 025924:
  TraceOperation 025924 (Dec_chk (Con 2) (Con 0) (Branch F (Dloc 025931)));
  if (LessThanEqual(GetLocal(2),0)) {
    SetLocal 2 Sub(GetLocal(2),1);
    TraceOperation 025928 (Jump 025964);
    Jump: 025964
  } else {
    SetLocal 2 Sub(GetLocal(2),1);
    Jump: 025931
  }
LocOp 025931:
  TraceOperation 025931 (Loadw (Var (Local 1)) (Var (Local 4)) (Local 6));
  Let b1 = M[Offset(Address(GetLocal(1)),Mul(2,GetLocal(4)))];
  Let b2 = M[Offset(Offset(Address(GetLocal(1)),Mul(2,GetLocal(4))),1)];
  SetLocal 6 MakeHiLo(b1,b2);
  TraceOperation 025935 (Call (Floc 027682) [Var (Local 6),Var (Global 84)] Sp);
  Let b3 = M[008985];
  Let b4 = M[008986];
  PushFrame 025935;
  SetLocal 1 GetLocal(6);
  SetLocal 2 MakeHiLo(b3,b4);
  JumpCall: 027682, #actuals: 2
LocReturn 025935:
  PushStack call_result;
  TraceOperation 025942 (Jz (Var Sp) (Branch T (Dloc 025948)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 025948
  } else {
    TraceOperation 025945 (Jump 025959);
    Jump: 025959
  }
LocOp 025948:
  TraceOperation 025948 (Add (Var (Local 5)) (Con 1) Sp);
  PushStack Add(GetLocal(5),1);
  TraceOperation 025952 (Storew (Var (Global 83)) (Var Sp) (Var (Local 6)));
  Let b1 = M[008983];
  Let b2 = M[008984];
  PopStack popped3;
  SetByte Offset(Address(MakeHiLo(b1,b2)),Mul(2,popped3)) HiByte(GetLocal(6));
  SetByte Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,popped3)),1) LoByte(GetLocal(6));
  TraceOperation 025957 (Inc (Con 5));
  SetLocal 5 Add(GetLocal(5),1);
  Jump: 025959
LocOp 025959:
  TraceOperation 025959 (Inc (Con 4));
  SetLocal 4 Add(GetLocal(4),1);
  TraceOperation 025961 (Jump 025924);
  Jump: 025924
LocOp 025964:
  TraceOperation 025964 (Storew (Var (Global 83)) (Var (Global 81)) (Var (Local 5)));
  Let b1 = M[008983];
  Let b2 = M[008984];
  Let b3 = M[008979];
  Let b4 = M[008980];
  SetByte Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4))) HiByte(GetLocal(5));
  SetByte Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4))),1) LoByte(GetLocal(5));
  TraceOperation 025969 (Store (Con 7) (Var (Global 83)));
  Let b5 = M[008983];
  Let b6 = M[008984];
  SetLocal 7 MakeHiLo(b5,b6);
  TraceOperation 025972 (Store (Con 99) (Var (Local 1)));
  SetByte 008983 HiByte(GetLocal(1));
  SetByte 008984 LoByte(GetLocal(1));
  TraceOperation 025975 (Ret (Var (Local 7)));
  PopFrame return_address_7;
  JumpReturn: return_address_7, result: GetLocal(7)
--[61]--------------------------------------------------
LocRoutine 025978:
  MakeRoutineFrame 8;
  if (LessThanByte(num_actuals,8)) {
    SetLocal 8 0;
    if (LessThanByte(num_actuals,7)) {
      SetLocal 7 0;
      if (LessThanByte(num_actuals,6)) {
        SetLocal 6 0;
        if (LessThanByte(num_actuals,5)) {
          SetLocal 5 0;
          if (LessThanByte(num_actuals,4)) {
            SetLocal 4 0;
            if (LessThanByte(num_actuals,3)) {
              SetLocal 3 0;
              if (LessThanByte(num_actuals,2)) {
                SetLocal 2 0;
                if (LessThanByte(num_actuals,1)) {
                  SetLocal 1 0;
                }
              }
            }
          }
        }
      }
    }
  }
  Jump: 025995
LocOp 025995:
  TraceOperation 025995 (Store (Con 96) (Con 0));
  SetByte 008977 0;
  SetByte 008978 0;
  TraceOperation 025998 (Store (Con 95) (Var (Local 1)));
  SetByte 008975 HiByte(GetLocal(1));
  SetByte 008976 LoByte(GetLocal(1));
  TraceOperation 026001 (Store (Con 94) (Var (Local 2)));
  SetByte 008973 HiByte(GetLocal(2));
  SetByte 008974 LoByte(GetLocal(2));
  TraceOperation 026004 (Store (Con 93) (Con 0));
  SetByte 008971 0;
  SetByte 008972 0;
  TraceOperation 026007 (Storew (Var (Global 84)) (Var (Global 81)) (Con 0));
  Let b1 = M[008985];
  Let b2 = M[008986];
  Let b3 = M[008979];
  Let b4 = M[008980];
  SetByte Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4))) 0;
  SetByte Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4))),1) 0;
  TraceOperation 026012 (Storew (Var (Local 3)) (Var (Global 81)) (Con 0));
  Let b5 = M[008979];
  Let b6 = M[008980];
  SetByte Offset(Address(GetLocal(3)),Mul(2,MakeHiLo(b5,b6))) 0;
  SetByte Offset(Offset(Address(GetLocal(3)),Mul(2,MakeHiLo(b5,b6))),1) 0;
  TraceOperation 026017 (Loadw (Var (Local 1)) (Con 0) (Local 7));
  Let b7 = M[Offset(Address(GetLocal(1)),0)];
  Let b8 = M[Offset(Offset(Address(GetLocal(1)),0),1)];
  SetLocal 7 MakeHiLo(b7,b8);
  Jump: 026021
LocOp 026021:
  TraceOperation 026021 (Je [Var (Local 1),Var (Local 2)] (Branch F (Dloc 026045)));
  if (Equal(GetLocal(1),GetLocal(2))) {
    TraceOperation 026025 (Jz (Var (Local 4)) (Branch T (Dloc 026034)));
    if (IsZero(GetLocal(4))) {
      Jump: 026034
    } else {
      TraceOperation 026028 (Push (Var (Local 4)));
      PushStack GetLocal(4);
      TraceOperation 026031 (Jump 026037);
      Jump: 026037
    }
  } else {
    Jump: 026045
  }
LocOp 026034:
  TraceOperation 026034 (Push (Var (Local 3)));
  PushStack GetLocal(3);
  Jump: 026037
LocOp 026037:
  TraceOperation 026037 (Call (Floc 026306) [Var Sp] Sp);
  PopStack popped1;
  PushFrame 026037;
  SetLocal 1 popped1;
  JumpCall: 026306, #actuals: 1
LocReturn 026037:
  PushStack call_result;
  TraceOperation 026043 (Ret (Var Sp));
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 026045:
  TraceOperation 026045 (Loadw (Var (Local 1)) (Con 2) (Local 8));
  Let b1 = M[Offset(Address(GetLocal(1)),4)];
  Let b2 = M[Offset(Offset(Address(GetLocal(1)),4),1)];
  SetLocal 8 MakeHiLo(b1,b2);
  TraceOperation 026049 (Je [Var (Local 7),Con 15228] (Branch F (Dloc 026072)));
  if (Equal(GetLocal(7),15228)) {
    TraceOperation 026055 (Store (Con 96) (Con 1));
    SetByte 008977 0;
    SetByte 008978 1;
    TraceOperation 026058 (Je [Var (Local 8),Con 18000] (Branch F (Dloc 026291)));
    if (Equal(GetLocal(8),18000)) {
      TraceOperation 026065 (Add (Var (Local 1)) (Con 4) (Local 1));
      SetLocal 1 Add(GetLocal(1),4);
      TraceOperation 026069 (Jump 026291);
      Jump: 026291
    } else {
      Jump: 026291
    }
  } else {
    Jump: 026072
  }
LocOp 026072:
  TraceOperation 026072 (Je [Var (Local 7),Con 15767,Con 16481] (Branch F (Dloc 026112)));
  if (LogOr(Equal(GetLocal(7),15767),Equal(GetLocal(7),16481))) {
    TraceOperation 026080 (Jz (Var (Local 4)) (Branch T (Dloc 026089)));
    if (IsZero(GetLocal(4))) {
      Jump: 026089
    } else {
      TraceOperation 026083 (Push (Var (Local 4)));
      PushStack GetLocal(4);
      TraceOperation 026086 (Jump 026092);
      Jump: 026092
    }
  } else {
    Jump: 026112
  }
LocOp 026089:
  TraceOperation 026089 (Push (Var (Local 3)));
  PushStack GetLocal(3);
  Jump: 026092
LocOp 026092:
  TraceOperation 026092 (Call (Floc 026306) [Var Sp] Sp);
  PopStack popped1;
  PushFrame 026092;
  SetLocal 1 popped1;
  JumpCall: 026306, #actuals: 1
LocReturn 026092:
  PushStack call_result;
  TraceOperation 026098 (Jz (Var Sp) (Branch T Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  } else {
    TraceOperation 026101 (Store (Con 4) (Var (Global 84)));
    Let b3 = M[008985];
    Let b4 = M[008986];
    SetLocal 4 MakeHiLo(b3,b4);
    TraceOperation 026104 (Storew (Var (Local 4)) (Var (Global 81)) (Con 0));
    Let b5 = M[008979];
    Let b6 = M[008980];
    SetByte Offset(Address(GetLocal(4)),Mul(2,MakeHiLo(b5,b6))) 0;
    SetByte Offset(Offset(Address(GetLocal(4)),Mul(2,MakeHiLo(b5,b6))),1) 0;
    TraceOperation 026109 (Jump 026291);
    Jump: 026291
  }
LocOp 026112:
  TraceOperation 026112 (Je [Var (Local 7),Con 15172,Con 18042] (Branch F (Dloc 026170)));
  if (LogOr(Equal(GetLocal(7),15172),Equal(GetLocal(7),18042))) {
    TraceOperation 026120 (Jz (Var (Global 89)) (Branch F (Dloc 026140)));
    Let b1 = M[008995];
    Let b2 = M[008996];
    if (IsZero(MakeHiLo(b1,b2))) {
      TraceOperation 026123 (Store (Con 96) (Con 2));
      SetByte 008977 0;
      SetByte 008978 2;
      TraceOperation 026126 (Je [Var (Local 8),Con 18000] (Branch F (Dloc 026291)));
      if (Equal(GetLocal(8),18000)) {
        TraceOperation 026133 (Add (Var (Local 1)) (Con 4) (Local 1));
        SetLocal 1 Add(GetLocal(1),4);
        TraceOperation 026137 (Jump 026291);
        Jump: 026291
      } else {
        Jump: 026291
      }
    } else {
      Jump: 026140
    }
  } else {
    Jump: 026170
  }
LocOp 026140:
  TraceOperation 026140 (Store (Con 106) (Var (Global 116)));
  Let b1 = M[009049];
  Let b2 = M[009050];
  SetByte 008997 b1;
  SetByte 008998 b2;
  TraceOperation 026143 (Jz (Var (Local 4)) (Branch T (Dloc 026152)));
  if (IsZero(GetLocal(4))) {
    Jump: 026152
  } else {
    TraceOperation 026146 (Push (Var (Local 4)));
    PushStack GetLocal(4);
    TraceOperation 026149 (Jump 026155);
    Jump: 026155
  }
LocOp 026152:
  TraceOperation 026152 (Push (Var (Local 3)));
  PushStack GetLocal(3);
  Jump: 026155
LocOp 026155:
  TraceOperation 026155 (Call (Floc 026306) [Var Sp] Sp);
  PopStack popped1;
  PushFrame 026155;
  SetLocal 1 popped1;
  JumpCall: 026306, #actuals: 1
LocReturn 026155:
  PushStack call_result;
  TraceOperation 026161 (Jz (Var Sp) (Branch T Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  } else {
    TraceOperation 026164 (Jz (Var (Local 8)) (Branch T Dtrue));
    if (IsZero(GetLocal(8))) {
      PopFrame return_address_3;
      JumpReturn: return_address_3, result: 1
    } else {
      TraceOperation 026167 (Jump 026291);
      Jump: 026291
    }
  }
LocOp 026170:
  TraceOperation 026170 (Je [Var (Local 7),Con 15256,Con 15158] (Branch F (Dloc 026212)));
  if (LogOr(Equal(GetLocal(7),15256),Equal(GetLocal(7),15158))) {
    TraceOperation 026178 (Je [Var (Local 8),Con 15256,Con 15158] (Branch T (Dloc 026212)));
    if (LogOr(Equal(GetLocal(8),15256),Equal(GetLocal(8),15158))) {
      Jump: 026212
    } else {
      TraceOperation 026186 (Store (Con 93) (Con 1));
      SetByte 008971 0;
      SetByte 008972 1;
      TraceOperation 026189 (Jz (Var (Local 4)) (Branch T (Dloc 026198)));
      if (IsZero(GetLocal(4))) {
        Jump: 026198
      } else {
        TraceOperation 026192 (Push (Var (Local 4)));
        PushStack GetLocal(4);
        TraceOperation 026195 (Jump 026201);
        Jump: 026201
      }
    }
  } else {
    Jump: 026212
  }
LocOp 026198:
  TraceOperation 026198 (Push (Var (Local 3)));
  PushStack GetLocal(3);
  Jump: 026201
LocOp 026201:
  TraceOperation 026201 (Call (Floc 026306) [Var Sp] Sp);
  PopStack popped1;
  PushFrame 026201;
  SetLocal 1 popped1;
  JumpCall: 026306, #actuals: 1
LocReturn 026201:
  PushStack call_result;
  TraceOperation 026207 (Jz (Var Sp) (Branch F (Dloc 026291)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 026211 Rfalse;
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  } else {
    Jump: 026291
  }
LocOp 026212:
  TraceOperation 026212 (Call (Floc 023466) [Var (Local 7),Con 4] Sp);
  PushFrame 026212;
  SetLocal 1 GetLocal(7);
  SetLocal 2 4;
  JumpCall: 023466, #actuals: 2
LocReturn 026212:
  PushStack call_result;
  TraceOperation 026219 (Jz (Var Sp) (Branch T (Dloc 026225)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 026225
  } else {
    TraceOperation 026222 (Jump 026291);
    Jump: 026291
  }
LocOp 026225:
  TraceOperation 026225 (Je [Var (Local 7),Con 15256,Con 15158] (Branch F (Dloc 026236)));
  if (LogOr(Equal(GetLocal(7),15256),Equal(GetLocal(7),15158))) {
    TraceOperation 026233 (Jump 026291);
    Jump: 026291
  } else {
    Jump: 026236
  }
LocOp 026236:
  TraceOperation 026236 (Je [Var (Local 7),Con 18000] (Branch F (Dloc 026251)));
  if (Equal(GetLocal(7),18000)) {
    TraceOperation 026242 (Jz (Var (Global 80)) (Branch F (Dloc 026291)));
    Let b1 = M[008977];
    Let b2 = M[008978];
    if (IsZero(MakeHiLo(b1,b2))) {
      TraceOperation 026245 (Store (Con 96) (Con 4));
      SetByte 008977 0;
      SetByte 008978 4;
      TraceOperation 026248 (Jump 026291);
      Jump: 026291
    } else {
      Jump: 026291
    }
  } else {
    Jump: 026251
  }
LocOp 026251:
  TraceOperation 026251 (Call (Floc 023466) [Var (Local 7),Con 32,Con 2] (Local 6));
  PushFrame 026251;
  SetLocal 1 GetLocal(7);
  SetLocal 2 32;
  SetLocal 3 2;
  JumpCall: 023466, #actuals: 3
LocReturn 026251:
  SetLocal 6 call_result;
  TraceOperation 026259 (Jz (Var (Local 6)) (Branch T (Dloc 026274)));
  if (IsZero(GetLocal(6))) {
    Jump: 026274
  } else {
    TraceOperation 026262 (Jz (Var (Global 89)) (Branch F (Dloc 026274)));
    Let b1 = M[008995];
    Let b2 = M[008996];
    if (IsZero(MakeHiLo(b1,b2))) {
      TraceOperation 026265 (Store (Con 105) (Var (Local 6)));
      SetByte 008995 HiByte(GetLocal(6));
      SetByte 008996 LoByte(GetLocal(6));
      TraceOperation 026268 (Store (Con 103) (Var (Local 7)));
      SetByte 008991 HiByte(GetLocal(7));
      SetByte 008992 LoByte(GetLocal(7));
      TraceOperation 026271 (Jump 026291);
      Jump: 026291
    } else {
      Jump: 026274
    }
  }
LocOp 026274:
  TraceOperation 026274 (Call (Floc 023466) [Var (Local 7),Con 128,Con 0] Sp);
  PushFrame 026274;
  SetLocal 1 GetLocal(7);
  SetLocal 2 128;
  SetLocal 3 0;
  JumpCall: 023466, #actuals: 3
LocReturn 026274:
  PushStack call_result;
  TraceOperation 026282 (Jz (Var Sp) (Branch T (Dloc 026291)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 026291
  } else {
    TraceOperation 026285 (Store (Con 106) (Var (Local 7)));
    SetByte 008997 HiByte(GetLocal(7));
    SetByte 008998 LoByte(GetLocal(7));
    TraceOperation 026288 (Store (Con 132) (Var (Local 7)));
    SetByte 009049 HiByte(GetLocal(7));
    SetByte 009050 LoByte(GetLocal(7));
    Jump: 026291
  }
LocOp 026291:
  TraceOperation 026291 (Je [Var (Local 1),Var (Local 2)] (Branch T (Dloc 026021)));
  if (Equal(GetLocal(1),GetLocal(2))) {
    Jump: 026021
  } else {
    TraceOperation 026296 (Add (Var (Local 1)) (Con 4) (Local 1));
    SetLocal 1 Add(GetLocal(1),4);
    TraceOperation 026300 (Store (Con 7) (Var (Local 8)));
    SetLocal 7 GetLocal(8);
    TraceOperation 026303 (Jump 026021);
    Jump: 026021
  }
--[62]--------------------------------------------------
LocRoutine 026306:
  MakeRoutineFrame 9;
  if (LessThanByte(num_actuals,9)) {
    SetLocal 9 0;
    if (LessThanByte(num_actuals,8)) {
      SetLocal 8 0;
      if (LessThanByte(num_actuals,7)) {
        SetLocal 7 0;
        if (LessThanByte(num_actuals,6)) {
          SetLocal 6 0;
          if (LessThanByte(num_actuals,5)) {
            SetLocal 5 0;
            if (LessThanByte(num_actuals,4)) {
              SetLocal 4 0;
              if (LessThanByte(num_actuals,3)) {
                SetLocal 3 0;
                if (LessThanByte(num_actuals,2)) {
                  SetLocal 2 1;
                  if (LessThanByte(num_actuals,1)) {
                    SetLocal 1 0;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  Jump: 026325
LocOp 026325:
  TraceOperation 026325 (Store (Con 5) (Var (Global 92)));
  Let b1 = M[009001];
  Let b2 = M[009002];
  SetLocal 5 MakeHiLo(b1,b2);
  TraceOperation 026328 (Loadw (Var (Local 1)) (Var (Global 81)) (Local 6));
  Let b3 = M[008979];
  Let b4 = M[008980];
  Let b5 = M[Offset(Address(GetLocal(1)),Mul(2,MakeHiLo(b3,b4)))];
  Let b6 = M[Offset(Offset(Address(GetLocal(1)),Mul(2,MakeHiLo(b3,b4))),1)];
  SetLocal 6 MakeHiLo(b5,b6);
  TraceOperation 026332 (Test (Var (Global 80)) (Con 4) (Branch T Dtrue));
  Let b7 = M[008977];
  Let b8 = M[008978];
  if (Equal(And(MakeHiLo(b7,b8),4),4)) {
    PopFrame return_address_9;
    JumpReturn: return_address_9, result: 1
  } else {
    TraceOperation 026336 (Jz (Var (Global 90)) (Branch F (Dloc 026359)));
    Let b10 = M[008997];
    Let b11 = M[008998];
    if (IsZero(MakeHiLo(b10,b11))) {
      TraceOperation 026339 (Jz (Var (Global 89)) (Branch T (Dloc 026359)));
      Let b12 = M[008995];
      Let b13 = M[008996];
      if (IsZero(MakeHiLo(b12,b13))) {
        Jump: 026359
      } else {
        TraceOperation 026342 (Call (Floc 023466) [Var (Global 87),Con 128,Con 0] Sp);
        Let b14 = M[008991];
        Let b15 = M[008992];
        PushFrame 026342;
        SetLocal 1 MakeHiLo(b14,b15);
        SetLocal 2 128;
        SetLocal 3 0;
        JumpCall: 023466, #actuals: 3
      }
    } else {
      Jump: 026359
    }
  }
LocReturn 026342:
  PushStack call_result;
  TraceOperation 026350 (Jz (Var Sp) (Branch T (Dloc 026359)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 026359
  } else {
    TraceOperation 026353 (Store (Con 106) (Var (Global 87)));
    Let b2 = M[008991];
    Let b3 = M[008992];
    SetByte 008997 b2;
    SetByte 008998 b3;
    TraceOperation 026356 (Store (Con 105) (Con 0));
    SetByte 008995 0;
    SetByte 008996 0;
    Jump: 026359
  }
LocOp 026359:
  TraceOperation 026359 (Jz (Var (Global 90)) (Branch F (Dloc 026404)));
  Let b1 = M[008997];
  Let b2 = M[008998];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 026362 (Jz (Var (Global 89)) (Branch F (Dloc 026404)));
    Let b3 = M[008995];
    Let b4 = M[008996];
    if (IsZero(MakeHiLo(b3,b4))) {
      TraceOperation 026365 (Je [Var (Global 80),Con 1] (Branch T (Dloc 026404)));
      Let b5 = M[008977];
      Let b6 = M[008978];
      if (Equal(MakeHiLo(b5,b6),1)) {
        Jump: 026404
      } else {
        TraceOperation 026369 (Jz (Var (Global 91)) (Branch F (Dloc 026404)));
        Let b7 = M[008999];
        Let b8 = M[009000];
        if (IsZero(MakeHiLo(b7,b8))) {
          TraceOperation 026372 (Jz (Var (Local 2)) (Branch T Dfalse));
          if (IsZero(GetLocal(2))) {
            PopFrame return_address_9;
            JumpReturn: return_address_9, result: 0
          } else {
            TraceOperation 026375 (Print "There seems to be a noun missing in that sentence!");
            GamePrint "There seems to be a noun missing in that sentence!";
            TraceOperation 026402 New_line;
            GamePrint "\n";
            TraceOperation 026403 Rfalse;
            PopFrame return_address_10;
            JumpReturn: return_address_10, result: 0
          }
        } else {
          Jump: 026404
        }
      }
    } else {
      Jump: 026404
    }
  } else {
    Jump: 026404
  }
LocOp 026404:
  TraceOperation 026404 (Je [Var (Global 80),Con 1] (Branch F (Dloc 026411)));
  Let b1 = M[008977];
  Let b2 = M[008978];
  if (Equal(MakeHiLo(b1,b2),1)) {
    TraceOperation 026408 (Jz (Var (Global 92)) (Branch F (Dloc 026416)));
    Let b3 = M[009001];
    Let b4 = M[009002];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 026411
    } else {
      Jump: 026416
    }
  } else {
    Jump: 026411
  }
LocOp 026411:
  TraceOperation 026411 (Store (Con 108) (Con -1));
  SetByte 009001 255;
  SetByte 009002 255;
  Jump: 026416
LocOp 026416:
  TraceOperation 026416 (Store (Con 133) (Var (Local 1)));
  SetByte 009051 HiByte(GetLocal(1));
  SetByte 009052 LoByte(GetLocal(1));
  Jump: 026419
LocOp 026419:
  TraceOperation 026419 (Jz (Var (Local 7)) (Branch T (Dloc 026431)));
  if (IsZero(GetLocal(7))) {
    Jump: 026431
  } else {
    TraceOperation 026422 (Call (Floc 026960) [Var (Local 1)] Sp);
    PushFrame 026422;
    SetLocal 1 GetLocal(1);
    JumpCall: 026960, #actuals: 1
  }
LocReturn 026422:
  PushStack call_result;
  TraceOperation 026428 (Jump 026456);
  Jump: 026456
LocOp 026431:
  TraceOperation 026431 (Jz (Var (Global 66)) (Branch T (Dloc 026448)));
  Let b1 = M[008949];
  Let b2 = M[008950];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 026448
  } else {
    TraceOperation 026434 (Clear_attr (Var (Global 128)) (Con 12));
    Let b3 = M[009073];
    Let b4 = M[009074];
    Let b5 = M[Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),1)];
    SetByte Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),1) ClearBit(b5,3);
    TraceOperation 026437 (Call (Floc 027166) [Var (Global 0),Con 16,Con 32] Sp);
    Let b6 = M[008817];
    Let b7 = M[008818];
    PushFrame 026437;
    SetLocal 1 MakeHiLo(b6,b7);
    SetLocal 2 16;
    SetLocal 3 32;
    JumpCall: 027166, #actuals: 3
  }
LocReturn 026437:
  PushStack call_result;
  TraceOperation 026445 (Set_attr (Var (Global 128)) (Con 12));
  Let b1 = M[009073];
  Let b2 = M[009074];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),1)];
  SetByte Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),1) SetBit(b3,3);
  Jump: 026448
LocOp 026448:
  TraceOperation 026448 (Call (Floc 027166) [Var (Global 128),Con 128,Con 64] Sp);
  Let b1 = M[009073];
  Let b2 = M[009074];
  PushFrame 026448;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 128;
  SetLocal 3 64;
  JumpCall: 027166, #actuals: 3
LocReturn 026448:
  PushStack call_result;
  Jump: 026456
LocOp 026456:
  TraceOperation 026456 (Loadw (Var (Local 1)) (Var (Global 81)) Sp);
  Let b1 = M[008979];
  Let b2 = M[008980];
  Let b3 = M[Offset(Address(GetLocal(1)),Mul(2,MakeHiLo(b1,b2)))];
  Let b4 = M[Offset(Offset(Address(GetLocal(1)),Mul(2,MakeHiLo(b1,b2))),1)];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 026460 (Sub (Var Sp) (Var (Local 6)) (Local 4));
  PopStack popped5;
  SetLocal 4 Sub(popped5,GetLocal(6));
  TraceOperation 026464 (Test (Var (Global 80)) (Con 1) (Branch F (Dloc 026471)));
  Let b6 = M[008977];
  Let b7 = M[008978];
  if (Equal(And(MakeHiLo(b6,b7),1),1)) {
    TraceOperation 026468 (Jump 026738);
    Jump: 026738
  } else {
    Jump: 026471
  }
LocOp 026471:
  TraceOperation 026471 (Test (Var (Global 80)) (Con 2) (Branch F (Dloc 026524)));
  Let b1 = M[008977];
  Let b2 = M[008978];
  if (Equal(And(MakeHiLo(b1,b2),2),2)) {
    TraceOperation 026475 (Jz (Var (Local 4)) (Branch T (Dloc 026524)));
    if (IsZero(GetLocal(4))) {
      Jump: 026524
    } else {
      TraceOperation 026478 (Je [Var (Local 4),Con 1] (Branch T (Dloc 026516)));
      if (Equal(GetLocal(4),1)) {
        Jump: 026516
      } else {
        TraceOperation 026482 (Random (Var (Local 4)) Sp);
        LetRandom random3 GetLocal(4);
        PushStack random3;
        TraceOperation 026486 (Loadw (Var (Local 1)) (Var Sp) Sp);
        PopStack popped4;
        Let b5 = M[Offset(Address(GetLocal(1)),Mul(2,popped4))];
        Let b6 = M[Offset(Offset(Address(GetLocal(1)),Mul(2,popped4)),1)];
        PushStack MakeHiLo(b5,b6);
        TraceOperation 026490 (Storew (Var (Local 1)) (Con 1) (Var Sp));
        PopStack popped7;
        SetByte Offset(Address(GetLocal(1)),2) HiByte(popped7);
        SetByte Offset(Offset(Address(GetLocal(1)),2),1) LoByte(popped7);
        TraceOperation 026495 (Print "(How about the ");
        GamePrint "(How about the ";
        TraceOperation 026504 (Loadw (Var (Local 1)) (Con 1) Sp);
        Let b8 = M[Offset(Address(GetLocal(1)),2)];
        Let b9 = M[Offset(Offset(Address(GetLocal(1)),2),1)];
        PushStack MakeHiLo(b8,b9);
        TraceOperation 026508 (Print_obj (Var Sp));
        PopStack popped10;
        Let b11 = M[Offset(Offset(000741,Mul(popped10,9)),7)];
        Let b12 = M[Offset(Offset(Offset(000741,Mul(popped10,9)),7),1)];
        Let b13 = M[Address(MakeHiLo(b11,b12))];
        if (IsZeroByte(b13)) {
          GamePrint "";
          TraceOperation 026510 (Print "?)");
          GamePrint "?)";
          TraceOperation 026515 New_line;
          GamePrint "\n";
          Jump: 026516
        } else {
          GamePrint GetText(Offset(Address(MakeHiLo(b11,b12)),1));
          TraceOperation 026510 (Print "?)");
          GamePrint "?)";
          TraceOperation 026515 New_line;
          GamePrint "\n";
          Jump: 026516
        }
      }
    }
  } else {
    Jump: 026524
  }
LocOp 026516:
  TraceOperation 026516 (Storew (Var (Local 1)) (Var (Global 81)) (Con 1));
  Let b1 = M[008979];
  Let b2 = M[008980];
  SetByte Offset(Address(GetLocal(1)),Mul(2,MakeHiLo(b1,b2))) 0;
  SetByte Offset(Offset(Address(GetLocal(1)),Mul(2,MakeHiLo(b1,b2))),1) 1;
  TraceOperation 026521 (Jump 026738);
  Jump: 026738
LocOp 026524:
  TraceOperation 026524 (Jg (Var (Local 4)) (Con 1) (Branch T (Dloc 026539)));
  if (GreaterThan(GetLocal(4),1)) {
    Jump: 026539
  } else {
    TraceOperation 026528 (Jz (Var (Local 4)) (Branch F (Dloc 026670)));
    if (IsZero(GetLocal(4))) {
      TraceOperation 026532 (Je [Var (Global 92),Con -1] (Branch T (Dloc 026670)));
      Let b1 = M[009001];
      Let b2 = M[009002];
      if (Equal(MakeHiLo(b1,b2),-1)) {
        Jump: 026670
      } else {
        Jump: 026539
      }
    } else {
      Jump: 026670
    }
  }
LocOp 026539:
  TraceOperation 026539 (Je [Var (Global 92),Con -1] (Branch F (Dloc 026567)));
  Let b1 = M[009001];
  Let b2 = M[009002];
  if (Equal(MakeHiLo(b1,b2),-1)) {
    TraceOperation 026545 (Store (Con 108) (Var (Local 5)));
    SetByte 009001 HiByte(GetLocal(5));
    SetByte 009002 LoByte(GetLocal(5));
    TraceOperation 026548 (Store (Con 8) (Var (Local 4)));
    SetLocal 8 GetLocal(4);
    TraceOperation 026551 (Loadw (Var (Local 1)) (Var (Global 81)) Sp);
    Let b3 = M[008979];
    Let b4 = M[008980];
    Let b5 = M[Offset(Address(GetLocal(1)),Mul(2,MakeHiLo(b3,b4)))];
    Let b6 = M[Offset(Offset(Address(GetLocal(1)),Mul(2,MakeHiLo(b3,b4))),1)];
    PushStack MakeHiLo(b5,b6);
    TraceOperation 026555 (Sub (Var Sp) (Var (Local 4)) Sp);
    PopStack popped7;
    PushStack Sub(popped7,GetLocal(4));
    TraceOperation 026559 (Storew (Var (Local 1)) (Var (Global 81)) (Var Sp));
    Let b8 = M[008979];
    Let b9 = M[008980];
    PopStack popped10;
    SetByte Offset(Address(GetLocal(1)),Mul(2,MakeHiLo(b8,b9))) HiByte(popped10);
    SetByte Offset(Offset(Address(GetLocal(1)),Mul(2,MakeHiLo(b8,b9))),1) LoByte(popped10);
    TraceOperation 026564 (Jump 026419);
    Jump: 026419
  } else {
    Jump: 026567
  }
LocOp 026567:
  TraceOperation 026567 (Jz (Var (Local 4)) (Branch F (Dloc 026573)));
  if (IsZero(GetLocal(4))) {
    TraceOperation 026570 (Store (Con 4) (Var (Local 8)));
    SetLocal 4 GetLocal(8);
    Jump: 026573
  } else {
    Jump: 026573
  }
LocOp 026573:
  TraceOperation 026573 (Je [Var (Global 111),Var (Global 128)] (Branch T (Dloc 026583)));
  Let b1 = M[009039];
  Let b2 = M[009040];
  Let b3 = M[009073];
  Let b4 = M[009074];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    Jump: 026583
  } else {
    TraceOperation 026577 (Call (Floc 025174) [] Sp);
    PushFrame 026577;
    JumpCall: 025174, #actuals: 0
  }
LocReturn 026577:
  PushStack call_result;
  TraceOperation 026582 Rfalse;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 0
LocOp 026583:
  TraceOperation 026583 (Jz (Var (Local 2)) (Branch T (Dloc 026632)));
  if (IsZero(GetLocal(2))) {
    Jump: 026632
  } else {
    TraceOperation 026586 (Jz (Var (Global 90)) (Branch T (Dloc 026632)));
    Let b1 = M[008997];
    Let b2 = M[008998];
    if (IsZero(MakeHiLo(b1,b2))) {
      Jump: 026632
    } else {
      TraceOperation 026589 (Call (Floc 026846) [Var (Local 6),Var (Local 4),Var (Local 1)] Sp);
      PushFrame 026589;
      SetLocal 1 GetLocal(6);
      SetLocal 2 GetLocal(4);
      SetLocal 3 GetLocal(1);
      JumpCall: 026846, #actuals: 3
    }
  }
LocReturn 026589:
  PushStack call_result;
  TraceOperation 026597 (Je [Var (Local 1),Var (Global 86)] (Branch F (Dloc 026607)));
  Let b1 = M[008989];
  Let b2 = M[008990];
  if (Equal(GetLocal(1),MakeHiLo(b1,b2))) {
    TraceOperation 026601 (Push (Con 6));
    PushStack 6;
    TraceOperation 026604 (Jump 026610);
    Jump: 026610
  } else {
    Jump: 026607
  }
LocOp 026607:
  TraceOperation 026607 (Push (Con 8));
  PushStack 8;
  Jump: 026610
LocOp 026610:
  TraceOperation 026610 (Store (Con 119) (Var Sp));
  PopStack popped1;
  SetByte 009023 HiByte(popped1);
  SetByte 009024 LoByte(popped1);
  TraceOperation 026613 (Store (Con 117) (Var (Global 89)));
  Let b2 = M[008995];
  Let b3 = M[008996];
  SetByte 009019 b2;
  SetByte 009020 b3;
  TraceOperation 026616 (Store (Con 118) (Var (Global 90)));
  Let b4 = M[008997];
  Let b5 = M[008998];
  SetByte 009021 b4;
  SetByte 009022 b5;
  TraceOperation 026619 (Call (Floc 025208) [Con 0,Con 0] Sp);
  PushFrame 026619;
  SetLocal 1 0;
  SetLocal 2 0;
  JumpCall: 025208, #actuals: 2
LocReturn 026619:
  PushStack call_result;
  TraceOperation 026626 (Store (Con 121) (Con 1));
  SetByte 009027 0;
  SetByte 009028 1;
  TraceOperation 026629 (Jump 026663);
  Jump: 026663
LocOp 026632:
  TraceOperation 026632 (Jz (Var (Local 2)) (Branch T (Dloc 026663)));
  if (IsZero(GetLocal(2))) {
    Jump: 026663
  } else {
    TraceOperation 026635 (Print "There seems to be a noun missing in that sentence!");
    GamePrint "There seems to be a noun missing in that sentence!";
    TraceOperation 026662 New_line;
    GamePrint "\n";
    Jump: 026663
  }
LocOp 026663:
  TraceOperation 026663 (Store (Con 106) (Con 0));
  SetByte 008997 0;
  SetByte 008998 0;
  TraceOperation 026666 (Store (Con 105) (Con 0));
  SetByte 008995 0;
  SetByte 008996 0;
  TraceOperation 026669 Rfalse;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 0
LocOp 026670:
  TraceOperation 026670 (Jz (Var (Local 4)) (Branch F (Dloc 026729)));
  if (IsZero(GetLocal(4))) {
    TraceOperation 026673 (Jz (Var (Local 7)) (Branch T (Dloc 026729)));
    if (IsZero(GetLocal(7))) {
      Jump: 026729
    } else {
      TraceOperation 026676 (Jz (Var (Local 2)) (Branch T (Dloc 026722)));
      if (IsZero(GetLocal(2))) {
        Jump: 026722
      } else {
        TraceOperation 026679 (Jz (Var (Global 66)) (Branch T (Dloc 026708)));
        Let b1 = M[008949];
        Let b2 = M[008950];
        if (IsZero(MakeHiLo(b1,b2))) {
          Jump: 026708
        } else {
          TraceOperation 026682 (Call (Floc 027322) [Con 11,Var (Local 1)] Sp);
          PushFrame 026682;
          SetLocal 1 11;
          SetLocal 2 GetLocal(1);
          JumpCall: 027322, #actuals: 2
        }
      }
    }
  } else {
    Jump: 026729
  }
LocReturn 026682:
  PushStack call_result;
  TraceOperation 026689 (Store (Con 91) (Var (Global 90)));
  Let b1 = M[008997];
  Let b2 = M[008998];
  SetByte 008967 b1;
  SetByte 008968 b2;
  TraceOperation 026692 (Store (Con 90) (Var (Global 89)));
  Let b3 = M[008995];
  Let b4 = M[008996];
  SetByte 008965 b3;
  SetByte 008966 b4;
  TraceOperation 026695 (Store (Con 89) (Var (Global 87)));
  Let b5 = M[008991];
  Let b6 = M[008992];
  SetByte 008963 b5;
  SetByte 008964 b6;
  TraceOperation 026698 (Store (Con 106) (Con 0));
  SetByte 008997 0;
  SetByte 008998 0;
  TraceOperation 026701 (Store (Con 105) (Con 0));
  SetByte 008995 0;
  SetByte 008996 0;
  TraceOperation 026704 (Store (Con 103) (Con 0));
  SetByte 008991 0;
  SetByte 008992 0;
  TraceOperation 026707 Rtrue;
  PopFrame return_address_7;
  JumpReturn: return_address_7, result: 1
LocOp 026708:
  TraceOperation 026708 (Print "It's too dark to see!");
  GamePrint "It's too dark to see!";
  TraceOperation 026721 New_line;
  GamePrint "\n";
  Jump: 026722
LocOp 026722:
  TraceOperation 026722 (Store (Con 106) (Con 0));
  SetByte 008997 0;
  SetByte 008998 0;
  TraceOperation 026725 (Store (Con 105) (Con 0));
  SetByte 008995 0;
  SetByte 008996 0;
  TraceOperation 026728 Rfalse;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 0
LocOp 026729:
  TraceOperation 026729 (Jz (Var (Local 4)) (Branch F (Dloc 026738)));
  if (IsZero(GetLocal(4))) {
    TraceOperation 026732 (Store (Con 7) (Con 1));
    SetLocal 7 1;
    TraceOperation 026735 (Jump 026419);
    Jump: 026419
  } else {
    Jump: 026738
  }
LocOp 026738:
  TraceOperation 026738 (Store (Con 108) (Var (Local 5)));
  SetByte 009001 HiByte(GetLocal(5));
  SetByte 009002 LoByte(GetLocal(5));
  TraceOperation 026741 (Store (Con 106) (Con 0));
  SetByte 008997 0;
  SetByte 008998 0;
  TraceOperation 026744 (Store (Con 105) (Con 0));
  SetByte 008995 0;
  SetByte 008996 0;
  TraceOperation 026747 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[63]--------------------------------------------------
LocRoutine 026748:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 026755
LocOp 026755:
  TraceOperation 026755 (Store (Con 108) (Con -1));
  SetByte 009001 255;
  SetByte 009002 255;
  TraceOperation 026760 (Store (Con 106) (Var (Global 75)));
  Let b1 = M[008967];
  Let b2 = M[008968];
  SetByte 008997 b1;
  SetByte 008998 b2;
  TraceOperation 026763 (Store (Con 105) (Var (Global 74)));
  Let b3 = M[008965];
  Let b4 = M[008966];
  SetByte 008995 b3;
  SetByte 008996 b4;
  TraceOperation 026766 (Storew (Var (Local 1)) (Var (Global 81)) (Con 0));
  Let b5 = M[008979];
  Let b6 = M[008980];
  SetByte Offset(Address(GetLocal(1)),Mul(2,MakeHiLo(b5,b6))) 0;
  SetByte Offset(Offset(Address(GetLocal(1)),Mul(2,MakeHiLo(b5,b6))),1) 0;
  TraceOperation 026771 (Get_child (Con 82) (Local 2) (Branch T (Dloc 026775)));
  Let b7 = M[001485];
  SetLocal 2 Widen(b7);
  if (IsZero(Widen(b7))) {
    Jump: 026775
  } else {
    Jump: 026775
  }
LocOp 026775:
  TraceOperation 026775 (Jz (Var (Local 2)) (Branch F (Dloc 026781)));
  if (IsZero(GetLocal(2))) {
    TraceOperation 026778 (Jump 026796);
    Jump: 026796
  } else {
    Jump: 026781
  }
LocOp 026781:
  TraceOperation 026781 (Call (Floc 027218) [Var (Local 2),Var (Local 1),Con 1] Sp);
  PushFrame 026781;
  SetLocal 1 GetLocal(2);
  SetLocal 2 GetLocal(1);
  SetLocal 3 1;
  JumpCall: 027218, #actuals: 3
LocReturn 026781:
  PushStack call_result;
  TraceOperation 026789 (Get_sibling (Var (Local 2)) (Local 2) (Branch T (Dloc 026793)));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(2),9)),5)];
  SetLocal 2 Widen(b1);
  if (IsZero(Widen(b1))) {
    TraceOperation 026793 (Jump 026775);
    Jump: 026775
  } else {
    TraceOperation 026793 (Jump 026775);
    Jump: 026775
  }
LocOp 026796:
  TraceOperation 026796 (Loadw (Var (Local 1)) (Var (Global 81)) (Local 3));
  Let b1 = M[008979];
  Let b2 = M[008980];
  Let b3 = M[Offset(Address(GetLocal(1)),Mul(2,MakeHiLo(b1,b2)))];
  Let b4 = M[Offset(Offset(Address(GetLocal(1)),Mul(2,MakeHiLo(b1,b2))),1)];
  SetLocal 3 MakeHiLo(b3,b4);
  TraceOperation 026800 (Jz (Var (Local 3)) (Branch F (Dloc 026811)));
  if (IsZero(GetLocal(3))) {
    TraceOperation 026803 (Call (Floc 027166) [Con 249,Con 1,Con 1] Sp);
    PushFrame 026803;
    SetLocal 1 249;
    SetLocal 2 1;
    SetLocal 3 1;
    JumpCall: 027166, #actuals: 3
  } else {
    Jump: 026811
  }
LocReturn 026803:
  PushStack call_result;
  Jump: 026811
LocOp 026811:
  TraceOperation 026811 (Loadw (Var (Local 1)) (Var (Global 81)) (Local 3));
  Let b1 = M[008979];
  Let b2 = M[008980];
  Let b3 = M[Offset(Address(GetLocal(1)),Mul(2,MakeHiLo(b1,b2)))];
  Let b4 = M[Offset(Offset(Address(GetLocal(1)),Mul(2,MakeHiLo(b1,b2))),1)];
  SetLocal 3 MakeHiLo(b3,b4);
  TraceOperation 026815 (Jz (Var (Local 3)) (Branch F (Dloc 026826)));
  if (IsZero(GetLocal(3))) {
    TraceOperation 026818 (Call (Floc 027166) [Con 82,Con 1,Con 1] Sp);
    PushFrame 026818;
    SetLocal 1 82;
    SetLocal 2 1;
    SetLocal 3 1;
    JumpCall: 027166, #actuals: 3
  } else {
    Jump: 026826
  }
LocReturn 026818:
  PushStack call_result;
  Jump: 026826
LocOp 026826:
  TraceOperation 026826 (Loadw (Var (Local 1)) (Var (Global 81)) (Local 3));
  Let b1 = M[008979];
  Let b2 = M[008980];
  Let b3 = M[Offset(Address(GetLocal(1)),Mul(2,MakeHiLo(b1,b2)))];
  Let b4 = M[Offset(Offset(Address(GetLocal(1)),Mul(2,MakeHiLo(b1,b2))),1)];
  SetLocal 3 MakeHiLo(b3,b4);
  TraceOperation 026830 (Je [Var (Local 3),Con 1] (Branch F (Dloc 026838)));
  if (Equal(GetLocal(3),1)) {
    TraceOperation 026834 (Loadw (Var (Local 1)) (Con 1) (Global 76));
    Let b5 = M[Offset(Address(GetLocal(1)),2)];
    Let b6 = M[Offset(Offset(Address(GetLocal(1)),2),1)];
    SetByte 008969 b5;
    SetByte 008970 b6;
    Jump: 026838
  } else {
    Jump: 026838
  }
LocOp 026838:
  TraceOperation 026838 (Store (Con 106) (Con 0));
  SetByte 008997 0;
  SetByte 008998 0;
  TraceOperation 026841 (Store (Con 105) (Con 0));
  SetByte 008995 0;
  SetByte 008996 0;
  TraceOperation 026844 (Ret (Var (Local 3)));
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: GetLocal(3)
--[64]--------------------------------------------------
LocRoutine 026846:
  MakeRoutineFrame 5;
  if (LessThanByte(num_actuals,5)) {
    SetLocal 5 0;
    if (LessThanByte(num_actuals,4)) {
      SetLocal 4 0;
      if (LessThanByte(num_actuals,3)) {
        SetLocal 3 0;
        if (LessThanByte(num_actuals,2)) {
          SetLocal 2 0;
          if (LessThanByte(num_actuals,1)) {
            SetLocal 1 0;
          }
        }
      }
    }
  }
  Jump: 026857
LocOp 026857:
  TraceOperation 026857 (Store (Con 5) (Var (Local 2)));
  SetLocal 5 GetLocal(2);
  TraceOperation 026860 (Print "Which");
  GamePrint "Which";
  TraceOperation 026865 (Jz (Var (Global 105)) (Branch F (Dloc 026874)));
  Let b1 = M[009027];
  Let b2 = M[009028];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 026868 (Jz (Var (Global 104)) (Branch F (Dloc 026874)));
    Let b3 = M[009025];
    Let b4 = M[009026];
    if (IsZero(MakeHiLo(b3,b4))) {
      TraceOperation 026871 (Jz (Var (Global 77)) (Branch T (Dloc 026882)));
      Let b5 = M[008971];
      Let b6 = M[008972];
      if (IsZero(MakeHiLo(b5,b6))) {
        Jump: 026882
      } else {
        Jump: 026874
      }
    } else {
      Jump: 026874
    }
  } else {
    Jump: 026874
  }
LocOp 026874:
  TraceOperation 026874 (Print " ");
  GamePrint " ";
  TraceOperation 026877 (Print_addr (Var (Global 90)));
  Let b1 = M[008997];
  Let b2 = M[008998];
  GamePrint GetText(Address(MakeHiLo(b1,b2)));
  TraceOperation 026879 (Jump 026905);
  Jump: 026905
LocOp 026882:
  TraceOperation 026882 (Je [Var (Local 3),Var (Global 86)] (Branch F (Dloc 026897)));
  Let b1 = M[008989];
  Let b2 = M[008990];
  if (Equal(GetLocal(3),MakeHiLo(b1,b2))) {
    TraceOperation 026886 (Call (Floc 025300) [Con 6,Con 7,Con 0] Sp);
    PushFrame 026886;
    SetLocal 1 6;
    SetLocal 2 7;
    SetLocal 3 0;
    JumpCall: 025300, #actuals: 3
  } else {
    Jump: 026897
  }
LocReturn 026886:
  PushStack call_result;
  TraceOperation 026894 (Jump 026905);
  Jump: 026905
LocOp 026897:
  TraceOperation 026897 (Call (Floc 025300) [Con 8,Con 9,Con 0] Sp);
  PushFrame 026897;
  SetLocal 1 8;
  SetLocal 2 9;
  SetLocal 3 0;
  JumpCall: 025300, #actuals: 3
LocReturn 026897:
  PushStack call_result;
  Jump: 026905
LocOp 026905:
  TraceOperation 026905 (Print " do you mean, ");
  GamePrint " do you mean, ";
  Jump: 026914
LocOp 026914:
  TraceOperation 026914 (Inc (Con 1));
  SetLocal 1 Add(GetLocal(1),1);
  TraceOperation 026916 (Loadw (Var (Local 3)) (Var (Local 1)) (Local 4));
  Let b1 = M[Offset(Address(GetLocal(3)),Mul(2,GetLocal(1)))];
  Let b2 = M[Offset(Offset(Address(GetLocal(3)),Mul(2,GetLocal(1))),1)];
  SetLocal 4 MakeHiLo(b1,b2);
  TraceOperation 026920 (Print "the ");
  GamePrint "the ";
  TraceOperation 026923 (Print_obj (Var (Local 4)));
  Let b3 = M[Offset(Offset(000741,Mul(GetLocal(4),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000741,Mul(GetLocal(4),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  if (IsZeroByte(b5)) {
    GamePrint "";
    TraceOperation 026925 (Je [Var (Local 2),Con 2] (Branch F (Dloc 026944)));
    if (Equal(GetLocal(2),2)) {
      TraceOperation 026929 (Je [Var (Local 5),Con 2] (Branch T (Dloc 026936)));
      if (Equal(GetLocal(5),2)) {
        Jump: 026936
      } else {
        TraceOperation 026933 (Print ",");
        GamePrint ",";
        Jump: 026936
      }
    } else {
      Jump: 026944
    }
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
    TraceOperation 026925 (Je [Var (Local 2),Con 2] (Branch F (Dloc 026944)));
    if (Equal(GetLocal(2),2)) {
      TraceOperation 026929 (Je [Var (Local 5),Con 2] (Branch T (Dloc 026936)));
      if (Equal(GetLocal(5),2)) {
        Jump: 026936
      } else {
        TraceOperation 026933 (Print ",");
        GamePrint ",";
        Jump: 026936
      }
    } else {
      Jump: 026944
    }
  }
LocOp 026936:
  TraceOperation 026936 (Print " or ");
  GamePrint " or ";
  TraceOperation 026941 (Jump 026951);
  Jump: 026951
LocOp 026944:
  TraceOperation 026944 (Jg (Var (Local 2)) (Con 2) (Branch F (Dloc 026951)));
  if (GreaterThan(GetLocal(2),2)) {
    TraceOperation 026948 (Print ", ");
    GamePrint ", ";
    Jump: 026951
  } else {
    Jump: 026951
  }
LocOp 026951:
  TraceOperation 026951 (Dec_chk (Con 2) (Con 1) (Branch F (Dloc 026914)));
  if (LessThanEqual(GetLocal(2),1)) {
    SetLocal 2 Sub(GetLocal(2),1);
    TraceOperation 026956 (Print_ret "?");
    GamePrint "?\n";
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 1
  } else {
    SetLocal 2 Sub(GetLocal(2),1);
    Jump: 026914
  }
--[65]--------------------------------------------------
LocRoutine 026960:
  MakeRoutineFrame 8;
  if (LessThanByte(num_actuals,8)) {
    SetLocal 8 0;
    if (LessThanByte(num_actuals,7)) {
      SetLocal 7 0;
      if (LessThanByte(num_actuals,6)) {
        SetLocal 6 0;
        if (LessThanByte(num_actuals,5)) {
          SetLocal 5 0;
          if (LessThanByte(num_actuals,4)) {
            SetLocal 4 0;
            if (LessThanByte(num_actuals,3)) {
              SetLocal 3 0;
              if (LessThanByte(num_actuals,2)) {
                SetLocal 2 0;
                if (LessThanByte(num_actuals,1)) {
                  SetLocal 1 0;
                }
              }
            }
          }
        }
      }
    }
  }
  Jump: 026977
LocOp 026977:
  TraceOperation 026977 (Loadw (Var (Local 1)) (Var (Global 81)) (Local 2));
  Let b1 = M[008979];
  Let b2 = M[008980];
  Let b3 = M[Offset(Address(GetLocal(1)),Mul(2,MakeHiLo(b1,b2)))];
  Let b4 = M[Offset(Offset(Address(GetLocal(1)),Mul(2,MakeHiLo(b1,b2))),1)];
  SetLocal 2 MakeHiLo(b3,b4);
  TraceOperation 026981 (Store (Con 7) (Var (Global 92)));
  Let b5 = M[009001];
  Let b6 = M[009002];
  SetLocal 7 MakeHiLo(b5,b6);
  TraceOperation 026984 (Get_prop_addr (Var (Global 0)) (Con 5) (Local 3));
  Let b7 = M[008817];
  Let b8 = M[008818];
  Let b9 = M[Offset(Offset(000741,Mul(MakeHiLo(b7,b8),9)),7)];
  Let b10 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b7,b8),9)),7),1)];
  Let b11 = M[Address(MakeHiLo(b9,b10))];
  Error: getPropsA
LocOp 026998:
  TraceOperation 026998 (Loadb (Var (Local 3)) (Var (Local 5)) (Local 6));
  Let b1 = M[Offset(Address(GetLocal(3)),GetLocal(5))];
  SetLocal 6 Widen(b1);
  TraceOperation 027002 (Call (Floc 027932) [Var (Local 6),Var (Local 1)] Sp);
  PushFrame 027002;
  SetLocal 1 GetLocal(6);
  SetLocal 2 GetLocal(1);
  JumpCall: 027932, #actuals: 2
LocReturn 027002:
  PushStack call_result;
  TraceOperation 027009 (Jz (Var Sp) (Branch T (Dloc 027019)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 027019
  } else {
    TraceOperation 027012 (Call (Floc 027322) [Var (Local 6),Var (Local 1)] Sp);
    PushFrame 027012;
    SetLocal 1 GetLocal(6);
    SetLocal 2 GetLocal(1);
    JumpCall: 027322, #actuals: 2
  }
LocReturn 027012:
  PushStack call_result;
  Jump: 027019
LocOp 027019:
  TraceOperation 027019 (Inc_chk (Con 5) (Var (Local 4)) (Branch F (Dloc 026998)));
  SetLocal 5 Add(GetLocal(5),1);
  if (GreaterThanEqual(GetLocal(5),GetLocal(4))) {
    Jump: 027024
  } else {
    Jump: 026998
  }
LocOp 027024:
  TraceOperation 027024 (Get_prop_addr (Var (Global 0)) (Con 4) (Local 3));
  Let b1 = M[008817];
  Let b2 = M[008818];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  Error: getPropsA
LocOp 027046:
  TraceOperation 027046 (Mul (Var (Local 5)) (Con 2) Sp);
  PushStack Mul(GetLocal(5),2);
  TraceOperation 027050 (Loadw (Var (Local 3)) (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(Address(GetLocal(3)),Mul(2,popped1))];
  Let b3 = M[Offset(Offset(Address(GetLocal(3)),Mul(2,popped1)),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 027054 (Je [Var (Global 90),Var Sp] (Branch F (Dloc 027111)));
  Let b4 = M[008997];
  Let b5 = M[008998];
  PopStack popped6;
  if (Equal(MakeHiLo(b4,b5),popped6)) {
    TraceOperation 027058 (Mul (Var (Local 5)) (Con 2) Sp);
    PushStack Mul(GetLocal(5),2);
    TraceOperation 027062 (Add (Var Sp) (Con 1) Sp);
    PopStack popped7;
    PushStack Add(popped7,1);
    TraceOperation 027066 (Loadw (Var (Local 3)) (Var Sp) Sp);
    PopStack popped8;
    Let b9 = M[Offset(Address(GetLocal(3)),Mul(2,popped8))];
    Let b10 = M[Offset(Offset(Address(GetLocal(3)),Mul(2,popped8)),1)];
    PushStack MakeHiLo(b9,b10);
    TraceOperation 027070 (Put_prop (Con 13) (Con 17) (Var Sp));
    PopStack popped11;
    Let b12 = M[000865];
    Let b13 = M[000866];
    Let b14 = M[Address(MakeHiLo(b12,b13))];
    Error: getPropsA
  } else {
    Jump: 027111
  }
LocReturn 027101:
  PushStack call_result;
  TraceOperation 027108 (Jump 027116);
  Jump: 027116
LocOp 027111:
  TraceOperation 027111 (Inc_chk (Con 5) (Var (Local 4)) (Branch F (Dloc 027046)));
  SetLocal 5 Add(GetLocal(5),1);
  if (GreaterThanEqual(GetLocal(5),GetLocal(4))) {
    Jump: 027116
  } else {
    Jump: 027046
  }
LocOp 027116:
  TraceOperation 027116 (Loadw (Var (Local 1)) (Var (Global 81)) Sp);
  Let b1 = M[008979];
  Let b2 = M[008980];
  Let b3 = M[Offset(Address(GetLocal(1)),Mul(2,MakeHiLo(b1,b2)))];
  Let b4 = M[Offset(Offset(Address(GetLocal(1)),Mul(2,MakeHiLo(b1,b2))),1)];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 027120 (Je [Var Sp,Var (Local 2)] (Branch F Dfalse));
  PopStack popped5;
  if (Equal(popped5,GetLocal(2))) {
    TraceOperation 027124 (Store (Con 108) (Con -1));
    SetByte 009001 255;
    SetByte 009002 255;
    TraceOperation 027129 (Store (Con 133) (Var (Local 1)));
    SetByte 009051 HiByte(GetLocal(1));
    SetByte 009052 LoByte(GetLocal(1));
    TraceOperation 027132 (Call (Floc 027166) [Con 247,Con 1,Con 1] Sp);
    PushFrame 027132;
    SetLocal 1 247;
    SetLocal 2 1;
    SetLocal 3 1;
    JumpCall: 027166, #actuals: 3
  } else {
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 0
  }
LocReturn 027132:
  PushStack call_result;
  TraceOperation 027140 (Store (Con 108) (Var (Local 7)));
  SetByte 009001 HiByte(GetLocal(7));
  SetByte 009002 LoByte(GetLocal(7));
  TraceOperation 027143 (Loadw (Var (Local 1)) (Var (Global 81)) Sp);
  Let b1 = M[008979];
  Let b2 = M[008980];
  Let b3 = M[Offset(Address(GetLocal(1)),Mul(2,MakeHiLo(b1,b2)))];
  Let b4 = M[Offset(Offset(Address(GetLocal(1)),Mul(2,MakeHiLo(b1,b2))),1)];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 027147 (Jz (Var Sp) (Branch F Dfalse));
  PopStack popped5;
  if (IsZero(popped5)) {
    TraceOperation 027150 (Je [Var (Global 120),Con 57,Con 113,Con 56] (Branch F Dfalse));
    Let b6 = M[009057];
    Let b7 = M[009058];
    if (LogOr(LogOr(Equal(MakeHiLo(b6,b7),57),Equal(MakeHiLo(b6,b7),113)),Equal(MakeHiLo(b6,b7),56))) {
      TraceOperation 027157 (Call (Floc 027166) [Con 82,Con 1,Con 1] Sp);
      PushFrame 027157;
      SetLocal 1 82;
      SetLocal 2 1;
      SetLocal 3 1;
      JumpCall: 027166, #actuals: 3
    } else {
      PopFrame return_address_8;
      JumpReturn: return_address_8, result: 0
    }
  } else {
    PopFrame return_address_9;
    JumpReturn: return_address_9, result: 0
  }
LocReturn 027157:
  PushStack call_result;
  TraceOperation 027165 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[66]--------------------------------------------------
LocRoutine 027166:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 027175
LocOp 027175:
  TraceOperation 027175 (Add (Var (Local 2)) (Var (Local 3)) Sp);
  PushStack Add(GetLocal(2),GetLocal(3));
  TraceOperation 027179 (Test (Var (Global 92)) (Var Sp) (Branch F (Dloc 027192)));
  Let b1 = M[009001];
  Let b2 = M[009002];
  PopStack popped3;
  if (Equal(And(MakeHiLo(b1,b2),popped3),popped3)) {
    TraceOperation 027183 (Call (Floc 027218) [Var (Local 1),Var (Global 117),Con 1] Sp);
    Let b4 = M[009051];
    Let b5 = M[009052];
    PushFrame 027183;
    SetLocal 1 GetLocal(1);
    SetLocal 2 MakeHiLo(b4,b5);
    SetLocal 3 1;
    JumpCall: 027218, #actuals: 3
  } else {
    Jump: 027192
  }
LocReturn 027183:
  PushStack call_result;
  TraceOperation 027191 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 027192:
  TraceOperation 027192 (Test (Var (Global 92)) (Var (Local 2)) (Branch F (Dloc 027205)));
  Let b1 = M[009001];
  Let b2 = M[009002];
  if (Equal(And(MakeHiLo(b1,b2),GetLocal(2)),GetLocal(2))) {
    TraceOperation 027196 (Call (Floc 027218) [Var (Local 1),Var (Global 117),Con 0] Sp);
    Let b3 = M[009051];
    Let b4 = M[009052];
    PushFrame 027196;
    SetLocal 1 GetLocal(1);
    SetLocal 2 MakeHiLo(b3,b4);
    SetLocal 3 0;
    JumpCall: 027218, #actuals: 3
  } else {
    Jump: 027205
  }
LocReturn 027196:
  PushStack call_result;
  TraceOperation 027204 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 027205:
  TraceOperation 027205 (Test (Var (Global 92)) (Var (Local 3)) (Branch F Dtrue));
  Let b1 = M[009001];
  Let b2 = M[009002];
  if (Equal(And(MakeHiLo(b1,b2),GetLocal(3)),GetLocal(3))) {
    TraceOperation 027209 (Call (Floc 027218) [Var (Local 1),Var (Global 117),Con 2] Sp);
    Let b3 = M[009051];
    Let b4 = M[009052];
    PushFrame 027209;
    SetLocal 1 GetLocal(1);
    SetLocal 2 MakeHiLo(b3,b4);
    SetLocal 3 2;
    JumpCall: 027218, #actuals: 3
  } else {
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  }
LocReturn 027209:
  PushStack call_result;
  TraceOperation 027217 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[67]--------------------------------------------------
LocRoutine 027218:
  MakeRoutineFrame 5;
  if (LessThanByte(num_actuals,5)) {
    SetLocal 5 0;
    if (LessThanByte(num_actuals,4)) {
      SetLocal 4 0;
      if (LessThanByte(num_actuals,3)) {
        SetLocal 3 0;
        if (LessThanByte(num_actuals,2)) {
          SetLocal 2 0;
          if (LessThanByte(num_actuals,1)) {
            SetLocal 1 0;
          }
        }
      }
    }
  }
  Jump: 027229
LocOp 027229:
  TraceOperation 027229 (Get_child (Var (Local 1)) (Local 1) (Branch F Dfalse));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),6)];
  SetLocal 1 Widen(b1);
  if (IsZero(Widen(b1))) {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  } else {
    TraceOperation 027233 (Je [Var (Local 3),Con 2] (Branch T (Dloc 027261)));
    if (Equal(GetLocal(3),2)) {
      Jump: 027261
    } else {
      TraceOperation 027237 (Get_prop_addr (Var (Local 1)) (Con 18) Sp);
      Let b3 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),7)];
      Let b4 = M[Offset(Offset(Offset(000741,Mul(GetLocal(1),9)),7),1)];
      Let b5 = M[Address(MakeHiLo(b3,b4))];
      Error: getPropsA
    }
  }
LocReturn 027244:
  PushStack call_result;
  TraceOperation 027251 (Jz (Var Sp) (Branch T (Dloc 027261)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 027261
  } else {
    TraceOperation 027254 (Call (Floc 027322) [Var (Local 1),Var (Local 2)] Sp);
    PushFrame 027254;
    SetLocal 1 GetLocal(1);
    SetLocal 2 GetLocal(2);
    JumpCall: 027322, #actuals: 2
  }
LocReturn 027254:
  PushStack call_result;
  Jump: 027261
LocOp 027261:
  TraceOperation 027261 (Je [Var (Local 3),Con 0] (Branch F (Dloc 027273)));
  if (Equal(GetLocal(3),0)) {
    TraceOperation 027265 (Test_attr (Var (Local 1)) (Con 8) (Branch T (Dloc 027273)));
    Let b1 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),1)];
    if (TestBit(b1,7)) {
      Jump: 027273
    } else {
      TraceOperation 027269 (Test_attr (Var (Local 1)) (Con 10) (Branch F (Dloc 027316)));
      Let b2 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),1)];
      if (TestBit(b2,5)) {
        Jump: 027273
      } else {
        Jump: 027316
      }
    }
  } else {
    Jump: 027273
  }
LocOp 027273:
  TraceOperation 027273 (Get_child (Var (Local 1)) (Local 5) (Branch F (Dloc 027316)));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),6)];
  SetLocal 5 Widen(b1);
  if (IsZero(Widen(b1))) {
    Jump: 027316
  } else {
    TraceOperation 027277 (Test_attr (Var (Local 1)) (Con 11) (Branch T (Dloc 027285)));
    Let b2 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),1)];
    if (TestBit(b2,4)) {
      Jump: 027285
    } else {
      TraceOperation 027281 (Test_attr (Var (Local 1)) (Con 12) (Branch F (Dloc 027316)));
      Let b3 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),1)];
      if (TestBit(b3,3)) {
        Jump: 027285
      } else {
        Jump: 027316
      }
    }
  }
LocOp 027285:
  TraceOperation 027285 (Test_attr (Var (Local 1)) (Con 10) (Branch F (Dloc 027295)));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),1)];
  if (TestBit(b1,5)) {
    TraceOperation 027289 (Push (Con 1));
    PushStack 1;
    TraceOperation 027292 (Jump 027308);
    Jump: 027308
  } else {
    Jump: 027295
  }
LocOp 027295:
  TraceOperation 027295 (Test_attr (Var (Local 1)) (Con 8) (Branch F (Dloc 027305)));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),1)];
  if (TestBit(b1,7)) {
    TraceOperation 027299 (Push (Con 1));
    PushStack 1;
    TraceOperation 027302 (Jump 027308);
    Jump: 027308
  } else {
    Jump: 027305
  }
LocOp 027305:
  TraceOperation 027305 (Push (Con 0));
  PushStack 0;
  Jump: 027308
LocOp 027308:
  TraceOperation 027308 (Call (Floc 027218) [Var (Local 1),Var (Local 2),Var Sp] (Local 4));
  PopStack popped1;
  PushFrame 027308;
  SetLocal 1 GetLocal(1);
  SetLocal 2 GetLocal(2);
  SetLocal 3 popped1;
  JumpCall: 027218, #actuals: 3
LocReturn 027308:
  SetLocal 4 call_result;
  Jump: 027316
LocOp 027316:
  TraceOperation 027316 (Get_sibling (Var (Local 1)) (Local 1) (Branch T (Dloc 027233)));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),5)];
  SetLocal 1 Widen(b1);
  if (IsZero(Widen(b1))) {
    TraceOperation 027321 Rtrue;
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 1
  } else {
    TraceOperation 027233 (Je [Var (Local 3),Con 2] (Branch T (Dloc 027261)));
    if (Equal(GetLocal(3),2)) {
      Jump: 027261
    } else {
      TraceOperation 027237 (Get_prop_addr (Var (Local 1)) (Con 18) Sp);
      Let b3 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),7)];
      Let b4 = M[Offset(Offset(Offset(000741,Mul(GetLocal(1),9)),7),1)];
      Let b5 = M[Address(MakeHiLo(b3,b4))];
      Error: getPropsA
    }
  }
--[68]--------------------------------------------------
LocRoutine 027322:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 027329
LocOp 027329:
  TraceOperation 027329 (Loadw (Var (Local 2)) (Var (Global 81)) (Local 3));
  Let b1 = M[008979];
  Let b2 = M[008980];
  Let b3 = M[Offset(Address(GetLocal(2)),Mul(2,MakeHiLo(b1,b2)))];
  Let b4 = M[Offset(Offset(Address(GetLocal(2)),Mul(2,MakeHiLo(b1,b2))),1)];
  SetLocal 3 MakeHiLo(b3,b4);
  TraceOperation 027333 (Add (Var (Local 3)) (Con 1) Sp);
  PushStack Add(GetLocal(3),1);
  TraceOperation 027337 (Storew (Var (Local 2)) (Var Sp) (Var (Local 1)));
  PopStack popped5;
  SetByte Offset(Address(GetLocal(2)),Mul(2,popped5)) HiByte(GetLocal(1));
  SetByte Offset(Offset(Address(GetLocal(2)),Mul(2,popped5)),1) LoByte(GetLocal(1));
  TraceOperation 027342 (Add (Var (Local 3)) (Con 1) Sp);
  PushStack Add(GetLocal(3),1);
  TraceOperation 027346 (Storew (Var (Local 2)) (Var (Global 81)) (Var Sp));
  Let b6 = M[008979];
  Let b7 = M[008980];
  PopStack popped8;
  SetByte Offset(Address(GetLocal(2)),Mul(2,MakeHiLo(b6,b7))) HiByte(popped8);
  SetByte Offset(Offset(Address(GetLocal(2)),Mul(2,MakeHiLo(b6,b7))),1) LoByte(popped8);
  TraceOperation 027351 Rtrue;
  PopFrame return_address_9;
  JumpReturn: return_address_9, result: 1
--[69]--------------------------------------------------
LocRoutine 027352:
  MakeRoutineFrame 0;
  Jump: 027353
LocOp 027353:
  TraceOperation 027353 (Loadb (Var (Global 115)) (Con 5) Sp);
  Let b1 = M[009047];
  Let b2 = M[009048];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),5)];
  PushStack Widen(b3);
  TraceOperation 027357 (Call (Floc 027380) [Var (Global 86),Var Sp] Sp);
  Let b4 = M[008989];
  Let b5 = M[008990];
  PopStack popped6;
  PushFrame 027357;
  SetLocal 1 MakeHiLo(b4,b5);
  SetLocal 2 popped6;
  JumpCall: 027380, #actuals: 2
LocReturn 027357:
  PushStack call_result;
  TraceOperation 027364 (Jz (Var Sp) (Branch T Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  } else {
    TraceOperation 027367 (Loadb (Var (Global 115)) (Con 6) Sp);
    Let b3 = M[009047];
    Let b4 = M[009048];
    Let b5 = M[Offset(Address(MakeHiLo(b3,b4)),6)];
    PushStack Widen(b5);
    TraceOperation 027371 (Call (Floc 027380) [Var (Global 85),Var Sp] Sp);
    Let b6 = M[008987];
    Let b7 = M[008988];
    PopStack popped8;
    PushFrame 027371;
    SetLocal 1 MakeHiLo(b6,b7);
    SetLocal 2 popped8;
    JumpCall: 027380, #actuals: 2
  }
LocReturn 027371:
  PushStack call_result;
  TraceOperation 027378 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[70]--------------------------------------------------
LocRoutine 027380:
  MakeRoutineFrame 5;
  if (LessThanByte(num_actuals,5)) {
    SetLocal 5 0;
    if (LessThanByte(num_actuals,4)) {
      SetLocal 4 0;
      if (LessThanByte(num_actuals,3)) {
        SetLocal 3 0;
        if (LessThanByte(num_actuals,2)) {
          SetLocal 2 0;
          if (LessThanByte(num_actuals,1)) {
            SetLocal 1 0;
          }
        }
      }
    }
  }
  Jump: 027391
LocOp 027391:
  TraceOperation 027391 (Loadw (Var (Local 1)) (Var (Global 81)) (Local 3));
  Let b1 = M[008979];
  Let b2 = M[008980];
  Let b3 = M[Offset(Address(GetLocal(1)),Mul(2,MakeHiLo(b1,b2)))];
  Let b4 = M[Offset(Offset(Address(GetLocal(1)),Mul(2,MakeHiLo(b1,b2))),1)];
  SetLocal 3 MakeHiLo(b3,b4);
  TraceOperation 027395 (Jz (Var (Local 3)) (Branch T Dtrue));
  if (IsZero(GetLocal(3))) {
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  } else {
    TraceOperation 027398 (Test (Var (Local 2)) (Con 2) (Branch T (Dloc 027406)));
    if (Equal(And(GetLocal(2),2),2)) {
      Jump: 027406
    } else {
      TraceOperation 027402 (Test (Var (Local 2)) (Con 8) (Branch F Dtrue));
      if (Equal(And(GetLocal(2),8),8)) {
        Jump: 027406
      } else {
        PopFrame return_address_6;
        JumpReturn: return_address_6, result: 1
      }
    }
  }
LocOp 027406:
  TraceOperation 027406 (Dec_chk (Con 3) (Con 0) (Branch T Dtrue));
  if (LessThanEqual(GetLocal(3),0)) {
    SetLocal 3 Sub(GetLocal(3),1);
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 1
  } else {
    SetLocal 3 Sub(GetLocal(3),1);
    TraceOperation 027410 (Add (Var (Local 3)) (Con 1) Sp);
    PushStack Add(GetLocal(3),1);
    TraceOperation 027414 (Loadw (Var (Local 1)) (Var Sp) (Local 4));
    PopStack popped2;
    Let b3 = M[Offset(Address(GetLocal(1)),Mul(2,popped2))];
    Let b4 = M[Offset(Offset(Address(GetLocal(1)),Mul(2,popped2)),1)];
    SetLocal 4 MakeHiLo(b3,b4);
    TraceOperation 027418 (Je [Var (Local 4),Con 12] (Branch F (Dloc 027425)));
    if (Equal(GetLocal(4),12)) {
      TraceOperation 027422 (Store (Con 4) (Var (Global 107)));
      Let b5 = M[009031];
      Let b6 = M[009032];
      SetLocal 4 MakeHiLo(b5,b6);
      Jump: 027425
    } else {
      Jump: 027425
    }
  }
LocOp 027425:
  TraceOperation 027425 (Call (Floc 038124) [Var (Local 4)] Sp);
  PushFrame 027425;
  SetLocal 1 GetLocal(4);
  JumpCall: 038124, #actuals: 1
LocReturn 027425:
  PushStack call_result;
  TraceOperation 027431 (Jz (Var Sp) (Branch F (Dloc 027406)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 027435 (Je [Var (Local 4),Con 1] (Branch T (Dloc 027406)));
    if (Equal(GetLocal(4),1)) {
      Jump: 027406
    } else {
      TraceOperation 027440 (Store (Con 134) (Var (Local 4)));
      SetByte 009053 HiByte(GetLocal(4));
      SetByte 009054 LoByte(GetLocal(4));
      TraceOperation 027443 (Test_attr (Var (Local 4)) (Con 13) (Branch F (Dloc 027453)));
      Let b2 = M[Offset(Offset(000741,Mul(GetLocal(4),9)),1)];
      if (TestBit(b2,2)) {
        TraceOperation 027447 (Store (Con 5) (Con 1));
        SetLocal 5 1;
        TraceOperation 027450 (Jump 027486);
        Jump: 027486
      } else {
        Jump: 027453
      }
    }
  } else {
    Jump: 027406
  }
LocOp 027453:
  TraceOperation 027453 (Je [Var (Global 111),Con 4] (Branch T (Dloc 027463)));
  Let b1 = M[009039];
  Let b2 = M[009040];
  if (Equal(MakeHiLo(b1,b2),4)) {
    Jump: 027463
  } else {
    TraceOperation 027457 (Store (Con 5) (Con 0));
    SetLocal 5 0;
    TraceOperation 027460 (Jump 027486);
    Jump: 027486
  }
LocOp 027463:
  TraceOperation 027463 (Test (Var (Local 2)) (Con 8) (Branch F (Dloc 027483)));
  if (Equal(And(GetLocal(2),8),8)) {
    TraceOperation 027467 (Call (Floc 037108) [Con 0] Sp);
    PushFrame 027467;
    SetLocal 1 0;
    JumpCall: 037108, #actuals: 1
  } else {
    Jump: 027483
  }
LocReturn 027467:
  PushStack call_result;
  TraceOperation 027473 (Je [Var Sp,Con 1] (Branch F (Dloc 027483)));
  PopStack popped1;
  if (Equal(popped1,1)) {
    TraceOperation 027477 (Store (Con 5) (Con 0));
    SetLocal 5 0;
    TraceOperation 027480 (Jump 027486);
    Jump: 027486
  } else {
    Jump: 027483
  }
LocOp 027483:
  TraceOperation 027483 (Store (Con 5) (Con 1));
  SetLocal 5 1;
  Jump: 027486
LocOp 027486:
  TraceOperation 027486 (Jz (Var (Local 5)) (Branch T (Dloc 027522)));
  if (IsZero(GetLocal(5))) {
    Jump: 027522
  } else {
    TraceOperation 027489 (Test (Var (Local 2)) (Con 2) (Branch F (Dloc 027522)));
    if (Equal(And(GetLocal(2),2),2)) {
      TraceOperation 027493 (Je [Var (Local 4),Con 11] (Branch F (Dloc 027508)));
      if (Equal(GetLocal(4),11)) {
        TraceOperation 027497 (Print "You don't have that!");
        GamePrint "You don't have that!";
        TraceOperation 027506 New_line;
        GamePrint "\n";
        TraceOperation 027507 Rfalse;
        PopFrame return_address_1;
        JumpReturn: return_address_1, result: 0
      } else {
        Jump: 027508
      }
    } else {
      Jump: 027522
    }
  }
LocOp 027508:
  TraceOperation 027508 (Print "You don't have the ");
  GamePrint "You don't have the ";
  TraceOperation 027515 (Print_obj (Var (Local 4)));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(4),9)),7)];
  Let b2 = M[Offset(Offset(Offset(000741,Mul(GetLocal(4),9)),7),1)];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  if (IsZeroByte(b3)) {
    GamePrint "";
    TraceOperation 027517 (Print ".");
    GamePrint ".";
    TraceOperation 027520 New_line;
    GamePrint "\n";
    TraceOperation 027521 Rfalse;
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 0
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
    TraceOperation 027517 (Print ".");
    GamePrint ".";
    TraceOperation 027520 New_line;
    GamePrint "\n";
    TraceOperation 027521 Rfalse;
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 0
  }
LocOp 027522:
  TraceOperation 027522 (Jz (Var (Local 5)) (Branch F (Dloc 027406)));
  if (IsZero(GetLocal(5))) {
    TraceOperation 027526 (Je [Var (Global 111),Con 4] (Branch F (Dloc 027406)));
    Let b1 = M[009039];
    Let b2 = M[009040];
    if (Equal(MakeHiLo(b1,b2),4)) {
      TraceOperation 027531 (Print "(Taken)");
      GamePrint "(Taken)";
      TraceOperation 027540 New_line;
      GamePrint "\n";
      TraceOperation 027541 (Jump 027406);
      Jump: 027406
    } else {
      Jump: 027406
    }
  } else {
    Jump: 027406
  }
--[71]--------------------------------------------------
LocRoutine 027544:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 027551
LocOp 027551:
  TraceOperation 027551 (Loadw (Var (Global 86)) (Var (Global 81)) Sp);
  Let b1 = M[008989];
  Let b2 = M[008990];
  Let b3 = M[008979];
  Let b4 = M[008980];
  Let b5 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4)))];
  Let b6 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4))),1)];
  PushStack MakeHiLo(b5,b6);
  TraceOperation 027555 (Jg (Var Sp) (Con 1) (Branch F (Dloc 027573)));
  PopStack popped7;
  if (GreaterThan(popped7,1)) {
    TraceOperation 027559 (Loadb (Var (Global 115)) (Con 5) Sp);
    Let b8 = M[009047];
    Let b9 = M[009048];
    Let b10 = M[Offset(Address(MakeHiLo(b8,b9)),5)];
    PushStack Widen(b10);
    TraceOperation 027563 (Test (Var Sp) (Con 4) (Branch T (Dloc 027573)));
    PopStack popped11;
    if (Equal(And(popped11,4),4)) {
      Jump: 027573
    } else {
      TraceOperation 027567 (Store (Con 1) (Con 1));
      SetLocal 1 1;
      TraceOperation 027570 (Jump 027592);
      Jump: 027592
    }
  } else {
    Jump: 027573
  }
LocOp 027573:
  TraceOperation 027573 (Loadw (Var (Global 85)) (Var (Global 81)) Sp);
  Let b1 = M[008987];
  Let b2 = M[008988];
  Let b3 = M[008979];
  Let b4 = M[008980];
  Let b5 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4)))];
  Let b6 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4))),1)];
  PushStack MakeHiLo(b5,b6);
  TraceOperation 027577 (Jg (Var Sp) (Con 1) (Branch F (Dloc 027592)));
  PopStack popped7;
  if (GreaterThan(popped7,1)) {
    TraceOperation 027581 (Loadb (Var (Global 115)) (Con 6) Sp);
    Let b8 = M[009047];
    Let b9 = M[009048];
    Let b10 = M[Offset(Address(MakeHiLo(b8,b9)),6)];
    PushStack Widen(b10);
    TraceOperation 027585 (Test (Var Sp) (Con 4) (Branch T (Dloc 027592)));
    PopStack popped11;
    if (Equal(And(popped11,4),4)) {
      Jump: 027592
    } else {
      TraceOperation 027589 (Store (Con 1) (Con 2));
      SetLocal 1 2;
      Jump: 027592
    }
  } else {
    Jump: 027592
  }
LocOp 027592:
  TraceOperation 027592 (Jz (Var (Local 1)) (Branch T Dtrue));
  if (IsZero(GetLocal(1))) {
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 1
  } else {
    TraceOperation 027595 (Print "You can't use multiple ");
    GamePrint "You can't use multiple ";
    TraceOperation 027608 (Je [Var (Local 1),Con 2] (Branch F (Dloc 027615)));
    if (Equal(GetLocal(1),2)) {
      TraceOperation 027612 (Print "in");
      GamePrint "in";
      Jump: 027615
    } else {
      Jump: 027615
    }
  }
LocOp 027615:
  TraceOperation 027615 (Print "direct objects with \"");
  GamePrint "direct objects with \"";
  TraceOperation 027630 (Loadw (Var (Global 100)) (Con 1) (Local 2));
  Let b1 = M[009017];
  Let b2 = M[009018];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),2)];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),2),1)];
  SetLocal 2 MakeHiLo(b3,b4);
  TraceOperation 027634 (Jz (Var (Local 2)) (Branch F (Dloc 027645)));
  if (IsZero(GetLocal(2))) {
    TraceOperation 027637 (Print "tell");
    GamePrint "tell";
    TraceOperation 027642 (Jump 027675);
    Jump: 027675
  } else {
    Jump: 027645
  }
LocOp 027645:
  TraceOperation 027645 (Jz (Var (Global 105)) (Branch F (Dloc 027651)));
  Let b1 = M[009027];
  Let b2 = M[009028];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 027648 (Jz (Var (Global 104)) (Branch T (Dloc 027660)));
    Let b3 = M[009025];
    Let b4 = M[009026];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 027660
    } else {
      Jump: 027651
    }
  } else {
    Jump: 027651
  }
LocOp 027651:
  TraceOperation 027651 (Loadw (Var (Local 2)) (Con 0) Sp);
  Let b1 = M[Offset(Address(GetLocal(2)),0)];
  Let b2 = M[Offset(Offset(Address(GetLocal(2)),0),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 027655 (Print_addr (Var Sp));
  PopStack popped3;
  GamePrint GetText(Address(popped3));
  TraceOperation 027657 (Jump 027675);
  Jump: 027675
LocOp 027660:
  TraceOperation 027660 (Loadb (Var (Local 2)) (Con 2) (Local 3));
  Let b1 = M[Offset(Address(GetLocal(2)),2)];
  SetLocal 3 Widen(b1);
  TraceOperation 027664 (Loadb (Var (Local 2)) (Con 3) Sp);
  Let b2 = M[Offset(Address(GetLocal(2)),3)];
  PushStack Widen(b2);
  TraceOperation 027668 (Call (Floc 024538) [Var (Local 3),Var Sp] Sp);
  PopStack popped3;
  PushFrame 027668;
  SetLocal 1 GetLocal(3);
  SetLocal 2 popped3;
  JumpCall: 024538, #actuals: 2
LocReturn 027668:
  PushStack call_result;
  Jump: 027675
LocOp 027675:
  TraceOperation 027675 (Print "\".");
  GamePrint "\".";
  TraceOperation 027680 New_line;
  GamePrint "\n";
  TraceOperation 027681 Rfalse;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 0
--[72]--------------------------------------------------
LocRoutine 027682:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 1;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 -1;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 027691
LocOp 027691:
  TraceOperation 027691 (Jz (Var (Local 2)) (Branch T Dfalse));
  if (IsZero(GetLocal(2))) {
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 0
  } else {
    TraceOperation 027694 (Jl (Var (Local 3)) (Con 0) (Branch T (Dloc 027704)));
    if (LessThan(GetLocal(3),0)) {
      Jump: 027704
    } else {
      TraceOperation 027698 (Store (Con 4) (Con 0));
      SetLocal 4 0;
      TraceOperation 027701 (Jump 027708);
      Jump: 027708
    }
  }
LocOp 027704:
  TraceOperation 027704 (Loadw (Var (Local 2)) (Con 0) (Local 3));
  Let b1 = M[Offset(Address(GetLocal(2)),0)];
  Let b2 = M[Offset(Offset(Address(GetLocal(2)),0),1)];
  SetLocal 3 MakeHiLo(b1,b2);
  Jump: 027708
LocOp 027708:
  TraceOperation 027708 (Loadw (Var (Local 2)) (Var (Local 4)) Sp);
  Let b1 = M[Offset(Address(GetLocal(2)),Mul(2,GetLocal(4)))];
  Let b2 = M[Offset(Offset(Address(GetLocal(2)),Mul(2,GetLocal(4))),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 027712 (Je [Var (Local 1),Var Sp] (Branch T Dtrue));
  PopStack popped3;
  if (Equal(GetLocal(1),popped3)) {
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 1
  } else {
    TraceOperation 027716 (Inc_chk (Con 4) (Var (Local 3)) (Branch F (Dloc 027708)));
    SetLocal 4 Add(GetLocal(4),1);
    if (GreaterThanEqual(GetLocal(4),GetLocal(3))) {
      TraceOperation 027721 Rfalse;
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 0
    } else {
      Jump: 027708
    }
  }
--[73]--------------------------------------------------
LocRoutine 027722:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 027731
LocOp 027731:
  TraceOperation 027731 (Loadb (Var (Local 2)) (Var (Local 4)) Sp);
  Let b1 = M[Offset(Address(GetLocal(2)),GetLocal(4))];
  PushStack Widen(b1);
  TraceOperation 027735 (Je [Var (Local 1),Var Sp] (Branch T Dtrue));
  PopStack popped2;
  if (Equal(GetLocal(1),popped2)) {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    TraceOperation 027739 (Inc_chk (Con 4) (Var (Local 3)) (Branch F (Dloc 027731)));
    SetLocal 4 Add(GetLocal(4),1);
    if (GreaterThanEqual(GetLocal(4),GetLocal(3))) {
      TraceOperation 027744 Rfalse;
      PopFrame return_address_4;
      JumpReturn: return_address_4, result: 0
    } else {
      Jump: 027731
    }
  }
--[74]--------------------------------------------------
LocRoutine 027746:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 1;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 027755
LocOp 027755:
  TraceOperation 027755 (Jz (Var (Global 72)) (Branch T (Dloc 027762)));
  Let b1 = M[008961];
  Let b2 = M[008962];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 027762
  } else {
    TraceOperation 027758 (Je [Var (Global 111),Var (Global 128)] (Branch T Dtrue));
    Let b3 = M[009039];
    Let b4 = M[009040];
    Let b5 = M[009073];
    Let b6 = M[009074];
    if (Equal(MakeHiLo(b3,b4),MakeHiLo(b5,b6))) {
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 1
    } else {
      Jump: 027762
    }
  }
LocOp 027762:
  TraceOperation 027762 (Store (Con 107) (Con 20));
  SetByte 008999 0;
  SetByte 009000 20;
  TraceOperation 027765 (Store (Con 3) (Var (Global 0)));
  Let b1 = M[008817];
  Let b2 = M[008818];
  SetLocal 3 MakeHiLo(b1,b2);
  TraceOperation 027768 (Store (Con 16) (Var (Local 1)));
  SetByte 008817 HiByte(GetLocal(1));
  SetByte 008818 LoByte(GetLocal(1));
  TraceOperation 027771 (Jz (Var (Local 2)) (Branch T (Dloc 027784)));
  if (IsZero(GetLocal(2))) {
    Jump: 027784
  } else {
    TraceOperation 027774 (Test_attr (Var (Local 1)) (Con 20) (Branch F (Dloc 027784)));
    Let b3 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),2)];
    if (TestBit(b3,3)) {
      TraceOperation 027778 (Store (Con 4) (Con 1));
      SetLocal 4 1;
      TraceOperation 027781 (Jump 027844);
      Jump: 027844
    } else {
      Jump: 027784
    }
  }
LocOp 027784:
  TraceOperation 027784 (Storew (Var (Global 83)) (Var (Global 81)) (Con 0));
  Let b1 = M[008983];
  Let b2 = M[008984];
  Let b3 = M[008979];
  Let b4 = M[008980];
  SetByte Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4))) 0;
  SetByte Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4))),1) 0;
  TraceOperation 027789 (Store (Con 133) (Var (Global 83)));
  Let b5 = M[008983];
  Let b6 = M[008984];
  SetByte 009051 b5;
  SetByte 009052 b6;
  TraceOperation 027792 (Store (Con 108) (Con -1));
  SetByte 009001 255;
  SetByte 009002 255;
  TraceOperation 027797 (Je [Var (Local 3),Var (Local 1)] (Branch F (Dloc 027825)));
  if (Equal(GetLocal(3),GetLocal(1))) {
    TraceOperation 027801 (Call (Floc 027166) [Var (Global 111),Con 1,Con 1] Sp);
    Let b7 = M[009039];
    Let b8 = M[009040];
    PushFrame 027801;
    SetLocal 1 MakeHiLo(b7,b8);
    SetLocal 2 1;
    SetLocal 3 1;
    JumpCall: 027166, #actuals: 3
  } else {
    Jump: 027825
  }
LocReturn 027801:
  PushStack call_result;
  TraceOperation 027809 (Je [Var (Global 111),Var (Global 128)] (Branch T (Dloc 027825)));
  Let b1 = M[009039];
  Let b2 = M[009040];
  Let b3 = M[009073];
  Let b4 = M[009074];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    Jump: 027825
  } else {
    TraceOperation 027813 (Jin (Var (Global 128)) (Var (Local 1)) (Branch F (Dloc 027825)));
    Let b5 = M[009073];
    Let b6 = M[009074];
    Let b7 = M[Offset(Offset(000741,Mul(MakeHiLo(b5,b6),9)),4)];
    if (Equal(GetLocal(1),Widen(b7))) {
      TraceOperation 027817 (Call (Floc 027166) [Var (Global 128),Con 1,Con 1] Sp);
      Let b8 = M[009073];
      Let b9 = M[009074];
      PushFrame 027817;
      SetLocal 1 MakeHiLo(b8,b9);
      SetLocal 2 1;
      SetLocal 3 1;
      JumpCall: 027166, #actuals: 3
    } else {
      Jump: 027825
    }
  }
LocReturn 027817:
  PushStack call_result;
  Jump: 027825
LocOp 027825:
  TraceOperation 027825 (Call (Floc 027166) [Var (Local 1),Con 1,Con 1] Sp);
  PushFrame 027825;
  SetLocal 1 GetLocal(1);
  SetLocal 2 1;
  SetLocal 3 1;
  JumpCall: 027166, #actuals: 3
LocReturn 027825:
  PushStack call_result;
  TraceOperation 027833 (Loadw (Var (Global 117)) (Var (Global 81)) Sp);
  Let b1 = M[009051];
  Let b2 = M[009052];
  Let b3 = M[008979];
  Let b4 = M[008980];
  Let b5 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4)))];
  Let b6 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4))),1)];
  PushStack MakeHiLo(b5,b6);
  TraceOperation 027837 (Jg (Var Sp) (Con 0) (Branch F (Dloc 027844)));
  PopStack popped7;
  if (GreaterThan(popped7,0)) {
    TraceOperation 027841 (Store (Con 4) (Con 1));
    SetLocal 4 1;
    Jump: 027844
  } else {
    Jump: 027844
  }
LocOp 027844:
  TraceOperation 027844 (Store (Con 16) (Var (Local 3)));
  SetByte 008817 HiByte(GetLocal(3));
  SetByte 008818 LoByte(GetLocal(3));
  TraceOperation 027847 (Store (Con 107) (Con 0));
  SetByte 008999 0;
  SetByte 009000 0;
  TraceOperation 027850 (Ret (Var (Local 4)));
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: GetLocal(4)
--[75]--------------------------------------------------
LocRoutine 027852:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 027855
LocOp 027855:
  TraceOperation 027855 (Jz (Var (Global 104)) (Branch F (Dloc 027872)));
  Let b1 = M[009025];
  Let b2 = M[009026];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 027858 (Loadw (Var (Global 100)) (Con 6) (Local 1));
    Let b3 = M[009017];
    Let b4 = M[009018];
    Let b5 = M[Offset(Address(MakeHiLo(b3,b4)),12)];
    Let b6 = M[Offset(Offset(Address(MakeHiLo(b3,b4)),12),1)];
    SetLocal 1 MakeHiLo(b5,b6);
    TraceOperation 027862 (Loadw (Var (Local 1)) (Con 0) Sp);
    Let b7 = M[Offset(Address(GetLocal(1)),0)];
    Let b8 = M[Offset(Offset(Address(GetLocal(1)),0),1)];
    PushStack MakeHiLo(b7,b8);
    TraceOperation 027866 (Je [Var Sp,Con 17356] (Branch F (Dloc 027878)));
    PopStack popped9;
    if (Equal(popped9,17356)) {
      Jump: 027872
    } else {
      Jump: 027878
    }
  } else {
    Jump: 027872
  }
LocOp 027872:
  TraceOperation 027872 (Print " ");
  GamePrint " ";
  TraceOperation 027875 (Print_obj (Var (Global 118)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  if (IsZeroByte(b5)) {
    GamePrint "";
    TraceOperation 027877 Rtrue;
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
    TraceOperation 027877 Rtrue;
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 1
  }
LocOp 027878:
  TraceOperation 027878 (Loadw (Var (Global 100)) (Con 7) Sp);
  Let b1 = M[009017];
  Let b2 = M[009018];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),14)];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),14),1)];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 027882 (Call (Floc 025326) [Var (Local 1),Var Sp,Con 0] Sp);
  PopStack popped5;
  PushFrame 027882;
  SetLocal 1 GetLocal(1);
  SetLocal 2 popped5;
  SetLocal 3 0;
  JumpCall: 025326, #actuals: 3
LocReturn 027882:
  PushStack call_result;
  TraceOperation 027890 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[76]--------------------------------------------------
LocRoutine 027892:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 027895
LocOp 027895:
  TraceOperation 027895 (Jz (Var (Global 104)) (Branch F (Dloc 027912)));
  Let b1 = M[009025];
  Let b2 = M[009026];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 027898 (Loadw (Var (Global 100)) (Con 8) (Local 1));
    Let b3 = M[009017];
    Let b4 = M[009018];
    Let b5 = M[Offset(Address(MakeHiLo(b3,b4)),16)];
    Let b6 = M[Offset(Offset(Address(MakeHiLo(b3,b4)),16),1)];
    SetLocal 1 MakeHiLo(b5,b6);
    TraceOperation 027902 (Loadw (Var (Local 1)) (Con 0) Sp);
    Let b7 = M[Offset(Address(GetLocal(1)),0)];
    Let b8 = M[Offset(Offset(Address(GetLocal(1)),0),1)];
    PushStack MakeHiLo(b7,b8);
    TraceOperation 027906 (Je [Var Sp,Con 17356] (Branch F (Dloc 027918)));
    PopStack popped9;
    if (Equal(popped9,17356)) {
      Jump: 027912
    } else {
      Jump: 027918
    }
  } else {
    Jump: 027912
  }
LocOp 027912:
  TraceOperation 027912 (Print " ");
  GamePrint " ";
  TraceOperation 027915 (Print_obj (Var (Global 118)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  if (IsZeroByte(b5)) {
    GamePrint "";
    TraceOperation 027917 Rtrue;
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
    TraceOperation 027917 Rtrue;
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 1
  }
LocOp 027918:
  TraceOperation 027918 (Loadw (Var (Global 100)) (Con 9) Sp);
  Let b1 = M[009017];
  Let b2 = M[009018];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),18)];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),18),1)];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 027922 (Call (Floc 025326) [Var (Local 1),Var Sp,Con 0] Sp);
  PopStack popped5;
  PushFrame 027922;
  SetLocal 1 GetLocal(1);
  SetLocal 2 popped5;
  SetLocal 3 0;
  JumpCall: 025326, #actuals: 3
LocReturn 027922:
  PushStack call_result;
  TraceOperation 027930 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[77]--------------------------------------------------
LocRoutine 027932:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 027941
LocOp 027941:
  TraceOperation 027941 (Test_attr (Var (Local 1)) (Con 7) (Branch T Dfalse));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),0)];
  if (TestBit(b1,0)) {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  } else {
    TraceOperation 027945 (Jz (Var (Global 90)) (Branch T (Dloc 027974)));
    Let b3 = M[008997];
    Let b4 = M[008998];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 027974
    } else {
      TraceOperation 027948 (Get_prop_addr (Var (Local 1)) (Con 18) (Local 3));
      Let b5 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),7)];
      Let b6 = M[Offset(Offset(Offset(000741,Mul(GetLocal(1),9)),7),1)];
      Let b7 = M[Address(MakeHiLo(b5,b6))];
      Error: getPropsA
    }
  }
LocReturn 027963:
  PushStack call_result;
  TraceOperation 027971 (Jz (Var Sp) (Branch T Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  } else {
    Jump: 027974
  }
LocOp 027974:
  TraceOperation 027974 (Jz (Var (Global 89)) (Branch T (Dloc 028002)));
  Let b1 = M[008995];
  Let b2 = M[008996];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 028002
  } else {
    TraceOperation 027977 (Get_prop_addr (Var (Local 1)) (Con 16) (Local 3));
    Let b3 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),7)];
    Let b4 = M[Offset(Offset(Offset(000741,Mul(GetLocal(1),9)),7),1)];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    Error: getPropsA
  }
LocReturn 027991:
  PushStack call_result;
  TraceOperation 027999 (Jz (Var Sp) (Branch T Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  } else {
    Jump: 028002
  }
LocOp 028002:
  TraceOperation 028002 (Jz (Var (Global 91)) (Branch T Dtrue));
  Let b1 = M[008999];
  Let b2 = M[009000];
  if (IsZero(MakeHiLo(b1,b2))) {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    TraceOperation 028005 (Test_attr (Var (Local 1)) (Var (Global 91)) (Branch T Dtrue));
    Let b4 = M[008999];
    Let b5 = M[009000];
    Let b6 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),Div8(MakeHiLo(b4,b5)))];
    if (TestBit(b6,SevenMinus(LoByte(Mod(MakeHiLo(b4,b5),8))))) {
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 1
    } else {
      TraceOperation 028009 Rfalse;
      PopFrame return_address_8;
      JumpReturn: return_address_8, result: 0
    }
  }
--[78]--------------------------------------------------
LocRoutine 028010:
  MakeRoutineFrame 0;
  Jump: 028011
LocOp 028011:
  TraceOperation 028011 (Store (Con 87) (Con 1));
  SetByte 008959 0;
  SetByte 008960 1;
  TraceOperation 028014 (Store (Con 86) (Con 0));
  SetByte 008957 0;
  SetByte 008958 0;
  TraceOperation 028017 (Print_ret "Maximum verbosity.");
  GamePrint "Maximum verbosity.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[79]--------------------------------------------------
LocRoutine 028032:
  MakeRoutineFrame 0;
  Jump: 028033
LocOp 028033:
  TraceOperation 028033 (Store (Con 87) (Con 0));
  SetByte 008959 0;
  SetByte 008960 0;
  TraceOperation 028036 (Store (Con 86) (Con 0));
  SetByte 008957 0;
  SetByte 008958 0;
  TraceOperation 028039 (Print_ret "Brief descriptions.");
  GamePrint "Brief descriptions.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[80]--------------------------------------------------
LocRoutine 028054:
  MakeRoutineFrame 0;
  Jump: 028055
LocOp 028055:
  TraceOperation 028055 (Store (Con 86) (Con 1));
  SetByte 008957 0;
  SetByte 008958 1;
  TraceOperation 028058 (Print_ret "Super-brief descriptions.");
  GamePrint "Super-brief descriptions.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[81]--------------------------------------------------
LocRoutine 028080:
  MakeRoutineFrame 0;
  Jump: 028081
LocOp 028081:
  TraceOperation 028081 (Get_child (Var (Global 111)) Sp (Branch F (Dloc 028092)));
  Let b1 = M[009039];
  Let b2 = M[009040];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),6)];
  PushStack Widen(b3);
  if (IsZero(Widen(b3))) {
    Jump: 028092
  } else {
    TraceOperation 028085 (Call (Floc 036522) [Var (Global 111)] Sp);
    Let b4 = M[009039];
    Let b5 = M[009040];
    PushFrame 028085;
    SetLocal 1 MakeHiLo(b4,b5);
    JumpCall: 036522, #actuals: 1
  }
LocReturn 028085:
  PushStack call_result;
  TraceOperation 028091 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[82]--------------------------------------------------
LocRoutine 028108:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 1;
    }
  }
  Jump: 028113
LocOp 028113:
  TraceOperation 028113 (Call (Floc 066946) [] Sp);
  PushFrame 028113;
  JumpCall: 066946, #actuals: 0
LocReturn 028113:
  PushStack call_result;
  TraceOperation 028118 (Jz (Var (Local 1)) (Branch T (Dloc 028164)));
  if (IsZero(GetLocal(1))) {
    Jump: 028164
  } else {
    TraceOperation 028121 (Print "Do you wish to leave the game? (Y is affirmative): ");
    GamePrint "Do you wish to leave the game? (Y is affirmative): ";
    TraceOperation 028156 (Call (Floc 037084) [] Sp);
    PushFrame 028156;
    JumpCall: 037084, #actuals: 0
  }
LocReturn 028156:
  PushStack call_result;
  TraceOperation 028161 (Jz (Var Sp) (Branch F (Dloc 028167)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 028164
  } else {
    Jump: 028167
  }
LocOp 028164:
  TraceOperation 028164 (Jz (Var (Local 1)) (Branch F (Dloc 028169)));
  if (IsZero(GetLocal(1))) {
    Jump: 028167
  } else {
    Jump: 028169
  }
LocOp 028167:
  TraceOperation 028167 Quit;
  Quit
LocOp 028169:
  TraceOperation 028169 (Print_ret "Ok.");
  GamePrint "Ok.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[83]--------------------------------------------------
LocRoutine 028174:
  MakeRoutineFrame 0;
  Jump: 028175
LocOp 028175:
  TraceOperation 028175 (Call (Floc 066946) [Con 1] Sp);
  PushFrame 028175;
  SetLocal 1 1;
  JumpCall: 066946, #actuals: 1
LocReturn 028175:
  PushStack call_result;
  TraceOperation 028181 (Print "Do you wish to restart? (Y is affirmative): ");
  GamePrint "Do you wish to restart? (Y is affirmative): ";
  TraceOperation 028214 (Call (Floc 037084) [] Sp);
  PushFrame 028214;
  JumpCall: 037084, #actuals: 0
LocReturn 028214:
  PushStack call_result;
  TraceOperation 028219 (Jz (Var Sp) (Branch T Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  } else {
    TraceOperation 028222 (Print "Restarting.");
    GamePrint "Restarting.";
    TraceOperation 028233 New_line;
    GamePrint "\n";
    TraceOperation 028234 Restart;
    Jump: 020229
  }
--[84]--------------------------------------------------
LocRoutine 028242:
  MakeRoutineFrame 0;
  Jump: 028243
LocOp 028243:
  TraceOperation 028243 (Restore (Branch F (Dloc 028257)));
  Note "Restore (Branch F (Dloc 028257))";
  TraceOperation 028245 (Print "Ok.");
  GamePrint "Ok.";
  TraceOperation 028250 New_line;
  GamePrint "\n";
  TraceOperation 028251 (Call (Floc 035976) [] Sp);
  PushFrame 028251;
  JumpCall: 035976, #actuals: 0
LocReturn 028251:
  PushStack call_result;
  TraceOperation 028256 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[85]--------------------------------------------------
LocRoutine 028264:
  MakeRoutineFrame 0;
  Jump: 028265
LocOp 028265:
  TraceOperation 028265 (Save (Branch F (Dloc 028272)));
  Note "Save (Branch F (Dloc 028272))";
  TraceOperation 028267 (Print_ret "Ok.");
  GamePrint "Ok.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[86]--------------------------------------------------
LocRoutine 028280:
  MakeRoutineFrame 0;
  Jump: 028281
LocOp 028281:
  TraceOperation 028281 (Loadw (Con 0) (Con 8) Sp);
  Let b1 = M[000016];
  Let b2 = M[000017];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 028285 (Or (Var Sp) (Con 1) Sp);
  PopStack popped3;
  PushStack Or(popped3,1);
  TraceOperation 028289 (Storew (Con 0) (Con 8) (Var Sp));
  PopStack popped4;
  SetByte 000016 HiByte(popped4);
  SetByte 000017 LoByte(popped4);
  TraceOperation 028294 (Print "Here begins a transcript of interaction with");
  GamePrint "Here begins a transcript of interaction with";
  TraceOperation 028325 New_line;
  GamePrint "\n";
  TraceOperation 028326 (Call (Floc 028384) [] Sp);
  PushFrame 028326;
  JumpCall: 028384, #actuals: 0
LocReturn 028326:
  PushStack call_result;
  TraceOperation 028331 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[87]--------------------------------------------------
LocRoutine 028332:
  MakeRoutineFrame 0;
  Jump: 028333
LocOp 028333:
  TraceOperation 028333 (Print "Here ends a transcript of interaction with");
  GamePrint "Here ends a transcript of interaction with";
  TraceOperation 028362 New_line;
  GamePrint "\n";
  TraceOperation 028363 (Call (Floc 028384) [] Sp);
  PushFrame 028363;
  JumpCall: 028384, #actuals: 0
LocReturn 028363:
  PushStack call_result;
  TraceOperation 028368 (Loadw (Con 0) (Con 8) Sp);
  Let b1 = M[000016];
  Let b2 = M[000017];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 028372 (And (Var Sp) (Con -2) Sp);
  PopStack popped3;
  PushStack And(popped3,-2);
  TraceOperation 028378 (Storew (Con 0) (Con 8) (Var Sp));
  PopStack popped4;
  SetByte 000016 HiByte(popped4);
  SetByte 000017 LoByte(popped4);
  TraceOperation 028383 Rtrue;
  PopFrame return_address_5;
  JumpReturn: return_address_5, result: 1
--[88]--------------------------------------------------
LocRoutine 028384:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 17;
  }
  Jump: 028387
LocOp 028387:
  TraceOperation 028387 (Print "ZORK I: The Great Underground Empire\nCopyright (c) 1981, 1982, 1983 Infocom, Inc. ");
  GamePrint "ZORK I: The Great Underground Empire\nCopyright (c) 1981, 1982, 1983 Infocom, Inc. ";
  TraceOperation 028456 (Print "All rights reserved.");
  GamePrint "All rights reserved.";
  TraceOperation 028473 New_line;
  GamePrint "\n";
  TraceOperation 028474 (Loadb (Con 0) (Con 1) Sp);
  Let b1 = M[000001];
  PushStack Widen(b1);
  TraceOperation 028478 (And (Var Sp) (Con 8) Sp);
  PopStack popped2;
  PushStack And(popped2,8);
  TraceOperation 028482 (Jz (Var Sp) (Branch T (Dloc 028509)));
  PopStack popped3;
  if (IsZero(popped3)) {
    Jump: 028509
  } else {
    TraceOperation 028485 (Print "Licensed to Tandy Corporation.");
    GamePrint "Licensed to Tandy Corporation.";
    TraceOperation 028508 New_line;
    GamePrint "\n";
    Jump: 028509
  }
LocOp 028509:
  TraceOperation 028509 (Print "ZORK is a registered trademark of Infocom, Inc.\nRevision ");
  GamePrint "ZORK is a registered trademark of Infocom, Inc.\nRevision ";
  TraceOperation 028552 (Loadw (Con 0) (Con 1) Sp);
  Let b1 = M[000002];
  Let b2 = M[000003];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 028556 (And (Var Sp) (Con 2047) Sp);
  PopStack popped3;
  PushStack And(popped3,2047);
  TraceOperation 028562 (Print_num (Var Sp));
  PopStack popped4;
  GamePrint ShowNumber(popped4);
  TraceOperation 028565 (Print " / Serial number ");
  GamePrint " / Serial number ";
  Jump: 028580
LocOp 028580:
  TraceOperation 028580 (Inc_chk (Con 1) (Con 23) (Branch F (Dloc 028587)));
  SetLocal 1 Add(GetLocal(1),1);
  if (GreaterThanEqual(GetLocal(1),23)) {
    TraceOperation 028584 (Jump 028597);
    Jump: 028597
  } else {
    Jump: 028587
  }
LocOp 028587:
  TraceOperation 028587 (Loadb (Con 0) (Var (Local 1)) Sp);
  Let b1 = M[Offset(000000,GetLocal(1))];
  PushStack Widen(b1);
  TraceOperation 028591 (Print_char (Var Sp));
  PopStack popped2;
  GamePrint SingleChar(popped2);
  TraceOperation 028594 (Jump 028580);
  Jump: 028580
LocOp 028597:
  TraceOperation 028597 New_line;
  GamePrint "\n";
  TraceOperation 028598 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[89]--------------------------------------------------
LocRoutine 028600:
  MakeRoutineFrame 0;
  Jump: 028601
LocOp 028601:
  TraceOperation 028601 (Print "Verifying disk...");
  GamePrint "Verifying disk...";
  TraceOperation 028616 New_line;
  GamePrint "\n";
  TraceOperation 028617 (Verify (Branch F (Dloc 028632)));
  Note "Verify (Branch F (Dloc 028632))";
  TraceOperation 028619 (Print_ret "The disk is correct.");
  GamePrint "The disk is correct.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[90]--------------------------------------------------
LocRoutine 028656:
  MakeRoutineFrame 0;
  Jump: 028657
LocOp 028657:
  TraceOperation 028657 (Print_ret "A hollow voice says \"Fool.\"");
  GamePrint "A hollow voice says \"Fool.\"\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[91]--------------------------------------------------
LocRoutine 028680:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 028683
LocOp 028683:
  TraceOperation 028683 (Je [Var (Global 126),Con 137] (Branch F (Dloc 028695)));
  Let b1 = M[009069];
  Let b2 = M[009070];
  if (Equal(MakeHiLo(b1,b2),137)) {
    TraceOperation 028687 (Call (Floc 022396) [Var (Global 126),Var (Global 125)] Sp);
    Let b3 = M[009069];
    Let b4 = M[009070];
    Let b5 = M[009067];
    Let b6 = M[009068];
    PushFrame 028687;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 MakeHiLo(b5,b6);
    JumpCall: 022396, #actuals: 2
  } else {
    Jump: 028695
  }
LocReturn 028687:
  PushStack call_result;
  TraceOperation 028694 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 028695:
  TraceOperation 028695 (Jz (Var (Global 125)) (Branch T (Dloc 028711)));
  Let b1 = M[009067];
  Let b2 = M[009068];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 028711
  } else {
    TraceOperation 028698 (Get_parent (Var (Global 125)) Sp);
    Let b3 = M[009067];
    Let b4 = M[009068];
    Let b5 = M[Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),4)];
    PushStack Widen(b5);
    TraceOperation 028701 (Jz (Var Sp) (Branch T (Dloc 028708)));
    PopStack popped6;
    if (IsZero(popped6)) {
      Jump: 028708
    } else {
      TraceOperation 028704 (Test_attr (Var (Global 125)) (Con 7) (Branch F (Dloc 028711)));
      Let b7 = M[009067];
      Let b8 = M[009068];
      Let b9 = M[Offset(Offset(000741,Mul(MakeHiLo(b7,b8),9)),0)];
      if (TestBit(b9,0)) {
        Jump: 028708
      } else {
        Jump: 028711
      }
    }
  }
LocOp 028708:
  TraceOperation 028708 (Store (Con 1) (Var (Global 125)));
  Let b1 = M[009067];
  Let b2 = M[009068];
  SetLocal 1 MakeHiLo(b1,b2);
  Jump: 028711
LocOp 028711:
  TraceOperation 028711 (Jz (Var (Global 124)) (Branch T (Dloc 028727)));
  Let b1 = M[009065];
  Let b2 = M[009066];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 028727
  } else {
    TraceOperation 028714 (Get_parent (Var (Global 124)) Sp);
    Let b3 = M[009065];
    Let b4 = M[009066];
    Let b5 = M[Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),4)];
    PushStack Widen(b5);
    TraceOperation 028717 (Jz (Var Sp) (Branch T (Dloc 028724)));
    PopStack popped6;
    if (IsZero(popped6)) {
      Jump: 028724
    } else {
      TraceOperation 028720 (Test_attr (Var (Global 124)) (Con 7) (Branch F (Dloc 028727)));
      Let b7 = M[009065];
      Let b8 = M[009066];
      Let b9 = M[Offset(Offset(000741,Mul(MakeHiLo(b7,b8),9)),0)];
      if (TestBit(b9,0)) {
        Jump: 028724
      } else {
        Jump: 028727
      }
    }
  }
LocOp 028724:
  TraceOperation 028724 (Store (Con 1) (Var (Global 124)));
  Let b1 = M[009065];
  Let b2 = M[009066];
  SetLocal 1 MakeHiLo(b1,b2);
  Jump: 028727
LocOp 028727:
  TraceOperation 028727 (Jz (Var (Local 1)) (Branch T (Dloc 028759)));
  if (IsZero(GetLocal(1))) {
    Jump: 028759
  } else {
    TraceOperation 028730 (Je [Var (Local 1),Con 13,Con 82] (Branch T (Dloc 028759)));
    if (LogOr(Equal(GetLocal(1),13),Equal(GetLocal(1),82))) {
      Jump: 028759
    } else {
      TraceOperation 028736 (Print "You can't see the ");
      GamePrint "You can't see the ";
      TraceOperation 028745 (Print_obj (Var (Local 1)));
      Let b1 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),7)];
      Let b2 = M[Offset(Offset(Offset(000741,Mul(GetLocal(1),9)),7),1)];
      Let b3 = M[Address(MakeHiLo(b1,b2))];
      if (IsZeroByte(b3)) {
        GamePrint "";
        TraceOperation 028747 (Print " anymore.");
        GamePrint " anymore.";
        TraceOperation 028756 New_line;
        GamePrint "\n";
        TraceOperation 028757 (Ret (Con 2));
        PopFrame return_address_4;
        JumpReturn: return_address_4, result: 2
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
        TraceOperation 028747 (Print " anymore.");
        GamePrint " anymore.";
        TraceOperation 028756 New_line;
        GamePrint "\n";
        TraceOperation 028757 (Ret (Con 2));
        PopFrame return_address_5;
        JumpReturn: return_address_5, result: 2
      }
    }
  }
LocOp 028759:
  TraceOperation 028759 (Call (Floc 022396) [Var (Global 126),Var (Global 125),Var (Global 124)] Sp);
  Let b1 = M[009069];
  Let b2 = M[009070];
  Let b3 = M[009067];
  Let b4 = M[009068];
  Let b5 = M[009065];
  Let b6 = M[009066];
  PushFrame 028759;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 MakeHiLo(b3,b4);
  SetLocal 3 MakeHiLo(b5,b6);
  JumpCall: 022396, #actuals: 3
LocReturn 028759:
  PushStack call_result;
  TraceOperation 028767 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[92]--------------------------------------------------
LocRoutine 028768:
  MakeRoutineFrame 0;
  Jump: 028769
LocOp 028769:
  TraceOperation 028769 (Test_attr (Var (Global 118)) (Con 30) (Branch F (Dloc 028843)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),3)];
  if (TestBit(b3,1)) {
    TraceOperation 028774 (Get_prop (Var (Global 118)) (Con 7) Sp);
    Let b4 = M[009053];
    Let b5 = M[009054];
    Let b6 = M[Offset(Offset(000741,Mul(MakeHiLo(b4,b5),9)),7)];
    Let b7 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b4,b5),9)),7),1)];
    Let b8 = M[Address(MakeHiLo(b6,b7))];
    Error: getPropsA
  } else {
    Jump: 028843
  }
LocReturn 028803:
  PushStack call_result;
  TraceOperation 028809 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 028810:
  TraceOperation 028810 (Print_ret "He's wide awake, or haven't you noticed...");
  GamePrint "He's wide awake, or haven't you noticed...\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 028843:
  TraceOperation 028843 (Print "The ");
  GamePrint "The ";
  TraceOperation 028846 (Print_obj (Var (Global 118)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  if (IsZeroByte(b5)) {
    GamePrint "";
    TraceOperation 028848 (Print_ret " isn't sleeping.");
    GamePrint " isn't sleeping.\n";
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
    TraceOperation 028848 (Print_ret " isn't sleeping.");
    GamePrint " isn't sleeping.\n";
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 1
  }
--[93]--------------------------------------------------
LocRoutine 028862:
  MakeRoutineFrame 0;
  Jump: 028863
LocOp 028863:
  TraceOperation 028863 (Print "Nobody seems to be awaiting your answer.");
  GamePrint "Nobody seems to be awaiting your answer.";
  TraceOperation 028886 New_line;
  GamePrint "\n";
  TraceOperation 028887 (Store (Con 124) (Con 0));
  SetByte 009033 0;
  SetByte 009034 0;
  TraceOperation 028890 (Store (Con 112) (Con 0));
  SetByte 009009 0;
  SetByte 009010 0;
  TraceOperation 028893 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[94]--------------------------------------------------
LocRoutine 028894:
  MakeRoutineFrame 0;
  Jump: 028895
LocOp 028895:
  TraceOperation 028895 (Test_attr (Var (Global 118)) (Con 30) (Branch T (Dloc 028933)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),3)];
  if (TestBit(b3,1)) {
    Jump: 028933
  } else {
    TraceOperation 028899 (Print "I've known strange people, but fighting a ");
    GamePrint "I've known strange people, but fighting a ";
    TraceOperation 028928 (Print_obj (Var (Global 118)));
    Let b4 = M[009053];
    Let b5 = M[009054];
    Let b6 = M[Offset(Offset(000741,Mul(MakeHiLo(b4,b5),9)),7)];
    Let b7 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b4,b5),9)),7),1)];
    Let b8 = M[Address(MakeHiLo(b6,b7))];
    if (IsZeroByte(b8)) {
      GamePrint "";
      TraceOperation 028930 (Print_ret "?");
      GamePrint "?\n";
      PopFrame return_address_9;
      JumpReturn: return_address_9, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b6,b7)),1));
      TraceOperation 028930 (Print_ret "?");
      GamePrint "?\n";
      PopFrame return_address_10;
      JumpReturn: return_address_10, result: 1
    }
  }
LocOp 028933:
  TraceOperation 028933 (Jz (Var (Global 119)) (Branch T (Dloc 028940)));
  Let b1 = M[009055];
  Let b2 = M[009056];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 028940
  } else {
    TraceOperation 028936 (Je [Var (Global 119),Con 1] (Branch F (Dloc 028976)));
    Let b3 = M[009055];
    Let b4 = M[009056];
    if (Equal(MakeHiLo(b3,b4),1)) {
      Jump: 028940
    } else {
      Jump: 028976
    }
  }
LocOp 028940:
  TraceOperation 028940 (Print "Trying to attack a ");
  GamePrint "Trying to attack a ";
  TraceOperation 028955 (Print_obj (Var (Global 118)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  if (IsZeroByte(b5)) {
    GamePrint "";
    TraceOperation 028957 (Print_ret " with your bare hands is suicidal.");
    GamePrint " with your bare hands is suicidal.\n";
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
    TraceOperation 028957 (Print_ret " with your bare hands is suicidal.");
    GamePrint " with your bare hands is suicidal.\n";
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 1
  }
LocOp 028976:
  TraceOperation 028976 (Jin (Var (Global 119)) (Var (Global 111)) (Branch T (Dloc 029004)));
  Let b1 = M[009055];
  Let b2 = M[009056];
  Let b3 = M[009039];
  Let b4 = M[009040];
  Let b5 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),4)];
  if (Equal(MakeHiLo(b3,b4),Widen(b5))) {
    Jump: 029004
  } else {
    TraceOperation 028980 (Print "You aren't even holding the ");
    GamePrint "You aren't even holding the ";
    TraceOperation 028999 (Print_obj (Var (Global 119)));
    Let b6 = M[009055];
    Let b7 = M[009056];
    Let b8 = M[Offset(Offset(000741,Mul(MakeHiLo(b6,b7),9)),7)];
    Let b9 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b6,b7),9)),7),1)];
    Let b10 = M[Address(MakeHiLo(b8,b9))];
    if (IsZeroByte(b10)) {
      GamePrint "";
      TraceOperation 029001 (Print_ret ".");
      GamePrint ".\n";
      PopFrame return_address_11;
      JumpReturn: return_address_11, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b8,b9)),1));
      TraceOperation 029001 (Print_ret ".");
      GamePrint ".\n";
      PopFrame return_address_12;
      JumpReturn: return_address_12, result: 1
    }
  }
--[95]--------------------------------------------------
LocRoutine 029020:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 -32603;
  }
  Jump: 029023
LocOp 029023:
  TraceOperation 029023 (Print_obj (Var (Global 118)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  if (IsZeroByte(b5)) {
    GamePrint "";
    TraceOperation 029025 (Print " with a ");
    GamePrint " with a ";
    TraceOperation 029030 (Print_obj (Var (Global 119)));
    Let b6 = M[009055];
    Let b7 = M[009056];
    Let b8 = M[Offset(Offset(000741,Mul(MakeHiLo(b6,b7),9)),7)];
    Let b9 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b6,b7),9)),7),1)];
    Let b10 = M[Address(MakeHiLo(b8,b9))];
    if (IsZeroByte(b10)) {
      GamePrint "";
      TraceOperation 029032 (Print_ret " is suicidal.");
      GamePrint " is suicidal.\n";
      PopFrame return_address_11;
      JumpReturn: return_address_11, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b8,b9)),1));
      TraceOperation 029032 (Print_ret " is suicidal.");
      GamePrint " is suicidal.\n";
      PopFrame return_address_12;
      JumpReturn: return_address_12, result: 1
    }
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
    TraceOperation 029025 (Print " with a ");
    GamePrint " with a ";
    TraceOperation 029030 (Print_obj (Var (Global 119)));
    Let b13 = M[009055];
    Let b14 = M[009056];
    Let b15 = M[Offset(Offset(000741,Mul(MakeHiLo(b13,b14),9)),7)];
    Let b16 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b13,b14),9)),7),1)];
    Let b17 = M[Address(MakeHiLo(b15,b16))];
    if (IsZeroByte(b17)) {
      GamePrint "";
      TraceOperation 029032 (Print_ret " is suicidal.");
      GamePrint " is suicidal.\n";
      PopFrame return_address_18;
      JumpReturn: return_address_18, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b15,b16)),1));
      TraceOperation 029032 (Print_ret " is suicidal.");
      GamePrint " is suicidal.\n";
      PopFrame return_address_19;
      JumpReturn: return_address_19, result: 1
    }
  }
--[96]--------------------------------------------------
LocRoutine 029050:
  MakeRoutineFrame 0;
  Jump: 029051
LocOp 029051:
  TraceOperation 029051 (Print_ret "Sorry, my memory is poor. Please give a direction.");
  GamePrint "Sorry, my memory is poor. Please give a direction.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[97]--------------------------------------------------
LocRoutine 029088:
  MakeRoutineFrame 0;
  Jump: 029089
LocOp 029089:
  TraceOperation 029089 (Print_ret "You can't blast anything by using words.");
  GamePrint "You can't blast anything by using words.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[98]--------------------------------------------------
LocRoutine 029114:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 029117
LocOp 029117:
  TraceOperation 029117 (Get_parent (Var (Global 111)) (Local 1));
  Let b1 = M[009039];
  Let b2 = M[009040];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),4)];
  SetLocal 1 Widen(b3);
  TraceOperation 029120 (Call (Floc 020688) [] Sp);
  PushFrame 029120;
  JumpCall: 020688, #actuals: 0
LocReturn 029120:
  PushStack call_result;
  TraceOperation 029125 (Jz (Var Sp) (Branch F Dtrue));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 029128 (Test_attr (Var (Global 118)) (Con 27) (Branch F (Dloc 029184)));
    Let b2 = M[009053];
    Let b3 = M[009054];
    Let b4 = M[Offset(Offset(000741,Mul(MakeHiLo(b2,b3),9)),3)];
    if (TestBit(b4,4)) {
      TraceOperation 029132 (Jin (Var (Global 118)) (Var (Global 0)) (Branch T (Dloc 029163)));
      Let b5 = M[009053];
      Let b6 = M[009054];
      Let b7 = M[008817];
      Let b8 = M[008818];
      Let b9 = M[Offset(Offset(000741,Mul(MakeHiLo(b5,b6),9)),4)];
      if (Equal(MakeHiLo(b7,b8),Widen(b9))) {
        Jump: 029163
      } else {
        TraceOperation 029136 (Print "The ");
        GamePrint "The ";
        TraceOperation 029139 (Print_obj (Var (Global 118)));
        Let b10 = M[009053];
        Let b11 = M[009054];
        Let b12 = M[Offset(Offset(000741,Mul(MakeHiLo(b10,b11),9)),7)];
        Let b13 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b10,b11),9)),7),1)];
        Let b14 = M[Address(MakeHiLo(b12,b13))];
        if (IsZeroByte(b14)) {
          GamePrint "";
          TraceOperation 029141 (Print " must be on the ground to be boarded.");
          GamePrint " must be on the ground to be boarded.";
          TraceOperation 029160 New_line;
          GamePrint "\n";
          TraceOperation 029161 (Ret (Con 2));
          PopFrame return_address_15;
          JumpReturn: return_address_15, result: 2
        } else {
          GamePrint GetText(Offset(Address(MakeHiLo(b12,b13)),1));
          TraceOperation 029141 (Print " must be on the ground to be boarded.");
          GamePrint " must be on the ground to be boarded.";
          TraceOperation 029160 New_line;
          GamePrint "\n";
          TraceOperation 029161 (Ret (Con 2));
          PopFrame return_address_16;
          JumpReturn: return_address_16, result: 2
        }
      }
    } else {
      Jump: 029184
    }
  } else {
    PopFrame return_address_17;
    JumpReturn: return_address_17, result: 1
  }
--[99]--------------------------------------------------
LocRoutine 029164:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 6976;
  }
  Jump: 029167
LocOp 029167:
  TraceOperation 029167 (Print "You are already in the ");
  GamePrint "You are already in the ";
  TraceOperation 029176 (Print_obj (Var (Local 1)));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),7)];
  Let b2 = M[Offset(Offset(Offset(000741,Mul(GetLocal(1),9)),7),1)];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  if (IsZeroByte(b3)) {
    GamePrint "";
    TraceOperation 029178 (Print "!");
    GamePrint "!";
    TraceOperation 029181 New_line;
    GamePrint "\n";
    TraceOperation 029182 (Ret (Con 2));
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 2
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
    TraceOperation 029178 (Print "!");
    GamePrint "!";
    TraceOperation 029181 New_line;
    GamePrint "\n";
    TraceOperation 029182 (Ret (Con 2));
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 2
  }
--[100]--------------------------------------------------
LocRoutine 029208:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 -23109;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 -18282;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 -4838;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 29994;
        }
      }
    }
  }
  Jump: 029217
LocOp 029217:
  TraceOperation 029217 (Ret (Con 2));
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 2
--[101]--------------------------------------------------
LocRoutine 029220:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 029223
LocOp 029223:
  TraceOperation 029223 (Print "You are now in the ");
  GamePrint "You are now in the ";
  TraceOperation 029232 (Print_obj (Var (Global 118)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  if (IsZeroByte(b5)) {
    GamePrint "";
    TraceOperation 029234 (Print ".");
    GamePrint ".";
    TraceOperation 029237 New_line;
    GamePrint "\n";
    TraceOperation 029238 (Insert_obj (Var (Global 111)) (Var (Global 118)));
    Let b6 = M[009039];
    Let b7 = M[009040];
    Let b8 = M[009053];
    Let b9 = M[009054];
    Let b10 = M[Offset(Offset(000741,Mul(MakeHiLo(b6,b7),9)),4)];
    if (IsZero(Widen(b10))) {
      SetByte Offset(Offset(000741,Mul(MakeHiLo(b6,b7),9)),4) b9;
      Let b11 = M[Offset(Offset(000741,Mul(MakeHiLo(b8,b9),9)),6)];
      SetByte Offset(Offset(000741,Mul(MakeHiLo(b6,b7),9)),5) LoByte(Widen(b11));
      SetByte Offset(Offset(000741,Mul(MakeHiLo(b8,b9),9)),6) b7;
      TraceOperation 029241 (Get_prop (Var (Global 118)) (Con 17) Sp);
      Let b12 = M[009053];
      Let b13 = M[009054];
      Let b14 = M[Offset(Offset(000741,Mul(MakeHiLo(b12,b13),9)),7)];
      Let b15 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b12,b13),9)),7),1)];
      Let b16 = M[Address(MakeHiLo(b14,b15))];
      Error: getPropsA
    } else {
      Let b17 = M[Offset(Offset(000741,Mul(Widen(b10),9)),6)];
      if (Equal(Widen(b17),MakeHiLo(b6,b7))) {
        Let b18 = M[Offset(Offset(000741,Mul(MakeHiLo(b6,b7),9)),5)];
        SetByte Offset(Offset(000741,Mul(Widen(b10),9)),6) LoByte(Widen(b18));
        SetByte Offset(Offset(000741,Mul(MakeHiLo(b6,b7),9)),4) b9;
        Let b19 = M[Offset(Offset(000741,Mul(MakeHiLo(b8,b9),9)),6)];
        SetByte Offset(Offset(000741,Mul(MakeHiLo(b6,b7),9)),5) LoByte(Widen(b19));
        SetByte Offset(Offset(000741,Mul(MakeHiLo(b8,b9),9)),6) b7;
        TraceOperation 029241 (Get_prop (Var (Global 118)) (Con 17) Sp);
        Let b20 = M[009053];
        Let b21 = M[009054];
        Let b22 = M[Offset(Offset(000741,Mul(MakeHiLo(b20,b21),9)),7)];
        Let b23 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b20,b21),9)),7),1)];
        Let b24 = M[Address(MakeHiLo(b22,b23))];
        Error: getPropsA
      } else {
        Error: unlink/loop
      }
    }
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
    TraceOperation 029234 (Print ".");
    GamePrint ".";
    TraceOperation 029237 New_line;
    GamePrint "\n";
    TraceOperation 029238 (Insert_obj (Var (Global 111)) (Var (Global 118)));
    Let b25 = M[009039];
    Let b26 = M[009040];
    Let b27 = M[009053];
    Let b28 = M[009054];
    Let b29 = M[Offset(Offset(000741,Mul(MakeHiLo(b25,b26),9)),4)];
    if (IsZero(Widen(b29))) {
      SetByte Offset(Offset(000741,Mul(MakeHiLo(b25,b26),9)),4) b28;
      Let b30 = M[Offset(Offset(000741,Mul(MakeHiLo(b27,b28),9)),6)];
      SetByte Offset(Offset(000741,Mul(MakeHiLo(b25,b26),9)),5) LoByte(Widen(b30));
      SetByte Offset(Offset(000741,Mul(MakeHiLo(b27,b28),9)),6) b26;
      TraceOperation 029241 (Get_prop (Var (Global 118)) (Con 17) Sp);
      Let b31 = M[009053];
      Let b32 = M[009054];
      Let b33 = M[Offset(Offset(000741,Mul(MakeHiLo(b31,b32),9)),7)];
      Let b34 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b31,b32),9)),7),1)];
      Let b35 = M[Address(MakeHiLo(b33,b34))];
      Error: getPropsA
    } else {
      Let b36 = M[Offset(Offset(000741,Mul(Widen(b29),9)),6)];
      if (Equal(Widen(b36),MakeHiLo(b25,b26))) {
        Let b37 = M[Offset(Offset(000741,Mul(MakeHiLo(b25,b26),9)),5)];
        SetByte Offset(Offset(000741,Mul(Widen(b29),9)),6) LoByte(Widen(b37));
        SetByte Offset(Offset(000741,Mul(MakeHiLo(b25,b26),9)),4) b28;
        Let b38 = M[Offset(Offset(000741,Mul(MakeHiLo(b27,b28),9)),6)];
        SetByte Offset(Offset(000741,Mul(MakeHiLo(b25,b26),9)),5) LoByte(Widen(b38));
        SetByte Offset(Offset(000741,Mul(MakeHiLo(b27,b28),9)),6) b26;
        TraceOperation 029241 (Get_prop (Var (Global 118)) (Con 17) Sp);
        Let b39 = M[009053];
        Let b40 = M[009054];
        Let b41 = M[Offset(Offset(000741,Mul(MakeHiLo(b39,b40),9)),7)];
        Let b42 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b39,b40),9)),7),1)];
        Let b43 = M[Address(MakeHiLo(b41,b42))];
        Error: getPropsA
      } else {
        Error: unlink/loop
      }
    }
  }
LocReturn 029245:
  PushStack call_result;
  TraceOperation 029250 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[102]--------------------------------------------------
LocRoutine 029252:
  MakeRoutineFrame 0;
  Jump: 029253
LocOp 029253:
  TraceOperation 029253 (Call (Floc 022396) [Con 23,Var (Global 118),Con 6] Sp);
  Let b1 = M[009053];
  Let b2 = M[009054];
  PushFrame 029253;
  SetLocal 1 23;
  SetLocal 2 MakeHiLo(b1,b2);
  SetLocal 3 6;
  JumpCall: 022396, #actuals: 3
LocReturn 029253:
  PushStack call_result;
  TraceOperation 029261 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[103]--------------------------------------------------
LocRoutine 029262:
  MakeRoutineFrame 0;
  Jump: 029263
LocOp 029263:
  TraceOperation 029263 (Print_ret "If you wish, but heaven only knows why.");
  GamePrint "If you wish, but heaven only knows why.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[104]--------------------------------------------------
LocRoutine 029290:
  MakeRoutineFrame 0;
  Jump: 029291
LocOp 029291:
  TraceOperation 029291 (Print_ret "Bug? Not in a flawless program like this! (Cough, cough).");
  GamePrint "Bug? Not in a flawless program like this! (Cough, cough).\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[105]--------------------------------------------------
LocRoutine 029336:
  MakeRoutineFrame 0;
  Jump: 029337
LocOp 029337:
  TraceOperation 029337 (Test_attr (Var (Global 119)) (Con 25) (Branch F (Dloc 029345)));
  Let b1 = M[009055];
  Let b2 = M[009056];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),3)];
  if (TestBit(b3,6)) {
    TraceOperation 029341 (Test_attr (Var (Global 119)) (Con 20) (Branch T Dfalse));
    Let b4 = M[009055];
    Let b5 = M[009056];
    Let b6 = M[Offset(Offset(000741,Mul(MakeHiLo(b4,b5),9)),2)];
    if (TestBit(b6,3)) {
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 0
    } else {
      Jump: 029345
    }
  } else {
    Jump: 029345
  }
LocOp 029345:
  TraceOperation 029345 (Print "With a ");
  GamePrint "With a ";
  TraceOperation 029352 (Print_obj (Var (Global 119)));
  Let b1 = M[009055];
  Let b2 = M[009056];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  if (IsZeroByte(b5)) {
    GamePrint "";
    TraceOperation 029354 (Print_ret "??!?");
    GamePrint "??!?\n";
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
    TraceOperation 029354 (Print_ret "??!?");
    GamePrint "??!?\n";
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 1
  }
--[106]--------------------------------------------------
LocRoutine 029362:
  MakeRoutineFrame 0;
  Jump: 029363
LocOp 029363:
  TraceOperation 029363 (Call (Floc 020688) [] Sp);
  PushFrame 029363;
  JumpCall: 020688, #actuals: 0
LocReturn 029363:
  PushStack call_result;
  TraceOperation 029368 (Jz (Var Sp) (Branch F Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 029371 (Test_attr (Var (Global 118)) (Con 26) (Branch F (Dloc 029471)));
    Let b2 = M[009053];
    Let b3 = M[009054];
    Let b4 = M[Offset(Offset(000741,Mul(MakeHiLo(b2,b3),9)),3)];
    if (TestBit(b4,5)) {
      TraceOperation 029376 (Jin (Var (Global 118)) (Var (Global 111)) (Branch T (Dloc 029384)));
      Let b5 = M[009053];
      Let b6 = M[009054];
      Let b7 = M[009039];
      Let b8 = M[009040];
      Let b9 = M[Offset(Offset(000741,Mul(MakeHiLo(b5,b6),9)),4)];
      if (Equal(MakeHiLo(b7,b8),Widen(b9))) {
        TraceOperation 029384 (Call (Floc 030906) [Var (Global 118)] Sp);
        Let b10 = M[009053];
        Let b11 = M[009054];
        PushFrame 029384;
        SetLocal 1 MakeHiLo(b10,b11);
        JumpCall: 030906, #actuals: 1
      } else {
        TraceOperation 029380 (Jin (Var (Global 111)) (Var (Global 118)) (Branch F (Dloc 029439)));
        Let b12 = M[009039];
        Let b13 = M[009040];
        Let b14 = M[009053];
        Let b15 = M[009054];
        Let b16 = M[Offset(Offset(000741,Mul(MakeHiLo(b12,b13),9)),4)];
        if (Equal(MakeHiLo(b14,b15),Widen(b16))) {
          TraceOperation 029384 (Call (Floc 030906) [Var (Global 118)] Sp);
          Let b17 = M[009053];
          Let b18 = M[009054];
          PushFrame 029384;
          SetLocal 1 MakeHiLo(b17,b18);
          JumpCall: 030906, #actuals: 1
        } else {
          Jump: 029439
        }
      }
    } else {
      Jump: 029471
    }
  } else {
    PopFrame return_address_19;
    JumpReturn: return_address_19, result: 0
  }
LocReturn 029384:
  PushStack call_result;
  TraceOperation 029390 (Print "The ");
  GamePrint "The ";
  TraceOperation 029393 (Print_obj (Var (Global 118)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  if (IsZeroByte(b5)) {
    GamePrint "";
    TraceOperation 029395 (Print " catches fire. Unfortunately, you were ");
    GamePrint " catches fire. Unfortunately, you were ";
    TraceOperation 029414 (Jin (Var (Global 111)) (Var (Global 118)) (Branch F (Dloc 029424)));
    Let b6 = M[009039];
    Let b7 = M[009040];
    Let b8 = M[009053];
    Let b9 = M[009054];
    Let b10 = M[Offset(Offset(000741,Mul(MakeHiLo(b6,b7),9)),4)];
    if (Equal(MakeHiLo(b8,b9),Widen(b10))) {
      TraceOperation 029418 (Print "in");
      GamePrint "in";
      TraceOperation 029421 (Jump 029431);
      Jump: 029431
    } else {
      Jump: 029424
    }
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
    TraceOperation 029395 (Print " catches fire. Unfortunately, you were ");
    GamePrint " catches fire. Unfortunately, you were ";
    TraceOperation 029414 (Jin (Var (Global 111)) (Var (Global 118)) (Branch F (Dloc 029424)));
    Let b11 = M[009039];
    Let b12 = M[009040];
    Let b13 = M[009053];
    Let b14 = M[009054];
    Let b15 = M[Offset(Offset(000741,Mul(MakeHiLo(b11,b12),9)),4)];
    if (Equal(MakeHiLo(b13,b14),Widen(b15))) {
      TraceOperation 029418 (Print "in");
      GamePrint "in";
      TraceOperation 029421 (Jump 029431);
      Jump: 029431
    } else {
      Jump: 029424
    }
  }
--[107]--------------------------------------------------
LocRoutine 029444:
  MakeRoutineFrame 0;
  Jump: 029445
LocOp 029445:
  TraceOperation 029445 (Print "The ");
  GamePrint "The ";
  TraceOperation 029448 (Print_obj (Var (Global 118)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  if (IsZeroByte(b5)) {
    GamePrint "";
    TraceOperation 029450 (Print_ret " catches fire and is consumed.");
    GamePrint " catches fire and is consumed.\n";
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
    TraceOperation 029450 (Print_ret " catches fire and is consumed.");
    GamePrint " catches fire and is consumed.\n";
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 1
  }
--[108]--------------------------------------------------
LocRoutine 029486:
  MakeRoutineFrame 0;
  Jump: 029487
LocOp 029487:
  TraceOperation 029487 (Print_ret "Preposterous!");
  GamePrint "Preposterous!\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[109]--------------------------------------------------
LocRoutine 029498:
  MakeRoutineFrame 0;
  Jump: 029499
LocOp 029499:
  TraceOperation 029499 (Call (Floc 029550) [Con 22,Var (Global 118)] Sp);
  Let b1 = M[009053];
  Let b2 = M[009054];
  PushFrame 029499;
  SetLocal 1 22;
  SetLocal 2 MakeHiLo(b1,b2);
  JumpCall: 029550, #actuals: 2
LocReturn 029499:
  PushStack call_result;
  TraceOperation 029506 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[110]--------------------------------------------------
LocRoutine 029508:
  MakeRoutineFrame 0;
  Jump: 029509
LocOp 029509:
  TraceOperation 029509 (Call (Floc 029550) [Con 23,Var (Global 118)] Sp);
  Let b1 = M[009053];
  Let b2 = M[009054];
  PushFrame 029509;
  SetLocal 1 23;
  SetLocal 2 MakeHiLo(b1,b2);
  JumpCall: 029550, #actuals: 2
LocReturn 029509:
  PushStack call_result;
  TraceOperation 029516 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[111]--------------------------------------------------
LocRoutine 029518:
  MakeRoutineFrame 0;
  Jump: 029519
LocOp 029519:
  TraceOperation 029519 (Test_attr (Var (Global 118)) (Con 27) (Branch F (Dloc 029531)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),3)];
  if (TestBit(b3,4)) {
    TraceOperation 029523 (Call (Floc 022396) [Con 25,Var (Global 118)] Sp);
    Let b4 = M[009053];
    Let b5 = M[009054];
    PushFrame 029523;
    SetLocal 1 25;
    SetLocal 2 MakeHiLo(b4,b5);
    JumpCall: 022396, #actuals: 2
  } else {
    Jump: 029531
  }
LocReturn 029523:
  PushStack call_result;
  TraceOperation 029530 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 029531:
  TraceOperation 029531 (Print "You can't climb onto the ");
  GamePrint "You can't climb onto the ";
  TraceOperation 029544 (Print_obj (Var (Global 118)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  if (IsZeroByte(b5)) {
    GamePrint "";
    TraceOperation 029546 (Print_ret ".");
    GamePrint ".\n";
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
    TraceOperation 029546 (Print_ret ".");
    GamePrint ".\n";
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 1
  }
--[112]--------------------------------------------------
LocRoutine 029550:
  MakeRoutineFrame 5;
  if (LessThanByte(num_actuals,5)) {
    SetLocal 5 0;
    if (LessThanByte(num_actuals,4)) {
      SetLocal 4 0;
      if (LessThanByte(num_actuals,3)) {
        SetLocal 3 0;
        if (LessThanByte(num_actuals,2)) {
          SetLocal 2 0;
          if (LessThanByte(num_actuals,1)) {
            SetLocal 1 23;
          }
        }
      }
    }
  }
  Jump: 029561
LocOp 029561:
  TraceOperation 029561 (Jz (Var (Local 2)) (Branch F (Dloc 029570)));
  if (IsZero(GetLocal(2))) {
    TraceOperation 029564 (Jz (Var (Global 118)) (Branch T (Dloc 029570)));
    Let b1 = M[009053];
    Let b2 = M[009054];
    if (IsZero(MakeHiLo(b1,b2))) {
      Jump: 029570
    } else {
      TraceOperation 029567 (Store (Con 2) (Var (Global 118)));
      Let b3 = M[009053];
      Let b4 = M[009054];
      SetLocal 2 MakeHiLo(b3,b4);
      Jump: 029570
    }
  } else {
    Jump: 029570
  }
LocOp 029570:
  TraceOperation 029570 (Get_prop_addr (Var (Global 0)) (Var (Local 1)) (Local 4));
  Let b1 = M[008817];
  Let b2 = M[008818];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  Error: getPropsA
LocReturn 029601:
  PushStack call_result;
  TraceOperation 029608 (Jz (Var Sp) (Branch F (Dloc 029655)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 029611
  } else {
    Jump: 029655
  }
LocOp 029611:
  TraceOperation 029611 (Print "The ");
  GamePrint "The ";
  TraceOperation 029614 (Print_obj (Var (Local 2)));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(2),9)),7)];
  Let b2 = M[Offset(Offset(Offset(000741,Mul(GetLocal(2),9)),7),1)];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  if (IsZeroByte(b3)) {
    GamePrint "";
    TraceOperation 029616 (Print " do");
    GamePrint " do";
    TraceOperation 029619 (Je [Var (Local 2),Con 73] (Branch T (Dloc 029626)));
    if (Equal(GetLocal(2),73)) {
      Jump: 029626
    } else {
      TraceOperation 029623 (Print "es");
      GamePrint "es";
      Jump: 029626
    }
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
    TraceOperation 029616 (Print " do");
    GamePrint " do";
    TraceOperation 029619 (Je [Var (Local 2),Con 73] (Branch T (Dloc 029626)));
    if (Equal(GetLocal(2),73)) {
      Jump: 029626
    } else {
      TraceOperation 029623 (Print "es");
      GamePrint "es";
      Jump: 029626
    }
  }
LocOp 029626:
  TraceOperation 029626 (Print "n't lead ");
  GamePrint "n't lead ";
  TraceOperation 029635 (Je [Var (Local 1),Con 23] (Branch F (Dloc 029645)));
  if (Equal(GetLocal(1),23)) {
    TraceOperation 029639 (Print "up");
    GamePrint "up";
    TraceOperation 029642 (Jump 029650);
    Jump: 029650
  } else {
    Jump: 029645
  }
LocOp 029645:
  TraceOperation 029645 (Print "down");
  GamePrint "down";
  Jump: 029650
LocOp 029650:
  TraceOperation 029650 (Print_ret "ward.");
  GamePrint "ward.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 029655:
  TraceOperation 029655 (Call (Floc 038000) [Var (Local 1)] Sp);
  PushFrame 029655;
  SetLocal 1 GetLocal(1);
  JumpCall: 038000, #actuals: 1
LocReturn 029655:
  PushStack call_result;
  TraceOperation 029661 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 029662:
  TraceOperation 029662 (Jz (Var (Local 2)) (Branch F (Dloc 029676)));
  if (IsZero(GetLocal(2))) {
    TraceOperation 029665 (Print_ret "You can't go that way.");
    GamePrint "You can't go that way.\n";
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 1
  } else {
    Jump: 029676
  }
LocOp 029676:
  TraceOperation 029676 (Jz (Var (Local 2)) (Branch T (Dloc 029721)));
  if (IsZero(GetLocal(2))) {
    Jump: 029721
  } else {
    TraceOperation 029679 (Get_prop_addr (Var (Global 118)) (Con 18) (Local 3));
    Let b1 = M[009053];
    Let b2 = M[009054];
    Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7)];
    Let b4 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7),1)];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    Error: getPropsA
  }
LocReturn 029686:
  PushStack call_result;
  TraceOperation 029695 (Jz (Var Sp) (Branch T (Dloc 029721)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 029721
  } else {
    TraceOperation 029698 (Print_ret "Climbing the walls is to no avail.");
    GamePrint "Climbing the walls is to no avail.\n";
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 1
  }
LocOp 029721:
  TraceOperation 029721 (Print_ret "You can't do that!");
  GamePrint "You can't do that!\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[113]--------------------------------------------------
LocRoutine 029730:
  MakeRoutineFrame 0;
  Jump: 029731
LocOp 029731:
  TraceOperation 029731 (Test_attr (Var (Global 118)) (Con 19) (Branch T (Dloc 029767)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),2)];
  if (TestBit(b3,4)) {
    Jump: 029767
  } else {
    TraceOperation 029735 (Test_attr (Var (Global 118)) (Con 23) (Branch T (Dloc 029767)));
    Let b4 = M[009053];
    Let b5 = M[009054];
    Let b6 = M[Offset(Offset(000741,Mul(MakeHiLo(b4,b5),9)),2)];
    if (TestBit(b6,0)) {
      Jump: 029767
    } else {
      TraceOperation 029739 (Print "You must tell me how to do that to a ");
      GamePrint "You must tell me how to do that to a ";
      TraceOperation 029762 (Print_obj (Var (Global 118)));
      Let b7 = M[009053];
      Let b8 = M[009054];
      Let b9 = M[Offset(Offset(000741,Mul(MakeHiLo(b7,b8),9)),7)];
      Let b10 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b7,b8),9)),7),1)];
      Let b11 = M[Address(MakeHiLo(b9,b10))];
      if (IsZeroByte(b11)) {
        GamePrint "";
        TraceOperation 029764 (Print_ret ".");
        GamePrint ".\n";
        PopFrame return_address_12;
        JumpReturn: return_address_12, result: 1
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b9,b10)),1));
        TraceOperation 029764 (Print_ret ".");
        GamePrint ".\n";
        PopFrame return_address_13;
        JumpReturn: return_address_13, result: 1
      }
    }
  }
LocOp 029767:
  TraceOperation 029767 (Test_attr (Var (Global 118)) (Con 10) (Branch T (Dloc 029829)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),1)];
  if (TestBit(b3,5)) {
    Jump: 029829
  } else {
    TraceOperation 029771 (Get_prop (Var (Global 118)) (Con 10) Sp);
    Let b4 = M[009053];
    Let b5 = M[009054];
    Let b6 = M[Offset(Offset(000741,Mul(MakeHiLo(b4,b5),9)),7)];
    Let b7 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b4,b5),9)),7),1)];
    Let b8 = M[Address(MakeHiLo(b6,b7))];
    Error: getPropsA
  }
LocReturn 029796:
  SetByte 008949 HiByte(call_result);
  SetByte 008950 LoByte(call_result);
  TraceOperation 029802 (Jz (Var (Global 66)) (Branch F Dtrue));
  Let b1 = M[008949];
  Let b2 = M[008950];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 029805 (Print_ret "It is now pitch black.");
    GamePrint "It is now pitch black.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 1
  }
LocOp 029820:
  TraceOperation 029820 (Print_ret "It is already closed.");
  GamePrint "It is already closed.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 029829:
  TraceOperation 029829 (Test_attr (Var (Global 118)) (Con 23) (Branch F (Dloc 029863)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),2)];
  if (TestBit(b3,0)) {
    TraceOperation 029833 (Test_attr (Var (Global 118)) (Con 11) (Branch F (Dloc 029854)));
    Let b4 = M[009053];
    Let b5 = M[009054];
    Let b6 = M[Offset(Offset(000741,Mul(MakeHiLo(b4,b5),9)),1)];
    if (TestBit(b6,4)) {
      TraceOperation 029837 (Clear_attr (Var (Global 118)) (Con 11));
      Let b7 = M[009053];
      Let b8 = M[009054];
      Let b9 = M[Offset(Offset(000741,Mul(MakeHiLo(b7,b8),9)),1)];
      SetByte Offset(Offset(000741,Mul(MakeHiLo(b7,b8),9)),1) ClearBit(b9,4);
      TraceOperation 029840 (Print "The ");
      GamePrint "The ";
      TraceOperation 029843 (Print_obj (Var (Global 118)));
      Let b10 = M[009053];
      Let b11 = M[009054];
      Let b12 = M[Offset(Offset(000741,Mul(MakeHiLo(b10,b11),9)),7)];
      Let b13 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b10,b11),9)),7),1)];
      Let b14 = M[Address(MakeHiLo(b12,b13))];
      if (IsZeroByte(b14)) {
        GamePrint "";
        TraceOperation 029845 (Print_ret " is now closed.");
        GamePrint " is now closed.\n";
        PopFrame return_address_15;
        JumpReturn: return_address_15, result: 1
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b12,b13)),1));
        TraceOperation 029845 (Print_ret " is now closed.");
        GamePrint " is now closed.\n";
        PopFrame return_address_16;
        JumpReturn: return_address_16, result: 1
      }
    } else {
      Jump: 029854
    }
  } else {
    Jump: 029863
  }
LocOp 029854:
  TraceOperation 029854 (Print_ret "It is already closed.");
  GamePrint "It is already closed.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 029863:
  TraceOperation 029863 (Print_ret "You cannot close that.");
  GamePrint "You cannot close that.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[114]--------------------------------------------------
LocRoutine 029874:
  MakeRoutineFrame 0;
  Jump: 029875
LocOp 029875:
  TraceOperation 029875 (Test_attr (Var (Global 118)) (Con 30) (Branch F (Dloc 029899)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),3)];
  if (TestBit(b3,1)) {
    TraceOperation 029879 (Print "The ");
    GamePrint "The ";
    TraceOperation 029882 (Print_obj (Var (Global 118)));
    Let b4 = M[009053];
    Let b5 = M[009054];
    Let b6 = M[Offset(Offset(000741,Mul(MakeHiLo(b4,b5),9)),7)];
    Let b7 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b4,b5),9)),7),1)];
    Let b8 = M[Address(MakeHiLo(b6,b7))];
    if (IsZeroByte(b8)) {
      GamePrint "";
      TraceOperation 029884 (Print_ret " pays no attention.");
      GamePrint " pays no attention.\n";
      PopFrame return_address_9;
      JumpReturn: return_address_9, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b6,b7)),1));
      TraceOperation 029884 (Print_ret " pays no attention.");
      GamePrint " pays no attention.\n";
      PopFrame return_address_10;
      JumpReturn: return_address_10, result: 1
    }
  } else {
    Jump: 029899
  }
LocOp 029899:
  TraceOperation 029899 (Print_ret "You cannot talk to that!");
  GamePrint "You cannot talk to that!\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[115]--------------------------------------------------
LocRoutine 029910:
  MakeRoutineFrame 0;
  Jump: 029911
LocOp 029911:
  TraceOperation 029911 (Je [Var (Global 118),Con 10] (Branch F (Dloc 029942)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  if (Equal(MakeHiLo(b1,b2),10)) {
    TraceOperation 029915 (Print_ret "Well, for one, you are playing Zork...");
    GamePrint "Well, for one, you are playing Zork...\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 029942
  }
LocOp 029942:
  TraceOperation 029942 (Print_ret "You have lost your mind.");
  GamePrint "You have lost your mind.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[116]--------------------------------------------------
LocRoutine 029956:
  MakeRoutineFrame 0;
  Jump: 029957
LocOp 029957:
  TraceOperation 029957 (Print_ret "You can't cross that!");
  GamePrint "You can't cross that!\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[117]--------------------------------------------------
LocRoutine 029968:
  MakeRoutineFrame 0;
  Jump: 029969
LocOp 029969:
  TraceOperation 029969 (Jz (Var (Global 118)) (Branch T (Dloc 030010)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 030010
  } else {
    TraceOperation 029972 (Test_attr (Var (Global 118)) (Con 30) (Branch F (Dloc 029999)));
    Let b3 = M[009053];
    Let b4 = M[009054];
    Let b5 = M[Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),3)];
    if (TestBit(b5,1)) {
      TraceOperation 029976 (Print_ret "Insults of this nature won't help you.");
      GamePrint "Insults of this nature won't help you.\n";
      PopFrame return_address_6;
      JumpReturn: return_address_6, result: 1
    } else {
      Jump: 029999
    }
  }
LocOp 029999:
  TraceOperation 029999 (Print_ret "What a loony!");
  GamePrint "What a loony!\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 030010:
  TraceOperation 030010 (Print_ret "Such language in a high-class establishment like this!");
  GamePrint "Such language in a high-class establishment like this!\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[118]--------------------------------------------------
LocRoutine 030050:
  MakeRoutineFrame 0;
  Jump: 030051
LocOp 030051:
  TraceOperation 030051 (Test_attr (Var (Global 118)) (Con 30) (Branch F (Dloc 030064)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),3)];
  if (TestBit(b3,1)) {
    TraceOperation 030055 (Call (Floc 022396) [Con 19,Var (Global 118),Var (Global 119)] Sp);
    Let b4 = M[009053];
    Let b5 = M[009054];
    Let b6 = M[009055];
    Let b7 = M[009056];
    PushFrame 030055;
    SetLocal 1 19;
    SetLocal 2 MakeHiLo(b4,b5);
    SetLocal 3 MakeHiLo(b6,b7);
    JumpCall: 022396, #actuals: 3
  } else {
    Jump: 030064
  }
LocReturn 030055:
  PushStack call_result;
  TraceOperation 030063 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 030064:
  TraceOperation 030064 (Test_attr (Var (Global 118)) (Con 26) (Branch F (Dloc 030170)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),3)];
  if (TestBit(b3,5)) {
    TraceOperation 030069 (Test_attr (Var (Global 119)) (Con 29) (Branch F (Dloc 030170)));
    Let b4 = M[009055];
    Let b5 = M[009056];
    Let b6 = M[Offset(Offset(000741,Mul(MakeHiLo(b4,b5),9)),3)];
    if (TestBit(b6,2)) {
      TraceOperation 030074 (Jin (Var (Global 111)) (Var (Global 118)) (Branch F (Dloc 030113)));
      Let b7 = M[009039];
      Let b8 = M[009040];
      Let b9 = M[009053];
      Let b10 = M[009054];
      Let b11 = M[Offset(Offset(000741,Mul(MakeHiLo(b7,b8),9)),4)];
      if (Equal(MakeHiLo(b9,b10),Widen(b11))) {
        TraceOperation 030078 (Print_ret "Not a bright idea, especially since you're in it.");
        GamePrint "Not a bright idea, especially since you're in it.\n";
        PopFrame return_address_12;
        JumpReturn: return_address_12, result: 1
      } else {
        Jump: 030113
      }
    } else {
      Jump: 030170
    }
  } else {
    Jump: 030170
  }
--[119]--------------------------------------------------
LocRoutine 030118:
  MakeRoutineFrame 0;
  Jump: 030119
LocOp 030119:
  TraceOperation 030119 (Print "Your skillful ");
  GamePrint "Your skillful ";
  TraceOperation 030128 (Print_obj (Var (Global 119)));
  Let b1 = M[009055];
  Let b2 = M[009056];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  if (IsZeroByte(b5)) {
    GamePrint "";
    TraceOperation 030130 (Print "smanship slices the ");
    GamePrint "smanship slices the ";
    TraceOperation 030143 (Print_obj (Var (Global 118)));
    Let b6 = M[009053];
    Let b7 = M[009054];
    Let b8 = M[Offset(Offset(000741,Mul(MakeHiLo(b6,b7),9)),7)];
    Let b9 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b6,b7),9)),7),1)];
    Let b10 = M[Address(MakeHiLo(b8,b9))];
    if (IsZeroByte(b10)) {
      GamePrint "";
      TraceOperation 030145 (Print_ret " into innumerable slivers which blow away.");
      GamePrint " into innumerable slivers which blow away.\n";
      PopFrame return_address_11;
      JumpReturn: return_address_11, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b8,b9)),1));
      TraceOperation 030145 (Print_ret " into innumerable slivers which blow away.");
      GamePrint " into innumerable slivers which blow away.\n";
      PopFrame return_address_12;
      JumpReturn: return_address_12, result: 1
    }
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
    TraceOperation 030130 (Print "smanship slices the ");
    GamePrint "smanship slices the ";
    TraceOperation 030143 (Print_obj (Var (Global 118)));
    Let b13 = M[009053];
    Let b14 = M[009054];
    Let b15 = M[Offset(Offset(000741,Mul(MakeHiLo(b13,b14),9)),7)];
    Let b16 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b13,b14),9)),7),1)];
    Let b17 = M[Address(MakeHiLo(b15,b16))];
    if (IsZeroByte(b17)) {
      GamePrint "";
      TraceOperation 030145 (Print_ret " into innumerable slivers which blow away.");
      GamePrint " into innumerable slivers which blow away.\n";
      PopFrame return_address_18;
      JumpReturn: return_address_18, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b15,b16)),1));
      TraceOperation 030145 (Print_ret " into innumerable slivers which blow away.");
      GamePrint " into innumerable slivers which blow away.\n";
      PopFrame return_address_19;
      JumpReturn: return_address_19, result: 1
    }
  }
--[120]--------------------------------------------------
LocRoutine 030226:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 -32603;
  }
  Jump: 030229
LocOp 030229:
  TraceOperation 030229 (Print_obj (Var (Global 118)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  if (IsZeroByte(b5)) {
    GamePrint "";
    TraceOperation 030231 (Print_ret "....");
    GamePrint "....\n";
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
    TraceOperation 030231 (Print_ret "....");
    GamePrint "....\n";
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 1
  }
--[121]--------------------------------------------------
LocRoutine 030238:
  MakeRoutineFrame 0;
  Jump: 030239
LocOp 030239:
  TraceOperation 030239 (Print_ret "Come on, now!");
  GamePrint "Come on, now!\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[122]--------------------------------------------------
LocRoutine 030250:
  MakeRoutineFrame 0;
  Jump: 030251
LocOp 030251:
  TraceOperation 030251 (Jz (Var (Global 119)) (Branch F (Dloc 030257)));
  Let b1 = M[009055];
  Let b2 = M[009056];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 030254 (Store (Con 135) (Con 1));
    SetByte 009055 0;
    SetByte 009056 1;
    Jump: 030257
  } else {
    Jump: 030257
  }
LocOp 030257:
  TraceOperation 030257 (Je [Var (Global 119),Con 121] (Branch F (Dloc 030284)));
  Let b1 = M[009055];
  Let b2 = M[009056];
  if (Equal(MakeHiLo(b1,b2),121)) {
    TraceOperation 030261 (Print_ret "There's no reason to be digging here.");
    GamePrint "There's no reason to be digging here.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 030284
  }
LocOp 030284:
  TraceOperation 030284 (Test_attr (Var (Global 119)) (Con 28) (Branch F (Dloc 030316)));
  Let b1 = M[009055];
  Let b2 = M[009056];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),3)];
  if (TestBit(b3,3)) {
    TraceOperation 030288 (Print "Digging with the ");
    GamePrint "Digging with the ";
    TraceOperation 030299 (Print_obj (Var (Global 119)));
    Let b4 = M[009055];
    Let b5 = M[009056];
    Let b6 = M[Offset(Offset(000741,Mul(MakeHiLo(b4,b5),9)),7)];
    Let b7 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b4,b5),9)),7),1)];
    Let b8 = M[Address(MakeHiLo(b6,b7))];
    if (IsZeroByte(b8)) {
      GamePrint "";
      TraceOperation 030301 (Print_ret " is slow and tedious.");
      GamePrint " is slow and tedious.\n";
      PopFrame return_address_9;
      JumpReturn: return_address_9, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b6,b7)),1));
      TraceOperation 030301 (Print_ret " is slow and tedious.");
      GamePrint " is slow and tedious.\n";
      PopFrame return_address_10;
      JumpReturn: return_address_10, result: 1
    }
  } else {
    Jump: 030316
  }
LocOp 030316:
  TraceOperation 030316 (Print "Digging with a ");
  GamePrint "Digging with a ";
  TraceOperation 030327 (Print_obj (Var (Global 119)));
  Let b1 = M[009055];
  Let b2 = M[009056];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  if (IsZeroByte(b5)) {
    GamePrint "";
    TraceOperation 030329 (Print_ret " is silly.");
    GamePrint " is silly.\n";
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
    TraceOperation 030329 (Print_ret " is silly.");
    GamePrint " is silly.\n";
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 1
  }
--[123]--------------------------------------------------
LocRoutine 030338:
  MakeRoutineFrame 0;
  Jump: 030339
LocOp 030339:
  TraceOperation 030339 (Get_parent (Var (Global 111)) Sp);
  Let b1 = M[009039];
  Let b2 = M[009040];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),4)];
  PushStack Widen(b3);
  TraceOperation 030342 (Je [Var Sp,Var (Global 118)] (Branch T (Dloc 030358)));
  PopStack popped4;
  Let b5 = M[009053];
  Let b6 = M[009054];
  if (Equal(popped4,MakeHiLo(b5,b6))) {
    Jump: 030358
  } else {
    TraceOperation 030346 (Print "You're not in that!");
    GamePrint "You're not in that!";
    TraceOperation 030355 New_line;
    GamePrint "\n";
    TraceOperation 030356 (Ret (Con 2));
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 2
  }
LocOp 030358:
  TraceOperation 030358 (Test_attr (Var (Global 0)) (Con 6) (Branch F (Dloc 030384)));
  Let b1 = M[008817];
  Let b2 = M[008818];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),0)];
  if (TestBit(b3,1)) {
    TraceOperation 030362 (Print "You are on your own feet again.");
    GamePrint "You are on your own feet again.";
    TraceOperation 030379 New_line;
    GamePrint "\n";
    TraceOperation 030380 (Insert_obj (Var (Global 111)) (Var (Global 0)));
    Let b4 = M[009039];
    Let b5 = M[009040];
    Let b6 = M[008817];
    Let b7 = M[008818];
    Let b8 = M[Offset(Offset(000741,Mul(MakeHiLo(b4,b5),9)),4)];
    if (IsZero(Widen(b8))) {
      SetByte Offset(Offset(000741,Mul(MakeHiLo(b4,b5),9)),4) b7;
      Let b9 = M[Offset(Offset(000741,Mul(MakeHiLo(b6,b7),9)),6)];
      SetByte Offset(Offset(000741,Mul(MakeHiLo(b4,b5),9)),5) LoByte(Widen(b9));
      SetByte Offset(Offset(000741,Mul(MakeHiLo(b6,b7),9)),6) b5;
      TraceOperation 030383 Rtrue;
      PopFrame return_address_10;
      JumpReturn: return_address_10, result: 1
    } else {
      Let b11 = M[Offset(Offset(000741,Mul(Widen(b8),9)),6)];
      if (Equal(Widen(b11),MakeHiLo(b4,b5))) {
        Let b12 = M[Offset(Offset(000741,Mul(MakeHiLo(b4,b5),9)),5)];
        SetByte Offset(Offset(000741,Mul(Widen(b8),9)),6) LoByte(Widen(b12));
        SetByte Offset(Offset(000741,Mul(MakeHiLo(b4,b5),9)),4) b7;
        Let b13 = M[Offset(Offset(000741,Mul(MakeHiLo(b6,b7),9)),6)];
        SetByte Offset(Offset(000741,Mul(MakeHiLo(b4,b5),9)),5) LoByte(Widen(b13));
        SetByte Offset(Offset(000741,Mul(MakeHiLo(b6,b7),9)),6) b5;
        TraceOperation 030383 Rtrue;
        PopFrame return_address_14;
        JumpReturn: return_address_14, result: 1
      } else {
        Error: unlink/loop
      }
    }
  } else {
    Jump: 030384
  }
LocOp 030384:
  TraceOperation 030384 (Print "You realize that getting out here would be fatal.");
  GamePrint "You realize that getting out here would be fatal.";
  TraceOperation 030411 New_line;
  GamePrint "\n";
  TraceOperation 030412 (Ret (Con 2));
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 2
--[124]--------------------------------------------------
LocRoutine 030414:
  MakeRoutineFrame 0;
  Jump: 030415
LocOp 030415:
  TraceOperation 030415 (Print_ret "Nothing happens.");
  GamePrint "Nothing happens.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[125]--------------------------------------------------
LocRoutine 030428:
  MakeRoutineFrame 0;
  Jump: 030429
LocOp 030429:
  TraceOperation 030429 (Call (Floc 030482) [] Sp);
  PushFrame 030429;
  JumpCall: 030482, #actuals: 0
LocReturn 030429:
  PushStack call_result;
  TraceOperation 030434 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[126]--------------------------------------------------
LocRoutine 030436:
  MakeRoutineFrame 0;
  Jump: 030437
LocOp 030437:
  TraceOperation 030437 (Print_ret "How peculiar!");
  GamePrint "How peculiar!\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[127]--------------------------------------------------
LocRoutine 030448:
  MakeRoutineFrame 0;
  Jump: 030449
LocOp 030449:
  TraceOperation 030449 (Get_parent (Var (Global 111)) Sp);
  Let b1 = M[009039];
  Let b2 = M[009040];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),4)];
  PushStack Widen(b3);
  TraceOperation 030452 (Je [Var (Global 118),Var Sp] (Branch F Dfalse));
  Let b4 = M[009053];
  Let b5 = M[009054];
  PopStack popped6;
  if (Equal(MakeHiLo(b4,b5),popped6)) {
    TraceOperation 030456 (Call (Floc 022396) [Con 45,Var (Global 118)] Sp);
    Let b7 = M[009053];
    Let b8 = M[009054];
    PushFrame 030456;
    SetLocal 1 45;
    SetLocal 2 MakeHiLo(b7,b8);
    JumpCall: 022396, #actuals: 2
  } else {
    PopFrame return_address_9;
    JumpReturn: return_address_9, result: 0
  }
LocReturn 030456:
  PushStack call_result;
  TraceOperation 030463 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[128]--------------------------------------------------
LocRoutine 030464:
  MakeRoutineFrame 0;
  Jump: 030465
LocOp 030465:
  TraceOperation 030465 (Call (Floc 037334) [] Sp);
  PushFrame 030465;
  JumpCall: 037334, #actuals: 0
LocReturn 030465:
  PushStack call_result;
  TraceOperation 030470 (Jz (Var Sp) (Branch T Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  } else {
    TraceOperation 030473 (Print_ret "Dropped.");
    GamePrint "Dropped.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  }
--[129]--------------------------------------------------
LocRoutine 030482:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 030489
LocOp 030489:
  TraceOperation 030489 (Test_attr (Var (Global 118)) (Con 21) (Branch T (Dloc 030499)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),2)];
  if (TestBit(b3,2)) {
    Jump: 030499
  } else {
    TraceOperation 030493 (Push (Con 0));
    PushStack 0;
    TraceOperation 030496 (Jump 030502);
    Jump: 030502
  }
LocOp 030499:
  TraceOperation 030499 (Push (Con 1));
  PushStack 1;
  Jump: 030502
LocOp 030502:
  TraceOperation 030502 (Store (Con 1) (Var Sp));
  PopStack popped1;
  SetLocal 1 popped1;
  TraceOperation 030505 (Jz (Var (Local 1)) (Branch T (Dloc 030596)));
  if (IsZero(GetLocal(1))) {
    Jump: 030596
  } else {
    TraceOperation 030509 (Jin (Var (Global 118)) (Var (Global 111)) (Branch T (Dloc 030537)));
    Let b2 = M[009053];
    Let b3 = M[009054];
    Let b4 = M[009039];
    Let b5 = M[009040];
    Let b6 = M[Offset(Offset(000741,Mul(MakeHiLo(b2,b3),9)),4)];
    if (Equal(MakeHiLo(b4,b5),Widen(b6))) {
      Jump: 030537
    } else {
      TraceOperation 030513 (Get_parent (Var (Global 118)) Sp);
      Let b7 = M[009053];
      Let b8 = M[009054];
      Let b9 = M[Offset(Offset(000741,Mul(MakeHiLo(b7,b8),9)),4)];
      PushStack Widen(b9);
      TraceOperation 030516 (Jin (Var Sp) (Var (Global 111)) (Branch T (Dloc 030537)));
      PopStack popped10;
      Let b11 = M[009039];
      Let b12 = M[009040];
      Let b13 = M[Offset(Offset(000741,Mul(popped10,9)),4)];
      if (Equal(MakeHiLo(b11,b12),Widen(b13))) {
        Jump: 030537
      } else {
        TraceOperation 030520 (Print "You're not holding that.");
        GamePrint "You're not holding that.";
        TraceOperation 030533 New_line;
        GamePrint "\n";
        TraceOperation 030534 (Jump 030594);
        Jump: 030594
      }
    }
  }
--[130]--------------------------------------------------
LocRoutine 030640:
  MakeRoutineFrame 5;
  if (LessThanByte(num_actuals,5)) {
    SetLocal 5 16704;
    if (LessThanByte(num_actuals,4)) {
      SetLocal 4 -19964;
      if (LessThanByte(num_actuals,3)) {
        SetLocal 3 32728;
        if (LessThanByte(num_actuals,2)) {
          SetLocal 2 26115;
          if (LessThanByte(num_actuals,1)) {
            SetLocal 1 -14171;
          }
        }
      }
    }
  }
  Jump: 030651
LocOp 030651:
  TraceOperation 030651 (Set_attr (Con 9) (Var (Global 29)));
  Let b1 = M[008875];
  Let b2 = M[008876];
  Let b3 = M[Offset(000822,Div8(MakeHiLo(b1,b2)))];
  SetByte Offset(000822,Div8(MakeHiLo(b1,b2))) SetBit(b3,SevenMinus(LoByte(Mod(MakeHiLo(b1,b2),8))));
  TraceOperation 030654 (Get_prop_addr (Var (Global 25)) (Con 58) (Global 92));
  Let b4 = M[008867];
  Let b5 = M[008868];
  Let b6 = M[Offset(Offset(000741,Mul(MakeHiLo(b4,b5),9)),7)];
  Let b7 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b4,b5),9)),7),1)];
  Let b8 = M[Address(MakeHiLo(b6,b7))];
  Error: getPropsA
--[131]--------------------------------------------------
LocRoutine 030734:
  MakeRoutineFrame 0;
  Jump: 030735
LocOp 030735:
  TraceOperation 030735 (Print "Thank you very much. I was rather thirsty (from all this talking, probably).");
  GamePrint "Thank you very much. I was rather thirsty (from all this talking, probably).";
  TraceOperation 030784 New_line;
  GamePrint "\n";
  TraceOperation 030785 (Call (Floc 030906) [Var (Global 118)] Sp);
  Let b1 = M[009053];
  Let b2 = M[009054];
  PushFrame 030785;
  SetLocal 1 MakeHiLo(b1,b2);
  JumpCall: 030906, #actuals: 1
LocReturn 030785:
  PushStack call_result;
  TraceOperation 030791 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[132]--------------------------------------------------
LocRoutine 030792:
  MakeRoutineFrame 5;
  if (LessThanByte(num_actuals,5)) {
    SetLocal 5 0;
    if (LessThanByte(num_actuals,4)) {
      SetLocal 4 0;
      if (LessThanByte(num_actuals,3)) {
        SetLocal 3 0;
        if (LessThanByte(num_actuals,2)) {
          SetLocal 2 0;
          if (LessThanByte(num_actuals,1)) {
            SetLocal 1 0;
          }
        }
      }
    }
  }
  Jump: 030803
LocOp 030803:
  TraceOperation 030803 (Loadb (Var (Global 110)) (Con 1) Sp);
  Let b1 = M[009037];
  Let b2 = M[009038];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),1)];
  PushStack Widen(b3);
  TraceOperation 030807 (Jg (Var Sp) (Con 0) (Branch F (Dloc 030880)));
  PopStack popped4;
  if (GreaterThan(popped4,0)) {
    TraceOperation 030812 (Loadb (Var (Global 110)) (Con 1) Sp);
    Let b5 = M[009037];
    Let b6 = M[009038];
    Let b7 = M[Offset(Address(MakeHiLo(b5,b6)),1)];
    PushStack Widen(b7);
    TraceOperation 030816 (Mul (Var Sp) (Con 4) Sp);
    PopStack popped8;
    PushStack Mul(popped8,4);
    TraceOperation 030820 (Add (Var (Global 110)) (Var Sp) (Local 1));
    Let b9 = M[009037];
    Let b10 = M[009038];
    PopStack popped11;
    SetLocal 1 Add(MakeHiLo(b9,b10),popped11);
    TraceOperation 030824 (Loadb (Var (Local 1)) (Con 0) (Local 5));
    Let b12 = M[Offset(Address(GetLocal(1)),0)];
    SetLocal 5 Widen(b12);
    TraceOperation 030828 (Loadb (Var (Local 1)) (Con 1) Sp);
    Let b13 = M[Offset(Address(GetLocal(1)),1)];
    PushStack Widen(b13);
    TraceOperation 030832 (Add (Var (Local 5)) (Var Sp) Sp);
    PopStack popped14;
    PushStack Add(GetLocal(5),popped14);
    TraceOperation 030836 (Sub (Var Sp) (Con 1) (Local 2));
    PopStack popped15;
    SetLocal 2 Sub(popped15,1);
    Jump: 030840
  } else {
    Jump: 030880
  }
LocOp 030840:
  TraceOperation 030840 (Inc_chk (Con 3) (Con 2) (Branch F (Dloc 030849)));
  SetLocal 3 Add(GetLocal(3),1);
  if (GreaterThanEqual(GetLocal(3),2)) {
    TraceOperation 030844 (Print_ret "...");
    GamePrint "...\n";
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 1
  } else {
    Jump: 030849
  }
LocOp 030849:
  TraceOperation 030849 (Loadb (Var (Local 1)) (Con 1) Sp);
  Let b1 = M[Offset(Address(GetLocal(1)),1)];
  PushStack Widen(b1);
  TraceOperation 030853 (Sub (Var Sp) (Con 1) (Local 4));
  PopStack popped2;
  SetLocal 4 Sub(popped2,1);
  Jump: 030857
LocOp 030857:
  TraceOperation 030857 (Inc_chk (Con 4) (Var (Local 2)) (Branch F (Dloc 030864)));
  SetLocal 4 Add(GetLocal(4),1);
  if (GreaterThanEqual(GetLocal(4),GetLocal(2))) {
    TraceOperation 030861 (Jump 030874);
    Jump: 030874
  } else {
    Jump: 030864
  }
LocOp 030864:
  TraceOperation 030864 (Loadb (Var (Global 109)) (Var (Local 4)) Sp);
  Let b1 = M[009035];
  Let b2 = M[009036];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),GetLocal(4))];
  PushStack Widen(b3);
  TraceOperation 030868 (Print_char (Var Sp));
  PopStack popped4;
  GamePrint SingleChar(popped4);
  TraceOperation 030871 (Jump 030857);
  Jump: 030857
LocOp 030874:
  TraceOperation 030874 (Print " ");
  GamePrint " ";
  TraceOperation 030877 (Jump 030840);
  Jump: 030840
LocOp 030880:
  TraceOperation 030880 (Print_ret "echo echo ...");
  GamePrint "echo echo ...\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[133]--------------------------------------------------
LocRoutine 030894:
  MakeRoutineFrame 0;
  Jump: 030895
LocOp 030895:
  TraceOperation 030895 (Call (Floc 020688) [] Sp);
  PushFrame 030895;
  JumpCall: 020688, #actuals: 0
LocReturn 030895:
  PushStack call_result;
  TraceOperation 030900 (Call (Floc 030414) [] Sp);
  PushFrame 030900;
  JumpCall: 030414, #actuals: 0
LocReturn 030900:
  PushStack call_result;
  TraceOperation 030905 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[134]--------------------------------------------------
LocRoutine 030906:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 030911
LocOp 030911:
  TraceOperation 030911 (Je [Var (Local 1),Var (Global 107)] (Branch F (Dloc 030921)));
  Let b1 = M[009031];
  Let b2 = M[009032];
  if (Equal(GetLocal(1),MakeHiLo(b1,b2))) {
    TraceOperation 030915 (Store (Con 123) (Con 0));
    SetByte 009031 0;
    SetByte 009032 0;
    TraceOperation 030918 (Store (Con 122) (Con 0));
    SetByte 009029 0;
    SetByte 009030 0;
    Jump: 030921
  } else {
    Jump: 030921
  }
LocOp 030921:
  TraceOperation 030921 (Store (Con 2) (Var (Global 66)));
  Let b1 = M[008949];
  Let b2 = M[008950];
  SetLocal 2 MakeHiLo(b1,b2);
  TraceOperation 030924 (Remove_obj (Var (Local 1)));
  Let b3 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),4)];
  if (IsZero(Widen(b3))) {
    SetByte Offset(Offset(000741,Mul(GetLocal(1),9)),4) 0;
    TraceOperation 030926 (Call (Floc 027746) [Var (Global 0)] (Global 66));
    Let b4 = M[008817];
    Let b5 = M[008818];
    PushFrame 030926;
    SetLocal 1 MakeHiLo(b4,b5);
    JumpCall: 027746, #actuals: 1
  } else {
    Let b6 = M[Offset(Offset(000741,Mul(Widen(b3),9)),6)];
    if (Equal(Widen(b6),GetLocal(1))) {
      Let b7 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),5)];
      SetByte Offset(Offset(000741,Mul(Widen(b3),9)),6) LoByte(Widen(b7));
      SetByte Offset(Offset(000741,Mul(GetLocal(1),9)),4) 0;
      TraceOperation 030926 (Call (Floc 027746) [Var (Global 0)] (Global 66));
      Let b8 = M[008817];
      Let b9 = M[008818];
      PushFrame 030926;
      SetLocal 1 MakeHiLo(b8,b9);
      JumpCall: 027746, #actuals: 1
    } else {
      Error: unlink/loop
    }
  }
LocReturn 030926:
  SetByte 008949 HiByte(call_result);
  SetByte 008950 LoByte(call_result);
  TraceOperation 030932 (Jz (Var (Local 2)) (Branch T Dtrue));
  if (IsZero(GetLocal(2))) {
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 1
  } else {
    TraceOperation 030935 (Je [Var (Local 2),Var (Global 66)] (Branch T Dtrue));
    Let b2 = M[008949];
    Let b3 = M[008950];
    if (Equal(GetLocal(2),MakeHiLo(b2,b3))) {
      PopFrame return_address_4;
      JumpReturn: return_address_4, result: 1
    } else {
      TraceOperation 030939 (Print_ret "You are left in the dark...");
      GamePrint "You are left in the dark...\n";
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 1
    }
  }
--[135]--------------------------------------------------
LocRoutine 030956:
  MakeRoutineFrame 0;
  Jump: 030957
LocOp 030957:
  TraceOperation 030957 (Call (Floc 038000) [Con 21] Sp);
  PushFrame 030957;
  SetLocal 1 21;
  JumpCall: 038000, #actuals: 1
LocReturn 030957:
  PushStack call_result;
  TraceOperation 030963 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[136]--------------------------------------------------
LocRoutine 030964:
  MakeRoutineFrame 0;
  Jump: 030965
LocOp 030965:
  TraceOperation 030965 (Get_prop (Var (Global 118)) (Con 8) Sp);
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  Error: getPropsA
LocOp 030980:
  TraceOperation 030980 (Test_attr (Var (Global 118)) (Con 19) (Branch T (Dloc 030988)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),2)];
  if (TestBit(b3,4)) {
    Jump: 030988
  } else {
    TraceOperation 030984 (Test_attr (Var (Global 118)) (Con 23) (Branch F (Dloc 030994)));
    Let b4 = M[009053];
    Let b5 = M[009054];
    Let b6 = M[Offset(Offset(000741,Mul(MakeHiLo(b4,b5),9)),2)];
    if (TestBit(b6,0)) {
      Jump: 030988
    } else {
      Jump: 030994
    }
  }
LocOp 030988:
  TraceOperation 030988 (Call (Floc 032296) [] Sp);
  PushFrame 030988;
  JumpCall: 032296, #actuals: 0
LocReturn 030988:
  PushStack call_result;
  TraceOperation 030993 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 030994:
  TraceOperation 030994 (Print "There's nothing special about the ");
  GamePrint "There's nothing special about the ";
  TraceOperation 031011 (Print_obj (Var (Global 118)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  if (IsZeroByte(b5)) {
    GamePrint "";
    TraceOperation 031013 (Print_ret ".");
    GamePrint ".\n";
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
    TraceOperation 031013 (Print_ret ".");
    GamePrint ".\n";
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 1
  }
--[137]--------------------------------------------------
LocRoutine 031016:
  MakeRoutineFrame 0;
  Jump: 031017
LocOp 031017:
  TraceOperation 031017 (Call (Floc 038000) [Con 20] Sp);
  PushFrame 031017;
  SetLocal 1 20;
  JumpCall: 038000, #actuals: 1
LocReturn 031017:
  PushStack call_result;
  TraceOperation 031023 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[138]--------------------------------------------------
LocRoutine 031024:
  MakeRoutineFrame 0;
  Jump: 031025
LocOp 031025:
  TraceOperation 031025 (Print_ret "What a bizarre concept!");
  GamePrint "What a bizarre concept!\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[139]--------------------------------------------------
LocRoutine 031044:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 031047
LocOp 031047:
  TraceOperation 031047 (Jz (Var (Global 119)) (Branch F (Dloc 031094)));
  Let b1 = M[009055];
  Let b2 = M[009056];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 031050 (Get_prop_addr (Var (Global 0)) (Con 5) (Local 1));
    Let b3 = M[008817];
    Let b4 = M[008818];
    Let b5 = M[Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),7)];
    Let b6 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),7),1)];
    Let b7 = M[Address(MakeHiLo(b5,b6))];
    Error: getPropsA
  } else {
    Jump: 031094
  }
LocReturn 031064:
  PushStack call_result;
  TraceOperation 031072 (Jz (Var Sp) (Branch T (Dloc 031079)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 031079
  } else {
    TraceOperation 031075 (Store (Con 135) (Con 238));
    SetByte 009055 0;
    SetByte 009056 238;
    TraceOperation 031078 Rfalse;
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  }
LocOp 031079:
  TraceOperation 031079 (Print_ret "There is nothing to fill it with.");
  GamePrint "There is nothing to fill it with.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 031094:
  TraceOperation 031094 (Je [Var (Global 119),Con 238] (Branch T Dfalse));
  Let b1 = M[009055];
  Let b2 = M[009056];
  if (Equal(MakeHiLo(b1,b2),238)) {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  } else {
    TraceOperation 031098 (Call (Floc 022396) [Con 18,Var (Global 119),Var (Global 118)] Sp);
    Let b4 = M[009055];
    Let b5 = M[009056];
    Let b6 = M[009053];
    Let b7 = M[009054];
    PushFrame 031098;
    SetLocal 1 18;
    SetLocal 2 MakeHiLo(b4,b5);
    SetLocal 3 MakeHiLo(b6,b7);
    JumpCall: 022396, #actuals: 3
  }
LocReturn 031098:
  PushStack call_result;
  TraceOperation 031106 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[140]--------------------------------------------------
LocRoutine 031108:
  MakeRoutineFrame 0;
  Jump: 031109
LocOp 031109:
  TraceOperation 031109 (Jz (Var (Global 119)) (Branch F (Dloc 031166)));
  Let b1 = M[009055];
  Let b2 = M[009056];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 031112 (Call (Floc 038048) [Con 238,Var (Global 0)] Sp);
    Let b3 = M[008817];
    Let b4 = M[008818];
    PushFrame 031112;
    SetLocal 1 238;
    SetLocal 2 MakeHiLo(b3,b4);
    JumpCall: 038048, #actuals: 2
  } else {
    Jump: 031166
  }
LocReturn 031112:
  PushStack call_result;
  TraceOperation 031119 (Jz (Var Sp) (Branch T (Dloc 031131)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 031131
  } else {
    TraceOperation 031122 (Call (Floc 022396) [Con 59,Var (Global 118),Con 238] Sp);
    Let b2 = M[009053];
    Let b3 = M[009054];
    PushFrame 031122;
    SetLocal 1 59;
    SetLocal 2 MakeHiLo(b2,b3);
    SetLocal 3 238;
    JumpCall: 022396, #actuals: 3
  }
LocReturn 031122:
  PushStack call_result;
  TraceOperation 031130 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 031131:
  TraceOperation 031131 (Get_parent (Var (Global 111)) Sp);
  Let b1 = M[009039];
  Let b2 = M[009040];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),4)];
  PushStack Widen(b3);
  TraceOperation 031134 (Jin (Con 237) (Var Sp) (Branch F (Dloc 031147)));
  PopStack popped4;
  Let b5 = M[002878];
  if (Equal(popped4,Widen(b5))) {
    TraceOperation 031138 (Call (Floc 022396) [Con 59,Var (Global 118),Con 237] Sp);
    Let b6 = M[009053];
    Let b7 = M[009054];
    PushFrame 031138;
    SetLocal 1 59;
    SetLocal 2 MakeHiLo(b6,b7);
    SetLocal 3 237;
    JumpCall: 022396, #actuals: 3
  } else {
    Jump: 031147
  }
LocReturn 031138:
  PushStack call_result;
  TraceOperation 031146 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[141]--------------------------------------------------
LocRoutine 031192:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 031195
LocOp 031195:
  TraceOperation 031195 (Get_parent (Var (Global 118)) (Local 1));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),4)];
  SetLocal 1 Widen(b3);
  TraceOperation 031198 (Je [Var (Global 118),Con 1,Con 6] (Branch F (Dloc 031247)));
  Let b4 = M[009053];
  Let b5 = M[009054];
  if (LogOr(Equal(MakeHiLo(b4,b5),1),Equal(MakeHiLo(b4,b5),6))) {
    TraceOperation 031204 (Print_ret "Within six feet of your head, assuming you haven't left that somewhere.");
    GamePrint "Within six feet of your head, assuming you haven't left that somewhere.\n";
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 1
  } else {
    Jump: 031247
  }
LocOp 031247:
  TraceOperation 031247 (Je [Var (Global 118),Con 5] (Branch F (Dloc 031270)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  if (Equal(MakeHiLo(b1,b2),5)) {
    TraceOperation 031251 (Print_ret "You're around here somewhere...");
    GamePrint "You're around here somewhere...\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 031270
  }
LocOp 031270:
  TraceOperation 031270 (Je [Var (Local 1),Con 247] (Branch F (Dloc 031283)));
  if (Equal(GetLocal(1),247)) {
    TraceOperation 031274 (Print_ret "You find it.");
    GamePrint "You find it.\n";
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 1
  } else {
    Jump: 031283
  }
LocOp 031283:
  TraceOperation 031283 (Jin (Var (Global 118)) (Var (Global 111)) (Branch F (Dloc 031294)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[009039];
  Let b4 = M[009040];
  Let b5 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),4)];
  if (Equal(MakeHiLo(b3,b4),Widen(b5))) {
    TraceOperation 031287 (Print_ret "You have it.");
    GamePrint "You have it.\n";
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 1
  } else {
    Jump: 031294
  }
--[142]--------------------------------------------------
LocRoutine 031306:
  MakeRoutineFrame 0;
  Jump: 031307
LocOp 031307:
  TraceOperation 031307 (Jin (Var (Global 49)) (Con 134) (Branch F (Dloc 034713)));
  Let b1 = M[008915];
  Let b2 = M[008916];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),4)];
  if (Equal(134,Widen(b3))) {
    TraceOperation 031312 (Print_ret "It's right here.");
    GamePrint "It's right here.\n";
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 1
  } else {
    Jump: 034713
  }
--[143]--------------------------------------------------
LocRoutine 031322:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 7758;
  }
  Jump: 031325
LocOp 031325:
  TraceOperation 031325 (Print "The ");
  GamePrint "The ";
  TraceOperation 031328 (Print_obj (Var (Local 1)));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),7)];
  Let b2 = M[Offset(Offset(Offset(000741,Mul(GetLocal(1),9)),7),1)];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  if (IsZeroByte(b3)) {
    GamePrint "";
    TraceOperation 031330 (Print_ret " has it.");
    GamePrint " has it.\n";
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
    TraceOperation 031330 (Print_ret " has it.");
    GamePrint " has it.\n";
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  }
--[144]--------------------------------------------------
LocRoutine 031338:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 2636;
  }
  Jump: 031341
LocOp 031341:
  TraceOperation 031341 (Print "It's on the ");
  GamePrint "It's on the ";
  TraceOperation 031346 (Print_obj (Var (Local 1)));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),7)];
  Let b2 = M[Offset(Offset(Offset(000741,Mul(GetLocal(1),9)),7),1)];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  if (IsZeroByte(b3)) {
    GamePrint "";
    TraceOperation 031348 (Print_ret ".");
    GamePrint ".\n";
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
    TraceOperation 031348 (Print_ret ".");
    GamePrint ".\n";
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  }
--[145]--------------------------------------------------
LocRoutine 031352:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 4940;
  }
  Jump: 031355
LocOp 031355:
  TraceOperation 031355 (Print "It's in the ");
  GamePrint "It's in the ";
  TraceOperation 031360 (Print_obj (Var (Local 1)));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),7)];
  Let b2 = M[Offset(Offset(Offset(000741,Mul(GetLocal(1),9)),7),1)];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  if (IsZeroByte(b3)) {
    GamePrint "";
    TraceOperation 031362 (Print_ret ".");
    GamePrint ".\n";
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
    TraceOperation 031362 (Print_ret ".");
    GamePrint ".\n";
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  }
--[146]--------------------------------------------------
LocRoutine 031370:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 17664;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 19094;
    }
  }
  Jump: 031375
LocOp 031375:
  TraceOperation 031375 (Print_ret "You're nuts!");
  GamePrint "You're nuts!\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[147]--------------------------------------------------
LocRoutine 031382:
  MakeRoutineFrame 0;
  Jump: 031383
LocOp 031383:
  TraceOperation 031383 (Print_ret "The FROBOZZ Corporation created, owns, and operates this dungeon.");
  GamePrint "The FROBOZZ Corporation created, owns, and operates this dungeon.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[148]--------------------------------------------------
LocRoutine 031428:
  MakeRoutineFrame 0;
  Jump: 031429
LocOp 031429:
  TraceOperation 031429 (Call (Floc 038124) [Var (Global 118)] Sp);
  Let b1 = M[009053];
  Let b2 = M[009054];
  PushFrame 031429;
  SetLocal 1 MakeHiLo(b1,b2);
  JumpCall: 038124, #actuals: 1
LocReturn 031429:
  PushStack call_result;
  TraceOperation 031435 (Jz (Var Sp) (Branch F Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 031438 (Print "That's easy for you to say since you don't even have the ");
    GamePrint "That's easy for you to say since you don't even have the ";
    TraceOperation 031469 (Print_obj (Var (Global 118)));
    Let b2 = M[009053];
    Let b3 = M[009054];
    Let b4 = M[Offset(Offset(000741,Mul(MakeHiLo(b2,b3),9)),7)];
    Let b5 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b2,b3),9)),7),1)];
    Let b6 = M[Address(MakeHiLo(b4,b5))];
    if (IsZeroByte(b6)) {
      GamePrint "";
      TraceOperation 031471 (Print_ret ".");
      GamePrint ".\n";
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b4,b5)),1));
      TraceOperation 031471 (Print_ret ".");
      GamePrint ".\n";
      PopFrame return_address_8;
      JumpReturn: return_address_8, result: 1
    }
  } else {
    PopFrame return_address_9;
    JumpReturn: return_address_9, result: 0
  }
--[149]--------------------------------------------------
LocRoutine 031474:
  MakeRoutineFrame 0;
  Jump: 031475
LocOp 031475:
  TraceOperation 031475 (Test_attr (Var (Global 119)) (Con 30) (Branch T (Dloc 031500)));
  Let b1 = M[009055];
  Let b2 = M[009056];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),3)];
  if (TestBit(b3,1)) {
    Jump: 031500
  } else {
    TraceOperation 031479 (Print "You can't give a ");
    GamePrint "You can't give a ";
    TraceOperation 031488 (Print_obj (Var (Global 118)));
    Let b4 = M[009053];
    Let b5 = M[009054];
    Let b6 = M[Offset(Offset(000741,Mul(MakeHiLo(b4,b5),9)),7)];
    Let b7 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b4,b5),9)),7),1)];
    Let b8 = M[Address(MakeHiLo(b6,b7))];
    if (IsZeroByte(b8)) {
      GamePrint "";
      TraceOperation 031490 (Print " to a ");
      GamePrint " to a ";
      TraceOperation 031495 (Print_obj (Var (Global 119)));
      Let b9 = M[009055];
      Let b10 = M[009056];
      Let b11 = M[Offset(Offset(000741,Mul(MakeHiLo(b9,b10),9)),7)];
      Let b12 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b9,b10),9)),7),1)];
      Let b13 = M[Address(MakeHiLo(b11,b12))];
      if (IsZeroByte(b13)) {
        GamePrint "";
        TraceOperation 031497 (Print_ret "!");
        GamePrint "!\n";
        PopFrame return_address_14;
        JumpReturn: return_address_14, result: 1
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b11,b12)),1));
        TraceOperation 031497 (Print_ret "!");
        GamePrint "!\n";
        PopFrame return_address_15;
        JumpReturn: return_address_15, result: 1
      }
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b6,b7)),1));
      TraceOperation 031490 (Print " to a ");
      GamePrint " to a ";
      TraceOperation 031495 (Print_obj (Var (Global 119)));
      Let b16 = M[009055];
      Let b17 = M[009056];
      Let b18 = M[Offset(Offset(000741,Mul(MakeHiLo(b16,b17),9)),7)];
      Let b19 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b16,b17),9)),7),1)];
      Let b20 = M[Address(MakeHiLo(b18,b19))];
      if (IsZeroByte(b20)) {
        GamePrint "";
        TraceOperation 031497 (Print_ret "!");
        GamePrint "!\n";
        PopFrame return_address_21;
        JumpReturn: return_address_21, result: 1
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b18,b19)),1));
        TraceOperation 031497 (Print_ret "!");
        GamePrint "!\n";
        PopFrame return_address_22;
        JumpReturn: return_address_22, result: 1
      }
    }
  }
LocOp 031500:
  TraceOperation 031500 (Print "The ");
  GamePrint "The ";
  TraceOperation 031503 (Print_obj (Var (Global 119)));
  Let b1 = M[009055];
  Let b2 = M[009056];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  if (IsZeroByte(b5)) {
    GamePrint "";
    TraceOperation 031505 (Print_ret " refuses it politely.");
    GamePrint " refuses it politely.\n";
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
    TraceOperation 031505 (Print_ret " refuses it politely.");
    GamePrint " refuses it politely.\n";
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 1
  }
--[150]--------------------------------------------------
LocRoutine 031520:
  MakeRoutineFrame 0;
  Jump: 031521
LocOp 031521:
  TraceOperation 031521 (Print_ret "Bizarre!");
  GamePrint "Bizarre!\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[151]--------------------------------------------------
LocRoutine 031530:
  MakeRoutineFrame 0;
  Jump: 031531
LocOp 031531:
  TraceOperation 031531 (Jz (Var (Global 118)) (Branch T (Dloc 031613)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 031613
  } else {
    TraceOperation 031535 (Test_attr (Var (Global 118)) (Con 30) (Branch F (Dloc 031565)));
    Let b3 = M[009053];
    Let b4 = M[009054];
    Let b5 = M[Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),3)];
    if (TestBit(b5,1)) {
      TraceOperation 031539 (Print "The ");
      GamePrint "The ";
      TraceOperation 031542 (Print_obj (Var (Global 118)));
      Let b6 = M[009053];
      Let b7 = M[009054];
      Let b8 = M[Offset(Offset(000741,Mul(MakeHiLo(b6,b7),9)),7)];
      Let b9 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b6,b7),9)),7),1)];
      Let b10 = M[Address(MakeHiLo(b8,b9))];
      if (IsZeroByte(b10)) {
        GamePrint "";
        TraceOperation 031544 (Print_ret " bows his head to you in greeting.");
        GamePrint " bows his head to you in greeting.\n";
        PopFrame return_address_11;
        JumpReturn: return_address_11, result: 1
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b8,b9)),1));
        TraceOperation 031544 (Print_ret " bows his head to you in greeting.");
        GamePrint " bows his head to you in greeting.\n";
        PopFrame return_address_12;
        JumpReturn: return_address_12, result: 1
      }
    } else {
      Jump: 031565
    }
  }
LocOp 031565:
  TraceOperation 031565 (Print "It's a well known fact that only schizophrenics say \"Hello\" to a ");
  GamePrint "It's a well known fact that only schizophrenics say \"Hello\" to a ";
  TraceOperation 031608 (Print_obj (Var (Global 118)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  if (IsZeroByte(b5)) {
    GamePrint "";
    TraceOperation 031610 (Print_ret ".");
    GamePrint ".\n";
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
    TraceOperation 031610 (Print_ret ".");
    GamePrint ".\n";
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 1
  }
LocOp 031613:
  TraceOperation 031613 (Call (Floc 020076) [Var (Global 54)] Sp);
  Let b1 = M[008925];
  Let b2 = M[008926];
  PushFrame 031613;
  SetLocal 1 MakeHiLo(b1,b2);
  JumpCall: 020076, #actuals: 1
LocReturn 031613:
  PushStack call_result;
  TraceOperation 031619 (Print_paddr (Var Sp));
  PopStack popped1;
  GamePrint GetText(PackedAddress Z3(popped1));
  TraceOperation 031621 New_line;
  GamePrint "\n";
  TraceOperation 031622 Rtrue;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: 1
--[152]--------------------------------------------------
LocRoutine 031624:
  MakeRoutineFrame 0;
  Jump: 031625
LocOp 031625:
  TraceOperation 031625 (Print "The incantation echoes back faintly, but nothing else happens.");
  GamePrint "The incantation echoes back faintly, but nothing else happens.";
  TraceOperation 031662 New_line;
  GamePrint "\n";
  TraceOperation 031663 (Store (Con 112) (Con 0));
  SetByte 009009 0;
  SetByte 009010 0;
  TraceOperation 031666 (Store (Con 124) (Con 0));
  SetByte 009033 0;
  SetByte 009034 0;
  TraceOperation 031669 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[153]--------------------------------------------------
LocRoutine 031670:
  MakeRoutineFrame 0;
  Jump: 031671
LocOp 031671:
  TraceOperation 031671 (Print_ret "How can you inflate that?");
  GamePrint "How can you inflate that?\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[154]--------------------------------------------------
LocRoutine 031686:
  MakeRoutineFrame 0;
  Jump: 031687
LocOp 031687:
  TraceOperation 031687 (Jin (Var (Global 118)) (Var (Global 119)) (Branch F (Dloc 031721)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[009055];
  Let b4 = M[009056];
  Let b5 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),4)];
  if (Equal(MakeHiLo(b3,b4),Widen(b5))) {
    TraceOperation 031691 (Print "Yes, it is ");
    GamePrint "Yes, it is ";
    TraceOperation 031700 (Test_attr (Var (Global 119)) (Con 10) (Branch F (Dloc 031710)));
    Let b6 = M[009055];
    Let b7 = M[009056];
    Let b8 = M[Offset(Offset(000741,Mul(MakeHiLo(b6,b7),9)),1)];
    if (TestBit(b8,5)) {
      TraceOperation 031704 (Print "on");
      GamePrint "on";
      TraceOperation 031707 (Jump 031713);
      Jump: 031713
    } else {
      Jump: 031710
    }
  } else {
    Jump: 031721
  }
LocOp 031710:
  TraceOperation 031710 (Print "in");
  GamePrint "in";
  Jump: 031713
LocOp 031713:
  TraceOperation 031713 (Print " the ");
  GamePrint " the ";
  TraceOperation 031716 (Print_obj (Var (Global 119)));
  Let b1 = M[009055];
  Let b2 = M[009056];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  if (IsZeroByte(b5)) {
    GamePrint "";
    TraceOperation 031718 (Print_ret ".");
    GamePrint ".\n";
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
    TraceOperation 031718 (Print_ret ".");
    GamePrint ".\n";
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 1
  }
--[155]--------------------------------------------------
LocRoutine 031724:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 -19968;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 -18204;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 -10164;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 25445;
        }
      }
    }
  }
  Jump: 031733
LocOp 031733:
  TraceOperation 031733 (Call (Floc 037468) [Con -26036] Sp);
  PushFrame 031733;
  SetLocal 1 -26036;
  JumpCall: 037468, #actuals: 1
LocReturn 031733:
  PushStack call_result;
  TraceOperation 031740 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[156]--------------------------------------------------
LocRoutine 031742:
  MakeRoutineFrame 0;
  Jump: 031743
LocOp 031743:
  TraceOperation 031743 (Print_ret "I'd sooner kiss a pig.");
  GamePrint "I'd sooner kiss a pig.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[157]--------------------------------------------------
LocRoutine 031762:
  MakeRoutineFrame 0;
  Jump: 031763
LocOp 031763:
  TraceOperation 031763 (Test_attr (Var (Global 118)) (Con 23) (Branch F (Dloc 031780)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),2)];
  if (TestBit(b3,0)) {
    TraceOperation 031767 (Print_ret "Nobody's home.");
    GamePrint "Nobody's home.\n";
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 1
  } else {
    Jump: 031780
  }
LocOp 031780:
  TraceOperation 031780 (Print "Why knock on a ");
  GamePrint "Why knock on a ";
  TraceOperation 031791 (Print_obj (Var (Global 118)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  if (IsZeroByte(b5)) {
    GamePrint "";
    TraceOperation 031793 (Print_ret "?");
    GamePrint "?\n";
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
    TraceOperation 031793 (Print_ret "?");
    GamePrint "?\n";
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 1
  }
--[158]--------------------------------------------------
LocRoutine 031796:
  MakeRoutineFrame 0;
  Jump: 031797
LocOp 031797:
  TraceOperation 031797 (Test_attr (Var (Global 118)) (Con 31) (Branch F (Dloc 031862)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),3)];
  if (TestBit(b3,0)) {
    TraceOperation 031802 (Test_attr (Var (Global 118)) (Con 20) (Branch T (Dloc 031815)));
    Let b4 = M[009053];
    Let b5 = M[009054];
    Let b6 = M[Offset(Offset(000741,Mul(MakeHiLo(b4,b5),9)),2)];
    if (TestBit(b6,3)) {
      Jump: 031815
    } else {
      TraceOperation 031806 (Print_ret "It is already off.");
      GamePrint "It is already off.\n";
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 1
    }
  } else {
    Jump: 031862
  }
LocOp 031815:
  TraceOperation 031815 (Clear_attr (Var (Global 118)) (Con 20));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),2)];
  SetByte Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),2) ClearBit(b3,3);
  TraceOperation 031818 (Jz (Var (Global 66)) (Branch T (Dloc 031827)));
  Let b4 = M[008949];
  Let b5 = M[008950];
  if (IsZero(MakeHiLo(b4,b5))) {
    Jump: 031827
  } else {
    TraceOperation 031821 (Call (Floc 027746) [Var (Global 0)] (Global 66));
    Let b6 = M[008817];
    Let b7 = M[008818];
    PushFrame 031821;
    SetLocal 1 MakeHiLo(b6,b7);
    JumpCall: 027746, #actuals: 1
  }
LocReturn 031821:
  SetByte 008949 HiByte(call_result);
  SetByte 008950 LoByte(call_result);
  Jump: 031827
LocOp 031827:
  TraceOperation 031827 (Print "The ");
  GamePrint "The ";
  TraceOperation 031830 (Print_obj (Var (Global 118)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  if (IsZeroByte(b5)) {
    GamePrint "";
    TraceOperation 031832 (Print " is now off.");
    GamePrint " is now off.";
    TraceOperation 031841 New_line;
    GamePrint "\n";
    TraceOperation 031842 (Jz (Var (Global 66)) (Branch F Dtrue));
    Let b6 = M[008949];
    Let b7 = M[008950];
    if (IsZero(MakeHiLo(b6,b7))) {
      TraceOperation 031845 (Print "It is now pitch black.");
      GamePrint "It is now pitch black.";
      TraceOperation 031860 New_line;
      GamePrint "\n";
      TraceOperation 031861 Rtrue;
      PopFrame return_address_8;
      JumpReturn: return_address_8, result: 1
    } else {
      PopFrame return_address_9;
      JumpReturn: return_address_9, result: 1
    }
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
    TraceOperation 031832 (Print " is now off.");
    GamePrint " is now off.";
    TraceOperation 031841 New_line;
    GamePrint "\n";
    TraceOperation 031842 (Jz (Var (Global 66)) (Branch F Dtrue));
    Let b10 = M[008949];
    Let b11 = M[008950];
    if (IsZero(MakeHiLo(b10,b11))) {
      TraceOperation 031845 (Print "It is now pitch black.");
      GamePrint "It is now pitch black.";
      TraceOperation 031860 New_line;
      GamePrint "\n";
      TraceOperation 031861 Rtrue;
      PopFrame return_address_12;
      JumpReturn: return_address_12, result: 1
    } else {
      PopFrame return_address_13;
      JumpReturn: return_address_13, result: 1
    }
  }
LocOp 031862:
  TraceOperation 031862 (Print_ret "You can't turn that off.");
  GamePrint "You can't turn that off.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[159]--------------------------------------------------
LocRoutine 031876:
  MakeRoutineFrame 0;
  Jump: 031877
LocOp 031877:
  TraceOperation 031877 (Test_attr (Var (Global 118)) (Con 31) (Branch F (Dloc 031928)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),3)];
  if (TestBit(b3,0)) {
    TraceOperation 031881 (Test_attr (Var (Global 118)) (Con 20) (Branch F (Dloc 031894)));
    Let b4 = M[009053];
    Let b5 = M[009054];
    Let b6 = M[Offset(Offset(000741,Mul(MakeHiLo(b4,b5),9)),2)];
    if (TestBit(b6,3)) {
      TraceOperation 031885 (Print_ret "It is already on.");
      GamePrint "It is already on.\n";
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 1
    } else {
      Jump: 031894
    }
  } else {
    Jump: 031928
  }
LocOp 031894:
  TraceOperation 031894 (Set_attr (Var (Global 118)) (Con 20));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),2)];
  SetByte Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),2) SetBit(b3,3);
  TraceOperation 031897 (Print "The ");
  GamePrint "The ";
  TraceOperation 031900 (Print_obj (Var (Global 118)));
  Let b4 = M[009053];
  Let b5 = M[009054];
  Let b6 = M[Offset(Offset(000741,Mul(MakeHiLo(b4,b5),9)),7)];
  Let b7 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b4,b5),9)),7),1)];
  Let b8 = M[Address(MakeHiLo(b6,b7))];
  if (IsZeroByte(b8)) {
    GamePrint "";
    TraceOperation 031902 (Print " is now on.");
    GamePrint " is now on.";
    TraceOperation 031911 New_line;
    GamePrint "\n";
    TraceOperation 031912 (Jz (Var (Global 66)) (Branch F Dtrue));
    Let b9 = M[008949];
    Let b10 = M[008950];
    if (IsZero(MakeHiLo(b9,b10))) {
      TraceOperation 031915 (Call (Floc 027746) [Var (Global 0)] (Global 66));
      Let b11 = M[008817];
      Let b12 = M[008818];
      PushFrame 031915;
      SetLocal 1 MakeHiLo(b11,b12);
      JumpCall: 027746, #actuals: 1
    } else {
      PopFrame return_address_13;
      JumpReturn: return_address_13, result: 1
    }
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b6,b7)),1));
    TraceOperation 031902 (Print " is now on.");
    GamePrint " is now on.";
    TraceOperation 031911 New_line;
    GamePrint "\n";
    TraceOperation 031912 (Jz (Var (Global 66)) (Branch F Dtrue));
    Let b14 = M[008949];
    Let b15 = M[008950];
    if (IsZero(MakeHiLo(b14,b15))) {
      TraceOperation 031915 (Call (Floc 027746) [Var (Global 0)] (Global 66));
      Let b16 = M[008817];
      Let b17 = M[008818];
      PushFrame 031915;
      SetLocal 1 MakeHiLo(b16,b17);
      JumpCall: 027746, #actuals: 1
    } else {
      PopFrame return_address_18;
      JumpReturn: return_address_18, result: 1
    }
  }
LocReturn 031915:
  SetByte 008949 HiByte(call_result);
  SetByte 008950 LoByte(call_result);
  TraceOperation 031921 New_line;
  GamePrint "\n";
  TraceOperation 031922 (Call (Floc 032260) [] Sp);
  PushFrame 031922;
  JumpCall: 032260, #actuals: 0
LocReturn 031922:
  PushStack call_result;
  TraceOperation 031927 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 031928:
  TraceOperation 031928 (Print_ret "You can't turn that on.");
  GamePrint "You can't turn that on.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[160]--------------------------------------------------
LocRoutine 031942:
  MakeRoutineFrame 0;
  Jump: 031943
LocOp 031943:
  TraceOperation 031943 (Test_attr (Var (Global 118)) (Con 27) (Branch F (Dloc 031972)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),3)];
  if (TestBit(b3,4)) {
    TraceOperation 031947 (Print_ret "You can't launch that by saying \"launch\"!");
    GamePrint "You can't launch that by saying \"launch\"!\n";
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 1
  } else {
    Jump: 031972
  }
LocOp 031972:
  TraceOperation 031972 (Print_ret "That's pretty weird.");
  GamePrint "That's pretty weird.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[161]--------------------------------------------------
LocRoutine 031990:
  MakeRoutineFrame 0;
  Jump: 031991
LocOp 031991:
  TraceOperation 031991 (Print_ret "Getting tired?");
  GamePrint "Getting tired?\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[162]--------------------------------------------------
LocRoutine 032004:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 032009
LocOp 032009:
  TraceOperation 032009 (Jz (Var (Global 118)) (Branch T (Dloc 032065)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 032065
  } else {
    TraceOperation 032012 (Jin (Var (Global 118)) (Var (Global 0)) (Branch F (Dloc 032048)));
    Let b3 = M[009053];
    Let b4 = M[009054];
    Let b5 = M[008817];
    Let b6 = M[008818];
    Let b7 = M[Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),4)];
    if (Equal(MakeHiLo(b5,b6),Widen(b7))) {
      TraceOperation 032016 (Test_attr (Var (Global 118)) (Con 30) (Branch F (Dloc 032042)));
      Let b8 = M[009053];
      Let b9 = M[009054];
      Let b10 = M[Offset(Offset(000741,Mul(MakeHiLo(b8,b9),9)),3)];
      if (TestBit(b10,1)) {
        TraceOperation 032020 (Print "The ");
        GamePrint "The ";
        TraceOperation 032023 (Print_obj (Var (Global 118)));
        Let b11 = M[009053];
        Let b12 = M[009054];
        Let b13 = M[Offset(Offset(000741,Mul(MakeHiLo(b11,b12),9)),7)];
        Let b14 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b11,b12),9)),7),1)];
        Let b15 = M[Address(MakeHiLo(b13,b14))];
        if (IsZeroByte(b15)) {
          GamePrint "";
          TraceOperation 032025 (Print_ret " is too big to jump over.");
          GamePrint " is too big to jump over.\n";
          PopFrame return_address_16;
          JumpReturn: return_address_16, result: 1
        } else {
          GamePrint GetText(Offset(Address(MakeHiLo(b13,b14)),1));
          TraceOperation 032025 (Print_ret " is too big to jump over.");
          GamePrint " is too big to jump over.\n";
          PopFrame return_address_17;
          JumpReturn: return_address_17, result: 1
        }
      } else {
        Jump: 032042
      }
    } else {
      Jump: 032048
    }
  }
LocOp 032042:
  TraceOperation 032042 (Call (Floc 034340) [] Sp);
  PushFrame 032042;
  JumpCall: 034340, #actuals: 0
LocReturn 032042:
  PushStack call_result;
  TraceOperation 032047 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[163]--------------------------------------------------
LocRoutine 032082:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 174;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 257;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 30544;
        }
      }
    }
  }
  Jump: 032091
LocOp 032091:
  TraceOperation 032091 (Jz (Var Sp) (Branch F (Dloc 032137)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 032094 (Print "This was not a very safe place to try jumping.");
    GamePrint "This was not a very safe place to try jumping.";
    TraceOperation 032123 New_line;
    GamePrint "\n";
    TraceOperation 032124 (Call (Floc 020076) [Var (Global 68)] Sp);
    Let b2 = M[008953];
    Let b3 = M[008954];
    PushFrame 032124;
    SetLocal 1 MakeHiLo(b2,b3);
    JumpCall: 020076, #actuals: 1
  } else {
    Jump: 032137
  }
LocReturn 032124:
  PushStack call_result;
  TraceOperation 032130 (Call (Floc 067174) [Var Sp] Sp);
  PopStack popped1;
  PushFrame 032130;
  SetLocal 1 popped1;
  JumpCall: 067174, #actuals: 1
LocReturn 032130:
  PushStack call_result;
  TraceOperation 032136 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 032137:
  TraceOperation 032137 (Je [Var (Global 0),Con 88] (Branch F (Dloc 032206)));
  Let b1 = M[008817];
  Let b2 = M[008818];
  if (Equal(MakeHiLo(b1,b2),88)) {
    TraceOperation 032142 (Print "In a feat of unaccustomed daring, you manage to land on your feet without killing yourself.");
    GamePrint "In a feat of unaccustomed daring, you manage to land on your feet without killing yourself.";
    TraceOperation 032197 New_line;
    GamePrint "\n";
    TraceOperation 032198 New_line;
    GamePrint "\n";
    TraceOperation 032199 (Call (Floc 038000) [Con 22] Sp);
    PushFrame 032199;
    SetLocal 1 22;
    JumpCall: 038000, #actuals: 1
  } else {
    Jump: 032206
  }
LocReturn 032199:
  PushStack call_result;
  TraceOperation 032205 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 032206:
  TraceOperation 032206 (Call (Floc 034340) [] Sp);
  PushFrame 032206;
  JumpCall: 034340, #actuals: 0
LocReturn 032206:
  PushStack call_result;
  TraceOperation 032211 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[164]--------------------------------------------------
LocRoutine 032216:
  MakeRoutineFrame 0;
  Jump: 032217
LocOp 032217:
  TraceOperation 032217 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[165]--------------------------------------------------
LocRoutine 032218:
  MakeRoutineFrame 0;
  Jump: 032219
LocOp 032219:
  TraceOperation 032219 (Call (Floc 038000) [Con 20] Sp);
  PushFrame 032219;
  SetLocal 1 20;
  JumpCall: 038000, #actuals: 1
LocReturn 032219:
  PushStack call_result;
  TraceOperation 032225 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[166]--------------------------------------------------
LocRoutine 032226:
  MakeRoutineFrame 0;
  Jump: 032227
LocOp 032227:
  TraceOperation 032227 (Print "The ");
  GamePrint "The ";
  TraceOperation 032230 (Print_obj (Var (Global 118)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  if (IsZeroByte(b5)) {
    GamePrint "";
    TraceOperation 032232 (Print_ret " makes no sound.");
    GamePrint " makes no sound.\n";
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
    TraceOperation 032232 (Print_ret " makes no sound.");
    GamePrint " makes no sound.\n";
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 1
  }
--[167]--------------------------------------------------
LocRoutine 032246:
  MakeRoutineFrame 0;
  Jump: 032247
LocOp 032247:
  TraceOperation 032247 (Print_ret "It doesn't seem to work.");
  GamePrint "It doesn't seem to work.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[168]--------------------------------------------------
LocRoutine 032260:
  MakeRoutineFrame 0;
  Jump: 032261
LocOp 032261:
  TraceOperation 032261 (Call (Floc 035994) [Con 1] Sp);
  PushFrame 032261;
  SetLocal 1 1;
  JumpCall: 035994, #actuals: 1
LocReturn 032261:
  PushStack call_result;
  TraceOperation 032267 (Jz (Var Sp) (Branch T Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  } else {
    TraceOperation 032270 (Call (Floc 036174) [Con 1] Sp);
    PushFrame 032270;
    SetLocal 1 1;
    JumpCall: 036174, #actuals: 1
  }
LocReturn 032270:
  PushStack call_result;
  TraceOperation 032276 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[169]--------------------------------------------------
LocRoutine 032278:
  MakeRoutineFrame 0;
  Jump: 032279
LocOp 032279:
  TraceOperation 032279 (Print "There is nothing behind the ");
  GamePrint "There is nothing behind the ";
  TraceOperation 032290 (Print_obj (Var (Global 118)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  if (IsZeroByte(b5)) {
    GamePrint "";
    TraceOperation 032292 (Print_ret ".");
    GamePrint ".\n";
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
    TraceOperation 032292 (Print_ret ".");
    GamePrint ".\n";
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 1
  }
--[170]--------------------------------------------------
LocRoutine 032296:
  MakeRoutineFrame 0;
  Jump: 032297
LocOp 032297:
  TraceOperation 032297 (Test_attr (Var (Global 118)) (Con 23) (Branch F (Dloc 032354)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),2)];
  if (TestBit(b3,0)) {
    TraceOperation 032301 (Test_attr (Var (Global 118)) (Con 11) (Branch F (Dloc 032340)));
    Let b4 = M[009053];
    Let b5 = M[009054];
    Let b6 = M[Offset(Offset(000741,Mul(MakeHiLo(b4,b5),9)),1)];
    if (TestBit(b6,4)) {
      TraceOperation 032305 (Print "The ");
      GamePrint "The ";
      TraceOperation 032308 (Print_obj (Var (Global 118)));
      Let b7 = M[009053];
      Let b8 = M[009054];
      Let b9 = M[Offset(Offset(000741,Mul(MakeHiLo(b7,b8),9)),7)];
      Let b10 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b7,b8),9)),7),1)];
      Let b11 = M[Address(MakeHiLo(b9,b10))];
      if (IsZeroByte(b11)) {
        GamePrint "";
        TraceOperation 032310 (Print " is open, but I can't tell what's beyond it.");
        GamePrint " is open, but I can't tell what's beyond it.";
        TraceOperation 032337 (Jump 032352);
        Jump: 032352
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b9,b10)),1));
        TraceOperation 032310 (Print " is open, but I can't tell what's beyond it.");
        GamePrint " is open, but I can't tell what's beyond it.";
        TraceOperation 032337 (Jump 032352);
        Jump: 032352
      }
    } else {
      Jump: 032340
    }
  } else {
    Jump: 032354
  }
LocOp 032340:
  TraceOperation 032340 (Print "The ");
  GamePrint "The ";
  TraceOperation 032343 (Print_obj (Var (Global 118)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  if (IsZeroByte(b5)) {
    GamePrint "";
    TraceOperation 032345 (Print " is closed.");
    GamePrint " is closed.";
    Jump: 032352
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
    TraceOperation 032345 (Print " is closed.");
    GamePrint " is closed.";
    Jump: 032352
  }
LocOp 032352:
  TraceOperation 032352 New_line;
  GamePrint "\n";
  TraceOperation 032353 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 032354:
  TraceOperation 032354 (Test_attr (Var (Global 118)) (Con 19) (Branch F (Dloc 032428)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),2)];
  if (TestBit(b3,4)) {
    TraceOperation 032359 (Test_attr (Var (Global 118)) (Con 30) (Branch F (Dloc 032380)));
    Let b4 = M[009053];
    Let b5 = M[009054];
    Let b6 = M[Offset(Offset(000741,Mul(MakeHiLo(b4,b5),9)),3)];
    if (TestBit(b6,1)) {
      TraceOperation 032363 (Print_ret "There is nothing special to be seen.");
      GamePrint "There is nothing special to be seen.\n";
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 1
    } else {
      Jump: 032380
    }
  } else {
    Jump: 032428
  }
LocOp 032380:
  TraceOperation 032380 (Call (Floc 036946) [Var (Global 118)] Sp);
  Let b1 = M[009053];
  Let b2 = M[009054];
  PushFrame 032380;
  SetLocal 1 MakeHiLo(b1,b2);
  JumpCall: 036946, #actuals: 1
LocReturn 032380:
  PushStack call_result;
  TraceOperation 032386 (Jz (Var Sp) (Branch T (Dloc 032416)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 032416
  } else {
    TraceOperation 032389 (Get_child (Var (Global 118)) Sp (Branch F (Dloc 032402)));
    Let b2 = M[009053];
    Let b3 = M[009054];
    Let b4 = M[Offset(Offset(000741,Mul(MakeHiLo(b2,b3),9)),6)];
    PushStack Widen(b4);
    if (IsZero(Widen(b4))) {
      TraceOperation 032402 (Print "The ");
      GamePrint "The ";
      TraceOperation 032405 (Print_obj (Var (Global 118)));
      Let b5 = M[009053];
      Let b6 = M[009054];
      Let b7 = M[Offset(Offset(000741,Mul(MakeHiLo(b5,b6),9)),7)];
      Let b8 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b5,b6),9)),7),1)];
      Let b9 = M[Address(MakeHiLo(b7,b8))];
      if (IsZeroByte(b9)) {
        GamePrint "";
        TraceOperation 032407 (Print_ret " is empty.");
        GamePrint " is empty.\n";
        PopFrame return_address_10;
        JumpReturn: return_address_10, result: 1
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b7,b8)),1));
        TraceOperation 032407 (Print_ret " is empty.");
        GamePrint " is empty.\n";
        PopFrame return_address_11;
        JumpReturn: return_address_11, result: 1
      }
    } else {
      TraceOperation 032393 (Call (Floc 036522) [Var (Global 118)] Sp);
      Let b12 = M[009053];
      Let b13 = M[009054];
      PushFrame 032393;
      SetLocal 1 MakeHiLo(b12,b13);
      JumpCall: 036522, #actuals: 1
    }
  }
LocReturn 032393:
  PushStack call_result;
  TraceOperation 032399 (Jz (Var Sp) (Branch F Dtrue));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 032402 (Print "The ");
    GamePrint "The ";
    TraceOperation 032405 (Print_obj (Var (Global 118)));
    Let b2 = M[009053];
    Let b3 = M[009054];
    Let b4 = M[Offset(Offset(000741,Mul(MakeHiLo(b2,b3),9)),7)];
    Let b5 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b2,b3),9)),7),1)];
    Let b6 = M[Address(MakeHiLo(b4,b5))];
    if (IsZeroByte(b6)) {
      GamePrint "";
      TraceOperation 032407 (Print_ret " is empty.");
      GamePrint " is empty.\n";
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b4,b5)),1));
      TraceOperation 032407 (Print_ret " is empty.");
      GamePrint " is empty.\n";
      PopFrame return_address_8;
      JumpReturn: return_address_8, result: 1
    }
  } else {
    PopFrame return_address_9;
    JumpReturn: return_address_9, result: 1
  }
LocOp 032416:
  TraceOperation 032416 (Print "The ");
  GamePrint "The ";
  TraceOperation 032419 (Print_obj (Var (Global 118)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  if (IsZeroByte(b5)) {
    GamePrint "";
    TraceOperation 032421 (Print_ret " is closed.");
    GamePrint " is closed.\n";
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
    TraceOperation 032421 (Print_ret " is closed.");
    GamePrint " is closed.\n";
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 1
  }
LocOp 032428:
  TraceOperation 032428 (Print "You can't look inside a ");
  GamePrint "You can't look inside a ";
  TraceOperation 032441 (Print_obj (Var (Global 118)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  if (IsZeroByte(b5)) {
    GamePrint "";
    TraceOperation 032443 (Print_ret ".");
    GamePrint ".\n";
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
    TraceOperation 032443 (Print_ret ".");
    GamePrint ".\n";
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 1
  }
--[171]--------------------------------------------------
LocRoutine 032446:
  MakeRoutineFrame 0;
  Jump: 032447
LocOp 032447:
  TraceOperation 032447 (Test_attr (Var (Global 118)) (Con 10) (Branch F (Dloc 032459)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),1)];
  if (TestBit(b3,5)) {
    TraceOperation 032451 (Call (Floc 022396) [Con 57,Var (Global 118)] Sp);
    Let b4 = M[009053];
    Let b5 = M[009054];
    PushFrame 032451;
    SetLocal 1 57;
    SetLocal 2 MakeHiLo(b4,b5);
    JumpCall: 022396, #actuals: 2
  } else {
    Jump: 032459
  }
LocReturn 032451:
  PushStack call_result;
  TraceOperation 032458 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 032459:
  TraceOperation 032459 (Print "Look on a ");
  GamePrint "Look on a ";
  TraceOperation 032468 (Print_obj (Var (Global 118)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  if (IsZeroByte(b5)) {
    GamePrint "";
    TraceOperation 032470 (Print_ret "???");
    GamePrint "???\n";
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
    TraceOperation 032470 (Print_ret "???");
    GamePrint "???\n";
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 1
  }
--[172]--------------------------------------------------
LocRoutine 032476:
  MakeRoutineFrame 0;
  Jump: 032477
LocOp 032477:
  TraceOperation 032477 (Print_ret "There is nothing but dust there.");
  GamePrint "There is nothing but dust there.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[173]--------------------------------------------------
LocRoutine 032490:
  MakeRoutineFrame 0;
  Jump: 032491
LocOp 032491:
  TraceOperation 032491 (Call (Floc 037468) [Con -26002] Sp);
  PushFrame 032491;
  SetLocal 1 -26002;
  JumpCall: 037468, #actuals: 1
LocReturn 032491:
  PushStack call_result;
  TraceOperation 032498 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[174]--------------------------------------------------
LocRoutine 032500:
  MakeRoutineFrame 0;
  Jump: 032501
LocOp 032501:
  TraceOperation 032501 (Print_ret "You can't do that.");
  GamePrint "You can't do that.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[175]--------------------------------------------------
LocRoutine 032510:
  MakeRoutineFrame 0;
  Jump: 032511
LocOp 032511:
  TraceOperation 032511 (Print "It's not clear that a ");
  GamePrint "It's not clear that a ";
  TraceOperation 032522 (Print_obj (Var (Global 118)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  if (IsZeroByte(b5)) {
    GamePrint "";
    TraceOperation 032524 (Print_ret " can be melted.");
    GamePrint " can be melted.\n";
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
    TraceOperation 032524 (Print_ret " can be melted.");
    GamePrint " can be melted.\n";
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 1
  }
--[176]--------------------------------------------------
LocRoutine 032536:
  MakeRoutineFrame 0;
  Jump: 032537
LocOp 032537:
  TraceOperation 032537 (Call (Floc 038124) [Var (Global 118)] Sp);
  Let b1 = M[009053];
  Let b2 = M[009054];
  PushFrame 032537;
  SetLocal 1 MakeHiLo(b1,b2);
  JumpCall: 038124, #actuals: 1
LocReturn 032537:
  PushStack call_result;
  TraceOperation 032543 (Jz (Var Sp) (Branch T Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  } else {
    TraceOperation 032546 (Print_ret "You aren't an accomplished enough juggler.");
    GamePrint "You aren't an accomplished enough juggler.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  }
--[177]--------------------------------------------------
LocRoutine 032576:
  MakeRoutineFrame 0;
  Jump: 032577
LocOp 032577:
  TraceOperation 032577 (Test_attr (Var (Global 118)) (Con 17) (Branch F (Dloc 032605)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),2)];
  if (TestBit(b3,6)) {
    TraceOperation 032581 (Print "Moving the ");
    GamePrint "Moving the ";
    TraceOperation 032590 (Print_obj (Var (Global 118)));
    Let b4 = M[009053];
    Let b5 = M[009054];
    Let b6 = M[Offset(Offset(000741,Mul(MakeHiLo(b4,b5),9)),7)];
    Let b7 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b4,b5),9)),7),1)];
    Let b8 = M[Address(MakeHiLo(b6,b7))];
    if (IsZeroByte(b8)) {
      GamePrint "";
      TraceOperation 032592 (Print_ret " reveals nothing.");
      GamePrint " reveals nothing.\n";
      PopFrame return_address_9;
      JumpReturn: return_address_9, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b6,b7)),1));
      TraceOperation 032592 (Print_ret " reveals nothing.");
      GamePrint " reveals nothing.\n";
      PopFrame return_address_10;
      JumpReturn: return_address_10, result: 1
    }
  } else {
    Jump: 032605
  }
LocOp 032605:
  TraceOperation 032605 (Print "You can't move the ");
  GamePrint "You can't move the ";
  TraceOperation 032614 (Print_obj (Var (Global 118)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  if (IsZeroByte(b5)) {
    GamePrint "";
    TraceOperation 032616 (Print_ret ".");
    GamePrint ".\n";
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
    TraceOperation 032616 (Print_ret ".");
    GamePrint ".\n";
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 1
  }
--[178]--------------------------------------------------
LocRoutine 032620:
  MakeRoutineFrame 0;
  Jump: 032621
LocOp 032621:
  TraceOperation 032621 (Print_ret "You'll have to speak up if you expect me to hear you!");
  GamePrint "You'll have to speak up if you expect me to hear you!\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[179]--------------------------------------------------
LocRoutine 032656:
  MakeRoutineFrame 0;
  Jump: 032657
LocOp 032657:
  TraceOperation 032657 (Call (Floc 020688) [] Sp);
  PushFrame 032657;
  JumpCall: 020688, #actuals: 0
LocReturn 032657:
  PushStack call_result;
  TraceOperation 032662 (Jz (Var Sp) (Branch F Dtrue));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 032665 (Jz (Var (Global 119)) (Branch T (Dloc 032672)));
    Let b2 = M[009055];
    Let b3 = M[009056];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 032672
    } else {
      TraceOperation 032668 (Test_attr (Var (Global 119)) (Con 29) (Branch T Dfalse));
      Let b4 = M[009055];
      Let b5 = M[009056];
      Let b6 = M[Offset(Offset(000741,Mul(MakeHiLo(b4,b5),9)),3)];
      if (TestBit(b6,2)) {
        PopFrame return_address_7;
        JumpReturn: return_address_7, result: 0
      } else {
        Jump: 032672
      }
    }
  } else {
    PopFrame return_address_8;
    JumpReturn: return_address_8, result: 1
  }
LocOp 032672:
  TraceOperation 032672 (Print "Trying to destroy the ");
  GamePrint "Trying to destroy the ";
  TraceOperation 032687 (Print_obj (Var (Global 118)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  if (IsZeroByte(b5)) {
    GamePrint "";
    TraceOperation 032689 (Print " with ");
    GamePrint " with ";
    TraceOperation 032692 (Jz (Var (Global 119)) (Branch F (Dloc 032707)));
    Let b6 = M[009055];
    Let b7 = M[009056];
    if (IsZero(MakeHiLo(b6,b7))) {
      TraceOperation 032695 (Print "your bare hands");
      GamePrint "your bare hands";
      TraceOperation 032704 (Jump 032712);
      Jump: 032712
    } else {
      Jump: 032707
    }
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
    TraceOperation 032689 (Print " with ");
    GamePrint " with ";
    TraceOperation 032692 (Jz (Var (Global 119)) (Branch F (Dloc 032707)));
    Let b8 = M[009055];
    Let b9 = M[009056];
    if (IsZero(MakeHiLo(b8,b9))) {
      TraceOperation 032695 (Print "your bare hands");
      GamePrint "your bare hands";
      TraceOperation 032704 (Jump 032712);
      Jump: 032712
    } else {
      Jump: 032707
    }
  }
LocOp 032707:
  TraceOperation 032707 (Print "a ");
  GamePrint "a ";
  TraceOperation 032710 (Print_obj (Var (Global 119)));
  Let b1 = M[009055];
  Let b2 = M[009056];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  if (IsZeroByte(b5)) {
    GamePrint "";
    Jump: 032712
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
    Jump: 032712
  }
LocOp 032712:
  TraceOperation 032712 (Print_ret " is futile.");
  GamePrint " is futile.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[180]--------------------------------------------------
LocRoutine 032722:
  MakeRoutineFrame 0;
  Jump: 032723
LocOp 032723:
  TraceOperation 032723 (Test_attr (Var (Global 118)) (Con 30) (Branch F (Dloc 032735)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),3)];
  if (TestBit(b3,1)) {
    TraceOperation 032727 (Call (Floc 022396) [Con 19,Var (Global 118)] Sp);
    Let b4 = M[009053];
    Let b5 = M[009054];
    PushFrame 032727;
    SetLocal 1 19;
    SetLocal 2 MakeHiLo(b4,b5);
    JumpCall: 022396, #actuals: 2
  } else {
    Jump: 032735
  }
LocReturn 032727:
  PushStack call_result;
  TraceOperation 032734 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 032735:
  TraceOperation 032735 (Print_ret "Nice try.");
  GamePrint "Nice try.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[181]--------------------------------------------------
LocRoutine 032744:
  MakeRoutineFrame 0;
  Jump: 032745
LocOp 032745:
  TraceOperation 032745 (Je [Var (Global 0),Con 185] (Branch F (Dloc 032857)));
  Let b1 = M[008817];
  Let b2 = M[008818];
  if (Equal(MakeHiLo(b1,b2),185)) {
    TraceOperation 032750 (Jin (Con 186) (Var (Global 0)) (Branch F (Dloc 032857)));
    Let b3 = M[008817];
    Let b4 = M[008818];
    Let b5 = M[002419];
    if (Equal(MakeHiLo(b3,b4),Widen(b5))) {
      TraceOperation 032755 (Jz (Var (Global 149)) (Branch F (Dloc 032857)));
      Let b6 = M[009115];
      Let b7 = M[009116];
      if (IsZero(MakeHiLo(b6,b7))) {
        TraceOperation 032759 (Call (Floc 021638) [Con 25759] Sp);
        PushFrame 032759;
        SetLocal 1 25759;
        JumpCall: 021638, #actuals: 1
      } else {
        Jump: 032857
      }
    } else {
      Jump: 032857
    }
  } else {
    Jump: 032857
  }
LocReturn 032759:
  PushStack call_result;
  TraceOperation 032766 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 032771 (Store (Con 165) (Con 1));
  SetByte 009115 0;
  SetByte 009116 1;
  TraceOperation 032774 (Print "The cyclops, hearing the name of his father's deadly nemesis, flees the room by knocking down the wall on the east of the room.");
  GamePrint "The cyclops, hearing the name of his father's deadly nemesis, flees the room by knocking down the wall on the east of the room.";
  TraceOperation 032843 New_line;
  GamePrint "\n";
  TraceOperation 032844 (Store (Con 159) (Con 1));
  SetByte 009103 0;
  SetByte 009104 1;
  TraceOperation 032847 (Clear_attr (Con 186) (Con 2));
  Let b2 = M[002415];
  SetByte 002415 ClearBit(b2,5);
  TraceOperation 032850 (Call (Floc 030906) [Con 186] Sp);
  PushFrame 032850;
  SetLocal 1 186;
  JumpCall: 030906, #actuals: 1
LocReturn 032850:
  PushStack call_result;
  TraceOperation 032856 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 032857:
  TraceOperation 032857 (Print_ret "Wasn't he a sailor?");
  GamePrint "Wasn't he a sailor?\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[182]--------------------------------------------------
LocRoutine 032874:
  MakeRoutineFrame 0;
  Jump: 032875
LocOp 032875:
  TraceOperation 032875 (Print_ret "You probably put spinach in your gas tank, too.");
  GamePrint "You probably put spinach in your gas tank, too.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[183]--------------------------------------------------
LocRoutine 032900:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 032905
LocOp 032905:
  TraceOperation 032905 (Test_attr (Var (Global 118)) (Con 19) (Branch F (Dloc 033015)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),2)];
  if (TestBit(b3,4)) {
    TraceOperation 032910 (Get_prop (Var (Global 118)) (Con 10) Sp);
    Let b4 = M[009053];
    Let b5 = M[009054];
    Let b6 = M[Offset(Offset(000741,Mul(MakeHiLo(b4,b5),9)),7)];
    Let b7 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b4,b5),9)),7),1)];
    Let b8 = M[Address(MakeHiLo(b6,b7))];
    Error: getPropsA
  } else {
    Jump: 033015
  }
LocOp 032931:
  TraceOperation 032931 (Set_attr (Var (Global 118)) (Con 11));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),1)];
  SetByte Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),1) SetBit(b3,4);
  TraceOperation 032934 (Set_attr (Var (Global 118)) (Con 3));
  Let b4 = M[009053];
  Let b5 = M[009054];
  Let b6 = M[Offset(Offset(000741,Mul(MakeHiLo(b4,b5),9)),0)];
  SetByte Offset(Offset(000741,Mul(MakeHiLo(b4,b5),9)),0) SetBit(b6,4);
  TraceOperation 032937 (Get_child (Var (Global 118)) Sp (Branch F (Dloc 032945)));
  Let b7 = M[009053];
  Let b8 = M[009054];
  Let b9 = M[Offset(Offset(000741,Mul(MakeHiLo(b7,b8),9)),6)];
  PushStack Widen(b9);
  if (IsZero(Widen(b9))) {
    TraceOperation 032945 (Print_ret "Opened.");
    GamePrint "Opened.\n";
    PopFrame return_address_10;
    JumpReturn: return_address_10, result: 1
  } else {
    TraceOperation 032941 (Test_attr (Var (Global 118)) (Con 12) (Branch F (Dloc 032952)));
    Let b11 = M[009053];
    Let b12 = M[009054];
    Let b13 = M[Offset(Offset(000741,Mul(MakeHiLo(b11,b12),9)),1)];
    if (TestBit(b13,3)) {
      TraceOperation 032945 (Print_ret "Opened.");
      GamePrint "Opened.\n";
      PopFrame return_address_14;
      JumpReturn: return_address_14, result: 1
    } else {
      Jump: 032952
    }
  }
LocOp 032952:
  TraceOperation 032952 (Get_child (Var (Global 118)) (Local 1) (Branch F (Dloc 032988)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),6)];
  SetLocal 1 Widen(b3);
  if (IsZero(Widen(b3))) {
    Jump: 032988
  } else {
    TraceOperation 032956 (Get_sibling (Var (Local 1)) Sp (Branch T (Dloc 032988)));
    Let b4 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),5)];
    PushStack Widen(b4);
    if (IsZero(Widen(b4))) {
      TraceOperation 032960 (Test_attr (Var (Local 1)) (Con 3) (Branch T (Dloc 032988)));
      Let b5 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),0)];
      if (TestBit(b5,4)) {
        Jump: 032988
      } else {
        TraceOperation 032964 (Get_prop (Var (Local 1)) (Con 14) (Local 2));
        Let b6 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),7)];
        Let b7 = M[Offset(Offset(Offset(000741,Mul(GetLocal(1),9)),7),1)];
        Let b8 = M[Address(MakeHiLo(b6,b7))];
        Error: getPropsA
      }
    } else {
      Jump: 032988
    }
  }
LocOp 032988:
  TraceOperation 032988 (Print "Opening the ");
  GamePrint "Opening the ";
  TraceOperation 032997 (Print_obj (Var (Global 118)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  if (IsZeroByte(b5)) {
    GamePrint "";
    TraceOperation 032999 (Print " reveals ");
    GamePrint " reveals ";
    TraceOperation 033006 (Call (Floc 036440) [Var (Global 118)] Sp);
    Let b6 = M[009053];
    Let b7 = M[009054];
    PushFrame 033006;
    SetLocal 1 MakeHiLo(b6,b7);
    JumpCall: 036440, #actuals: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
    TraceOperation 032999 (Print " reveals ");
    GamePrint " reveals ";
    TraceOperation 033006 (Call (Floc 036440) [Var (Global 118)] Sp);
    Let b8 = M[009053];
    Let b9 = M[009054];
    PushFrame 033006;
    SetLocal 1 MakeHiLo(b8,b9);
    JumpCall: 036440, #actuals: 1
  }
LocReturn 033006:
  PushStack call_result;
  TraceOperation 033012 (Print_ret ".");
  GamePrint ".\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 033015:
  TraceOperation 033015 (Test_attr (Var (Global 118)) (Con 23) (Branch F (Dloc 033049)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),2)];
  if (TestBit(b3,0)) {
    TraceOperation 033019 (Test_attr (Var (Global 118)) (Con 11) (Branch F (Dloc 033032)));
    Let b4 = M[009053];
    Let b5 = M[009054];
    Let b6 = M[Offset(Offset(000741,Mul(MakeHiLo(b4,b5),9)),1)];
    if (TestBit(b6,4)) {
      TraceOperation 033023 (Print_ret "It is already open.");
      GamePrint "It is already open.\n";
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 1
    } else {
      Jump: 033032
    }
  } else {
    Jump: 033049
  }
LocOp 033032:
  TraceOperation 033032 (Print "The ");
  GamePrint "The ";
  TraceOperation 033035 (Print_obj (Var (Global 118)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  if (IsZeroByte(b5)) {
    GamePrint "";
    TraceOperation 033037 (Print " opens.");
    GamePrint " opens.";
    TraceOperation 033044 New_line;
    GamePrint "\n";
    TraceOperation 033045 (Set_attr (Var (Global 118)) (Con 11));
    Let b6 = M[009053];
    Let b7 = M[009054];
    Let b8 = M[Offset(Offset(000741,Mul(MakeHiLo(b6,b7),9)),1)];
    SetByte Offset(Offset(000741,Mul(MakeHiLo(b6,b7),9)),1) SetBit(b8,4);
    TraceOperation 033048 Rtrue;
    PopFrame return_address_9;
    JumpReturn: return_address_9, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
    TraceOperation 033037 (Print " opens.");
    GamePrint " opens.";
    TraceOperation 033044 New_line;
    GamePrint "\n";
    TraceOperation 033045 (Set_attr (Var (Global 118)) (Con 11));
    Let b10 = M[009053];
    Let b11 = M[009054];
    Let b12 = M[Offset(Offset(000741,Mul(MakeHiLo(b10,b11),9)),1)];
    SetByte Offset(Offset(000741,Mul(MakeHiLo(b10,b11),9)),1) SetBit(b12,4);
    TraceOperation 033048 Rtrue;
    PopFrame return_address_13;
    JumpReturn: return_address_13, result: 1
  }
LocOp 033049:
  TraceOperation 033049 (Print "You must tell me how to do that to a ");
  GamePrint "You must tell me how to do that to a ";
  TraceOperation 033072 (Print_obj (Var (Global 118)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  if (IsZeroByte(b5)) {
    GamePrint "";
    TraceOperation 033074 (Print_ret ".");
    GamePrint ".\n";
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
    TraceOperation 033074 (Print_ret ".");
    GamePrint ".\n";
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 1
  }
--[184]--------------------------------------------------
LocRoutine 033078:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 033081
LocOp 033081:
  TraceOperation 033081 (Je [Var (Global 119),Con 248] (Branch F (Dloc 033131)));
  Let b1 = M[009055];
  Let b2 = M[009056];
  if (Equal(MakeHiLo(b1,b2),248)) {
    TraceOperation 033085 (Get_parent (Var (Global 111)) (Local 1));
    Let b3 = M[009039];
    Let b4 = M[009040];
    Let b5 = M[Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),4)];
    SetLocal 1 Widen(b5);
    TraceOperation 033088 (Test_attr (Var (Local 1)) (Con 27) (Branch F (Dloc 033118)));
    Let b6 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),3)];
    if (TestBit(b6,4)) {
      TraceOperation 033092 (Get_parent (Var (Local 1)) Sp);
      Let b7 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),4)];
      PushStack Widen(b7);
      TraceOperation 033095 (Insert_obj (Var (Global 118)) (Var Sp));
      Let b8 = M[009053];
      Let b9 = M[009054];
      PopStack popped10;
      Let b11 = M[Offset(Offset(000741,Mul(MakeHiLo(b8,b9),9)),4)];
      if (IsZero(Widen(b11))) {
        SetByte Offset(Offset(000741,Mul(MakeHiLo(b8,b9),9)),4) LoByte(popped10);
        Let b12 = M[Offset(Offset(000741,Mul(popped10,9)),6)];
        SetByte Offset(Offset(000741,Mul(MakeHiLo(b8,b9),9)),5) LoByte(Widen(b12));
        SetByte Offset(Offset(000741,Mul(popped10,9)),6) b9;
        TraceOperation 033098 (Print "Ahoy -- ");
        GamePrint "Ahoy -- ";
        TraceOperation 033107 (Print_obj (Var (Global 118)));
        Let b13 = M[009053];
        Let b14 = M[009054];
        Let b15 = M[Offset(Offset(000741,Mul(MakeHiLo(b13,b14),9)),7)];
        Let b16 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b13,b14),9)),7),1)];
        Let b17 = M[Address(MakeHiLo(b15,b16))];
        if (IsZeroByte(b17)) {
          GamePrint "";
          TraceOperation 033109 (Print_ret " overboard!");
          GamePrint " overboard!\n";
          PopFrame return_address_18;
          JumpReturn: return_address_18, result: 1
        } else {
          GamePrint GetText(Offset(Address(MakeHiLo(b15,b16)),1));
          TraceOperation 033109 (Print_ret " overboard!");
          GamePrint " overboard!\n";
          PopFrame return_address_19;
          JumpReturn: return_address_19, result: 1
        }
      } else {
        Let b20 = M[Offset(Offset(000741,Mul(Widen(b11),9)),6)];
        if (Equal(Widen(b20),MakeHiLo(b8,b9))) {
          Let b21 = M[Offset(Offset(000741,Mul(MakeHiLo(b8,b9),9)),5)];
          SetByte Offset(Offset(000741,Mul(Widen(b11),9)),6) LoByte(Widen(b21));
          SetByte Offset(Offset(000741,Mul(MakeHiLo(b8,b9),9)),4) LoByte(popped10);
          Let b22 = M[Offset(Offset(000741,Mul(popped10,9)),6)];
          SetByte Offset(Offset(000741,Mul(MakeHiLo(b8,b9),9)),5) LoByte(Widen(b22));
          SetByte Offset(Offset(000741,Mul(popped10,9)),6) b9;
          TraceOperation 033098 (Print "Ahoy -- ");
          GamePrint "Ahoy -- ";
          TraceOperation 033107 (Print_obj (Var (Global 118)));
          Let b23 = M[009053];
          Let b24 = M[009054];
          Let b25 = M[Offset(Offset(000741,Mul(MakeHiLo(b23,b24),9)),7)];
          Let b26 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b23,b24),9)),7),1)];
          Let b27 = M[Address(MakeHiLo(b25,b26))];
          if (IsZeroByte(b27)) {
            GamePrint "";
            TraceOperation 033109 (Print_ret " overboard!");
            GamePrint " overboard!\n";
            PopFrame return_address_28;
            JumpReturn: return_address_28, result: 1
          } else {
            GamePrint GetText(Offset(Address(MakeHiLo(b25,b26)),1));
            TraceOperation 033109 (Print_ret " overboard!");
            GamePrint " overboard!\n";
            PopFrame return_address_29;
            JumpReturn: return_address_29, result: 1
          }
        } else {
          Error: unlink/loop
        }
      }
    } else {
      Jump: 033118
    }
  } else {
    Jump: 033131
  }
LocOp 033118:
  TraceOperation 033118 (Print_ret "You're not in anything!");
  GamePrint "You're not in anything!\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 033131:
  TraceOperation 033131 (Print_ret "Huh?");
  GamePrint "Huh?\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[185]--------------------------------------------------
LocRoutine 033136:
  MakeRoutineFrame 0;
  Jump: 033137
LocOp 033137:
  TraceOperation 033137 (Print_ret "You can't pick that.");
  GamePrint "You can't pick that.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[186]--------------------------------------------------
LocRoutine 033148:
  MakeRoutineFrame 0;
  Jump: 033149
LocOp 033149:
  TraceOperation 033149 (Print_ret "That's silly!");
  GamePrint "That's silly!\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[187]--------------------------------------------------
LocRoutine 033162:
  MakeRoutineFrame 0;
  Jump: 033163
LocOp 033163:
  TraceOperation 033163 (Print_ret "This has no effect.");
  GamePrint "This has no effect.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[188]--------------------------------------------------
LocRoutine 033174:
  MakeRoutineFrame 0;
  Jump: 033175
LocOp 033175:
  TraceOperation 033175 (Je [Var (Global 118),Con 237] (Branch F (Dloc 033252)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  if (Equal(MakeHiLo(b1,b2),237)) {
    TraceOperation 033180 (Call (Floc 030906) [Var (Global 118)] Sp);
    Let b3 = M[009053];
    Let b4 = M[009054];
    PushFrame 033180;
    SetLocal 1 MakeHiLo(b3,b4);
    JumpCall: 030906, #actuals: 1
  } else {
    Jump: 033252
  }
LocReturn 033180:
  PushStack call_result;
  TraceOperation 033186 (Test_attr (Var (Global 119)) (Con 25) (Branch F (Dloc 033220)));
  Let b1 = M[009055];
  Let b2 = M[009056];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),3)];
  if (TestBit(b3,6)) {
    TraceOperation 033190 (Test_attr (Var (Global 119)) (Con 20) (Branch F (Dloc 033220)));
    Let b4 = M[009055];
    Let b5 = M[009056];
    Let b6 = M[Offset(Offset(000741,Mul(MakeHiLo(b4,b5),9)),2)];
    if (TestBit(b6,3)) {
      TraceOperation 033194 (Print "The ");
      GamePrint "The ";
      TraceOperation 033197 (Print_obj (Var (Global 119)));
      Let b7 = M[009055];
      Let b8 = M[009056];
      Let b9 = M[Offset(Offset(000741,Mul(MakeHiLo(b7,b8),9)),7)];
      Let b10 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b7,b8),9)),7),1)];
      Let b11 = M[Address(MakeHiLo(b9,b10))];
      if (IsZeroByte(b11)) {
        GamePrint "";
        TraceOperation 033199 (Print " is extinguished.");
        GamePrint " is extinguished.";
        TraceOperation 033212 New_line;
        GamePrint "\n";
        TraceOperation 033213 (Clear_attr (Var (Global 119)) (Con 20));
        Let b12 = M[009055];
        Let b13 = M[009056];
        Let b14 = M[Offset(Offset(000741,Mul(MakeHiLo(b12,b13),9)),2)];
        SetByte Offset(Offset(000741,Mul(MakeHiLo(b12,b13),9)),2) ClearBit(b14,3);
        TraceOperation 033216 (Clear_attr (Var (Global 119)) (Con 25));
        Let b15 = M[009055];
        Let b16 = M[009056];
        Let b17 = M[Offset(Offset(000741,Mul(MakeHiLo(b15,b16),9)),3)];
        SetByte Offset(Offset(000741,Mul(MakeHiLo(b15,b16),9)),3) ClearBit(b17,6);
        TraceOperation 033219 Rtrue;
        PopFrame return_address_18;
        JumpReturn: return_address_18, result: 1
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b9,b10)),1));
        TraceOperation 033199 (Print " is extinguished.");
        GamePrint " is extinguished.";
        TraceOperation 033212 New_line;
        GamePrint "\n";
        TraceOperation 033213 (Clear_attr (Var (Global 119)) (Con 20));
        Let b19 = M[009055];
        Let b20 = M[009056];
        Let b21 = M[Offset(Offset(000741,Mul(MakeHiLo(b19,b20),9)),2)];
        SetByte Offset(Offset(000741,Mul(MakeHiLo(b19,b20),9)),2) ClearBit(b21,3);
        TraceOperation 033216 (Clear_attr (Var (Global 119)) (Con 25));
        Let b22 = M[009055];
        Let b23 = M[009056];
        Let b24 = M[Offset(Offset(000741,Mul(MakeHiLo(b22,b23),9)),3)];
        SetByte Offset(Offset(000741,Mul(MakeHiLo(b22,b23),9)),3) ClearBit(b24,6);
        TraceOperation 033219 Rtrue;
        PopFrame return_address_25;
        JumpReturn: return_address_25, result: 1
      }
    } else {
      Jump: 033220
    }
  } else {
    Jump: 033220
  }
LocOp 033220:
  TraceOperation 033220 (Print "The water spills over the ");
  GamePrint "The water spills over the ";
  TraceOperation 033231 (Print_obj (Var (Global 119)));
  Let b1 = M[009055];
  Let b2 = M[009056];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  if (IsZeroByte(b5)) {
    GamePrint "";
    TraceOperation 033233 (Print_ret ", to the floor, and evaporates.");
    GamePrint ", to the floor, and evaporates.\n";
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
    TraceOperation 033233 (Print_ret ", to the floor, and evaporates.");
    GamePrint ", to the floor, and evaporates.\n";
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 1
  }
LocOp 033252:
  TraceOperation 033252 (Je [Var (Global 118),Con 98] (Branch F (Dloc 033265)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  if (Equal(MakeHiLo(b1,b2),98)) {
    TraceOperation 033256 (Call (Floc 022396) [Con 18,Con 98,Var (Global 119)] Sp);
    Let b3 = M[009055];
    Let b4 = M[009056];
    PushFrame 033256;
    SetLocal 1 18;
    SetLocal 2 98;
    SetLocal 3 MakeHiLo(b3,b4);
    JumpCall: 022396, #actuals: 3
  } else {
    Jump: 033265
  }
LocReturn 033256:
  PushStack call_result;
  TraceOperation 033264 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 033265:
  TraceOperation 033265 (Print_ret "You can't pour that.");
  GamePrint "You can't pour that.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[189]--------------------------------------------------
LocRoutine 033276:
  MakeRoutineFrame 0;
  Jump: 033277
LocOp 033277:
  TraceOperation 033277 (Je [Var (Global 0),Con 212] (Branch F (Dloc 033288)));
  Let b1 = M[008817];
  Let b2 = M[008818];
  if (Equal(MakeHiLo(b1,b2),212)) {
    TraceOperation 033281 (Call (Floc 037558) [Con 78] Sp);
    PushFrame 033281;
    SetLocal 1 78;
    JumpCall: 037558, #actuals: 1
  } else {
    Jump: 033288
  }
LocReturn 033281:
  PushStack call_result;
  TraceOperation 033287 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 033288:
  TraceOperation 033288 (Print_ret "If you pray enough, your prayers may be answered.");
  GamePrint "If you pray enough, your prayers may be answered.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[190]--------------------------------------------------
LocRoutine 033320:
  MakeRoutineFrame 0;
  Jump: 033321
LocOp 033321:
  TraceOperation 033321 (Jz (Var (Global 119)) (Branch T (Dloc 033344)));
  Let b1 = M[009055];
  Let b2 = M[009056];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 033344
  } else {
    TraceOperation 033324 (Je [Var (Global 119),Con 173] (Branch T (Dloc 033344)));
    Let b3 = M[009055];
    Let b4 = M[009056];
    if (Equal(MakeHiLo(b3,b4),173)) {
      Jump: 033344
    } else {
      TraceOperation 033328 (Print "Pump it up with a ");
      GamePrint "Pump it up with a ";
      TraceOperation 033339 (Print_obj (Var (Global 119)));
      Let b5 = M[009055];
      Let b6 = M[009056];
      Let b7 = M[Offset(Offset(000741,Mul(MakeHiLo(b5,b6),9)),7)];
      Let b8 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b5,b6),9)),7),1)];
      Let b9 = M[Address(MakeHiLo(b7,b8))];
      if (IsZeroByte(b9)) {
        GamePrint "";
        TraceOperation 033341 (Print_ret "?");
        GamePrint "?\n";
        PopFrame return_address_10;
        JumpReturn: return_address_10, result: 1
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b7,b8)),1));
        TraceOperation 033341 (Print_ret "?");
        GamePrint "?\n";
        PopFrame return_address_11;
        JumpReturn: return_address_11, result: 1
      }
    }
  }
LocOp 033344:
  TraceOperation 033344 (Jin (Con 173) (Var (Global 111)) (Branch F (Dloc 033357)));
  Let b1 = M[009039];
  Let b2 = M[009040];
  Let b3 = M[002302];
  if (Equal(MakeHiLo(b1,b2),Widen(b3))) {
    TraceOperation 033348 (Call (Floc 022396) [Con 23,Var (Global 118),Con 173] Sp);
    Let b4 = M[009053];
    Let b5 = M[009054];
    PushFrame 033348;
    SetLocal 1 23;
    SetLocal 2 MakeHiLo(b4,b5);
    SetLocal 3 173;
    JumpCall: 022396, #actuals: 3
  } else {
    Jump: 033357
  }
LocReturn 033348:
  PushStack call_result;
  TraceOperation 033356 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[191]--------------------------------------------------
LocRoutine 033374:
  MakeRoutineFrame 0;
  Jump: 033375
LocOp 033375:
  TraceOperation 033375 (Call (Floc 037468) [Con -25995] Sp);
  PushFrame 033375;
  SetLocal 1 -25995;
  JumpCall: 037468, #actuals: 1
LocReturn 033375:
  PushStack call_result;
  TraceOperation 033382 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[192]--------------------------------------------------
LocRoutine 033384:
  MakeRoutineFrame 0;
  Jump: 033385
LocOp 033385:
  TraceOperation 033385 (Print_ret "You can't push things to that.");
  GamePrint "You can't push things to that.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[193]--------------------------------------------------
LocRoutine 033402:
  MakeRoutineFrame 0;
  Jump: 033403
LocOp 033403:
  TraceOperation 033403 (Call (Floc 020688) [] Sp);
  PushFrame 033403;
  JumpCall: 020688, #actuals: 0
LocReturn 033403:
  PushStack call_result;
  TraceOperation 033408 (Jz (Var Sp) (Branch F Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 033411 (Call (Floc 031428) [] Sp);
    PushFrame 033411;
    JumpCall: 031428, #actuals: 0
  } else {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  }
LocReturn 033411:
  PushStack call_result;
  TraceOperation 033416 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[194]--------------------------------------------------
LocRoutine 033418:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 033421
LocOp 033421:
  TraceOperation 033421 (Test_attr (Var (Global 119)) (Con 11) (Branch T (Dloc 033449)));
  Let b1 = M[009055];
  Let b2 = M[009056];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),1)];
  if (TestBit(b3,4)) {
    Jump: 033449
  } else {
    TraceOperation 033425 (Test_attr (Var (Global 119)) (Con 23) (Branch T (Dloc 033433)));
    Let b4 = M[009055];
    Let b5 = M[009056];
    Let b6 = M[Offset(Offset(000741,Mul(MakeHiLo(b4,b5),9)),2)];
    if (TestBit(b6,0)) {
      Jump: 033433
    } else {
      TraceOperation 033429 (Test_attr (Var (Global 119)) (Con 19) (Branch T (Dloc 033449)));
      Let b7 = M[009055];
      Let b8 = M[009056];
      Let b9 = M[Offset(Offset(000741,Mul(MakeHiLo(b7,b8),9)),2)];
      if (TestBit(b9,4)) {
        Jump: 033449
      } else {
        Jump: 033433
      }
    }
  }
LocOp 033433:
  TraceOperation 033433 (Test_attr (Var (Global 119)) (Con 27) (Branch F (Dloc 033440)));
  Let b1 = M[009055];
  Let b2 = M[009056];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),3)];
  if (TestBit(b3,4)) {
    TraceOperation 033437 (Jump 033449);
    Jump: 033449
  } else {
    Jump: 033440
  }
LocOp 033440:
  TraceOperation 033440 (Print_ret "You can't do that.");
  GamePrint "You can't do that.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 033449:
  TraceOperation 033449 (Test_attr (Var (Global 119)) (Con 11) (Branch T (Dloc 033477)));
  Let b1 = M[009055];
  Let b2 = M[009056];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),1)];
  if (TestBit(b3,4)) {
    Jump: 033477
  } else {
    TraceOperation 033453 (Print "The ");
    GamePrint "The ";
    TraceOperation 033456 (Print_obj (Var (Global 119)));
    Let b4 = M[009055];
    Let b5 = M[009056];
    Let b6 = M[Offset(Offset(000741,Mul(MakeHiLo(b4,b5),9)),7)];
    Let b7 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b4,b5),9)),7),1)];
    Let b8 = M[Address(MakeHiLo(b6,b7))];
    if (IsZeroByte(b8)) {
      GamePrint "";
      TraceOperation 033458 (Print " isn't open.");
      GamePrint " isn't open.";
      TraceOperation 033469 New_line;
      GamePrint "\n";
      TraceOperation 033470 (Call (Floc 038192) [Var (Global 119)] Sp);
      Let b9 = M[009055];
      Let b10 = M[009056];
      PushFrame 033470;
      SetLocal 1 MakeHiLo(b9,b10);
      JumpCall: 038192, #actuals: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b6,b7)),1));
      TraceOperation 033458 (Print " isn't open.");
      GamePrint " isn't open.";
      TraceOperation 033469 New_line;
      GamePrint "\n";
      TraceOperation 033470 (Call (Floc 038192) [Var (Global 119)] Sp);
      Let b11 = M[009055];
      Let b12 = M[009056];
      PushFrame 033470;
      SetLocal 1 MakeHiLo(b11,b12);
      JumpCall: 038192, #actuals: 1
    }
  }
LocReturn 033470:
  PushStack call_result;
  TraceOperation 033476 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 033477:
  TraceOperation 033477 (Je [Var (Global 119),Var (Global 118)] (Branch F (Dloc 033494)));
  Let b1 = M[009055];
  Let b2 = M[009056];
  Let b3 = M[009053];
  Let b4 = M[009054];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 033481 (Print_ret "How can you do that?");
    GamePrint "How can you do that?\n";
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  } else {
    Jump: 033494
  }
LocOp 033494:
  TraceOperation 033494 (Jin (Var (Global 118)) (Var (Global 119)) (Branch F (Dloc 033515)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[009055];
  Let b4 = M[009056];
  Let b5 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),4)];
  if (Equal(MakeHiLo(b3,b4),Widen(b5))) {
    TraceOperation 033498 (Print "The ");
    GamePrint "The ";
    TraceOperation 033501 (Print_obj (Var (Global 118)));
    Let b6 = M[009053];
    Let b7 = M[009054];
    Let b8 = M[Offset(Offset(000741,Mul(MakeHiLo(b6,b7),9)),7)];
    Let b9 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b6,b7),9)),7),1)];
    Let b10 = M[Address(MakeHiLo(b8,b9))];
    if (IsZeroByte(b10)) {
      GamePrint "";
      TraceOperation 033503 (Print " is already in the ");
      GamePrint " is already in the ";
      TraceOperation 033510 (Print_obj (Var (Global 119)));
      Let b11 = M[009055];
      Let b12 = M[009056];
      Let b13 = M[Offset(Offset(000741,Mul(MakeHiLo(b11,b12),9)),7)];
      Let b14 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b11,b12),9)),7),1)];
      Let b15 = M[Address(MakeHiLo(b13,b14))];
      if (IsZeroByte(b15)) {
        GamePrint "";
        TraceOperation 033512 (Print_ret ".");
        GamePrint ".\n";
        PopFrame return_address_16;
        JumpReturn: return_address_16, result: 1
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b13,b14)),1));
        TraceOperation 033512 (Print_ret ".");
        GamePrint ".\n";
        PopFrame return_address_17;
        JumpReturn: return_address_17, result: 1
      }
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b8,b9)),1));
      TraceOperation 033503 (Print " is already in the ");
      GamePrint " is already in the ";
      TraceOperation 033510 (Print_obj (Var (Global 119)));
      Let b18 = M[009055];
      Let b19 = M[009056];
      Let b20 = M[Offset(Offset(000741,Mul(MakeHiLo(b18,b19),9)),7)];
      Let b21 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b18,b19),9)),7),1)];
      Let b22 = M[Address(MakeHiLo(b20,b21))];
      if (IsZeroByte(b22)) {
        GamePrint "";
        TraceOperation 033512 (Print_ret ".");
        GamePrint ".\n";
        PopFrame return_address_23;
        JumpReturn: return_address_23, result: 1
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b20,b21)),1));
        TraceOperation 033512 (Print_ret ".");
        GamePrint ".\n";
        PopFrame return_address_24;
        JumpReturn: return_address_24, result: 1
      }
    }
  } else {
    Jump: 033515
  }
--[195]--------------------------------------------------
LocRoutine 033520:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 -8145;
  }
  Jump: 033523
LocOp 033523:
  TraceOperation 033523 (And (Var (Global 6)) (Con 134) Sp);
  Let b1 = M[008829];
  Let b2 = M[008830];
  PushStack And(MakeHiLo(b1,b2),134);
  TraceOperation 033527 (Add (Var (Local 1)) (Var Sp) (Local 1));
  PopStack popped3;
  SetLocal 1 Add(GetLocal(1),popped3);
  TraceOperation 033531 (Get_prop (Var (Global 119)) (Con 15) Sp);
  Let b4 = M[009055];
  Let b5 = M[009056];
  Let b6 = M[Offset(Offset(000741,Mul(MakeHiLo(b4,b5),9)),7)];
  Let b7 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b4,b5),9)),7),1)];
  Let b8 = M[Address(MakeHiLo(b6,b7))];
  Error: getPropsA
LocOp 033558:
  TraceOperation 033558 (Call (Floc 038124) [Var (Global 118)] Sp);
  Let b1 = M[009053];
  Let b2 = M[009054];
  PushFrame 033558;
  SetLocal 1 MakeHiLo(b1,b2);
  JumpCall: 038124, #actuals: 1
LocReturn 033558:
  PushStack call_result;
  TraceOperation 033564 (Jz (Var Sp) (Branch F (Dloc 033583)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 033567 (Test_attr (Var (Global 118)) (Con 13) (Branch F (Dloc 033583)));
    Let b2 = M[009053];
    Let b3 = M[009054];
    Let b4 = M[Offset(Offset(000741,Mul(MakeHiLo(b2,b3),9)),1)];
    if (TestBit(b4,2)) {
      TraceOperation 033571 (Print "You don't have the ");
      GamePrint "You don't have the ";
      TraceOperation 033578 (Print_obj (Var (Global 118)));
      Let b5 = M[009053];
      Let b6 = M[009054];
      Let b7 = M[Offset(Offset(000741,Mul(MakeHiLo(b5,b6),9)),7)];
      Let b8 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b5,b6),9)),7),1)];
      Let b9 = M[Address(MakeHiLo(b7,b8))];
      if (IsZeroByte(b9)) {
        GamePrint "";
        TraceOperation 033580 (Print_ret ".");
        GamePrint ".\n";
        PopFrame return_address_10;
        JumpReturn: return_address_10, result: 1
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b7,b8)),1));
        TraceOperation 033580 (Print_ret ".");
        GamePrint ".\n";
        PopFrame return_address_11;
        JumpReturn: return_address_11, result: 1
      }
    } else {
      Jump: 033583
    }
  } else {
    Jump: 033583
  }
LocOp 033583:
  TraceOperation 033583 (Call (Floc 038124) [Var (Global 118)] Sp);
  Let b1 = M[009053];
  Let b2 = M[009054];
  PushFrame 033583;
  SetLocal 1 MakeHiLo(b1,b2);
  JumpCall: 038124, #actuals: 1
LocReturn 033583:
  PushStack call_result;
  TraceOperation 033589 (Jz (Var Sp) (Branch F (Dloc 033600)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 033592 (Call (Floc 037108) [] Sp);
    PushFrame 033592;
    JumpCall: 037108, #actuals: 0
  } else {
    Jump: 033600
  }
LocReturn 033592:
  PushStack call_result;
  TraceOperation 033597 (Jz (Var Sp) (Branch T Dtrue));
  PopStack popped1;
  if (IsZero(popped1)) {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 1
  } else {
    Jump: 033600
  }
LocOp 033600:
  TraceOperation 033600 (Insert_obj (Var (Global 118)) (Var (Global 119)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[009055];
  Let b4 = M[009056];
  Let b5 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),4)];
  if (IsZero(Widen(b5))) {
    SetByte Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),4) b4;
    Let b6 = M[Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),6)];
    SetByte Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),5) LoByte(Widen(b6));
    SetByte Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),6) b2;
    TraceOperation 033603 (Set_attr (Var (Global 118)) (Con 3));
    Let b7 = M[009053];
    Let b8 = M[009054];
    Let b9 = M[Offset(Offset(000741,Mul(MakeHiLo(b7,b8),9)),0)];
    SetByte Offset(Offset(000741,Mul(MakeHiLo(b7,b8),9)),0) SetBit(b9,4);
    TraceOperation 033606 (Call (Floc 037050) [Var (Global 118)] Sp);
    Let b10 = M[009053];
    Let b11 = M[009054];
    PushFrame 033606;
    SetLocal 1 MakeHiLo(b10,b11);
    JumpCall: 037050, #actuals: 1
  } else {
    Let b12 = M[Offset(Offset(000741,Mul(Widen(b5),9)),6)];
    if (Equal(Widen(b12),MakeHiLo(b1,b2))) {
      Let b13 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),5)];
      SetByte Offset(Offset(000741,Mul(Widen(b5),9)),6) LoByte(Widen(b13));
      SetByte Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),4) b4;
      Let b14 = M[Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),6)];
      SetByte Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),5) LoByte(Widen(b14));
      SetByte Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),6) b2;
      TraceOperation 033603 (Set_attr (Var (Global 118)) (Con 3));
      Let b15 = M[009053];
      Let b16 = M[009054];
      Let b17 = M[Offset(Offset(000741,Mul(MakeHiLo(b15,b16),9)),0)];
      SetByte Offset(Offset(000741,Mul(MakeHiLo(b15,b16),9)),0) SetBit(b17,4);
      TraceOperation 033606 (Call (Floc 037050) [Var (Global 118)] Sp);
      Let b18 = M[009053];
      Let b19 = M[009054];
      PushFrame 033606;
      SetLocal 1 MakeHiLo(b18,b19);
      JumpCall: 037050, #actuals: 1
    } else {
      Error: unlink/loop
    }
  }
LocReturn 033606:
  PushStack call_result;
  TraceOperation 033612 (Print_ret "Done.");
  GamePrint "Done.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[196]--------------------------------------------------
LocRoutine 033620:
  MakeRoutineFrame 0;
  Jump: 033621
LocOp 033621:
  TraceOperation 033621 (Print_ret "That hiding place is too obvious.");
  GamePrint "That hiding place is too obvious.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[197]--------------------------------------------------
LocRoutine 033644:
  MakeRoutineFrame 0;
  Jump: 033645
LocOp 033645:
  TraceOperation 033645 (Je [Var (Global 119),Con 8] (Branch F (Dloc 033657)));
  Let b1 = M[009055];
  Let b2 = M[009056];
  if (Equal(MakeHiLo(b1,b2),8)) {
    TraceOperation 033649 (Call (Floc 022396) [Con 49,Var (Global 118)] Sp);
    Let b3 = M[009053];
    Let b4 = M[009054];
    PushFrame 033649;
    SetLocal 1 49;
    SetLocal 2 MakeHiLo(b3,b4);
    JumpCall: 022396, #actuals: 2
  } else {
    Jump: 033657
  }
LocReturn 033649:
  PushStack call_result;
  TraceOperation 033656 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 033657:
  TraceOperation 033657 (Test_attr (Var (Global 119)) (Con 10) (Branch F (Dloc 033667)));
  Let b1 = M[009055];
  Let b2 = M[009056];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),1)];
  if (TestBit(b3,5)) {
    TraceOperation 033661 (Call (Floc 033418) [] Sp);
    PushFrame 033661;
    JumpCall: 033418, #actuals: 0
  } else {
    Jump: 033667
  }
LocReturn 033661:
  PushStack call_result;
  TraceOperation 033666 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 033667:
  TraceOperation 033667 (Print "There's no good surface on the ");
  GamePrint "There's no good surface on the ";
  TraceOperation 033688 (Print_obj (Var (Global 119)));
  Let b1 = M[009055];
  Let b2 = M[009056];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  if (IsZeroByte(b5)) {
    GamePrint "";
    TraceOperation 033690 (Print_ret ".");
    GamePrint ".\n";
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
    TraceOperation 033690 (Print_ret ".");
    GamePrint ".\n";
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 1
  }
--[198]--------------------------------------------------
LocRoutine 033694:
  MakeRoutineFrame 0;
  Jump: 033695
LocOp 033695:
  TraceOperation 033695 (Print_ret "You can't do that.");
  GamePrint "You can't do that.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[199]--------------------------------------------------
LocRoutine 033704:
  MakeRoutineFrame 0;
  Jump: 033705
LocOp 033705:
  TraceOperation 033705 (Call (Floc 032490) [] Sp);
  PushFrame 033705;
  JumpCall: 032490, #actuals: 0
LocReturn 033705:
  PushStack call_result;
  TraceOperation 033710 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[200]--------------------------------------------------
LocRoutine 033712:
  MakeRoutineFrame 0;
  Jump: 033713
LocOp 033713:
  TraceOperation 033713 (Print_ret "What a (ahem!) strange idea.");
  GamePrint "What a (ahem!) strange idea.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[201]--------------------------------------------------
LocRoutine 033736:
  MakeRoutineFrame 0;
  Jump: 033737
LocOp 033737:
  TraceOperation 033737 (Jz (Var (Global 66)) (Branch F (Dloc 033757)));
  Let b1 = M[008949];
  Let b2 = M[008950];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 033740 (Print_ret "It is impossible to read in the dark.");
    GamePrint "It is impossible to read in the dark.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 033757
  }
LocOp 033757:
  TraceOperation 033757 (Jz (Var (Global 119)) (Branch T Dfalse));
  Let b1 = M[009055];
  Let b2 = M[009056];
  if (IsZero(MakeHiLo(b1,b2))) {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  } else {
    TraceOperation 033760 (Test_attr (Var (Global 119)) (Con 12) (Branch T Dfalse));
    Let b4 = M[009055];
    Let b5 = M[009056];
    Let b6 = M[Offset(Offset(000741,Mul(MakeHiLo(b4,b5),9)),1)];
    if (TestBit(b6,3)) {
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 0
    } else {
      TraceOperation 033764 (Print "How does one look through a ");
      GamePrint "How does one look through a ";
      TraceOperation 033781 (Print_obj (Var (Global 119)));
      Let b8 = M[009055];
      Let b9 = M[009056];
      Let b10 = M[Offset(Offset(000741,Mul(MakeHiLo(b8,b9),9)),7)];
      Let b11 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b8,b9),9)),7),1)];
      Let b12 = M[Address(MakeHiLo(b10,b11))];
      if (IsZeroByte(b12)) {
        GamePrint "";
        TraceOperation 033783 (Print_ret "?");
        GamePrint "?\n";
        PopFrame return_address_13;
        JumpReturn: return_address_13, result: 1
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b10,b11)),1));
        TraceOperation 033783 (Print_ret "?");
        GamePrint "?\n";
        PopFrame return_address_14;
        JumpReturn: return_address_14, result: 1
      }
    }
  }
--[202]--------------------------------------------------
LocRoutine 033786:
  MakeRoutineFrame 0;
  Jump: 033787
LocOp 033787:
  TraceOperation 033787 (Test_attr (Var (Global 118)) (Con 16) (Branch T (Dloc 033811)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),2)];
  if (TestBit(b3,7)) {
    Jump: 033811
  } else {
    TraceOperation 033791 (Print "How does one read a ");
    GamePrint "How does one read a ";
    TraceOperation 033806 (Print_obj (Var (Global 118)));
    Let b4 = M[009053];
    Let b5 = M[009054];
    Let b6 = M[Offset(Offset(000741,Mul(MakeHiLo(b4,b5),9)),7)];
    Let b7 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b4,b5),9)),7),1)];
    Let b8 = M[Address(MakeHiLo(b6,b7))];
    if (IsZeroByte(b8)) {
      GamePrint "";
      TraceOperation 033808 (Print_ret "?");
      GamePrint "?\n";
      PopFrame return_address_9;
      JumpReturn: return_address_9, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b6,b7)),1));
      TraceOperation 033808 (Print_ret "?");
      GamePrint "?\n";
      PopFrame return_address_10;
      JumpReturn: return_address_10, result: 1
    }
  }
LocOp 033811:
  TraceOperation 033811 (Get_prop (Var (Global 118)) (Con 8) Sp);
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  Error: getPropsA
--[203]--------------------------------------------------
LocRoutine 033820:
  MakeRoutineFrame 0;
  Jump: 033821
LocOp 033821:
  TraceOperation 033821 (Call (Floc 022396) [Con 83,Var (Global 118)] Sp);
  Let b1 = M[009053];
  Let b2 = M[009054];
  PushFrame 033821;
  SetLocal 1 83;
  SetLocal 2 MakeHiLo(b1,b2);
  JumpCall: 022396, #actuals: 2
LocReturn 033821:
  PushStack call_result;
  TraceOperation 033828 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[204]--------------------------------------------------
LocRoutine 033830:
  MakeRoutineFrame 0;
  Jump: 033831
LocOp 033831:
  TraceOperation 033831 (Print_ret "It could very well be too late!");
  GamePrint "It could very well be too late!\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[205]--------------------------------------------------
LocRoutine 033852:
  MakeRoutineFrame 0;
  Jump: 033853
LocOp 033853:
  TraceOperation 033853 (Print "It is hardly likely that the ");
  GamePrint "It is hardly likely that the ";
  TraceOperation 033870 (Print_obj (Var (Global 118)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  if (IsZeroByte(b5)) {
    GamePrint "";
    TraceOperation 033872 (Print " is interested.");
    GamePrint " is interested.";
    TraceOperation 033883 New_line;
    GamePrint "\n";
    TraceOperation 033884 (Store (Con 124) (Con 0));
    SetByte 009033 0;
    SetByte 009034 0;
    TraceOperation 033887 (Store (Con 112) (Con 0));
    SetByte 009009 0;
    SetByte 009010 0;
    TraceOperation 033890 Rtrue;
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
    TraceOperation 033872 (Print " is interested.");
    GamePrint " is interested.";
    TraceOperation 033883 New_line;
    GamePrint "\n";
    TraceOperation 033884 (Store (Con 124) (Con 0));
    SetByte 009033 0;
    SetByte 009034 0;
    TraceOperation 033887 (Store (Con 112) (Con 0));
    SetByte 009009 0;
    SetByte 009010 0;
    TraceOperation 033890 Rtrue;
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 1
  }
--[206]--------------------------------------------------
LocRoutine 033892:
  MakeRoutineFrame 0;
  Jump: 033893
LocOp 033893:
  TraceOperation 033893 (Print_ret "How, exactly, can you ring that?");
  GamePrint "How, exactly, can you ring that?\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[207]--------------------------------------------------
LocRoutine 033914:
  MakeRoutineFrame 0;
  Jump: 033915
LocOp 033915:
  TraceOperation 033915 (Call (Floc 037468) [Con -25991] Sp);
  PushFrame 033915;
  SetLocal 1 -25991;
  JumpCall: 037468, #actuals: 1
LocReturn 033915:
  PushStack call_result;
  TraceOperation 033922 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[208]--------------------------------------------------
LocRoutine 033924:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 033927
LocOp 033927:
  TraceOperation 033927 (Jz (Var (Global 108)) (Branch F (Dloc 033939)));
  Let b1 = M[009033];
  Let b2 = M[009034];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 033930 (Print_ret "Say what?");
    GamePrint "Say what?\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 033939
  }
LocOp 033939:
  TraceOperation 033939 (Store (Con 112) (Con 0));
  SetByte 009009 0;
  SetByte 009010 0;
  TraceOperation 033942 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[209]--------------------------------------------------
LocRoutine 033980:
  MakeRoutineFrame 0;
  Jump: 033981
LocOp 033981:
  TraceOperation 033981 (Store (Con 124) (Con 0));
  SetByte 009033 0;
  SetByte 009034 0;
  TraceOperation 033984 (Ret (Var (Global 108)));
  Let b1 = M[009033];
  Let b2 = M[009034];
  PopFrame return_address_3;
  JumpReturn: return_address_3, result: MakeHiLo(b1,b2)
--[210]--------------------------------------------------
LocRoutine 033998:
  MakeRoutineFrame 0;
  Jump: 033999
LocOp 033999:
  TraceOperation 033999 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[211]--------------------------------------------------
LocRoutine 034002:
  MakeRoutineFrame 0;
  Jump: 034003
LocOp 034003:
  TraceOperation 034003 (Store (Con 124) (Con 0));
  SetByte 009033 0;
  SetByte 009034 0;
  TraceOperation 034006 (Print_ret "Talking to yourself is a sign of impending mental collapse.");
  GamePrint "Talking to yourself is a sign of impending mental collapse.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[212]--------------------------------------------------
LocRoutine 034048:
  MakeRoutineFrame 0;
  Jump: 034049
LocOp 034049:
  TraceOperation 034049 (Print_ret "You find nothing unusual.");
  GamePrint "You find nothing unusual.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[213]--------------------------------------------------
LocRoutine 034062:
  MakeRoutineFrame 0;
  Jump: 034063
LocOp 034063:
  TraceOperation 034063 (Test_attr (Var (Global 118)) (Con 30) (Branch F (Dloc 034085)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),3)];
  if (TestBit(b3,1)) {
    TraceOperation 034067 (Print "Why would you send for the ");
    GamePrint "Why would you send for the ";
    TraceOperation 034080 (Print_obj (Var (Global 118)));
    Let b4 = M[009053];
    Let b5 = M[009054];
    Let b6 = M[Offset(Offset(000741,Mul(MakeHiLo(b4,b5),9)),7)];
    Let b7 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b4,b5),9)),7),1)];
    Let b8 = M[Address(MakeHiLo(b6,b7))];
    if (IsZeroByte(b8)) {
      GamePrint "";
      TraceOperation 034082 (Print_ret "?");
      GamePrint "?\n";
      PopFrame return_address_9;
      JumpReturn: return_address_9, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b6,b7)),1));
      TraceOperation 034082 (Print_ret "?");
      GamePrint "?\n";
      PopFrame return_address_10;
      JumpReturn: return_address_10, result: 1
    }
  } else {
    Jump: 034085
  }
LocOp 034085:
  TraceOperation 034085 (Print_ret "That doesn't make sends.");
  GamePrint "That doesn't make sends.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[214]--------------------------------------------------
LocRoutine 034100:
  MakeRoutineFrame 0;
  Jump: 034101
LocOp 034101:
  TraceOperation 034101 (Call (Floc 022396) [Con 63,Var (Global 119),Var (Global 118)] Sp);
  Let b1 = M[009055];
  Let b2 = M[009056];
  Let b3 = M[009053];
  Let b4 = M[009054];
  PushFrame 034101;
  SetLocal 1 63;
  SetLocal 2 MakeHiLo(b1,b2);
  SetLocal 3 MakeHiLo(b3,b4);
  JumpCall: 022396, #actuals: 3
LocReturn 034101:
  PushStack call_result;
  TraceOperation 034109 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[215]--------------------------------------------------
LocRoutine 034110:
  MakeRoutineFrame 0;
  Jump: 034111
LocOp 034111:
  TraceOperation 034111 (Print_ret "Foo!");
  GamePrint "Foo!\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[216]--------------------------------------------------
LocRoutine 034116:
  MakeRoutineFrame 0;
  Jump: 034117
LocOp 034117:
  TraceOperation 034117 (Test_attr (Var (Global 118)) (Con 30) (Branch F (Dloc 034136)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),3)];
  if (TestBit(b3,1)) {
    TraceOperation 034121 (Print_ret "This seems to have no effect.");
    GamePrint "This seems to have no effect.\n";
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 1
  } else {
    Jump: 034136
  }
LocOp 034136:
  TraceOperation 034136 (Test_attr (Var (Global 118)) (Con 17) (Branch T (Dloc 034165)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),2)];
  if (TestBit(b3,6)) {
    Jump: 034165
  } else {
    TraceOperation 034140 (Print_ret "You can't take it; thus, you can't shake it!");
    GamePrint "You can't take it; thus, you can't shake it!\n";
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 1
  }
LocOp 034165:
  TraceOperation 034165 (Test_attr (Var (Global 118)) (Con 19) (Branch F (Dloc 034293)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),2)];
  if (TestBit(b3,4)) {
    TraceOperation 034170 (Test_attr (Var (Global 118)) (Con 11) (Branch F (Dloc 034241)));
    Let b4 = M[009053];
    Let b5 = M[009054];
    Let b6 = M[Offset(Offset(000741,Mul(MakeHiLo(b4,b5),9)),1)];
    if (TestBit(b6,4)) {
      TraceOperation 034175 (Get_child (Var (Global 118)) Sp (Branch F (Dloc 034234)));
      Let b7 = M[009053];
      Let b8 = M[009054];
      Let b9 = M[Offset(Offset(000741,Mul(MakeHiLo(b7,b8),9)),6)];
      PushStack Widen(b9);
      if (IsZero(Widen(b9))) {
        Jump: 034234
      } else {
        TraceOperation 034179 (Call (Floc 034300) [] Sp);
        PushFrame 034179;
        JumpCall: 034300, #actuals: 0
      }
    } else {
      Jump: 034241
    }
  } else {
    Jump: 034293
  }
LocReturn 034179:
  PushStack call_result;
  TraceOperation 034184 (Print "The contents of the ");
  GamePrint "The contents of the ";
  TraceOperation 034195 (Print_obj (Var (Global 118)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  if (IsZeroByte(b5)) {
    GamePrint "";
    TraceOperation 034197 (Print " spills ");
    GamePrint " spills ";
    TraceOperation 034204 (Test_attr (Var (Global 0)) (Con 6) (Branch T (Dloc 034222)));
    Let b6 = M[008817];
    Let b7 = M[008818];
    Let b8 = M[Offset(Offset(000741,Mul(MakeHiLo(b6,b7),9)),0)];
    if (TestBit(b8,1)) {
      Jump: 034222
    } else {
      TraceOperation 034208 (Print "out and disappears");
      GamePrint "out and disappears";
      TraceOperation 034219 (Jump 034231);
      Jump: 034231
    }
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
    TraceOperation 034197 (Print " spills ");
    GamePrint " spills ";
    TraceOperation 034204 (Test_attr (Var (Global 0)) (Con 6) (Branch T (Dloc 034222)));
    Let b9 = M[008817];
    Let b10 = M[008818];
    Let b11 = M[Offset(Offset(000741,Mul(MakeHiLo(b9,b10),9)),0)];
    if (TestBit(b11,1)) {
      Jump: 034222
    } else {
      TraceOperation 034208 (Print "out and disappears");
      GamePrint "out and disappears";
      TraceOperation 034219 (Jump 034231);
      Jump: 034231
    }
  }
LocOp 034222:
  TraceOperation 034222 (Print "to the ground");
  GamePrint "to the ground";
  Jump: 034231
LocOp 034231:
  TraceOperation 034231 (Print_ret ".");
  GamePrint ".\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[217]--------------------------------------------------
LocRoutine 034300:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 034303
LocOp 034303:
  TraceOperation 034303 (Get_child (Var (Global 118)) (Local 1) (Branch F Dtrue));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),6)];
  SetLocal 1 Widen(b3);
  if (IsZero(Widen(b3))) {
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 1
  } else {
    TraceOperation 034307 (Set_attr (Var (Local 1)) (Con 3));
    Let b5 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),0)];
    SetByte Offset(Offset(000741,Mul(GetLocal(1),9)),0) SetBit(b5,4);
    TraceOperation 034310 (Je [Var (Global 0),Con 88] (Branch F (Dloc 034320)));
    Let b6 = M[008817];
    Let b7 = M[008818];
    if (Equal(MakeHiLo(b6,b7),88)) {
      TraceOperation 034314 (Push (Con 75));
      PushStack 75;
      TraceOperation 034317 (Jump 034333);
      Jump: 034333
    } else {
      Jump: 034320
    }
  }
LocOp 034320:
  TraceOperation 034320 (Test_attr (Var (Global 0)) (Con 6) (Branch T (Dloc 034330)));
  Let b1 = M[008817];
  Let b2 = M[008818];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),0)];
  if (TestBit(b3,1)) {
    Jump: 034330
  } else {
    TraceOperation 034324 (Push (Con 13));
    PushStack 13;
    TraceOperation 034327 (Jump 034333);
    Jump: 034333
  }
LocOp 034330:
  TraceOperation 034330 (Push (Var (Global 0)));
  Let b1 = M[008817];
  Let b2 = M[008818];
  PushStack MakeHiLo(b1,b2);
  Jump: 034333
LocOp 034333:
  TraceOperation 034333 (Insert_obj (Var (Local 1)) (Var Sp));
  PopStack popped1;
  Let b2 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),4)];
  if (IsZero(Widen(b2))) {
    SetByte Offset(Offset(000741,Mul(GetLocal(1),9)),4) LoByte(popped1);
    Let b3 = M[Offset(Offset(000741,Mul(popped1,9)),6)];
    SetByte Offset(Offset(000741,Mul(GetLocal(1),9)),5) LoByte(Widen(b3));
    SetByte Offset(Offset(000741,Mul(popped1,9)),6) LoByte(GetLocal(1));
    TraceOperation 034336 (Jump 034303);
    Jump: 034303
  } else {
    Let b4 = M[Offset(Offset(000741,Mul(Widen(b2),9)),6)];
    if (Equal(Widen(b4),GetLocal(1))) {
      Let b5 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),5)];
      SetByte Offset(Offset(000741,Mul(Widen(b2),9)),6) LoByte(Widen(b5));
      SetByte Offset(Offset(000741,Mul(GetLocal(1),9)),4) LoByte(popped1);
      Let b6 = M[Offset(Offset(000741,Mul(popped1,9)),6)];
      SetByte Offset(Offset(000741,Mul(GetLocal(1),9)),5) LoByte(Widen(b6));
      SetByte Offset(Offset(000741,Mul(popped1,9)),6) LoByte(GetLocal(1));
      TraceOperation 034336 (Jump 034303);
      Jump: 034303
    } else {
      Error: unlink/loop
    }
  }
--[218]--------------------------------------------------
LocRoutine 034340:
  MakeRoutineFrame 0;
  Jump: 034341
LocOp 034341:
  TraceOperation 034341 (Call (Floc 020076) [Var (Global 67)] Sp);
  Let b1 = M[008951];
  Let b2 = M[008952];
  PushFrame 034341;
  SetLocal 1 MakeHiLo(b1,b2);
  JumpCall: 020076, #actuals: 1
LocReturn 034341:
  PushStack call_result;
  TraceOperation 034347 (Print_paddr (Var Sp));
  PopStack popped1;
  GamePrint GetText(PackedAddress Z3(popped1));
  TraceOperation 034349 New_line;
  GamePrint "\n";
  TraceOperation 034350 Rtrue;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: 1
--[219]--------------------------------------------------
LocRoutine 034352:
  MakeRoutineFrame 0;
  Jump: 034353
LocOp 034353:
  TraceOperation 034353 (Print "It smells like a ");
  GamePrint "It smells like a ";
  TraceOperation 034366 (Print_obj (Var (Global 118)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  if (IsZeroByte(b5)) {
    GamePrint "";
    TraceOperation 034368 (Print_ret ".");
    GamePrint ".\n";
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
    TraceOperation 034368 (Print_ret ".");
    GamePrint ".\n";
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 1
  }
--[220]--------------------------------------------------
LocRoutine 034372:
  MakeRoutineFrame 0;
  Jump: 034373
LocOp 034373:
  TraceOperation 034373 (Print_ret "You can't spin that!");
  GamePrint "You can't spin that!\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[221]--------------------------------------------------
LocRoutine 034382:
  MakeRoutineFrame 0;
  Jump: 034383
LocOp 034383:
  TraceOperation 034383 (Call (Floc 034390) [] Sp);
  PushFrame 034383;
  JumpCall: 034390, #actuals: 0
LocReturn 034383:
  PushStack call_result;
  TraceOperation 034388 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[222]--------------------------------------------------
LocRoutine 034390:
  MakeRoutineFrame 0;
  Jump: 034391
LocOp 034391:
  TraceOperation 034391 (Test_attr (Var (Global 118)) (Con 30) (Branch F (Dloc 034420)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),3)];
  if (TestBit(b3,1)) {
    TraceOperation 034395 (Print "The ");
    GamePrint "The ";
    TraceOperation 034398 (Print_obj (Var (Global 118)));
    Let b4 = M[009053];
    Let b5 = M[009054];
    Let b6 = M[Offset(Offset(000741,Mul(MakeHiLo(b4,b5),9)),7)];
    Let b7 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b4,b5),9)),7),1)];
    Let b8 = M[Address(MakeHiLo(b6,b7))];
    if (IsZeroByte(b8)) {
      GamePrint "";
      TraceOperation 034400 (Print " does not understand this.");
      GamePrint " does not understand this.";
      TraceOperation 034417 (Jump 034439);
      Jump: 034439
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b6,b7)),1));
      TraceOperation 034400 (Print " does not understand this.");
      GamePrint " does not understand this.";
      TraceOperation 034417 (Jump 034439);
      Jump: 034439
    }
  } else {
    Jump: 034420
  }
LocOp 034420:
  TraceOperation 034420 (Print "How singularly useless.");
  GamePrint "How singularly useless.";
  Jump: 034439
LocOp 034439:
  TraceOperation 034439 New_line;
  GamePrint "\n";
  TraceOperation 034440 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[223]--------------------------------------------------
LocRoutine 034442:
  MakeRoutineFrame 0;
  Jump: 034443
LocOp 034443:
  TraceOperation 034443 (Call (Floc 022396) [Con 119,Var (Global 119),Var (Global 118)] Sp);
  Let b1 = M[009055];
  Let b2 = M[009056];
  Let b3 = M[009053];
  Let b4 = M[009054];
  PushFrame 034443;
  SetLocal 1 119;
  SetLocal 2 MakeHiLo(b1,b2);
  SetLocal 3 MakeHiLo(b3,b4);
  JumpCall: 022396, #actuals: 3
LocReturn 034443:
  PushStack call_result;
  TraceOperation 034451 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[224]--------------------------------------------------
LocRoutine 034452:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 034455
LocOp 034455:
  TraceOperation 034455 (Call (Floc 064236) [Var (Global 111)] (Local 1));
  Let b1 = M[009039];
  Let b2 = M[009040];
  PushFrame 034455;
  SetLocal 1 MakeHiLo(b1,b2);
  JumpCall: 064236, #actuals: 1
LocReturn 034455:
  SetLocal 1 call_result;
  TraceOperation 034461 (Jz (Var (Local 1)) (Branch T (Dloc 034473)));
  if (IsZero(GetLocal(1))) {
    Jump: 034473
  } else {
    TraceOperation 034464 (Call (Floc 022396) [Con 19,Var (Global 118),Var (Local 1)] Sp);
    Let b1 = M[009053];
    Let b2 = M[009054];
    PushFrame 034464;
    SetLocal 1 19;
    SetLocal 2 MakeHiLo(b1,b2);
    SetLocal 3 GetLocal(1);
    JumpCall: 022396, #actuals: 3
  }
LocReturn 034464:
  PushStack call_result;
  TraceOperation 034472 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 034473:
  TraceOperation 034473 (Print "No doubt you propose to stab the ");
  GamePrint "No doubt you propose to stab the ";
  TraceOperation 034494 (Print_obj (Var (Global 118)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  if (IsZeroByte(b5)) {
    GamePrint "";
    TraceOperation 034496 (Print_ret " with your pinky?");
    GamePrint " with your pinky?\n";
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
    TraceOperation 034496 (Print_ret " with your pinky?");
    GamePrint " with your pinky?\n";
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 1
  }
--[225]--------------------------------------------------
LocRoutine 034506:
  MakeRoutineFrame 0;
  Jump: 034507
LocOp 034507:
  TraceOperation 034507 (Get_parent (Var (Global 111)) Sp);
  Let b1 = M[009039];
  Let b2 = M[009040];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),4)];
  PushStack Widen(b3);
  TraceOperation 034510 (Test_attr (Var Sp) (Con 27) (Branch F (Dloc 034525)));
  PopStack popped4;
  Let b5 = M[Offset(Offset(000741,Mul(popped4,9)),3)];
  if (TestBit(b5,4)) {
    TraceOperation 034514 (Get_parent (Var (Global 111)) Sp);
    Let b6 = M[009039];
    Let b7 = M[009040];
    Let b8 = M[Offset(Offset(000741,Mul(MakeHiLo(b6,b7),9)),4)];
    PushStack Widen(b8);
    TraceOperation 034517 (Call (Floc 022396) [Con 45,Var Sp] Sp);
    PopStack popped9;
    PushFrame 034517;
    SetLocal 1 45;
    SetLocal 2 popped9;
    JumpCall: 022396, #actuals: 2
  } else {
    Jump: 034525
  }
LocReturn 034517:
  PushStack call_result;
  TraceOperation 034524 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 034525:
  TraceOperation 034525 (Print_ret "You are already standing, I think.");
  GamePrint "You are already standing, I think.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[226]--------------------------------------------------
LocRoutine 034544:
  MakeRoutineFrame 0;
  Jump: 034545
LocOp 034545:
  TraceOperation 034545 (Print_ret "You will be lost without me!");
  GamePrint "You will be lost without me!\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[227]--------------------------------------------------
LocRoutine 034562:
  MakeRoutineFrame 0;
  Jump: 034563
LocOp 034563:
  TraceOperation 034563 (Test_attr (Var (Global 118)) (Con 30) (Branch F (Dloc 034630)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),3)];
  if (TestBit(b3,1)) {
    TraceOperation 034568 (Print "Since you aren't versed in hand-to-hand combat, you'd better attack the ");
    GamePrint "Since you aren't versed in hand-to-hand combat, you'd better attack the ";
    TraceOperation 034617 (Print_obj (Var (Global 118)));
    Let b4 = M[009053];
    Let b5 = M[009054];
    Let b6 = M[Offset(Offset(000741,Mul(MakeHiLo(b4,b5),9)),7)];
    Let b7 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b4,b5),9)),7),1)];
    Let b8 = M[Address(MakeHiLo(b6,b7))];
    if (IsZeroByte(b8)) {
      GamePrint "";
      TraceOperation 034619 (Print_ret " with a weapon.");
      GamePrint " with a weapon.\n";
      PopFrame return_address_9;
      JumpReturn: return_address_9, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b6,b7)),1));
      TraceOperation 034619 (Print_ret " with a weapon.");
      GamePrint " with a weapon.\n";
      PopFrame return_address_10;
      JumpReturn: return_address_10, result: 1
    }
  } else {
    Jump: 034630
  }
LocOp 034630:
  TraceOperation 034630 (Call (Floc 022396) [Con 14,Var (Global 118)] Sp);
  Let b1 = M[009053];
  Let b2 = M[009054];
  PushFrame 034630;
  SetLocal 1 14;
  SetLocal 2 MakeHiLo(b1,b2);
  JumpCall: 022396, #actuals: 2
LocReturn 034630:
  PushStack call_result;
  TraceOperation 034637 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[228]--------------------------------------------------
LocRoutine 034638:
  MakeRoutineFrame 0;
  Jump: 034639
LocOp 034639:
  TraceOperation 034639 (Call (Floc 038048) [Con 238,Var (Global 0)] Sp);
  Let b1 = M[008817];
  Let b2 = M[008818];
  PushFrame 034639;
  SetLocal 1 238;
  SetLocal 2 MakeHiLo(b1,b2);
  JumpCall: 038048, #actuals: 2
LocReturn 034639:
  PushStack call_result;
  TraceOperation 034646 (Jz (Var Sp) (Branch T (Dloc 034696)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 034696
  } else {
    TraceOperation 034649 (Print "Swimming isn't usually allowed in the ");
    GamePrint "Swimming isn't usually allowed in the ";
    TraceOperation 034676 (Jz (Var (Global 118)) (Branch T (Dloc 034687)));
    Let b2 = M[009053];
    Let b3 = M[009054];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 034687
    } else {
      TraceOperation 034679 (Print_obj (Var (Global 118)));
      Let b4 = M[009053];
      Let b5 = M[009054];
      Let b6 = M[Offset(Offset(000741,Mul(MakeHiLo(b4,b5),9)),7)];
      Let b7 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b4,b5),9)),7),1)];
      Let b8 = M[Address(MakeHiLo(b6,b7))];
      if (IsZeroByte(b8)) {
        GamePrint "";
        TraceOperation 034681 (Print ".");
        GamePrint ".";
        TraceOperation 034684 (Jump 034694);
        Jump: 034694
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b6,b7)),1));
        TraceOperation 034681 (Print ".");
        GamePrint ".";
        TraceOperation 034684 (Jump 034694);
        Jump: 034694
      }
    }
  }
LocOp 034687:
  TraceOperation 034687 (Print "dungeon.");
  GamePrint "dungeon.";
  Jump: 034694
LocOp 034694:
  TraceOperation 034694 New_line;
  GamePrint "\n";
  TraceOperation 034695 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 034696:
  TraceOperation 034696 (Call (Floc 020688) [] Sp);
  PushFrame 034696;
  JumpCall: 020688, #actuals: 0
LocReturn 034696:
  PushStack call_result;
  TraceOperation 034701 (Jz (Var Sp) (Branch F Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 034704 (Print_ret "Go jump in a lake!");
    GamePrint "Go jump in a lake!\n";
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 1
  } else {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  }
--[229]--------------------------------------------------
LocRoutine 034720:
  MakeRoutineFrame 0;
  Jump: 034721
LocOp 034721:
  TraceOperation 034721 (Jz (Var (Global 119)) (Branch F (Dloc 034731)));
  Let b1 = M[009055];
  Let b2 = M[009056];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 034724 (Print_ret "Whoosh!");
    GamePrint "Whoosh!\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 034731
  }
LocOp 034731:
  TraceOperation 034731 (Call (Floc 022396) [Con 19,Var (Global 119),Var (Global 118)] Sp);
  Let b1 = M[009055];
  Let b2 = M[009056];
  Let b3 = M[009053];
  Let b4 = M[009054];
  PushFrame 034731;
  SetLocal 1 19;
  SetLocal 2 MakeHiLo(b1,b2);
  SetLocal 3 MakeHiLo(b3,b4);
  JumpCall: 022396, #actuals: 3
LocReturn 034731:
  PushStack call_result;
  TraceOperation 034739 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[230]--------------------------------------------------
LocRoutine 034740:
  MakeRoutineFrame 0;
  Jump: 034741
LocOp 034741:
  TraceOperation 034741 (Jin (Var (Global 118)) (Var (Global 111)) (Branch F (Dloc 034771)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[009039];
  Let b4 = M[009040];
  Let b5 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),4)];
  if (Equal(MakeHiLo(b3,b4),Widen(b5))) {
    TraceOperation 034745 (Test_attr (Var (Global 118)) (Con 0) (Branch F (Dloc 034762)));
    Let b6 = M[009053];
    Let b7 = M[009054];
    Let b8 = M[Offset(Offset(000741,Mul(MakeHiLo(b6,b7),9)),0)];
    if (TestBit(b8,7)) {
      TraceOperation 034749 (Print_ret "You are already wearing it.");
      GamePrint "You are already wearing it.\n";
      PopFrame return_address_9;
      JumpReturn: return_address_9, result: 1
    } else {
      Jump: 034762
    }
  } else {
    Jump: 034771
  }
LocOp 034762:
  TraceOperation 034762 (Print_ret "You already have that!");
  GamePrint "You already have that!\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[231]--------------------------------------------------
LocRoutine 034780:
  MakeRoutineFrame 0;
  Jump: 034781
LocOp 034781:
  TraceOperation 034781 (Test_attr (Var Sp) (Con 11) (Branch T (Dloc 034820)));
  PopStack popped1;
  Let b2 = M[Offset(Offset(000741,Mul(popped1,9)),1)];
  if (TestBit(b2,4)) {
    Jump: 034820
  } else {
    TraceOperation 034785 (Print_ret "You can't reach something that's inside a closed container.");
    GamePrint "You can't reach something that's inside a closed container.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  }
LocOp 034820:
  TraceOperation 034820 (Jz (Var (Global 119)) (Branch T (Dloc 034861)));
  Let b1 = M[009055];
  Let b2 = M[009056];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 034861
  } else {
    TraceOperation 034823 (Je [Var (Global 119),Con 8] (Branch F (Dloc 034831)));
    Let b3 = M[009055];
    Let b4 = M[009056];
    if (Equal(MakeHiLo(b3,b4),8)) {
      TraceOperation 034827 (Store (Con 135) (Con 0));
      SetByte 009055 0;
      SetByte 009056 0;
      TraceOperation 034830 Rfalse;
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 0
    } else {
      Jump: 034831
    }
  }
LocOp 034831:
  TraceOperation 034831 (Get_parent (Var (Global 118)) Sp);
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),4)];
  PushStack Widen(b3);
  TraceOperation 034834 (Je [Var (Global 119),Var Sp] (Branch T (Dloc 034857)));
  Let b4 = M[009055];
  Let b5 = M[009056];
  PopStack popped6;
  if (Equal(MakeHiLo(b4,b5),popped6)) {
    Jump: 034857
  } else {
    TraceOperation 034838 (Print "The ");
    GamePrint "The ";
    TraceOperation 034841 (Print_obj (Var (Global 118)));
    Let b7 = M[009053];
    Let b8 = M[009054];
    Let b9 = M[Offset(Offset(000741,Mul(MakeHiLo(b7,b8),9)),7)];
    Let b10 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b7,b8),9)),7),1)];
    Let b11 = M[Address(MakeHiLo(b9,b10))];
    if (IsZeroByte(b11)) {
      GamePrint "";
      TraceOperation 034843 (Print " isn't in the ");
      GamePrint " isn't in the ";
      TraceOperation 034852 (Print_obj (Var (Global 119)));
      Let b12 = M[009055];
      Let b13 = M[009056];
      Let b14 = M[Offset(Offset(000741,Mul(MakeHiLo(b12,b13),9)),7)];
      Let b15 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b12,b13),9)),7),1)];
      Let b16 = M[Address(MakeHiLo(b14,b15))];
      if (IsZeroByte(b16)) {
        GamePrint "";
        TraceOperation 034854 (Print_ret ".");
        GamePrint ".\n";
        PopFrame return_address_17;
        JumpReturn: return_address_17, result: 1
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b14,b15)),1));
        TraceOperation 034854 (Print_ret ".");
        GamePrint ".\n";
        PopFrame return_address_18;
        JumpReturn: return_address_18, result: 1
      }
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b9,b10)),1));
      TraceOperation 034843 (Print " isn't in the ");
      GamePrint " isn't in the ";
      TraceOperation 034852 (Print_obj (Var (Global 119)));
      Let b19 = M[009055];
      Let b20 = M[009056];
      Let b21 = M[Offset(Offset(000741,Mul(MakeHiLo(b19,b20),9)),7)];
      Let b22 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b19,b20),9)),7),1)];
      Let b23 = M[Address(MakeHiLo(b21,b22))];
      if (IsZeroByte(b23)) {
        GamePrint "";
        TraceOperation 034854 (Print_ret ".");
        GamePrint ".\n";
        PopFrame return_address_24;
        JumpReturn: return_address_24, result: 1
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b21,b22)),1));
        TraceOperation 034854 (Print_ret ".");
        GamePrint ".\n";
        PopFrame return_address_25;
        JumpReturn: return_address_25, result: 1
      }
    }
  }
LocOp 034857:
  TraceOperation 034857 (Store (Con 135) (Con 0));
  SetByte 009055 0;
  SetByte 009056 0;
  TraceOperation 034860 Rfalse;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 0
LocOp 034861:
  TraceOperation 034861 (Get_parent (Var (Global 111)) Sp);
  Let b1 = M[009039];
  Let b2 = M[009040];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),4)];
  PushStack Widen(b3);
  TraceOperation 034864 (Je [Var (Global 118),Var Sp] (Branch F Dfalse));
  Let b4 = M[009053];
  Let b5 = M[009054];
  PopStack popped6;
  if (Equal(MakeHiLo(b4,b5),popped6)) {
    TraceOperation 034868 (Print_ret "You're inside of it!");
    GamePrint "You're inside of it!\n";
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 1
  } else {
    PopFrame return_address_8;
    JumpReturn: return_address_8, result: 0
  }
--[232]--------------------------------------------------
LocRoutine 034880:
  MakeRoutineFrame 0;
  Jump: 034881
LocOp 034881:
  TraceOperation 034881 (Call (Floc 037108) [] Sp);
  PushFrame 034881;
  JumpCall: 037108, #actuals: 0
LocReturn 034881:
  PushStack call_result;
  TraceOperation 034886 (Je [Var Sp,Con 1] (Branch F Dfalse));
  PopStack popped1;
  if (Equal(popped1,1)) {
    TraceOperation 034890 (Test_attr (Var (Global 118)) (Con 0) (Branch F (Dloc 034912)));
    Let b2 = M[009053];
    Let b3 = M[009054];
    Let b4 = M[Offset(Offset(000741,Mul(MakeHiLo(b2,b3),9)),0)];
    if (TestBit(b4,7)) {
      TraceOperation 034894 (Print "You are now wearing the ");
      GamePrint "You are now wearing the ";
      TraceOperation 034907 (Print_obj (Var (Global 118)));
      Let b5 = M[009053];
      Let b6 = M[009054];
      Let b7 = M[Offset(Offset(000741,Mul(MakeHiLo(b5,b6),9)),7)];
      Let b8 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b5,b6),9)),7),1)];
      Let b9 = M[Address(MakeHiLo(b7,b8))];
      if (IsZeroByte(b9)) {
        GamePrint "";
        TraceOperation 034909 (Print_ret ".");
        GamePrint ".\n";
        PopFrame return_address_10;
        JumpReturn: return_address_10, result: 1
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b7,b8)),1));
        TraceOperation 034909 (Print_ret ".");
        GamePrint ".\n";
        PopFrame return_address_11;
        JumpReturn: return_address_11, result: 1
      }
    } else {
      Jump: 034912
    }
  } else {
    PopFrame return_address_12;
    JumpReturn: return_address_12, result: 0
  }
LocOp 034912:
  TraceOperation 034912 (Print_ret "Taken.");
  GamePrint "Taken.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[233]--------------------------------------------------
LocRoutine 034920:
  MakeRoutineFrame 0;
  Jump: 034921
LocOp 034921:
  TraceOperation 034921 (Test_attr (Var (Global 118)) (Con 30) (Branch F (Dloc 034989)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),3)];
  if (TestBit(b3,1)) {
    TraceOperation 034926 (Jz (Var (Global 108)) (Branch T (Dloc 034937)));
    Let b4 = M[009033];
    Let b5 = M[009034];
    if (IsZero(MakeHiLo(b4,b5))) {
      Jump: 034937
    } else {
      TraceOperation 034929 (Store (Con 127) (Var (Global 118)));
      Let b6 = M[009053];
      Let b7 = M[009054];
      SetByte 009039 b6;
      SetByte 009040 b7;
      TraceOperation 034932 (Get_parent (Var (Global 111)) (Global 0));
      Let b8 = M[009039];
      Let b9 = M[009040];
      Let b10 = M[Offset(Offset(000741,Mul(MakeHiLo(b8,b9),9)),4)];
      SetByte 008817 HiByte(Widen(b10));
      SetByte 008818 LoByte(Widen(b10));
      TraceOperation 034935 (Ret (Var (Global 0)));
      Let b11 = M[008817];
      Let b12 = M[008818];
      PopFrame return_address_13;
      JumpReturn: return_address_13, result: MakeHiLo(b11,b12)
    }
  } else {
    Jump: 034989
  }
LocOp 034937:
  TraceOperation 034937 (Print "The ");
  GamePrint "The ";
  TraceOperation 034940 (Print_obj (Var (Global 118)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  if (IsZeroByte(b5)) {
    GamePrint "";
    TraceOperation 034942 (Print_ret " pauses for a moment, perhaps thinking that you should re-read the manual.");
    GamePrint " pauses for a moment, perhaps thinking that you should re-read the manual.\n";
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
    TraceOperation 034942 (Print_ret " pauses for a moment, perhaps thinking that you should re-read the manual.");
    GamePrint " pauses for a moment, perhaps thinking that you should re-read the manual.\n";
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 1
  }
LocOp 034989:
  TraceOperation 034989 (Print "You can't talk to the ");
  GamePrint "You can't talk to the ";
  TraceOperation 035000 (Print_obj (Var (Global 118)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  if (IsZeroByte(b5)) {
    GamePrint "";
    TraceOperation 035002 (Print "!");
    GamePrint "!";
    TraceOperation 035005 New_line;
    GamePrint "\n";
    TraceOperation 035006 (Store (Con 112) (Con 0));
    SetByte 009009 0;
    SetByte 009010 0;
    TraceOperation 035009 (Store (Con 124) (Con 0));
    SetByte 009033 0;
    SetByte 009034 0;
    TraceOperation 035012 (Ret (Con 2));
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 2
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
    TraceOperation 035002 (Print "!");
    GamePrint "!";
    TraceOperation 035005 New_line;
    GamePrint "\n";
    TraceOperation 035006 (Store (Con 112) (Con 0));
    SetByte 009009 0;
    SetByte 009010 0;
    TraceOperation 035009 (Store (Con 124) (Con 0));
    SetByte 009033 0;
    SetByte 009034 0;
    TraceOperation 035012 (Ret (Con 2));
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 2
  }
--[234]--------------------------------------------------
LocRoutine 035014:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 035019
LocOp 035019:
  TraceOperation 035019 (Test_attr (Var (Global 118)) (Con 23) (Branch F (Dloc 035036)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),2)];
  if (TestBit(b3,0)) {
    TraceOperation 035023 (Call (Floc 038140) [Var (Global 118)] Sp);
    Let b4 = M[009053];
    Let b5 = M[009054];
    PushFrame 035023;
    SetLocal 1 MakeHiLo(b4,b5);
    JumpCall: 038140, #actuals: 1
  } else {
    Jump: 035036
  }
LocReturn 035023:
  PushStack call_result;
  TraceOperation 035029 (Call (Floc 038000) [Var Sp] Sp);
  PopStack popped1;
  PushFrame 035029;
  SetLocal 1 popped1;
  JumpCall: 038000, #actuals: 1
LocReturn 035029:
  PushStack call_result;
  TraceOperation 035035 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 035036:
  TraceOperation 035036 (Jz (Var (Local 1)) (Branch F (Dloc 035051)));
  if (IsZero(GetLocal(1))) {
    TraceOperation 035039 (Test_attr (Var (Global 118)) (Con 27) (Branch F (Dloc 035051)));
    Let b1 = M[009053];
    Let b2 = M[009054];
    Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),3)];
    if (TestBit(b3,4)) {
      TraceOperation 035043 (Call (Floc 022396) [Con 25,Var (Global 118)] Sp);
      Let b4 = M[009053];
      Let b5 = M[009054];
      PushFrame 035043;
      SetLocal 1 25;
      SetLocal 2 MakeHiLo(b4,b5);
      JumpCall: 022396, #actuals: 2
    } else {
      Jump: 035051
    }
  } else {
    Jump: 035051
  }
LocReturn 035043:
  PushStack call_result;
  TraceOperation 035050 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 035051:
  TraceOperation 035051 (Jz (Var (Local 1)) (Branch F (Dloc 035128)));
  if (IsZero(GetLocal(1))) {
    TraceOperation 035055 (Test_attr (Var (Global 118)) (Con 17) (Branch T (Dloc 035128)));
    Let b1 = M[009053];
    Let b2 = M[009054];
    Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),2)];
    if (TestBit(b3,6)) {
      Jump: 035128
    } else {
      TraceOperation 035060 (Call (Floc 020688) [] Sp);
      PushFrame 035060;
      JumpCall: 020688, #actuals: 0
    }
  } else {
    Jump: 035128
  }
LocReturn 035060:
  PushStack call_result;
  TraceOperation 035065 (Jz (Var Sp) (Branch F Dtrue));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 035068 (Call (Floc 020688) [] Sp);
    PushFrame 035068;
    JumpCall: 020688, #actuals: 0
  } else {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 1
  }
LocReturn 035068:
  PushStack call_result;
  TraceOperation 035073 (Jz (Var Sp) (Branch F Dtrue));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 035076 (Call (Floc 020688) [] Sp);
    PushFrame 035076;
    JumpCall: 020688, #actuals: 0
  } else {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 1
  }
LocReturn 035076:
  PushStack call_result;
  TraceOperation 035081 (Jz (Var Sp) (Branch F Dtrue));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 035084 (Call (Floc 020688) [] Sp);
    PushFrame 035084;
    JumpCall: 020688, #actuals: 0
  } else {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 1
  }
LocReturn 035084:
  PushStack call_result;
  TraceOperation 035089 (Jz (Var Sp) (Branch F Dtrue));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 035092 (Print "You hit your head against the ");
    GamePrint "You hit your head against the ";
    TraceOperation 035109 (Print_obj (Var (Global 118)));
    Let b2 = M[009053];
    Let b3 = M[009054];
    Let b4 = M[Offset(Offset(000741,Mul(MakeHiLo(b2,b3),9)),7)];
    Let b5 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b2,b3),9)),7),1)];
    Let b6 = M[Address(MakeHiLo(b4,b5))];
    if (IsZeroByte(b6)) {
      GamePrint "";
      TraceOperation 035111 (Print_ret " as you attempt this feat.");
      GamePrint " as you attempt this feat.\n";
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b4,b5)),1));
      TraceOperation 035111 (Print_ret " as you attempt this feat.");
      GamePrint " as you attempt this feat.\n";
      PopFrame return_address_8;
      JumpReturn: return_address_8, result: 1
    }
  } else {
    PopFrame return_address_9;
    JumpReturn: return_address_9, result: 1
  }
LocOp 035128:
  TraceOperation 035128 (Jz (Var (Local 1)) (Branch T (Dloc 035140)));
  if (IsZero(GetLocal(1))) {
    Jump: 035140
  } else {
    TraceOperation 035131 (Print_ret "You can't do that!");
    GamePrint "You can't do that!\n";
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 1
  }
LocOp 035140:
  TraceOperation 035140 (Jin (Var (Global 118)) (Var (Global 111)) (Branch F (Dloc 035169)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[009039];
  Let b4 = M[009040];
  Let b5 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),4)];
  if (Equal(MakeHiLo(b3,b4),Widen(b5))) {
    TraceOperation 035144 (Print_ret "That would involve quite a contortion!");
    GamePrint "That would involve quite a contortion!\n";
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 1
  } else {
    Jump: 035169
  }
--[235]--------------------------------------------------
LocRoutine 035174:
  MakeRoutineFrame 0;
  Jump: 035175
LocOp 035175:
  TraceOperation 035175 (Print_paddr (Var Sp));
  PopStack popped1;
  GamePrint GetText(PackedAddress Z3(popped1));
  TraceOperation 035177 New_line;
  GamePrint "\n";
  TraceOperation 035178 Rtrue;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: 1
--[236]--------------------------------------------------
LocRoutine 035180:
  MakeRoutineFrame 0;
  Jump: 035181
LocOp 035181:
  TraceOperation 035181 (Call (Floc 037334) [] Sp);
  PushFrame 035181;
  JumpCall: 037334, #actuals: 0
LocReturn 035181:
  PushStack call_result;
  TraceOperation 035186 (Jz (Var Sp) (Branch T Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  } else {
    TraceOperation 035189 (Je [Var (Global 119),Con 5] (Branch F (Dloc 035218)));
    Let b3 = M[009055];
    Let b4 = M[009056];
    if (Equal(MakeHiLo(b3,b4),5)) {
      TraceOperation 035193 (Print "A terrific throw! The ");
      GamePrint "A terrific throw! The ";
      TraceOperation 035208 (Print_obj (Var (Global 118)));
      Let b5 = M[009053];
      Let b6 = M[009054];
      Let b7 = M[Offset(Offset(000741,Mul(MakeHiLo(b5,b6),9)),7)];
      Let b8 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b5,b6),9)),7),1)];
      Let b9 = M[Address(MakeHiLo(b7,b8))];
      if (IsZeroByte(b9)) {
        GamePrint "";
        TraceOperation 035210 (Call (Floc 067174) [Con -25946] Sp);
        PushFrame 035210;
        SetLocal 1 -25946;
        JumpCall: 067174, #actuals: 1
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b7,b8)),1));
        TraceOperation 035210 (Call (Floc 067174) [Con -25946] Sp);
        PushFrame 035210;
        SetLocal 1 -25946;
        JumpCall: 067174, #actuals: 1
      }
    } else {
      Jump: 035218
    }
  }
LocReturn 035210:
  PushStack call_result;
  TraceOperation 035217 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 035218:
  TraceOperation 035218 (Test_attr (Var (Global 119)) (Con 30) (Branch F (Dloc 035261)));
  Let b1 = M[009055];
  Let b2 = M[009056];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),3)];
  if (TestBit(b3,1)) {
    TraceOperation 035222 (Print "The ");
    GamePrint "The ";
    TraceOperation 035225 (Print_obj (Var (Global 119)));
    Let b4 = M[009055];
    Let b5 = M[009056];
    Let b6 = M[Offset(Offset(000741,Mul(MakeHiLo(b4,b5),9)),7)];
    Let b7 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b4,b5),9)),7),1)];
    Let b8 = M[Address(MakeHiLo(b6,b7))];
    if (IsZeroByte(b8)) {
      GamePrint "";
      TraceOperation 035227 (Print " ducks as the ");
      GamePrint " ducks as the ";
      TraceOperation 035236 (Print_obj (Var (Global 118)));
      Let b9 = M[009053];
      Let b10 = M[009054];
      Let b11 = M[Offset(Offset(000741,Mul(MakeHiLo(b9,b10),9)),7)];
      Let b12 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b9,b10),9)),7),1)];
      Let b13 = M[Address(MakeHiLo(b11,b12))];
      if (IsZeroByte(b13)) {
        GamePrint "";
        TraceOperation 035238 (Print_ret " flies by and crashes to the ground.");
        GamePrint " flies by and crashes to the ground.\n";
        PopFrame return_address_14;
        JumpReturn: return_address_14, result: 1
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b11,b12)),1));
        TraceOperation 035238 (Print_ret " flies by and crashes to the ground.");
        GamePrint " flies by and crashes to the ground.\n";
        PopFrame return_address_15;
        JumpReturn: return_address_15, result: 1
      }
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b6,b7)),1));
      TraceOperation 035227 (Print " ducks as the ");
      GamePrint " ducks as the ";
      TraceOperation 035236 (Print_obj (Var (Global 118)));
      Let b16 = M[009053];
      Let b17 = M[009054];
      Let b18 = M[Offset(Offset(000741,Mul(MakeHiLo(b16,b17),9)),7)];
      Let b19 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b16,b17),9)),7),1)];
      Let b20 = M[Address(MakeHiLo(b18,b19))];
      if (IsZeroByte(b20)) {
        GamePrint "";
        TraceOperation 035238 (Print_ret " flies by and crashes to the ground.");
        GamePrint " flies by and crashes to the ground.\n";
        PopFrame return_address_21;
        JumpReturn: return_address_21, result: 1
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b18,b19)),1));
        TraceOperation 035238 (Print_ret " flies by and crashes to the ground.");
        GamePrint " flies by and crashes to the ground.\n";
        PopFrame return_address_22;
        JumpReturn: return_address_22, result: 1
      }
    }
  } else {
    Jump: 035261
  }
LocOp 035261:
  TraceOperation 035261 (Print_ret "Thrown.");
  GamePrint "Thrown.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[237]--------------------------------------------------
LocRoutine 035268:
  MakeRoutineFrame 0;
  Jump: 035269
LocOp 035269:
  TraceOperation 035269 (Print_ret "You can't throw anything off of that!");
  GamePrint "You can't throw anything off of that!\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[238]--------------------------------------------------
LocRoutine 035290:
  MakeRoutineFrame 0;
  Jump: 035291
LocOp 035291:
  TraceOperation 035291 (Je [Var (Global 119),Var (Global 111)] (Branch F (Dloc 035316)));
  Let b1 = M[009055];
  Let b2 = M[009056];
  Let b3 = M[009039];
  Let b4 = M[009040];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 035295 (Print_ret "You can't tie anything to yourself.");
    GamePrint "You can't tie anything to yourself.\n";
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  } else {
    Jump: 035316
  }
LocOp 035316:
  TraceOperation 035316 (Print "You can't tie the ");
  GamePrint "You can't tie the ";
  TraceOperation 035325 (Print_obj (Var (Global 118)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  if (IsZeroByte(b5)) {
    GamePrint "";
    TraceOperation 035327 (Print_ret " to that.");
    GamePrint " to that.\n";
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
    TraceOperation 035327 (Print_ret " to that.");
    GamePrint " to that.\n";
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 1
  }
--[239]--------------------------------------------------
LocRoutine 035334:
  MakeRoutineFrame 0;
  Jump: 035335
LocOp 035335:
  TraceOperation 035335 (Print_ret "You could certainly never tie it with that!");
  GamePrint "You could certainly never tie it with that!\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[240]--------------------------------------------------
LocRoutine 035360:
  MakeRoutineFrame 0;
  Jump: 035361
LocOp 035361:
  TraceOperation 035361 (Je [Var (Global 0),Con 220] (Branch F (Dloc 035372)));
  Let b1 = M[008817];
  Let b2 = M[008818];
  if (Equal(MakeHiLo(b1,b2),220)) {
    TraceOperation 035365 (Call (Floc 037558) [Con 190] Sp);
    PushFrame 035365;
    SetLocal 1 190;
    JumpCall: 037558, #actuals: 1
  } else {
    Jump: 035372
  }
LocReturn 035365:
  PushStack call_result;
  TraceOperation 035371 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 035372:
  TraceOperation 035372 (Je [Var (Global 0),Con 190] (Branch F (Dloc 035383)));
  Let b1 = M[008817];
  Let b2 = M[008818];
  if (Equal(MakeHiLo(b1,b2),190)) {
    TraceOperation 035376 (Call (Floc 037558) [Con 220] Sp);
    PushFrame 035376;
    SetLocal 1 220;
    JumpCall: 037558, #actuals: 1
  } else {
    Jump: 035383
  }
LocReturn 035376:
  PushStack call_result;
  TraceOperation 035382 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 035383:
  TraceOperation 035383 (Print_ret "Nothing happens.");
  GamePrint "Nothing happens.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[241]--------------------------------------------------
LocRoutine 035396:
  MakeRoutineFrame 0;
  Jump: 035397
LocOp 035397:
  TraceOperation 035397 (Test_attr (Var (Global 118)) (Con 15) (Branch T Dfalse));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),1)];
  if (TestBit(b3,0)) {
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 0
  } else {
    TraceOperation 035401 (Print_ret "You can't turn that!");
    GamePrint "You can't turn that!\n";
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  }
--[242]--------------------------------------------------
LocRoutine 035412:
  MakeRoutineFrame 0;
  Jump: 035413
LocOp 035413:
  TraceOperation 035413 (Print_ret "This has no effect.");
  GamePrint "This has no effect.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[243]--------------------------------------------------
LocRoutine 035424:
  MakeRoutineFrame 0;
  Jump: 035425
LocOp 035425:
  TraceOperation 035425 (Call (Floc 032246) [] Sp);
  PushFrame 035425;
  JumpCall: 032246, #actuals: 0
LocReturn 035425:
  PushStack call_result;
  TraceOperation 035430 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[244]--------------------------------------------------
LocRoutine 035432:
  MakeRoutineFrame 0;
  Jump: 035433
LocOp 035433:
  TraceOperation 035433 (Print_ret "This cannot be tied, so it cannot be untied!");
  GamePrint "This cannot be tied, so it cannot be untied!\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[245]--------------------------------------------------
LocRoutine 035454:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 3;
  }
  Jump: 035457
LocOp 035457:
  TraceOperation 035457 (Print "Time passes...");
  GamePrint "Time passes...";
  TraceOperation 035470 New_line;
  GamePrint "\n";
  Jump: 035471
LocOp 035471:
  TraceOperation 035471 (Dec_chk (Con 1) (Con 0) (Branch F (Dloc 035478)));
  if (LessThanEqual(GetLocal(1),0)) {
    SetLocal 1 Sub(GetLocal(1),1);
    TraceOperation 035475 (Jump 035487);
    Jump: 035487
  } else {
    SetLocal 1 Sub(GetLocal(1),1);
    Jump: 035478
  }
LocOp 035478:
  TraceOperation 035478 (Call (Floc 021700) [] Sp);
  PushFrame 035478;
  JumpCall: 021700, #actuals: 0
LocReturn 035478:
  PushStack call_result;
  TraceOperation 035483 (Jz (Var Sp) (Branch T (Dloc 035471)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 035471
  } else {
    Jump: 035487
  }
LocOp 035487:
  TraceOperation 035487 (Store (Con 145) (Con 1));
  SetByte 009075 0;
  SetByte 009076 1;
  TraceOperation 035490 (Ret (Var (Global 129)));
  Let b1 = M[009075];
  Let b2 = M[009076];
  PopFrame return_address_3;
  JumpReturn: return_address_3, result: MakeHiLo(b1,b2)
--[246]--------------------------------------------------
LocRoutine 035492:
  MakeRoutineFrame 5;
  if (LessThanByte(num_actuals,5)) {
    SetLocal 5 0;
    if (LessThanByte(num_actuals,4)) {
      SetLocal 4 0;
      if (LessThanByte(num_actuals,3)) {
        SetLocal 3 0;
        if (LessThanByte(num_actuals,2)) {
          SetLocal 2 0;
          if (LessThanByte(num_actuals,1)) {
            SetLocal 1 0;
          }
        }
      }
    }
  }
  Jump: 035503
LocOp 035503:
  TraceOperation 035503 (Jz (Var (Global 95)) (Branch F (Dloc 035514)));
  Let b1 = M[009007];
  Let b2 = M[009008];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 035506 (Call (Floc 022396) [Con 138,Var (Global 118)] Sp);
    Let b3 = M[009053];
    Let b4 = M[009054];
    PushFrame 035506;
    SetLocal 1 138;
    SetLocal 2 MakeHiLo(b3,b4);
    JumpCall: 022396, #actuals: 2
  } else {
    Jump: 035514
  }
LocReturn 035506:
  PushStack call_result;
  TraceOperation 035513 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 035514:
  TraceOperation 035514 (Get_prop_addr (Var (Global 0)) (Var (Global 118)) (Local 1));
  Let b1 = M[008817];
  Let b2 = M[008818];
  Let b3 = M[009053];
  Let b4 = M[009054];
  Let b5 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b6 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b7 = M[Address(MakeHiLo(b5,b6))];
  Error: getPropsA
LocReturn 035533:
  PushStack call_result;
  TraceOperation 035539 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 035540:
  TraceOperation 035540 (Je [Var (Local 2),Con 2] (Branch F (Dloc 035553)));
  if (Equal(GetLocal(2),2)) {
    TraceOperation 035544 (Loadw (Var (Local 1)) (Con 0) Sp);
    Let b1 = M[Offset(Address(GetLocal(1)),0)];
    Let b2 = M[Offset(Offset(Address(GetLocal(1)),0),1)];
    PushStack MakeHiLo(b1,b2);
    TraceOperation 035548 (Print_paddr (Var Sp));
    PopStack popped3;
    GamePrint GetText(PackedAddress Z3(popped3));
    TraceOperation 035550 New_line;
    GamePrint "\n";
    TraceOperation 035551 (Ret (Con 2));
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 2
  } else {
    Jump: 035553
  }
LocOp 035553:
  TraceOperation 035553 (Je [Var (Local 2),Con 3] (Branch F (Dloc 035585)));
  if (Equal(GetLocal(2),3)) {
    TraceOperation 035557 (Loadw (Var (Local 1)) (Con 0) Sp);
    Let b1 = M[Offset(Address(GetLocal(1)),0)];
    Let b2 = M[Offset(Offset(Address(GetLocal(1)),0),1)];
    PushStack MakeHiLo(b1,b2);
    TraceOperation 035561 (Call (Fvar Sp) [] (Local 5));
    PopStack popped3;
    if (IsZeroAddress(PackedAddress Z3(popped3))) {
      SetLocal 5 0;
      TraceOperation 035565 (Jz (Var (Local 5)) (Branch T (Dloc 035575)));
      if (IsZero(GetLocal(5))) {
        Jump: 035575
      } else {
        TraceOperation 035568 (Call (Floc 037558) [Var (Local 5)] Sp);
        PushFrame 035568;
        SetLocal 1 GetLocal(5);
        JumpCall: 037558, #actuals: 1
      }
    } else {
      PushFrame 035561;
      JumpCall: PackedAddress Z3(popped3), #actuals: 0
    }
  } else {
    Jump: 035585
  }
LocReturn 035561:
  SetLocal 5 call_result;
  TraceOperation 035565 (Jz (Var (Local 5)) (Branch T (Dloc 035575)));
  if (IsZero(GetLocal(5))) {
    Jump: 035575
  } else {
    TraceOperation 035568 (Call (Floc 037558) [Var (Local 5)] Sp);
    PushFrame 035568;
    SetLocal 1 GetLocal(5);
    JumpCall: 037558, #actuals: 1
  }
LocReturn 035568:
  PushStack call_result;
  TraceOperation 035574 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 035575:
  TraceOperation 035575 (Call (Floc 020688) [] Sp);
  PushFrame 035575;
  JumpCall: 020688, #actuals: 0
LocReturn 035575:
  PushStack call_result;
  TraceOperation 035580 (Jz (Var Sp) (Branch F Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 035583 (Ret (Con 2));
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 2
  } else {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  }
LocOp 035585:
  TraceOperation 035585 (Je [Var (Local 2),Con 4] (Branch F (Dloc 035636)));
  if (Equal(GetLocal(2),4)) {
    TraceOperation 035589 (Loadb (Var (Local 1)) (Con 1) Sp);
    Let b1 = M[Offset(Address(GetLocal(1)),1)];
    PushStack Widen(b1);
    TraceOperation 035593 (Load (Var Sp) Sp);
    PopStack popped2;
    if (IsZeroByte(LoByte(popped2))) {
      PopStack popped3;
      PushStack popped3;
      PushStack popped3;
      TraceOperation 035596 (Jz (Var Sp) (Branch T (Dloc 035610)));
      PopStack popped4;
      if (IsZero(popped4)) {
        Jump: 035610
      } else {
        TraceOperation 035599 (Loadb (Var (Local 1)) (Con 0) Sp);
        Let b5 = M[Offset(Address(GetLocal(1)),0)];
        PushStack Widen(b5);
        TraceOperation 035603 (Call (Floc 037558) [Var Sp] Sp);
        PopStack popped6;
        PushFrame 035603;
        SetLocal 1 popped6;
        JumpCall: 037558, #actuals: 1
      }
    } else {
      if (LessThanByte(LoByte(popped2),16)) {
        PushStack GetLocal(LoByte(popped2));
        TraceOperation 035596 (Jz (Var Sp) (Branch T (Dloc 035610)));
        PopStack popped7;
        if (IsZero(popped7)) {
          Jump: 035610
        } else {
          TraceOperation 035599 (Loadb (Var (Local 1)) (Con 0) Sp);
          Let b8 = M[Offset(Address(GetLocal(1)),0)];
          PushStack Widen(b8);
          TraceOperation 035603 (Call (Floc 037558) [Var Sp] Sp);
          PopStack popped9;
          PushFrame 035603;
          SetLocal 1 popped9;
          JumpCall: 037558, #actuals: 1
        }
      } else {
        Let b10 = M[Offset(008817,Mul(2,Widen(MinusByte(LoByte(popped2),16))))];
        Let b11 = M[Offset(Offset(008817,Mul(2,Widen(MinusByte(LoByte(popped2),16)))),1)];
        PushStack MakeHiLo(b10,b11);
        TraceOperation 035596 (Jz (Var Sp) (Branch T (Dloc 035610)));
        PopStack popped12;
        if (IsZero(popped12)) {
          Jump: 035610
        } else {
          TraceOperation 035599 (Loadb (Var (Local 1)) (Con 0) Sp);
          Let b13 = M[Offset(Address(GetLocal(1)),0)];
          PushStack Widen(b13);
          TraceOperation 035603 (Call (Floc 037558) [Var Sp] Sp);
          PopStack popped14;
          PushFrame 035603;
          SetLocal 1 popped14;
          JumpCall: 037558, #actuals: 1
        }
      }
    }
  } else {
    Jump: 035636
  }
LocReturn 035603:
  PushStack call_result;
  TraceOperation 035609 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 035610:
  TraceOperation 035610 (Loadw (Var (Local 1)) (Con 1) (Local 3));
  Let b1 = M[Offset(Address(GetLocal(1)),2)];
  Let b2 = M[Offset(Offset(Address(GetLocal(1)),2),1)];
  SetLocal 3 MakeHiLo(b1,b2);
  TraceOperation 035614 (Jz (Var (Local 3)) (Branch T (Dloc 035622)));
  if (IsZero(GetLocal(3))) {
    Jump: 035622
  } else {
    TraceOperation 035617 (Print_paddr (Var (Local 3)));
    GamePrint GetText(PackedAddress Z3(GetLocal(3)));
    TraceOperation 035619 New_line;
    GamePrint "\n";
    TraceOperation 035620 (Ret (Con 2));
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 2
  }
LocOp 035622:
  TraceOperation 035622 (Print "You can't go that way.");
  GamePrint "You can't go that way.";
  TraceOperation 035633 New_line;
  GamePrint "\n";
  TraceOperation 035634 (Ret (Con 2));
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 2
LocOp 035636:
  TraceOperation 035636 (Je [Var (Local 2),Con 5] (Branch F Dfalse));
  if (Equal(GetLocal(2),5)) {
    TraceOperation 035640 (Loadb (Var (Local 1)) (Con 1) (Local 4));
    Let b1 = M[Offset(Address(GetLocal(1)),1)];
    SetLocal 4 Widen(b1);
    TraceOperation 035644 (Test_attr (Var (Local 4)) (Con 11) (Branch F (Dloc 035659)));
    Let b2 = M[Offset(Offset(000741,Mul(GetLocal(4),9)),1)];
    if (TestBit(b2,4)) {
      TraceOperation 035648 (Loadb (Var (Local 1)) (Con 0) Sp);
      Let b3 = M[Offset(Address(GetLocal(1)),0)];
      PushStack Widen(b3);
      TraceOperation 035652 (Call (Floc 037558) [Var Sp] Sp);
      PopStack popped4;
      PushFrame 035652;
      SetLocal 1 popped4;
      JumpCall: 037558, #actuals: 1
    } else {
      Jump: 035659
    }
  } else {
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 0
  }
LocReturn 035652:
  PushStack call_result;
  TraceOperation 035658 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 035659:
  TraceOperation 035659 (Loadw (Var (Local 1)) (Con 1) (Local 3));
  Let b1 = M[Offset(Address(GetLocal(1)),2)];
  Let b2 = M[Offset(Offset(Address(GetLocal(1)),2),1)];
  SetLocal 3 MakeHiLo(b1,b2);
  TraceOperation 035663 (Jz (Var (Local 3)) (Branch T (Dloc 035671)));
  if (IsZero(GetLocal(3))) {
    Jump: 035671
  } else {
    TraceOperation 035666 (Print_paddr (Var (Local 3)));
    GamePrint GetText(PackedAddress Z3(GetLocal(3)));
    TraceOperation 035668 New_line;
    GamePrint "\n";
    TraceOperation 035669 (Ret (Con 2));
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 2
  }
LocOp 035671:
  TraceOperation 035671 (Print "The ");
  GamePrint "The ";
  TraceOperation 035674 (Print_obj (Var (Local 4)));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(4),9)),7)];
  Let b2 = M[Offset(Offset(Offset(000741,Mul(GetLocal(4),9)),7),1)];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  if (IsZeroByte(b3)) {
    GamePrint "";
    TraceOperation 035676 (Print " is closed.");
    GamePrint " is closed.";
    TraceOperation 035683 New_line;
    GamePrint "\n";
    TraceOperation 035684 (Call (Floc 038192) [Var (Local 4)] Sp);
    PushFrame 035684;
    SetLocal 1 GetLocal(4);
    JumpCall: 038192, #actuals: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
    TraceOperation 035676 (Print " is closed.");
    GamePrint " is closed.";
    TraceOperation 035683 New_line;
    GamePrint "\n";
    TraceOperation 035684 (Call (Floc 038192) [Var (Local 4)] Sp);
    PushFrame 035684;
    SetLocal 1 GetLocal(4);
    JumpCall: 038192, #actuals: 1
  }
LocReturn 035684:
  PushStack call_result;
  TraceOperation 035690 (Ret (Con 2));
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 2
LocOp 035692:
  TraceOperation 035692 (Jz (Var (Global 66)) (Branch F (Dloc 035773)));
  Let b1 = M[008949];
  Let b2 = M[008950];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 035696 (Random (Con 100) Sp);
    LetRandom random3 100;
    PushStack random3;
    TraceOperation 035700 (Jg (Con 80) (Var Sp) (Branch F (Dloc 035773)));
    PopStack popped4;
    if (GreaterThan(80,popped4)) {
      TraceOperation 035705 (Test_attr (Var (Global 0)) (Con 4) (Branch T (Dloc 035773)));
      Let b5 = M[008817];
      Let b6 = M[008818];
      Let b7 = M[Offset(Offset(000741,Mul(MakeHiLo(b5,b6),9)),0)];
      if (TestBit(b7,3)) {
        Jump: 035773
      } else {
        TraceOperation 035710 (Jz (Var (Global 65)) (Branch T (Dloc 035757)));
        Let b8 = M[008947];
        Let b9 = M[008948];
        if (IsZero(MakeHiLo(b8,b9))) {
          Jump: 035757
        } else {
          TraceOperation 035713 (Print "There are odd noises in the darkness, and there is no exit in that direction.");
          GamePrint "There are odd noises in the darkness, and there is no exit in that direction.";
          TraceOperation 035754 New_line;
          GamePrint "\n";
          TraceOperation 035755 (Ret (Con 2));
          PopFrame return_address_10;
          JumpReturn: return_address_10, result: 2
        }
      }
    } else {
      Jump: 035773
    }
  } else {
    Jump: 035773
  }
LocOp 035757:
  TraceOperation 035757 (Call (Floc 020688) [] Sp);
  PushFrame 035757;
  JumpCall: 020688, #actuals: 0
LocReturn 035757:
  PushStack call_result;
  TraceOperation 035762 (Jz (Var Sp) (Branch F Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 035765 (Call (Floc 067174) [Con -25878] Sp);
    PushFrame 035765;
    SetLocal 1 -25878;
    JumpCall: 067174, #actuals: 1
  } else {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  }
LocReturn 035765:
  PushStack call_result;
  TraceOperation 035772 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 035773:
  TraceOperation 035773 (Print "You can't go that way.");
  GamePrint "You can't go that way.";
  TraceOperation 035784 New_line;
  GamePrint "\n";
  TraceOperation 035785 (Ret (Con 2));
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 2
--[247]--------------------------------------------------
LocRoutine 035788:
  MakeRoutineFrame 0;
  Jump: 035789
LocOp 035789:
  TraceOperation 035789 (Print_ret "Use compass directions for movement.");
  GamePrint "Use compass directions for movement.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[248]--------------------------------------------------
LocRoutine 035814:
  MakeRoutineFrame 0;
  Jump: 035815
LocOp 035815:
  TraceOperation 035815 (Jin (Var (Global 118)) (Var (Global 0)) (Branch T (Dloc 035829)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[008817];
  Let b4 = M[008818];
  Let b5 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),4)];
  if (Equal(MakeHiLo(b3,b4),Widen(b5))) {
    TraceOperation 035829 (Print_ret "It's here!");
    GamePrint "It's here!\n";
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 1
  } else {
    TraceOperation 035819 (Call (Floc 038048) [Var (Global 118),Var (Global 0)] Sp);
    Let b7 = M[009053];
    Let b8 = M[009054];
    Let b9 = M[008817];
    Let b10 = M[008818];
    PushFrame 035819;
    SetLocal 1 MakeHiLo(b7,b8);
    SetLocal 2 MakeHiLo(b9,b10);
    JumpCall: 038048, #actuals: 2
  }
LocReturn 035819:
  PushStack call_result;
  TraceOperation 035826 (Jz (Var Sp) (Branch T (Dloc 035834)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 035834
  } else {
    TraceOperation 035829 (Print_ret "It's here!");
    GamePrint "It's here!\n";
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 1
  }
LocOp 035834:
  TraceOperation 035834 (Print_ret "You should supply a direction!");
  GamePrint "You should supply a direction!\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[249]--------------------------------------------------
LocRoutine 035856:
  MakeRoutineFrame 0;
  Jump: 035857
LocOp 035857:
  TraceOperation 035857 (Call (Floc 037468) [Con -25858] Sp);
  PushFrame 035857;
  SetLocal 1 -25858;
  JumpCall: 037468, #actuals: 1
LocReturn 035857:
  PushStack call_result;
  TraceOperation 035864 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[250]--------------------------------------------------
LocRoutine 035866:
  MakeRoutineFrame 0;
  Jump: 035867
LocOp 035867:
  TraceOperation 035867 (Test_attr (Var (Global 118)) (Con 0) (Branch T (Dloc 035885)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),0)];
  if (TestBit(b3,7)) {
    Jump: 035885
  } else {
    TraceOperation 035871 (Print "You can't wear the ");
    GamePrint "You can't wear the ";
    TraceOperation 035880 (Print_obj (Var (Global 118)));
    Let b4 = M[009053];
    Let b5 = M[009054];
    Let b6 = M[Offset(Offset(000741,Mul(MakeHiLo(b4,b5),9)),7)];
    Let b7 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b4,b5),9)),7),1)];
    Let b8 = M[Address(MakeHiLo(b6,b7))];
    if (IsZeroByte(b8)) {
      GamePrint "";
      TraceOperation 035882 (Print_ret ".");
      GamePrint ".\n";
      PopFrame return_address_9;
      JumpReturn: return_address_9, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b6,b7)),1));
      TraceOperation 035882 (Print_ret ".");
      GamePrint ".\n";
      PopFrame return_address_10;
      JumpReturn: return_address_10, result: 1
    }
  }
LocOp 035885:
  TraceOperation 035885 (Call (Floc 022396) [Con 93,Var (Global 118)] Sp);
  Let b1 = M[009053];
  Let b2 = M[009054];
  PushFrame 035885;
  SetLocal 1 93;
  SetLocal 2 MakeHiLo(b1,b2);
  JumpCall: 022396, #actuals: 2
LocReturn 035885:
  PushStack call_result;
  TraceOperation 035892 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[251]--------------------------------------------------
LocRoutine 035894:
  MakeRoutineFrame 0;
  Jump: 035895
LocOp 035895:
  TraceOperation 035895 (Print_ret "Naturally!");
  GamePrint "Naturally!\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[252]--------------------------------------------------
LocRoutine 035904:
  MakeRoutineFrame 0;
  Jump: 035905
LocOp 035905:
  TraceOperation 035905 (Print "You cannot wind up a ");
  GamePrint "You cannot wind up a ";
  TraceOperation 035916 (Print_obj (Var (Global 118)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  if (IsZeroByte(b5)) {
    GamePrint "";
    TraceOperation 035918 (Print_ret ".");
    GamePrint ".\n";
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
    TraceOperation 035918 (Print_ret ".");
    GamePrint ".\n";
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 1
  }
--[253]--------------------------------------------------
LocRoutine 035922:
  MakeRoutineFrame 0;
  Jump: 035923
LocOp 035923:
  TraceOperation 035923 (Print_ret "With luck, your wish will come true.");
  GamePrint "With luck, your wish will come true.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[254]--------------------------------------------------
LocRoutine 035948:
  MakeRoutineFrame 0;
  Jump: 035949
LocOp 035949:
  TraceOperation 035949 (Print_ret "Aaaarrrrgggghhhh!");
  GamePrint "Aaaarrrrgggghhhh!\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[255]--------------------------------------------------
LocRoutine 035964:
  MakeRoutineFrame 0;
  Jump: 035965
LocOp 035965:
  TraceOperation 035965 (Print_ret "At your service!");
  GamePrint "At your service!\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[256]--------------------------------------------------
LocRoutine 035976:
  MakeRoutineFrame 0;
  Jump: 035977
LocOp 035977:
  TraceOperation 035977 (Call (Floc 035994) [] Sp);
  PushFrame 035977;
  JumpCall: 035994, #actuals: 0
LocReturn 035977:
  PushStack call_result;
  TraceOperation 035982 (Jz (Var Sp) (Branch T Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  } else {
    TraceOperation 035985 (Jz (Var (Global 70)) (Branch F Dfalse));
    Let b3 = M[008957];
    Let b4 = M[008958];
    if (IsZero(MakeHiLo(b3,b4))) {
      TraceOperation 035988 (Call (Floc 036174) [] Sp);
      PushFrame 035988;
      JumpCall: 036174, #actuals: 0
    } else {
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 0
    }
  }
LocReturn 035988:
  PushStack call_result;
  TraceOperation 035993 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[257]--------------------------------------------------
LocRoutine 035994:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 036003
LocOp 036003:
  TraceOperation 036003 (Jz (Var (Local 1)) (Branch T (Dloc 036012)));
  if (IsZero(GetLocal(1))) {
    Jump: 036012
  } else {
    TraceOperation 036006 (Push (Var (Local 1)));
    PushStack GetLocal(1);
    TraceOperation 036009 (Jump 036015);
    Jump: 036015
  }
LocOp 036012:
  TraceOperation 036012 (Push (Var (Global 71)));
  Let b1 = M[008959];
  Let b2 = M[008960];
  PushStack MakeHiLo(b1,b2);
  Jump: 036015
LocOp 036015:
  TraceOperation 036015 (Pull (Con 2));
  PopStack popped1;
  SetLocal 2 popped1;
  TraceOperation 036018 (Jz (Var (Global 66)) (Branch F (Dloc 036068)));
  Let b2 = M[008949];
  Let b3 = M[008950];
  if (IsZero(MakeHiLo(b2,b3))) {
    TraceOperation 036021 (Print "It is pitch black.");
    GamePrint "It is pitch black.";
    TraceOperation 036034 (Jz (Var (Global 65)) (Branch F (Dloc 036060)));
    Let b4 = M[008947];
    Let b5 = M[008948];
    if (IsZero(MakeHiLo(b4,b5))) {
      TraceOperation 036037 (Print " You are likely to be eaten by a grue.");
      GamePrint " You are likely to be eaten by a grue.";
      Jump: 036060
    } else {
      Jump: 036060
    }
  } else {
    Jump: 036068
  }
LocOp 036060:
  TraceOperation 036060 New_line;
  GamePrint "\n";
  TraceOperation 036061 (Call (Floc 020688) [] Sp);
  PushFrame 036061;
  JumpCall: 020688, #actuals: 0
LocReturn 036061:
  PushStack call_result;
  TraceOperation 036066 (Ret (Con 0));
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 0
LocOp 036068:
  TraceOperation 036068 (Test_attr (Var (Global 0)) (Con 3) (Branch T (Dloc 036078)));
  Let b1 = M[008817];
  Let b2 = M[008818];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),0)];
  if (TestBit(b3,4)) {
    Jump: 036078
  } else {
    TraceOperation 036072 (Set_attr (Var (Global 0)) (Con 3));
    Let b4 = M[008817];
    Let b5 = M[008818];
    Let b6 = M[Offset(Offset(000741,Mul(MakeHiLo(b4,b5),9)),0)];
    SetByte Offset(Offset(000741,Mul(MakeHiLo(b4,b5),9)),0) SetBit(b6,4);
    TraceOperation 036075 (Store (Con 2) (Con 1));
    SetLocal 2 1;
    Jump: 036078
  }
LocOp 036078:
  TraceOperation 036078 (Test_attr (Var (Global 0)) (Con 5) (Branch F (Dloc 036085)));
  Let b1 = M[008817];
  Let b2 = M[008818];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),0)];
  if (TestBit(b3,2)) {
    TraceOperation 036082 (Clear_attr (Var (Global 0)) (Con 3));
    Let b4 = M[008817];
    Let b5 = M[008818];
    Let b6 = M[Offset(Offset(000741,Mul(MakeHiLo(b4,b5),9)),0)];
    SetByte Offset(Offset(000741,Mul(MakeHiLo(b4,b5),9)),0) ClearBit(b6,4);
    Jump: 036085
  } else {
    Jump: 036085
  }
LocOp 036085:
  TraceOperation 036085 (Jin (Var (Global 0)) (Con 82) (Branch F (Dloc 036106)));
  Let b1 = M[008817];
  Let b2 = M[008818];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),4)];
  if (Equal(82,Widen(b3))) {
    TraceOperation 036089 (Print_obj (Var (Global 0)));
    Let b4 = M[008817];
    Let b5 = M[008818];
    Let b6 = M[Offset(Offset(000741,Mul(MakeHiLo(b4,b5),9)),7)];
    Let b7 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b4,b5),9)),7),1)];
    Let b8 = M[Address(MakeHiLo(b6,b7))];
    if (IsZeroByte(b8)) {
      GamePrint "";
      TraceOperation 036091 (Get_parent (Var (Global 111)) (Local 4));
      Let b9 = M[009039];
      Let b10 = M[009040];
      Let b11 = M[Offset(Offset(000741,Mul(MakeHiLo(b9,b10),9)),4)];
      SetLocal 4 Widen(b11);
      TraceOperation 036094 (Test_attr (Var (Local 4)) (Con 27) (Branch F (Dloc 036105)));
      Let b12 = M[Offset(Offset(000741,Mul(GetLocal(4),9)),3)];
      if (TestBit(b12,4)) {
        TraceOperation 036098 (Print ", in the ");
        GamePrint ", in the ";
        TraceOperation 036103 (Print_obj (Var (Local 4)));
        Let b13 = M[Offset(Offset(000741,Mul(GetLocal(4),9)),7)];
        Let b14 = M[Offset(Offset(Offset(000741,Mul(GetLocal(4),9)),7),1)];
        Let b15 = M[Address(MakeHiLo(b13,b14))];
        if (IsZeroByte(b15)) {
          GamePrint "";
          Jump: 036105
        } else {
          GamePrint GetText(Offset(Address(MakeHiLo(b13,b14)),1));
          Jump: 036105
        }
      } else {
        Jump: 036105
      }
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b6,b7)),1));
      TraceOperation 036091 (Get_parent (Var (Global 111)) (Local 4));
      Let b16 = M[009039];
      Let b17 = M[009040];
      Let b18 = M[Offset(Offset(000741,Mul(MakeHiLo(b16,b17),9)),4)];
      SetLocal 4 Widen(b18);
      TraceOperation 036094 (Test_attr (Var (Local 4)) (Con 27) (Branch F (Dloc 036105)));
      Let b19 = M[Offset(Offset(000741,Mul(GetLocal(4),9)),3)];
      if (TestBit(b19,4)) {
        TraceOperation 036098 (Print ", in the ");
        GamePrint ", in the ";
        TraceOperation 036103 (Print_obj (Var (Local 4)));
        Let b20 = M[Offset(Offset(000741,Mul(GetLocal(4),9)),7)];
        Let b21 = M[Offset(Offset(Offset(000741,Mul(GetLocal(4),9)),7),1)];
        Let b22 = M[Address(MakeHiLo(b20,b21))];
        if (IsZeroByte(b22)) {
          GamePrint "";
          Jump: 036105
        } else {
          GamePrint GetText(Offset(Address(MakeHiLo(b20,b21)),1));
          Jump: 036105
        }
      } else {
        Jump: 036105
      }
    }
  } else {
    TraceOperation 036106 (Jz (Var (Local 1)) (Branch F (Dloc 036112)));
    if (IsZero(GetLocal(1))) {
      TraceOperation 036109 (Jz (Var (Global 70)) (Branch F Dtrue));
      Let b23 = M[008957];
      Let b24 = M[008958];
      if (IsZero(MakeHiLo(b23,b24))) {
        Jump: 036112
      } else {
        PopFrame return_address_25;
        JumpReturn: return_address_25, result: 1
      }
    } else {
      Jump: 036112
    }
  }
LocOp 036105:
  TraceOperation 036105 New_line;
  GamePrint "\n";
  TraceOperation 036106 (Jz (Var (Local 1)) (Branch F (Dloc 036112)));
  if (IsZero(GetLocal(1))) {
    TraceOperation 036109 (Jz (Var (Global 70)) (Branch F Dtrue));
    Let b1 = M[008957];
    Let b2 = M[008958];
    if (IsZero(MakeHiLo(b1,b2))) {
      Jump: 036112
    } else {
      PopFrame return_address_3;
      JumpReturn: return_address_3, result: 1
    }
  } else {
    Jump: 036112
  }
LocOp 036112:
  TraceOperation 036112 (Get_parent (Var (Global 111)) (Local 4));
  Let b1 = M[009039];
  Let b2 = M[009040];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),4)];
  SetLocal 4 Widen(b3);
  TraceOperation 036115 (Jz (Var (Local 2)) (Branch T (Dloc 036130)));
  if (IsZero(GetLocal(2))) {
    Jump: 036130
  } else {
    TraceOperation 036118 (Get_prop (Var (Global 0)) (Con 17) Sp);
    Let b4 = M[008817];
    Let b5 = M[008818];
    Let b6 = M[Offset(Offset(000741,Mul(MakeHiLo(b4,b5),9)),7)];
    Let b7 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b4,b5),9)),7),1)];
    Let b8 = M[Address(MakeHiLo(b6,b7))];
    Error: getPropsA
  }
LocReturn 036122:
  PushStack call_result;
  TraceOperation 036127 (Jz (Var Sp) (Branch F Dtrue));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 036130
  } else {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 1
  }
LocOp 036130:
  TraceOperation 036130 (Jz (Var (Local 2)) (Branch T (Dloc 036146)));
  if (IsZero(GetLocal(2))) {
    Jump: 036146
  } else {
    TraceOperation 036133 (Get_prop (Var (Global 0)) (Con 11) (Local 3));
    Let b1 = M[008817];
    Let b2 = M[008818];
    Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7)];
    Let b4 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7),1)];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    Error: getPropsA
  }
LocOp 036146:
  TraceOperation 036146 (Get_prop (Var (Global 0)) (Con 17) Sp);
  Let b1 = M[008817];
  Let b2 = M[008818];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  Error: getPropsA
LocReturn 036150:
  PushStack call_result;
  Jump: 036155
LocOp 036155:
  TraceOperation 036155 (Je [Var (Global 0),Var (Local 4)] (Branch T Dtrue));
  Let b1 = M[008817];
  Let b2 = M[008818];
  if (Equal(MakeHiLo(b1,b2),GetLocal(4))) {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    TraceOperation 036159 (Test_attr (Var (Local 4)) (Con 27) (Branch F Dtrue));
    Let b4 = M[Offset(Offset(000741,Mul(GetLocal(4),9)),3)];
    if (TestBit(b4,4)) {
      TraceOperation 036163 (Get_prop (Var (Local 4)) (Con 17) Sp);
      Let b5 = M[Offset(Offset(000741,Mul(GetLocal(4),9)),7)];
      Let b6 = M[Offset(Offset(Offset(000741,Mul(GetLocal(4),9)),7),1)];
      Let b7 = M[Address(MakeHiLo(b5,b6))];
      Error: getPropsA
    } else {
      PopFrame return_address_8;
      JumpReturn: return_address_8, result: 1
    }
  }
LocReturn 036167:
  PushStack call_result;
  TraceOperation 036172 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[258]--------------------------------------------------
LocRoutine 036174:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 036177
LocOp 036177:
  TraceOperation 036177 (Jz (Var (Global 66)) (Branch T (Dloc 036209)));
  Let b1 = M[008949];
  Let b2 = M[008950];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 036209
  } else {
    TraceOperation 036180 (Get_child (Var (Global 0)) Sp (Branch F Dfalse));
    Let b3 = M[008817];
    Let b4 = M[008818];
    Let b5 = M[Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),6)];
    PushStack Widen(b5);
    if (IsZero(Widen(b5))) {
      PopFrame return_address_6;
      JumpReturn: return_address_6, result: 0
    } else {
      TraceOperation 036184 (Jz (Var (Local 1)) (Branch T (Dloc 036193)));
      if (IsZero(GetLocal(1))) {
        Jump: 036193
      } else {
        TraceOperation 036187 (Push (Var (Local 1)));
        PushStack GetLocal(1);
        TraceOperation 036190 (Jump 036196);
        Jump: 036196
      }
    }
  }
LocOp 036193:
  TraceOperation 036193 (Push (Var (Global 71)));
  Let b1 = M[008959];
  Let b2 = M[008960];
  PushStack MakeHiLo(b1,b2);
  Jump: 036196
LocOp 036196:
  TraceOperation 036196 (Pull (Con 1));
  PopStack popped1;
  SetLocal 1 popped1;
  TraceOperation 036199 (Call (Floc 036522) [Var (Global 0),Var (Local 1),Con -1] Sp);
  Let b2 = M[008817];
  Let b3 = M[008818];
  PushFrame 036199;
  SetLocal 1 MakeHiLo(b2,b3);
  SetLocal 2 GetLocal(1);
  SetLocal 3 -1;
  JumpCall: 036522, #actuals: 3
LocReturn 036199:
  PushStack call_result;
  TraceOperation 036208 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 036209:
  TraceOperation 036209 (Print_ret "Only bats can see in the dark. And you're not one.");
  GamePrint "Only bats can see in the dark. And you're not one.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[259]--------------------------------------------------
LocRoutine 036242:
  MakeRoutineFrame 5;
  if (LessThanByte(num_actuals,5)) {
    SetLocal 5 0;
    if (LessThanByte(num_actuals,4)) {
      SetLocal 4 0;
      if (LessThanByte(num_actuals,3)) {
        SetLocal 3 0;
        if (LessThanByte(num_actuals,2)) {
          SetLocal 2 0;
          if (LessThanByte(num_actuals,1)) {
            SetLocal 1 0;
          }
        }
      }
    }
  }
  Jump: 036253
LocOp 036253:
  TraceOperation 036253 (Store (Con 80) (Var (Local 1)));
  SetByte 008945 HiByte(GetLocal(1));
  SetByte 008946 LoByte(GetLocal(1));
  TraceOperation 036256 (Jz (Var (Local 3)) (Branch F (Dloc 036271)));
  if (IsZero(GetLocal(3))) {
    TraceOperation 036259 (Get_prop (Var (Local 1)) (Con 9) Sp);
    Let b1 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),7)];
    Let b2 = M[Offset(Offset(Offset(000741,Mul(GetLocal(1),9)),7),1)];
    Let b3 = M[Address(MakeHiLo(b1,b2))];
    Error: getPropsA
  } else {
    Jump: 036271
  }
LocReturn 036263:
  PushStack call_result;
  TraceOperation 036268 (Jz (Var Sp) (Branch F Dtrue));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 036271
  } else {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 1
  }
LocOp 036271:
  TraceOperation 036271 (Jz (Var (Local 3)) (Branch F (Dloc 036297)));
  if (IsZero(GetLocal(3))) {
    TraceOperation 036274 (Test_attr (Var (Local 1)) (Con 3) (Branch T (Dloc 036285)));
    Let b1 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),0)];
    if (TestBit(b1,4)) {
      Jump: 036285
    } else {
      TraceOperation 036278 (Get_prop (Var (Local 1)) (Con 14) (Local 4));
      Let b2 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),7)];
      Let b3 = M[Offset(Offset(Offset(000741,Mul(GetLocal(1),9)),7),1)];
      Let b4 = M[Address(MakeHiLo(b2,b3))];
      Error: getPropsA
    }
  } else {
    Jump: 036297
  }
LocOp 036285:
  TraceOperation 036285 (Get_prop (Var (Local 1)) (Con 11) (Local 4));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),7)];
  Let b2 = M[Offset(Offset(Offset(000741,Mul(GetLocal(1),9)),7),1)];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Error: getPropsA
LocOp 036292:
  TraceOperation 036292 (Print_paddr (Var (Local 4)));
  GamePrint GetText(PackedAddress Z3(GetLocal(4)));
  TraceOperation 036294 (Jump 036383);
  Jump: 036383
LocOp 036297:
  TraceOperation 036297 (Jz (Var (Local 3)) (Branch F (Dloc 036335)));
  if (IsZero(GetLocal(3))) {
    TraceOperation 036300 (Print "There is a ");
    GamePrint "There is a ";
    TraceOperation 036305 (Print_obj (Var (Local 1)));
    Let b1 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),7)];
    Let b2 = M[Offset(Offset(Offset(000741,Mul(GetLocal(1),9)),7),1)];
    Let b3 = M[Address(MakeHiLo(b1,b2))];
    if (IsZeroByte(b3)) {
      GamePrint "";
      TraceOperation 036307 (Print " here");
      GamePrint " here";
      TraceOperation 036310 (Test_attr (Var (Local 1)) (Con 20) (Branch F (Dloc 036329)));
      Let b4 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),2)];
      if (TestBit(b4,3)) {
        TraceOperation 036314 (Print " (providing light)");
        GamePrint " (providing light)";
        Jump: 036329
      } else {
        Jump: 036329
      }
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
      TraceOperation 036307 (Print " here");
      GamePrint " here";
      TraceOperation 036310 (Test_attr (Var (Local 1)) (Con 20) (Branch F (Dloc 036329)));
      Let b5 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),2)];
      if (TestBit(b5,3)) {
        TraceOperation 036314 (Print " (providing light)");
        GamePrint " (providing light)";
        Jump: 036329
      } else {
        Jump: 036329
      }
    }
  } else {
    Jump: 036335
  }
LocOp 036329:
  TraceOperation 036329 (Print ".");
  GamePrint ".";
  TraceOperation 036332 (Jump 036383);
  Jump: 036383
LocOp 036335:
  TraceOperation 036335 (Loadw (Var (Global 57)) (Var (Local 3)) Sp);
  Let b1 = M[008931];
  Let b2 = M[008932];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,GetLocal(3)))];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,GetLocal(3))),1)];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 036339 (Print_paddr (Var Sp));
  PopStack popped5;
  GamePrint GetText(PackedAddress Z3(popped5));
  TraceOperation 036341 (Print "A ");
  GamePrint "A ";
  TraceOperation 036344 (Print_obj (Var (Local 1)));
  Let b6 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),7)];
  Let b7 = M[Offset(Offset(Offset(000741,Mul(GetLocal(1),9)),7),1)];
  Let b8 = M[Address(MakeHiLo(b6,b7))];
  if (IsZeroByte(b8)) {
    GamePrint "";
    TraceOperation 036346 (Test_attr (Var (Local 1)) (Con 20) (Branch F (Dloc 036368)));
    Let b9 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),2)];
    if (TestBit(b9,3)) {
      TraceOperation 036350 (Print " (providing light)");
      GamePrint " (providing light)";
      TraceOperation 036365 (Jump 036383);
      Jump: 036383
    } else {
      Jump: 036368
    }
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b6,b7)),1));
    TraceOperation 036346 (Test_attr (Var (Local 1)) (Con 20) (Branch F (Dloc 036368)));
    Let b10 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),2)];
    if (TestBit(b10,3)) {
      TraceOperation 036350 (Print " (providing light)");
      GamePrint " (providing light)";
      TraceOperation 036365 (Jump 036383);
      Jump: 036383
    } else {
      Jump: 036368
    }
  }
LocOp 036368:
  TraceOperation 036368 (Test_attr (Var (Local 1)) (Con 0) (Branch F (Dloc 036383)));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),0)];
  if (TestBit(b1,7)) {
    TraceOperation 036372 (Print " (being worn)");
    GamePrint " (being worn)";
    Jump: 036383
  } else {
    Jump: 036383
  }
LocOp 036383:
  TraceOperation 036383 (Call (Floc 020688) [] Sp);
  PushFrame 036383;
  JumpCall: 020688, #actuals: 0
LocReturn 036383:
  PushStack call_result;
  TraceOperation 036388 (Jz (Var (Local 3)) (Branch F (Dloc 036417)));
  if (IsZero(GetLocal(3))) {
    TraceOperation 036391 (Get_parent (Var (Global 111)) (Local 5));
    Let b1 = M[009039];
    Let b2 = M[009040];
    Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),4)];
    SetLocal 5 Widen(b3);
    TraceOperation 036394 (Jz (Var (Local 5)) (Branch T (Dloc 036417)));
    if (IsZero(GetLocal(5))) {
      Jump: 036417
    } else {
      TraceOperation 036397 (Test_attr (Var (Local 5)) (Con 27) (Branch F (Dloc 036417)));
      Let b4 = M[Offset(Offset(000741,Mul(GetLocal(5),9)),3)];
      if (TestBit(b4,4)) {
        TraceOperation 036401 (Print " (outside the ");
        GamePrint " (outside the ";
        TraceOperation 036412 (Print_obj (Var (Local 5)));
        Let b5 = M[Offset(Offset(000741,Mul(GetLocal(5),9)),7)];
        Let b6 = M[Offset(Offset(Offset(000741,Mul(GetLocal(5),9)),7),1)];
        Let b7 = M[Address(MakeHiLo(b5,b6))];
        if (IsZeroByte(b7)) {
          GamePrint "";
          TraceOperation 036414 (Print ")");
          GamePrint ")";
          Jump: 036417
        } else {
          GamePrint GetText(Offset(Address(MakeHiLo(b5,b6)),1));
          TraceOperation 036414 (Print ")");
          GamePrint ")";
          Jump: 036417
        }
      } else {
        Jump: 036417
      }
    }
  } else {
    Jump: 036417
  }
LocOp 036417:
  TraceOperation 036417 New_line;
  GamePrint "\n";
  TraceOperation 036418 (Call (Floc 036946) [Var (Local 1)] Sp);
  PushFrame 036418;
  SetLocal 1 GetLocal(1);
  JumpCall: 036946, #actuals: 1
LocReturn 036418:
  PushStack call_result;
  TraceOperation 036424 (Jz (Var Sp) (Branch T Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  } else {
    TraceOperation 036427 (Get_child (Var (Local 1)) Sp (Branch F Dfalse));
    Let b3 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),6)];
    PushStack Widen(b3);
    if (IsZero(Widen(b3))) {
      PopFrame return_address_4;
      JumpReturn: return_address_4, result: 0
    } else {
      TraceOperation 036431 (Call (Floc 036522) [Var (Local 1),Var (Local 2),Var (Local 3)] Sp);
      PushFrame 036431;
      SetLocal 1 GetLocal(1);
      SetLocal 2 GetLocal(2);
      SetLocal 3 GetLocal(3);
      JumpCall: 036522, #actuals: 3
    }
  }
LocReturn 036431:
  PushStack call_result;
  TraceOperation 036439 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[260]--------------------------------------------------
LocRoutine 036440:
  MakeRoutineFrame 6;
  if (LessThanByte(num_actuals,6)) {
    SetLocal 6 0;
    if (LessThanByte(num_actuals,5)) {
      SetLocal 5 0;
      if (LessThanByte(num_actuals,4)) {
        SetLocal 4 1;
        if (LessThanByte(num_actuals,3)) {
          SetLocal 3 0;
          if (LessThanByte(num_actuals,2)) {
            SetLocal 2 0;
            if (LessThanByte(num_actuals,1)) {
              SetLocal 1 0;
            }
          }
        }
      }
    }
  }
  Jump: 036453
LocOp 036453:
  TraceOperation 036453 (Get_child (Var (Local 1)) (Local 2) (Branch F Dfalse));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),6)];
  SetLocal 2 Widen(b1);
  if (IsZero(Widen(b1))) {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  } else {
    Jump: 036457
  }
LocOp 036457:
  TraceOperation 036457 (Get_sibling (Var (Local 2)) (Local 3) (Branch T (Dloc 036461)));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(2),9)),5)];
  SetLocal 3 Widen(b1);
  if (IsZero(Widen(b1))) {
    TraceOperation 036461 (Jz (Var (Local 4)) (Branch T (Dloc 036470)));
    if (IsZero(GetLocal(4))) {
      Jump: 036470
    } else {
      TraceOperation 036464 (Store (Con 4) (Con 0));
      SetLocal 4 0;
      TraceOperation 036467 (Jump 036479);
      Jump: 036479
    }
  } else {
    TraceOperation 036461 (Jz (Var (Local 4)) (Branch T (Dloc 036470)));
    if (IsZero(GetLocal(4))) {
      Jump: 036470
    } else {
      TraceOperation 036464 (Store (Con 4) (Con 0));
      SetLocal 4 0;
      TraceOperation 036467 (Jump 036479);
      Jump: 036479
    }
  }
LocOp 036470:
  TraceOperation 036470 (Print ", ");
  GamePrint ", ";
  TraceOperation 036473 (Jz (Var (Local 3)) (Branch F (Dloc 036479)));
  if (IsZero(GetLocal(3))) {
    TraceOperation 036476 (Print "and ");
    GamePrint "and ";
    Jump: 036479
  } else {
    Jump: 036479
  }
LocOp 036479:
  TraceOperation 036479 (Print "a ");
  GamePrint "a ";
  TraceOperation 036482 (Print_obj (Var (Local 2)));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(2),9)),7)];
  Let b2 = M[Offset(Offset(Offset(000741,Mul(GetLocal(2),9)),7),1)];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  if (IsZeroByte(b3)) {
    GamePrint "";
    TraceOperation 036484 (Jz (Var (Local 5)) (Branch F (Dloc 036496)));
    if (IsZero(GetLocal(5))) {
      TraceOperation 036487 (Jz (Var (Local 6)) (Branch F (Dloc 036496)));
      if (IsZero(GetLocal(6))) {
        TraceOperation 036490 (Store (Con 5) (Var (Local 2)));
        SetLocal 5 GetLocal(2);
        TraceOperation 036493 (Jump 036502);
        Jump: 036502
      } else {
        Jump: 036496
      }
    } else {
      Jump: 036496
    }
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
    TraceOperation 036484 (Jz (Var (Local 5)) (Branch F (Dloc 036496)));
    if (IsZero(GetLocal(5))) {
      TraceOperation 036487 (Jz (Var (Local 6)) (Branch F (Dloc 036496)));
      if (IsZero(GetLocal(6))) {
        TraceOperation 036490 (Store (Con 5) (Var (Local 2)));
        SetLocal 5 GetLocal(2);
        TraceOperation 036493 (Jump 036502);
        Jump: 036502
      } else {
        Jump: 036496
      }
    } else {
      Jump: 036496
    }
  }
LocOp 036496:
  TraceOperation 036496 (Store (Con 6) (Con 1));
  SetLocal 6 1;
  TraceOperation 036499 (Store (Con 5) (Con 0));
  SetLocal 5 0;
  Jump: 036502
LocOp 036502:
  TraceOperation 036502 (Store (Con 2) (Var (Local 3)));
  SetLocal 2 GetLocal(3);
  TraceOperation 036505 (Jz (Var (Local 2)) (Branch F (Dloc 036457)));
  if (IsZero(GetLocal(2))) {
    TraceOperation 036509 (Jz (Var (Local 5)) (Branch T Dtrue));
    if (IsZero(GetLocal(5))) {
      PopFrame return_address_1;
      JumpReturn: return_address_1, result: 1
    } else {
      TraceOperation 036512 (Jz (Var (Local 6)) (Branch F Dtrue));
      if (IsZero(GetLocal(6))) {
        TraceOperation 036515 (Call (Floc 038192) [Var (Local 5)] Sp);
        PushFrame 036515;
        SetLocal 1 GetLocal(5);
        JumpCall: 038192, #actuals: 1
      } else {
        PopFrame return_address_2;
        JumpReturn: return_address_2, result: 1
      }
    }
  } else {
    Jump: 036457
  }
LocReturn 036515:
  PushStack call_result;
  TraceOperation 036521 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[261]--------------------------------------------------
LocRoutine 036522:
  MakeRoutineFrame 10;
  if (LessThanByte(num_actuals,10)) {
    SetLocal 10 0;
    if (LessThanByte(num_actuals,9)) {
      SetLocal 9 0;
      if (LessThanByte(num_actuals,8)) {
        SetLocal 8 0;
        if (LessThanByte(num_actuals,7)) {
          SetLocal 7 0;
          if (LessThanByte(num_actuals,6)) {
            SetLocal 6 0;
            if (LessThanByte(num_actuals,5)) {
              SetLocal 5 0;
              if (LessThanByte(num_actuals,4)) {
                SetLocal 4 0;
                if (LessThanByte(num_actuals,3)) {
                  SetLocal 3 0;
                  if (LessThanByte(num_actuals,2)) {
                    SetLocal 2 0;
                    if (LessThanByte(num_actuals,1)) {
                      SetLocal 1 0;
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  Jump: 036543
LocOp 036543:
  TraceOperation 036543 (Get_child (Var (Local 1)) (Local 4) (Branch F Dtrue));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),6)];
  SetLocal 4 Widen(b1);
  if (IsZero(Widen(b1))) {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 1
  } else {
    TraceOperation 036547 (Get_parent (Var (Global 111)) (Local 7));
    Let b3 = M[009039];
    Let b4 = M[009040];
    Let b5 = M[Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),4)];
    SetLocal 7 Widen(b5);
    TraceOperation 036550 (Jz (Var (Local 7)) (Branch T (Dloc 036560)));
    if (IsZero(GetLocal(7))) {
      Jump: 036560
    } else {
      TraceOperation 036553 (Test_attr (Var (Local 7)) (Con 27) (Branch F (Dloc 036560)));
      Let b6 = M[Offset(Offset(000741,Mul(GetLocal(7),9)),3)];
      if (TestBit(b6,4)) {
        TraceOperation 036557 (Jump 036563);
        Jump: 036563
      } else {
        Jump: 036560
      }
    }
  }
LocOp 036560:
  TraceOperation 036560 (Store (Con 7) (Con 0));
  SetLocal 7 0;
  Jump: 036563
LocOp 036563:
  TraceOperation 036563 (Store (Con 5) (Con 1));
  SetLocal 5 1;
  TraceOperation 036566 (Store (Con 6) (Con 1));
  SetLocal 6 1;
  TraceOperation 036569 (Get_parent (Var (Local 1)) Sp);
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),4)];
  PushStack Widen(b1);
  TraceOperation 036572 (Je [Var (Global 111),Var (Local 1),Var Sp] (Branch F (Dloc 036584)));
  Let b2 = M[009039];
  Let b3 = M[009040];
  PopStack popped4;
  if (LogOr(Equal(MakeHiLo(b2,b3),GetLocal(1)),Equal(MakeHiLo(b2,b3),popped4))) {
    TraceOperation 036578 (Store (Con 10) (Con 1));
    SetLocal 10 1;
    TraceOperation 036581 (Jump 036677);
    Jump: 036677
  } else {
    Jump: 036584
  }
LocOp 036584:
  TraceOperation 036584 (Jz (Var (Local 4)) (Branch F (Dloc 036590)));
  if (IsZero(GetLocal(4))) {
    TraceOperation 036587 (Jump 036677);
    Jump: 036677
  } else {
    Jump: 036590
  }
LocOp 036590:
  TraceOperation 036590 (Je [Var (Local 4),Var (Local 7)] (Branch F (Dloc 036600)));
  if (Equal(GetLocal(4),GetLocal(7))) {
    TraceOperation 036594 (Store (Con 9) (Con 1));
    SetLocal 9 1;
    TraceOperation 036597 (Jump 036670);
    Jump: 036670
  } else {
    Jump: 036600
  }
LocOp 036600:
  TraceOperation 036600 (Je [Var (Local 4),Var (Global 111)] (Branch F (Dloc 036607)));
  Let b1 = M[009039];
  Let b2 = M[009040];
  if (Equal(GetLocal(4),MakeHiLo(b1,b2))) {
    TraceOperation 036604 (Jump 036670);
    Jump: 036670
  } else {
    Jump: 036607
  }
LocOp 036607:
  TraceOperation 036607 (Test_attr (Var (Local 4)) (Con 7) (Branch T (Dloc 036670)));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(4),9)),0)];
  if (TestBit(b1,0)) {
    Jump: 036670
  } else {
    TraceOperation 036612 (Test_attr (Var (Local 4)) (Con 3) (Branch T (Dloc 036670)));
    Let b2 = M[Offset(Offset(000741,Mul(GetLocal(4),9)),0)];
    if (TestBit(b2,4)) {
      Jump: 036670
    } else {
      TraceOperation 036616 (Get_prop (Var (Local 4)) (Con 14) (Local 8));
      Let b3 = M[Offset(Offset(000741,Mul(GetLocal(4),9)),7)];
      Let b4 = M[Offset(Offset(Offset(000741,Mul(GetLocal(4),9)),7),1)];
      Let b5 = M[Address(MakeHiLo(b3,b4))];
      Error: getPropsA
    }
  }
LocOp 036633:
  TraceOperation 036633 (Call (Floc 036946) [Var (Local 4)] Sp);
  PushFrame 036633;
  SetLocal 1 GetLocal(4);
  JumpCall: 036946, #actuals: 1
LocReturn 036633:
  PushStack call_result;
  TraceOperation 036639 (Jz (Var Sp) (Branch T (Dloc 036670)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 036670
  } else {
    TraceOperation 036642 (Get_parent (Var (Local 4)) Sp);
    Let b2 = M[Offset(Offset(000741,Mul(GetLocal(4),9)),4)];
    PushStack Widen(b2);
    TraceOperation 036645 (Get_prop (Var Sp) (Con 9) Sp);
    PopStack popped3;
    Let b4 = M[Offset(Offset(000741,Mul(popped3,9)),7)];
    Let b5 = M[Offset(Offset(Offset(000741,Mul(popped3,9)),7),1)];
    Let b6 = M[Address(MakeHiLo(b4,b5))];
    Error: getPropsA
  }
LocReturn 036656:
  PushStack call_result;
  TraceOperation 036664 (Jz (Var Sp) (Branch T (Dloc 036670)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 036670
  } else {
    TraceOperation 036667 (Store (Con 5) (Con 0));
    SetLocal 5 0;
    Jump: 036670
  }
LocOp 036670:
  TraceOperation 036670 (Get_sibling (Var (Local 4)) (Local 4) (Branch T (Dloc 036674)));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(4),9)),5)];
  SetLocal 4 Widen(b1);
  if (IsZero(Widen(b1))) {
    TraceOperation 036674 (Jump 036584);
    Jump: 036584
  } else {
    TraceOperation 036674 (Jump 036584);
    Jump: 036584
  }
LocOp 036677:
  TraceOperation 036677 (Get_child (Var (Local 1)) (Local 4) (Branch T (Dloc 036681)));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),6)];
  SetLocal 4 Widen(b1);
  if (IsZero(Widen(b1))) {
    Jump: 036681
  } else {
    Jump: 036681
  }
LocOp 036681:
  TraceOperation 036681 (Jz (Var (Local 4)) (Branch F (Dloc 036710)));
  if (IsZero(GetLocal(4))) {
    TraceOperation 036684 (Jz (Var (Local 9)) (Branch T (Dloc 036816)));
    if (IsZero(GetLocal(9))) {
      Jump: 036816
    } else {
      TraceOperation 036688 (Jz (Var (Local 7)) (Branch T (Dloc 036816)));
      if (IsZero(GetLocal(7))) {
        Jump: 036816
      } else {
        TraceOperation 036692 (Get_child (Var (Local 7)) Sp (Branch F (Dloc 036816)));
        Let b1 = M[Offset(Offset(000741,Mul(GetLocal(7),9)),6)];
        PushStack Widen(b1);
        if (IsZero(Widen(b1))) {
          Jump: 036816
        } else {
          TraceOperation 036697 (Inc (Con 3));
          SetLocal 3 Add(GetLocal(3),1);
          TraceOperation 036699 (Call (Floc 036522) [Var (Local 7),Var (Local 2),Var (Local 3)] Sp);
          PushFrame 036699;
          SetLocal 1 GetLocal(7);
          SetLocal 2 GetLocal(2);
          SetLocal 3 GetLocal(3);
          JumpCall: 036522, #actuals: 3
        }
      }
    }
  } else {
    Jump: 036710
  }
LocReturn 036699:
  PushStack call_result;
  TraceOperation 036707 (Jump 036816);
  Jump: 036816
LocOp 036710:
  TraceOperation 036710 (Je [Var (Local 4),Var (Local 7),Con 4] (Branch F (Dloc 036719)));
  if (LogOr(Equal(GetLocal(4),GetLocal(7)),Equal(GetLocal(4),4))) {
    TraceOperation 036716 (Jump 036809);
    Jump: 036809
  } else {
    Jump: 036719
  }
LocOp 036719:
  TraceOperation 036719 (Test_attr (Var (Local 4)) (Con 7) (Branch T (Dloc 036809)));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(4),9)),0)];
  if (TestBit(b1,0)) {
    Jump: 036809
  } else {
    TraceOperation 036724 (Jz (Var (Local 10)) (Branch F (Dloc 036739)));
    if (IsZero(GetLocal(10))) {
      TraceOperation 036727 (Test_attr (Var (Local 4)) (Con 3) (Branch T (Dloc 036739)));
      Let b2 = M[Offset(Offset(000741,Mul(GetLocal(4),9)),0)];
      if (TestBit(b2,4)) {
        Jump: 036739
      } else {
        TraceOperation 036731 (Get_prop (Var (Local 4)) (Con 14) Sp);
        Let b3 = M[Offset(Offset(000741,Mul(GetLocal(4),9)),7)];
        Let b4 = M[Offset(Offset(Offset(000741,Mul(GetLocal(4),9)),7),1)];
        Let b5 = M[Address(MakeHiLo(b3,b4))];
        Error: getPropsA
      }
    } else {
      Jump: 036739
    }
  }
LocOp 036739:
  TraceOperation 036739 (Test_attr (Var (Local 4)) (Con 14) (Branch T (Dloc 036786)));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(4),9)),1)];
  if (TestBit(b1,1)) {
    Jump: 036786
  } else {
    TraceOperation 036743 (Jz (Var (Local 5)) (Branch T (Dloc 036768)));
    if (IsZero(GetLocal(5))) {
      Jump: 036768
    } else {
      TraceOperation 036746 (Call (Floc 036824) [Var (Local 1),Var (Local 3)] Sp);
      PushFrame 036746;
      SetLocal 1 GetLocal(1);
      SetLocal 2 GetLocal(3);
      JumpCall: 036824, #actuals: 2
    }
  }
LocReturn 036746:
  PushStack call_result;
  TraceOperation 036753 (Jz (Var Sp) (Branch T (Dloc 036763)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 036763
  } else {
    TraceOperation 036756 (Jl (Var (Local 3)) (Con 0) (Branch F (Dloc 036763)));
    if (LessThan(GetLocal(3),0)) {
      TraceOperation 036760 (Store (Con 3) (Con 0));
      SetLocal 3 0;
      Jump: 036763
    } else {
      Jump: 036763
    }
  }
LocOp 036763:
  TraceOperation 036763 (Inc (Con 3));
  SetLocal 3 Add(GetLocal(3),1);
  TraceOperation 036765 (Store (Con 5) (Con 0));
  SetLocal 5 0;
  Jump: 036768
LocOp 036768:
  TraceOperation 036768 (Jl (Var (Local 3)) (Con 0) (Branch F (Dloc 036775)));
  if (LessThan(GetLocal(3),0)) {
    TraceOperation 036772 (Store (Con 3) (Con 0));
    SetLocal 3 0;
    Jump: 036775
  } else {
    Jump: 036775
  }
LocOp 036775:
  TraceOperation 036775 (Call (Floc 036242) [Var (Local 4),Var (Local 2),Var (Local 3)] Sp);
  PushFrame 036775;
  SetLocal 1 GetLocal(4);
  SetLocal 2 GetLocal(2);
  SetLocal 3 GetLocal(3);
  JumpCall: 036242, #actuals: 3
LocReturn 036775:
  PushStack call_result;
  TraceOperation 036783 (Jump 036809);
  Jump: 036809
LocOp 036786:
  TraceOperation 036786 (Get_child (Var (Local 4)) Sp (Branch F (Dloc 036809)));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(4),9)),6)];
  PushStack Widen(b1);
  if (IsZero(Widen(b1))) {
    Jump: 036809
  } else {
    TraceOperation 036790 (Call (Floc 036946) [Var (Local 4)] Sp);
    PushFrame 036790;
    SetLocal 1 GetLocal(4);
    JumpCall: 036946, #actuals: 1
  }
LocReturn 036790:
  PushStack call_result;
  TraceOperation 036796 (Jz (Var Sp) (Branch T (Dloc 036809)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 036809
  } else {
    TraceOperation 036799 (Inc (Con 3));
    SetLocal 3 Add(GetLocal(3),1);
    TraceOperation 036801 (Call (Floc 036522) [Var (Local 4),Var (Local 2),Var (Local 3)] Sp);
    PushFrame 036801;
    SetLocal 1 GetLocal(4);
    SetLocal 2 GetLocal(2);
    SetLocal 3 GetLocal(3);
    JumpCall: 036522, #actuals: 3
  }
LocReturn 036801:
  PushStack call_result;
  Jump: 036809
LocOp 036809:
  TraceOperation 036809 (Get_sibling (Var (Local 4)) (Local 4) (Branch T (Dloc 036813)));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(4),9)),5)];
  SetLocal 4 Widen(b1);
  if (IsZero(Widen(b1))) {
    TraceOperation 036813 (Jump 036681);
    Jump: 036681
  } else {
    TraceOperation 036813 (Jump 036681);
    Jump: 036681
  }
LocOp 036816:
  TraceOperation 036816 (Jz (Var (Local 5)) (Branch T Dtrue));
  if (IsZero(GetLocal(5))) {
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 1
  } else {
    TraceOperation 036819 (Jz (Var (Local 6)) (Branch T Dtrue));
    if (IsZero(GetLocal(6))) {
      PopFrame return_address_2;
      JumpReturn: return_address_2, result: 1
    } else {
      TraceOperation 036822 Rfalse;
      PopFrame return_address_3;
      JumpReturn: return_address_3, result: 0
    }
  }
--[262]--------------------------------------------------
LocRoutine 036824:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 036829
LocOp 036829:
  TraceOperation 036829 (Je [Var (Local 1),Con 194] (Branch F (Dloc 036860)));
  if (Equal(GetLocal(1),194)) {
    TraceOperation 036833 (Print_ret "Your collection of treasures consists of:");
    GamePrint "Your collection of treasures consists of:\n";
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 1
  } else {
    Jump: 036860
  }
LocOp 036860:
  TraceOperation 036860 (Je [Var (Local 1),Var (Global 111)] (Branch F (Dloc 036875)));
  Let b1 = M[009039];
  Let b2 = M[009040];
  if (Equal(GetLocal(1),MakeHiLo(b1,b2))) {
    TraceOperation 036864 (Print_ret "You are carrying:");
    GamePrint "You are carrying:\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 036875
  }
LocOp 036875:
  TraceOperation 036875 (Jin (Var (Local 1)) (Con 82) (Branch T Dfalse));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),4)];
  if (Equal(82,Widen(b1))) {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  } else {
    TraceOperation 036879 (Jg (Var (Local 2)) (Con 0) (Branch F (Dloc 036889)));
    if (GreaterThan(GetLocal(2),0)) {
      TraceOperation 036883 (Loadw (Var (Global 57)) (Var (Local 2)) Sp);
      Let b3 = M[008931];
      Let b4 = M[008932];
      Let b5 = M[Offset(Address(MakeHiLo(b3,b4)),Mul(2,GetLocal(2)))];
      Let b6 = M[Offset(Offset(Address(MakeHiLo(b3,b4)),Mul(2,GetLocal(2))),1)];
      PushStack MakeHiLo(b5,b6);
      TraceOperation 036887 (Print_paddr (Var Sp));
      PopStack popped7;
      GamePrint GetText(PackedAddress Z3(popped7));
      Jump: 036889
    } else {
      Jump: 036889
    }
  }
LocOp 036889:
  TraceOperation 036889 (Test_attr (Var (Local 1)) (Con 10) (Branch F (Dloc 036911)));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),1)];
  if (TestBit(b1,5)) {
    TraceOperation 036893 (Print "Sitting on the ");
    GamePrint "Sitting on the ";
    TraceOperation 036904 (Print_obj (Var (Local 1)));
    Let b2 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),7)];
    Let b3 = M[Offset(Offset(Offset(000741,Mul(GetLocal(1),9)),7),1)];
    Let b4 = M[Address(MakeHiLo(b2,b3))];
    if (IsZeroByte(b4)) {
      GamePrint "";
      TraceOperation 036906 (Print_ret " is: ");
      GamePrint " is: \n";
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b2,b3)),1));
      TraceOperation 036906 (Print_ret " is: ");
      GamePrint " is: \n";
      PopFrame return_address_6;
      JumpReturn: return_address_6, result: 1
    }
  } else {
    Jump: 036911
  }
LocOp 036911:
  TraceOperation 036911 (Test_attr (Var (Local 1)) (Con 30) (Branch F (Dloc 036931)));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),3)];
  if (TestBit(b1,1)) {
    TraceOperation 036915 (Print "The ");
    GamePrint "The ";
    TraceOperation 036918 (Print_obj (Var (Local 1)));
    Let b2 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),7)];
    Let b3 = M[Offset(Offset(Offset(000741,Mul(GetLocal(1),9)),7),1)];
    Let b4 = M[Address(MakeHiLo(b2,b3))];
    if (IsZeroByte(b4)) {
      GamePrint "";
      TraceOperation 036920 (Print_ret " is holding: ");
      GamePrint " is holding: \n";
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b2,b3)),1));
      TraceOperation 036920 (Print_ret " is holding: ");
      GamePrint " is holding: \n";
      PopFrame return_address_6;
      JumpReturn: return_address_6, result: 1
    }
  } else {
    Jump: 036931
  }
LocOp 036931:
  TraceOperation 036931 (Print "The ");
  GamePrint "The ";
  TraceOperation 036934 (Print_obj (Var (Local 1)));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),7)];
  Let b2 = M[Offset(Offset(Offset(000741,Mul(GetLocal(1),9)),7),1)];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  if (IsZeroByte(b3)) {
    GamePrint "";
    TraceOperation 036936 (Print_ret " contains:");
    GamePrint " contains:\n";
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
    TraceOperation 036936 (Print_ret " contains:");
    GamePrint " contains:\n";
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  }
--[263]--------------------------------------------------
LocRoutine 036946:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 036949
LocOp 036949:
  TraceOperation 036949 (Test_attr (Var (Local 1)) (Con 7) (Branch T Dfalse));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),0)];
  if (TestBit(b1,0)) {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  } else {
    TraceOperation 036953 (Test_attr (Var (Local 1)) (Con 12) (Branch T Dtrue));
    Let b3 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),1)];
    if (TestBit(b3,3)) {
      PopFrame return_address_4;
      JumpReturn: return_address_4, result: 1
    } else {
      TraceOperation 036957 (Test_attr (Var (Local 1)) (Con 11) (Branch T Dtrue));
      Let b5 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),1)];
      if (TestBit(b5,4)) {
        PopFrame return_address_6;
        JumpReturn: return_address_6, result: 1
      } else {
        TraceOperation 036961 Rfalse;
        PopFrame return_address_7;
        JumpReturn: return_address_7, result: 0
      }
    }
  }
--[264]--------------------------------------------------
LocRoutine 036962:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 036965
LocOp 036965:
  TraceOperation 036965 (Add (Var (Global 63)) (Var (Local 1)) (Global 63));
  Let b1 = M[008943];
  Let b2 = M[008944];
  SetByte 008943 HiByte(Add(MakeHiLo(b1,b2),GetLocal(1)));
  SetByte 008944 LoByte(Add(MakeHiLo(b1,b2),GetLocal(1)));
  TraceOperation 036969 (Add (Var (Global 1)) (Var (Local 1)) (Global 1));
  Let b3 = M[008819];
  Let b4 = M[008820];
  SetByte 008819 HiByte(Add(MakeHiLo(b3,b4),GetLocal(1)));
  SetByte 008820 LoByte(Add(MakeHiLo(b3,b4),GetLocal(1)));
  TraceOperation 036973 (Je [Var (Global 1),Con 350] (Branch F Dtrue));
  Let b5 = M[008819];
  Let b6 = M[008820];
  if (Equal(MakeHiLo(b5,b6),350)) {
    TraceOperation 036979 (Jz (Var (Global 140)) (Branch F Dtrue));
    Let b7 = M[009097];
    Let b8 = M[009098];
    if (IsZero(MakeHiLo(b7,b8))) {
      TraceOperation 036982 (Store (Con 156) (Con 1));
      SetByte 009097 0;
      SetByte 009098 1;
      TraceOperation 036985 (Clear_attr (Con 109) (Con 7));
      Let b9 = M[001722];
      SetByte 001722 ClearBit(b9,0);
      TraceOperation 036988 (Clear_attr (Con 180) (Con 3));
      Let b10 = M[002361];
      SetByte 002361 ClearBit(b10,4);
      TraceOperation 036991 (Print_ret "An almost inaudible voice whispers in your ear, \"Look to your treasures for the final secret.\"");
      GamePrint "An almost inaudible voice whispers in your ear, \"Look to your treasures for the final secret.\"\n";
      PopFrame return_address_11;
      JumpReturn: return_address_11, result: 1
    } else {
      PopFrame return_address_12;
      JumpReturn: return_address_12, result: 1
    }
  } else {
    PopFrame return_address_13;
    JumpReturn: return_address_13, result: 1
  }
--[265]--------------------------------------------------
LocRoutine 037050:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 037055
LocOp 037055:
  TraceOperation 037055 (Get_prop (Var (Local 1)) (Con 13) (Local 2));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),7)];
  Let b2 = M[Offset(Offset(Offset(000741,Mul(GetLocal(1),9)),7),1)];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Error: getPropsA
LocReturn 037063:
  PushStack call_result;
  TraceOperation 037069 (Put_prop (Var (Local 1)) (Con 13) (Con 0));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),7)];
  Let b2 = M[Offset(Offset(Offset(000741,Mul(GetLocal(1),9)),7),1)];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Error: getPropsA
--[266]--------------------------------------------------
LocRoutine 037076:
  MakeRoutineFrame 0;
  Jump: 037077
LocOp 037077:
  TraceOperation 037077 (Call (Floc 066946) [] Sp);
  PushFrame 037077;
  JumpCall: 066946, #actuals: 0
LocReturn 037077:
  PushStack call_result;
  TraceOperation 037082 Quit;
  Quit
--[267]--------------------------------------------------
LocRoutine 037084:
  MakeRoutineFrame 0;
  Jump: 037085
LocOp 037085:
  TraceOperation 037085 (Print ">");
  GamePrint ">";
  TraceOperation 037090 (Sread (Var (Global 109)) (Var (Global 110)));
  Let b1 = M[008817];
  Let b2 = M[008818];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  if (IsZeroByte(b5)) {
    Let b6 = M[008819];
    Let b7 = M[008820];
    Let b8 = M[008821];
    Let b9 = M[008822];
    ReadInputFromUser (Just (StatusInfo {room = "", score = MakeHiLo(b6,b7), turns = MakeHiLo(b8,b9)})) user_command_line_10;
    Let b11 = M[009035];
    Let b12 = M[009036];
    Let b13 = M[009037];
    Let b14 = M[009038];
    Tokenize user_command_line_10 (num_tokens_15,position_words_16,canonicalized17);
    StringBytes canonicalized17 string_bytes_18;
    ForeachB: (index19,byte20) in (string_bytes_18) {
      SetByte Offset(Offset(Address(MakeHiLo(b11,b12)),1),index19) byte20;
    }
    SetByte Offset(Address(MakeHiLo(b13,b14)),1) num_tokens_15;
    ForeachB: (index21,pos22,word23) in (position_words_16) {
      Let lookee24 = LookupInDict(word23);
      SetByte Offset(Offset(Offset(Address(MakeHiLo(b13,b14)),2),Mul(4,index21)),0) HiByte(DeAddress(lookee24));
      SetByte Offset(Offset(Offset(Address(MakeHiLo(b13,b14)),2),Mul(4,index21)),1) LoByte(DeAddress(lookee24));
      SetByte Offset(Offset(Offset(Address(MakeHiLo(b13,b14)),2),Mul(4,index21)),2) StringLength(word23);
      SetByte Offset(Offset(Offset(Address(MakeHiLo(b13,b14)),2),Mul(4,index21)),3) pos22;
    }
    TraceOperation 037094 (Loadw (Var (Global 110)) (Con 1) Sp);
    Let b25 = M[009037];
    Let b26 = M[009038];
    Let b27 = M[Offset(Address(MakeHiLo(b25,b26)),2)];
    Let b28 = M[Offset(Offset(Address(MakeHiLo(b25,b26)),2),1)];
    PushStack MakeHiLo(b27,b28);
    TraceOperation 037098 (Je [Var Sp,Con 19988,Con 19960] (Branch F Dfalse));
    PopStack popped29;
    if (LogOr(Equal(popped29,19988),Equal(popped29,19960))) {
      TraceOperation 037106 Rtrue;
      PopFrame return_address_30;
      JumpReturn: return_address_30, result: 1
    } else {
      PopFrame return_address_31;
      JumpReturn: return_address_31, result: 0
    }
  } else {
    Let b32 = M[008819];
    Let b33 = M[008820];
    Let b34 = M[008821];
    Let b35 = M[008822];
    ReadInputFromUser (Just (StatusInfo {room = GetText(Offset(Address(MakeHiLo(b3,b4)),1)), score = MakeHiLo(b32,b33), turns = MakeHiLo(b34,b35)})) user_command_line_36;
    Let b37 = M[009035];
    Let b38 = M[009036];
    Let b39 = M[009037];
    Let b40 = M[009038];
    Tokenize user_command_line_36 (num_tokens_41,position_words_42,canonicalized43);
    StringBytes canonicalized43 string_bytes_44;
    ForeachB: (index45,byte46) in (string_bytes_44) {
      SetByte Offset(Offset(Address(MakeHiLo(b37,b38)),1),index45) byte46;
    }
    SetByte Offset(Address(MakeHiLo(b39,b40)),1) num_tokens_41;
    ForeachB: (index47,pos48,word49) in (position_words_42) {
      Let lookee50 = LookupInDict(word49);
      SetByte Offset(Offset(Offset(Address(MakeHiLo(b39,b40)),2),Mul(4,index47)),0) HiByte(DeAddress(lookee50));
      SetByte Offset(Offset(Offset(Address(MakeHiLo(b39,b40)),2),Mul(4,index47)),1) LoByte(DeAddress(lookee50));
      SetByte Offset(Offset(Offset(Address(MakeHiLo(b39,b40)),2),Mul(4,index47)),2) StringLength(word49);
      SetByte Offset(Offset(Offset(Address(MakeHiLo(b39,b40)),2),Mul(4,index47)),3) pos48;
    }
    TraceOperation 037094 (Loadw (Var (Global 110)) (Con 1) Sp);
    Let b51 = M[009037];
    Let b52 = M[009038];
    Let b53 = M[Offset(Address(MakeHiLo(b51,b52)),2)];
    Let b54 = M[Offset(Offset(Address(MakeHiLo(b51,b52)),2),1)];
    PushStack MakeHiLo(b53,b54);
    TraceOperation 037098 (Je [Var Sp,Con 19988,Con 19960] (Branch F Dfalse));
    PopStack popped55;
    if (LogOr(Equal(popped55,19988),Equal(popped55,19960))) {
      TraceOperation 037106 Rtrue;
      PopFrame return_address_56;
      JumpReturn: return_address_56, result: 1
    } else {
      PopFrame return_address_57;
      JumpReturn: return_address_57, result: 0
    }
  }
--[268]--------------------------------------------------
LocRoutine 037108:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 1;
        }
      }
    }
  }
  Jump: 037117
LocOp 037117:
  TraceOperation 037117 (Jz (Var (Global 62)) (Branch T (Dloc 037144)));
  Let b1 = M[008941];
  Let b2 = M[008942];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 037144
  } else {
    TraceOperation 037120 (Jz (Var (Local 1)) (Branch T Dfalse));
    if (IsZero(GetLocal(1))) {
      PopFrame return_address_3;
      JumpReturn: return_address_3, result: 0
    } else {
      TraceOperation 037123 (Print "Your hand passes through its object.");
      GamePrint "Your hand passes through its object.";
      TraceOperation 037142 New_line;
      GamePrint "\n";
      TraceOperation 037143 Rfalse;
      PopFrame return_address_4;
      JumpReturn: return_address_4, result: 0
    }
  }
LocOp 037144:
  TraceOperation 037144 (Test_attr (Var (Global 118)) (Con 17) (Branch T (Dloc 037161)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),2)];
  if (TestBit(b3,6)) {
    Jump: 037161
  } else {
    TraceOperation 037148 (Jz (Var (Local 1)) (Branch T Dfalse));
    if (IsZero(GetLocal(1))) {
      PopFrame return_address_4;
      JumpReturn: return_address_4, result: 0
    } else {
      TraceOperation 037151 (Call (Floc 020076) [Var (Global 53)] Sp);
      Let b5 = M[008923];
      Let b6 = M[008924];
      PushFrame 037151;
      SetLocal 1 MakeHiLo(b5,b6);
      JumpCall: 020076, #actuals: 1
    }
  }
LocReturn 037151:
  PushStack call_result;
  TraceOperation 037157 (Print_paddr (Var Sp));
  PopStack popped1;
  GamePrint GetText(PackedAddress Z3(popped1));
  TraceOperation 037159 New_line;
  GamePrint "\n";
  TraceOperation 037160 Rfalse;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: 0
LocOp 037161:
  TraceOperation 037161 (Call (Floc 020688) [] Sp);
  PushFrame 037161;
  JumpCall: 020688, #actuals: 0
LocReturn 037161:
  PushStack call_result;
  TraceOperation 037166 (Jz (Var Sp) (Branch F Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 037169 (Get_parent (Var (Global 118)) Sp);
    Let b2 = M[009053];
    Let b3 = M[009054];
    Let b4 = M[Offset(Offset(000741,Mul(MakeHiLo(b2,b3),9)),4)];
    PushStack Widen(b4);
    TraceOperation 037172 (Test_attr (Var Sp) (Con 19) (Branch F (Dloc 037183)));
    PopStack popped5;
    Let b6 = M[Offset(Offset(000741,Mul(popped5,9)),2)];
    if (TestBit(b6,4)) {
      TraceOperation 037176 (Get_parent (Var (Global 118)) Sp);
      Let b7 = M[009053];
      Let b8 = M[009054];
      Let b9 = M[Offset(Offset(000741,Mul(MakeHiLo(b7,b8),9)),4)];
      PushStack Widen(b9);
      TraceOperation 037179 (Test_attr (Var Sp) (Con 11) (Branch F Dfalse));
      PopStack popped10;
      Let b11 = M[Offset(Offset(000741,Mul(popped10,9)),1)];
      if (TestBit(b11,4)) {
        Jump: 037183
      } else {
        PopFrame return_address_12;
        JumpReturn: return_address_12, result: 0
      }
    } else {
      Jump: 037183
    }
  } else {
    PopFrame return_address_13;
    JumpReturn: return_address_13, result: 0
  }
LocOp 037183:
  TraceOperation 037183 (Get_parent (Var (Global 118)) Sp);
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),4)];
  PushStack Widen(b3);
  TraceOperation 037186 (Jin (Var Sp) (Var (Global 111)) (Branch T (Dloc 037265)));
  PopStack popped4;
  Let b5 = M[009039];
  Let b6 = M[009040];
  Let b7 = M[Offset(Offset(000741,Mul(popped4,9)),4)];
  if (Equal(MakeHiLo(b5,b6),Widen(b7))) {
    Jump: 037265
  } else {
    TraceOperation 037191 (Call (Floc 037420) [Var (Global 118)] (Local 4));
    Let b8 = M[009053];
    Let b9 = M[009054];
    PushFrame 037191;
    SetLocal 1 MakeHiLo(b8,b9);
    JumpCall: 037420, #actuals: 1
  }
LocReturn 037191:
  SetLocal 4 call_result;
  TraceOperation 037197 (Call (Floc 037420) [Var (Global 111)] Sp);
  Let b1 = M[009039];
  Let b2 = M[009040];
  PushFrame 037197;
  SetLocal 1 MakeHiLo(b1,b2);
  JumpCall: 037420, #actuals: 1
LocReturn 037197:
  PushStack call_result;
  TraceOperation 037203 (Add (Var (Local 4)) (Var Sp) Sp);
  PopStack popped1;
  PushStack Add(GetLocal(4),popped1);
  TraceOperation 037207 (Jg (Var Sp) (Var (Global 133)) (Branch F (Dloc 037265)));
  PopStack popped2;
  Let b3 = M[009083];
  Let b4 = M[009084];
  if (GreaterThan(popped2,MakeHiLo(b3,b4))) {
    TraceOperation 037211 (Jz (Var (Local 1)) (Branch T (Dloc 037263)));
    if (IsZero(GetLocal(1))) {
      Jump: 037263
    } else {
      TraceOperation 037214 (Print "Your load is too heavy");
      GamePrint "Your load is too heavy";
      TraceOperation 037227 (Jl (Var (Global 133)) (Var (Global 134)) (Branch F (Dloc 037259)));
      Let b5 = M[009083];
      Let b6 = M[009084];
      Let b7 = M[009085];
      Let b8 = M[009086];
      if (LessThan(MakeHiLo(b5,b6),MakeHiLo(b7,b8))) {
        TraceOperation 037231 (Print ", especially in light of your condition.");
        GamePrint ", especially in light of your condition.";
        TraceOperation 037256 (Jump 037262);
        Jump: 037262
      } else {
        Jump: 037259
      }
    }
  } else {
    Jump: 037265
  }
LocOp 037259:
  TraceOperation 037259 (Print ".");
  GamePrint ".";
  Jump: 037262
LocOp 037262:
  TraceOperation 037262 New_line;
  GamePrint "\n";
  Jump: 037263
LocOp 037263:
  TraceOperation 037263 (Ret (Con 2));
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 2
LocOp 037265:
  TraceOperation 037265 (Je [Var (Global 120),Con 93] (Branch F (Dloc 037316)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),93)) {
    TraceOperation 037269 (Call (Floc 037396) [Var (Global 111)] (Local 2));
    Let b3 = M[009039];
    Let b4 = M[009040];
    PushFrame 037269;
    SetLocal 1 MakeHiLo(b3,b4);
    JumpCall: 037396, #actuals: 1
  } else {
    Jump: 037316
  }
LocReturn 037269:
  SetLocal 2 call_result;
  TraceOperation 037275 (Jg (Var (Local 2)) (Var (Global 59)) (Branch F (Dloc 037316)));
  Let b1 = M[008935];
  Let b2 = M[008936];
  if (GreaterThan(GetLocal(2),MakeHiLo(b1,b2))) {
    TraceOperation 037279 (Mul (Var (Local 2)) (Var (Global 58)) (Local 4));
    Let b3 = M[008933];
    Let b4 = M[008934];
    SetLocal 4 Mul(GetLocal(2),MakeHiLo(b3,b4));
    TraceOperation 037283 (Random (Con 100) Sp);
    LetRandom random5 100;
    PushStack random5;
    TraceOperation 037287 (Jg (Var (Local 4)) (Var Sp) (Branch F (Dloc 037316)));
    PopStack popped6;
    if (GreaterThan(GetLocal(4),popped6)) {
      TraceOperation 037291 (Print "You're holding too many things already!");
      GamePrint "You're holding too many things already!";
      TraceOperation 037314 New_line;
      GamePrint "\n";
      TraceOperation 037315 Rfalse;
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 0
    } else {
      Jump: 037316
    }
  } else {
    Jump: 037316
  }
LocOp 037316:
  TraceOperation 037316 (Insert_obj (Var (Global 118)) (Var (Global 111)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[009039];
  Let b4 = M[009040];
  Let b5 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),4)];
  if (IsZero(Widen(b5))) {
    SetByte Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),4) b4;
    Let b6 = M[Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),6)];
    SetByte Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),5) LoByte(Widen(b6));
    SetByte Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),6) b2;
    TraceOperation 037319 (Set_attr (Var (Global 118)) (Con 3));
    Let b7 = M[009053];
    Let b8 = M[009054];
    Let b9 = M[Offset(Offset(000741,Mul(MakeHiLo(b7,b8),9)),0)];
    SetByte Offset(Offset(000741,Mul(MakeHiLo(b7,b8),9)),0) SetBit(b9,4);
    TraceOperation 037322 (Call (Floc 020688) [] Sp);
    PushFrame 037322;
    JumpCall: 020688, #actuals: 0
  } else {
    Let b10 = M[Offset(Offset(000741,Mul(Widen(b5),9)),6)];
    if (Equal(Widen(b10),MakeHiLo(b1,b2))) {
      Let b11 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),5)];
      SetByte Offset(Offset(000741,Mul(Widen(b5),9)),6) LoByte(Widen(b11));
      SetByte Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),4) b4;
      Let b12 = M[Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),6)];
      SetByte Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),5) LoByte(Widen(b12));
      SetByte Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),6) b2;
      TraceOperation 037319 (Set_attr (Var (Global 118)) (Con 3));
      Let b13 = M[009053];
      Let b14 = M[009054];
      Let b15 = M[Offset(Offset(000741,Mul(MakeHiLo(b13,b14),9)),0)];
      SetByte Offset(Offset(000741,Mul(MakeHiLo(b13,b14),9)),0) SetBit(b15,4);
      TraceOperation 037322 (Call (Floc 020688) [] Sp);
      PushFrame 037322;
      JumpCall: 020688, #actuals: 0
    } else {
      Error: unlink/loop
    }
  }
LocReturn 037322:
  PushStack call_result;
  TraceOperation 037327 (Call (Floc 037050) [Var (Global 118)] Sp);
  Let b1 = M[009053];
  Let b2 = M[009054];
  PushFrame 037327;
  SetLocal 1 MakeHiLo(b1,b2);
  JumpCall: 037050, #actuals: 1
LocReturn 037327:
  PushStack call_result;
  TraceOperation 037333 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[269]--------------------------------------------------
LocRoutine 037334:
  MakeRoutineFrame 0;
  Jump: 037335
LocOp 037335:
  TraceOperation 037335 (Jin (Var (Global 118)) (Var (Global 111)) (Branch T (Dloc 037364)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[009039];
  Let b4 = M[009040];
  Let b5 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),4)];
  if (Equal(MakeHiLo(b3,b4),Widen(b5))) {
    Jump: 037364
  } else {
    TraceOperation 037339 (Get_parent (Var (Global 118)) Sp);
    Let b6 = M[009053];
    Let b7 = M[009054];
    Let b8 = M[Offset(Offset(000741,Mul(MakeHiLo(b6,b7),9)),4)];
    PushStack Widen(b8);
    TraceOperation 037342 (Jin (Var Sp) (Var (Global 111)) (Branch T (Dloc 037364)));
    PopStack popped9;
    Let b10 = M[009039];
    Let b11 = M[009040];
    Let b12 = M[Offset(Offset(000741,Mul(popped9,9)),4)];
    if (Equal(MakeHiLo(b10,b11),Widen(b12))) {
      Jump: 037364
    } else {
      TraceOperation 037346 (Print "You're not carrying the ");
      GamePrint "You're not carrying the ";
      TraceOperation 037357 (Print_obj (Var (Global 118)));
      Let b13 = M[009053];
      Let b14 = M[009054];
      Let b15 = M[Offset(Offset(000741,Mul(MakeHiLo(b13,b14),9)),7)];
      Let b16 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b13,b14),9)),7),1)];
      Let b17 = M[Address(MakeHiLo(b15,b16))];
      if (IsZeroByte(b17)) {
        GamePrint "";
        TraceOperation 037359 (Print ".");
        GamePrint ".";
        TraceOperation 037362 New_line;
        GamePrint "\n";
        TraceOperation 037363 Rfalse;
        PopFrame return_address_18;
        JumpReturn: return_address_18, result: 0
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b15,b16)),1));
        TraceOperation 037359 (Print ".");
        GamePrint ".";
        TraceOperation 037362 New_line;
        GamePrint "\n";
        TraceOperation 037363 Rfalse;
        PopFrame return_address_19;
        JumpReturn: return_address_19, result: 0
      }
    }
  }
--[270]--------------------------------------------------
LocRoutine 037370:
  MakeRoutineFrame 0;
  Jump: 037371
LocOp 037371:
  TraceOperation 037371 (Test_attr (Var Sp) (Con 11) (Branch T (Dloc 037389)));
  PopStack popped1;
  Let b2 = M[Offset(Offset(000741,Mul(popped1,9)),1)];
  if (TestBit(b2,4)) {
    Jump: 037389
  } else {
    TraceOperation 037375 (Print "The ");
    GamePrint "The ";
    TraceOperation 037378 (Print_obj (Var (Global 118)));
    Let b3 = M[009053];
    Let b4 = M[009054];
    Let b5 = M[Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),7)];
    Let b6 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),7),1)];
    Let b7 = M[Address(MakeHiLo(b5,b6))];
    if (IsZeroByte(b7)) {
      GamePrint "";
      TraceOperation 037380 (Print " is closed.");
      GamePrint " is closed.";
      TraceOperation 037387 New_line;
      GamePrint "\n";
      TraceOperation 037388 Rfalse;
      PopFrame return_address_8;
      JumpReturn: return_address_8, result: 0
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b5,b6)),1));
      TraceOperation 037380 (Print " is closed.");
      GamePrint " is closed.";
      TraceOperation 037387 New_line;
      GamePrint "\n";
      TraceOperation 037388 Rfalse;
      PopFrame return_address_9;
      JumpReturn: return_address_9, result: 0
    }
  }
LocOp 037389:
  TraceOperation 037389 (Get_parent (Var (Global 111)) Sp);
  Let b1 = M[009039];
  Let b2 = M[009040];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),4)];
  PushStack Widen(b3);
  TraceOperation 037392 (Insert_obj (Var (Global 118)) (Var Sp));
  Let b4 = M[009053];
  Let b5 = M[009054];
  PopStack popped6;
  Let b7 = M[Offset(Offset(000741,Mul(MakeHiLo(b4,b5),9)),4)];
  if (IsZero(Widen(b7))) {
    SetByte Offset(Offset(000741,Mul(MakeHiLo(b4,b5),9)),4) LoByte(popped6);
    Let b8 = M[Offset(Offset(000741,Mul(popped6,9)),6)];
    SetByte Offset(Offset(000741,Mul(MakeHiLo(b4,b5),9)),5) LoByte(Widen(b8));
    SetByte Offset(Offset(000741,Mul(popped6,9)),6) b5;
    TraceOperation 037395 Rtrue;
    PopFrame return_address_9;
    JumpReturn: return_address_9, result: 1
  } else {
    Let b10 = M[Offset(Offset(000741,Mul(Widen(b7),9)),6)];
    if (Equal(Widen(b10),MakeHiLo(b4,b5))) {
      Let b11 = M[Offset(Offset(000741,Mul(MakeHiLo(b4,b5),9)),5)];
      SetByte Offset(Offset(000741,Mul(Widen(b7),9)),6) LoByte(Widen(b11));
      SetByte Offset(Offset(000741,Mul(MakeHiLo(b4,b5),9)),4) LoByte(popped6);
      Let b12 = M[Offset(Offset(000741,Mul(popped6,9)),6)];
      SetByte Offset(Offset(000741,Mul(MakeHiLo(b4,b5),9)),5) LoByte(Widen(b12));
      SetByte Offset(Offset(000741,Mul(popped6,9)),6) b5;
      TraceOperation 037395 Rtrue;
      PopFrame return_address_13;
      JumpReturn: return_address_13, result: 1
    } else {
      Error: unlink/loop
    }
  }
--[271]--------------------------------------------------
LocRoutine 037396:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 037403
LocOp 037403:
  TraceOperation 037403 (Get_child (Var (Local 1)) (Local 3) (Branch F (Dloc 037418)));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),6)];
  SetLocal 3 Widen(b1);
  if (IsZero(Widen(b1))) {
    TraceOperation 037418 (Ret (Var (Local 2)));
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: GetLocal(2)
  } else {
    TraceOperation 037407 (Test_attr (Var (Local 3)) (Con 0) (Branch T (Dloc 037413)));
    Let b3 = M[Offset(Offset(000741,Mul(GetLocal(3),9)),0)];
    if (TestBit(b3,7)) {
      Jump: 037413
    } else {
      TraceOperation 037411 (Inc (Con 2));
      SetLocal 2 Add(GetLocal(2),1);
      Jump: 037413
    }
  }
LocOp 037413:
  TraceOperation 037413 (Get_sibling (Var (Local 3)) (Local 3) (Branch T (Dloc 037407)));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(3),9)),5)];
  SetLocal 3 Widen(b1);
  if (IsZero(Widen(b1))) {
    TraceOperation 037418 (Ret (Var (Local 2)));
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: GetLocal(2)
  } else {
    TraceOperation 037407 (Test_attr (Var (Local 3)) (Con 0) (Branch T (Dloc 037413)));
    Let b3 = M[Offset(Offset(000741,Mul(GetLocal(3),9)),0)];
    if (TestBit(b3,7)) {
      Jump: 037413
    } else {
      TraceOperation 037411 (Inc (Con 2));
      SetLocal 2 Add(GetLocal(2),1);
      Jump: 037413
    }
  }
--[272]--------------------------------------------------
LocRoutine 037420:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 037427
LocOp 037427:
  TraceOperation 037427 (Get_child (Var (Local 1)) (Local 2) (Branch F (Dloc 037459)));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),6)];
  SetLocal 2 Widen(b1);
  if (IsZero(Widen(b1))) {
    TraceOperation 037459 (Get_prop (Var (Local 1)) (Con 15) Sp);
    Let b2 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),7)];
    Let b3 = M[Offset(Offset(Offset(000741,Mul(GetLocal(1),9)),7),1)];
    Let b4 = M[Address(MakeHiLo(b2,b3))];
    Error: getPropsA
  } else {
    TraceOperation 037431 (Je [Var (Local 1),Var (Global 128)] (Branch F (Dloc 037444)));
    Let b5 = M[009073];
    Let b6 = M[009074];
    if (Equal(GetLocal(1),MakeHiLo(b5,b6))) {
      TraceOperation 037435 (Test_attr (Var (Local 2)) (Con 0) (Branch F (Dloc 037444)));
      Let b7 = M[Offset(Offset(000741,Mul(GetLocal(2),9)),0)];
      if (TestBit(b7,7)) {
        TraceOperation 037439 (Inc (Con 3));
        SetLocal 3 Add(GetLocal(3),1);
        TraceOperation 037441 (Jump 037454);
        Jump: 037454
      } else {
        Jump: 037444
      }
    } else {
      Jump: 037444
    }
  }
LocOp 037444:
  TraceOperation 037444 (Call (Floc 037420) [Var (Local 2)] Sp);
  PushFrame 037444;
  SetLocal 1 GetLocal(2);
  JumpCall: 037420, #actuals: 1
LocReturn 037444:
  PushStack call_result;
  TraceOperation 037450 (Add (Var (Local 3)) (Var Sp) (Local 3));
  PopStack popped1;
  SetLocal 3 Add(GetLocal(3),popped1);
  Jump: 037454
LocOp 037454:
  TraceOperation 037454 (Get_sibling (Var (Local 2)) (Local 2) (Branch T (Dloc 037431)));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(2),9)),5)];
  SetLocal 2 Widen(b1);
  if (IsZero(Widen(b1))) {
    TraceOperation 037459 (Get_prop (Var (Local 1)) (Con 15) Sp);
    Let b2 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),7)];
    Let b3 = M[Offset(Offset(Offset(000741,Mul(GetLocal(1),9)),7),1)];
    Let b4 = M[Address(MakeHiLo(b2,b3))];
    Error: getPropsA
  } else {
    TraceOperation 037431 (Je [Var (Local 1),Var (Global 128)] (Branch F (Dloc 037444)));
    Let b5 = M[009073];
    Let b6 = M[009074];
    if (Equal(GetLocal(1),MakeHiLo(b5,b6))) {
      TraceOperation 037435 (Test_attr (Var (Local 2)) (Con 0) (Branch F (Dloc 037444)));
      Let b7 = M[Offset(Offset(000741,Mul(GetLocal(2),9)),0)];
      if (TestBit(b7,7)) {
        TraceOperation 037439 (Inc (Con 3));
        SetLocal 3 Add(GetLocal(3),1);
        TraceOperation 037441 (Jump 037454);
        Jump: 037454
      } else {
        Jump: 037444
      }
    } else {
      Jump: 037444
    }
  }
--[273]--------------------------------------------------
LocRoutine 037468:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 037471
LocOp 037471:
  TraceOperation 037471 (Jin (Var (Global 118)) (Con 247) (Branch F (Dloc 037496)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),4)];
  if (Equal(247,Widen(b3))) {
    TraceOperation 037475 (Je [Var (Global 120),Con 84,Con 105,Con 140] (Branch F (Dloc 037496)));
    Let b4 = M[009057];
    Let b5 = M[009058];
    if (LogOr(LogOr(Equal(MakeHiLo(b4,b5),84),Equal(MakeHiLo(b4,b5),105)),Equal(MakeHiLo(b4,b5),140))) {
      TraceOperation 037482 (Print "The ");
      GamePrint "The ";
      TraceOperation 037485 (Print_obj (Var (Global 118)));
      Let b6 = M[009053];
      Let b7 = M[009054];
      Let b8 = M[Offset(Offset(000741,Mul(MakeHiLo(b6,b7),9)),7)];
      Let b9 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b6,b7),9)),7),1)];
      Let b10 = M[Address(MakeHiLo(b8,b9))];
      if (IsZeroByte(b10)) {
        GamePrint "";
        TraceOperation 037487 (Print_ret " isn't here!");
        GamePrint " isn't here!\n";
        PopFrame return_address_11;
        JumpReturn: return_address_11, result: 1
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b8,b9)),1));
        TraceOperation 037487 (Print_ret " isn't here!");
        GamePrint " isn't here!\n";
        PopFrame return_address_12;
        JumpReturn: return_address_12, result: 1
      }
    } else {
      Jump: 037496
    }
  } else {
    Jump: 037496
  }
LocOp 037496:
  TraceOperation 037496 (Print_paddr (Var (Local 1)));
  GamePrint GetText(PackedAddress Z3(GetLocal(1)));
  TraceOperation 037498 (Print_obj (Var (Global 118)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  if (IsZeroByte(b5)) {
    GamePrint "";
    TraceOperation 037500 (Call (Floc 020076) [Var (Global 56)] Sp);
    Let b6 = M[008929];
    Let b7 = M[008930];
    PushFrame 037500;
    SetLocal 1 MakeHiLo(b6,b7);
    JumpCall: 020076, #actuals: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
    TraceOperation 037500 (Call (Floc 020076) [Var (Global 56)] Sp);
    Let b8 = M[008929];
    Let b9 = M[008930];
    PushFrame 037500;
    SetLocal 1 MakeHiLo(b8,b9);
    JumpCall: 020076, #actuals: 1
  }
LocReturn 037500:
  PushStack call_result;
  TraceOperation 037506 (Print_paddr (Var Sp));
  PopStack popped1;
  GamePrint GetText(PackedAddress Z3(popped1));
  TraceOperation 037508 New_line;
  GamePrint "\n";
  TraceOperation 037509 Rtrue;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: 1
--[274]--------------------------------------------------
LocRoutine 037510:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 037515
LocOp 037515:
  TraceOperation 037515 (Jz (Var (Local 1)) (Branch T (Dloc 037537)));
  if (IsZero(GetLocal(1))) {
    Jump: 037537
  } else {
    TraceOperation 037518 (Print "You can't go there in a ");
    GamePrint "You can't go there in a ";
    TraceOperation 037529 (Print_obj (Var (Local 2)));
    Let b1 = M[Offset(Offset(000741,Mul(GetLocal(2),9)),7)];
    Let b2 = M[Offset(Offset(Offset(000741,Mul(GetLocal(2),9)),7),1)];
    Let b3 = M[Address(MakeHiLo(b1,b2))];
    if (IsZeroByte(b3)) {
      GamePrint "";
      TraceOperation 037531 (Print ".");
      GamePrint ".";
      TraceOperation 037534 (Jump 037556);
      Jump: 037556
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
      TraceOperation 037531 (Print ".");
      GamePrint ".";
      TraceOperation 037534 (Jump 037556);
      Jump: 037556
    }
  }
LocOp 037537:
  TraceOperation 037537 (Print "You can't go there without a vehicle.");
  GamePrint "You can't go there without a vehicle.";
  Jump: 037556
LocOp 037556:
  TraceOperation 037556 New_line;
  GamePrint "\n";
  TraceOperation 037557 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[275]--------------------------------------------------
LocRoutine 037558:
  MakeRoutineFrame 6;
  if (LessThanByte(num_actuals,6)) {
    SetLocal 6 0;
    if (LessThanByte(num_actuals,5)) {
      SetLocal 5 0;
      if (LessThanByte(num_actuals,4)) {
        SetLocal 4 0;
        if (LessThanByte(num_actuals,3)) {
          SetLocal 3 0;
          if (LessThanByte(num_actuals,2)) {
            SetLocal 2 1;
            if (LessThanByte(num_actuals,1)) {
              SetLocal 1 0;
            }
          }
        }
      }
    }
  }
  Jump: 037571
LocOp 037571:
  TraceOperation 037571 (Test_attr (Var (Local 1)) (Con 6) (Branch T (Dloc 037581)));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),0)];
  if (TestBit(b1,1)) {
    Jump: 037581
  } else {
    TraceOperation 037575 (Push (Con 0));
    PushStack 0;
    TraceOperation 037578 (Jump 037584);
    Jump: 037584
  }
LocOp 037581:
  TraceOperation 037581 (Push (Con 1));
  PushStack 1;
  Jump: 037584
LocOp 037584:
  TraceOperation 037584 (Store (Con 3) (Var Sp));
  PopStack popped1;
  SetLocal 3 popped1;
  TraceOperation 037587 (Get_parent (Var (Global 111)) (Local 4));
  Let b2 = M[009039];
  Let b3 = M[009040];
  Let b4 = M[Offset(Offset(000741,Mul(MakeHiLo(b2,b3),9)),4)];
  SetLocal 4 Widen(b4);
  TraceOperation 037590 (Store (Con 6) (Var (Global 66)));
  Let b5 = M[008949];
  Let b6 = M[008950];
  SetLocal 6 MakeHiLo(b5,b6);
  TraceOperation 037593 (Test_attr (Var (Local 4)) (Con 27) (Branch F (Dloc 037601)));
  Let b7 = M[Offset(Offset(000741,Mul(GetLocal(4),9)),3)];
  if (TestBit(b7,4)) {
    TraceOperation 037597 (Get_prop (Var (Local 4)) (Con 6) (Local 5));
    Let b8 = M[Offset(Offset(000741,Mul(GetLocal(4),9)),7)];
    Let b9 = M[Offset(Offset(Offset(000741,Mul(GetLocal(4),9)),7),1)];
    Let b10 = M[Address(MakeHiLo(b8,b9))];
    Error: getPropsA
  } else {
    Jump: 037601
  }
LocOp 037601:
  TraceOperation 037601 (Jz (Var (Local 3)) (Branch F (Dloc 037615)));
  if (IsZero(GetLocal(3))) {
    TraceOperation 037604 (Jz (Var (Local 5)) (Branch F (Dloc 037615)));
    if (IsZero(GetLocal(5))) {
      TraceOperation 037607 (Call (Floc 037510) [Var (Local 5),Var (Local 4)] Sp);
      PushFrame 037607;
      SetLocal 1 GetLocal(5);
      SetLocal 2 GetLocal(4);
      JumpCall: 037510, #actuals: 2
    } else {
      Jump: 037615
    }
  } else {
    Jump: 037615
  }
LocReturn 037607:
  PushStack call_result;
  TraceOperation 037614 Rfalse;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 0
LocOp 037615:
  TraceOperation 037615 (Jz (Var (Local 3)) (Branch F (Dloc 037630)));
  if (IsZero(GetLocal(3))) {
    TraceOperation 037618 (Test_attr (Var (Local 1)) (Var (Local 5)) (Branch T (Dloc 037630)));
    Let b1 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),Div8(GetLocal(5)))];
    if (TestBit(b1,SevenMinus(LoByte(Mod(GetLocal(5),8))))) {
      Jump: 037630
    } else {
      TraceOperation 037622 (Call (Floc 037510) [Var (Local 5),Var (Local 4)] Sp);
      PushFrame 037622;
      SetLocal 1 GetLocal(5);
      SetLocal 2 GetLocal(4);
      JumpCall: 037510, #actuals: 2
    }
  } else {
    Jump: 037630
  }
LocReturn 037622:
  PushStack call_result;
  TraceOperation 037629 Rfalse;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 0
LocOp 037630:
  TraceOperation 037630 (Test_attr (Var (Global 0)) (Con 6) (Branch F (Dloc 037656)));
  Let b1 = M[008817];
  Let b2 = M[008818];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),0)];
  if (TestBit(b3,1)) {
    TraceOperation 037634 (Jz (Var (Local 3)) (Branch T (Dloc 037656)));
    if (IsZero(GetLocal(3))) {
      Jump: 037656
    } else {
      TraceOperation 037637 (Jz (Var (Local 5)) (Branch T (Dloc 037656)));
      if (IsZero(GetLocal(5))) {
        Jump: 037656
      } else {
        TraceOperation 037640 (Je [Var (Local 5),Con 6] (Branch T (Dloc 037656)));
        if (Equal(GetLocal(5),6)) {
          Jump: 037656
        } else {
          TraceOperation 037644 (Test_attr (Var (Local 1)) (Var (Local 5)) (Branch T (Dloc 037656)));
          Let b4 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),Div8(GetLocal(5)))];
          if (TestBit(b4,SevenMinus(LoByte(Mod(GetLocal(5),8))))) {
            Jump: 037656
          } else {
            TraceOperation 037648 (Call (Floc 037510) [Var (Local 5),Var (Local 4)] Sp);
            PushFrame 037648;
            SetLocal 1 GetLocal(5);
            SetLocal 2 GetLocal(4);
            JumpCall: 037510, #actuals: 2
          }
        }
      }
    }
  } else {
    Jump: 037656
  }
LocReturn 037648:
  PushStack call_result;
  TraceOperation 037655 Rfalse;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 0
LocOp 037656:
  TraceOperation 037656 (Test_attr (Var (Local 1)) (Con 18) (Branch F (Dloc 037668)));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),2)];
  if (TestBit(b1,5)) {
    TraceOperation 037660 (Get_prop (Var (Local 1)) (Con 11) Sp);
    Let b2 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),7)];
    Let b3 = M[Offset(Offset(Offset(000741,Mul(GetLocal(1),9)),7),1)];
    Let b4 = M[Address(MakeHiLo(b2,b3))];
    Error: getPropsA
  } else {
    Jump: 037668
  }
LocOp 037668:
  TraceOperation 037668 (Jz (Var (Local 3)) (Branch T (Dloc 037708)));
  if (IsZero(GetLocal(3))) {
    Jump: 037708
  } else {
    TraceOperation 037671 (Test_attr (Var (Global 0)) (Con 6) (Branch T (Dloc 037708)));
    Let b1 = M[008817];
    Let b2 = M[008818];
    Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),0)];
    if (TestBit(b3,1)) {
      Jump: 037708
    } else {
      TraceOperation 037675 (Jz (Var (Global 62)) (Branch F (Dloc 037708)));
      Let b4 = M[008941];
      Let b5 = M[008942];
      if (IsZero(MakeHiLo(b4,b5))) {
        TraceOperation 037678 (Test_attr (Var (Local 4)) (Con 27) (Branch F (Dloc 037708)));
        Let b6 = M[Offset(Offset(000741,Mul(GetLocal(4),9)),3)];
        if (TestBit(b6,4)) {
          TraceOperation 037682 (Print "The ");
          GamePrint "The ";
          TraceOperation 037685 (Print_obj (Var (Local 4)));
          Let b7 = M[Offset(Offset(000741,Mul(GetLocal(4),9)),7)];
          Let b8 = M[Offset(Offset(Offset(000741,Mul(GetLocal(4),9)),7),1)];
          Let b9 = M[Address(MakeHiLo(b7,b8))];
          if (IsZeroByte(b9)) {
            GamePrint "";
            TraceOperation 037687 (Print " comes to a rest on the shore.");
            GamePrint " comes to a rest on the shore.";
            TraceOperation 037706 New_line;
            GamePrint "\n";
            TraceOperation 037707 New_line;
            GamePrint "\n";
            Jump: 037708
          } else {
            GamePrint GetText(Offset(Address(MakeHiLo(b7,b8)),1));
            TraceOperation 037687 (Print " comes to a rest on the shore.");
            GamePrint " comes to a rest on the shore.";
            TraceOperation 037706 New_line;
            GamePrint "\n";
            TraceOperation 037707 New_line;
            GamePrint "\n";
            Jump: 037708
          }
        } else {
          Jump: 037708
        }
      } else {
        Jump: 037708
      }
    }
  }
LocOp 037708:
  TraceOperation 037708 (Jz (Var (Local 5)) (Branch T (Dloc 037717)));
  if (IsZero(GetLocal(5))) {
    Jump: 037717
  } else {
    TraceOperation 037711 (Insert_obj (Var (Local 4)) (Var (Local 1)));
    Let b1 = M[Offset(Offset(000741,Mul(GetLocal(4),9)),4)];
    if (IsZero(Widen(b1))) {
      SetByte Offset(Offset(000741,Mul(GetLocal(4),9)),4) LoByte(GetLocal(1));
      Let b2 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),6)];
      SetByte Offset(Offset(000741,Mul(GetLocal(4),9)),5) LoByte(Widen(b2));
      SetByte Offset(Offset(000741,Mul(GetLocal(1),9)),6) LoByte(GetLocal(4));
      TraceOperation 037714 (Jump 037720);
      Jump: 037720
    } else {
      Let b3 = M[Offset(Offset(000741,Mul(Widen(b1),9)),6)];
      if (Equal(Widen(b3),GetLocal(4))) {
        Let b4 = M[Offset(Offset(000741,Mul(GetLocal(4),9)),5)];
        SetByte Offset(Offset(000741,Mul(Widen(b1),9)),6) LoByte(Widen(b4));
        SetByte Offset(Offset(000741,Mul(GetLocal(4),9)),4) LoByte(GetLocal(1));
        Let b5 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),6)];
        SetByte Offset(Offset(000741,Mul(GetLocal(4),9)),5) LoByte(Widen(b5));
        SetByte Offset(Offset(000741,Mul(GetLocal(1),9)),6) LoByte(GetLocal(4));
        TraceOperation 037714 (Jump 037720);
        Jump: 037720
      } else {
        Error: unlink/loop
      }
    }
  }
LocOp 037717:
  TraceOperation 037717 (Insert_obj (Var (Global 111)) (Var (Local 1)));
  Let b1 = M[009039];
  Let b2 = M[009040];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),4)];
  if (IsZero(Widen(b3))) {
    SetByte Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),4) LoByte(GetLocal(1));
    Let b4 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),6)];
    SetByte Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),5) LoByte(Widen(b4));
    SetByte Offset(Offset(000741,Mul(GetLocal(1),9)),6) b2;
    Jump: 037720
  } else {
    Let b5 = M[Offset(Offset(000741,Mul(Widen(b3),9)),6)];
    if (Equal(Widen(b5),MakeHiLo(b1,b2))) {
      Let b6 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),5)];
      SetByte Offset(Offset(000741,Mul(Widen(b3),9)),6) LoByte(Widen(b6));
      SetByte Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),4) LoByte(GetLocal(1));
      Let b7 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),6)];
      SetByte Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),5) LoByte(Widen(b7));
      SetByte Offset(Offset(000741,Mul(GetLocal(1),9)),6) b2;
      Jump: 037720
    } else {
      Error: unlink/loop
    }
  }
LocOp 037720:
  TraceOperation 037720 (Store (Con 16) (Var (Local 1)));
  SetByte 008817 HiByte(GetLocal(1));
  SetByte 008818 LoByte(GetLocal(1));
  TraceOperation 037723 (Call (Floc 027746) [Var (Global 0)] (Global 66));
  Let b1 = M[008817];
  Let b2 = M[008818];
  PushFrame 037723;
  SetLocal 1 MakeHiLo(b1,b2);
  JumpCall: 027746, #actuals: 1
LocReturn 037723:
  SetByte 008949 HiByte(call_result);
  SetByte 008950 LoByte(call_result);
  TraceOperation 037729 (Jz (Var (Local 6)) (Branch F (Dloc 037855)));
  if (IsZero(GetLocal(6))) {
    TraceOperation 037733 (Jz (Var (Global 66)) (Branch F (Dloc 037855)));
    Let b1 = M[008949];
    Let b2 = M[008950];
    if (IsZero(MakeHiLo(b1,b2))) {
      TraceOperation 037737 (Random (Con 100) Sp);
      LetRandom random3 100;
      PushStack random3;
      TraceOperation 037741 (Jg (Con 80) (Var Sp) (Branch F (Dloc 037855)));
      PopStack popped4;
      if (GreaterThan(80,popped4)) {
        TraceOperation 037746 (Jz (Var (Global 65)) (Branch T (Dloc 037794)));
        Let b5 = M[008947];
        Let b6 = M[008948];
        if (IsZero(MakeHiLo(b5,b6))) {
          Jump: 037794
        } else {
          TraceOperation 037749 (Print "There are sinister gurgling noises in the darkness all around you!");
          GamePrint "There are sinister gurgling noises in the darkness all around you!";
          TraceOperation 037790 New_line;
          GamePrint "\n";
          TraceOperation 037791 (Jump 037855);
          Jump: 037855
        }
      } else {
        Jump: 037855
      }
    } else {
      Jump: 037855
    }
  } else {
    Jump: 037855
  }
LocOp 037794:
  TraceOperation 037794 (Call (Floc 020688) [] Sp);
  PushFrame 037794;
  JumpCall: 020688, #actuals: 0
LocReturn 037794:
  PushStack call_result;
  TraceOperation 037799 (Jz (Var Sp) (Branch F Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 037802 (Print "Oh, no! A lurking grue slithered into the ");
    GamePrint "Oh, no! A lurking grue slithered into the ";
    TraceOperation 037829 (Get_parent (Var (Global 111)) Sp);
    Let b2 = M[009039];
    Let b3 = M[009040];
    Let b4 = M[Offset(Offset(000741,Mul(MakeHiLo(b2,b3),9)),4)];
    PushStack Widen(b4);
    TraceOperation 037832 (Test_attr (Var Sp) (Con 27) (Branch F (Dloc 037844)));
    PopStack popped5;
    Let b6 = M[Offset(Offset(000741,Mul(popped5,9)),3)];
    if (TestBit(b6,4)) {
      TraceOperation 037836 (Get_parent (Var (Global 111)) Sp);
      Let b7 = M[009039];
      Let b8 = M[009040];
      Let b9 = M[Offset(Offset(000741,Mul(MakeHiLo(b7,b8),9)),4)];
      PushStack Widen(b9);
      TraceOperation 037839 (Print_obj (Var Sp));
      PopStack popped10;
      Let b11 = M[Offset(Offset(000741,Mul(popped10,9)),7)];
      Let b12 = M[Offset(Offset(Offset(000741,Mul(popped10,9)),7),1)];
      Let b13 = M[Address(MakeHiLo(b11,b12))];
      if (IsZeroByte(b13)) {
        GamePrint "";
        TraceOperation 037841 (Jump 037847);
        Jump: 037847
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b11,b12)),1));
        TraceOperation 037841 (Jump 037847);
        Jump: 037847
      }
    } else {
      Jump: 037844
    }
  } else {
    PopFrame return_address_14;
    JumpReturn: return_address_14, result: 0
  }
LocOp 037844:
  TraceOperation 037844 (Print "room");
  GamePrint "room";
  Jump: 037847
LocOp 037847:
  TraceOperation 037847 (Call (Floc 067174) [Con -25822] Sp);
  PushFrame 037847;
  SetLocal 1 -25822;
  JumpCall: 067174, #actuals: 1
LocReturn 037847:
  PushStack call_result;
  TraceOperation 037854 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 037855:
  TraceOperation 037855 (Jz (Var (Global 66)) (Branch F (Dloc 037885)));
  Let b1 = M[008949];
  Let b2 = M[008950];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 037858 (Je [Var (Global 111),Con 4] (Branch F (Dloc 037885)));
    Let b3 = M[009039];
    Let b4 = M[009040];
    if (Equal(MakeHiLo(b3,b4),4)) {
      TraceOperation 037862 (Print "You have moved into a dark place.");
      GamePrint "You have moved into a dark place.";
      TraceOperation 037881 New_line;
      GamePrint "\n";
      TraceOperation 037882 (Store (Con 124) (Con 0));
      SetByte 009033 0;
      SetByte 009034 0;
      Jump: 037885
    } else {
      Jump: 037885
    }
  } else {
    Jump: 037885
  }
LocOp 037885:
  TraceOperation 037885 (Get_prop (Var (Global 0)) (Con 17) Sp);
  Let b1 = M[008817];
  Let b2 = M[008818];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  Error: getPropsA
LocReturn 037889:
  PushStack call_result;
  TraceOperation 037894 (Call (Floc 037050) [Var (Local 1)] Sp);
  PushFrame 037894;
  SetLocal 1 GetLocal(1);
  JumpCall: 037050, #actuals: 1
LocReturn 037894:
  PushStack call_result;
  TraceOperation 037900 (Je [Var (Global 0),Var (Local 1)] (Branch F Dtrue));
  Let b1 = M[008817];
  Let b2 = M[008818];
  if (Equal(MakeHiLo(b1,b2),GetLocal(1))) {
    TraceOperation 037904 (Je [Con 4,Var (Global 111)] (Branch T (Dloc 037924)));
    Let b3 = M[009039];
    Let b4 = M[009040];
    if (Equal(4,MakeHiLo(b3,b4))) {
      Jump: 037924
    } else {
      TraceOperation 037908 (Print "The ");
      GamePrint "The ";
      TraceOperation 037911 (Print_obj (Var (Global 111)));
      Let b5 = M[009039];
      Let b6 = M[009040];
      Let b7 = M[Offset(Offset(000741,Mul(MakeHiLo(b5,b6),9)),7)];
      Let b8 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b5,b6),9)),7),1)];
      Let b9 = M[Address(MakeHiLo(b7,b8))];
      if (IsZeroByte(b9)) {
        GamePrint "";
        TraceOperation 037913 (Print_ret " leaves the room.");
        GamePrint " leaves the room.\n";
        PopFrame return_address_10;
        JumpReturn: return_address_10, result: 1
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b7,b8)),1));
        TraceOperation 037913 (Print_ret " leaves the room.");
        GamePrint " leaves the room.\n";
        PopFrame return_address_11;
        JumpReturn: return_address_11, result: 1
      }
    }
  } else {
    PopFrame return_address_12;
    JumpReturn: return_address_12, result: 1
  }
LocOp 037924:
  TraceOperation 037924 (Jz (Var (Local 2)) (Branch T Dtrue));
  if (IsZero(GetLocal(2))) {
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 1
  } else {
    TraceOperation 037927 (Call (Floc 035976) [] Sp);
    PushFrame 037927;
    JumpCall: 035976, #actuals: 0
  }
LocReturn 037927:
  PushStack call_result;
  TraceOperation 037932 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[276]--------------------------------------------------
LocRoutine 037934:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 037939
LocOp 037939:
  TraceOperation 037939 (Call (Floc 037960) [Var (Global 0),Var (Local 1)] (Local 2));
  Let b1 = M[008817];
  Let b2 = M[008818];
  PushFrame 037939;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 GetLocal(1);
  JumpCall: 037960, #actuals: 2
LocReturn 037939:
  SetLocal 2 call_result;
  TraceOperation 037946 (Jz (Var (Local 2)) (Branch T Dfalse));
  if (IsZero(GetLocal(2))) {
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 0
  } else {
    TraceOperation 037949 (Call (Floc 037558) [Var (Local 2)] Sp);
    PushFrame 037949;
    SetLocal 1 GetLocal(2);
    JumpCall: 037558, #actuals: 1
  }
LocReturn 037949:
  PushStack call_result;
  TraceOperation 037955 (Jz (Var Sp) (Branch F Dtrue));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 037958 (Ret (Con 2));
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 2
  } else {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  }
--[277]--------------------------------------------------
LocRoutine 037960:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 037969
LocOp 037969:
  TraceOperation 037969 (Loadw (Var (Local 2)) (Con 0) (Local 4));
  Let b1 = M[Offset(Address(GetLocal(2)),0)];
  Let b2 = M[Offset(Offset(Address(GetLocal(2)),0),1)];
  SetLocal 4 MakeHiLo(b1,b2);
  Jump: 037973
LocOp 037973:
  TraceOperation 037973 (Inc_chk (Con 3) (Var (Local 4)) (Branch T Dfalse));
  SetLocal 3 Add(GetLocal(3),1);
  if (GreaterThanEqual(GetLocal(3),GetLocal(4))) {
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 0
  } else {
    TraceOperation 037977 (Loadw (Var (Local 2)) (Var (Local 3)) Sp);
    Let b2 = M[Offset(Address(GetLocal(2)),Mul(2,GetLocal(3)))];
    Let b3 = M[Offset(Offset(Address(GetLocal(2)),Mul(2,GetLocal(3))),1)];
    PushStack MakeHiLo(b2,b3);
    TraceOperation 037981 (Je [Var Sp,Var (Local 1)] (Branch F (Dloc 037973)));
    PopStack popped4;
    if (Equal(popped4,GetLocal(1))) {
      TraceOperation 037986 (Je [Var (Local 3),Var (Local 4)] (Branch T Dfalse));
      if (Equal(GetLocal(3),GetLocal(4))) {
        PopFrame return_address_5;
        JumpReturn: return_address_5, result: 0
      } else {
        TraceOperation 037990 (Add (Var (Local 3)) (Con 1) Sp);
        PushStack Add(GetLocal(3),1);
        TraceOperation 037994 (Loadw (Var (Local 2)) (Var Sp) Sp);
        PopStack popped6;
        Let b7 = M[Offset(Address(GetLocal(2)),Mul(2,popped6))];
        Let b8 = M[Offset(Offset(Address(GetLocal(2)),Mul(2,popped6)),1)];
        PushStack MakeHiLo(b7,b8);
        TraceOperation 037998 (Ret (Var Sp));
        PopStack popped9;
        PopFrame return_address_10;
        JumpReturn: return_address_10, result: popped9
      }
    } else {
      Jump: 037973
    }
  }
--[278]--------------------------------------------------
LocRoutine 038000:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 038003
LocOp 038003:
  TraceOperation 038003 (Store (Con 111) (Var (Local 1)));
  SetByte 009007 HiByte(GetLocal(1));
  SetByte 009008 LoByte(GetLocal(1));
  TraceOperation 038006 (Call (Floc 022396) [Con 137,Var (Local 1)] Sp);
  PushFrame 038006;
  SetLocal 1 137;
  SetLocal 2 GetLocal(1);
  JumpCall: 022396, #actuals: 2
LocReturn 038006:
  PushStack call_result;
  TraceOperation 038013 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[279]--------------------------------------------------
LocRoutine 038014:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 038023
LocOp 038023:
  TraceOperation 038023 (Get_prop_addr (Var (Local 1)) (Con 18) (Local 3));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),7)];
  Let b2 = M[Offset(Offset(Offset(000741,Mul(GetLocal(1),9)),7),1)];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Error: getPropsA
LocReturn 038038:
  PushStack call_result;
  TraceOperation 038046 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[280]--------------------------------------------------
LocRoutine 038048:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 038055
LocOp 038055:
  TraceOperation 038055 (Get_prop_addr (Var (Local 2)) (Con 5) (Local 3));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(2),9)),7)];
  Let b2 = M[Offset(Offset(Offset(000741,Mul(GetLocal(2),9)),7),1)];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Error: getPropsA
LocReturn 038069:
  PushStack call_result;
  TraceOperation 038077 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[281]--------------------------------------------------
LocRoutine 038078:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 038085
LocOp 038085:
  TraceOperation 038085 (Get_child (Var (Local 1)) (Local 3) (Branch T (Dloc 038089)));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),6)];
  SetLocal 3 Widen(b1);
  if (IsZero(Widen(b1))) {
    TraceOperation 038089 (Jz (Var (Local 3)) (Branch T Dfalse));
    if (IsZero(GetLocal(3))) {
      PopFrame return_address_2;
      JumpReturn: return_address_2, result: 0
    } else {
      TraceOperation 038092 (Test_attr (Var (Local 3)) (Var (Local 2)) (Branch F (Dloc 038102)));
      Let b3 = M[Offset(Offset(000741,Mul(GetLocal(3),9)),Div8(GetLocal(2)))];
      if (TestBit(b3,SevenMinus(LoByte(Mod(GetLocal(2),8))))) {
        TraceOperation 038096 (Je [Var (Local 3),Con 4] (Branch T (Dloc 038102)));
        if (Equal(GetLocal(3),4)) {
          Jump: 038102
        } else {
          TraceOperation 038100 (Ret (Var (Local 3)));
          PopFrame return_address_4;
          JumpReturn: return_address_4, result: GetLocal(3)
        }
      } else {
        Jump: 038102
      }
    }
  } else {
    TraceOperation 038089 (Jz (Var (Local 3)) (Branch T Dfalse));
    if (IsZero(GetLocal(3))) {
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 0
    } else {
      TraceOperation 038092 (Test_attr (Var (Local 3)) (Var (Local 2)) (Branch F (Dloc 038102)));
      Let b6 = M[Offset(Offset(000741,Mul(GetLocal(3),9)),Div8(GetLocal(2)))];
      if (TestBit(b6,SevenMinus(LoByte(Mod(GetLocal(2),8))))) {
        TraceOperation 038096 (Je [Var (Local 3),Con 4] (Branch T (Dloc 038102)));
        if (Equal(GetLocal(3),4)) {
          Jump: 038102
        } else {
          TraceOperation 038100 (Ret (Var (Local 3)));
          PopFrame return_address_7;
          JumpReturn: return_address_7, result: GetLocal(3)
        }
      } else {
        Jump: 038102
      }
    }
  }
LocOp 038102:
  TraceOperation 038102 (Get_sibling (Var (Local 3)) (Local 3) (Branch T (Dloc 038092)));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(3),9)),5)];
  SetLocal 3 Widen(b1);
  if (IsZero(Widen(b1))) {
    TraceOperation 038107 Rfalse;
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  } else {
    TraceOperation 038092 (Test_attr (Var (Local 3)) (Var (Local 2)) (Branch F (Dloc 038102)));
    Let b3 = M[Offset(Offset(000741,Mul(GetLocal(3),9)),Div8(GetLocal(2)))];
    if (TestBit(b3,SevenMinus(LoByte(Mod(GetLocal(2),8))))) {
      TraceOperation 038096 (Je [Var (Local 3),Con 4] (Branch T (Dloc 038102)));
      if (Equal(GetLocal(3),4)) {
        Jump: 038102
      } else {
        TraceOperation 038100 (Ret (Var (Local 3)));
        PopFrame return_address_4;
        JumpReturn: return_address_4, result: GetLocal(3)
      }
    } else {
      Jump: 038102
    }
  }
--[282]--------------------------------------------------
LocRoutine 038108:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 038111
LocOp 038111:
  TraceOperation 038111 (Jin (Var (Local 1)) (Var (Global 0)) (Branch T Dtrue));
  Let b1 = M[008817];
  Let b2 = M[008818];
  Let b3 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),4)];
  if (Equal(MakeHiLo(b1,b2),Widen(b3))) {
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 1
  } else {
    TraceOperation 038115 (Call (Floc 038048) [Var (Local 1),Var (Global 0)] Sp);
    Let b5 = M[008817];
    Let b6 = M[008818];
    PushFrame 038115;
    SetLocal 1 GetLocal(1);
    SetLocal 2 MakeHiLo(b5,b6);
    JumpCall: 038048, #actuals: 2
  }
LocReturn 038115:
  PushStack call_result;
  TraceOperation 038122 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[283]--------------------------------------------------
LocRoutine 038124:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 038127
LocOp 038127:
  TraceOperation 038127 (Get_parent (Var (Local 1)) (Local 1));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),4)];
  SetLocal 1 Widen(b1);
  TraceOperation 038130 (Jz (Var (Local 1)) (Branch T Dfalse));
  if (IsZero(GetLocal(1))) {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  } else {
    TraceOperation 038133 (Je [Var (Local 1),Var (Global 111)] (Branch F (Dloc 038127)));
    Let b3 = M[009039];
    Let b4 = M[009040];
    if (Equal(GetLocal(1),MakeHiLo(b3,b4))) {
      TraceOperation 038138 Rtrue;
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 1
    } else {
      Jump: 038127
    }
  }
--[284]--------------------------------------------------
LocRoutine 038140:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 038147
LocOp 038147:
  TraceOperation 038147 (Get_next_prop (Var (Global 0)) (Var (Local 2)) (Local 2));
  Let b1 = M[008817];
  Let b2 = M[008818];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  Error: getPropsA
--[285]--------------------------------------------------
LocRoutine 038178:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 038183
LocOp 038183:
  TraceOperation 038183 (Set_attr (Var (Local 1)) (Con 18));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),2)];
  SetByte Offset(Offset(000741,Mul(GetLocal(1),9)),2) SetBit(b1,5);
  TraceOperation 038186 (Put_prop (Var (Local 1)) (Con 11) (Var (Local 2)));
  Let b2 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),7)];
  Let b3 = M[Offset(Offset(Offset(000741,Mul(GetLocal(1),9)),7),1)];
  Let b4 = M[Address(MakeHiLo(b2,b3))];
  Error: getPropsA
--[286]--------------------------------------------------
LocRoutine 038192:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 038195
LocOp 038195:
  TraceOperation 038195 (Store (Con 123) (Var (Local 1)));
  SetByte 009031 HiByte(GetLocal(1));
  SetByte 009032 LoByte(GetLocal(1));
  TraceOperation 038198 (Store (Con 122) (Var (Global 0)));
  Let b1 = M[008817];
  Let b2 = M[008818];
  SetByte 009029 b1;
  SetByte 009030 b2;
  TraceOperation 038201 (Ret (Var (Global 106)));
  Let b3 = M[009029];
  Let b4 = M[009030];
  PopFrame return_address_5;
  JumpReturn: return_address_5, result: MakeHiLo(b3,b4)
--[287]--------------------------------------------------
LocRoutine 038204:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 038207
LocOp 038207:
  TraceOperation 038207 (Je [Var (Local 1),Con 3] (Branch F Dfalse));
  if (Equal(GetLocal(1),3)) {
    TraceOperation 038211 (Print "You are standing in an open field west of a white house, with a boarded front door.");
    GamePrint "You are standing in an open field west of a white house, with a boarded front door.";
    TraceOperation 038260 (Jz (Var (Global 140)) (Branch T (Dloc 038290)));
    Let b1 = M[009097];
    Let b2 = M[009098];
    if (IsZero(MakeHiLo(b1,b2))) {
      Jump: 038290
    } else {
      TraceOperation 038263 (Print " A secret path leads southwest into the forest.");
      GamePrint " A secret path leads southwest into the forest.";
      Jump: 038290
    }
  } else {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  }
LocOp 038290:
  TraceOperation 038290 New_line;
  GamePrint "\n";
  TraceOperation 038291 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[288]--------------------------------------------------
LocRoutine 038292:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 038295
LocOp 038295:
  TraceOperation 038295 (Je [Var (Local 1),Con 3] (Branch F Dfalse));
  if (Equal(GetLocal(1),3)) {
    TraceOperation 038299 (Print "You are behind the white house. A path leads into the forest to the east. In one corner of the house there is a small window which is ");
    GamePrint "You are behind the white house. A path leads into the forest to the east. In one corner of the house there is a small window which is ";
    TraceOperation 038368 (Test_attr (Con 235) (Con 11) (Branch F (Dloc 038380)));
    Let b1 = M[002857];
    if (TestBit(b1,4)) {
      TraceOperation 038372 (Print "open.");
      GamePrint "open.";
      TraceOperation 038377 (Jump 038391);
      Jump: 038391
    } else {
      Jump: 038380
    }
  } else {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  }
LocOp 038380:
  TraceOperation 038380 (Print "slightly ajar.");
  GamePrint "slightly ajar.";
  Jump: 038391
LocOp 038391:
  TraceOperation 038391 New_line;
  GamePrint "\n";
  TraceOperation 038392 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[289]--------------------------------------------------
LocRoutine 038394:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 038401
LocOp 038401:
  TraceOperation 038401 (Je [Var (Global 120),Con 43] (Branch F (Dloc 038427)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),43)) {
    TraceOperation 038405 (Test_attr (Var (Local 1)) (Con 11) (Branch F (Dloc 038420)));
    Let b3 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),1)];
    if (TestBit(b3,4)) {
      TraceOperation 038409 (Call (Floc 020076) [Var (Global 52)] Sp);
      Let b4 = M[008921];
      Let b5 = M[008922];
      PushFrame 038409;
      SetLocal 1 MakeHiLo(b4,b5);
      JumpCall: 020076, #actuals: 1
    } else {
      Jump: 038420
    }
  } else {
    Jump: 038427
  }
LocReturn 038409:
  PushStack call_result;
  TraceOperation 038415 (Print_paddr (Var Sp));
  PopStack popped1;
  GamePrint GetText(PackedAddress Z3(popped1));
  TraceOperation 038417 (Jump 038425);
  Jump: 038425
LocOp 038420:
  TraceOperation 038420 (Print_paddr (Var (Local 2)));
  GamePrint GetText(PackedAddress Z3(GetLocal(2)));
  TraceOperation 038422 (Set_attr (Var (Local 1)) (Con 11));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),1)];
  SetByte Offset(Offset(000741,Mul(GetLocal(1),9)),1) SetBit(b1,4);
  Jump: 038425
LocOp 038425:
  TraceOperation 038425 New_line;
  GamePrint "\n";
  TraceOperation 038426 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 038427:
  TraceOperation 038427 (Je [Var (Global 120),Con 35] (Branch F Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),35)) {
    TraceOperation 038431 (Test_attr (Var (Local 1)) (Con 11) (Branch F (Dloc 038443)));
    Let b3 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),1)];
    if (TestBit(b3,4)) {
      TraceOperation 038435 (Print_paddr (Var (Local 3)));
      GamePrint GetText(PackedAddress Z3(GetLocal(3)));
      TraceOperation 038437 (Clear_attr (Var (Local 1)) (Con 11));
      Let b4 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),1)];
      SetByte Offset(Offset(000741,Mul(GetLocal(1),9)),1) ClearBit(b4,4);
      TraceOperation 038440 (Jump 038451);
      Jump: 038451
    } else {
      Jump: 038443
    }
  } else {
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 0
  }
LocOp 038443:
  TraceOperation 038443 (Call (Floc 020076) [Var (Global 52)] Sp);
  Let b1 = M[008921];
  Let b2 = M[008922];
  PushFrame 038443;
  SetLocal 1 MakeHiLo(b1,b2);
  JumpCall: 020076, #actuals: 1
LocReturn 038443:
  PushStack call_result;
  TraceOperation 038449 (Print_paddr (Var Sp));
  PopStack popped1;
  GamePrint GetText(PackedAddress Z3(popped1));
  Jump: 038451
LocOp 038451:
  TraceOperation 038451 New_line;
  GamePrint "\n";
  TraceOperation 038452 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[290]--------------------------------------------------
LocRoutine 038454:
  MakeRoutineFrame 0;
  Jump: 038455
LocOp 038455:
  TraceOperation 038455 (Je [Var (Global 120),Con 56,Con 93] (Branch F Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (LogOr(Equal(MakeHiLo(b1,b2),56),Equal(MakeHiLo(b1,b2),93))) {
    TraceOperation 038461 (Print_ret "The boards are securely fastened.");
    GamePrint "The boards are securely fastened.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 0
  }
--[291]--------------------------------------------------
LocRoutine 038482:
  MakeRoutineFrame 0;
  Jump: 038483
LocOp 038483:
  TraceOperation 038483 (Je [Var (Global 120),Con 26] (Branch F Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),26)) {
    TraceOperation 038487 (Je [Var (Global 118),Con 248] (Branch F Dfalse));
    Let b3 = M[009053];
    Let b4 = M[009054];
    if (Equal(MakeHiLo(b3,b4),248)) {
      TraceOperation 038491 (Je [Var (Global 119),Con 98] (Branch F (Dloc 038507)));
      Let b5 = M[009055];
      Let b6 = M[009056];
      if (Equal(MakeHiLo(b5,b6),98)) {
        TraceOperation 038495 (Jin (Var (Global 119)) (Var (Global 111)) (Branch F (Dloc 038507)));
        Let b7 = M[009055];
        Let b8 = M[009056];
        Let b9 = M[009039];
        Let b10 = M[009040];
        Let b11 = M[Offset(Offset(000741,Mul(MakeHiLo(b7,b8),9)),4)];
        if (Equal(MakeHiLo(b9,b10),Widen(b11))) {
          TraceOperation 038499 (Call (Floc 067174) [Con -25737] Sp);
          PushFrame 038499;
          SetLocal 1 -25737;
          JumpCall: 067174, #actuals: 1
        } else {
          Jump: 038507
        }
      } else {
        Jump: 038507
      }
    } else {
      PopFrame return_address_12;
      JumpReturn: return_address_12, result: 0
    }
  } else {
    PopFrame return_address_13;
    JumpReturn: return_address_13, result: 0
  }
LocReturn 038499:
  PushStack call_result;
  TraceOperation 038506 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 038507:
  TraceOperation 038507 (Jz (Var (Global 119)) (Branch F (Dloc 038567)));
  Let b1 = M[009055];
  Let b2 = M[009056];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 038510 (Print_ret "Dental hygiene is highly recommended, but I'm not sure what you want to brush them with.");
    GamePrint "Dental hygiene is highly recommended, but I'm not sure what you want to brush them with.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 038567
  }
LocOp 038567:
  TraceOperation 038567 (Print "A nice idea, but with a ");
  GamePrint "A nice idea, but with a ";
  TraceOperation 038582 (Print_obj (Var (Global 119)));
  Let b1 = M[009055];
  Let b2 = M[009056];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  if (IsZeroByte(b5)) {
    GamePrint "";
    TraceOperation 038584 (Print_ret "?");
    GamePrint "?\n";
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
    TraceOperation 038584 (Print_ret "?");
    GamePrint "?\n";
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 1
  }
--[292]--------------------------------------------------
LocRoutine 038588:
  MakeRoutineFrame 0;
  Jump: 038589
LocOp 038589:
  TraceOperation 038589 (Je [Var (Global 0),Con 220] (Branch F (Dloc 038616)));
  Let b1 = M[008817];
  Let b2 = M[008818];
  if (Equal(MakeHiLo(b1,b2),220)) {
    TraceOperation 038593 (Je [Var (Global 120),Con 60] (Branch F Dfalse));
    Let b3 = M[009057];
    Let b4 = M[009058];
    if (Equal(MakeHiLo(b3,b4),60)) {
      TraceOperation 038597 (Print_ret "The west wall is solid granite here.");
      GamePrint "The west wall is solid granite here.\n";
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 1
    } else {
      PopFrame return_address_6;
      JumpReturn: return_address_6, result: 0
    }
  } else {
    Jump: 038616
  }
LocOp 038616:
  TraceOperation 038616 (Je [Var (Global 0),Con 190] (Branch F (Dloc 038643)));
  Let b1 = M[008817];
  Let b2 = M[008818];
  if (Equal(MakeHiLo(b1,b2),190)) {
    TraceOperation 038620 (Je [Var (Global 120),Con 60] (Branch F Dfalse));
    Let b3 = M[009057];
    Let b4 = M[009058];
    if (Equal(MakeHiLo(b3,b4),60)) {
      TraceOperation 038624 (Print_ret "The east wall is solid granite here.");
      GamePrint "The east wall is solid granite here.\n";
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 1
    } else {
      PopFrame return_address_6;
      JumpReturn: return_address_6, result: 0
    }
  } else {
    Jump: 038643
  }
LocOp 038643:
  TraceOperation 038643 (Je [Var (Global 0),Con 15] (Branch F (Dloc 038693)));
  Let b1 = M[008817];
  Let b2 = M[008818];
  if (Equal(MakeHiLo(b1,b2),15)) {
    TraceOperation 038647 (Je [Var (Global 120),Con 83,Con 60] (Branch F (Dloc 038678)));
    Let b3 = M[009057];
    Let b4 = M[009058];
    if (LogOr(Equal(MakeHiLo(b3,b4),83),Equal(MakeHiLo(b3,b4),60))) {
      TraceOperation 038653 (Print_ret "It only SAYS \"Granite Wall\".");
      GamePrint "It only SAYS \"Granite Wall\".\n";
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 1
    } else {
      Jump: 038678
    }
  } else {
    Jump: 038693
  }
LocOp 038678:
  TraceOperation 038678 (Print_ret "The wall isn't granite.");
  GamePrint "The wall isn't granite.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 038693:
  TraceOperation 038693 (Print_ret "There is no granite wall here.");
  GamePrint "There is no granite wall here.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[293]--------------------------------------------------
LocRoutine 038708:
  MakeRoutineFrame 0;
  Jump: 038709
LocOp 038709:
  TraceOperation 038709 (Je [Var (Global 120),Con 93,Con 60] (Branch F (Dloc 038738)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (LogOr(Equal(MakeHiLo(b1,b2),93),Equal(MakeHiLo(b1,b2),60))) {
    TraceOperation 038715 (Print_ret "The songbird is not here but is probably nearby.");
    GamePrint "The songbird is not here but is probably nearby.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 038738
  }
LocOp 038738:
  TraceOperation 038738 (Je [Var (Global 120),Con 77] (Branch F (Dloc 038761)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),77)) {
    TraceOperation 038742 (Print_ret "You can't hear the songbird now.");
    GamePrint "You can't hear the songbird now.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 038761
  }
LocOp 038761:
  TraceOperation 038761 (Je [Var (Global 120),Con 61] (Branch F (Dloc 038778)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 038765 (Print_ret "It can't be followed.");
    GamePrint "It can't be followed.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 038778
  }
LocOp 038778:
  TraceOperation 038778 (Print_ret "You can't see any songbird here.");
  GamePrint "You can't see any songbird here.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[294]--------------------------------------------------
LocRoutine 038798:
  MakeRoutineFrame 0;
  Jump: 038799
LocOp 038799:
  TraceOperation 038799 (Je [Var (Global 0),Con 203,Con 193,Con 201] (Branch F (Dloc 038838)));
  Let b1 = M[008817];
  Let b2 = M[008818];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),203),Equal(MakeHiLo(b1,b2),193)),Equal(MakeHiLo(b1,b2),201))) {
    TraceOperation 038806 (Je [Var (Global 120),Con 60] (Branch F (Dloc 038827)));
    Let b3 = M[009057];
    Let b4 = M[009058];
    if (Equal(MakeHiLo(b3,b4),60)) {
      TraceOperation 038810 (Print_ret "Why not find your brains?");
      GamePrint "Why not find your brains?\n";
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 1
    } else {
      Jump: 038827
    }
  } else {
    Jump: 038838
  }
LocOp 038827:
  TraceOperation 038827 (Je [Var (Global 120),Con 139] (Branch F Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),139)) {
    TraceOperation 038831 (Call (Floc 037934) [Var (Global 136)] Sp);
    Let b3 = M[009089];
    Let b4 = M[009090];
    PushFrame 038831;
    SetLocal 1 MakeHiLo(b3,b4);
    JumpCall: 037934, #actuals: 1
  } else {
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 0
  }
LocReturn 038831:
  PushStack call_result;
  TraceOperation 038837 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 038838:
  TraceOperation 038838 (Je [Var (Global 0),Con 79,Con 180] (Branch T (Dloc 038911)));
  Let b1 = M[008817];
  Let b2 = M[008818];
  if (LogOr(Equal(MakeHiLo(b1,b2),79),Equal(MakeHiLo(b1,b2),180))) {
    Jump: 038911
  } else {
    TraceOperation 038845 (Je [Var (Global 0),Con 81,Con 80] (Branch T (Dloc 038911)));
    Let b3 = M[008817];
    Let b4 = M[008818];
    if (LogOr(Equal(MakeHiLo(b3,b4),81),Equal(MakeHiLo(b3,b4),80))) {
      Jump: 038911
    } else {
      TraceOperation 038852 (Je [Var (Global 120),Con 60] (Branch F (Dloc 038898)));
      Let b5 = M[009057];
      Let b6 = M[009058];
      if (Equal(MakeHiLo(b5,b6),60)) {
        TraceOperation 038856 (Je [Var (Global 0),Con 74] (Branch F (Dloc 038873)));
        Let b7 = M[008817];
        Let b8 = M[008818];
        if (Equal(MakeHiLo(b7,b8),74)) {
          TraceOperation 038860 (Print_ret "It seems to be to the west.");
          GamePrint "It seems to be to the west.\n";
          PopFrame return_address_9;
          JumpReturn: return_address_9, result: 1
        } else {
          Jump: 038873
        }
      } else {
        Jump: 038898
      }
    }
  }
LocOp 038873:
  TraceOperation 038873 (Print_ret "It was here just a minute ago....");
  GamePrint "It was here just a minute ago....\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 038898:
  TraceOperation 038898 (Print_ret "You're not at the house.");
  GamePrint "You're not at the house.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 038911:
  TraceOperation 038911 (Je [Var (Global 120),Con 60] (Branch F (Dloc 038944)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),60)) {
    TraceOperation 038915 (Print_ret "It's right here! Are you blind or something?");
    GamePrint "It's right here! Are you blind or something?\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 038944
  }
LocOp 038944:
  TraceOperation 038944 (Je [Var (Global 120),Con 139] (Branch F (Dloc 038955)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),139)) {
    TraceOperation 038948 (Call (Floc 037934) [Var (Global 138)] Sp);
    Let b3 = M[009093];
    Let b4 = M[009094];
    PushFrame 038948;
    SetLocal 1 MakeHiLo(b3,b4);
    JumpCall: 037934, #actuals: 1
  } else {
    Jump: 038955
  }
LocReturn 038948:
  PushStack call_result;
  TraceOperation 038954 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 038955:
  TraceOperation 038955 (Je [Var (Global 120),Con 56] (Branch F (Dloc 039035)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),56)) {
    TraceOperation 038960 (Print_ret "The house is a beautiful colonial house which is painted white. It is clear that the owners must have been extremely wealthy.");
    GamePrint "The house is a beautiful colonial house which is painted white. It is clear that the owners must have been extremely wealthy.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 039035
  }
LocOp 039035:
  TraceOperation 039035 (Je [Var (Global 120),Con 43,Con 34] (Branch F (Dloc 039094)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (LogOr(Equal(MakeHiLo(b1,b2),43),Equal(MakeHiLo(b1,b2),34))) {
    TraceOperation 039041 (Je [Var (Global 0),Con 79] (Branch F (Dloc 039075)));
    Let b3 = M[008817];
    Let b4 = M[008818];
    if (Equal(MakeHiLo(b3,b4),79)) {
      TraceOperation 039045 (Test_attr (Con 235) (Con 11) (Branch F (Dloc 039056)));
      Let b5 = M[002857];
      if (TestBit(b5,4)) {
        TraceOperation 039049 (Call (Floc 037558) [Con 203] Sp);
        PushFrame 039049;
        SetLocal 1 203;
        JumpCall: 037558, #actuals: 1
      } else {
        Jump: 039056
      }
    } else {
      Jump: 039075
    }
  } else {
    Jump: 039094
  }
LocReturn 039049:
  PushStack call_result;
  TraceOperation 039055 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 039056:
  TraceOperation 039056 (Print "The window is closed.");
  GamePrint "The window is closed.";
  TraceOperation 039067 New_line;
  GamePrint "\n";
  TraceOperation 039068 (Call (Floc 038192) [Con 235] Sp);
  PushFrame 039068;
  SetLocal 1 235;
  JumpCall: 038192, #actuals: 1
LocReturn 039068:
  PushStack call_result;
  TraceOperation 039074 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 039075:
  TraceOperation 039075 (Print_ret "I can't see how to get in from here.");
  GamePrint "I can't see how to get in from here.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 039094:
  TraceOperation 039094 (Je [Var (Global 120),Con 28] (Branch F Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),28)) {
    TraceOperation 039098 (Print_ret "You must be joking.");
    GamePrint "You must be joking.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 0
  }
--[295]--------------------------------------------------
LocRoutine 039112:
  MakeRoutineFrame 0;
  Jump: 039113
LocOp 039113:
  TraceOperation 039113 (Je [Var (Global 120),Con 139] (Branch F (Dloc 039124)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),139)) {
    TraceOperation 039117 (Call (Floc 037934) [Var (Global 137)] Sp);
    Let b3 = M[009091];
    Let b4 = M[009092];
    PushFrame 039117;
    SetLocal 1 MakeHiLo(b3,b4);
    JumpCall: 037934, #actuals: 1
  } else {
    Jump: 039124
  }
LocReturn 039117:
  PushStack call_result;
  TraceOperation 039123 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 039124:
  TraceOperation 039124 (Je [Var (Global 120),Con 45] (Branch F (Dloc 039151)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),45)) {
    TraceOperation 039128 (Print_ret "You will have to specify a direction.");
    GamePrint "You will have to specify a direction.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 039151
  }
LocOp 039151:
  TraceOperation 039151 (Je [Var (Global 120),Con 60] (Branch F (Dloc 039176)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),60)) {
    TraceOperation 039155 (Print_ret "You cannot see the forest for the trees.");
    GamePrint "You cannot see the forest for the trees.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 039176
  }
LocOp 039176:
  TraceOperation 039176 (Je [Var (Global 120),Con 77] (Branch F Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),77)) {
    TraceOperation 039180 (Print_ret "The pines and the hemlocks seem to be murmuring.");
    GamePrint "The pines and the hemlocks seem to be murmuring.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 0
  }
--[296]--------------------------------------------------
LocRoutine 039210:
  MakeRoutineFrame 0;
  Jump: 039211
LocOp 039211:
  TraceOperation 039211 (Je [Var (Global 120),Con 32,Con 31,Con 30] (Branch F Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),32),Equal(MakeHiLo(b1,b2),31)),Equal(MakeHiLo(b1,b2),30))) {
    TraceOperation 039218 (Print_ret "Don't you believe me? The mountains are impassable!");
    GamePrint "Don't you believe me? The mountains are impassable!\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 0
  }
--[297]--------------------------------------------------
LocRoutine 039254:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 039261
LocOp 039261:
  TraceOperation 039261 (Je [Var (Global 120),Con 64] (Branch T Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),64)) {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  } else {
    TraceOperation 039265 (Je [Var (Global 120),Con 34] (Branch F (Dloc 039279)));
    Let b4 = M[009057];
    Let b5 = M[009058];
    if (Equal(MakeHiLo(b4,b5),34)) {
      TraceOperation 039269 (Call (Floc 020076) [Var (Global 55)] Sp);
      Let b6 = M[008927];
      Let b7 = M[008928];
      PushFrame 039269;
      SetLocal 1 MakeHiLo(b6,b7);
      JumpCall: 020076, #actuals: 1
    } else {
      Jump: 039279
    }
  }
LocReturn 039269:
  PushStack call_result;
  TraceOperation 039275 (Print_paddr (Var Sp));
  PopStack popped1;
  GamePrint GetText(PackedAddress Z3(popped1));
  TraceOperation 039277 New_line;
  GamePrint "\n";
  TraceOperation 039278 Rtrue;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: 1
LocOp 039279:
  TraceOperation 039279 (Je [Var (Global 120),Con 59] (Branch F (Dloc 039301)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),59)) {
    TraceOperation 039283 (Store (Con 2) (Var (Global 119)));
    Let b3 = M[009055];
    Let b4 = M[009056];
    SetLocal 2 MakeHiLo(b3,b4);
    TraceOperation 039286 (Store (Con 136) (Con 18));
    SetByte 009057 0;
    SetByte 009058 18;
    TraceOperation 039289 (Store (Con 135) (Var (Global 118)));
    Let b5 = M[009053];
    Let b6 = M[009054];
    SetByte 009055 b5;
    SetByte 009056 b6;
    TraceOperation 039292 (Store (Con 134) (Var (Local 2)));
    SetByte 009053 HiByte(GetLocal(2));
    SetByte 009054 LoByte(GetLocal(2));
    TraceOperation 039295 (Store (Con 3) (Con 0));
    SetLocal 3 0;
    TraceOperation 039298 (Jump 039327);
    Jump: 039327
  } else {
    Jump: 039301
  }
LocOp 039301:
  TraceOperation 039301 (Je [Var (Global 118),Con 238] (Branch T (Dloc 039309)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  if (Equal(MakeHiLo(b1,b2),238)) {
    Jump: 039309
  } else {
    TraceOperation 039305 (Je [Var (Global 118),Con 237] (Branch F (Dloc 039318)));
    Let b3 = M[009053];
    Let b4 = M[009054];
    if (Equal(MakeHiLo(b3,b4),237)) {
      Jump: 039309
    } else {
      Jump: 039318
    }
  }
LocOp 039309:
  TraceOperation 039309 (Store (Con 2) (Var (Global 118)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  SetLocal 2 MakeHiLo(b1,b2);
  TraceOperation 039312 (Store (Con 3) (Con 0));
  SetLocal 3 0;
  TraceOperation 039315 (Jump 039327);
  Jump: 039327
LocOp 039318:
  TraceOperation 039318 (Store (Con 2) (Var (Global 119)));
  Let b1 = M[009055];
  Let b2 = M[009056];
  SetLocal 2 MakeHiLo(b1,b2);
  TraceOperation 039321 (Jz (Var (Local 2)) (Branch T (Dloc 039327)));
  if (IsZero(GetLocal(2))) {
    Jump: 039327
  } else {
    TraceOperation 039324 (Store (Con 3) (Con 1));
    SetLocal 3 1;
    Jump: 039327
  }
LocOp 039327:
  TraceOperation 039327 (Je [Var (Local 2),Con 238] (Branch F (Dloc 039346)));
  if (Equal(GetLocal(2),238)) {
    TraceOperation 039331 (Store (Con 2) (Con 237));
    SetLocal 2 237;
    TraceOperation 039334 (Je [Var (Global 120),Con 18,Con 93] (Branch F (Dloc 039346)));
    Let b1 = M[009057];
    Let b2 = M[009058];
    if (LogOr(Equal(MakeHiLo(b1,b2),18),Equal(MakeHiLo(b1,b2),93))) {
      TraceOperation 039340 (Call (Floc 030906) [Var (Local 2)] Sp);
      PushFrame 039340;
      SetLocal 1 GetLocal(2);
      JumpCall: 030906, #actuals: 1
    } else {
      Jump: 039346
    }
  } else {
    Jump: 039346
  }
LocReturn 039340:
  PushStack call_result;
  Jump: 039346
LocOp 039346:
  TraceOperation 039346 (Jz (Var (Local 3)) (Branch T (Dloc 039355)));
  if (IsZero(GetLocal(3))) {
    Jump: 039355
  } else {
    TraceOperation 039349 (Store (Con 135) (Var (Local 2)));
    SetByte 009055 HiByte(GetLocal(2));
    SetByte 009056 LoByte(GetLocal(2));
    TraceOperation 039352 (Jump 039358);
    Jump: 039358
  }
LocOp 039355:
  TraceOperation 039355 (Store (Con 134) (Var (Local 2)));
  SetByte 009053 HiByte(GetLocal(2));
  SetByte 009054 LoByte(GetLocal(2));
  Jump: 039358
LocOp 039358:
  TraceOperation 039358 (Get_parent (Var (Global 111)) (Local 1));
  Let b1 = M[009039];
  Let b2 = M[009040];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),4)];
  SetLocal 1 Widen(b3);
  TraceOperation 039361 (Test_attr (Var (Local 1)) (Con 27) (Branch T (Dloc 039368)));
  Let b4 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),3)];
  if (TestBit(b4,4)) {
    Jump: 039368
  } else {
    TraceOperation 039365 (Store (Con 1) (Con 0));
    SetLocal 1 0;
    Jump: 039368
  }
LocOp 039368:
  TraceOperation 039368 (Je [Var (Global 120),Con 18,Con 93] (Branch F (Dloc 039617)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (LogOr(Equal(MakeHiLo(b1,b2),18),Equal(MakeHiLo(b1,b2),93))) {
    TraceOperation 039375 (Jz (Var (Local 3)) (Branch F (Dloc 039617)));
    if (IsZero(GetLocal(3))) {
      TraceOperation 039379 (Jz (Var (Local 1)) (Branch T (Dloc 039432)));
      if (IsZero(GetLocal(1))) {
        Jump: 039432
      } else {
        TraceOperation 039382 (Je [Var (Local 1),Var (Global 119)] (Branch T (Dloc 039393)));
        Let b3 = M[009055];
        Let b4 = M[009056];
        if (Equal(GetLocal(1),MakeHiLo(b3,b4))) {
          Jump: 039393
        } else {
          TraceOperation 039386 (Jz (Var (Global 119)) (Branch F (Dloc 039432)));
          Let b5 = M[009055];
          Let b6 = M[009056];
          if (IsZero(MakeHiLo(b5,b6))) {
            TraceOperation 039389 (Jin (Var (Local 2)) (Var (Local 1)) (Branch T (Dloc 039432)));
            Let b7 = M[Offset(Offset(000741,Mul(GetLocal(2),9)),4)];
            if (Equal(GetLocal(1),Widen(b7))) {
              Jump: 039432
            } else {
              Jump: 039393
            }
          } else {
            Jump: 039432
          }
        }
      }
    } else {
      Jump: 039617
    }
  } else {
    Jump: 039617
  }
LocOp 039393:
  TraceOperation 039393 (Print "There is now a puddle in the bottom of the ");
  GamePrint "There is now a puddle in the bottom of the ";
  TraceOperation 039416 (Print_obj (Var (Local 1)));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),7)];
  Let b2 = M[Offset(Offset(Offset(000741,Mul(GetLocal(1),9)),7),1)];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  if (IsZeroByte(b3)) {
    GamePrint "";
    TraceOperation 039418 (Print ".");
    GamePrint ".";
    TraceOperation 039421 New_line;
    GamePrint "\n";
    TraceOperation 039422 (Call (Floc 030906) [Var (Global 118)] Sp);
    Let b4 = M[009053];
    Let b5 = M[009054];
    PushFrame 039422;
    SetLocal 1 MakeHiLo(b4,b5);
    JumpCall: 030906, #actuals: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
    TraceOperation 039418 (Print ".");
    GamePrint ".";
    TraceOperation 039421 New_line;
    GamePrint "\n";
    TraceOperation 039422 (Call (Floc 030906) [Var (Global 118)] Sp);
    Let b6 = M[009053];
    Let b7 = M[009054];
    PushFrame 039422;
    SetLocal 1 MakeHiLo(b6,b7);
    JumpCall: 030906, #actuals: 1
  }
LocReturn 039422:
  PushStack call_result;
  TraceOperation 039428 (Insert_obj (Var (Global 118)) (Var (Local 1)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),4)];
  if (IsZero(Widen(b3))) {
    SetByte Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),4) LoByte(GetLocal(1));
    Let b4 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),6)];
    SetByte Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),5) LoByte(Widen(b4));
    SetByte Offset(Offset(000741,Mul(GetLocal(1),9)),6) b2;
    TraceOperation 039431 Rtrue;
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  } else {
    Let b6 = M[Offset(Offset(000741,Mul(Widen(b3),9)),6)];
    if (Equal(Widen(b6),MakeHiLo(b1,b2))) {
      Let b7 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),5)];
      SetByte Offset(Offset(000741,Mul(Widen(b3),9)),6) LoByte(Widen(b7));
      SetByte Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),4) LoByte(GetLocal(1));
      Let b8 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),6)];
      SetByte Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),5) LoByte(Widen(b8));
      SetByte Offset(Offset(000741,Mul(GetLocal(1),9)),6) b2;
      TraceOperation 039431 Rtrue;
      PopFrame return_address_9;
      JumpReturn: return_address_9, result: 1
    } else {
      Error: unlink/loop
    }
  }
LocOp 039432:
  TraceOperation 039432 (Jz (Var (Global 119)) (Branch T (Dloc 039481)));
  Let b1 = M[009055];
  Let b2 = M[009056];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 039481
  } else {
    TraceOperation 039435 (Je [Var (Global 119),Con 236] (Branch T (Dloc 039481)));
    Let b3 = M[009055];
    Let b4 = M[009056];
    if (Equal(MakeHiLo(b3,b4),236)) {
      Jump: 039481
    } else {
      TraceOperation 039439 (Print "The water leaks out of the ");
      GamePrint "The water leaks out of the ";
      TraceOperation 039452 (Print_obj (Var (Global 119)));
      Let b5 = M[009055];
      Let b6 = M[009056];
      Let b7 = M[Offset(Offset(000741,Mul(MakeHiLo(b5,b6),9)),7)];
      Let b8 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b5,b6),9)),7),1)];
      Let b9 = M[Address(MakeHiLo(b7,b8))];
      if (IsZeroByte(b9)) {
        GamePrint "";
        TraceOperation 039454 (Print " and evaporates immediately.");
        GamePrint " and evaporates immediately.";
        TraceOperation 039473 New_line;
        GamePrint "\n";
        TraceOperation 039474 (Call (Floc 030906) [Var (Local 2)] Sp);
        PushFrame 039474;
        SetLocal 1 GetLocal(2);
        JumpCall: 030906, #actuals: 1
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b7,b8)),1));
        TraceOperation 039454 (Print " and evaporates immediately.");
        GamePrint " and evaporates immediately.";
        TraceOperation 039473 New_line;
        GamePrint "\n";
        TraceOperation 039474 (Call (Floc 030906) [Var (Local 2)] Sp);
        PushFrame 039474;
        SetLocal 1 GetLocal(2);
        JumpCall: 030906, #actuals: 1
      }
    }
  }
LocReturn 039474:
  PushStack call_result;
  TraceOperation 039480 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 039481:
  TraceOperation 039481 (Jin (Con 236) (Var (Global 111)) (Branch F (Dloc 039554)));
  Let b1 = M[009039];
  Let b2 = M[009040];
  Let b3 = M[002869];
  if (Equal(MakeHiLo(b1,b2),Widen(b3))) {
    TraceOperation 039486 (Test_attr (Con 236) (Con 11) (Branch T (Dloc 039509)));
    Let b4 = M[002866];
    if (TestBit(b4,4)) {
      Jump: 039509
    } else {
      TraceOperation 039490 (Print "The bottle is closed.");
      GamePrint "The bottle is closed.";
      TraceOperation 039501 New_line;
      GamePrint "\n";
      TraceOperation 039502 (Call (Floc 038192) [Con 236] Sp);
      PushFrame 039502;
      SetLocal 1 236;
      JumpCall: 038192, #actuals: 1
    }
  } else {
    Jump: 039554
  }
LocReturn 039502:
  PushStack call_result;
  TraceOperation 039508 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 039509:
  TraceOperation 039509 (Get_child (Con 236) Sp (Branch T (Dloc 039537)));
  Let b1 = M[002871];
  PushStack Widen(b1);
  if (IsZero(Widen(b1))) {
    TraceOperation 039513 (Insert_obj (Con 237) (Con 236));
    Let b2 = M[002878];
    if (IsZero(Widen(b2))) {
      SetByte 002878 236;
      Let b3 = M[002871];
      SetByte 002879 LoByte(Widen(b3));
      SetByte 002871 237;
      TraceOperation 039516 (Print_ret "The bottle is now full of water.");
      GamePrint "The bottle is now full of water.\n";
      PopFrame return_address_4;
      JumpReturn: return_address_4, result: 1
    } else {
      Let b5 = M[Offset(Offset(000741,Mul(Widen(b2),9)),6)];
      if (Equal(Widen(b5),237)) {
        Let b6 = M[002879];
        SetByte Offset(Offset(000741,Mul(Widen(b2),9)),6) LoByte(Widen(b6));
        SetByte 002878 236;
        Let b7 = M[002871];
        SetByte 002879 LoByte(Widen(b7));
        SetByte 002871 237;
        TraceOperation 039516 (Print_ret "The bottle is now full of water.");
        GamePrint "The bottle is now full of water.\n";
        PopFrame return_address_8;
        JumpReturn: return_address_8, result: 1
      } else {
        Error: unlink/loop
      }
    }
  } else {
    Jump: 039537
  }
--[298]--------------------------------------------------
LocRoutine 039538:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 13572;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 -18432;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 4410;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 8551;
        }
      }
    }
  }
  Jump: 039547
LocOp 039547:
  TraceOperation 039547 (Ret (Con 14956));
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 14956
--[299]--------------------------------------------------
LocRoutine 039592:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 -11421;
  }
  Jump: 039595
LocOp 039595:
  TraceOperation 039595 (Test_attr (Con 25) (Var (Global 21)) (Branch T (Dloc 039605)));
  Let b1 = M[008859];
  Let b2 = M[008860];
  Let b3 = M[Offset(000966,Div8(MakeHiLo(b1,b2)))];
  if (TestBit(b3,SevenMinus(LoByte(Mod(MakeHiLo(b1,b2),8))))) {
    Jump: 039605
  } else {
    TraceOperation 039599 (Inc (Var (Global 163)));
    Let b4 = M[009143];
    Let b5 = M[009144];
    if (IsZeroByte(b5)) {
      PopStack popped6;
      PushStack Add(popped6,1);
      TraceOperation 039601 (Dec_chk (Con 33) (Con 103) (Branch F (Dloc 044014)));
      Let b7 = M[008851];
      Let b8 = M[008852];
      if (LessThanEqual(MakeHiLo(b7,b8),103)) {
        SetByte 008851 HiByte(Sub(MakeHiLo(b7,b8),1));
        SetByte 008852 LoByte(Sub(MakeHiLo(b7,b8),1));
        TraceOperation 039606 Ret_popped;
        PopStack popped9;
        PopFrame return_address_10;
        JumpReturn: return_address_10, result: popped9
      } else {
        SetByte 008851 HiByte(Sub(MakeHiLo(b7,b8),1));
        SetByte 008852 LoByte(Sub(MakeHiLo(b7,b8),1));
        Jump: 044014
      }
    } else {
      if (LessThanByte(b5,16)) {
        SetLocal b5 Add(GetLocal(b5),1);
        TraceOperation 039601 (Dec_chk (Con 33) (Con 103) (Branch F (Dloc 044014)));
        Let b11 = M[008851];
        Let b12 = M[008852];
        if (LessThanEqual(MakeHiLo(b11,b12),103)) {
          SetByte 008851 HiByte(Sub(MakeHiLo(b11,b12),1));
          SetByte 008852 LoByte(Sub(MakeHiLo(b11,b12),1));
          TraceOperation 039606 Ret_popped;
          PopStack popped13;
          PopFrame return_address_14;
          JumpReturn: return_address_14, result: popped13
        } else {
          SetByte 008851 HiByte(Sub(MakeHiLo(b11,b12),1));
          SetByte 008852 LoByte(Sub(MakeHiLo(b11,b12),1));
          Jump: 044014
        }
      } else {
        Let b15 = M[Offset(008817,Mul(2,Widen(MinusByte(b5,16))))];
        Let b16 = M[Offset(Offset(008817,Mul(2,Widen(MinusByte(b5,16)))),1)];
        SetByte Offset(008817,Mul(2,Widen(MinusByte(b5,16)))) HiByte(Add(MakeHiLo(b15,b16),1));
        SetByte Offset(Offset(008817,Mul(2,Widen(MinusByte(b5,16)))),1) LoByte(Add(MakeHiLo(b15,b16),1));
        TraceOperation 039601 (Dec_chk (Con 33) (Con 103) (Branch F (Dloc 044014)));
        Let b17 = M[008851];
        Let b18 = M[008852];
        if (LessThanEqual(MakeHiLo(b17,b18),103)) {
          SetByte 008851 HiByte(Sub(MakeHiLo(b17,b18),1));
          SetByte 008852 LoByte(Sub(MakeHiLo(b17,b18),1));
          TraceOperation 039606 Ret_popped;
          PopStack popped19;
          PopFrame return_address_20;
          JumpReturn: return_address_20, result: popped19
        } else {
          SetByte 008851 HiByte(Sub(MakeHiLo(b17,b18),1));
          SetByte 008852 LoByte(Sub(MakeHiLo(b17,b18),1));
          Jump: 044014
        }
      }
    }
  }
--[300]--------------------------------------------------
LocRoutine 039618:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 8512;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 4718;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 -13389;
      }
    }
  }
  Jump: 039625
LocOp 039625:
  TraceOperation 039625 (Jin (Var (Global 238)) (Var (Global 134)) (Branch F (Dloc 039632)));
  Let b1 = M[009293];
  Let b2 = M[009294];
  Let b3 = M[009085];
  Let b4 = M[009086];
  Let b5 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),4)];
  if (Equal(MakeHiLo(b3,b4),Widen(b5))) {
    TraceOperation 039629 (Je [Var (Global 120),Con 63,Con 49] (Branch F (Dloc 039719)));
    Let b6 = M[009057];
    Let b7 = M[009058];
    if (LogOr(Equal(MakeHiLo(b6,b7),63),Equal(MakeHiLo(b6,b7),49))) {
      TraceOperation 039636 (Call (Floc 030906) [Con 237] Sp);
      PushFrame 039636;
      SetLocal 1 237;
      JumpCall: 030906, #actuals: 1
    } else {
      Jump: 039719
    }
  } else {
    Jump: 039632
  }
LocReturn 039636:
  PushStack call_result;
  TraceOperation 039642 (Jz (Var (Local 1)) (Branch T (Dloc 039678)));
  if (IsZero(GetLocal(1))) {
    Jump: 039678
  } else {
    TraceOperation 039645 (Print "There is now a puddle in the bottom of the ");
    GamePrint "There is now a puddle in the bottom of the ";
    TraceOperation 039668 (Print_obj (Var (Local 1)));
    Let b1 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),7)];
    Let b2 = M[Offset(Offset(Offset(000741,Mul(GetLocal(1),9)),7),1)];
    Let b3 = M[Address(MakeHiLo(b1,b2))];
    if (IsZeroByte(b3)) {
      GamePrint "";
      TraceOperation 039670 (Print ".");
      GamePrint ".";
      TraceOperation 039673 New_line;
      GamePrint "\n";
      TraceOperation 039674 (Insert_obj (Con 237) (Var (Local 1)));
      Let b4 = M[002878];
      if (IsZero(Widen(b4))) {
        SetByte 002878 LoByte(GetLocal(1));
        Let b5 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),6)];
        SetByte 002879 LoByte(Widen(b5));
        SetByte Offset(Offset(000741,Mul(GetLocal(1),9)),6) 237;
        TraceOperation 039677 Rtrue;
        PopFrame return_address_6;
        JumpReturn: return_address_6, result: 1
      } else {
        Let b7 = M[Offset(Offset(000741,Mul(Widen(b4),9)),6)];
        if (Equal(Widen(b7),237)) {
          Let b8 = M[002879];
          SetByte Offset(Offset(000741,Mul(Widen(b4),9)),6) LoByte(Widen(b8));
          SetByte 002878 LoByte(GetLocal(1));
          Let b9 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),6)];
          SetByte 002879 LoByte(Widen(b9));
          SetByte Offset(Offset(000741,Mul(GetLocal(1),9)),6) 237;
          TraceOperation 039677 Rtrue;
          PopFrame return_address_10;
          JumpReturn: return_address_10, result: 1
        } else {
          Error: unlink/loop
        }
      }
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
      TraceOperation 039670 (Print ".");
      GamePrint ".";
      TraceOperation 039673 New_line;
      GamePrint "\n";
      TraceOperation 039674 (Insert_obj (Con 237) (Var (Local 1)));
      Let b11 = M[002878];
      if (IsZero(Widen(b11))) {
        SetByte 002878 LoByte(GetLocal(1));
        Let b12 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),6)];
        SetByte 002879 LoByte(Widen(b12));
        SetByte Offset(Offset(000741,Mul(GetLocal(1),9)),6) 237;
        TraceOperation 039677 Rtrue;
        PopFrame return_address_13;
        JumpReturn: return_address_13, result: 1
      } else {
        Let b14 = M[Offset(Offset(000741,Mul(Widen(b11),9)),6)];
        if (Equal(Widen(b14),237)) {
          Let b15 = M[002879];
          SetByte Offset(Offset(000741,Mul(Widen(b11),9)),6) LoByte(Widen(b15));
          SetByte 002878 LoByte(GetLocal(1));
          Let b16 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),6)];
          SetByte 002879 LoByte(Widen(b16));
          SetByte Offset(Offset(000741,Mul(GetLocal(1),9)),6) 237;
          TraceOperation 039677 Rtrue;
          PopFrame return_address_17;
          JumpReturn: return_address_17, result: 1
        } else {
          Error: unlink/loop
        }
      }
    }
  }
LocOp 039678:
  TraceOperation 039678 (Print "The water spills to the floor and evaporates immediately.");
  GamePrint "The water spills to the floor and evaporates immediately.";
  TraceOperation 039711 New_line;
  GamePrint "\n";
  TraceOperation 039712 (Call (Floc 030906) [Con 237] Sp);
  PushFrame 039712;
  SetLocal 1 237;
  JumpCall: 030906, #actuals: 1
LocReturn 039712:
  PushStack call_result;
  TraceOperation 039718 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 039719:
  TraceOperation 039719 (Je [Var (Global 120),Con 127] (Branch F Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),127)) {
    TraceOperation 039723 (Print "The water splashes on the walls and evaporates immediately.");
    GamePrint "The water splashes on the walls and evaporates immediately.";
    TraceOperation 039758 New_line;
    GamePrint "\n";
    TraceOperation 039759 (Call (Floc 030906) [Con 237] Sp);
    PushFrame 039759;
    SetLocal 1 237;
    JumpCall: 030906, #actuals: 1
  } else {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  }
LocReturn 039759:
  PushStack call_result;
  TraceOperation 039765 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[301]--------------------------------------------------
LocRoutine 039766:
  MakeRoutineFrame 0;
  Jump: 039767
LocOp 039767:
  TraceOperation 039767 (Je [Var (Global 120),Con 35,Con 43] (Branch F (Dloc 039787)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (LogOr(Equal(MakeHiLo(b1,b2),35),Equal(MakeHiLo(b1,b2),43))) {
    TraceOperation 039773 (Store (Con 67) (Con 1));
    SetByte 008919 0;
    SetByte 008920 1;
    TraceOperation 039776 (Call (Floc 038394) [Con 235,Con -25688,Con -25667] Sp);
    PushFrame 039776;
    SetLocal 1 235;
    SetLocal 2 -25688;
    SetLocal 3 -25667;
    JumpCall: 038394, #actuals: 3
  } else {
    Jump: 039787
  }
LocReturn 039776:
  PushStack call_result;
  TraceOperation 039786 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 039787:
  TraceOperation 039787 (Je [Var (Global 120),Con 56] (Branch F (Dloc 039831)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),56)) {
    TraceOperation 039791 (Jz (Var (Global 51)) (Branch F (Dloc 039831)));
    Let b3 = M[008919];
    Let b4 = M[008920];
    if (IsZero(MakeHiLo(b3,b4))) {
      TraceOperation 039794 (Print_ret "The window is slightly ajar, but not enough to allow entry.");
      GamePrint "The window is slightly ajar, but not enough to allow entry.\n";
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 1
    } else {
      Jump: 039831
    }
  } else {
    Jump: 039831
  }
LocOp 039831:
  TraceOperation 039831 (Je [Var (Global 120),Con 34,Con 25,Con 137] (Branch F (Dloc 039856)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),34),Equal(MakeHiLo(b1,b2),25)),Equal(MakeHiLo(b1,b2),137))) {
    TraceOperation 039838 (Je [Var (Global 0),Con 203] (Branch F (Dloc 039849)));
    Let b3 = M[008817];
    Let b4 = M[008818];
    if (Equal(MakeHiLo(b3,b4),203)) {
      TraceOperation 039842 (Call (Floc 038000) [Con 30] Sp);
      PushFrame 039842;
      SetLocal 1 30;
      JumpCall: 038000, #actuals: 1
    } else {
      Jump: 039849
    }
  } else {
    Jump: 039856
  }
LocReturn 039842:
  PushStack call_result;
  TraceOperation 039848 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 039849:
  TraceOperation 039849 (Call (Floc 038000) [Con 29] Sp);
  PushFrame 039849;
  SetLocal 1 29;
  JumpCall: 038000, #actuals: 1
LocReturn 039849:
  PushStack call_result;
  TraceOperation 039855 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 039856:
  TraceOperation 039856 (Je [Var (Global 120),Con 57] (Branch F Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),57)) {
    TraceOperation 039860 (Print "You can see ");
    GamePrint "You can see ";
    TraceOperation 039867 (Je [Var (Global 0),Con 203] (Branch F (Dloc 039894)));
    Let b3 = M[008817];
    Let b4 = M[008818];
    if (Equal(MakeHiLo(b3,b4),203)) {
      TraceOperation 039871 (Print_ret "a clear area leading towards a forest.");
      GamePrint "a clear area leading towards a forest.\n";
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 1
    } else {
      Jump: 039894
    }
  } else {
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 0
  }
LocOp 039894:
  TraceOperation 039894 (Print_ret "what appears to be a kitchen.");
  GamePrint "what appears to be a kitchen.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[302]--------------------------------------------------
LocRoutine 039912:
  MakeRoutineFrame 0;
  Jump: 039913
LocOp 039913:
  TraceOperation 039913 (Je [Var (Global 120),Con 111] (Branch F (Dloc 039948)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),111)) {
    TraceOperation 039917 (Print "The spirits jeer loudly and ignore you.");
    GamePrint "The spirits jeer loudly and ignore you.";
    TraceOperation 039942 New_line;
    GamePrint "\n";
    TraceOperation 039943 (Store (Con 124) (Con 0));
    SetByte 009033 0;
    SetByte 009034 0;
    TraceOperation 039946 (Ret (Var (Global 108)));
    Let b3 = M[009033];
    Let b4 = M[009034];
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: MakeHiLo(b3,b4)
  } else {
    Jump: 039948
  }
LocOp 039948:
  TraceOperation 039948 (Je [Var (Global 120),Con 58] (Branch F (Dloc 039979)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),58)) {
    TraceOperation 039952 (Print_ret "Only the ceremony itself has any effect.");
    GamePrint "Only the ceremony itself has any effect.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 039979
  }
LocOp 039979:
  TraceOperation 039979 (Je [Var (Global 120),Con 42,Con 19] (Branch F (Dloc 040020)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (LogOr(Equal(MakeHiLo(b1,b2),42),Equal(MakeHiLo(b1,b2),19))) {
    TraceOperation 039985 (Je [Var (Global 118),Con 233] (Branch F (Dloc 040020)));
    Let b3 = M[009053];
    Let b4 = M[009054];
    if (Equal(MakeHiLo(b3,b4),233)) {
      TraceOperation 039989 (Print_ret "How can you attack a spirit with material objects?");
      GamePrint "How can you attack a spirit with material objects?\n";
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 1
    } else {
      Jump: 040020
    }
  } else {
    Jump: 040020
  }
LocOp 040020:
  TraceOperation 040020 (Print_ret "You seem unable to interact with these spirits.");
  GamePrint "You seem unable to interact with these spirits.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[303]--------------------------------------------------
LocRoutine 040050:
  MakeRoutineFrame 0;
  Jump: 040051
LocOp 040051:
  TraceOperation 040051 (Je [Var (Global 120),Con 105] (Branch F (Dloc 040110)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),105)) {
    TraceOperation 040055 (Jz (Var (Global 50)) (Branch T (Dloc 040068)));
    Let b3 = M[008917];
    Let b4 = M[008918];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 040068
    } else {
      TraceOperation 040058 (Call (Floc 020076) [Var (Global 52)] Sp);
      Let b5 = M[008921];
      Let b6 = M[008922];
      PushFrame 040058;
      SetLocal 1 MakeHiLo(b5,b6);
      JumpCall: 020076, #actuals: 1
    }
  } else {
    Jump: 040110
  }
LocReturn 040058:
  PushStack call_result;
  TraceOperation 040064 (Print_paddr (Var Sp));
  PopStack popped1;
  GamePrint GetText(PackedAddress Z3(popped1));
  TraceOperation 040066 New_line;
  GamePrint "\n";
  TraceOperation 040067 Rtrue;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: 1
LocOp 040068:
  TraceOperation 040068 (Insert_obj (Con 227) (Con 226));
  Let b1 = M[002788];
  if (IsZero(Widen(b1))) {
    SetByte 002788 226;
    Let b2 = M[002781];
    SetByte 002789 LoByte(Widen(b2));
    SetByte 002781 227;
    TraceOperation 040071 (Insert_obj (Con 229) (Con 228));
    Let b3 = M[002806];
    if (IsZero(Widen(b3))) {
      SetByte 002806 228;
      Let b4 = M[002799];
      SetByte 002807 LoByte(Widen(b4));
      SetByte 002799 229;
      TraceOperation 040074 (Store (Con 66) (Con 1));
      SetByte 008917 0;
      SetByte 008918 1;
      TraceOperation 040077 (Call (Floc 038192) [Con 227] Sp);
      PushFrame 040077;
      SetLocal 1 227;
      JumpCall: 038192, #actuals: 1
    } else {
      Let b5 = M[Offset(Offset(000741,Mul(Widen(b3),9)),6)];
      if (Equal(Widen(b5),229)) {
        Let b6 = M[002807];
        SetByte Offset(Offset(000741,Mul(Widen(b3),9)),6) LoByte(Widen(b6));
        SetByte 002806 228;
        Let b7 = M[002799];
        SetByte 002807 LoByte(Widen(b7));
        SetByte 002799 229;
        TraceOperation 040074 (Store (Con 66) (Con 1));
        SetByte 008917 0;
        SetByte 008918 1;
        TraceOperation 040077 (Call (Floc 038192) [Con 227] Sp);
        PushFrame 040077;
        SetLocal 1 227;
        JumpCall: 038192, #actuals: 1
      } else {
        Error: unlink/loop
      }
    }
  } else {
    Let b8 = M[Offset(Offset(000741,Mul(Widen(b1),9)),6)];
    if (Equal(Widen(b8),227)) {
      Let b9 = M[002789];
      SetByte Offset(Offset(000741,Mul(Widen(b1),9)),6) LoByte(Widen(b9));
      SetByte 002788 226;
      Let b10 = M[002781];
      SetByte 002789 LoByte(Widen(b10));
      SetByte 002781 227;
      TraceOperation 040071 (Insert_obj (Con 229) (Con 228));
      Let b11 = M[002806];
      if (IsZero(Widen(b11))) {
        SetByte 002806 228;
        Let b12 = M[002799];
        SetByte 002807 LoByte(Widen(b12));
        SetByte 002799 229;
        TraceOperation 040074 (Store (Con 66) (Con 1));
        SetByte 008917 0;
        SetByte 008918 1;
        TraceOperation 040077 (Call (Floc 038192) [Con 227] Sp);
        PushFrame 040077;
        SetLocal 1 227;
        JumpCall: 038192, #actuals: 1
      } else {
        Let b13 = M[Offset(Offset(000741,Mul(Widen(b11),9)),6)];
        if (Equal(Widen(b13),229)) {
          Let b14 = M[002807];
          SetByte Offset(Offset(000741,Mul(Widen(b11),9)),6) LoByte(Widen(b14));
          SetByte 002806 228;
          Let b15 = M[002799];
          SetByte 002807 LoByte(Widen(b15));
          SetByte 002799 229;
          TraceOperation 040074 (Store (Con 66) (Con 1));
          SetByte 008917 0;
          SetByte 008918 1;
          TraceOperation 040077 (Call (Floc 038192) [Con 227] Sp);
          PushFrame 040077;
          SetLocal 1 227;
          JumpCall: 038192, #actuals: 1
        } else {
          Error: unlink/loop
        }
      }
    } else {
      Error: unlink/loop
    }
  }
LocReturn 040077:
  PushStack call_result;
  TraceOperation 040083 (Print_ret "The basket is raised to the top of the shaft.");
  GamePrint "The basket is raised to the top of the shaft.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 040110:
  TraceOperation 040110 (Je [Var (Global 120),Con 84] (Branch F (Dloc 040202)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),84)) {
    TraceOperation 040115 (Jz (Var (Global 50)) (Branch F (Dloc 040128)));
    Let b3 = M[008917];
    Let b4 = M[008918];
    if (IsZero(MakeHiLo(b3,b4))) {
      TraceOperation 040118 (Call (Floc 020076) [Var (Global 52)] Sp);
      Let b5 = M[008921];
      Let b6 = M[008922];
      PushFrame 040118;
      SetLocal 1 MakeHiLo(b5,b6);
      JumpCall: 020076, #actuals: 1
    } else {
      Jump: 040128
    }
  } else {
    Jump: 040202
  }
LocReturn 040118:
  PushStack call_result;
  TraceOperation 040124 (Print_paddr (Var Sp));
  PopStack popped1;
  GamePrint GetText(PackedAddress Z3(popped1));
  TraceOperation 040126 New_line;
  GamePrint "\n";
  TraceOperation 040127 Rtrue;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: 1
LocOp 040128:
  TraceOperation 040128 (Insert_obj (Con 227) (Con 228));
  Let b1 = M[002788];
  if (IsZero(Widen(b1))) {
    SetByte 002788 228;
    Let b2 = M[002799];
    SetByte 002789 LoByte(Widen(b2));
    SetByte 002799 227;
    TraceOperation 040131 (Insert_obj (Con 229) (Con 226));
    Let b3 = M[002806];
    if (IsZero(Widen(b3))) {
      SetByte 002806 226;
      Let b4 = M[002781];
      SetByte 002807 LoByte(Widen(b4));
      SetByte 002781 229;
      TraceOperation 040134 (Call (Floc 038192) [Con 229] Sp);
      PushFrame 040134;
      SetLocal 1 229;
      JumpCall: 038192, #actuals: 1
    } else {
      Let b5 = M[Offset(Offset(000741,Mul(Widen(b3),9)),6)];
      if (Equal(Widen(b5),229)) {
        Let b6 = M[002807];
        SetByte Offset(Offset(000741,Mul(Widen(b3),9)),6) LoByte(Widen(b6));
        SetByte 002806 226;
        Let b7 = M[002781];
        SetByte 002807 LoByte(Widen(b7));
        SetByte 002781 229;
        TraceOperation 040134 (Call (Floc 038192) [Con 229] Sp);
        PushFrame 040134;
        SetLocal 1 229;
        JumpCall: 038192, #actuals: 1
      } else {
        Error: unlink/loop
      }
    }
  } else {
    Let b8 = M[Offset(Offset(000741,Mul(Widen(b1),9)),6)];
    if (Equal(Widen(b8),227)) {
      Let b9 = M[002789];
      SetByte Offset(Offset(000741,Mul(Widen(b1),9)),6) LoByte(Widen(b9));
      SetByte 002788 228;
      Let b10 = M[002799];
      SetByte 002789 LoByte(Widen(b10));
      SetByte 002799 227;
      TraceOperation 040131 (Insert_obj (Con 229) (Con 226));
      Let b11 = M[002806];
      if (IsZero(Widen(b11))) {
        SetByte 002806 226;
        Let b12 = M[002781];
        SetByte 002807 LoByte(Widen(b12));
        SetByte 002781 229;
        TraceOperation 040134 (Call (Floc 038192) [Con 229] Sp);
        PushFrame 040134;
        SetLocal 1 229;
        JumpCall: 038192, #actuals: 1
      } else {
        Let b13 = M[Offset(Offset(000741,Mul(Widen(b11),9)),6)];
        if (Equal(Widen(b13),229)) {
          Let b14 = M[002807];
          SetByte Offset(Offset(000741,Mul(Widen(b11),9)),6) LoByte(Widen(b14));
          SetByte 002806 226;
          Let b15 = M[002781];
          SetByte 002807 LoByte(Widen(b15));
          SetByte 002781 229;
          TraceOperation 040134 (Call (Floc 038192) [Con 229] Sp);
          PushFrame 040134;
          SetLocal 1 229;
          JumpCall: 038192, #actuals: 1
        } else {
          Error: unlink/loop
        }
      }
    } else {
      Error: unlink/loop
    }
  }
LocReturn 040134:
  PushStack call_result;
  TraceOperation 040140 (Print "The basket is lowered to the bottom of the shaft.");
  GamePrint "The basket is lowered to the bottom of the shaft.";
  TraceOperation 040169 New_line;
  GamePrint "\n";
  TraceOperation 040170 (Store (Con 66) (Con 0));
  SetByte 008917 0;
  SetByte 008918 0;
  TraceOperation 040173 (Jz (Var (Global 66)) (Branch T Dtrue));
  Let b1 = M[008949];
  Let b2 = M[008950];
  if (IsZero(MakeHiLo(b1,b2))) {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    TraceOperation 040176 (Call (Floc 027746) [Var (Global 0)] (Global 66));
    Let b4 = M[008817];
    Let b5 = M[008818];
    PushFrame 040176;
    SetLocal 1 MakeHiLo(b4,b5);
    JumpCall: 027746, #actuals: 1
  }
LocReturn 040176:
  SetByte 008949 HiByte(call_result);
  SetByte 008950 LoByte(call_result);
  TraceOperation 040182 (Jz (Var (Global 66)) (Branch F Dtrue));
  Let b1 = M[008949];
  Let b2 = M[008950];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 040185 (Print "It is now pitch black.");
    GamePrint "It is now pitch black.";
    TraceOperation 040200 New_line;
    GamePrint "\n";
    TraceOperation 040201 Rtrue;
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 1
  }
LocOp 040202:
  TraceOperation 040202 (Je [Var (Global 118),Con 229] (Branch T (Dloc 040210)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  if (Equal(MakeHiLo(b1,b2),229)) {
    Jump: 040210
  } else {
    TraceOperation 040206 (Je [Var (Global 119),Con 229] (Branch F (Dloc 040233)));
    Let b3 = M[009055];
    Let b4 = M[009056];
    if (Equal(MakeHiLo(b3,b4),229)) {
      Jump: 040210
    } else {
      Jump: 040233
    }
  }
LocOp 040210:
  TraceOperation 040210 (Print_ret "The basket is at the other end of the chain.");
  GamePrint "The basket is at the other end of the chain.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 040233:
  TraceOperation 040233 (Je [Var (Global 120),Con 93] (Branch F Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),93)) {
    TraceOperation 040237 (Je [Var (Global 118),Con 227,Con 229] (Branch F Dfalse));
    Let b3 = M[009053];
    Let b4 = M[009054];
    if (LogOr(Equal(MakeHiLo(b3,b4),227),Equal(MakeHiLo(b3,b4),229))) {
      TraceOperation 040243 (Print_ret "The cage is securely fastened to the iron chain.");
      GamePrint "The cage is securely fastened to the iron chain.\n";
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 1
    } else {
      PopFrame return_address_6;
      JumpReturn: return_address_6, result: 0
    }
  } else {
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 0
  }
--[304]--------------------------------------------------
LocRoutine 040272:
  MakeRoutineFrame 0;
  Jump: 040273
LocOp 040273:
  TraceOperation 040273 (Je [Var (Global 120),Con 111] (Branch F (Dloc 040288)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),111)) {
    TraceOperation 040277 (Call (Floc 040406) [Con 6] Sp);
    PushFrame 040277;
    SetLocal 1 6;
    JumpCall: 040406, #actuals: 1
  } else {
    Jump: 040288
  }
LocReturn 040277:
  PushStack call_result;
  TraceOperation 040283 (Store (Con 124) (Con 0));
  SetByte 009033 0;
  SetByte 009034 0;
  TraceOperation 040286 (Ret (Var (Global 108)));
  Let b1 = M[009033];
  Let b2 = M[009034];
  PopFrame return_address_3;
  JumpReturn: return_address_3, result: MakeHiLo(b1,b2)
LocOp 040288:
  TraceOperation 040288 (Je [Var (Global 120),Con 42,Con 19,Con 93] (Branch F Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),42),Equal(MakeHiLo(b1,b2),19)),Equal(MakeHiLo(b1,b2),93))) {
    TraceOperation 040295 (Get_parent (Con 189) Sp);
    Let b3 = M[002446];
    PushStack Widen(b3);
    TraceOperation 040298 (Je [Var Sp,Var (Global 111),Var (Global 0)] (Branch F (Dloc 040331)));
    PopStack popped4;
    Let b5 = M[009039];
    Let b6 = M[009040];
    Let b7 = M[008817];
    Let b8 = M[008818];
    if (LogOr(Equal(popped4,MakeHiLo(b5,b6)),Equal(popped4,MakeHiLo(b7,b8)))) {
      TraceOperation 040304 (Print_ret "You can't reach him; he's on the ceiling.");
      GamePrint "You can't reach him; he's on the ceiling.\n";
      PopFrame return_address_9;
      JumpReturn: return_address_9, result: 1
    } else {
      Jump: 040331
    }
  } else {
    PopFrame return_address_10;
    JumpReturn: return_address_10, result: 0
  }
LocOp 040331:
  TraceOperation 040331 (Call (Floc 040338) [] Sp);
  PushFrame 040331;
  JumpCall: 040338, #actuals: 0
LocReturn 040331:
  PushStack call_result;
  TraceOperation 040336 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[305]--------------------------------------------------
LocRoutine 040338:
  MakeRoutineFrame 0;
  Jump: 040339
LocOp 040339:
  TraceOperation 040339 (Call (Floc 040406) [Con 4] Sp);
  PushFrame 040339;
  SetLocal 1 4;
  JumpCall: 040406, #actuals: 1
LocReturn 040339:
  PushStack call_result;
  TraceOperation 040345 New_line;
  GamePrint "\n";
  TraceOperation 040346 (Print "The bat grabs you by the scruff of your neck and lifts you away....");
  GamePrint "The bat grabs you by the scruff of your neck and lifts you away....";
  TraceOperation 040385 New_line;
  GamePrint "\n";
  TraceOperation 040386 New_line;
  GamePrint "\n";
  TraceOperation 040387 (Call (Floc 020076) [Var (Global 49)] Sp);
  Let b1 = M[008915];
  Let b2 = M[008916];
  PushFrame 040387;
  SetLocal 1 MakeHiLo(b1,b2);
  JumpCall: 020076, #actuals: 1
LocReturn 040387:
  PushStack call_result;
  TraceOperation 040393 (Call (Floc 037558) [Var Sp,Con 0] Sp);
  PopStack popped1;
  PushFrame 040393;
  SetLocal 1 popped1;
  SetLocal 2 0;
  JumpCall: 037558, #actuals: 2
LocReturn 040393:
  PushStack call_result;
  TraceOperation 040400 (Call (Floc 035976) [] Sp);
  PushFrame 040400;
  JumpCall: 035976, #actuals: 0
LocReturn 040400:
  PushStack call_result;
  TraceOperation 040405 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[306]--------------------------------------------------
LocRoutine 040406:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 040409
LocOp 040409:
  TraceOperation 040409 (Dec_chk (Con 1) (Con 1) (Branch F (Dloc 040416)));
  if (LessThanEqual(GetLocal(1),1)) {
    SetLocal 1 Sub(GetLocal(1),1);
    TraceOperation 040413 (Jump 040429);
    Jump: 040429
  } else {
    SetLocal 1 Sub(GetLocal(1),1);
    Jump: 040416
  }
LocOp 040416:
  TraceOperation 040416 (Print "    Fweep!");
  GamePrint "    Fweep!";
  TraceOperation 040425 New_line;
  GamePrint "\n";
  TraceOperation 040426 (Jump 040409);
  Jump: 040409
LocOp 040429:
  TraceOperation 040429 New_line;
  GamePrint "\n";
  TraceOperation 040430 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[307]--------------------------------------------------
LocRoutine 040432:
  MakeRoutineFrame 0;
  Jump: 040433
LocOp 040433:
  TraceOperation 040433 (Je [Var (Global 120),Con 109] (Branch F Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),109)) {
    TraceOperation 040437 (Je [Var (Global 0),Con 23167] (Branch F (Dloc 040446)));
    Let b3 = M[008817];
    Let b4 = M[008818];
    if (Equal(MakeHiLo(b3,b4),23167)) {
      TraceOperation 040443 (Jz (Var (Global 145)) (Branch T Dfalse));
      Let b5 = M[009107];
      Let b6 = M[009108];
      if (IsZero(MakeHiLo(b5,b6))) {
        PopFrame return_address_7;
        JumpReturn: return_address_7, result: 0
      } else {
        Jump: 040446
      }
    } else {
      Jump: 040446
    }
  } else {
    PopFrame return_address_8;
    JumpReturn: return_address_8, result: 0
  }
LocOp 040446:
  TraceOperation 040446 (Print_ret "Ding, dong.");
  GamePrint "Ding, dong.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[308]--------------------------------------------------
LocRoutine 040458:
  MakeRoutineFrame 0;
  Jump: 040459
LocOp 040459:
  TraceOperation 040459 (Je [Var (Global 120),Con 93] (Branch F (Dloc 040486)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),93)) {
    TraceOperation 040463 (Print_ret "The bell is very hot and cannot be taken.");
    GamePrint "The bell is very hot and cannot be taken.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 040486
  }
LocOp 040486:
  TraceOperation 040486 (Je [Var (Global 120),Con 110] (Branch T (Dloc 040499)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),110)) {
    Jump: 040499
  } else {
    TraceOperation 040490 (Je [Var (Global 120),Con 109] (Branch F (Dloc 040573)));
    Let b3 = M[009057];
    Let b4 = M[009058];
    if (Equal(MakeHiLo(b3,b4),109)) {
      TraceOperation 040495 (Jz (Var (Global 119)) (Branch T (Dloc 040573)));
      Let b5 = M[009055];
      Let b6 = M[009056];
      if (IsZero(MakeHiLo(b5,b6))) {
        Jump: 040573
      } else {
        Jump: 040499
      }
    } else {
      Jump: 040573
    }
  }
LocOp 040499:
  TraceOperation 040499 (Test_attr (Var (Global 119)) (Con 26) (Branch F (Dloc 040531)));
  Let b1 = M[009055];
  Let b2 = M[009056];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),3)];
  if (TestBit(b3,5)) {
    TraceOperation 040503 (Print "The ");
    GamePrint "The ";
    TraceOperation 040506 (Print_obj (Var (Global 119)));
    Let b4 = M[009055];
    Let b5 = M[009056];
    Let b6 = M[Offset(Offset(000741,Mul(MakeHiLo(b4,b5),9)),7)];
    Let b7 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b4,b5),9)),7),1)];
    Let b8 = M[Address(MakeHiLo(b6,b7))];
    if (IsZeroByte(b8)) {
      GamePrint "";
      TraceOperation 040508 (Print " burns and is consumed.");
      GamePrint " burns and is consumed.";
      TraceOperation 040523 New_line;
      GamePrint "\n";
      TraceOperation 040524 (Call (Floc 030906) [Var (Global 119)] Sp);
      Let b9 = M[009055];
      Let b10 = M[009056];
      PushFrame 040524;
      SetLocal 1 MakeHiLo(b9,b10);
      JumpCall: 030906, #actuals: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b6,b7)),1));
      TraceOperation 040508 (Print " burns and is consumed.");
      GamePrint " burns and is consumed.";
      TraceOperation 040523 New_line;
      GamePrint "\n";
      TraceOperation 040524 (Call (Floc 030906) [Var (Global 119)] Sp);
      Let b11 = M[009055];
      Let b12 = M[009056];
      PushFrame 040524;
      SetLocal 1 MakeHiLo(b11,b12);
      JumpCall: 030906, #actuals: 1
    }
  } else {
    Jump: 040531
  }
LocReturn 040524:
  PushStack call_result;
  TraceOperation 040530 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 040531:
  TraceOperation 040531 (Je [Var (Global 119),Con 1] (Branch F (Dloc 040552)));
  Let b1 = M[009055];
  Let b2 = M[009056];
  if (Equal(MakeHiLo(b1,b2),1)) {
    TraceOperation 040535 (Print_ret "The bell is too hot to touch.");
    GamePrint "The bell is too hot to touch.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 040552
  }
LocOp 040552:
  TraceOperation 040552 (Print_ret "The heat from the bell is too intense.");
  GamePrint "The heat from the bell is too intense.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 040573:
  TraceOperation 040573 (Je [Var (Global 120),Con 97] (Branch F (Dloc 040621)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),97)) {
    TraceOperation 040577 (Call (Floc 030906) [Var (Global 118)] Sp);
    Let b3 = M[009053];
    Let b4 = M[009054];
    PushFrame 040577;
    SetLocal 1 MakeHiLo(b3,b4);
    JumpCall: 030906, #actuals: 1
  } else {
    Jump: 040621
  }
LocReturn 040577:
  PushStack call_result;
  TraceOperation 040583 (Print "The water cools the bell and is evaporated.");
  GamePrint "The water cools the bell and is evaporated.";
  TraceOperation 040606 New_line;
  GamePrint "\n";
  TraceOperation 040607 (Call (Floc 021618) [Con 23666,Con 0] Sp);
  PushFrame 040607;
  SetLocal 1 23666;
  SetLocal 2 0;
  JumpCall: 021618, #actuals: 2
LocReturn 040607:
  PushStack call_result;
  TraceOperation 040615 (Call (Floc 047332) [] Sp);
  PushFrame 040615;
  JumpCall: 047332, #actuals: 0
LocReturn 040615:
  PushStack call_result;
  TraceOperation 040620 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 040621:
  TraceOperation 040621 (Je [Var (Global 120),Con 109] (Branch F Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),109)) {
    TraceOperation 040625 (Print_ret "The bell is too hot to reach.");
    GamePrint "The bell is too hot to reach.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 0
  }
--[309]--------------------------------------------------
LocRoutine 040642:
  MakeRoutineFrame 0;
  Jump: 040643
LocOp 040643:
  TraceOperation 040643 (Je [Var (Global 120),Con 43] (Branch F (Dloc 040672)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),43)) {
    TraceOperation 040647 (Print_ret "The windows are boarded and can't be opened.");
    GamePrint "The windows are boarded and can't be opened.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 040672
  }
LocOp 040672:
  TraceOperation 040672 (Je [Var (Global 120),Con 42] (Branch F Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),42)) {
    TraceOperation 040676 (Print_ret "You can't break the windows open.");
    GamePrint "You can't break the windows open.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 0
  }
--[310]--------------------------------------------------
LocRoutine 040696:
  MakeRoutineFrame 0;
  Jump: 040697
LocOp 040697:
  TraceOperation 040697 (Je [Var (Global 120),Con 93] (Branch F Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),93)) {
    TraceOperation 040701 (Print_ret "The nails, deeply imbedded in the door, cannot be removed.");
    GamePrint "The nails, deeply imbedded in the door, cannot be removed.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 0
  }
--[311]--------------------------------------------------
LocRoutine 040734:
  MakeRoutineFrame 0;
  Jump: 040735
LocOp 040735:
  TraceOperation 040735 (Je [Var (Global 120),Con 34] (Branch F Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),34)) {
    TraceOperation 040739 (Print_ret "You can't fit through the crack.");
    GamePrint "You can't fit through the crack.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 0
  }
--[312]--------------------------------------------------
LocRoutine 040752:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 040755
LocOp 040755:
  TraceOperation 040755 (Je [Var (Local 1),Con 3] (Branch F (Dloc 040905)));
  if (Equal(GetLocal(1),3)) {
    TraceOperation 040760 (Print "You are in the kitchen of the white house. A table seems to have been used recently for the preparation of food. A passage leads to the west and a dark staircase can be seen leading upward. A dark chimney leads down and to the east is a small window which is ");
    GamePrint "You are in the kitchen of the white house. A table seems to have been used recently for the preparation of food. A passage leads to the west and a dark staircase can be seen leading upward. A dark chimney leads down and to the east is a small window which is ";
    TraceOperation 040885 (Test_attr (Con 235) (Con 11) (Branch F (Dloc 040894)));
    Let b1 = M[002857];
    if (TestBit(b1,4)) {
      TraceOperation 040889 (Print_ret "open.");
      GamePrint "open.\n";
      PopFrame return_address_2;
      JumpReturn: return_address_2, result: 1
    } else {
      Jump: 040894
    }
  } else {
    Jump: 040905
  }
LocOp 040894:
  TraceOperation 040894 (Print_ret "slightly ajar.");
  GamePrint "slightly ajar.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 040905:
  TraceOperation 040905 (Je [Var (Local 1),Con 1] (Branch F Dfalse));
  if (Equal(GetLocal(1),1)) {
    TraceOperation 040909 (Je [Var (Global 120),Con 30] (Branch F (Dloc 040924)));
    Let b1 = M[009057];
    Let b2 = M[009058];
    if (Equal(MakeHiLo(b1,b2),30)) {
      TraceOperation 040913 (Je [Var (Global 118),Con 73] (Branch F (Dloc 040924)));
      Let b3 = M[009053];
      Let b4 = M[009054];
      if (Equal(MakeHiLo(b3,b4),73)) {
        TraceOperation 040917 (Call (Floc 038000) [Con 23] Sp);
        PushFrame 040917;
        SetLocal 1 23;
        JumpCall: 038000, #actuals: 1
      } else {
        Jump: 040924
      }
    } else {
      Jump: 040924
    }
  } else {
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 0
  }
LocReturn 040917:
  PushStack call_result;
  TraceOperation 040923 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 040924:
  TraceOperation 040924 (Je [Var (Global 120),Con 30] (Branch F Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),30)) {
    TraceOperation 040928 (Je [Var (Global 118),Con 73] (Branch F Dfalse));
    Let b3 = M[009053];
    Let b4 = M[009054];
    if (Equal(MakeHiLo(b3,b4),73)) {
      TraceOperation 040932 (Print_ret "There are no stairs leading down.");
      GamePrint "There are no stairs leading down.\n";
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 1
    } else {
      PopFrame return_address_6;
      JumpReturn: return_address_6, result: 0
    }
  } else {
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 0
  }
--[313]--------------------------------------------------
LocRoutine 040950:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 040953
LocOp 040953:
  TraceOperation 040953 (Je [Var (Local 1),Con 1] (Branch F Dfalse));
  if (Equal(GetLocal(1),1)) {
    TraceOperation 040957 (Je [Var (Global 120),Con 54] (Branch T (Dloc 040979)));
    Let b1 = M[009057];
    Let b2 = M[009058];
    if (Equal(MakeHiLo(b1,b2),54)) {
      Jump: 040979
    } else {
      TraceOperation 040961 (Je [Var (Global 120),Con 137] (Branch F (Dloc 040971)));
      Let b3 = M[009057];
      Let b4 = M[009058];
      if (Equal(MakeHiLo(b3,b4),137)) {
        TraceOperation 040965 (Je [Var (Global 118),Con 29,Con 21] (Branch T (Dloc 040979)));
        Let b5 = M[009053];
        Let b6 = M[009054];
        if (LogOr(Equal(MakeHiLo(b5,b6),29),Equal(MakeHiLo(b5,b6),21))) {
          Jump: 040979
        } else {
          Jump: 040971
        }
      } else {
        Jump: 040971
      }
    }
  } else {
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 0
  }
LocOp 040971:
  TraceOperation 040971 (Je [Var (Global 120),Con 34] (Branch F Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),34)) {
    TraceOperation 040975 (Je [Var (Global 118),Con 177] (Branch F Dfalse));
    Let b3 = M[009053];
    Let b4 = M[009054];
    if (Equal(MakeHiLo(b3,b4),177)) {
      Jump: 040979
    } else {
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 0
    }
  } else {
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 0
  }
LocOp 040979:
  TraceOperation 040979 (Print "Inside the Barrow\nAs you enter the barrow, the door closes inexorably behind you. Around you it is dark, but ahead is an enormous cavern, brightly lit. Through its center runs a wide stream. Spanning the stream is a small wooden footbridge, and beyond a path leads into a dark tunnel. Above the bridge, floating in the air, is a large sign. It reads:  All ye who stand before this bridge have completed a great and perilous adventure which has tested your wit and courage. You have mastered");
  GamePrint "Inside the Barrow\nAs you enter the barrow, the door closes inexorably behind you. Around you it is dark, but ahead is an enormous cavern, brightly lit. Through its center runs a wide stream. Spanning the stream is a small wooden footbridge, and beyond a path leads into a dark tunnel. Above the bridge, floating in the air, is a large sign. It reads:  All ye who stand before this bridge have completed a great and perilous adventure which has tested your wit and courage. You have mastered";
  TraceOperation 041262 (Loadb (Con 0) (Con 1) Sp);
  Let b1 = M[000001];
  PushStack Widen(b1);
  TraceOperation 041266 (And (Var Sp) (Con 8) Sp);
  PopStack popped2;
  PushStack And(popped2,8);
  TraceOperation 041270 (Jz (Var Sp) (Branch F (Dloc 041473)));
  PopStack popped3;
  if (IsZero(popped3)) {
    TraceOperation 041274 (Print " the first part of the ZORK trilogy. Those who pass over this bridge must be prepared to undertake an even greater adventure that will severely test your skill and bravery!\n\nThe ZORK trilogy continues with \"ZORK II: The Wizard of Frobozz\" and is completed in \"ZORK III: The Dungeon Master.\"");
    GamePrint " the first part of the ZORK trilogy. Those who pass over this bridge must be prepared to undertake an even greater adventure that will severely test your skill and bravery!\n\nThe ZORK trilogy continues with \"ZORK II: The Wizard of Frobozz\" and is completed in \"ZORK III: The Dungeon Master.\"";
    TraceOperation 041469 New_line;
    GamePrint "\n";
    TraceOperation 041470 (Jump 041503);
    Jump: 041503
  } else {
    Jump: 041473
  }
LocOp 041473:
  TraceOperation 041473 (Print " ZORK: The Great Underground Empire.\n");
  GamePrint " ZORK: The Great Underground Empire.\n";
  TraceOperation 041502 New_line;
  GamePrint "\n";
  Jump: 041503
LocOp 041503:
  TraceOperation 041503 (Call (Floc 028108) [Con 0] Sp);
  PushFrame 041503;
  SetLocal 1 0;
  JumpCall: 028108, #actuals: 1
LocReturn 041503:
  PushStack call_result;
  TraceOperation 041509 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[314]--------------------------------------------------
LocRoutine 041510:
  MakeRoutineFrame 0;
  Jump: 041511
LocOp 041511:
  TraceOperation 041511 (Je [Var (Global 120),Con 35,Con 43] (Branch F Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (LogOr(Equal(MakeHiLo(b1,b2),35),Equal(MakeHiLo(b1,b2),43))) {
    TraceOperation 041517 (Print_ret "The door is too heavy.");
    GamePrint "The door is too heavy.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 0
  }
--[315]--------------------------------------------------
LocRoutine 041528:
  MakeRoutineFrame 0;
  Jump: 041529
LocOp 041529:
  TraceOperation 041529 (Je [Var (Global 120),Con 34] (Branch F Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),34)) {
    TraceOperation 041533 (Call (Floc 038000) [Con 29] Sp);
    PushFrame 041533;
    SetLocal 1 29;
    JumpCall: 038000, #actuals: 1
  } else {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  }
LocReturn 041533:
  PushStack call_result;
  TraceOperation 041539 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[316]--------------------------------------------------
LocRoutine 041540:
  MakeRoutineFrame 0;
  Jump: 041541
LocOp 041541:
  TraceOperation 041541 (Je [Var (Global 120),Con 93] (Branch F Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),93)) {
    TraceOperation 041545 (Je [Var (Global 118),Con 194] (Branch F Dfalse));
    Let b3 = M[009053];
    Let b4 = M[009054];
    if (Equal(MakeHiLo(b3,b4),194)) {
      TraceOperation 041549 (Print_ret "The trophy case is securely fastened to the wall.");
      GamePrint "The trophy case is securely fastened to the wall.\n";
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 1
    } else {
      PopFrame return_address_6;
      JumpReturn: return_address_6, result: 0
    }
  } else {
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 0
  }
--[317]--------------------------------------------------
LocRoutine 041580:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 041587
LocOp 041587:
  TraceOperation 041587 (Je [Var (Local 1),Con 3] (Branch F (Dloc 041877)));
  if (Equal(GetLocal(1),3)) {
    TraceOperation 041592 (Print "You are in the living room. There is a doorway to the east");
    GamePrint "You are in the living room. There is a doorway to the east";
    TraceOperation 041621 (Jz (Var (Global 143)) (Branch T (Dloc 041697)));
    Let b1 = M[009103];
    Let b2 = M[009104];
    if (IsZero(MakeHiLo(b1,b2))) {
      Jump: 041697
    } else {
      TraceOperation 041625 (Print ". To the west is a cyclops-shaped opening in an old wooden door, above which is some strange gothic lettering, ");
      GamePrint ". To the west is a cyclops-shaped opening in an old wooden door, above which is some strange gothic lettering, ";
      TraceOperation 041694 (Jump 041746);
      Jump: 041746
    }
  } else {
    Jump: 041877
  }
LocOp 041697:
  TraceOperation 041697 (Print ", a wooden door with strange gothic lettering to the west, which appears to be nailed shut, ");
  GamePrint ", a wooden door with strange gothic lettering to the west, which appears to be nailed shut, ";
  Jump: 041746
LocOp 041746:
  TraceOperation 041746 (Print "a trophy case, ");
  GamePrint "a trophy case, ";
  TraceOperation 041757 (Store (Con 2) (Var (Global 48)));
  Let b1 = M[008913];
  Let b2 = M[008914];
  SetLocal 2 MakeHiLo(b1,b2);
  TraceOperation 041760 (Jz (Var (Local 2)) (Branch T (Dloc 041797)));
  if (IsZero(GetLocal(2))) {
    Jump: 041797
  } else {
    TraceOperation 041763 (Test_attr (Con 183) (Con 11) (Branch F (Dloc 041797)));
    Let b3 = M[002389];
    if (TestBit(b3,4)) {
      TraceOperation 041767 (Print "and a rug lying beside an open trap door.");
      GamePrint "and a rug lying beside an open trap door.";
      TraceOperation 041794 (Jump 041875);
      Jump: 041875
    } else {
      Jump: 041797
    }
  }
LocOp 041797:
  TraceOperation 041797 (Jz (Var (Local 2)) (Branch T (Dloc 041822)));
  if (IsZero(GetLocal(2))) {
    Jump: 041822
  } else {
    TraceOperation 041800 (Print "and a closed trap door at your feet.");
    GamePrint "and a closed trap door at your feet.";
    TraceOperation 041819 (Jump 041875);
    Jump: 041875
  }
LocOp 041822:
  TraceOperation 041822 (Test_attr (Con 183) (Con 11) (Branch F (Dloc 041848)));
  Let b1 = M[002389];
  if (TestBit(b1,4)) {
    TraceOperation 041826 (Print "and an open trap door at your feet.");
    GamePrint "and an open trap door at your feet.";
    TraceOperation 041845 (Jump 041875);
    Jump: 041875
  } else {
    Jump: 041848
  }
LocOp 041848:
  TraceOperation 041848 (Print "and a large oriental rug in the center of the room.");
  GamePrint "and a large oriental rug in the center of the room.";
  Jump: 041875
LocOp 041875:
  TraceOperation 041875 New_line;
  GamePrint "\n";
  TraceOperation 041876 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 041877:
  TraceOperation 041877 (Je [Var (Local 1),Con 6] (Branch F Dfalse));
  if (Equal(GetLocal(1),6)) {
    TraceOperation 041881 (Je [Var (Global 120),Con 93] (Branch T (Dloc 041893)));
    Let b1 = M[009057];
    Let b2 = M[009058];
    if (Equal(MakeHiLo(b1,b2),93)) {
      Jump: 041893
    } else {
      TraceOperation 041885 (Je [Var (Global 120),Con 18] (Branch F Dfalse));
      Let b3 = M[009057];
      Let b4 = M[009058];
      if (Equal(MakeHiLo(b3,b4),18)) {
        TraceOperation 041889 (Je [Var (Global 119),Con 194] (Branch F Dfalse));
        Let b5 = M[009055];
        Let b6 = M[009056];
        if (Equal(MakeHiLo(b5,b6),194)) {
          Jump: 041893
        } else {
          PopFrame return_address_7;
          JumpReturn: return_address_7, result: 0
        }
      } else {
        PopFrame return_address_8;
        JumpReturn: return_address_8, result: 0
      }
    }
  } else {
    PopFrame return_address_9;
    JumpReturn: return_address_9, result: 0
  }
LocOp 041893:
  TraceOperation 041893 (Jin (Var (Global 118)) (Con 194) (Branch F (Dloc 041903)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),4)];
  if (Equal(194,Widen(b3))) {
    TraceOperation 041897 (Call (Floc 041920) [Var (Global 118)] Sp);
    Let b4 = M[009053];
    Let b5 = M[009054];
    PushFrame 041897;
    SetLocal 1 MakeHiLo(b4,b5);
    JumpCall: 041920, #actuals: 1
  } else {
    TraceOperation 041903 (Call (Floc 041952) [] Sp);
    PushFrame 041903;
    JumpCall: 041952, #actuals: 0
  }
LocReturn 041897:
  PushStack call_result;
  TraceOperation 041903 (Call (Floc 041952) [] Sp);
  PushFrame 041903;
  JumpCall: 041952, #actuals: 0
LocReturn 041903:
  PushStack call_result;
  TraceOperation 041908 (Add (Var (Global 63)) (Var Sp) (Global 1));
  Let b1 = M[008943];
  Let b2 = M[008944];
  PopStack popped3;
  SetByte 008819 HiByte(Add(MakeHiLo(b1,b2),popped3));
  SetByte 008820 LoByte(Add(MakeHiLo(b1,b2),popped3));
  TraceOperation 041912 (Call (Floc 036962) [Con 0] Sp);
  PushFrame 041912;
  SetLocal 1 0;
  JumpCall: 036962, #actuals: 1
LocReturn 041912:
  PushStack call_result;
  TraceOperation 041918 Rfalse;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 0
--[318]--------------------------------------------------
LocRoutine 041920:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 041925
LocOp 041925:
  TraceOperation 041925 (Get_child (Var (Local 1)) (Local 2) (Branch T (Dloc 041929)));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),6)];
  SetLocal 2 Widen(b1);
  if (IsZero(Widen(b1))) {
    Jump: 041929
  } else {
    Jump: 041929
  }
LocOp 041929:
  TraceOperation 041929 (Jz (Var (Local 2)) (Branch T Dtrue));
  if (IsZero(GetLocal(2))) {
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 1
  } else {
    TraceOperation 041932 (Set_attr (Var (Local 2)) (Con 3));
    Let b2 = M[Offset(Offset(000741,Mul(GetLocal(2),9)),0)];
    SetByte Offset(Offset(000741,Mul(GetLocal(2),9)),0) SetBit(b2,4);
    TraceOperation 041935 (Get_child (Var (Local 2)) Sp (Branch F (Dloc 041945)));
    Let b3 = M[Offset(Offset(000741,Mul(GetLocal(2),9)),6)];
    PushStack Widen(b3);
    if (IsZero(Widen(b3))) {
      TraceOperation 041945 (Get_sibling (Var (Local 2)) (Local 2) (Branch T (Dloc 041949)));
      Let b4 = M[Offset(Offset(000741,Mul(GetLocal(2),9)),5)];
      SetLocal 2 Widen(b4);
      if (IsZero(Widen(b4))) {
        TraceOperation 041949 (Jump 041929);
        Jump: 041929
      } else {
        TraceOperation 041949 (Jump 041929);
        Jump: 041929
      }
    } else {
      TraceOperation 041939 (Call (Floc 041920) [Var (Local 2)] Sp);
      PushFrame 041939;
      SetLocal 1 GetLocal(2);
      JumpCall: 041920, #actuals: 1
    }
  }
LocReturn 041939:
  PushStack call_result;
  TraceOperation 041945 (Get_sibling (Var (Local 2)) (Local 2) (Branch T (Dloc 041949)));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(2),9)),5)];
  SetLocal 2 Widen(b1);
  if (IsZero(Widen(b1))) {
    TraceOperation 041949 (Jump 041929);
    Jump: 041929
  } else {
    TraceOperation 041949 (Jump 041929);
    Jump: 041929
  }
--[319]--------------------------------------------------
LocRoutine 041952:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 194;
      }
    }
  }
  Jump: 041959
LocOp 041959:
  TraceOperation 041959 (Get_child (Var (Local 1)) (Local 2) (Branch T (Dloc 041963)));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),6)];
  SetLocal 2 Widen(b1);
  if (IsZero(Widen(b1))) {
    Jump: 041963
  } else {
    Jump: 041963
  }
LocOp 041963:
  TraceOperation 041963 (Jz (Var (Local 2)) (Branch F (Dloc 041968)));
  if (IsZero(GetLocal(2))) {
    TraceOperation 041966 (Ret (Var (Local 3)));
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: GetLocal(3)
  } else {
    Jump: 041968
  }
LocOp 041968:
  TraceOperation 041968 (Get_prop (Var (Local 2)) (Con 12) Sp);
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(2),9)),7)];
  Let b2 = M[Offset(Offset(Offset(000741,Mul(GetLocal(2),9)),7),1)];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Error: getPropsA
LocReturn 041980:
  PushStack call_result;
  TraceOperation 041986 (Get_sibling (Var (Local 2)) (Local 2) (Branch T (Dloc 041990)));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(2),9)),5)];
  SetLocal 2 Widen(b1);
  if (IsZero(Widen(b1))) {
    TraceOperation 041990 (Jump 041963);
    Jump: 041963
  } else {
    TraceOperation 041990 (Jump 041963);
    Jump: 041963
  }
--[320]--------------------------------------------------
LocRoutine 041994:
  MakeRoutineFrame 0;
  Jump: 041995
LocOp 041995:
  TraceOperation 041995 (Je [Var (Global 120),Con 105] (Branch F (Dloc 042007)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),105)) {
    TraceOperation 041999 (Call (Floc 022396) [Con 43,Con 183] Sp);
    PushFrame 041999;
    SetLocal 1 43;
    SetLocal 2 183;
    JumpCall: 022396, #actuals: 2
  } else {
    Jump: 042007
  }
LocReturn 041999:
  PushStack call_result;
  TraceOperation 042006 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 042007:
  TraceOperation 042007 (Je [Var (Global 120),Con 35,Con 43] (Branch F (Dloc 042028)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (LogOr(Equal(MakeHiLo(b1,b2),35),Equal(MakeHiLo(b1,b2),43))) {
    TraceOperation 042013 (Je [Var (Global 0),Con 193] (Branch F (Dloc 042028)));
    Let b3 = M[008817];
    Let b4 = M[008818];
    if (Equal(MakeHiLo(b3,b4),193)) {
      TraceOperation 042017 (Call (Floc 038394) [Var (Global 118),Con -25651,Con -25629] Sp);
      Let b5 = M[009053];
      Let b6 = M[009054];
      PushFrame 042017;
      SetLocal 1 MakeHiLo(b5,b6);
      SetLocal 2 -25651;
      SetLocal 3 -25629;
      JumpCall: 038394, #actuals: 3
    } else {
      Jump: 042028
    }
  } else {
    Jump: 042028
  }
LocReturn 042017:
  PushStack call_result;
  TraceOperation 042027 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 042028:
  TraceOperation 042028 (Je [Var (Global 120),Con 81] (Branch F (Dloc 042074)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),81)) {
    TraceOperation 042032 (Je [Var (Global 0),Con 193] (Branch F (Dloc 042074)));
    Let b3 = M[008817];
    Let b4 = M[008818];
    if (Equal(MakeHiLo(b3,b4),193)) {
      TraceOperation 042036 (Test_attr (Con 183) (Con 11) (Branch F (Dloc 042069)));
      Let b5 = M[002389];
      if (TestBit(b5,4)) {
        TraceOperation 042040 (Print_ret "You see a rickety staircase descending into darkness.");
        GamePrint "You see a rickety staircase descending into darkness.\n";
        PopFrame return_address_6;
        JumpReturn: return_address_6, result: 1
      } else {
        Jump: 042069
      }
    } else {
      Jump: 042074
    }
  } else {
    Jump: 042074
  }
LocOp 042069:
  TraceOperation 042069 (Print_ret "It's closed.");
  GamePrint "It's closed.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 042074:
  TraceOperation 042074 (Je [Var (Global 0),Con 72] (Branch F Dfalse));
  Let b1 = M[008817];
  Let b2 = M[008818];
  if (Equal(MakeHiLo(b1,b2),72)) {
    TraceOperation 042078 (Je [Var (Global 120),Con 133,Con 43] (Branch F (Dloc 042105)));
    Let b3 = M[009057];
    Let b4 = M[009058];
    if (LogOr(Equal(MakeHiLo(b3,b4),133),Equal(MakeHiLo(b3,b4),43))) {
      TraceOperation 042084 (Test_attr (Con 183) (Con 11) (Branch T (Dloc 042105)));
      Let b5 = M[002389];
      if (TestBit(b5,4)) {
        Jump: 042105
      } else {
        TraceOperation 042088 (Print_ret "The door is locked from above.");
        GamePrint "The door is locked from above.\n";
        PopFrame return_address_6;
        JumpReturn: return_address_6, result: 1
      }
    } else {
      Jump: 042105
    }
  } else {
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 0
  }
LocOp 042105:
  TraceOperation 042105 (Je [Var (Global 120),Con 35] (Branch F (Dloc 042134)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),35)) {
    TraceOperation 042109 (Test_attr (Con 183) (Con 11) (Branch T (Dloc 042134)));
    Let b3 = M[002389];
    if (TestBit(b3,4)) {
      Jump: 042134
    } else {
      TraceOperation 042113 (Clear_attr (Con 183) (Con 3));
      Let b4 = M[002388];
      SetByte 002388 ClearBit(b4,4);
      TraceOperation 042116 (Clear_attr (Con 183) (Con 11));
      Let b5 = M[002389];
      SetByte 002389 ClearBit(b5,4);
      TraceOperation 042119 (Print_ret "The door closes and locks.");
      GamePrint "The door closes and locks.\n";
      PopFrame return_address_6;
      JumpReturn: return_address_6, result: 1
    }
  } else {
    Jump: 042134
  }
LocOp 042134:
  TraceOperation 042134 (Je [Var (Global 120),Con 35,Con 43] (Branch F Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (LogOr(Equal(MakeHiLo(b1,b2),35),Equal(MakeHiLo(b1,b2),43))) {
    TraceOperation 042140 (Call (Floc 020076) [Var (Global 52)] Sp);
    Let b3 = M[008921];
    Let b4 = M[008922];
    PushFrame 042140;
    SetLocal 1 MakeHiLo(b3,b4);
    JumpCall: 020076, #actuals: 1
  } else {
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 0
  }
LocReturn 042140:
  PushStack call_result;
  TraceOperation 042146 (Print_paddr (Var Sp));
  PopStack popped1;
  GamePrint GetText(PackedAddress Z3(popped1));
  TraceOperation 042148 New_line;
  GamePrint "\n";
  TraceOperation 042149 Rtrue;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: 1
--[321]--------------------------------------------------
LocRoutine 042150:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 042153
LocOp 042153:
  TraceOperation 042153 (Je [Var (Local 1),Con 3] (Branch F (Dloc 042249)));
  if (Equal(GetLocal(1),3)) {
    TraceOperation 042158 (Print_ret "You are in a dark and damp cellar with a narrow passageway leading north, and a crawlway to the south. On the west is the bottom of a steep metal ramp which is unclimbable.");
    GamePrint "You are in a dark and damp cellar with a narrow passageway leading north, and a crawlway to the south. On the west is the bottom of a steep metal ramp which is unclimbable.\n";
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 1
  } else {
    Jump: 042249
  }
LocOp 042249:
  TraceOperation 042249 (Je [Var (Local 1),Con 2] (Branch F Dfalse));
  if (Equal(GetLocal(1),2)) {
    TraceOperation 042253 (Test_attr (Con 183) (Con 11) (Branch F Dfalse));
    Let b1 = M[002389];
    if (TestBit(b1,4)) {
      TraceOperation 042257 (Test_attr (Con 183) (Con 3) (Branch T Dfalse));
      Let b2 = M[002388];
      if (TestBit(b2,4)) {
        PopFrame return_address_3;
        JumpReturn: return_address_3, result: 0
      } else {
        TraceOperation 042261 (Clear_attr (Con 183) (Con 11));
        Let b4 = M[002389];
        SetByte 002389 ClearBit(b4,4);
        TraceOperation 042264 (Set_attr (Con 183) (Con 3));
        Let b5 = M[002388];
        SetByte 002388 SetBit(b5,4);
        TraceOperation 042267 (Print "The trap door crashes shut, and you hear someone barring it.");
        GamePrint "The trap door crashes shut, and you hear someone barring it.";
        TraceOperation 042304 New_line;
        GamePrint "\n";
        TraceOperation 042305 New_line;
        GamePrint "\n";
        TraceOperation 042306 Rtrue;
        PopFrame return_address_6;
        JumpReturn: return_address_6, result: 1
      }
    } else {
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 0
    }
  } else {
    PopFrame return_address_8;
    JumpReturn: return_address_8, result: 0
  }
--[322]--------------------------------------------------
LocRoutine 042308:
  MakeRoutineFrame 0;
  Jump: 042309
LocOp 042309:
  TraceOperation 042309 (Je [Var (Global 120),Con 56] (Branch F Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),56)) {
    TraceOperation 042313 (Print "The chimney leads ");
    GamePrint "The chimney leads ";
    TraceOperation 042326 (Je [Var (Global 0),Con 203] (Branch F (Dloc 042338)));
    Let b3 = M[008817];
    Let b4 = M[008818];
    if (Equal(MakeHiLo(b3,b4),203)) {
      TraceOperation 042330 (Print "down");
      GamePrint "down";
      TraceOperation 042335 (Jump 042341);
      Jump: 042341
    } else {
      Jump: 042338
    }
  } else {
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 0
  }
LocOp 042338:
  TraceOperation 042338 (Print "up");
  GamePrint "up";
  Jump: 042341
LocOp 042341:
  TraceOperation 042341 (Print_ret "ward, and looks climbable.");
  GamePrint "ward, and looks climbable.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[323]--------------------------------------------------
LocRoutine 042360:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 042363
LocOp 042363:
  TraceOperation 042363 (Get_child (Var (Global 111)) (Local 1) (Branch T (Dloc 042396)));
  Let b1 = M[009039];
  Let b2 = M[009040];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),6)];
  SetLocal 1 Widen(b3);
  if (IsZero(Widen(b3))) {
    TraceOperation 042367 (Print "Going up empty-handed is a bad idea.");
    GamePrint "Going up empty-handed is a bad idea.";
    TraceOperation 042394 New_line;
    GamePrint "\n";
    TraceOperation 042395 Rfalse;
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 0
  } else {
    Jump: 042396
  }
--[324]--------------------------------------------------
LocRoutine 042448:
  MakeRoutineFrame 0;
  Jump: 042449
LocOp 042449:
  TraceOperation 042449 (Jz (Var (Global 48)) (Branch T (Dloc 042477)));
  Let b1 = M[008913];
  Let b2 = M[008914];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 042477
  } else {
    TraceOperation 042452 (Test_attr (Con 183) (Con 11) (Branch F (Dloc 042458)));
    Let b3 = M[002389];
    if (TestBit(b3,4)) {
      TraceOperation 042456 (Ret (Con 72));
      PopFrame return_address_4;
      JumpReturn: return_address_4, result: 72
    } else {
      Jump: 042458
    }
  }
LocOp 042458:
  TraceOperation 042458 (Print "The trap door is closed.");
  GamePrint "The trap door is closed.";
  TraceOperation 042469 New_line;
  GamePrint "\n";
  TraceOperation 042470 (Call (Floc 038192) [Con 183] Sp);
  PushFrame 042470;
  SetLocal 1 183;
  JumpCall: 038192, #actuals: 1
LocReturn 042470:
  PushStack call_result;
  TraceOperation 042476 Rfalse;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 0
LocOp 042477:
  TraceOperation 042477 (Print "You can't go that way.");
  GamePrint "You can't go that way.";
  TraceOperation 042488 New_line;
  GamePrint "\n";
  TraceOperation 042489 Rfalse;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 0
--[325]--------------------------------------------------
LocRoutine 042490:
  MakeRoutineFrame 0;
  Jump: 042491
LocOp 042491:
  TraceOperation 042491 (Je [Var (Global 120),Con 105] (Branch F (Dloc 042562)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),105)) {
    TraceOperation 042496 (Print "The rug is too heavy to lift");
    GamePrint "The rug is too heavy to lift";
    TraceOperation 042513 (Jz (Var (Global 48)) (Branch T (Dloc 042519)));
    Let b3 = M[008913];
    Let b4 = M[008914];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 042519
    } else {
      TraceOperation 042516 (Print_ret ".");
      GamePrint ".\n";
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 1
    }
  } else {
    Jump: 042562
  }
LocOp 042519:
  TraceOperation 042519 (Print_ret ", but in trying to take it you have noticed an irregularity beneath it.");
  GamePrint ", but in trying to take it you have noticed an irregularity beneath it.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 042562:
  TraceOperation 042562 (Je [Var (Global 120),Con 101,Con 88] (Branch F (Dloc 042695)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (LogOr(Equal(MakeHiLo(b1,b2),101),Equal(MakeHiLo(b1,b2),88))) {
    TraceOperation 042569 (Jz (Var (Global 48)) (Branch T (Dloc 042615)));
    Let b3 = M[008913];
    Let b4 = M[008914];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 042615
    } else {
      TraceOperation 042572 (Print_ret "Having moved the carpet previously, you find it impossible to move it again.");
      GamePrint "Having moved the carpet previously, you find it impossible to move it again.\n";
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 1
    }
  } else {
    Jump: 042695
  }
LocOp 042615:
  TraceOperation 042615 (Print "With a great effort, the rug is moved to one side of the room, revealing the dusty cover of a closed trap door.");
  GamePrint "With a great effort, the rug is moved to one side of the room, revealing the dusty cover of a closed trap door.";
  TraceOperation 042680 New_line;
  GamePrint "\n";
  TraceOperation 042681 (Clear_attr (Con 183) (Con 7));
  Let b1 = M[002388];
  SetByte 002388 ClearBit(b1,0);
  TraceOperation 042684 (Call (Floc 038192) [Con 183] Sp);
  PushFrame 042684;
  SetLocal 1 183;
  JumpCall: 038192, #actuals: 1
LocReturn 042684:
  PushStack call_result;
  TraceOperation 042690 (Store (Con 64) (Con 1));
  SetByte 008913 0;
  SetByte 008914 1;
  TraceOperation 042693 (Ret (Var (Global 48)));
  Let b1 = M[008913];
  Let b2 = M[008914];
  PopFrame return_address_3;
  JumpReturn: return_address_3, result: MakeHiLo(b1,b2)
LocOp 042695:
  TraceOperation 042695 (Je [Var (Global 120),Con 93] (Branch F (Dloc 042726)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),93)) {
    TraceOperation 042699 (Print_ret "The rug is extremely heavy and cannot be carried.");
    GamePrint "The rug is extremely heavy and cannot be carried.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 042726
  }
LocOp 042726:
  TraceOperation 042726 (Je [Var (Global 120),Con 81] (Branch F (Dloc 042811)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),81)) {
    TraceOperation 042731 (Jz (Var (Global 48)) (Branch F (Dloc 042811)));
    Let b3 = M[008913];
    Let b4 = M[008914];
    if (IsZero(MakeHiLo(b3,b4))) {
      TraceOperation 042735 (Test_attr (Con 183) (Con 11) (Branch T (Dloc 042811)));
      Let b5 = M[002389];
      if (TestBit(b5,4)) {
        Jump: 042811
      } else {
        TraceOperation 042740 (Print_ret "Underneath the rug is a closed trap door. As you drop the corner of the rug, the trap door is once again concealed from view.");
        GamePrint "Underneath the rug is a closed trap door. As you drop the corner of the rug, the trap door is once again concealed from view.\n";
        PopFrame return_address_6;
        JumpReturn: return_address_6, result: 1
      }
    } else {
      Jump: 042811
    }
  } else {
    Jump: 042811
  }
LocOp 042811:
  TraceOperation 042811 (Je [Var (Global 120),Con 33] (Branch F Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),33)) {
    TraceOperation 042815 (Jz (Var (Global 48)) (Branch F (Dloc 042889)));
    Let b3 = M[008913];
    Let b4 = M[008914];
    if (IsZero(MakeHiLo(b3,b4))) {
      TraceOperation 042819 (Test_attr (Con 183) (Con 11) (Branch T (Dloc 042889)));
      Let b5 = M[002389];
      if (TestBit(b5,4)) {
        Jump: 042889
      } else {
        TraceOperation 042824 (Print_ret "As you sit, you notice an irregularity underneath it. Rather than be uncomfortable, you stand up again.");
        GamePrint "As you sit, you notice an irregularity underneath it. Rather than be uncomfortable, you stand up again.\n";
        PopFrame return_address_6;
        JumpReturn: return_address_6, result: 1
      }
    } else {
      Jump: 042889
    }
  } else {
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 0
  }
LocOp 042889:
  TraceOperation 042889 (Print_ret "I suppose you think it's a magic carpet?");
  GamePrint "I suppose you think it's a magic carpet?\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[326]--------------------------------------------------
LocRoutine 042914:
  MakeRoutineFrame 0;
  Jump: 042915
LocOp 042915:
  TraceOperation 042915 (Jz (Var (Global 141)) (Branch F Dfalse));
  Let b1 = M[009099];
  Let b2 = M[009100];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 042918 (Call (Floc 042936) [Con 218,Con 217] Sp);
    PushFrame 042918;
    SetLocal 1 218;
    SetLocal 2 217;
    JumpCall: 042936, #actuals: 2
  } else {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  }
LocReturn 042918:
  PushStack call_result;
  TraceOperation 042925 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[327]--------------------------------------------------
LocRoutine 042926:
  MakeRoutineFrame 0;
  Jump: 042927
LocOp 042927:
  TraceOperation 042927 (Call (Floc 042936) [Con 113,Con 114] Sp);
  PushFrame 042927;
  SetLocal 1 113;
  SetLocal 2 114;
  JumpCall: 042936, #actuals: 2
LocReturn 042927:
  PushStack call_result;
  TraceOperation 042934 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[328]--------------------------------------------------
LocRoutine 042936:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 042941
LocOp 042941:
  TraceOperation 042941 (Jin (Var (Local 2)) (Var (Global 0)) (Branch F Dfalse));
  Let b1 = M[008817];
  Let b2 = M[008818];
  Let b3 = M[Offset(Offset(000741,Mul(GetLocal(2),9)),4)];
  if (Equal(MakeHiLo(b1,b2),Widen(b3))) {
    TraceOperation 042945 (Je [Var (Global 120),Con 93] (Branch F Dfalse));
    Let b4 = M[009057];
    Let b5 = M[009058];
    if (Equal(MakeHiLo(b4,b5),93)) {
      TraceOperation 042949 (Jin (Var (Local 1)) (Var (Local 2)) (Branch F (Dloc 042975)));
      Let b6 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),4)];
      if (Equal(GetLocal(2),Widen(b6))) {
        TraceOperation 042953 (Print "The ");
        GamePrint "The ";
        TraceOperation 042956 (Print_obj (Var (Local 2)));
        Let b7 = M[Offset(Offset(000741,Mul(GetLocal(2),9)),7)];
        Let b8 = M[Offset(Offset(Offset(000741,Mul(GetLocal(2),9)),7),1)];
        Let b9 = M[Address(MakeHiLo(b7,b8))];
        if (IsZeroByte(b9)) {
          GamePrint "";
          TraceOperation 042958 (Print_ret " swings it out of your reach.");
          GamePrint " swings it out of your reach.\n";
          PopFrame return_address_10;
          JumpReturn: return_address_10, result: 1
        } else {
          GamePrint GetText(Offset(Address(MakeHiLo(b7,b8)),1));
          TraceOperation 042958 (Print_ret " swings it out of your reach.");
          GamePrint " swings it out of your reach.\n";
          PopFrame return_address_11;
          JumpReturn: return_address_11, result: 1
        }
      } else {
        Jump: 042975
      }
    } else {
      PopFrame return_address_12;
      JumpReturn: return_address_12, result: 0
    }
  } else {
    PopFrame return_address_13;
    JumpReturn: return_address_13, result: 0
  }
--[329]--------------------------------------------------
LocRoutine 043006:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 043009
LocOp 043009:
  TraceOperation 043009 (Je [Var (Global 120),Con 111] (Branch F (Dloc 043046)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),111)) {
    TraceOperation 043013 (Print "The troll isn't much of a conversationalist.");
    GamePrint "The troll isn't much of a conversationalist.";
    TraceOperation 043040 New_line;
    GamePrint "\n";
    TraceOperation 043041 (Store (Con 124) (Con 0));
    SetByte 009033 0;
    SetByte 009034 0;
    TraceOperation 043044 (Ret (Var (Global 108)));
    Let b3 = M[009033];
    Let b4 = M[009034];
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: MakeHiLo(b3,b4)
  } else {
    Jump: 043046
  }
LocOp 043046:
  TraceOperation 043046 (Je [Var (Local 1),Con 1] (Branch F (Dloc 043211)));
  if (Equal(GetLocal(1),1)) {
    TraceOperation 043051 (Jin (Con 218) (Con 217) (Branch T Dfalse));
    Let b1 = M[002707];
    if (Equal(217,Widen(b1))) {
      PopFrame return_address_2;
      JumpReturn: return_address_2, result: 0
    } else {
      TraceOperation 043055 (Jin (Con 218) (Var (Global 0)) (Branch F (Dloc 043144)));
      Let b3 = M[008817];
      Let b4 = M[008818];
      Let b5 = M[002707];
      if (Equal(MakeHiLo(b3,b4),Widen(b5))) {
        TraceOperation 043060 (Call (Floc 020034) [Con 75] Sp);
        PushFrame 043060;
        SetLocal 1 75;
        JumpCall: 020034, #actuals: 1
      } else {
        Jump: 043144
      }
    }
  } else {
    Jump: 043211
  }
LocReturn 043060:
  PushStack call_result;
  TraceOperation 043066 (Jz (Var Sp) (Branch T (Dloc 043144)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 043144
  } else {
    TraceOperation 043070 (Set_attr (Con 218) (Con 14));
    Let b2 = M[002704];
    SetByte 002704 SetBit(b2,1);
    TraceOperation 043073 (Clear_attr (Con 218) (Con 29));
    Let b3 = M[002706];
    SetByte 002706 ClearBit(b3,2);
    TraceOperation 043076 (Insert_obj (Con 218) (Con 217));
    Let b4 = M[002707];
    if (IsZero(Widen(b4))) {
      SetByte 002707 217;
      Let b5 = M[002700];
      SetByte 002708 LoByte(Widen(b5));
      SetByte 002700 218;
      TraceOperation 043079 (Put_prop (Con 217) (Con 11) (Con -25620));
      Let b6 = M[002701];
      Let b7 = M[002702];
      Let b8 = M[Address(MakeHiLo(b6,b7))];
      Error: getPropsA
    } else {
      Let b9 = M[Offset(Offset(000741,Mul(Widen(b4),9)),6)];
      if (Equal(Widen(b9),218)) {
        Let b10 = M[002708];
        SetByte Offset(Offset(000741,Mul(Widen(b4),9)),6) LoByte(Widen(b10));
        SetByte 002707 217;
        Let b11 = M[002700];
        SetByte 002708 LoByte(Widen(b11));
        SetByte 002700 218;
        TraceOperation 043079 (Put_prop (Con 217) (Con 11) (Con -25620));
        Let b12 = M[002701];
        Let b13 = M[002702];
        Let b14 = M[Address(MakeHiLo(b12,b13))];
        Error: getPropsA
      } else {
        Error: unlink/loop
      }
    }
  }
LocOp 043144:
  TraceOperation 043144 (Jin (Con 217) (Var (Global 0)) (Branch F Dfalse));
  Let b1 = M[008817];
  Let b2 = M[008818];
  Let b3 = M[002698];
  if (Equal(MakeHiLo(b1,b2),Widen(b3))) {
    TraceOperation 043148 (Put_prop (Con 217) (Con 11) (Con -25597));
    Let b4 = M[002701];
    Let b5 = M[002702];
    Let b6 = M[Address(MakeHiLo(b4,b5))];
    Error: getPropsA
  } else {
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 0
  }
LocOp 043211:
  TraceOperation 043211 (Je [Var (Local 1),Con 2] (Branch F (Dloc 043233)));
  if (Equal(GetLocal(1),2)) {
    TraceOperation 043215 (Jin (Con 218) (Con 217) (Branch F (Dloc 043228)));
    Let b1 = M[002707];
    if (Equal(217,Widen(b1))) {
      TraceOperation 043219 (Insert_obj (Con 218) (Var (Global 0)));
      Let b2 = M[008817];
      Let b3 = M[008818];
      Let b4 = M[002707];
      if (IsZero(Widen(b4))) {
        SetByte 002707 b3;
        Let b5 = M[Offset(Offset(000741,Mul(MakeHiLo(b2,b3),9)),6)];
        SetByte 002708 LoByte(Widen(b5));
        SetByte Offset(Offset(000741,Mul(MakeHiLo(b2,b3),9)),6) 218;
        TraceOperation 043222 (Clear_attr (Con 218) (Con 14));
        Let b6 = M[002704];
        SetByte 002704 ClearBit(b6,1);
        TraceOperation 043225 (Set_attr (Con 218) (Con 29));
        Let b7 = M[002706];
        SetByte 002706 SetBit(b7,2);
        TraceOperation 043228 (Store (Con 157) (Con 1));
        SetByte 009099 0;
        SetByte 009100 1;
        TraceOperation 043231 (Ret (Var (Global 141)));
        Let b8 = M[009099];
        Let b9 = M[009100];
        PopFrame return_address_10;
        JumpReturn: return_address_10, result: MakeHiLo(b8,b9)
      } else {
        Let b11 = M[Offset(Offset(000741,Mul(Widen(b4),9)),6)];
        if (Equal(Widen(b11),218)) {
          Let b12 = M[002708];
          SetByte Offset(Offset(000741,Mul(Widen(b4),9)),6) LoByte(Widen(b12));
          SetByte 002707 b3;
          Let b13 = M[Offset(Offset(000741,Mul(MakeHiLo(b2,b3),9)),6)];
          SetByte 002708 LoByte(Widen(b13));
          SetByte Offset(Offset(000741,Mul(MakeHiLo(b2,b3),9)),6) 218;
          TraceOperation 043222 (Clear_attr (Con 218) (Con 14));
          Let b14 = M[002704];
          SetByte 002704 ClearBit(b14,1);
          TraceOperation 043225 (Set_attr (Con 218) (Con 29));
          Let b15 = M[002706];
          SetByte 002706 SetBit(b15,2);
          TraceOperation 043228 (Store (Con 157) (Con 1));
          SetByte 009099 0;
          SetByte 009100 1;
          TraceOperation 043231 (Ret (Var (Global 141)));
          Let b16 = M[009099];
          Let b17 = M[009100];
          PopFrame return_address_18;
          JumpReturn: return_address_18, result: MakeHiLo(b16,b17)
        } else {
          Error: unlink/loop
        }
      }
    } else {
      TraceOperation 043228 (Store (Con 157) (Con 1));
      SetByte 009099 0;
      SetByte 009100 1;
      TraceOperation 043231 (Ret (Var (Global 141)));
      Let b19 = M[009099];
      Let b20 = M[009100];
      PopFrame return_address_21;
      JumpReturn: return_address_21, result: MakeHiLo(b19,b20)
    }
  } else {
    Jump: 043233
  }
LocOp 043233:
  TraceOperation 043233 (Je [Var (Local 1),Con 3] (Branch F (Dloc 043264)));
  if (Equal(GetLocal(1),3)) {
    TraceOperation 043237 (Clear_attr (Con 217) (Con 2));
    Let b1 = M[002694];
    SetByte 002694 ClearBit(b1,5);
    TraceOperation 043240 (Jin (Con 218) (Con 217) (Branch F (Dloc 043253)));
    Let b2 = M[002707];
    if (Equal(217,Widen(b2))) {
      TraceOperation 043244 (Insert_obj (Con 218) (Var (Global 0)));
      Let b3 = M[008817];
      Let b4 = M[008818];
      Let b5 = M[002707];
      if (IsZero(Widen(b5))) {
        SetByte 002707 b4;
        Let b6 = M[Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),6)];
        SetByte 002708 LoByte(Widen(b6));
        SetByte Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),6) 218;
        TraceOperation 043247 (Clear_attr (Con 218) (Con 14));
        Let b7 = M[002704];
        SetByte 002704 ClearBit(b7,1);
        TraceOperation 043250 (Set_attr (Con 218) (Con 29));
        Let b8 = M[002706];
        SetByte 002706 SetBit(b8,2);
        TraceOperation 043253 (Put_prop (Con 217) (Con 11) (Con -25586));
        Let b9 = M[002701];
        Let b10 = M[002702];
        Let b11 = M[Address(MakeHiLo(b9,b10))];
        Error: getPropsA
      } else {
        Let b12 = M[Offset(Offset(000741,Mul(Widen(b5),9)),6)];
        if (Equal(Widen(b12),218)) {
          Let b13 = M[002708];
          SetByte Offset(Offset(000741,Mul(Widen(b5),9)),6) LoByte(Widen(b13));
          SetByte 002707 b4;
          Let b14 = M[Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),6)];
          SetByte 002708 LoByte(Widen(b14));
          SetByte Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),6) 218;
          TraceOperation 043247 (Clear_attr (Con 218) (Con 14));
          Let b15 = M[002704];
          SetByte 002704 ClearBit(b15,1);
          TraceOperation 043250 (Set_attr (Con 218) (Con 29));
          Let b16 = M[002706];
          SetByte 002706 SetBit(b16,2);
          TraceOperation 043253 (Put_prop (Con 217) (Con 11) (Con -25586));
          Let b17 = M[002701];
          Let b18 = M[002702];
          Let b19 = M[Address(MakeHiLo(b17,b18))];
          Error: getPropsA
        } else {
          Error: unlink/loop
        }
      }
    } else {
      TraceOperation 043253 (Put_prop (Con 217) (Con 11) (Con -25586));
      Let b20 = M[002701];
      Let b21 = M[002702];
      Let b22 = M[Address(MakeHiLo(b20,b21))];
      Error: getPropsA
    }
  } else {
    Jump: 043264
  }
LocOp 043264:
  TraceOperation 043264 (Je [Var (Local 1),Con 4] (Branch F (Dloc 043356)));
  if (Equal(GetLocal(1),4)) {
    TraceOperation 043269 (Jin (Con 217) (Var (Global 0)) (Branch F (Dloc 043310)));
    Let b1 = M[008817];
    Let b2 = M[008818];
    Let b3 = M[002698];
    if (Equal(MakeHiLo(b1,b2),Widen(b3))) {
      TraceOperation 043273 (Set_attr (Con 217) (Con 2));
      Let b4 = M[002694];
      SetByte 002694 SetBit(b4,5);
      TraceOperation 043276 (Print "The troll stirs, quickly resuming a fighting stance.");
      GamePrint "The troll stirs, quickly resuming a fighting stance.";
      TraceOperation 043309 New_line;
      GamePrint "\n";
      TraceOperation 043310 (Jin (Con 218) (Con 217) (Branch F (Dloc 043323)));
      Let b5 = M[002707];
      if (Equal(217,Widen(b5))) {
        TraceOperation 043314 (Put_prop (Con 217) (Con 11) (Con -25564));
        Let b6 = M[002701];
        Let b7 = M[002702];
        Let b8 = M[Address(MakeHiLo(b6,b7))];
        Error: getPropsA
      } else {
        Jump: 043323
      }
    } else {
      TraceOperation 043310 (Jin (Con 218) (Con 217) (Branch F (Dloc 043323)));
      Let b9 = M[002707];
      if (Equal(217,Widen(b9))) {
        TraceOperation 043314 (Put_prop (Con 217) (Con 11) (Con -25564));
        Let b10 = M[002701];
        Let b11 = M[002702];
        Let b12 = M[Address(MakeHiLo(b10,b11))];
        Error: getPropsA
      } else {
        Jump: 043323
      }
    }
  } else {
    Jump: 043356
  }
--[330]--------------------------------------------------
LocRoutine 043370:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 176;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 3452;
    }
  }
  Jump: 043375
LocOp 043375:
  TraceOperation 043375 (Jz (Var (Local 1)) (Branch F Dfalse));
  if (IsZero(GetLocal(1))) {
    TraceOperation 043378 (Je [Var (Global 120),Con 56] (Branch F (Dloc 043390)));
    Let b1 = M[009057];
    Let b2 = M[009058];
    if (Equal(MakeHiLo(b1,b2),56)) {
      TraceOperation 043382 (Get_prop (Con 217) (Con 11) Sp);
      Let b3 = M[002701];
      Let b4 = M[002702];
      Let b5 = M[Address(MakeHiLo(b3,b4))];
      Error: getPropsA
    } else {
      Jump: 043390
    }
  } else {
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 0
  }
LocOp 043390:
  TraceOperation 043390 (Je [Var (Global 120),Con 63,Con 127] (Branch F (Dloc 043403)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (LogOr(Equal(MakeHiLo(b1,b2),63),Equal(MakeHiLo(b1,b2),127))) {
    TraceOperation 043396 (Jz (Var (Global 118)) (Branch T (Dloc 043403)));
    Let b3 = M[009053];
    Let b4 = M[009054];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 043403
    } else {
      TraceOperation 043399 (Je [Var (Global 119),Con 217] (Branch T (Dloc 043411)));
      Let b5 = M[009055];
      Let b6 = M[009056];
      if (Equal(MakeHiLo(b5,b6),217)) {
        Jump: 043411
      } else {
        Jump: 043403
      }
    }
  } else {
    Jump: 043403
  }
LocOp 043403:
  TraceOperation 043403 (Je [Var (Global 120),Con 42,Con 88,Con 93] (Branch F (Dloc 043956)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),42),Equal(MakeHiLo(b1,b2),88)),Equal(MakeHiLo(b1,b2),93))) {
    Jump: 043411
  } else {
    Jump: 043956
  }
LocOp 043411:
  TraceOperation 043411 (Call (Floc 065752) [Con 217] Sp);
  PushFrame 043411;
  SetLocal 1 217;
  JumpCall: 065752, #actuals: 1
LocReturn 043411:
  PushStack call_result;
  TraceOperation 043417 (Je [Var (Global 120),Con 63,Con 127] (Branch F (Dloc 043866)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (LogOr(Equal(MakeHiLo(b1,b2),63),Equal(MakeHiLo(b1,b2),127))) {
    TraceOperation 043424 (Je [Var (Global 118),Con 218] (Branch F (Dloc 043477)));
    Let b3 = M[009053];
    Let b4 = M[009054];
    if (Equal(MakeHiLo(b3,b4),218)) {
      TraceOperation 043428 (Jin (Con 218) (Var (Global 111)) (Branch F (Dloc 043477)));
      Let b5 = M[009039];
      Let b6 = M[009040];
      Let b7 = M[002707];
      if (Equal(MakeHiLo(b5,b6),Widen(b7))) {
        TraceOperation 043432 (Print "The troll scratches his head in confusion, then takes the axe.");
        GamePrint "The troll scratches his head in confusion, then takes the axe.";
        TraceOperation 043469 New_line;
        GamePrint "\n";
        TraceOperation 043470 (Set_attr (Con 217) (Con 2));
        Let b8 = M[002694];
        SetByte 002694 SetBit(b8,5);
        TraceOperation 043473 (Insert_obj (Con 218) (Con 217));
        Let b9 = M[002707];
        if (IsZero(Widen(b9))) {
          SetByte 002707 217;
          Let b10 = M[002700];
          SetByte 002708 LoByte(Widen(b10));
          SetByte 002700 218;
          TraceOperation 043476 Rtrue;
          PopFrame return_address_11;
          JumpReturn: return_address_11, result: 1
        } else {
          Let b12 = M[Offset(Offset(000741,Mul(Widen(b9),9)),6)];
          if (Equal(Widen(b12),218)) {
            Let b13 = M[002708];
            SetByte Offset(Offset(000741,Mul(Widen(b9),9)),6) LoByte(Widen(b13));
            SetByte 002707 217;
            Let b14 = M[002700];
            SetByte 002708 LoByte(Widen(b14));
            SetByte 002700 218;
            TraceOperation 043476 Rtrue;
            PopFrame return_address_15;
            JumpReturn: return_address_15, result: 1
          } else {
            Error: unlink/loop
          }
        }
      } else {
        Jump: 043477
      }
    } else {
      Jump: 043477
    }
  } else {
    Jump: 043866
  }
LocOp 043477:
  TraceOperation 043477 (Je [Var (Global 118),Con 217,Con 218] (Branch F (Dloc 043515)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  if (LogOr(Equal(MakeHiLo(b1,b2),217),Equal(MakeHiLo(b1,b2),218))) {
    TraceOperation 043483 (Print "You would have to get the ");
    GamePrint "You would have to get the ";
    TraceOperation 043494 (Print_obj (Var (Global 118)));
    Let b3 = M[009053];
    Let b4 = M[009054];
    Let b5 = M[Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),7)];
    Let b6 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),7),1)];
    Let b7 = M[Address(MakeHiLo(b5,b6))];
    if (IsZeroByte(b7)) {
      GamePrint "";
      TraceOperation 043496 (Print_ret " first, and that seems unlikely.");
      GamePrint " first, and that seems unlikely.\n";
      PopFrame return_address_8;
      JumpReturn: return_address_8, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b5,b6)),1));
      TraceOperation 043496 (Print_ret " first, and that seems unlikely.");
      GamePrint " first, and that seems unlikely.\n";
      PopFrame return_address_9;
      JumpReturn: return_address_9, result: 1
    }
  } else {
    Jump: 043515
  }
LocOp 043515:
  TraceOperation 043515 (Je [Var (Global 120),Con 127] (Branch F (Dloc 043559)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),127)) {
    TraceOperation 043519 (Print "The troll, who is remarkably coordinated, catches the ");
    GamePrint "The troll, who is remarkably coordinated, catches the ";
    TraceOperation 043554 (Print_obj (Var (Global 118)));
    Let b3 = M[009053];
    Let b4 = M[009054];
    Let b5 = M[Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),7)];
    Let b6 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),7),1)];
    Let b7 = M[Address(MakeHiLo(b5,b6))];
    if (IsZeroByte(b7)) {
      GamePrint "";
      TraceOperation 043556 (Jump 043598);
      Jump: 043598
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b5,b6)),1));
      TraceOperation 043556 (Jump 043598);
      Jump: 043598
    }
  } else {
    Jump: 043559
  }
LocOp 043559:
  TraceOperation 043559 (Print "The troll, who is not overly proud, graciously accepts the gift");
  GamePrint "The troll, who is not overly proud, graciously accepts the gift";
  Jump: 043598
LocOp 043598:
  TraceOperation 043598 (Random (Con 100) Sp);
  LetRandom random1 100;
  PushStack random1;
  TraceOperation 043602 (Jg (Con 20) (Var Sp) (Branch F (Dloc 043715)));
  PopStack popped2;
  if (GreaterThan(20,popped2)) {
    TraceOperation 043607 (Je [Var (Global 118),Con 169,Con 110,Con 218] (Branch F (Dloc 043715)));
    Let b3 = M[009053];
    Let b4 = M[009054];
    if (LogOr(LogOr(Equal(MakeHiLo(b3,b4),169),Equal(MakeHiLo(b3,b4),110)),Equal(MakeHiLo(b3,b4),218))) {
      TraceOperation 043615 (Call (Floc 030906) [Var (Global 118)] Sp);
      Let b5 = M[009053];
      Let b6 = M[009054];
      PushFrame 043615;
      SetLocal 1 MakeHiLo(b5,b6);
      JumpCall: 030906, #actuals: 1
    } else {
      Jump: 043715
    }
  } else {
    Jump: 043715
  }
LocReturn 043615:
  PushStack call_result;
  TraceOperation 043621 (Print " and eats it hungrily. Poor troll, he dies from an internal hemorrhage and his carcass disappears in a sinister black fog.");
  GamePrint " and eats it hungrily. Poor troll, he dies from an internal hemorrhage and his carcass disappears in a sinister black fog.";
  TraceOperation 043694 New_line;
  GamePrint "\n";
  TraceOperation 043695 (Call (Floc 030906) [Con 217] Sp);
  PushFrame 043695;
  SetLocal 1 217;
  JumpCall: 030906, #actuals: 1
LocReturn 043695:
  PushStack call_result;
  TraceOperation 043701 (Get_prop (Con 217) (Con 17) Sp);
  Let b1 = M[002701];
  Let b2 = M[002702];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Error: getPropsA
LocReturn 043705:
  PushStack call_result;
  TraceOperation 043710 (Store (Con 157) (Con 1));
  SetByte 009099 0;
  SetByte 009100 1;
  TraceOperation 043713 (Ret (Var (Global 141)));
  Let b1 = M[009099];
  Let b2 = M[009100];
  PopFrame return_address_3;
  JumpReturn: return_address_3, result: MakeHiLo(b1,b2)
LocOp 043715:
  TraceOperation 043715 (Je [Var (Global 118),Con 169,Con 110,Con 218] (Branch F (Dloc 043815)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),169),Equal(MakeHiLo(b1,b2),110)),Equal(MakeHiLo(b1,b2),218))) {
    TraceOperation 043723 (Insert_obj (Var (Global 118)) (Var (Global 0)));
    Let b3 = M[009053];
    Let b4 = M[009054];
    Let b5 = M[008817];
    Let b6 = M[008818];
    Let b7 = M[Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),4)];
    if (IsZero(Widen(b7))) {
      SetByte Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),4) b6;
      Let b8 = M[Offset(Offset(000741,Mul(MakeHiLo(b5,b6),9)),6)];
      SetByte Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),5) LoByte(Widen(b8));
      SetByte Offset(Offset(000741,Mul(MakeHiLo(b5,b6),9)),6) b4;
      TraceOperation 043726 (Print " and, being for the moment sated, throws it back. Fortunately, the troll has poor control, and the ");
      GamePrint " and, being for the moment sated, throws it back. Fortunately, the troll has poor control, and the ";
      TraceOperation 043777 (Print_obj (Var (Global 118)));
      Let b9 = M[009053];
      Let b10 = M[009054];
      Let b11 = M[Offset(Offset(000741,Mul(MakeHiLo(b9,b10),9)),7)];
      Let b12 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b9,b10),9)),7),1)];
      Let b13 = M[Address(MakeHiLo(b11,b12))];
      if (IsZeroByte(b13)) {
        GamePrint "";
        TraceOperation 043779 (Print " falls to the floor. He does not look pleased.");
        GamePrint " falls to the floor. He does not look pleased.";
        TraceOperation 043810 New_line;
        GamePrint "\n";
        TraceOperation 043811 (Set_attr (Con 217) (Con 2));
        Let b14 = M[002694];
        SetByte 002694 SetBit(b14,5);
        TraceOperation 043814 Rtrue;
        PopFrame return_address_15;
        JumpReturn: return_address_15, result: 1
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b11,b12)),1));
        TraceOperation 043779 (Print " falls to the floor. He does not look pleased.");
        GamePrint " falls to the floor. He does not look pleased.";
        TraceOperation 043810 New_line;
        GamePrint "\n";
        TraceOperation 043811 (Set_attr (Con 217) (Con 2));
        Let b16 = M[002694];
        SetByte 002694 SetBit(b16,5);
        TraceOperation 043814 Rtrue;
        PopFrame return_address_17;
        JumpReturn: return_address_17, result: 1
      }
    } else {
      Let b18 = M[Offset(Offset(000741,Mul(Widen(b7),9)),6)];
      if (Equal(Widen(b18),MakeHiLo(b3,b4))) {
        Let b19 = M[Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),5)];
        SetByte Offset(Offset(000741,Mul(Widen(b7),9)),6) LoByte(Widen(b19));
        SetByte Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),4) b6;
        Let b20 = M[Offset(Offset(000741,Mul(MakeHiLo(b5,b6),9)),6)];
        SetByte Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),5) LoByte(Widen(b20));
        SetByte Offset(Offset(000741,Mul(MakeHiLo(b5,b6),9)),6) b4;
        TraceOperation 043726 (Print " and, being for the moment sated, throws it back. Fortunately, the troll has poor control, and the ");
        GamePrint " and, being for the moment sated, throws it back. Fortunately, the troll has poor control, and the ";
        TraceOperation 043777 (Print_obj (Var (Global 118)));
        Let b21 = M[009053];
        Let b22 = M[009054];
        Let b23 = M[Offset(Offset(000741,Mul(MakeHiLo(b21,b22),9)),7)];
        Let b24 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b21,b22),9)),7),1)];
        Let b25 = M[Address(MakeHiLo(b23,b24))];
        if (IsZeroByte(b25)) {
          GamePrint "";
          TraceOperation 043779 (Print " falls to the floor. He does not look pleased.");
          GamePrint " falls to the floor. He does not look pleased.";
          TraceOperation 043810 New_line;
          GamePrint "\n";
          TraceOperation 043811 (Set_attr (Con 217) (Con 2));
          Let b26 = M[002694];
          SetByte 002694 SetBit(b26,5);
          TraceOperation 043814 Rtrue;
          PopFrame return_address_27;
          JumpReturn: return_address_27, result: 1
        } else {
          GamePrint GetText(Offset(Address(MakeHiLo(b23,b24)),1));
          TraceOperation 043779 (Print " falls to the floor. He does not look pleased.");
          GamePrint " falls to the floor. He does not look pleased.";
          TraceOperation 043810 New_line;
          GamePrint "\n";
          TraceOperation 043811 (Set_attr (Con 217) (Con 2));
          Let b28 = M[002694];
          SetByte 002694 SetBit(b28,5);
          TraceOperation 043814 Rtrue;
          PopFrame return_address_29;
          JumpReturn: return_address_29, result: 1
        }
      } else {
        Error: unlink/loop
      }
    }
  } else {
    Jump: 043815
  }
LocOp 043815:
  TraceOperation 043815 (Print " and not having the most discriminating tastes, gleefully eats it.");
  GamePrint " and not having the most discriminating tastes, gleefully eats it.";
  TraceOperation 043858 New_line;
  GamePrint "\n";
  TraceOperation 043859 (Call (Floc 030906) [Var (Global 118)] Sp);
  Let b1 = M[009053];
  Let b2 = M[009054];
  PushFrame 043859;
  SetLocal 1 MakeHiLo(b1,b2);
  JumpCall: 030906, #actuals: 1
LocReturn 043859:
  PushStack call_result;
  TraceOperation 043865 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 043866:
  TraceOperation 043866 (Je [Var (Global 120),Con 88,Con 93] (Branch F (Dloc 043931)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (LogOr(Equal(MakeHiLo(b1,b2),88),Equal(MakeHiLo(b1,b2),93))) {
    TraceOperation 043872 (Print_ret "The troll spits in your face, grunting \"Better luck next time\" in a rather barbarous accent.");
    GamePrint "The troll spits in your face, grunting \"Better luck next time\" in a rather barbarous accent.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 043931
  }
LocOp 043931:
  TraceOperation 043931 (Je [Var (Global 120),Con 42] (Branch F Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),42)) {
    TraceOperation 043935 (Print_ret "The troll laughs at your puny gesture.");
    GamePrint "The troll laughs at your puny gesture.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 0
  }
LocOp 043956:
  TraceOperation 043956 (Je [Var (Global 120),Con 77] (Branch F (Dloc 044013)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),77)) {
    TraceOperation 043960 (Print_ret "Every so often the troll says something, probably uncomplimentary, in his guttural tongue.");
    GamePrint "Every so often the troll says something, probably uncomplimentary, in his guttural tongue.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 044013
  }
LocOp 044013:
  TraceOperation 044013 (Jz (Var (Global 141)) (Branch T Dfalse));
  Let b1 = M[009099];
  Let b2 = M[009100];
  if (IsZero(MakeHiLo(b1,b2))) {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  } else {
    TraceOperation 044016 (Je [Var (Global 120),Con 66] (Branch F Dfalse));
    Let b4 = M[009057];
    Let b5 = M[009058];
    if (Equal(MakeHiLo(b4,b5),66)) {
      TraceOperation 044020 (Print_ret "Unfortunately, the troll can't hear you.");
      GamePrint "Unfortunately, the troll can't hear you.\n";
      PopFrame return_address_6;
      JumpReturn: return_address_6, result: 1
    } else {
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 0
    }
  }
--[331]--------------------------------------------------
LocRoutine 044036:
  MakeRoutineFrame 0;
  Jump: 044037
LocOp 044037:
  TraceOperation 044037 (Test_attr (Con 174) (Con 11) (Branch T Dfalse));
  Let b1 = M[002308];
  if (TestBit(b1,4)) {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  } else {
    TraceOperation 044041 (Jz (Var (Global 46)) (Branch F Dfalse));
    Let b3 = M[008909];
    Let b4 = M[008910];
    if (IsZero(MakeHiLo(b3,b4))) {
      TraceOperation 044044 (Je [Var (Global 120),Con 93,Con 88] (Branch F (Dloc 044087)));
      Let b5 = M[009057];
      Let b6 = M[009058];
      if (LogOr(Equal(MakeHiLo(b5,b6),93),Equal(MakeHiLo(b5,b6),88))) {
        TraceOperation 044050 (Print "In disturbing the pile of leaves, a grating is revealed.");
        GamePrint "In disturbing the pile of leaves, a grating is revealed.";
        TraceOperation 044083 New_line;
        GamePrint "\n";
        TraceOperation 044084 (Jump 044115);
        Jump: 044115
      } else {
        Jump: 044087
      }
    } else {
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 0
    }
  }
LocOp 044087:
  TraceOperation 044087 (Print "With the leaves moved, a grating is revealed.");
  GamePrint "With the leaves moved, a grating is revealed.";
  TraceOperation 044114 New_line;
  GamePrint "\n";
  Jump: 044115
LocOp 044115:
  TraceOperation 044115 (Clear_attr (Con 174) (Con 7));
  Let b1 = M[002307];
  SetByte 002307 ClearBit(b1,0);
  TraceOperation 044118 (Store (Con 62) (Con 1));
  SetByte 008909 0;
  SetByte 008910 1;
  TraceOperation 044121 Rfalse;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: 0
--[332]--------------------------------------------------
LocRoutine 044122:
  MakeRoutineFrame 0;
  Jump: 044123
LocOp 044123:
  TraceOperation 044123 (Je [Var (Global 120),Con 37] (Branch F (Dloc 044148)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),37)) {
    TraceOperation 044127 (Print_ret "There are 69,105 leaves here.");
    GamePrint "There are 69,105 leaves here.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 044148
  }
LocOp 044148:
  TraceOperation 044148 (Je [Var (Global 120),Con 28] (Branch F (Dloc 044186)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),28)) {
    TraceOperation 044152 (Call (Floc 044036) [] Sp);
    PushFrame 044152;
    JumpCall: 044036, #actuals: 0
  } else {
    Jump: 044186
  }
LocReturn 044152:
  PushStack call_result;
  TraceOperation 044157 (Call (Floc 030906) [Var (Global 118)] Sp);
  Let b1 = M[009053];
  Let b2 = M[009054];
  PushFrame 044157;
  SetLocal 1 MakeHiLo(b1,b2);
  JumpCall: 030906, #actuals: 1
LocReturn 044157:
  PushStack call_result;
  TraceOperation 044163 (Jin (Var (Global 118)) (Var (Global 0)) (Branch F (Dloc 044178)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[008817];
  Let b4 = M[008818];
  Let b5 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),4)];
  if (Equal(MakeHiLo(b3,b4),Widen(b5))) {
    TraceOperation 044167 (Print_ret "The leaves burn.");
    GamePrint "The leaves burn.\n";
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 1
  } else {
    Jump: 044178
  }
--[333]--------------------------------------------------
LocRoutine 044184:
  MakeRoutineFrame 0;
  Jump: 044185
LocOp 044185:
  TraceOperation 044185 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[334]--------------------------------------------------
LocRoutine 044228:
  MakeRoutineFrame 0;
  Jump: 044229
LocOp 044229:
  TraceOperation 044229 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[335]--------------------------------------------------
LocRoutine 044336:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 044339
LocOp 044339:
  TraceOperation 044339 (Je [Var (Local 1),Con 2] (Branch F (Dloc 044350)));
  if (Equal(GetLocal(1),2)) {
    TraceOperation 044343 (Jz (Var (Global 46)) (Branch F Dfalse));
    Let b1 = M[008909];
    Let b2 = M[008910];
    if (IsZero(MakeHiLo(b1,b2))) {
      TraceOperation 044346 (Set_attr (Con 174) (Con 7));
      Let b3 = M[002307];
      SetByte 002307 SetBit(b3,0);
      TraceOperation 044349 Rtrue;
      PopFrame return_address_4;
      JumpReturn: return_address_4, result: 1
    } else {
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 0
    }
  } else {
    Jump: 044350
  }
LocOp 044350:
  TraceOperation 044350 (Je [Var (Local 1),Con 3] (Branch F Dfalse));
  if (Equal(GetLocal(1),3)) {
    TraceOperation 044354 (Print "You are in a clearing, with a forest surrounding you on all sides. A path leads south.");
    GamePrint "You are in a clearing, with a forest surrounding you on all sides. A path leads south.";
    TraceOperation 044405 (Test_attr (Con 174) (Con 11) (Branch F (Dloc 044444)));
    Let b1 = M[002308];
    if (TestBit(b1,4)) {
      TraceOperation 044409 New_line;
      GamePrint "\n";
      TraceOperation 044410 (Print "There is an open grating, descending into darkness.");
      GamePrint "There is an open grating, descending into darkness.";
      TraceOperation 044441 (Jump 044475);
      Jump: 044475
    } else {
      Jump: 044444
    }
  } else {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  }
LocOp 044444:
  TraceOperation 044444 (Jz (Var (Global 46)) (Branch T (Dloc 044475)));
  Let b1 = M[008909];
  Let b2 = M[008910];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 044475
  } else {
    TraceOperation 044447 New_line;
    GamePrint "\n";
    TraceOperation 044448 (Print "There is a grating securely fastened into the ground.");
    GamePrint "There is a grating securely fastened into the ground.";
    Jump: 044475
  }
LocOp 044475:
  TraceOperation 044475 New_line;
  GamePrint "\n";
  TraceOperation 044476 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[336]--------------------------------------------------
LocRoutine 044478:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 044481
LocOp 044481:
  TraceOperation 044481 (Je [Var (Local 1),Con 2] (Branch F (Dloc 044489)));
  if (Equal(GetLocal(1),2)) {
    TraceOperation 044485 (Clear_attr (Con 174) (Con 7));
    Let b1 = M[002307];
    SetByte 002307 ClearBit(b1,0);
    TraceOperation 044488 Rtrue;
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 1
  } else {
    Jump: 044489
  }
LocOp 044489:
  TraceOperation 044489 (Je [Var (Local 1),Con 3] (Branch F Dfalse));
  if (Equal(GetLocal(1),3)) {
    TraceOperation 044493 (Print "You are in a small room near the maze. There are twisty passages in the immediate vicinity.");
    GamePrint "You are in a small room near the maze. There are twisty passages in the immediate vicinity.";
    TraceOperation 044536 New_line;
    GamePrint "\n";
    TraceOperation 044537 (Test_attr (Con 174) (Con 11) (Branch F (Dloc 044575)));
    Let b1 = M[002308];
    if (TestBit(b1,4)) {
      TraceOperation 044541 (Print "Above you is an open grating with sunlight pouring in.");
      GamePrint "Above you is an open grating with sunlight pouring in.";
      TraceOperation 044572 (Jump 044637);
      Jump: 044637
    } else {
      Jump: 044575
    }
  } else {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  }
LocOp 044575:
  TraceOperation 044575 (Jz (Var (Global 45)) (Branch T (Dloc 044598)));
  Let b1 = M[008907];
  Let b2 = M[008908];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 044598
  } else {
    TraceOperation 044578 (Print "Above you is a grating.");
    GamePrint "Above you is a grating.";
    TraceOperation 044595 (Jump 044637);
    Jump: 044637
  }
LocOp 044598:
  TraceOperation 044598 (Print "Above you is a grating locked with a skull-and-crossbones lock.");
  GamePrint "Above you is a grating locked with a skull-and-crossbones lock.";
  Jump: 044637
LocOp 044637:
  TraceOperation 044637 New_line;
  GamePrint "\n";
  TraceOperation 044638 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[337]--------------------------------------------------
LocRoutine 044640:
  MakeRoutineFrame 0;
  Jump: 044641
LocOp 044641:
  TraceOperation 044641 (Je [Var (Global 120),Con 43] (Branch F (Dloc 044658)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),43)) {
    TraceOperation 044645 (Je [Var (Global 119),Con 122] (Branch F (Dloc 044658)));
    Let b3 = M[009055];
    Let b4 = M[009056];
    if (Equal(MakeHiLo(b3,b4),122)) {
      TraceOperation 044649 (Call (Floc 022396) [Con 133,Con 174,Con 122] Sp);
      PushFrame 044649;
      SetLocal 1 133;
      SetLocal 2 174;
      SetLocal 3 122;
      JumpCall: 022396, #actuals: 3
    } else {
      Jump: 044658
    }
  } else {
    Jump: 044658
  }
LocReturn 044649:
  PushStack call_result;
  TraceOperation 044657 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 044658:
  TraceOperation 044658 (Je [Var (Global 120),Con 78] (Branch F (Dloc 044701)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),78)) {
    TraceOperation 044662 (Je [Var (Global 0),Con 57] (Branch F (Dloc 044682)));
    Let b3 = M[008817];
    Let b4 = M[008818];
    if (Equal(MakeHiLo(b3,b4),57)) {
      TraceOperation 044666 (Store (Con 61) (Con 0));
      SetByte 008907 0;
      SetByte 008908 0;
      TraceOperation 044669 (Print_ret "The grate is locked.");
      GamePrint "The grate is locked.\n";
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 1
    } else {
      Jump: 044682
    }
  } else {
    Jump: 044701
  }
LocOp 044682:
  TraceOperation 044682 (Je [Var (Global 0),Con 143] (Branch F Dfalse));
  Let b1 = M[008817];
  Let b2 = M[008818];
  if (Equal(MakeHiLo(b1,b2),143)) {
    TraceOperation 044686 (Print_ret "You can't lock it from this side.");
    GamePrint "You can't lock it from this side.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 0
  }
LocOp 044701:
  TraceOperation 044701 (Je [Var (Global 120),Con 133] (Branch F (Dloc 044782)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),133)) {
    TraceOperation 044706 (Je [Var (Global 118),Con 174] (Branch F (Dloc 044782)));
    Let b3 = M[009053];
    Let b4 = M[009054];
    if (Equal(MakeHiLo(b3,b4),174)) {
      TraceOperation 044711 (Je [Var (Global 0),Con 57] (Branch F (Dloc 044737)));
      Let b5 = M[008817];
      Let b6 = M[008818];
      if (Equal(MakeHiLo(b5,b6),57)) {
        TraceOperation 044715 (Je [Var (Global 119),Con 122] (Branch F (Dloc 044737)));
        Let b7 = M[009055];
        Let b8 = M[009056];
        if (Equal(MakeHiLo(b7,b8),122)) {
          TraceOperation 044719 (Store (Con 61) (Con 1));
          SetByte 008907 0;
          SetByte 008908 1;
          TraceOperation 044722 (Print_ret "The grate is unlocked.");
          GamePrint "The grate is unlocked.\n";
          PopFrame return_address_9;
          JumpReturn: return_address_9, result: 1
        } else {
          Jump: 044737
        }
      } else {
        Jump: 044737
      }
    } else {
      Jump: 044782
    }
  } else {
    Jump: 044782
  }
LocOp 044737:
  TraceOperation 044737 (Je [Var (Global 0),Con 143] (Branch F (Dloc 044762)));
  Let b1 = M[008817];
  Let b2 = M[008818];
  if (Equal(MakeHiLo(b1,b2),143)) {
    TraceOperation 044741 (Je [Var (Global 119),Con 122] (Branch F (Dloc 044762)));
    Let b3 = M[009055];
    Let b4 = M[009056];
    if (Equal(MakeHiLo(b3,b4),122)) {
      TraceOperation 044745 (Print_ret "You can't reach the lock from here.");
      GamePrint "You can't reach the lock from here.\n";
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 1
    } else {
      Jump: 044762
    }
  } else {
    Jump: 044762
  }
LocOp 044762:
  TraceOperation 044762 (Print "Can you unlock a grating with a ");
  GamePrint "Can you unlock a grating with a ";
  TraceOperation 044777 (Print_obj (Var (Global 119)));
  Let b1 = M[009055];
  Let b2 = M[009056];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  if (IsZeroByte(b5)) {
    GamePrint "";
    TraceOperation 044779 (Print_ret "?");
    GamePrint "?\n";
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
    TraceOperation 044779 (Print_ret "?");
    GamePrint "?\n";
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 1
  }
LocOp 044782:
  TraceOperation 044782 (Je [Var (Global 120),Con 92] (Branch F (Dloc 044799)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),92)) {
    TraceOperation 044786 (Print_ret "You can't pick the lock.");
    GamePrint "You can't pick the lock.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 044799
  }
LocOp 044799:
  TraceOperation 044799 (Je [Var (Global 120),Con 35,Con 43] (Branch F (Dloc 044904)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (LogOr(Equal(MakeHiLo(b1,b2),35),Equal(MakeHiLo(b1,b2),43))) {
    TraceOperation 044806 (Jz (Var (Global 45)) (Branch T (Dloc 044893)));
    Let b3 = M[008907];
    Let b4 = M[008908];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 044893
    } else {
      TraceOperation 044810 (Je [Var (Global 0),Con 74] (Branch F (Dloc 044821)));
      Let b5 = M[008817];
      Let b6 = M[008818];
      if (Equal(MakeHiLo(b5,b6),74)) {
        TraceOperation 044814 (Push (Con -25527));
        PushStack -25527;
        TraceOperation 044818 (Jump 044825);
        Jump: 044825
      } else {
        Jump: 044821
      }
    }
  } else {
    Jump: 044904
  }
LocOp 044821:
  TraceOperation 044821 (Push (Con -25523));
  PushStack -25523;
  Jump: 044825
LocOp 044825:
  TraceOperation 044825 (Call (Floc 038394) [Con 174,Var Sp,Con -28399] Sp);
  PopStack popped1;
  PushFrame 044825;
  SetLocal 1 174;
  SetLocal 2 popped1;
  SetLocal 3 -28399;
  JumpCall: 038394, #actuals: 3
LocReturn 044825:
  PushStack call_result;
  TraceOperation 044834 (Test_attr (Con 174) (Con 11) (Branch F (Dloc 044889)));
  Let b1 = M[002308];
  if (TestBit(b1,4)) {
    TraceOperation 044838 (Je [Var (Global 0),Con 74] (Branch T (Dloc 044885)));
    Let b2 = M[008817];
    Let b3 = M[008818];
    if (Equal(MakeHiLo(b2,b3),74)) {
      Jump: 044885
    } else {
      TraceOperation 044842 (Jz (Var (Global 46)) (Branch F (Dloc 044885)));
      Let b4 = M[008909];
      Let b5 = M[008910];
      if (IsZero(MakeHiLo(b4,b5))) {
        TraceOperation 044845 (Print "A pile of leaves falls onto your head and to the ground.");
        GamePrint "A pile of leaves falls onto your head and to the ground.";
        TraceOperation 044878 New_line;
        GamePrint "\n";
        TraceOperation 044879 (Store (Con 62) (Con 1));
        SetByte 008909 0;
        SetByte 008910 1;
        TraceOperation 044882 (Insert_obj (Con 144) (Var (Global 0)));
        Let b6 = M[008817];
        Let b7 = M[008818];
        Let b8 = M[002041];
        if (IsZero(Widen(b8))) {
          SetByte 002041 b7;
          Let b9 = M[Offset(Offset(000741,Mul(MakeHiLo(b6,b7),9)),6)];
          SetByte 002042 LoByte(Widen(b9));
          SetByte Offset(Offset(000741,Mul(MakeHiLo(b6,b7),9)),6) 144;
          Jump: 044885
        } else {
          Let b10 = M[Offset(Offset(000741,Mul(Widen(b8),9)),6)];
          if (Equal(Widen(b10),144)) {
            Let b11 = M[002042];
            SetByte Offset(Offset(000741,Mul(Widen(b8),9)),6) LoByte(Widen(b11));
            SetByte 002041 b7;
            Let b12 = M[Offset(Offset(000741,Mul(MakeHiLo(b6,b7),9)),6)];
            SetByte 002042 LoByte(Widen(b12));
            SetByte Offset(Offset(000741,Mul(MakeHiLo(b6,b7),9)),6) 144;
            Jump: 044885
          } else {
            Error: unlink/loop
          }
        }
      } else {
        Jump: 044885
      }
    }
  } else {
    Jump: 044889
  }
LocOp 044885:
  TraceOperation 044885 (Set_attr (Con 57) (Con 20));
  Let b1 = M[001256];
  SetByte 001256 SetBit(b1,3);
  TraceOperation 044888 Rtrue;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: 1
LocOp 044889:
  TraceOperation 044889 (Clear_attr (Con 57) (Con 20));
  Let b1 = M[001256];
  SetByte 001256 ClearBit(b1,3);
  TraceOperation 044892 Rtrue;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: 1
LocOp 044893:
  TraceOperation 044893 (Print_ret "The grating is locked.");
  GamePrint "The grating is locked.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 044904:
  TraceOperation 044904 (Je [Var (Global 120),Con 18] (Branch F Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),18)) {
    TraceOperation 044908 (Je [Var (Global 119),Con 174] (Branch F Dfalse));
    Let b3 = M[009055];
    Let b4 = M[009056];
    if (Equal(MakeHiLo(b3,b4),174)) {
      TraceOperation 044912 (Get_prop (Var (Global 118)) (Con 15) Sp);
      Let b5 = M[009053];
      Let b6 = M[009054];
      Let b7 = M[Offset(Offset(000741,Mul(MakeHiLo(b5,b6),9)),7)];
      Let b8 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b5,b6),9)),7),1)];
      Let b9 = M[Address(MakeHiLo(b7,b8))];
      Error: getPropsA
    } else {
      PopFrame return_address_10;
      JumpReturn: return_address_10, result: 0
    }
  } else {
    PopFrame return_address_11;
    JumpReturn: return_address_11, result: 0
  }
LocOp 044935:
  TraceOperation 044935 (Insert_obj (Var (Global 118)) (Con 57));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),4)];
  if (IsZero(Widen(b3))) {
    SetByte Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),4) 57;
    Let b4 = M[001260];
    SetByte Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),5) LoByte(Widen(b4));
    SetByte 001260 b2;
    TraceOperation 044938 (Print "The ");
    GamePrint "The ";
    TraceOperation 044941 (Print_obj (Var (Global 118)));
    Let b5 = M[009053];
    Let b6 = M[009054];
    Let b7 = M[Offset(Offset(000741,Mul(MakeHiLo(b5,b6),9)),7)];
    Let b8 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b5,b6),9)),7),1)];
    Let b9 = M[Address(MakeHiLo(b7,b8))];
    if (IsZeroByte(b9)) {
      GamePrint "";
      TraceOperation 044943 (Print_ret " goes through the grating into the darkness below.");
      GamePrint " goes through the grating into the darkness below.\n";
      PopFrame return_address_10;
      JumpReturn: return_address_10, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b7,b8)),1));
      TraceOperation 044943 (Print_ret " goes through the grating into the darkness below.");
      GamePrint " goes through the grating into the darkness below.\n";
      PopFrame return_address_11;
      JumpReturn: return_address_11, result: 1
    }
  } else {
    Let b12 = M[Offset(Offset(000741,Mul(Widen(b3),9)),6)];
    if (Equal(Widen(b12),MakeHiLo(b1,b2))) {
      Let b13 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),5)];
      SetByte Offset(Offset(000741,Mul(Widen(b3),9)),6) LoByte(Widen(b13));
      SetByte Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),4) 57;
      Let b14 = M[001260];
      SetByte Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),5) LoByte(Widen(b14));
      SetByte 001260 b2;
      TraceOperation 044938 (Print "The ");
      GamePrint "The ";
      TraceOperation 044941 (Print_obj (Var (Global 118)));
      Let b15 = M[009053];
      Let b16 = M[009054];
      Let b17 = M[Offset(Offset(000741,Mul(MakeHiLo(b15,b16),9)),7)];
      Let b18 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b15,b16),9)),7),1)];
      Let b19 = M[Address(MakeHiLo(b17,b18))];
      if (IsZeroByte(b19)) {
        GamePrint "";
        TraceOperation 044943 (Print_ret " goes through the grating into the darkness below.");
        GamePrint " goes through the grating into the darkness below.\n";
        PopFrame return_address_20;
        JumpReturn: return_address_20, result: 1
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b17,b18)),1));
        TraceOperation 044943 (Print_ret " goes through the grating into the darkness below.");
        GamePrint " goes through the grating into the darkness below.\n";
        PopFrame return_address_21;
        JumpReturn: return_address_21, result: 1
      }
    } else {
      Error: unlink/loop
    }
  }
--[338]--------------------------------------------------
LocRoutine 044966:
  MakeRoutineFrame 0;
  Jump: 044967
LocOp 044967:
  TraceOperation 044967 (Print "You won't be able to get back up to the tunnel you are going through when it gets to the next room.");
  GamePrint "You won't be able to get back up to the tunnel you are going through when it gets to the next room.";
  TraceOperation 045018 New_line;
  GamePrint "\n";
  TraceOperation 045019 New_line;
  GamePrint "\n";
  TraceOperation 045020 (Je [Var (Global 0),Con 69] (Branch F (Dloc 045026)));
  Let b1 = M[008817];
  Let b2 = M[008818];
  if (Equal(MakeHiLo(b1,b2),69)) {
    TraceOperation 045024 (Ret (Con 67));
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 67
  } else {
    Jump: 045026
  }
LocOp 045026:
  TraceOperation 045026 (Je [Var (Global 0),Con 63] (Branch F (Dloc 045032)));
  Let b1 = M[008817];
  Let b2 = M[008818];
  if (Equal(MakeHiLo(b1,b2),63)) {
    TraceOperation 045030 (Ret (Con 66));
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 66
  } else {
    Jump: 045032
  }
LocOp 045032:
  TraceOperation 045032 (Je [Var (Global 0),Con 60] (Branch F (Dloc 045038)));
  Let b1 = M[008817];
  Let b2 = M[008818];
  if (Equal(MakeHiLo(b1,b2),60)) {
    TraceOperation 045036 (Ret (Con 58));
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 58
  } else {
    Jump: 045038
  }
LocOp 045038:
  TraceOperation 045038 (Je [Var (Global 0),Con 56] (Branch F Dfalse));
  Let b1 = M[008817];
  Let b2 = M[008818];
  if (Equal(MakeHiLo(b1,b2),56)) {
    TraceOperation 045042 (Ret (Con 167));
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 167
  } else {
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 0
  }
--[339]--------------------------------------------------
LocRoutine 045044:
  MakeRoutineFrame 0;
  Jump: 045045
LocOp 045045:
  TraceOperation 045045 (Je [Var (Global 120),Con 93] (Branch F (Dloc 045111)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),93)) {
    TraceOperation 045050 (Jin (Con 110) (Var (Global 111)) (Branch F Dfalse));
    Let b3 = M[009039];
    Let b4 = M[009040];
    Let b5 = M[001735];
    if (Equal(MakeHiLo(b3,b4),Widen(b5))) {
      TraceOperation 045054 (Print "As you touch the rusty knife, your sword gives a single pulse of blinding blue light.");
      GamePrint "As you touch the rusty knife, your sword gives a single pulse of blinding blue light.";
      TraceOperation 045109 New_line;
      GamePrint "\n";
      TraceOperation 045110 Rfalse;
      PopFrame return_address_6;
      JumpReturn: return_address_6, result: 0
    } else {
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 0
    }
  } else {
    Jump: 045111
  }
LocOp 045111:
  TraceOperation 045111 (Je [Var (Global 119),Con 128] (Branch F (Dloc 045119)));
  Let b1 = M[009055];
  Let b2 = M[009056];
  if (Equal(MakeHiLo(b1,b2),128)) {
    TraceOperation 045115 (Je [Var (Global 120),Con 19] (Branch T (Dloc 045130)));
    Let b3 = M[009057];
    Let b4 = M[009058];
    if (Equal(MakeHiLo(b3,b4),19)) {
      Jump: 045130
    } else {
      Jump: 045119
    }
  } else {
    Jump: 045119
  }
LocOp 045119:
  TraceOperation 045119 (Je [Var (Global 120),Con 126] (Branch F Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),126)) {
    TraceOperation 045123 (Je [Var (Global 118),Con 128] (Branch F Dfalse));
    Let b3 = M[009053];
    Let b4 = M[009054];
    if (Equal(MakeHiLo(b3,b4),128)) {
      TraceOperation 045127 (Jz (Var (Global 119)) (Branch T Dfalse));
      Let b5 = M[009055];
      Let b6 = M[009056];
      if (IsZero(MakeHiLo(b5,b6))) {
        PopFrame return_address_7;
        JumpReturn: return_address_7, result: 0
      } else {
        Jump: 045130
      }
    } else {
      PopFrame return_address_8;
      JumpReturn: return_address_8, result: 0
    }
  } else {
    PopFrame return_address_9;
    JumpReturn: return_address_9, result: 0
  }
LocOp 045130:
  TraceOperation 045130 (Call (Floc 030906) [Con 128] Sp);
  PushFrame 045130;
  SetLocal 1 128;
  JumpCall: 030906, #actuals: 1
LocReturn 045130:
  PushStack call_result;
  TraceOperation 045136 (Call (Floc 067174) [Con -25511] Sp);
  PushFrame 045136;
  SetLocal 1 -25511;
  JumpCall: 067174, #actuals: 1
LocReturn 045136:
  PushStack call_result;
  TraceOperation 045143 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[340]--------------------------------------------------
LocRoutine 045144:
  MakeRoutineFrame 0;
  Jump: 045145
LocOp 045145:
  TraceOperation 045145 (Je [Var (Global 120),Con 93] (Branch F Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),93)) {
    TraceOperation 045149 (Clear_attr (Con 202) (Con 14));
    Let b3 = M[002560];
    SetByte 002560 ClearBit(b3,1);
    TraceOperation 045152 Rfalse;
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 0
  } else {
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 0
  }
--[341]--------------------------------------------------
LocRoutine 045154:
  MakeRoutineFrame 0;
  Jump: 045155
LocOp 045155:
  TraceOperation 045155 (Je [Var (Global 120),Con 88,Con 110,Con 93] (Branch T (Dloc 045176)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),88),Equal(MakeHiLo(b1,b2),110)),Equal(MakeHiLo(b1,b2),93))) {
    Jump: 045176
  } else {
    TraceOperation 045162 (Je [Var (Global 120),Con 84,Con 105,Con 101] (Branch T (Dloc 045176)));
    Let b3 = M[009057];
    Let b4 = M[009058];
    if (LogOr(LogOr(Equal(MakeHiLo(b3,b4),84),Equal(MakeHiLo(b3,b4),105)),Equal(MakeHiLo(b3,b4),101))) {
      Jump: 045176
    } else {
      TraceOperation 045169 (Je [Var (Global 120),Con 72,Con 70,Con 19] (Branch F Dfalse));
      Let b5 = M[009057];
      Let b6 = M[009058];
      if (LogOr(LogOr(Equal(MakeHiLo(b5,b6),72),Equal(MakeHiLo(b5,b6),70)),Equal(MakeHiLo(b5,b6),19))) {
        Jump: 045176
      } else {
        PopFrame return_address_7;
        JumpReturn: return_address_7, result: 0
      }
    }
  }
LocOp 045176:
  TraceOperation 045176 (Print "A ghost appears in the room and is appalled at your desecration of the remains of a fellow adventurer. He casts a curse on your valuables and banishes them to the Land of the Living Dead. The ghost leaves, muttering obscenities.");
  GamePrint "A ghost appears in the room and is appalled at your desecration of the remains of a fellow adventurer. He casts a curse on your valuables and banishes them to the Land of the Living Dead. The ghost leaves, muttering obscenities.";
  TraceOperation 045307 New_line;
  GamePrint "\n";
  TraceOperation 045308 (Call (Floc 066488) [Var (Global 0),Con 230,Con 100] Sp);
  Let b1 = M[008817];
  Let b2 = M[008818];
  PushFrame 045308;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 230;
  SetLocal 3 100;
  JumpCall: 066488, #actuals: 3
LocReturn 045308:
  PushStack call_result;
  TraceOperation 045316 (Call (Floc 066488) [Con 4,Con 230] Sp);
  PushFrame 045316;
  SetLocal 1 4;
  SetLocal 2 230;
  JumpCall: 066488, #actuals: 2
LocReturn 045316:
  PushStack call_result;
  TraceOperation 045323 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[342]--------------------------------------------------
LocRoutine 045324:
  MakeRoutineFrame 0;
  Jump: 045325
LocOp 045325:
  TraceOperation 045325 (Je [Var (Global 120),Con 56] (Branch F (Dloc 045344)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),56)) {
    TraceOperation 045329 (Print_ret "The torch is burning.");
    GamePrint "The torch is burning.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 045344
  }
LocOp 045344:
  TraceOperation 045344 (Je [Var (Global 120),Con 97] (Branch F (Dloc 045375)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),97)) {
    TraceOperation 045348 (Je [Var (Global 119),Con 104] (Branch F (Dloc 045375)));
    Let b3 = M[009055];
    Let b4 = M[009056];
    if (Equal(MakeHiLo(b3,b4),104)) {
      TraceOperation 045352 (Print_ret "The water evaporates before it gets close.");
      GamePrint "The water evaporates before it gets close.\n";
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 1
    } else {
      Jump: 045375
    }
  } else {
    Jump: 045375
  }
LocOp 045375:
  TraceOperation 045375 (Je [Var (Global 120),Con 22] (Branch F Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),22)) {
    TraceOperation 045379 (Test_attr (Var (Global 118)) (Con 20) (Branch F Dfalse));
    Let b3 = M[009053];
    Let b4 = M[009054];
    Let b5 = M[Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),2)];
    if (TestBit(b5,3)) {
      TraceOperation 045383 (Print_ret "You nearly burn your hand trying to extinguish the flame.");
      GamePrint "You nearly burn your hand trying to extinguish the flame.\n";
      PopFrame return_address_6;
      JumpReturn: return_address_6, result: 1
    } else {
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 0
    }
  } else {
    PopFrame return_address_8;
    JumpReturn: return_address_8, result: 0
  }
--[343]--------------------------------------------------
LocRoutine 045416:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 045419
LocOp 045419:
  TraceOperation 045419 (Je [Var (Local 1),Con 3] (Branch F Dfalse));
  if (Equal(GetLocal(1),3)) {
    TraceOperation 045423 (Print "You are in a large square room with tall ceilings. On the south wall is an enormous mirror which fills the entire wall. There are exits on the other three sides of the room.");
    GamePrint "You are in a large square room with tall ceilings. On the south wall is an enormous mirror which fills the entire wall. There are exits on the other three sides of the room.";
    TraceOperation 045508 New_line;
    GamePrint "\n";
    TraceOperation 045509 (Jz (Var (Global 44)) (Branch T Dfalse));
    Let b1 = M[008905];
    Let b2 = M[008906];
    if (IsZero(MakeHiLo(b1,b2))) {
      PopFrame return_address_3;
      JumpReturn: return_address_3, result: 0
    } else {
      TraceOperation 045512 (Print_ret "Unfortunately, the mirror has been destroyed by your recklessness.");
      GamePrint "Unfortunately, the mirror has been destroyed by your recklessness.\n";
      PopFrame return_address_4;
      JumpReturn: return_address_4, result: 1
    }
  } else {
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 0
  }
--[344]--------------------------------------------------
LocRoutine 045548:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 152;
        }
      }
    }
  }
  Jump: 045557
LocOp 045557:
  TraceOperation 045557 (Jz (Var (Global 44)) (Branch F (Dloc 045702)));
  Let b1 = M[008905];
  Let b2 = M[008906];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 045561 (Je [Var (Global 120),Con 110] (Branch F (Dloc 045702)));
    Let b3 = M[009057];
    Let b4 = M[009058];
    if (Equal(MakeHiLo(b3,b4),110)) {
      TraceOperation 045566 (Jz (Var (Global 119)) (Branch T (Dloc 045607)));
      Let b5 = M[009055];
      Let b6 = M[009056];
      if (IsZero(MakeHiLo(b5,b6))) {
        Jump: 045607
      } else {
        TraceOperation 045569 (Je [Var (Global 119),Con 1] (Branch T (Dloc 045607)));
        Let b7 = M[009055];
        Let b8 = M[009056];
        if (Equal(MakeHiLo(b7,b8),1)) {
          Jump: 045607
        } else {
          TraceOperation 045573 (Print "You feel a faint tingling transmitted through the ");
          GamePrint "You feel a faint tingling transmitted through the ";
          TraceOperation 045602 (Print_obj (Var (Global 119)));
          Let b9 = M[009055];
          Let b10 = M[009056];
          Let b11 = M[Offset(Offset(000741,Mul(MakeHiLo(b9,b10),9)),7)];
          Let b12 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b9,b10),9)),7),1)];
          Let b13 = M[Address(MakeHiLo(b11,b12))];
          if (IsZeroByte(b13)) {
            GamePrint "";
            TraceOperation 045604 (Print_ret ".");
            GamePrint ".\n";
            PopFrame return_address_14;
            JumpReturn: return_address_14, result: 1
          } else {
            GamePrint GetText(Offset(Address(MakeHiLo(b11,b12)),1));
            TraceOperation 045604 (Print_ret ".");
            GamePrint ".\n";
            PopFrame return_address_15;
            JumpReturn: return_address_15, result: 1
          }
        }
      }
    } else {
      Jump: 045702
    }
  } else {
    Jump: 045702
  }
LocOp 045607:
  TraceOperation 045607 (Je [Var (Global 0),Var (Local 1)] (Branch F (Dloc 045614)));
  Let b1 = M[008817];
  Let b2 = M[008818];
  if (Equal(MakeHiLo(b1,b2),GetLocal(1))) {
    TraceOperation 045611 (Store (Con 1) (Con 150));
    SetLocal 1 150;
    Jump: 045614
  } else {
    Jump: 045614
  }
LocOp 045614:
  TraceOperation 045614 (Get_child (Var (Global 0)) (Local 2) (Branch T (Dloc 045618)));
  Let b1 = M[008817];
  Let b2 = M[008818];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),6)];
  SetLocal 2 Widen(b3);
  if (IsZero(Widen(b3))) {
    TraceOperation 045618 (Get_child (Var (Local 1)) (Local 3) (Branch T (Dloc 045622)));
    Let b4 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),6)];
    SetLocal 3 Widen(b4);
    if (IsZero(Widen(b4))) {
      Jump: 045622
    } else {
      Jump: 045622
    }
  } else {
    TraceOperation 045618 (Get_child (Var (Local 1)) (Local 3) (Branch T (Dloc 045622)));
    Let b5 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),6)];
    SetLocal 3 Widen(b5);
    if (IsZero(Widen(b5))) {
      Jump: 045622
    } else {
      Jump: 045622
    }
  }
LocOp 045622:
  TraceOperation 045622 (Jz (Var (Local 2)) (Branch F (Dloc 045628)));
  if (IsZero(GetLocal(2))) {
    TraceOperation 045625 (Jump 045641);
    Jump: 045641
  } else {
    Jump: 045628
  }
LocOp 045628:
  TraceOperation 045628 (Get_sibling (Var (Local 2)) (Local 4) (Branch T (Dloc 045632)));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(2),9)),5)];
  SetLocal 4 Widen(b1);
  if (IsZero(Widen(b1))) {
    TraceOperation 045632 (Insert_obj (Var (Local 2)) (Var (Local 1)));
    Let b2 = M[Offset(Offset(000741,Mul(GetLocal(2),9)),4)];
    if (IsZero(Widen(b2))) {
      SetByte Offset(Offset(000741,Mul(GetLocal(2),9)),4) LoByte(GetLocal(1));
      Let b3 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),6)];
      SetByte Offset(Offset(000741,Mul(GetLocal(2),9)),5) LoByte(Widen(b3));
      SetByte Offset(Offset(000741,Mul(GetLocal(1),9)),6) LoByte(GetLocal(2));
      TraceOperation 045635 (Store (Con 2) (Var (Local 4)));
      SetLocal 2 GetLocal(4);
      TraceOperation 045638 (Jump 045622);
      Jump: 045622
    } else {
      Let b4 = M[Offset(Offset(000741,Mul(Widen(b2),9)),6)];
      if (Equal(Widen(b4),GetLocal(2))) {
        Let b5 = M[Offset(Offset(000741,Mul(GetLocal(2),9)),5)];
        SetByte Offset(Offset(000741,Mul(Widen(b2),9)),6) LoByte(Widen(b5));
        SetByte Offset(Offset(000741,Mul(GetLocal(2),9)),4) LoByte(GetLocal(1));
        Let b6 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),6)];
        SetByte Offset(Offset(000741,Mul(GetLocal(2),9)),5) LoByte(Widen(b6));
        SetByte Offset(Offset(000741,Mul(GetLocal(1),9)),6) LoByte(GetLocal(2));
        TraceOperation 045635 (Store (Con 2) (Var (Local 4)));
        SetLocal 2 GetLocal(4);
        TraceOperation 045638 (Jump 045622);
        Jump: 045622
      } else {
        Error: unlink/loop
      }
    }
  } else {
    TraceOperation 045632 (Insert_obj (Var (Local 2)) (Var (Local 1)));
    Let b7 = M[Offset(Offset(000741,Mul(GetLocal(2),9)),4)];
    if (IsZero(Widen(b7))) {
      SetByte Offset(Offset(000741,Mul(GetLocal(2),9)),4) LoByte(GetLocal(1));
      Let b8 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),6)];
      SetByte Offset(Offset(000741,Mul(GetLocal(2),9)),5) LoByte(Widen(b8));
      SetByte Offset(Offset(000741,Mul(GetLocal(1),9)),6) LoByte(GetLocal(2));
      TraceOperation 045635 (Store (Con 2) (Var (Local 4)));
      SetLocal 2 GetLocal(4);
      TraceOperation 045638 (Jump 045622);
      Jump: 045622
    } else {
      Let b9 = M[Offset(Offset(000741,Mul(Widen(b7),9)),6)];
      if (Equal(Widen(b9),GetLocal(2))) {
        Let b10 = M[Offset(Offset(000741,Mul(GetLocal(2),9)),5)];
        SetByte Offset(Offset(000741,Mul(Widen(b7),9)),6) LoByte(Widen(b10));
        SetByte Offset(Offset(000741,Mul(GetLocal(2),9)),4) LoByte(GetLocal(1));
        Let b11 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),6)];
        SetByte Offset(Offset(000741,Mul(GetLocal(2),9)),5) LoByte(Widen(b11));
        SetByte Offset(Offset(000741,Mul(GetLocal(1),9)),6) LoByte(GetLocal(2));
        TraceOperation 045635 (Store (Con 2) (Var (Local 4)));
        SetLocal 2 GetLocal(4);
        TraceOperation 045638 (Jump 045622);
        Jump: 045622
      } else {
        Error: unlink/loop
      }
    }
  }
LocOp 045641:
  TraceOperation 045641 (Jz (Var (Local 3)) (Branch F (Dloc 045647)));
  if (IsZero(GetLocal(3))) {
    TraceOperation 045644 (Jump 045660);
    Jump: 045660
  } else {
    Jump: 045647
  }
LocOp 045647:
  TraceOperation 045647 (Get_sibling (Var (Local 3)) (Local 4) (Branch T (Dloc 045651)));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(3),9)),5)];
  SetLocal 4 Widen(b1);
  if (IsZero(Widen(b1))) {
    TraceOperation 045651 (Insert_obj (Var (Local 3)) (Var (Global 0)));
    Let b2 = M[008817];
    Let b3 = M[008818];
    Let b4 = M[Offset(Offset(000741,Mul(GetLocal(3),9)),4)];
    if (IsZero(Widen(b4))) {
      SetByte Offset(Offset(000741,Mul(GetLocal(3),9)),4) b3;
      Let b5 = M[Offset(Offset(000741,Mul(MakeHiLo(b2,b3),9)),6)];
      SetByte Offset(Offset(000741,Mul(GetLocal(3),9)),5) LoByte(Widen(b5));
      SetByte Offset(Offset(000741,Mul(MakeHiLo(b2,b3),9)),6) LoByte(GetLocal(3));
      TraceOperation 045654 (Store (Con 3) (Var (Local 4)));
      SetLocal 3 GetLocal(4);
      TraceOperation 045657 (Jump 045641);
      Jump: 045641
    } else {
      Let b6 = M[Offset(Offset(000741,Mul(Widen(b4),9)),6)];
      if (Equal(Widen(b6),GetLocal(3))) {
        Let b7 = M[Offset(Offset(000741,Mul(GetLocal(3),9)),5)];
        SetByte Offset(Offset(000741,Mul(Widen(b4),9)),6) LoByte(Widen(b7));
        SetByte Offset(Offset(000741,Mul(GetLocal(3),9)),4) b3;
        Let b8 = M[Offset(Offset(000741,Mul(MakeHiLo(b2,b3),9)),6)];
        SetByte Offset(Offset(000741,Mul(GetLocal(3),9)),5) LoByte(Widen(b8));
        SetByte Offset(Offset(000741,Mul(MakeHiLo(b2,b3),9)),6) LoByte(GetLocal(3));
        TraceOperation 045654 (Store (Con 3) (Var (Local 4)));
        SetLocal 3 GetLocal(4);
        TraceOperation 045657 (Jump 045641);
        Jump: 045641
      } else {
        Error: unlink/loop
      }
    }
  } else {
    TraceOperation 045651 (Insert_obj (Var (Local 3)) (Var (Global 0)));
    Let b9 = M[008817];
    Let b10 = M[008818];
    Let b11 = M[Offset(Offset(000741,Mul(GetLocal(3),9)),4)];
    if (IsZero(Widen(b11))) {
      SetByte Offset(Offset(000741,Mul(GetLocal(3),9)),4) b10;
      Let b12 = M[Offset(Offset(000741,Mul(MakeHiLo(b9,b10),9)),6)];
      SetByte Offset(Offset(000741,Mul(GetLocal(3),9)),5) LoByte(Widen(b12));
      SetByte Offset(Offset(000741,Mul(MakeHiLo(b9,b10),9)),6) LoByte(GetLocal(3));
      TraceOperation 045654 (Store (Con 3) (Var (Local 4)));
      SetLocal 3 GetLocal(4);
      TraceOperation 045657 (Jump 045641);
      Jump: 045641
    } else {
      Let b13 = M[Offset(Offset(000741,Mul(Widen(b11),9)),6)];
      if (Equal(Widen(b13),GetLocal(3))) {
        Let b14 = M[Offset(Offset(000741,Mul(GetLocal(3),9)),5)];
        SetByte Offset(Offset(000741,Mul(Widen(b11),9)),6) LoByte(Widen(b14));
        SetByte Offset(Offset(000741,Mul(GetLocal(3),9)),4) b10;
        Let b15 = M[Offset(Offset(000741,Mul(MakeHiLo(b9,b10),9)),6)];
        SetByte Offset(Offset(000741,Mul(GetLocal(3),9)),5) LoByte(Widen(b15));
        SetByte Offset(Offset(000741,Mul(MakeHiLo(b9,b10),9)),6) LoByte(GetLocal(3));
        TraceOperation 045654 (Store (Con 3) (Var (Local 4)));
        SetLocal 3 GetLocal(4);
        TraceOperation 045657 (Jump 045641);
        Jump: 045641
      } else {
        Error: unlink/loop
      }
    }
  }
LocOp 045660:
  TraceOperation 045660 (Call (Floc 037558) [Var (Local 1),Con 0] Sp);
  PushFrame 045660;
  SetLocal 1 GetLocal(1);
  SetLocal 2 0;
  JumpCall: 037558, #actuals: 2
LocReturn 045660:
  PushStack call_result;
  TraceOperation 045667 (Print_ret "There is a rumble from deep within the earth and the room shakes.");
  GamePrint "There is a rumble from deep within the earth and the room shakes.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 045702:
  TraceOperation 045702 (Je [Var (Global 120),Con 56,Con 57] (Branch F (Dloc 045766)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (LogOr(Equal(MakeHiLo(b1,b2),56),Equal(MakeHiLo(b1,b2),57))) {
    TraceOperation 045708 (Jz (Var (Global 44)) (Branch T (Dloc 045737)));
    Let b3 = M[008905];
    Let b4 = M[008906];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 045737
    } else {
      TraceOperation 045711 (Print "The mirror is broken into many pieces.");
      GamePrint "The mirror is broken into many pieces.";
      TraceOperation 045734 (Jump 045764);
      Jump: 045764
    }
  } else {
    Jump: 045766
  }
LocOp 045737:
  TraceOperation 045737 (Print "There is an ugly person staring back at you.");
  GamePrint "There is an ugly person staring back at you.";
  Jump: 045764
LocOp 045764:
  TraceOperation 045764 New_line;
  GamePrint "\n";
  TraceOperation 045765 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 045766:
  TraceOperation 045766 (Je [Var (Global 120),Con 93] (Branch F (Dloc 045799)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),93)) {
    TraceOperation 045770 (Print_ret "The mirror is many times your size. Give up.");
    GamePrint "The mirror is many times your size. Give up.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 045799
  }
LocOp 045799:
  TraceOperation 045799 (Je [Var (Global 120),Con 19,Con 127,Con 42] (Branch F Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),19),Equal(MakeHiLo(b1,b2),127)),Equal(MakeHiLo(b1,b2),42))) {
    TraceOperation 045806 (Jz (Var (Global 44)) (Branch T (Dloc 045838)));
    Let b3 = M[008905];
    Let b4 = M[008906];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 045838
    } else {
      TraceOperation 045809 (Print_ret "Haven't you done enough damage already?");
      GamePrint "Haven't you done enough damage already?\n";
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 1
    }
  } else {
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 0
  }
LocOp 045838:
  TraceOperation 045838 (Store (Con 60) (Con 1));
  SetByte 008905 0;
  SetByte 008906 1;
  TraceOperation 045841 (Store (Con 76) (Con 0));
  SetByte 008937 0;
  SetByte 008938 0;
  TraceOperation 045844 (Print_ret "You have broken the mirror. I hope you have a seven years' supply of good luck handy.");
  GamePrint "You have broken the mirror. I hope you have a seven years' supply of good luck handy.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[345]--------------------------------------------------
LocRoutine 045896:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 045899
LocOp 045899:
  TraceOperation 045899 (Je [Var (Local 1),Con 3] (Branch F Dfalse));
  if (Equal(GetLocal(1),3)) {
    TraceOperation 045903 (Print "This is a large room with a prominent doorway leading to a down staircase. Above you is a large dome. Up around the edge of the dome (20 feet up) is a wooden railing. In the center of the room sits a white marble pedestal.");
    GamePrint "This is a large room with a prominent doorway leading to a down staircase. Above you is a large dome. Up around the edge of the dome (20 feet up) is a wooden railing. In the center of the room sits a white marble pedestal.";
    TraceOperation 046032 New_line;
    GamePrint "\n";
    TraceOperation 046033 (Jz (Var (Global 147)) (Branch T Dfalse));
    Let b1 = M[009111];
    Let b2 = M[009112];
    if (IsZero(MakeHiLo(b1,b2))) {
      PopFrame return_address_3;
      JumpReturn: return_address_3, result: 0
    } else {
      TraceOperation 046036 (Print_ret "A piece of rope descends from the railing above, ending some five feet above your head.");
      GamePrint "A piece of rope descends from the railing above, ending some five feet above your head.\n";
      PopFrame return_address_4;
      JumpReturn: return_address_4, result: 1
    }
  } else {
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 0
  }
--[346]--------------------------------------------------
LocRoutine 046092:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 046095
LocOp 046095:
  TraceOperation 046095 (Je [Var (Local 1),Con 3] (Branch F (Dloc 046246)));
  if (Equal(GetLocal(1),3)) {
    TraceOperation 046100 (Print "You are at the periphery of a large dome, which forms the ceiling of another room below. Protecting you from a precipitous drop is a wooden railing which circles the dome.");
    GamePrint "You are at the periphery of a large dome, which forms the ceiling of another room below. Protecting you from a precipitous drop is a wooden railing which circles the dome.";
    TraceOperation 046193 New_line;
    GamePrint "\n";
    TraceOperation 046194 (Jz (Var (Global 147)) (Branch T Dfalse));
    Let b1 = M[009111];
    Let b2 = M[009112];
    if (IsZero(MakeHiLo(b1,b2))) {
      PopFrame return_address_3;
      JumpReturn: return_address_3, result: 0
    } else {
      TraceOperation 046197 (Print_ret "Hanging down from the railing is a rope which ends about ten feet from the floor below.");
      GamePrint "Hanging down from the railing is a rope which ends about ten feet from the floor below.\n";
      PopFrame return_address_4;
      JumpReturn: return_address_4, result: 1
    }
  } else {
    Jump: 046246
  }
LocOp 046246:
  TraceOperation 046246 (Je [Var (Local 1),Con 2] (Branch F Dfalse));
  if (Equal(GetLocal(1),2)) {
    TraceOperation 046250 (Jz (Var (Global 62)) (Branch T (Dloc 046321)));
    Let b1 = M[008941];
    Let b2 = M[008942];
    if (IsZero(MakeHiLo(b1,b2))) {
      Jump: 046321
    } else {
      TraceOperation 046254 (Print "As you enter the dome you feel a strong pull as if from a wind drawing you over the railing and down.");
      GamePrint "As you enter the dome you feel a strong pull as if from a wind drawing you over the railing and down.";
      TraceOperation 046313 New_line;
      GamePrint "\n";
      TraceOperation 046314 (Insert_obj (Var (Global 111)) (Con 105));
      Let b3 = M[009039];
      Let b4 = M[009040];
      Let b5 = M[Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),4)];
      if (IsZero(Widen(b5))) {
        SetByte Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),4) 105;
        Let b6 = M[001692];
        SetByte Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),5) LoByte(Widen(b6));
        SetByte 001692 b4;
        TraceOperation 046317 (Store (Con 16) (Con 105));
        SetByte 008817 0;
        SetByte 008818 105;
        TraceOperation 046320 Rtrue;
        PopFrame return_address_7;
        JumpReturn: return_address_7, result: 1
      } else {
        Let b8 = M[Offset(Offset(000741,Mul(Widen(b5),9)),6)];
        if (Equal(Widen(b8),MakeHiLo(b3,b4))) {
          Let b9 = M[Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),5)];
          SetByte Offset(Offset(000741,Mul(Widen(b5),9)),6) LoByte(Widen(b9));
          SetByte Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),4) 105;
          Let b10 = M[001692];
          SetByte Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),5) LoByte(Widen(b10));
          SetByte 001692 b4;
          TraceOperation 046317 (Store (Con 16) (Con 105));
          SetByte 008817 0;
          SetByte 008818 105;
          TraceOperation 046320 Rtrue;
          PopFrame return_address_11;
          JumpReturn: return_address_11, result: 1
        } else {
          Error: unlink/loop
        }
      }
    }
  } else {
    PopFrame return_address_12;
    JumpReturn: return_address_12, result: 0
  }
LocOp 046321:
  TraceOperation 046321 (Je [Var (Global 120),Con 69] (Branch F Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),69)) {
    TraceOperation 046325 (Call (Floc 067174) [Con -25449] Sp);
    PushFrame 046325;
    SetLocal 1 -25449;
    JumpCall: 067174, #actuals: 1
  } else {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  }
LocReturn 046325:
  PushStack call_result;
  TraceOperation 046332 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[347]--------------------------------------------------
LocRoutine 046334:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 046337
LocOp 046337:
  TraceOperation 046337 (Je [Var (Local 1),Con 3] (Branch F (Dloc 046557)));
  if (Equal(GetLocal(1),3)) {
    TraceOperation 046342 (Print "You are outside a large gateway, on which is inscribed\n\n  Abandon every hope all ye who enter here!\n\nThe gate is open; through it you can see a desolation, with a pile of mangled bodies in one corner. Thousands of voices, lamenting some hideous fate, can be heard.");
    GamePrint "You are outside a large gateway, on which is inscribed\n\n  Abandon every hope all ye who enter here!\n\nThe gate is open; through it you can see a desolation, with a pile of mangled bodies in one corner. Thousands of voices, lamenting some hideous fate, can be heard.";
    TraceOperation 046501 New_line;
    GamePrint "\n";
    TraceOperation 046502 (Jz (Var (Global 145)) (Branch F Dfalse));
    Let b1 = M[009107];
    Let b2 = M[009108];
    if (IsZero(MakeHiLo(b1,b2))) {
      TraceOperation 046505 (Jz (Var (Global 62)) (Branch F Dfalse));
      Let b3 = M[008941];
      Let b4 = M[008942];
      if (IsZero(MakeHiLo(b3,b4))) {
        TraceOperation 046508 (Print_ret "The way through the gate is barred by evil spirits, who jeer at your attempts to pass.");
        GamePrint "The way through the gate is barred by evil spirits, who jeer at your attempts to pass.\n";
        PopFrame return_address_5;
        JumpReturn: return_address_5, result: 1
      } else {
        PopFrame return_address_6;
        JumpReturn: return_address_6, result: 0
      }
    } else {
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 0
    }
  } else {
    Jump: 046557
  }
LocOp 046557:
  TraceOperation 046557 (Je [Var (Local 1),Con 1] (Branch F (Dloc 047078)));
  if (Equal(GetLocal(1),1)) {
    TraceOperation 046562 (Je [Var (Global 120),Con 58] (Branch F (Dloc 046623)));
    Let b1 = M[009057];
    Let b2 = M[009058];
    if (Equal(MakeHiLo(b1,b2),58)) {
      TraceOperation 046566 (Jz (Var (Global 145)) (Branch F Dfalse));
      Let b3 = M[009107];
      Let b4 = M[009108];
      if (IsZero(MakeHiLo(b3,b4))) {
        TraceOperation 046569 (Jin (Con 221) (Var (Global 111)) (Branch F (Dloc 046600)));
        Let b5 = M[009039];
        Let b6 = M[009040];
        Let b7 = M[002734];
        if (Equal(MakeHiLo(b5,b6),Widen(b7))) {
          TraceOperation 046573 (Jin (Con 211) (Var (Global 111)) (Branch F (Dloc 046600)));
          Let b8 = M[009039];
          Let b9 = M[009040];
          Let b10 = M[002644];
          if (Equal(MakeHiLo(b8,b9),Widen(b10))) {
            TraceOperation 046577 (Jin (Con 147) (Var (Global 111)) (Branch F (Dloc 046600)));
            Let b11 = M[009039];
            Let b12 = M[009040];
            Let b13 = M[002068];
            if (Equal(MakeHiLo(b11,b12),Widen(b13))) {
              TraceOperation 046581 (Print_ret "You must perform the ceremony.");
              GamePrint "You must perform the ceremony.\n";
              PopFrame return_address_14;
              JumpReturn: return_address_14, result: 1
            } else {
              Jump: 046600
            }
          } else {
            Jump: 046600
          }
        } else {
          Jump: 046600
        }
      } else {
        PopFrame return_address_15;
        JumpReturn: return_address_15, result: 0
      }
    } else {
      Jump: 046623
    }
  } else {
    Jump: 047078
  }
--[348]--------------------------------------------------
LocRoutine 046784:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 17851;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 -21866;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 3354;
      }
    }
  }
  Jump: 046791
LocOp 046791:
  TraceOperation 046791 (Jin (Con 147) (Var (Global 111)) (Branch F (Dloc 046849)));
  Let b1 = M[009039];
  Let b2 = M[009040];
  Let b3 = M[002068];
  if (Equal(MakeHiLo(b1,b2),Widen(b3))) {
    TraceOperation 046795 (Print "In your confusion, the candles drop to the ground (and they are out).");
    GamePrint "In your confusion, the candles drop to the ground (and they are out).";
    TraceOperation 046830 New_line;
    GamePrint "\n";
    TraceOperation 046831 (Insert_obj (Con 147) (Var (Global 0)));
    Let b4 = M[008817];
    Let b5 = M[008818];
    Let b6 = M[002068];
    if (IsZero(Widen(b6))) {
      SetByte 002068 b5;
      Let b7 = M[Offset(Offset(000741,Mul(MakeHiLo(b4,b5),9)),6)];
      SetByte 002069 LoByte(Widen(b7));
      SetByte Offset(Offset(000741,Mul(MakeHiLo(b4,b5),9)),6) 147;
      TraceOperation 046834 (Clear_attr (Con 147) (Con 20));
      Let b8 = M[002066];
      SetByte 002066 ClearBit(b8,3);
      TraceOperation 046837 (Call (Floc 021638) [Con 28522] Sp);
      PushFrame 046837;
      SetLocal 1 28522;
      JumpCall: 021638, #actuals: 1
    } else {
      Let b9 = M[Offset(Offset(000741,Mul(Widen(b6),9)),6)];
      if (Equal(Widen(b9),147)) {
        Let b10 = M[002069];
        SetByte Offset(Offset(000741,Mul(Widen(b6),9)),6) LoByte(Widen(b10));
        SetByte 002068 b5;
        Let b11 = M[Offset(Offset(000741,Mul(MakeHiLo(b4,b5),9)),6)];
        SetByte 002069 LoByte(Widen(b11));
        SetByte Offset(Offset(000741,Mul(MakeHiLo(b4,b5),9)),6) 147;
        TraceOperation 046834 (Clear_attr (Con 147) (Con 20));
        Let b12 = M[002066];
        SetByte 002066 ClearBit(b12,3);
        TraceOperation 046837 (Call (Floc 021638) [Con 28522] Sp);
        PushFrame 046837;
        SetLocal 1 28522;
        JumpCall: 021638, #actuals: 1
      } else {
        Error: unlink/loop
      }
    }
  } else {
    TraceOperation 046849 (Call (Floc 021618) [Con 23614,Con 6] Sp);
    PushFrame 046849;
    SetLocal 1 23614;
    SetLocal 2 6;
    JumpCall: 021618, #actuals: 2
  }
LocReturn 046837:
  PushStack call_result;
  TraceOperation 046844 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 046849 (Call (Floc 021618) [Con 23614,Con 6] Sp);
  PushFrame 046849;
  SetLocal 1 23614;
  SetLocal 2 6;
  JumpCall: 021618, #actuals: 2
LocReturn 046849:
  PushStack call_result;
  TraceOperation 046857 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 046862 (Call (Floc 021618) [Con 23666,Con 20] Sp);
  PushFrame 046862;
  SetLocal 1 23666;
  SetLocal 2 20;
  JumpCall: 021618, #actuals: 2
LocReturn 046862:
  PushStack call_result;
  TraceOperation 046870 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 046875 Rtrue;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: 1
--[349]--------------------------------------------------
LocRoutine 047076:
  MakeRoutineFrame 0;
  Jump: 047077
LocOp 047077:
  TraceOperation 047077 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[350]--------------------------------------------------
LocRoutine 047174:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 5233;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 14337;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 -10437;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 14421;
        }
      }
    }
  }
  Jump: 047183
LocOp 047183:
  TraceOperation 047183 (Div (Var Sp) (Con 217) Sp);
  PopStack popped1;
  PushStack Div(popped1,217);
  TraceOperation 047187 (Dec_chk (Con 106) (Var (Global 90)) (Branch F (Dloc 054095)));
  Let b2 = M[008997];
  Let b3 = M[008998];
  Let b4 = M[008997];
  Let b5 = M[008998];
  if (LessThanEqual(MakeHiLo(b2,b3),MakeHiLo(b4,b5))) {
    SetByte 008997 HiByte(Sub(MakeHiLo(b2,b3),1));
    SetByte 008998 LoByte(Sub(MakeHiLo(b2,b3),1));
    TraceOperation 047192 (Mul (Con 62) (Var (Local 2)) (Global 164));
    SetByte 009145 HiByte(Mul(62,GetLocal(2)));
    SetByte 009146 LoByte(Mul(62,GetLocal(2)));
    TraceOperation 047196 (Get_prop (Var (Global 71)) (Var (Global 134)) (Global 53));
    Let b6 = M[008959];
    Let b7 = M[008960];
    Let b8 = M[009085];
    Let b9 = M[009086];
    Let b10 = M[Offset(Offset(000741,Mul(MakeHiLo(b6,b7),9)),7)];
    Let b11 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b6,b7),9)),7),1)];
    Let b12 = M[Address(MakeHiLo(b10,b11))];
    Error: getPropsA
  } else {
    SetByte 008997 HiByte(Sub(MakeHiLo(b2,b3),1));
    SetByte 008998 LoByte(Sub(MakeHiLo(b2,b3),1));
    Jump: 054095
  }
LocReturn 047201:
  PushStack call_result;
  TraceOperation 047208 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 047213 (Call (Floc 021618) [Con 23661,Con 3] Sp);
  PushFrame 047213;
  SetLocal 1 23661;
  SetLocal 2 3;
  JumpCall: 021618, #actuals: 2
LocReturn 047213:
  PushStack call_result;
  TraceOperation 047221 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 047226 Rtrue;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: 1
--[351]--------------------------------------------------
LocRoutine 047228:
  MakeRoutineFrame 0;
  Jump: 047229
LocOp 047229:
  TraceOperation 047229 (Jz (Var (Global 41)) (Branch F (Dloc 047316)));
  Let b1 = M[008899];
  Let b2 = M[008900];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 047233 (Je [Var (Global 0),Con 232] (Branch F (Dloc 047316)));
    Let b3 = M[008817];
    Let b4 = M[008818];
    if (Equal(MakeHiLo(b3,b4),232)) {
      TraceOperation 047238 (Print "The tension of this ceremony is broken, and the wraiths, amused but shaken at your clumsy attempt, resume their hideous jeering.");
      GamePrint "The tension of this ceremony is broken, and the wraiths, amused but shaken at your clumsy attempt, resume their hideous jeering.";
      TraceOperation 047315 New_line;
      GamePrint "\n";
      Jump: 047316
    } else {
      Jump: 047316
    }
  } else {
    Jump: 047316
  }
LocOp 047316:
  TraceOperation 047316 (Store (Con 58) (Con 0));
  SetByte 008901 0;
  SetByte 008902 0;
  TraceOperation 047319 (Ret (Var (Global 42)));
  Let b1 = M[008901];
  Let b2 = M[008902];
  PopFrame return_address_3;
  JumpReturn: return_address_3, result: MakeHiLo(b1,b2)
--[352]--------------------------------------------------
LocRoutine 047322:
  MakeRoutineFrame 0;
  Jump: 047323
LocOp 047323:
  TraceOperation 047323 (Store (Con 57) (Con 0));
  SetByte 008899 0;
  SetByte 008900 0;
  TraceOperation 047326 (Call (Floc 047228) [] Sp);
  PushFrame 047326;
  JumpCall: 047228, #actuals: 0
LocReturn 047326:
  PushStack call_result;
  TraceOperation 047331 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[353]--------------------------------------------------
LocRoutine 047332:
  MakeRoutineFrame 0;
  Jump: 047333
LocOp 047333:
  TraceOperation 047333 (Call (Floc 030906) [Con 219] Sp);
  PushFrame 047333;
  SetLocal 1 219;
  JumpCall: 030906, #actuals: 1
LocReturn 047333:
  PushStack call_result;
  TraceOperation 047339 (Insert_obj (Con 221) (Con 232));
  Let b1 = M[002734];
  if (IsZero(Widen(b1))) {
    SetByte 002734 232;
    Let b2 = M[002835];
    SetByte 002735 LoByte(Widen(b2));
    SetByte 002835 221;
    TraceOperation 047342 (Je [Var (Global 0),Con 232] (Branch F Dfalse));
    Let b3 = M[008817];
    Let b4 = M[008818];
    if (Equal(MakeHiLo(b3,b4),232)) {
      TraceOperation 047346 (Print_ret "The bell appears to have cooled down.");
      GamePrint "The bell appears to have cooled down.\n";
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 1
    } else {
      PopFrame return_address_6;
      JumpReturn: return_address_6, result: 0
    }
  } else {
    Let b7 = M[Offset(Offset(000741,Mul(Widen(b1),9)),6)];
    if (Equal(Widen(b7),221)) {
      Let b8 = M[002735];
      SetByte Offset(Offset(000741,Mul(Widen(b1),9)),6) LoByte(Widen(b8));
      SetByte 002734 232;
      Let b9 = M[002835];
      SetByte 002735 LoByte(Widen(b9));
      SetByte 002835 221;
      TraceOperation 047342 (Je [Var (Global 0),Con 232] (Branch F Dfalse));
      Let b10 = M[008817];
      Let b11 = M[008818];
      if (Equal(MakeHiLo(b10,b11),232)) {
        TraceOperation 047346 (Print_ret "The bell appears to have cooled down.");
        GamePrint "The bell appears to have cooled down.\n";
        PopFrame return_address_12;
        JumpReturn: return_address_12, result: 1
      } else {
        PopFrame return_address_13;
        JumpReturn: return_address_13, result: 0
      }
    } else {
      Error: unlink/loop
    }
  }
--[354]--------------------------------------------------
LocRoutine 047366:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 047369
LocOp 047369:
  TraceOperation 047369 (Je [Var (Local 1),Con 3] (Branch F Dfalse));
  if (Equal(GetLocal(1),3)) {
    TraceOperation 047373 (Print "You are standing on the top of the Flood Control Dam #3, which was quite a tourist attraction in times far distant. There are paths to the north, south, and west, and a scramble down.");
    GamePrint "You are standing on the top of the Flood Control Dam #3, which was quite a tourist attraction in times far distant. There are paths to the north, south, and west, and a scramble down.";
    TraceOperation 047482 New_line;
    GamePrint "\n";
    TraceOperation 047483 (Jz (Var (Global 144)) (Branch T (Dloc 047558)));
    Let b1 = M[009105];
    Let b2 = M[009106];
    if (IsZero(MakeHiLo(b1,b2))) {
      Jump: 047558
    } else {
      TraceOperation 047487 (Jz (Var (Global 39)) (Branch T (Dloc 047558)));
      Let b3 = M[008895];
      Let b4 = M[008896];
      if (IsZero(MakeHiLo(b3,b4))) {
        Jump: 047558
      } else {
        TraceOperation 047491 (Print "The water level behind the dam is low: The sluice gates have been opened. Water rushes through the dam and downstream.");
        GamePrint "The water level behind the dam is low: The sluice gates have been opened. Water rushes through the dam and downstream.";
        TraceOperation 047554 New_line;
        GamePrint "\n";
        TraceOperation 047555 (Jump 047762);
        Jump: 047762
      }
    }
  } else {
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 0
  }
LocOp 047558:
  TraceOperation 047558 (Jz (Var (Global 39)) (Branch T (Dloc 047618)));
  Let b1 = M[008895];
  Let b2 = M[008896];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 047618
  } else {
    TraceOperation 047561 (Print "The sluice gates are open, and water rushes through the dam. The water level behind the dam is still high.");
    GamePrint "The sluice gates are open, and water rushes through the dam. The water level behind the dam is still high.";
    TraceOperation 047614 New_line;
    GamePrint "\n";
    TraceOperation 047615 (Jump 047762);
    Jump: 047762
  }
LocOp 047618:
  TraceOperation 047618 (Jz (Var (Global 144)) (Branch T (Dloc 047678)));
  Let b1 = M[009105];
  Let b2 = M[009106];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 047678
  } else {
    TraceOperation 047621 (Print "The sluice gates are closed. The water level in the reservoir is quite low, but the level is rising quickly.");
    GamePrint "The sluice gates are closed. The water level in the reservoir is quite low, but the level is rising quickly.";
    TraceOperation 047674 New_line;
    GamePrint "\n";
    TraceOperation 047675 (Jump 047762);
    Jump: 047762
  }
LocOp 047678:
  TraceOperation 047678 (Print "The sluice gates on the dam are closed. Behind the dam, there can be seen a wide reservoir. Water is pouring over the top of the now abandoned dam.");
  GamePrint "The sluice gates on the dam are closed. Behind the dam, there can be seen a wide reservoir. Water is pouring over the top of the now abandoned dam.";
  TraceOperation 047761 New_line;
  GamePrint "\n";
  Jump: 047762
LocOp 047762:
  TraceOperation 047762 (Print "There is a control panel here, on which a large metal bolt is mounted. Directly above the bolt is a small green plastic bubble");
  GamePrint "There is a control panel here, on which a large metal bolt is mounted. Directly above the bolt is a small green plastic bubble";
  TraceOperation 047833 (Jz (Var (Global 40)) (Branch T (Dloc 047851)));
  Let b1 = M[008897];
  Let b2 = M[008898];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 047851
  } else {
    TraceOperation 047836 (Print " which is glowing serenely");
    GamePrint " which is glowing serenely";
    Jump: 047851
  }
LocOp 047851:
  TraceOperation 047851 (Print_ret ".");
  GamePrint ".\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[355]--------------------------------------------------
LocRoutine 047854:
  MakeRoutineFrame 0;
  Jump: 047855
LocOp 047855:
  TraceOperation 047855 (Je [Var (Global 120),Con 89] (Branch F (Dloc 048058)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),89)) {
    TraceOperation 047860 (Je [Var (Global 119),Con 91] (Branch F (Dloc 048020)));
    Let b3 = M[009055];
    Let b4 = M[009056];
    if (Equal(MakeHiLo(b3,b4),91)) {
      TraceOperation 047865 (Jz (Var (Global 40)) (Branch T (Dloc 047997)));
      Let b5 = M[008897];
      Let b6 = M[008898];
      if (IsZero(MakeHiLo(b5,b6))) {
        Jump: 047997
      } else {
        TraceOperation 047869 (Clear_attr (Con 50) (Con 3));
        Let b7 = M[001191];
        SetByte 001191 ClearBit(b7,4);
        TraceOperation 047872 (Jz (Var (Global 39)) (Branch T (Dloc 047944)));
        Let b8 = M[008895];
        Let b9 = M[008896];
        if (IsZero(MakeHiLo(b8,b9))) {
          Jump: 047944
        } else {
          TraceOperation 047876 (Store (Con 55) (Con 0));
          SetByte 008895 0;
          SetByte 008896 0;
          TraceOperation 047879 (Clear_attr (Con 138) (Con 3));
          Let b10 = M[001983];
          SetByte 001983 ClearBit(b10,4);
          TraceOperation 047882 (Print "The sluice gates close and water starts to collect behind the dam.");
          GamePrint "The sluice gates close and water starts to collect behind the dam.";
          TraceOperation 047921 New_line;
          GamePrint "\n";
          TraceOperation 047922 (Call (Floc 021618) [Con 24084,Con 8] Sp);
          PushFrame 047922;
          SetLocal 1 24084;
          SetLocal 2 8;
          JumpCall: 021618, #actuals: 2
        }
      }
    } else {
      Jump: 048020
    }
  } else {
    Jump: 048058
  }
LocReturn 047922:
  PushStack call_result;
  TraceOperation 047930 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 047935 (Call (Floc 021618) [Con 24212,Con 0] Sp);
  PushFrame 047935;
  SetLocal 1 24212;
  SetLocal 2 0;
  JumpCall: 021618, #actuals: 2
LocReturn 047935:
  PushStack call_result;
  TraceOperation 047943 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 047944:
  TraceOperation 047944 (Store (Con 55) (Con 1));
  SetByte 008895 0;
  SetByte 008896 1;
  TraceOperation 047947 (Print "The sluice gates open and water pours through the dam.");
  GamePrint "The sluice gates open and water pours through the dam.";
  TraceOperation 047974 New_line;
  GamePrint "\n";
  TraceOperation 047975 (Call (Floc 021618) [Con 24212,Con 8] Sp);
  PushFrame 047975;
  SetLocal 1 24212;
  SetLocal 2 8;
  JumpCall: 021618, #actuals: 2
LocReturn 047975:
  PushStack call_result;
  TraceOperation 047983 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 047988 (Call (Floc 021618) [Con 24084,Con 0] Sp);
  PushFrame 047988;
  SetLocal 1 24084;
  SetLocal 2 0;
  JumpCall: 021618, #actuals: 2
LocReturn 047988:
  PushStack call_result;
  TraceOperation 047996 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 047997:
  TraceOperation 047997 (Print_ret "The bolt won't turn with your best effort.");
  GamePrint "The bolt won't turn with your best effort.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 048020:
  TraceOperation 048020 (Jz (Var (Global 119)) (Branch T (Dloc 048045)));
  Let b1 = M[009055];
  Let b2 = M[009056];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 048045
  } else {
    TraceOperation 048023 (Print "The bolt won't turn using the ");
    GamePrint "The bolt won't turn using the ";
    TraceOperation 048040 (Print_obj (Var (Global 119)));
    Let b3 = M[009055];
    Let b4 = M[009056];
    Let b5 = M[Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),7)];
    Let b6 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),7),1)];
    Let b7 = M[Address(MakeHiLo(b5,b6))];
    if (IsZeroByte(b7)) {
      GamePrint "";
      TraceOperation 048042 (Print_ret ".");
      GamePrint ".\n";
      PopFrame return_address_8;
      JumpReturn: return_address_8, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b5,b6)),1));
      TraceOperation 048042 (Print_ret ".");
      GamePrint ".\n";
      PopFrame return_address_9;
      JumpReturn: return_address_9, result: 1
    }
  }
LocOp 048045:
  TraceOperation 048045 (Print_ret "You can't with your bare hands.");
  GamePrint "You can't with your bare hands.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 048058:
  TraceOperation 048058 (Je [Var (Global 120),Con 93] (Branch F (Dloc 048068)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),93)) {
    TraceOperation 048062 (Call (Floc 048140) [] Sp);
    PushFrame 048062;
    JumpCall: 048140, #actuals: 0
  } else {
    Jump: 048068
  }
LocReturn 048062:
  PushStack call_result;
  TraceOperation 048067 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 048068:
  TraceOperation 048068 (Je [Var (Global 120),Con 85] (Branch F Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),85)) {
    TraceOperation 048072 (Print_ret "Hmm. It appears the tube contained glue, not oil. Turning the bolt won't get any easier....");
    GamePrint "Hmm. It appears the tube contained glue, not oil. Turning the bolt won't get any easier....\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 0
  }
--[356]--------------------------------------------------
LocRoutine 048128:
  MakeRoutineFrame 0;
  Jump: 048129
LocOp 048129:
  TraceOperation 048129 (Je [Var (Global 120),Con 93] (Branch F Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),93)) {
    TraceOperation 048133 (Call (Floc 048140) [] Sp);
    PushFrame 048133;
    JumpCall: 048140, #actuals: 0
  } else {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  }
LocReturn 048133:
  PushStack call_result;
  TraceOperation 048138 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[357]--------------------------------------------------
LocRoutine 048140:
  MakeRoutineFrame 0;
  Jump: 048141
LocOp 048141:
  TraceOperation 048141 (Print_ret "It is an integral part of the control panel.");
  GamePrint "It is an integral part of the control panel.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[358]--------------------------------------------------
LocRoutine 048168:
  MakeRoutineFrame 0;
  Jump: 048169
LocOp 048169:
  TraceOperation 048169 (Set_attr (Con 100) (Con 4));
  Let b1 = M[001641];
  SetByte 001641 SetBit(b1,3);
  TraceOperation 048172 (Clear_attr (Con 100) (Con 6));
  Let b2 = M[001641];
  SetByte 001641 ClearBit(b2,1);
  TraceOperation 048175 (Clear_attr (Con 40) (Con 3));
  Let b3 = M[001101];
  SetByte 001101 ClearBit(b3,4);
  TraceOperation 048178 (Clear_attr (Con 138) (Con 3));
  Let b4 = M[001983];
  SetByte 001983 ClearBit(b4,4);
  TraceOperation 048181 (Jin (Con 101) (Con 100) (Branch F (Dloc 048188)));
  Let b5 = M[001654];
  if (Equal(100,Widen(b5))) {
    TraceOperation 048185 (Set_attr (Con 101) (Con 7));
    Let b6 = M[001650];
    SetByte 001650 SetBit(b6,0);
    TraceOperation 048188 (Store (Con 160) (Con 0));
    SetByte 009105 0;
    SetByte 009106 0;
    TraceOperation 048191 (Je [Var (Global 0),Con 100] (Branch F (Dloc 048253)));
    Let b7 = M[008817];
    Let b8 = M[008818];
    if (Equal(MakeHiLo(b7,b8),100)) {
      TraceOperation 048195 (Get_parent (Var (Global 111)) Sp);
      Let b9 = M[009039];
      Let b10 = M[009040];
      Let b11 = M[Offset(Offset(000741,Mul(MakeHiLo(b9,b10),9)),4)];
      PushStack Widen(b11);
      TraceOperation 048198 (Test_attr (Var Sp) (Con 27) (Branch F (Dloc 048245)));
      PopStack popped12;
      Let b13 = M[Offset(Offset(000741,Mul(popped12,9)),3)];
      if (TestBit(b13,4)) {
        TraceOperation 048202 (Print_ret "The boat lifts gently out of the mud and is now floating on the reservoir.");
        GamePrint "The boat lifts gently out of the mud and is now floating on the reservoir.\n";
        PopFrame return_address_14;
        JumpReturn: return_address_14, result: 1
      } else {
        Jump: 048245
      }
    } else {
      Jump: 048253
    }
  } else {
    TraceOperation 048188 (Store (Con 160) (Con 0));
    SetByte 009105 0;
    SetByte 009106 0;
    TraceOperation 048191 (Je [Var (Global 0),Con 100] (Branch F (Dloc 048253)));
    Let b15 = M[008817];
    Let b16 = M[008818];
    if (Equal(MakeHiLo(b15,b16),100)) {
      TraceOperation 048195 (Get_parent (Var (Global 111)) Sp);
      Let b17 = M[009039];
      Let b18 = M[009040];
      Let b19 = M[Offset(Offset(000741,Mul(MakeHiLo(b17,b18),9)),4)];
      PushStack Widen(b19);
      TraceOperation 048198 (Test_attr (Var Sp) (Con 27) (Branch F (Dloc 048245)));
      PopStack popped20;
      Let b21 = M[Offset(Offset(000741,Mul(popped20,9)),3)];
      if (TestBit(b21,4)) {
        TraceOperation 048202 (Print_ret "The boat lifts gently out of the mud and is now floating on the reservoir.");
        GamePrint "The boat lifts gently out of the mud and is now floating on the reservoir.\n";
        PopFrame return_address_22;
        JumpReturn: return_address_22, result: 1
      } else {
        Jump: 048245
      }
    } else {
      Jump: 048253
    }
  }
LocOp 048245:
  TraceOperation 048245 (Call (Floc 067174) [Con -25433] Sp);
  PushFrame 048245;
  SetLocal 1 -25433;
  JumpCall: 067174, #actuals: 1
LocReturn 048245:
  PushStack call_result;
  TraceOperation 048252 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 048253:
  TraceOperation 048253 (Je [Var (Global 0),Con 40] (Branch F (Dloc 048296)));
  Let b1 = M[008817];
  Let b2 = M[008818];
  if (Equal(MakeHiLo(b1,b2),40)) {
    TraceOperation 048257 (Print_ret "A sound, like that of flowing water, starts to come from below.");
    GamePrint "A sound, like that of flowing water, starts to come from below.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 048296
  }
LocOp 048296:
  TraceOperation 048296 (Je [Var (Global 0),Con 138] (Branch F (Dloc 048380)));
  Let b1 = M[008817];
  Let b2 = M[008818];
  if (Equal(MakeHiLo(b1,b2),138)) {
    TraceOperation 048301 (Print "All of a sudden, an alarmingly loud roaring sound fills the room. Filled with fear, you scramble away.");
    GamePrint "All of a sudden, an alarmingly loud roaring sound fills the room. Filled with fear, you scramble away.";
    TraceOperation 048366 New_line;
    GamePrint "\n";
    TraceOperation 048367 (Call (Floc 020076) [Var (Global 38)] Sp);
    Let b3 = M[008893];
    Let b4 = M[008894];
    PushFrame 048367;
    SetLocal 1 MakeHiLo(b3,b4);
    JumpCall: 020076, #actuals: 1
  } else {
    Jump: 048380
  }
LocReturn 048367:
  PushStack call_result;
  TraceOperation 048373 (Call (Floc 037558) [Var Sp] Sp);
  PopStack popped1;
  PushFrame 048373;
  SetLocal 1 popped1;
  JumpCall: 037558, #actuals: 1
LocReturn 048373:
  PushStack call_result;
  TraceOperation 048379 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 048380:
  TraceOperation 048380 (Je [Var (Global 0),Con 172,Con 50] (Branch F Dtrue));
  Let b1 = M[008817];
  Let b2 = M[008818];
  if (LogOr(Equal(MakeHiLo(b1,b2),172),Equal(MakeHiLo(b1,b2),50))) {
    TraceOperation 048386 (Print_ret "You notice that the water level has risen to the point that it is impossible to cross.");
    GamePrint "You notice that the water level has risen to the point that it is impossible to cross.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 1
  }
--[359]--------------------------------------------------
LocRoutine 048424:
  MakeRoutineFrame 0;
  Jump: 048425
LocOp 048425:
  TraceOperation 048425 (Set_attr (Con 100) (Con 6));
  Let b1 = M[001641];
  SetByte 001641 SetBit(b1,1);
  TraceOperation 048428 (Clear_attr (Con 100) (Con 4));
  Let b2 = M[001641];
  SetByte 001641 ClearBit(b2,3);
  TraceOperation 048431 (Clear_attr (Con 40) (Con 3));
  Let b3 = M[001101];
  SetByte 001101 ClearBit(b3,4);
  TraceOperation 048434 (Clear_attr (Con 138) (Con 3));
  Let b4 = M[001983];
  SetByte 001983 ClearBit(b4,4);
  TraceOperation 048437 (Clear_attr (Con 101) (Con 7));
  Let b5 = M[001650];
  SetByte 001650 ClearBit(b5,0);
  TraceOperation 048440 (Store (Con 160) (Con 1));
  SetByte 009105 0;
  SetByte 009106 1;
  TraceOperation 048443 (Je [Var (Global 0),Con 100] (Branch F (Dloc 048510)));
  Let b6 = M[008817];
  Let b7 = M[008818];
  if (Equal(MakeHiLo(b6,b7),100)) {
    TraceOperation 048448 (Get_parent (Var (Global 111)) Sp);
    Let b8 = M[009039];
    Let b9 = M[009040];
    Let b10 = M[Offset(Offset(000741,Mul(MakeHiLo(b8,b9),9)),4)];
    PushStack Widen(b10);
    TraceOperation 048451 (Test_attr (Var Sp) (Con 27) (Branch F (Dloc 048510)));
    PopStack popped11;
    Let b12 = M[Offset(Offset(000741,Mul(popped11,9)),3)];
    if (TestBit(b12,4)) {
      TraceOperation 048455 (Print_ret "The water level has dropped to the point at which the boat can no longer stay afloat. It sinks into the mud.");
      GamePrint "The water level has dropped to the point at which the boat can no longer stay afloat. It sinks into the mud.\n";
      PopFrame return_address_13;
      JumpReturn: return_address_13, result: 1
    } else {
      Jump: 048510
    }
  } else {
    Jump: 048510
  }
LocOp 048510:
  TraceOperation 048510 (Je [Var (Global 0),Con 40] (Branch F (Dloc 048539)));
  Let b1 = M[008817];
  Let b2 = M[008818];
  if (Equal(MakeHiLo(b1,b2),40)) {
    TraceOperation 048514 (Print_ret "The roar of rushing water is quieter now.");
    GamePrint "The roar of rushing water is quieter now.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 048539
  }
LocOp 048539:
  TraceOperation 048539 (Je [Var (Global 0),Con 172,Con 50] (Branch F Dtrue));
  Let b1 = M[008817];
  Let b2 = M[008818];
  if (LogOr(Equal(MakeHiLo(b1,b2),172),Equal(MakeHiLo(b1,b2),50))) {
    TraceOperation 048545 (Print_ret "The water level is now quite low here and you could easily cross over to the other side.");
    GamePrint "The water level is now quite low here and you could easily cross over to the other side.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 1
  }
--[360]--------------------------------------------------
LocRoutine 048588:
  MakeRoutineFrame 0;
  Jump: 048589
LocOp 048589:
  TraceOperation 048589 (Je [Var (Global 120),Con 83] (Branch F (Dloc 048610)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),83)) {
    TraceOperation 048593 (Print_ret "They're greek to you.");
    GamePrint "They're greek to you.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 048610
  }
LocOp 048610:
  TraceOperation 048610 (Je [Var (Global 120),Con 101] (Branch F Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),101)) {
    TraceOperation 048614 (Je [Var (Global 118),Con 195] (Branch F (Dloc 048735)));
    Let b3 = M[009053];
    Let b4 = M[009054];
    if (Equal(MakeHiLo(b3,b4),195)) {
      TraceOperation 048619 (Jz (Var (Global 36)) (Branch F (Dloc 048716)));
      Let b5 = M[008889];
      Let b6 = M[008890];
      if (IsZero(MakeHiLo(b5,b6))) {
        TraceOperation 048623 (Clear_attr (Con 159) (Con 7));
        Let b7 = M[002172];
        SetByte 002172 ClearBit(b7,0);
        TraceOperation 048626 (Print "There is a rumbling sound and a stream of water appears to burst from the east wall of the room (apparently, a leak has occurred in a pipe).");
        GamePrint "There is a rumbling sound and a stream of water appears to burst from the east wall of the room (apparently, a leak has occurred in a pipe).";
        TraceOperation 048697 New_line;
        GamePrint "\n";
        TraceOperation 048698 (Store (Con 52) (Con 1));
        SetByte 008889 0;
        SetByte 008890 1;
        TraceOperation 048701 (Call (Floc 021618) [Con 24457,Con -1] Sp);
        PushFrame 048701;
        SetLocal 1 24457;
        SetLocal 2 -1;
        JumpCall: 021618, #actuals: 2
      } else {
        Jump: 048716
      }
    } else {
      Jump: 048735
    }
  } else {
    PopFrame return_address_8;
    JumpReturn: return_address_8, result: 0
  }
LocReturn 048701:
  PushStack call_result;
  TraceOperation 048710 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 048715 Rtrue;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: 1
LocOp 048716:
  TraceOperation 048716 (Print_ret "The blue button appears to be jammed.");
  GamePrint "The blue button appears to be jammed.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 048735:
  TraceOperation 048735 (Je [Var (Global 118),Con 196] (Branch F (Dloc 048780)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  if (Equal(MakeHiLo(b1,b2),196)) {
    TraceOperation 048739 (Print "The lights within the room ");
    GamePrint "The lights within the room ";
    TraceOperation 048754 (Test_attr (Var (Global 0)) (Con 20) (Branch F (Dloc 048770)));
    Let b3 = M[008817];
    Let b4 = M[008818];
    Let b5 = M[Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),2)];
    if (TestBit(b5,3)) {
      TraceOperation 048758 (Clear_attr (Var (Global 0)) (Con 20));
      Let b6 = M[008817];
      Let b7 = M[008818];
      Let b8 = M[Offset(Offset(000741,Mul(MakeHiLo(b6,b7),9)),2)];
      SetByte Offset(Offset(000741,Mul(MakeHiLo(b6,b7),9)),2) ClearBit(b8,3);
      TraceOperation 048761 (Print_ret "shut off.");
      GamePrint "shut off.\n";
      PopFrame return_address_9;
      JumpReturn: return_address_9, result: 1
    } else {
      Jump: 048770
    }
  } else {
    Jump: 048780
  }
LocOp 048770:
  TraceOperation 048770 (Set_attr (Var (Global 0)) (Con 20));
  Let b1 = M[008817];
  Let b2 = M[008818];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),2)];
  SetByte Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),2) SetBit(b3,3);
  TraceOperation 048773 (Print_ret "come on.");
  GamePrint "come on.\n";
  PopFrame return_address_4;
  JumpReturn: return_address_4, result: 1
LocOp 048780:
  TraceOperation 048780 (Je [Var (Global 118),Con 197] (Branch F (Dloc 048797)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  if (Equal(MakeHiLo(b1,b2),197)) {
    TraceOperation 048784 (Clear_attr (Con 215) (Con 3));
    Let b3 = M[002676];
    SetByte 002676 ClearBit(b3,4);
    TraceOperation 048787 (Store (Con 56) (Con 0));
    SetByte 008897 0;
    SetByte 008898 0;
    TraceOperation 048790 (Print_ret "Click.");
    GamePrint "Click.\n";
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 1
  } else {
    Jump: 048797
  }
LocOp 048797:
  TraceOperation 048797 (Je [Var (Global 118),Con 198] (Branch F Dfalse));
  Let b1 = M[009053];
  Let b2 = M[009054];
  if (Equal(MakeHiLo(b1,b2),198)) {
    TraceOperation 048801 (Clear_attr (Con 215) (Con 3));
    Let b3 = M[002676];
    SetByte 002676 ClearBit(b3,4);
    TraceOperation 048804 (Store (Con 56) (Con 1));
    SetByte 008897 0;
    SetByte 008898 1;
    TraceOperation 048807 (Print_ret "Click.");
    GamePrint "Click.\n";
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 1
  } else {
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 0
  }
--[361]--------------------------------------------------
LocRoutine 048814:
  MakeRoutineFrame 0;
  Jump: 048815
LocOp 048815:
  TraceOperation 048815 (Je [Var (Global 120),Con 56] (Branch F (Dloc 048836)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),56)) {
    TraceOperation 048819 (Print_ret "The chests are all empty.");
    GamePrint "The chests are all empty.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 048836
  }
LocOp 048836:
  TraceOperation 048836 (Je [Var (Global 120),Con 18,Con 43,Con 93] (Branch F (Dloc 048894)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),18),Equal(MakeHiLo(b1,b2),43)),Equal(MakeHiLo(b1,b2),93))) {
    TraceOperation 048843 (Call (Floc 030906) [Con 200] Sp);
    PushFrame 048843;
    SetLocal 1 200;
    JumpCall: 030906, #actuals: 1
  } else {
    Jump: 048894
  }
LocReturn 048843:
  PushStack call_result;
  TraceOperation 048849 (Print_ret "The chests are so rusty and corroded that they crumble when you touch them.");
  GamePrint "The chests are so rusty and corroded that they crumble when you touch them.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 048894:
  TraceOperation 048894 (Je [Var (Global 120),Con 43] (Branch F Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),43)) {
    TraceOperation 048898 (Print_ret "The chests are already open.");
    GamePrint "The chests are already open.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 0
  }
--[362]--------------------------------------------------
LocRoutine 048914:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 048917
LocOp 048917:
  TraceOperation 048917 (Je [Var (Global 0),Con 199] (Branch T (Dloc 048927)));
  Let b1 = M[008817];
  Let b2 = M[008818];
  if (Equal(MakeHiLo(b1,b2),199)) {
    Jump: 048927
  } else {
    TraceOperation 048921 (Push (Con 0));
    PushStack 0;
    TraceOperation 048924 (Jump 048930);
    Jump: 048930
  }
LocOp 048927:
  TraceOperation 048927 (Push (Con 1));
  PushStack 1;
  Jump: 048930
LocOp 048930:
  TraceOperation 048930 (Store (Con 1) (Var Sp));
  PopStack popped1;
  SetLocal 1 popped1;
  TraceOperation 048933 (Jz (Var (Local 1)) (Branch T (Dloc 048958)));
  if (IsZero(GetLocal(1))) {
    Jump: 048958
  } else {
    TraceOperation 048936 (Print "The water level here is now ");
    GamePrint "The water level here is now ";
    TraceOperation 048947 (Div (Var (Global 36)) (Con 2) Sp);
    Let b2 = M[008889];
    Let b3 = M[008890];
    PushStack Div(MakeHiLo(b2,b3),2);
    TraceOperation 048951 (Loadw (Var (Global 37)) (Var Sp) Sp);
    Let b4 = M[008891];
    Let b5 = M[008892];
    PopStack popped6;
    Let b7 = M[Offset(Address(MakeHiLo(b4,b5)),Mul(2,popped6))];
    Let b8 = M[Offset(Offset(Address(MakeHiLo(b4,b5)),Mul(2,popped6)),1)];
    PushStack MakeHiLo(b7,b8);
    TraceOperation 048955 (Print_paddr (Var Sp));
    PopStack popped9;
    GamePrint GetText(PackedAddress Z3(popped9));
    TraceOperation 048957 New_line;
    GamePrint "\n";
    Jump: 048958
  }
LocOp 048958:
  TraceOperation 048958 (Inc (Con 52));
  Let b1 = M[008889];
  Let b2 = M[008890];
  SetByte 008889 HiByte(Add(MakeHiLo(b1,b2),1));
  SetByte 008890 LoByte(Add(MakeHiLo(b1,b2),1));
  TraceOperation 048960 (Jl (Var (Global 36)) (Con 14) (Branch T (Dloc 048991)));
  Let b3 = M[008889];
  Let b4 = M[008890];
  if (LessThan(MakeHiLo(b3,b4),14)) {
    Jump: 048991
  } else {
    TraceOperation 048964 (Call (Floc 038178) [Con 199,Con -25292] Sp);
    PushFrame 048964;
    SetLocal 1 199;
    SetLocal 2 -25292;
    JumpCall: 038178, #actuals: 2
  }
LocReturn 048964:
  PushStack call_result;
  TraceOperation 048972 (Call (Floc 021618) [Con 24457,Con 0] Sp);
  PushFrame 048972;
  SetLocal 1 24457;
  SetLocal 2 0;
  JumpCall: 021618, #actuals: 2
LocReturn 048972:
  PushStack call_result;
  TraceOperation 048980 (Jz (Var (Local 1)) (Branch T Dtrue));
  if (IsZero(GetLocal(1))) {
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 1
  } else {
    TraceOperation 048983 (Call (Floc 067174) [Con -25281] Sp);
    PushFrame 048983;
    SetLocal 1 -25281;
    JumpCall: 067174, #actuals: 1
  }
LocReturn 048983:
  PushStack call_result;
  TraceOperation 048990 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 048991:
  TraceOperation 048991 (Jin (Var (Global 111)) (Con 156) (Branch F Dtrue));
  Let b1 = M[009039];
  Let b2 = M[009040];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),4)];
  if (Equal(156,Widen(b3))) {
    TraceOperation 048995 (Je [Var (Global 0),Con 199,Con 215,Con 154] (Branch F Dtrue));
    Let b4 = M[008817];
    Let b5 = M[008818];
    if (LogOr(LogOr(Equal(MakeHiLo(b4,b5),199),Equal(MakeHiLo(b4,b5),215)),Equal(MakeHiLo(b4,b5),154))) {
      TraceOperation 049002 (Call (Floc 067174) [Con -25267] Sp);
      PushFrame 049002;
      SetLocal 1 -25267;
      JumpCall: 067174, #actuals: 1
    } else {
      PopFrame return_address_6;
      JumpReturn: return_address_6, result: 1
    }
  } else {
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 1
  }
LocReturn 049002:
  PushStack call_result;
  TraceOperation 049009 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[363]--------------------------------------------------
LocRoutine 049010:
  MakeRoutineFrame 0;
  Jump: 049011
LocOp 049011:
  TraceOperation 049011 (Jg (Var (Global 36)) (Con 0) (Branch F Dfalse));
  Let b1 = M[008889];
  Let b2 = M[008890];
  if (GreaterThan(MakeHiLo(b1,b2),0)) {
    TraceOperation 049015 (Je [Var (Global 120),Con 50,Con 18] (Branch F (Dloc 049031)));
    Let b3 = M[009057];
    Let b4 = M[009058];
    if (LogOr(Equal(MakeHiLo(b3,b4),50),Equal(MakeHiLo(b3,b4),18))) {
      TraceOperation 049021 (Je [Var (Global 118),Con 98] (Branch F (Dloc 049031)));
      Let b5 = M[009053];
      Let b6 = M[009054];
      if (Equal(MakeHiLo(b5,b6),98)) {
        TraceOperation 049025 (Call (Floc 049052) [] Sp);
        PushFrame 049025;
        JumpCall: 049052, #actuals: 0
      } else {
        Jump: 049031
      }
    } else {
      Jump: 049031
    }
  } else {
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 0
  }
LocReturn 049025:
  PushStack call_result;
  TraceOperation 049030 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 049031:
  TraceOperation 049031 (Je [Var (Global 120),Con 95] (Branch F Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),95)) {
    TraceOperation 049035 (Je [Var (Global 119),Con 98] (Branch F (Dloc 049045)));
    Let b3 = M[009055];
    Let b4 = M[009056];
    if (Equal(MakeHiLo(b3,b4),98)) {
      TraceOperation 049039 (Call (Floc 049052) [] Sp);
      PushFrame 049039;
      JumpCall: 049052, #actuals: 0
    } else {
      Jump: 049045
    }
  } else {
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 0
  }
LocReturn 049039:
  PushStack call_result;
  TraceOperation 049044 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 049045:
  TraceOperation 049045 (Call (Floc 049406) [Var (Global 119)] Sp);
  Let b1 = M[009055];
  Let b2 = M[009056];
  PushFrame 049045;
  SetLocal 1 MakeHiLo(b1,b2);
  JumpCall: 049406, #actuals: 1
LocReturn 049045:
  PushStack call_result;
  TraceOperation 049051 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[364]--------------------------------------------------
LocRoutine 049052:
  MakeRoutineFrame 0;
  Jump: 049053
LocOp 049053:
  TraceOperation 049053 (Store (Con 52) (Con -1));
  SetByte 008889 255;
  SetByte 008890 255;
  TraceOperation 049058 (Call (Floc 021618) [Con 24457,Con 0] Sp);
  PushFrame 049058;
  SetLocal 1 24457;
  SetLocal 2 0;
  JumpCall: 021618, #actuals: 2
LocReturn 049058:
  PushStack call_result;
  TraceOperation 049066 (Print_ret "By some miracle of Zorkian technology, you have managed to stop the leak in the dam.");
  GamePrint "By some miracle of Zorkian technology, you have managed to stop the leak in the dam.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[365]--------------------------------------------------
LocRoutine 049118:
  MakeRoutineFrame 0;
  Jump: 049119
LocOp 049119:
  TraceOperation 049119 (Je [Var (Global 120),Con 85] (Branch F (Dloc 049127)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),85)) {
    TraceOperation 049123 (Je [Var (Global 119),Con 98] (Branch T (Dloc 049135)));
    Let b3 = M[009055];
    Let b4 = M[009056];
    if (Equal(MakeHiLo(b3,b4),98)) {
      Jump: 049135
    } else {
      Jump: 049127
    }
  } else {
    Jump: 049127
  }
LocOp 049127:
  TraceOperation 049127 (Je [Var (Global 120),Con 18] (Branch F Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),18)) {
    TraceOperation 049131 (Je [Var (Global 118),Con 98] (Branch F Dfalse));
    Let b3 = M[009053];
    Let b4 = M[009054];
    if (Equal(MakeHiLo(b3,b4),98)) {
      Jump: 049135
    } else {
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 0
    }
  } else {
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 0
  }
LocOp 049135:
  TraceOperation 049135 (Print_ret "The all-purpose gunk isn't a lubricant.");
  GamePrint "The all-purpose gunk isn't a lubricant.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[366]--------------------------------------------------
LocRoutine 049164:
  MakeRoutineFrame 0;
  Jump: 049165
LocOp 049165:
  TraceOperation 049165 (Je [Var (Global 120),Con 18] (Branch F (Dloc 049196)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),18)) {
    TraceOperation 049169 (Je [Var (Global 119),Con 99] (Branch F (Dloc 049196)));
    Let b3 = M[009055];
    Let b4 = M[009056];
    if (Equal(MakeHiLo(b3,b4),99)) {
      TraceOperation 049173 (Print_ret "The tube refuses to accept anything.");
      GamePrint "The tube refuses to accept anything.\n";
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 1
    } else {
      Jump: 049196
    }
  } else {
    Jump: 049196
  }
LocOp 049196:
  TraceOperation 049196 (Je [Var (Global 120),Con 121] (Branch F Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),121)) {
    TraceOperation 049200 (Test_attr (Var (Global 118)) (Con 11) (Branch F (Dloc 049236)));
    Let b3 = M[009053];
    Let b4 = M[009054];
    Let b5 = M[Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),1)];
    if (TestBit(b5,4)) {
      TraceOperation 049204 (Jin (Con 98) (Var (Global 118)) (Branch F (Dloc 049236)));
      Let b6 = M[009053];
      Let b7 = M[009054];
      Let b8 = M[001627];
      if (Equal(MakeHiLo(b6,b7),Widen(b8))) {
        TraceOperation 049208 (Insert_obj (Con 98) (Var (Global 111)));
        Let b9 = M[009039];
        Let b10 = M[009040];
        Let b11 = M[001627];
        if (IsZero(Widen(b11))) {
          SetByte 001627 b10;
          Let b12 = M[Offset(Offset(000741,Mul(MakeHiLo(b9,b10),9)),6)];
          SetByte 001628 LoByte(Widen(b12));
          SetByte Offset(Offset(000741,Mul(MakeHiLo(b9,b10),9)),6) 98;
          TraceOperation 049211 (Print_ret "The viscous material oozes into your hand.");
          GamePrint "The viscous material oozes into your hand.\n";
          PopFrame return_address_13;
          JumpReturn: return_address_13, result: 1
        } else {
          Let b14 = M[Offset(Offset(000741,Mul(Widen(b11),9)),6)];
          if (Equal(Widen(b14),98)) {
            Let b15 = M[001628];
            SetByte Offset(Offset(000741,Mul(Widen(b11),9)),6) LoByte(Widen(b15));
            SetByte 001627 b10;
            Let b16 = M[Offset(Offset(000741,Mul(MakeHiLo(b9,b10),9)),6)];
            SetByte 001628 LoByte(Widen(b16));
            SetByte Offset(Offset(000741,Mul(MakeHiLo(b9,b10),9)),6) 98;
            TraceOperation 049211 (Print_ret "The viscous material oozes into your hand.");
            GamePrint "The viscous material oozes into your hand.\n";
            PopFrame return_address_17;
            JumpReturn: return_address_17, result: 1
          } else {
            Error: unlink/loop
          }
        }
      } else {
        Jump: 049236
      }
    } else {
      Jump: 049236
    }
  } else {
    PopFrame return_address_18;
    JumpReturn: return_address_18, result: 0
  }
LocOp 049236:
  TraceOperation 049236 (Test_attr (Var (Global 118)) (Con 11) (Branch F (Dloc 049259)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),1)];
  if (TestBit(b3,4)) {
    TraceOperation 049240 (Print_ret "The tube is apparently empty.");
    GamePrint "The tube is apparently empty.\n";
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 1
  } else {
    Jump: 049259
  }
LocOp 049259:
  TraceOperation 049259 (Print_ret "The tube is closed.");
  GamePrint "The tube is closed.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[367]--------------------------------------------------
LocRoutine 049268:
  MakeRoutineFrame 0;
  Jump: 049269
LocOp 049269:
  TraceOperation 049269 (Je [Var (Global 120),Con 35,Con 43] (Branch F (Dloc 049300)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (LogOr(Equal(MakeHiLo(b1,b2),35),Equal(MakeHiLo(b1,b2),43))) {
    TraceOperation 049275 (Print_ret "Sounds reasonable, but this isn't how.");
    GamePrint "Sounds reasonable, but this isn't how.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 049300
  }
LocOp 049300:
  TraceOperation 049300 (Je [Var (Global 120),Con 95] (Branch F Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),95)) {
    TraceOperation 049304 (Je [Var (Global 119),Con 1] (Branch F (Dloc 049349)));
    Let b3 = M[009055];
    Let b4 = M[009056];
    if (Equal(MakeHiLo(b3,b4),1)) {
      TraceOperation 049308 (Print_ret "Are you the little Dutch boy, then? Sorry, this is a big dam.");
      GamePrint "Are you the little Dutch boy, then? Sorry, this is a big dam.\n";
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 1
    } else {
      Jump: 049349
    }
  } else {
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 0
  }
LocOp 049349:
  TraceOperation 049349 (Print "With a ");
  GamePrint "With a ";
  TraceOperation 049356 (Print_obj (Var (Global 119)));
  Let b1 = M[009055];
  Let b2 = M[009056];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  if (IsZeroByte(b5)) {
    GamePrint "";
    TraceOperation 049358 (Print_ret "? Do you know how big this dam is? You could only stop a tiny leak with that.");
    GamePrint "? Do you know how big this dam is? You could only stop a tiny leak with that.\n";
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
    TraceOperation 049358 (Print_ret "? Do you know how big this dam is? You could only stop a tiny leak with that.");
    GamePrint "? Do you know how big this dam is? You could only stop a tiny leak with that.\n";
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 1
  }
--[368]--------------------------------------------------
LocRoutine 049406:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 049409
LocOp 049409:
  TraceOperation 049409 (Print "With a ");
  GamePrint "With a ";
  TraceOperation 049416 (Print_obj (Var (Local 1)));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),7)];
  Let b2 = M[Offset(Offset(Offset(000741,Mul(GetLocal(1),9)),7),1)];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  if (IsZeroByte(b3)) {
    GamePrint "";
    TraceOperation 049418 (Print_ret "?");
    GamePrint "?\n";
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
    TraceOperation 049418 (Print_ret "?");
    GamePrint "?\n";
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  }
--[369]--------------------------------------------------
LocRoutine 049422:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 049425
LocOp 049425:
  TraceOperation 049425 (Je [Var (Local 1),Con 3] (Branch F Dfalse));
  if (Equal(GetLocal(1),3)) {
    TraceOperation 049429 (Jz (Var (Global 144)) (Branch T (Dloc 049527)));
    Let b1 = M[009105];
    Let b2 = M[009106];
    if (IsZero(MakeHiLo(b1,b2))) {
      Jump: 049527
    } else {
      TraceOperation 049433 (Jz (Var (Global 39)) (Branch T (Dloc 049527)));
      Let b3 = M[008895];
      Let b4 = M[008896];
      if (IsZero(MakeHiLo(b3,b4))) {
        Jump: 049527
      } else {
        TraceOperation 049437 (Print "You are in a long room, to the north of which was formerly a lake. However, with the water level lowered, there is merely a wide stream running through the center of the room.");
        GamePrint "You are in a long room, to the north of which was formerly a lake. However, with the water level lowered, there is merely a wide stream running through the center of the room.";
        TraceOperation 049524 (Jump 049828);
        Jump: 049828
      }
    }
  } else {
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 0
  }
LocOp 049527:
  TraceOperation 049527 (Jz (Var (Global 39)) (Branch T (Dloc 049649)));
  Let b1 = M[008895];
  Let b2 = M[008896];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 049649
  } else {
    TraceOperation 049531 (Print "You are in a long room. To the north is a large lake, too deep to cross. You notice, however, that the water level appears to be dropping at a rapid rate. Before long, it might be possible to cross to the other side from here.");
    GamePrint "You are in a long room. To the north is a large lake, too deep to cross. You notice, however, that the water level appears to be dropping at a rapid rate. Before long, it might be possible to cross to the other side from here.";
    TraceOperation 049646 (Jump 049828);
    Jump: 049828
  }
LocOp 049649:
  TraceOperation 049649 (Jz (Var (Global 144)) (Branch T (Dloc 049779)));
  Let b1 = M[009105];
  Let b2 = M[009106];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 049779
  } else {
    TraceOperation 049653 (Print "You are in a long room, to the north of which is a wide area which was formerly a reservoir, but now is merely a stream. You notice, however, that the level of the stream is rising quickly and that before long it will be impossible to cross here.");
    GamePrint "You are in a long room, to the north of which is a wide area which was formerly a reservoir, but now is merely a stream. You notice, however, that the level of the stream is rising quickly and that before long it will be impossible to cross here.";
    TraceOperation 049776 (Jump 049828);
    Jump: 049828
  }
LocOp 049779:
  TraceOperation 049779 (Print "You are in a long room on the south shore of a large lake, far too deep and wide for crossing.");
  GamePrint "You are in a long room on the south shore of a large lake, far too deep and wide for crossing.";
  Jump: 049828
LocOp 049828:
  TraceOperation 049828 New_line;
  GamePrint "\n";
  TraceOperation 049829 (Print_ret "There is a path along the stream to the east or west, a steep pathway climbing southwest along the edge of a chasm, and a path leading into a canyon to the southeast.");
  GamePrint "There is a path along the stream to the east or west, a steep pathway climbing southwest along the edge of a chasm, and a path leading into a canyon to the southeast.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[370]--------------------------------------------------
LocRoutine 049916:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 049919
LocOp 049919:
  TraceOperation 049919 (Je [Var (Local 1),Con 6] (Branch F (Dloc 050013)));
  if (Equal(GetLocal(1),6)) {
    TraceOperation 049924 (Get_parent (Var (Global 111)) Sp);
    Let b1 = M[009039];
    Let b2 = M[009040];
    Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),4)];
    PushStack Widen(b3);
    TraceOperation 049927 (Test_attr (Var Sp) (Con 27) (Branch T (Dloc 050013)));
    PopStack popped4;
    Let b5 = M[Offset(Offset(000741,Mul(popped4,9)),3)];
    if (TestBit(b5,4)) {
      Jump: 050013
    } else {
      TraceOperation 049932 (Jz (Var (Global 39)) (Branch F (Dloc 050013)));
      Let b6 = M[008895];
      Let b7 = M[008896];
      if (IsZero(MakeHiLo(b6,b7))) {
        TraceOperation 049936 (Jz (Var (Global 144)) (Branch T (Dloc 050013)));
        Let b8 = M[009105];
        Let b9 = M[009106];
        if (IsZero(MakeHiLo(b8,b9))) {
          Jump: 050013
        } else {
          TraceOperation 049940 (Print_ret "You notice that the water level here is rising rapidly. The currents are also becoming stronger. Staying here seems quite perilous!");
          GamePrint "You notice that the water level here is rising rapidly. The currents are also becoming stronger. Staying here seems quite perilous!\n";
          PopFrame return_address_10;
          JumpReturn: return_address_10, result: 1
        }
      } else {
        Jump: 050013
      }
    }
  } else {
    Jump: 050013
  }
LocOp 050013:
  TraceOperation 050013 (Je [Var (Local 1),Con 3] (Branch F Dfalse));
  if (Equal(GetLocal(1),3)) {
    TraceOperation 050017 (Jz (Var (Global 144)) (Branch T (Dloc 050080)));
    Let b1 = M[009105];
    Let b2 = M[009106];
    if (IsZero(MakeHiLo(b1,b2))) {
      Jump: 050080
    } else {
      TraceOperation 050020 (Print "You are on what used to be a large lake, but which is now a large mud pile. There are \"shores\" to the north and south.");
      GamePrint "You are on what used to be a large lake, but which is now a large mud pile. There are \"shores\" to the north and south.";
      TraceOperation 050077 (Jump 050167);
      Jump: 050167
    }
  } else {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  }
LocOp 050080:
  TraceOperation 050080 (Print "You are on the lake. Beaches can be seen north and south. Upstream a small stream enters the lake through a narrow cleft in the rocks. The dam can be seen downstream.");
  GamePrint "You are on the lake. Beaches can be seen north and south. Upstream a small stream enters the lake through a narrow cleft in the rocks. The dam can be seen downstream.";
  Jump: 050167
LocOp 050167:
  TraceOperation 050167 New_line;
  GamePrint "\n";
  TraceOperation 050168 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[371]--------------------------------------------------
LocRoutine 050170:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 050173
LocOp 050173:
  TraceOperation 050173 (Je [Var (Local 1),Con 3] (Branch F Dfalse));
  if (Equal(GetLocal(1),3)) {
    TraceOperation 050177 (Jz (Var (Global 144)) (Branch T (Dloc 050269)));
    Let b1 = M[009105];
    Let b2 = M[009106];
    if (IsZero(MakeHiLo(b1,b2))) {
      Jump: 050269
    } else {
      TraceOperation 050181 (Jz (Var (Global 39)) (Branch T (Dloc 050269)));
      Let b3 = M[008895];
      Let b4 = M[008896];
      if (IsZero(MakeHiLo(b3,b4))) {
        Jump: 050269
      } else {
        TraceOperation 050185 (Print "You are in a large cavernous room, the south of which was formerly a lake. However, with the water level lowered, there is merely a wide stream running through there.");
        GamePrint "You are in a large cavernous room, the south of which was formerly a lake. However, with the water level lowered, there is merely a wide stream running through there.";
        TraceOperation 050266 (Jump 050459);
        Jump: 050459
      }
    }
  } else {
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 0
  }
LocOp 050269:
  TraceOperation 050269 (Jz (Var (Global 39)) (Branch T (Dloc 050332)));
  Let b1 = M[008895];
  Let b2 = M[008896];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 050332
  } else {
    TraceOperation 050272 (Print "You are in a large cavernous area. To the south is a wide lake, whose water level appears to be falling rapidly.");
    GamePrint "You are in a large cavernous area. To the south is a wide lake, whose water level appears to be falling rapidly.";
    TraceOperation 050329 (Jump 050459);
    Jump: 050459
  }
LocOp 050332:
  TraceOperation 050332 (Jz (Var (Global 144)) (Branch T (Dloc 050432)));
  Let b1 = M[009105];
  Let b2 = M[009106];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 050432
  } else {
    TraceOperation 050336 (Print "You are in a cavernous area, to the south of which is a very wide stream. The level of the stream is rising rapidly, and it appears that before long it will be impossible to cross to the other side.");
    GamePrint "You are in a cavernous area, to the south of which is a very wide stream. The level of the stream is rising rapidly, and it appears that before long it will be impossible to cross to the other side.";
    TraceOperation 050429 (Jump 050459);
    Jump: 050459
  }
LocOp 050432:
  TraceOperation 050432 (Print "You are in a large cavernous room, north of a large lake.");
  GamePrint "You are in a large cavernous room, north of a large lake.";
  Jump: 050459
LocOp 050459:
  TraceOperation 050459 New_line;
  GamePrint "\n";
  TraceOperation 050460 (Print_ret "There is a slimy stairway leaving the room to the north.");
  GamePrint "There is a slimy stairway leaving the room to the north.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[372]--------------------------------------------------
LocRoutine 050492:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 050495
LocOp 050495:
  TraceOperation 050495 (Je [Var (Global 120),Con 127] (Branch F (Dloc 050541)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),127)) {
    TraceOperation 050499 (Je [Var (Global 118),Con 236] (Branch F (Dloc 050541)));
    Let b3 = M[009053];
    Let b4 = M[009054];
    if (Equal(MakeHiLo(b3,b4),236)) {
      TraceOperation 050503 (Call (Floc 030906) [Var (Global 118)] Sp);
      Let b5 = M[009053];
      Let b6 = M[009054];
      PushFrame 050503;
      SetLocal 1 MakeHiLo(b5,b6);
      JumpCall: 030906, #actuals: 1
    } else {
      Jump: 050541
    }
  } else {
    Jump: 050541
  }
LocReturn 050503:
  PushStack call_result;
  TraceOperation 050509 (Store (Con 1) (Con 1));
  SetLocal 1 1;
  TraceOperation 050512 (Print "The bottle hits the far wall and shatters.");
  GamePrint "The bottle hits the far wall and shatters.";
  TraceOperation 050537 New_line;
  GamePrint "\n";
  TraceOperation 050538 (Jump 050602);
  Jump: 050602
LocOp 050541:
  TraceOperation 050541 (Je [Var (Global 120),Con 42] (Branch F (Dloc 050587)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),42)) {
    TraceOperation 050545 (Store (Con 1) (Con 1));
    SetLocal 1 1;
    TraceOperation 050548 (Call (Floc 030906) [Var (Global 118)] Sp);
    Let b3 = M[009053];
    Let b4 = M[009054];
    PushFrame 050548;
    SetLocal 1 MakeHiLo(b3,b4);
    JumpCall: 030906, #actuals: 1
  } else {
    Jump: 050587
  }
LocReturn 050548:
  PushStack call_result;
  TraceOperation 050554 (Print "A brilliant maneuver destroys the bottle.");
  GamePrint "A brilliant maneuver destroys the bottle.";
  TraceOperation 050583 New_line;
  GamePrint "\n";
  TraceOperation 050584 (Jump 050602);
  Jump: 050602
LocOp 050587:
  TraceOperation 050587 (Je [Var (Global 120),Con 115] (Branch F (Dloc 050602)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),115)) {
    TraceOperation 050591 (Test_attr (Var (Global 118)) (Con 11) (Branch F (Dloc 050602)));
    Let b3 = M[009053];
    Let b4 = M[009054];
    Let b5 = M[Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),1)];
    if (TestBit(b5,4)) {
      TraceOperation 050595 (Jin (Con 237) (Var (Global 118)) (Branch F (Dloc 050602)));
      Let b6 = M[009053];
      Let b7 = M[009054];
      Let b8 = M[002878];
      if (Equal(MakeHiLo(b6,b7),Widen(b8))) {
        TraceOperation 050599 (Store (Con 1) (Con 1));
        SetLocal 1 1;
        Jump: 050602
      } else {
        Jump: 050602
      }
    } else {
      Jump: 050602
    }
  } else {
    Jump: 050602
  }
LocOp 050602:
  TraceOperation 050602 (Jz (Var (Local 1)) (Branch T (Dloc 050642)));
  if (IsZero(GetLocal(1))) {
    Jump: 050642
  } else {
    TraceOperation 050605 (Jin (Con 237) (Var (Global 118)) (Branch F (Dloc 050642)));
    Let b1 = M[009053];
    Let b2 = M[009054];
    Let b3 = M[002878];
    if (Equal(MakeHiLo(b1,b2),Widen(b3))) {
      TraceOperation 050609 (Print "The water spills to the floor and evaporates.");
      GamePrint "The water spills to the floor and evaporates.";
      TraceOperation 050634 New_line;
      GamePrint "\n";
      TraceOperation 050635 (Call (Floc 030906) [Con 237] Sp);
      PushFrame 050635;
      SetLocal 1 237;
      JumpCall: 030906, #actuals: 1
    } else {
      Jump: 050642
    }
  }
LocReturn 050635:
  PushStack call_result;
  TraceOperation 050641 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 050642:
  TraceOperation 050642 (Jz (Var (Local 1)) (Branch T Dfalse));
  if (IsZero(GetLocal(1))) {
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 0
  } else {
    TraceOperation 050645 Rtrue;
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 1
  }
--[373]--------------------------------------------------
LocRoutine 050646:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 050649
LocOp 050649:
  TraceOperation 050649 (Store (Con 1) (Var (Global 35)));
  Let b1 = M[008887];
  Let b2 = M[008888];
  SetLocal 1 MakeHiLo(b1,b2);
  TraceOperation 050652 (Je [Var (Global 111),Con 186] (Branch F (Dloc 050734)));
  Let b3 = M[009039];
  Let b4 = M[009040];
  if (Equal(MakeHiLo(b3,b4),186)) {
    TraceOperation 050657 (Jz (Var (Global 149)) (Branch T (Dloc 050691)));
    Let b5 = M[009115];
    Let b6 = M[009116];
    if (IsZero(MakeHiLo(b5,b6))) {
      Jump: 050691
    } else {
      TraceOperation 050660 (Print_ret "No use talking to him. He's fast asleep.");
      GamePrint "No use talking to him. He's fast asleep.\n";
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 1
    }
  } else {
    Jump: 050734
  }
LocOp 050691:
  TraceOperation 050691 (Je [Var (Global 120),Con 91] (Branch F (Dloc 050705)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),91)) {
    TraceOperation 050695 (Store (Con 127) (Con 4));
    SetByte 009039 0;
    SetByte 009040 4;
    TraceOperation 050698 (Call (Floc 022396) [Con 91] Sp);
    PushFrame 050698;
    SetLocal 1 91;
    JumpCall: 022396, #actuals: 1
  } else {
    Jump: 050705
  }
LocReturn 050698:
  PushStack call_result;
  TraceOperation 050704 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 050705:
  TraceOperation 050705 (Print_ret "The cyclops prefers eating to making conversation.");
  GamePrint "The cyclops prefers eating to making conversation.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 050734:
  TraceOperation 050734 (Jz (Var (Global 149)) (Branch T (Dloc 050845)));
  Let b1 = M[009115];
  Let b2 = M[009116];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 050845
  } else {
    TraceOperation 050738 (Je [Var (Global 120),Con 56] (Branch F (Dloc 050777)));
    Let b3 = M[009057];
    Let b4 = M[009058];
    if (Equal(MakeHiLo(b3,b4),56)) {
      TraceOperation 050742 (Print_ret "The cyclops is sleeping like a baby, albeit a very ugly one.");
      GamePrint "The cyclops is sleeping like a baby, albeit a very ugly one.\n";
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 1
    } else {
      Jump: 050777
    }
  }
LocOp 050777:
  TraceOperation 050777 (Je [Var (Global 120),Con 19,Con 70,Con 136] (Branch T (Dloc 050790)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),19),Equal(MakeHiLo(b1,b2),70)),Equal(MakeHiLo(b1,b2),136))) {
    Jump: 050790
  } else {
    TraceOperation 050784 (Je [Var (Global 120),Con 42,Con 28] (Branch F Dfalse));
    Let b3 = M[009057];
    Let b4 = M[009058];
    if (LogOr(Equal(MakeHiLo(b3,b4),42),Equal(MakeHiLo(b3,b4),28))) {
      Jump: 050790
    } else {
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 0
    }
  }
LocOp 050790:
  TraceOperation 050790 (Print "The cyclops yawns and stares at the thing that woke him up.");
  GamePrint "The cyclops yawns and stares at the thing that woke him up.";
  TraceOperation 050823 New_line;
  GamePrint "\n";
  TraceOperation 050824 (Store (Con 165) (Con 0));
  SetByte 009115 0;
  SetByte 009116 0;
  TraceOperation 050827 (Set_attr (Con 186) (Con 2));
  Let b1 = M[002415];
  SetByte 002415 SetBit(b1,5);
  TraceOperation 050830 (Jl (Var (Local 1)) (Con 0) (Branch F (Dloc 050840)));
  if (LessThan(GetLocal(1),0)) {
    TraceOperation 050834 (Sub (Con 0) (Var (Local 1)) (Global 35));
    SetByte 008887 HiByte(Sub(0,GetLocal(1)));
    SetByte 008888 LoByte(Sub(0,GetLocal(1)));
    TraceOperation 050838 (Ret (Var (Global 35)));
    Let b2 = M[008887];
    Let b3 = M[008888];
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: MakeHiLo(b2,b3)
  } else {
    Jump: 050840
  }
LocOp 050840:
  TraceOperation 050840 (Store (Con 51) (Var (Local 1)));
  SetByte 008887 HiByte(GetLocal(1));
  SetByte 008888 LoByte(GetLocal(1));
  TraceOperation 050843 (Ret (Var (Global 35)));
  Let b1 = M[008887];
  Let b2 = M[008888];
  PopFrame return_address_3;
  JumpReturn: return_address_3, result: MakeHiLo(b1,b2)
LocOp 050845:
  TraceOperation 050845 (Je [Var (Global 120),Con 56] (Branch F (Dloc 050880)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),56)) {
    TraceOperation 050849 (Print_ret "A hungry cyclops is standing at the foot of the stairs.");
    GamePrint "A hungry cyclops is standing at the foot of the stairs.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 050880
  }
LocOp 050880:
  TraceOperation 050880 (Je [Var (Global 120),Con 63] (Branch F (Dloc 051313)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),63)) {
    TraceOperation 050885 (Je [Var (Global 119),Con 186] (Branch F (Dloc 051313)));
    Let b3 = M[009055];
    Let b4 = M[009056];
    if (Equal(MakeHiLo(b3,b4),186)) {
      TraceOperation 050890 (Je [Var (Global 118),Con 225] (Branch F (Dloc 051057)));
      Let b5 = M[009053];
      Let b6 = M[009054];
      if (Equal(MakeHiLo(b5,b6),225)) {
        TraceOperation 050895 (Jl (Var (Local 1)) (Con 0) (Branch T (Dloc 051042)));
        if (LessThan(GetLocal(1),0)) {
          Jump: 051042
        } else {
          TraceOperation 050900 (Call (Floc 030906) [Con 225] Sp);
          PushFrame 050900;
          SetLocal 1 225;
          JumpCall: 030906, #actuals: 1
        }
      } else {
        Jump: 051057
      }
    } else {
      Jump: 051313
    }
  } else {
    Jump: 051313
  }
LocReturn 050900:
  PushStack call_result;
  TraceOperation 050906 (Print "The cyclops says \"Mmm Mmm. I love hot peppers! But oh, could I use a drink. Perhaps I could drink the blood of that thing.\"  From the gleam in his eye, it could be surmised that you are \"that thing\".");
  GamePrint "The cyclops says \"Mmm Mmm. I love hot peppers! But oh, could I use a drink. Perhaps I could drink the blood of that thing.\"  From the gleam in his eye, it could be surmised that you are \"that thing\".";
  TraceOperation 051029 New_line;
  GamePrint "\n";
  TraceOperation 051030 (Sub (Con 0) (Var (Local 1)) Sp);
  PushStack Sub(0,GetLocal(1));
  TraceOperation 051034 (Call (Floc 057160) [Con -1,Var Sp] (Global 35));
  PopStack popped1;
  PushFrame 051034;
  SetLocal 1 -1;
  SetLocal 2 popped1;
  JumpCall: 057160, #actuals: 2
LocReturn 051034:
  SetByte 008887 HiByte(call_result);
  SetByte 008888 LoByte(call_result);
  Jump: 051042
LocOp 051042:
  TraceOperation 051042 (Call (Floc 021618) [Con 25759,Con -1] Sp);
  PushFrame 051042;
  SetLocal 1 25759;
  SetLocal 2 -1;
  JumpCall: 021618, #actuals: 2
LocReturn 051042:
  PushStack call_result;
  TraceOperation 051051 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 051056 Rtrue;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: 1
LocOp 051057:
  TraceOperation 051057 (Je [Var (Global 118),Con 237] (Branch T (Dloc 051071)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  if (Equal(MakeHiLo(b1,b2),237)) {
    Jump: 051071
  } else {
    TraceOperation 051061 (Je [Var (Global 118),Con 236] (Branch F (Dloc 051259)));
    Let b3 = M[009053];
    Let b4 = M[009054];
    if (Equal(MakeHiLo(b3,b4),236)) {
      TraceOperation 051066 (Jin (Con 237) (Con 236) (Branch F (Dloc 051259)));
      Let b5 = M[002878];
      if (Equal(236,Widen(b5))) {
        Jump: 051071
      } else {
        Jump: 051259
      }
    } else {
      Jump: 051259
    }
  }
LocOp 051071:
  TraceOperation 051071 (Jl (Var (Local 1)) (Con 0) (Branch F (Dloc 051220)));
  if (LessThan(GetLocal(1),0)) {
    TraceOperation 051076 (Call (Floc 030906) [Con 237] Sp);
    PushFrame 051076;
    SetLocal 1 237;
    JumpCall: 030906, #actuals: 1
  } else {
    Jump: 051220
  }
LocReturn 051076:
  PushStack call_result;
  TraceOperation 051082 (Insert_obj (Con 236) (Var (Global 0)));
  Let b1 = M[008817];
  Let b2 = M[008818];
  Let b3 = M[002869];
  if (IsZero(Widen(b3))) {
    SetByte 002869 b2;
    Let b4 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),6)];
    SetByte 002870 LoByte(Widen(b4));
    SetByte Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),6) 236;
    TraceOperation 051085 (Set_attr (Con 236) (Con 11));
    Let b5 = M[002866];
    SetByte 002866 SetBit(b5,4);
    TraceOperation 051088 (Clear_attr (Con 186) (Con 2));
    Let b6 = M[002415];
    SetByte 002415 ClearBit(b6,5);
    TraceOperation 051091 (Print "The cyclops takes the bottle, checks that it's open, and drinks the water. A moment later, he lets out a yawn that nearly blows you over, and then falls fast asleep (what did you put in that drink, anyway?).");
    GamePrint "The cyclops takes the bottle, checks that it's open, and drinks the water. A moment later, he lets out a yawn that nearly blows you over, and then falls fast asleep (what did you put in that drink, anyway?).";
    TraceOperation 051214 New_line;
    GamePrint "\n";
    TraceOperation 051215 (Store (Con 165) (Con 1));
    SetByte 009115 0;
    SetByte 009116 1;
    TraceOperation 051218 (Ret (Var (Global 149)));
    Let b7 = M[009115];
    Let b8 = M[009116];
    PopFrame return_address_9;
    JumpReturn: return_address_9, result: MakeHiLo(b7,b8)
  } else {
    Let b10 = M[Offset(Offset(000741,Mul(Widen(b3),9)),6)];
    if (Equal(Widen(b10),236)) {
      Let b11 = M[002870];
      SetByte Offset(Offset(000741,Mul(Widen(b3),9)),6) LoByte(Widen(b11));
      SetByte 002869 b2;
      Let b12 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),6)];
      SetByte 002870 LoByte(Widen(b12));
      SetByte Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),6) 236;
      TraceOperation 051085 (Set_attr (Con 236) (Con 11));
      Let b13 = M[002866];
      SetByte 002866 SetBit(b13,4);
      TraceOperation 051088 (Clear_attr (Con 186) (Con 2));
      Let b14 = M[002415];
      SetByte 002415 ClearBit(b14,5);
      TraceOperation 051091 (Print "The cyclops takes the bottle, checks that it's open, and drinks the water. A moment later, he lets out a yawn that nearly blows you over, and then falls fast asleep (what did you put in that drink, anyway?).");
      GamePrint "The cyclops takes the bottle, checks that it's open, and drinks the water. A moment later, he lets out a yawn that nearly blows you over, and then falls fast asleep (what did you put in that drink, anyway?).";
      TraceOperation 051214 New_line;
      GamePrint "\n";
      TraceOperation 051215 (Store (Con 165) (Con 1));
      SetByte 009115 0;
      SetByte 009116 1;
      TraceOperation 051218 (Ret (Var (Global 149)));
      Let b15 = M[009115];
      Let b16 = M[009116];
      PopFrame return_address_17;
      JumpReturn: return_address_17, result: MakeHiLo(b15,b16)
    } else {
      Error: unlink/loop
    }
  }
LocOp 051220:
  TraceOperation 051220 (Print_ret "The cyclops apparently is not thirsty and refuses your generous offer.");
  GamePrint "The cyclops apparently is not thirsty and refuses your generous offer.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 051259:
  TraceOperation 051259 (Je [Var (Global 118),Con 189] (Branch F (Dloc 051286)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  if (Equal(MakeHiLo(b1,b2),189)) {
    TraceOperation 051263 (Print_ret "The cyclops may be hungry, but there is a limit.");
    GamePrint "The cyclops may be hungry, but there is a limit.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 051286
  }
LocOp 051286:
  TraceOperation 051286 (Print_ret "The cyclops is not so stupid as to eat THAT!");
  GamePrint "The cyclops is not so stupid as to eat THAT!\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 051313:
  TraceOperation 051313 (Je [Var (Global 120),Con 42,Con 19,Con 127] (Branch F (Dloc 051428)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),42),Equal(MakeHiLo(b1,b2),19)),Equal(MakeHiLo(b1,b2),127))) {
    TraceOperation 051321 (Call (Floc 021618) [Con 25759,Con -1] Sp);
    PushFrame 051321;
    SetLocal 1 25759;
    SetLocal 2 -1;
    JumpCall: 021618, #actuals: 2
  } else {
    Jump: 051428
  }
LocReturn 051321:
  PushStack call_result;
  TraceOperation 051330 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 051335 (Je [Var (Global 120),Con 42] (Branch F (Dloc 051384)));
  Let b2 = M[009057];
  Let b3 = M[009058];
  if (Equal(MakeHiLo(b2,b3),42)) {
    TraceOperation 051339 (Print_ret "\"Do you think I'm as stupid as my father was?\", he says, dodging.");
    GamePrint "\"Do you think I'm as stupid as my father was?\", he says, dodging.\n";
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 1
  } else {
    Jump: 051384
  }
LocOp 051384:
  TraceOperation 051384 (Print "The cyclops shrugs but otherwise ignores your pitiful attempt.");
  GamePrint "The cyclops shrugs but otherwise ignores your pitiful attempt.";
  TraceOperation 051419 New_line;
  GamePrint "\n";
  TraceOperation 051420 (Je [Var (Global 120),Con 127] (Branch F Dtrue));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),127)) {
    TraceOperation 051424 (Insert_obj (Var (Global 118)) (Var (Global 0)));
    Let b3 = M[009053];
    Let b4 = M[009054];
    Let b5 = M[008817];
    Let b6 = M[008818];
    Let b7 = M[Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),4)];
    if (IsZero(Widen(b7))) {
      SetByte Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),4) b6;
      Let b8 = M[Offset(Offset(000741,Mul(MakeHiLo(b5,b6),9)),6)];
      SetByte Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),5) LoByte(Widen(b8));
      SetByte Offset(Offset(000741,Mul(MakeHiLo(b5,b6),9)),6) b4;
      TraceOperation 051427 Rtrue;
      PopFrame return_address_9;
      JumpReturn: return_address_9, result: 1
    } else {
      Let b10 = M[Offset(Offset(000741,Mul(Widen(b7),9)),6)];
      if (Equal(Widen(b10),MakeHiLo(b3,b4))) {
        Let b11 = M[Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),5)];
        SetByte Offset(Offset(000741,Mul(Widen(b7),9)),6) LoByte(Widen(b11));
        SetByte Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),4) b6;
        Let b12 = M[Offset(Offset(000741,Mul(MakeHiLo(b5,b6),9)),6)];
        SetByte Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),5) LoByte(Widen(b12));
        SetByte Offset(Offset(000741,Mul(MakeHiLo(b5,b6),9)),6) b4;
        TraceOperation 051427 Rtrue;
        PopFrame return_address_13;
        JumpReturn: return_address_13, result: 1
      } else {
        Error: unlink/loop
      }
    }
  } else {
    PopFrame return_address_14;
    JumpReturn: return_address_14, result: 1
  }
LocOp 051428:
  TraceOperation 051428 (Je [Var (Global 120),Con 93] (Branch F (Dloc 051457)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),93)) {
    TraceOperation 051432 (Print_ret "The cyclops doesn't take kindly to being grabbed.");
    GamePrint "The cyclops doesn't take kindly to being grabbed.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 051457
  }
LocOp 051457:
  TraceOperation 051457 (Je [Var (Global 120),Con 130] (Branch F (Dloc 051492)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),130)) {
    TraceOperation 051461 (Print_ret "You cannot tie the cyclops, though he is fit to be tied.");
    GamePrint "You cannot tie the cyclops, though he is fit to be tied.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 051492
  }
LocOp 051492:
  TraceOperation 051492 (Je [Var (Global 120),Con 77] (Branch F Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),77)) {
    TraceOperation 051496 (Print_ret "You can hear his stomach rumbling.");
    GamePrint "You can hear his stomach rumbling.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 0
  }
--[374]--------------------------------------------------
LocRoutine 051518:
  MakeRoutineFrame 0;
  Jump: 051519
LocOp 051519:
  TraceOperation 051519 (Jz (Var (Global 149)) (Branch F Dtrue));
  Let b1 = M[009115];
  Let b2 = M[009116];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 051522 (Jz (Var (Global 62)) (Branch F Dtrue));
    Let b3 = M[008941];
    Let b4 = M[008942];
    if (IsZero(MakeHiLo(b3,b4))) {
      TraceOperation 051525 (Je [Var (Global 0),Con 185] (Branch T (Dloc 051542)));
      Let b5 = M[008817];
      Let b6 = M[008818];
      if (Equal(MakeHiLo(b5,b6),185)) {
        Jump: 051542
      } else {
        TraceOperation 051529 (Call (Floc 021638) [Con 25759] Sp);
        PushFrame 051529;
        SetLocal 1 25759;
        JumpCall: 021638, #actuals: 1
      }
    } else {
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 1
    }
  } else {
    PopFrame return_address_8;
    JumpReturn: return_address_8, result: 1
  }
LocReturn 051529:
  PushStack call_result;
  TraceOperation 051536 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 051541 Rtrue;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: 1
LocOp 051542:
  TraceOperation 051542 (Jl (Var (Global 35)) (Con 0) (Branch F (Dloc 051553)));
  Let b1 = M[008887];
  Let b2 = M[008888];
  if (LessThan(MakeHiLo(b1,b2),0)) {
    TraceOperation 051546 (Sub (Con 0) (Var (Global 35)) Sp);
    Let b3 = M[008887];
    Let b4 = M[008888];
    PushStack Sub(0,MakeHiLo(b3,b4));
    TraceOperation 051550 (Jump 051556);
    Jump: 051556
  } else {
    Jump: 051553
  }
LocOp 051553:
  TraceOperation 051553 (Push (Var (Global 35)));
  Let b1 = M[008887];
  Let b2 = M[008888];
  PushStack MakeHiLo(b1,b2);
  Jump: 051556
LocOp 051556:
  TraceOperation 051556 (Jg (Var Sp) (Con 5) (Branch F (Dloc 051580)));
  PopStack popped1;
  if (GreaterThan(popped1,5)) {
    TraceOperation 051560 (Call (Floc 021638) [Con 25759] Sp);
    PushFrame 051560;
    SetLocal 1 25759;
    JumpCall: 021638, #actuals: 1
  } else {
    Jump: 051580
  }
LocReturn 051560:
  PushStack call_result;
  TraceOperation 051567 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 051572 (Call (Floc 067174) [Con -25242] Sp);
  PushFrame 051572;
  SetLocal 1 -25242;
  JumpCall: 067174, #actuals: 1
LocReturn 051572:
  PushStack call_result;
  TraceOperation 051579 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 051580:
  TraceOperation 051580 (Jl (Var (Global 35)) (Con 0) (Branch F (Dloc 051589)));
  Let b1 = M[008887];
  Let b2 = M[008888];
  if (LessThan(MakeHiLo(b1,b2),0)) {
    TraceOperation 051584 (Dec (Con 51));
    Let b3 = M[008887];
    Let b4 = M[008888];
    SetByte 008887 HiByte(Sub(MakeHiLo(b3,b4),1));
    SetByte 008888 LoByte(Sub(MakeHiLo(b3,b4),1));
    TraceOperation 051586 (Jump 051591);
    Jump: 051591
  } else {
    Jump: 051589
  }
LocOp 051589:
  TraceOperation 051589 (Inc (Con 51));
  Let b1 = M[008887];
  Let b2 = M[008888];
  SetByte 008887 HiByte(Add(MakeHiLo(b1,b2),1));
  SetByte 008888 LoByte(Add(MakeHiLo(b1,b2),1));
  Jump: 051591
LocOp 051591:
  TraceOperation 051591 (Jz (Var (Global 149)) (Branch F Dfalse));
  Let b1 = M[009115];
  Let b2 = M[009116];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 051594 (Jl (Var (Global 35)) (Con 0) (Branch F (Dloc 051605)));
    Let b3 = M[008887];
    Let b4 = M[008888];
    if (LessThan(MakeHiLo(b3,b4),0)) {
      TraceOperation 051598 (Sub (Con 0) (Var (Global 35)) Sp);
      Let b5 = M[008887];
      Let b6 = M[008888];
      PushStack Sub(0,MakeHiLo(b5,b6));
      TraceOperation 051602 (Jump 051608);
      Jump: 051608
    } else {
      Jump: 051605
    }
  } else {
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 0
  }
LocOp 051605:
  TraceOperation 051605 (Push (Var (Global 35)));
  Let b1 = M[008887];
  Let b2 = M[008888];
  PushStack MakeHiLo(b1,b2);
  Jump: 051608
LocOp 051608:
  TraceOperation 051608 (Sub (Var Sp) (Con 1) Sp);
  PopStack popped1;
  PushStack Sub(popped1,1);
  TraceOperation 051612 (Loadw (Var (Global 34)) (Var Sp) Sp);
  Let b2 = M[008885];
  Let b3 = M[008886];
  PopStack popped4;
  Let b5 = M[Offset(Address(MakeHiLo(b2,b3)),Mul(2,popped4))];
  Let b6 = M[Offset(Offset(Address(MakeHiLo(b2,b3)),Mul(2,popped4)),1)];
  PushStack MakeHiLo(b5,b6);
  TraceOperation 051616 (Print_paddr (Var Sp));
  PopStack popped7;
  GamePrint GetText(PackedAddress Z3(popped7));
  TraceOperation 051618 New_line;
  GamePrint "\n";
  TraceOperation 051619 Rtrue;
  PopFrame return_address_8;
  JumpReturn: return_address_8, result: 1
--[375]--------------------------------------------------
LocRoutine 051620:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 051623
LocOp 051623:
  TraceOperation 051623 (Je [Var (Local 1),Con 3] (Branch F (Dloc 052049)));
  if (Equal(GetLocal(1),3)) {
    TraceOperation 051628 (Print "This room has an exit on the northwest, and a staircase leading up.");
    GamePrint "This room has an exit on the northwest, and a staircase leading up.";
    TraceOperation 051657 New_line;
    GamePrint "\n";
    TraceOperation 051658 (Jz (Var (Global 149)) (Branch T (Dloc 051697)));
    Let b1 = M[009115];
    Let b2 = M[009116];
    if (IsZero(MakeHiLo(b1,b2))) {
      Jump: 051697
    } else {
      TraceOperation 051661 (Jz (Var (Global 143)) (Branch F (Dloc 051697)));
      Let b3 = M[009103];
      Let b4 = M[009104];
      if (IsZero(MakeHiLo(b3,b4))) {
        TraceOperation 051664 (Print_ret "The cyclops is sleeping blissfully at the foot of the stairs.");
        GamePrint "The cyclops is sleeping blissfully at the foot of the stairs.\n";
        PopFrame return_address_5;
        JumpReturn: return_address_5, result: 1
      } else {
        Jump: 051697
      }
    }
  } else {
    Jump: 052049
  }
LocOp 051697:
  TraceOperation 051697 (Jz (Var (Global 143)) (Branch T (Dloc 051745)));
  Let b1 = M[009103];
  Let b2 = M[009104];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 051745
  } else {
    TraceOperation 051700 (Print_ret "The east wall, previously solid, now has a cyclops-sized opening in it.");
    GamePrint "The east wall, previously solid, now has a cyclops-sized opening in it.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  }
LocOp 051745:
  TraceOperation 051745 (Jz (Var (Global 35)) (Branch F (Dloc 051886)));
  Let b1 = M[008887];
  Let b2 = M[008888];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 051749 (Print_ret "A cyclops, who looks prepared to eat horses (much less mere adventurers), blocks the staircase. From his state of health, and the bloodstains on the walls, you gather that he is not very friendly, though he likes people.");
    GamePrint "A cyclops, who looks prepared to eat horses (much less mere adventurers), blocks the staircase. From his state of health, and the bloodstains on the walls, you gather that he is not very friendly, though he likes people.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 051886
  }
LocOp 051886:
  TraceOperation 051886 (Jg (Var (Global 35)) (Con 0) (Branch F (Dloc 051972)));
  Let b1 = M[008887];
  Let b2 = M[008888];
  if (GreaterThan(MakeHiLo(b1,b2),0)) {
    TraceOperation 051891 (Print_ret "The cyclops is standing in the corner, eyeing you closely. I don't think he likes you very much. He looks extremely hungry, even for a cyclops.");
    GamePrint "The cyclops is standing in the corner, eyeing you closely. I don't think he likes you very much. He looks extremely hungry, even for a cyclops.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 051972
  }
LocOp 051972:
  TraceOperation 051972 (Jl (Var (Global 35)) (Con 0) (Branch F Dfalse));
  Let b1 = M[008887];
  Let b2 = M[008888];
  if (LessThan(MakeHiLo(b1,b2),0)) {
    TraceOperation 051976 (Print_ret "The cyclops, having eaten the hot peppers, appears to be gasping. His enflamed tongue protrudes from his man-sized mouth.");
    GamePrint "The cyclops, having eaten the hot peppers, appears to be gasping. His enflamed tongue protrudes from his man-sized mouth.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 0
  }
LocOp 052049:
  TraceOperation 052049 (Je [Var (Local 1),Con 2] (Branch F Dfalse));
  if (Equal(GetLocal(1),2)) {
    TraceOperation 052053 (Jz (Var (Global 35)) (Branch T Dtrue));
    Let b1 = M[008887];
    Let b2 = M[008888];
    if (IsZero(MakeHiLo(b1,b2))) {
      PopFrame return_address_3;
      JumpReturn: return_address_3, result: 1
    } else {
      TraceOperation 052056 (Call (Floc 021638) [Con 25759] Sp);
      PushFrame 052056;
      SetLocal 1 25759;
      JumpCall: 021638, #actuals: 1
    }
  } else {
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 0
  }
LocReturn 052056:
  PushStack call_result;
  TraceOperation 052063 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 052068 Rtrue;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: 1
--[376]--------------------------------------------------
LocRoutine 052070:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 052075
LocOp 052075:
  TraceOperation 052075 (Je [Var (Local 1),Con 3] (Branch F (Dloc 052273)));
  if (Equal(GetLocal(1),3)) {
    TraceOperation 052080 (Print "This is a large room with a ceiling which cannot be detected from the ground. There is a narrow passage from east to west and a stone stairway leading upward.");
    GamePrint "This is a large room with a ceiling which cannot be detected from the ground. There is a narrow passage from east to west and a stone stairway leading upward.";
    TraceOperation 052147 (Jz (Var (Global 33)) (Branch F (Dloc 052156)));
    Let b1 = M[008883];
    Let b2 = M[008884];
    if (IsZero(MakeHiLo(b1,b2))) {
      TraceOperation 052150 (Jz (Var (Global 39)) (Branch F (Dloc 052182)));
      Let b3 = M[008895];
      Let b4 = M[008896];
      if (IsZero(MakeHiLo(b3,b4))) {
        TraceOperation 052153 (Jz (Var (Global 144)) (Branch T (Dloc 052182)));
        Let b5 = M[009105];
        Let b6 = M[009106];
        if (IsZero(MakeHiLo(b5,b6))) {
          Jump: 052182
        } else {
          Jump: 052156
        }
      } else {
        Jump: 052182
      }
    } else {
      Jump: 052156
    }
  } else {
    Jump: 052273
  }
LocOp 052156:
  TraceOperation 052156 (Print " The room is eerie in its quietness.");
  GamePrint " The room is eerie in its quietness.";
  TraceOperation 052179 (Jump 052271);
  Jump: 052271
LocOp 052182:
  TraceOperation 052182 (Print " The room is deafeningly loud with an undetermined rushing sound. The sound seems to reverberate from all of the walls, making it difficult even to think.");
  GamePrint " The room is deafeningly loud with an undetermined rushing sound. The sound seems to reverberate from all of the walls, making it difficult even to think.";
  Jump: 052271
LocOp 052271:
  TraceOperation 052271 New_line;
  GamePrint "\n";
  TraceOperation 052272 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 052273:
  TraceOperation 052273 (Je [Var (Local 1),Con 6] (Branch F (Dloc 052412)));
  if (Equal(GetLocal(1),6)) {
    TraceOperation 052278 (Jz (Var (Global 39)) (Branch T (Dloc 052412)));
    Let b1 = M[008895];
    Let b2 = M[008896];
    if (IsZero(MakeHiLo(b1,b2))) {
      Jump: 052412
    } else {
      TraceOperation 052282 (Jz (Var (Global 144)) (Branch F (Dloc 052412)));
      Let b3 = M[009105];
      Let b4 = M[009106];
      if (IsZero(MakeHiLo(b3,b4))) {
        TraceOperation 052286 (Print "It is unbearably loud here, with an ear-splitting roar seeming to come from all around you. There is a pounding in your head which won't stop. With a tremendous effort, you scramble out of the room.");
        GamePrint "It is unbearably loud here, with an ear-splitting roar seeming to come from all around you. There is a pounding in your head which won't stop. With a tremendous effort, you scramble out of the room.";
        TraceOperation 052397 New_line;
        GamePrint "\n";
        TraceOperation 052398 New_line;
        GamePrint "\n";
        TraceOperation 052399 (Call (Floc 020076) [Var (Global 38)] Sp);
        Let b5 = M[008893];
        Let b6 = M[008894];
        PushFrame 052399;
        SetLocal 1 MakeHiLo(b5,b6);
        JumpCall: 020076, #actuals: 1
      } else {
        Jump: 052412
      }
    }
  } else {
    Jump: 052412
  }
LocReturn 052399:
  PushStack call_result;
  TraceOperation 052405 (Call (Floc 037558) [Var Sp] Sp);
  PopStack popped1;
  PushFrame 052405;
  SetLocal 1 popped1;
  JumpCall: 037558, #actuals: 1
LocReturn 052405:
  PushStack call_result;
  TraceOperation 052411 Rfalse;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 0
LocOp 052412:
  TraceOperation 052412 (Je [Var (Local 1),Con 2] (Branch F Dfalse));
  if (Equal(GetLocal(1),2)) {
    TraceOperation 052416 (Jz (Var (Global 33)) (Branch F Dfalse));
    Let b1 = M[008883];
    Let b2 = M[008884];
    if (IsZero(MakeHiLo(b1,b2))) {
      TraceOperation 052419 (Jz (Var (Global 39)) (Branch F (Dloc 052425)));
      Let b3 = M[008895];
      Let b4 = M[008896];
      if (IsZero(MakeHiLo(b3,b4))) {
        TraceOperation 052422 (Jz (Var (Global 144)) (Branch F Dfalse));
        Let b5 = M[009105];
        Let b6 = M[009106];
        if (IsZero(MakeHiLo(b5,b6))) {
          Jump: 052425
        } else {
          PopFrame return_address_7;
          JumpReturn: return_address_7, result: 0
        }
      } else {
        Jump: 052425
      }
    } else {
      PopFrame return_address_8;
      JumpReturn: return_address_8, result: 0
    }
  } else {
    PopFrame return_address_9;
    JumpReturn: return_address_9, result: 0
  }
LocOp 052425:
  TraceOperation 052425 (Jz (Var (Global 39)) (Branch T (Dloc 052431)));
  Let b1 = M[008895];
  Let b2 = M[008896];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 052431
  } else {
    TraceOperation 052428 (Jz (Var (Global 144)) (Branch T Dfalse));
    Let b3 = M[009105];
    Let b4 = M[009106];
    if (IsZero(MakeHiLo(b3,b4))) {
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 0
    } else {
      Jump: 052431
    }
  }
LocOp 052431:
  TraceOperation 052431 (Call (Floc 035976) [] Sp);
  PushFrame 052431;
  JumpCall: 035976, #actuals: 0
LocReturn 052431:
  PushStack call_result;
  TraceOperation 052436 (Jz (Var (Global 108)) (Branch T (Dloc 052474)));
  Let b1 = M[009033];
  Let b2 = M[009034];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 052474
  } else {
    TraceOperation 052439 (Print "The rest of your commands have been lost in the noise.");
    GamePrint "The rest of your commands have been lost in the noise.";
    TraceOperation 052470 New_line;
    GamePrint "\n";
    TraceOperation 052471 (Store (Con 124) (Con 0));
    SetByte 009033 0;
    SetByte 009034 0;
    Jump: 052474
  }
LocOp 052474:
  TraceOperation 052474 New_line;
  GamePrint "\n";
  TraceOperation 052475 (Print ">");
  GamePrint ">";
  TraceOperation 052480 (Sread (Var (Global 109)) (Var (Global 110)));
  Let b1 = M[008817];
  Let b2 = M[008818];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  if (IsZeroByte(b5)) {
    Let b6 = M[008819];
    Let b7 = M[008820];
    Let b8 = M[008821];
    Let b9 = M[008822];
    ReadInputFromUser (Just (StatusInfo {room = "", score = MakeHiLo(b6,b7), turns = MakeHiLo(b8,b9)})) user_command_line_10;
    Let b11 = M[009035];
    Let b12 = M[009036];
    Let b13 = M[009037];
    Let b14 = M[009038];
    Tokenize user_command_line_10 (num_tokens_15,position_words_16,canonicalized17);
    StringBytes canonicalized17 string_bytes_18;
    ForeachB: (index19,byte20) in (string_bytes_18) {
      SetByte Offset(Offset(Address(MakeHiLo(b11,b12)),1),index19) byte20;
    }
    SetByte Offset(Address(MakeHiLo(b13,b14)),1) num_tokens_15;
    ForeachB: (index21,pos22,word23) in (position_words_16) {
      Let lookee24 = LookupInDict(word23);
      SetByte Offset(Offset(Offset(Address(MakeHiLo(b13,b14)),2),Mul(4,index21)),0) HiByte(DeAddress(lookee24));
      SetByte Offset(Offset(Offset(Address(MakeHiLo(b13,b14)),2),Mul(4,index21)),1) LoByte(DeAddress(lookee24));
      SetByte Offset(Offset(Offset(Address(MakeHiLo(b13,b14)),2),Mul(4,index21)),2) StringLength(word23);
      SetByte Offset(Offset(Offset(Address(MakeHiLo(b13,b14)),2),Mul(4,index21)),3) pos22;
    }
    TraceOperation 052484 (Loadb (Var (Global 110)) (Con 1) Sp);
    Let b25 = M[009037];
    Let b26 = M[009038];
    Let b27 = M[Offset(Address(MakeHiLo(b25,b26)),1)];
    PushStack Widen(b27);
    TraceOperation 052488 (Jz (Var Sp) (Branch F (Dloc 052508)));
    PopStack popped28;
    if (IsZero(popped28)) {
      TraceOperation 052491 (Print "I beg your pardon?");
      GamePrint "I beg your pardon?";
      TraceOperation 052504 New_line;
      GamePrint "\n";
      TraceOperation 052505 (Jump 052474);
      Jump: 052474
    } else {
      Jump: 052508
    }
  } else {
    Let b29 = M[008819];
    Let b30 = M[008820];
    Let b31 = M[008821];
    Let b32 = M[008822];
    ReadInputFromUser (Just (StatusInfo {room = GetText(Offset(Address(MakeHiLo(b3,b4)),1)), score = MakeHiLo(b29,b30), turns = MakeHiLo(b31,b32)})) user_command_line_33;
    Let b34 = M[009035];
    Let b35 = M[009036];
    Let b36 = M[009037];
    Let b37 = M[009038];
    Tokenize user_command_line_33 (num_tokens_38,position_words_39,canonicalized40);
    StringBytes canonicalized40 string_bytes_41;
    ForeachB: (index42,byte43) in (string_bytes_41) {
      SetByte Offset(Offset(Address(MakeHiLo(b34,b35)),1),index42) byte43;
    }
    SetByte Offset(Address(MakeHiLo(b36,b37)),1) num_tokens_38;
    ForeachB: (index44,pos45,word46) in (position_words_39) {
      Let lookee47 = LookupInDict(word46);
      SetByte Offset(Offset(Offset(Address(MakeHiLo(b36,b37)),2),Mul(4,index44)),0) HiByte(DeAddress(lookee47));
      SetByte Offset(Offset(Offset(Address(MakeHiLo(b36,b37)),2),Mul(4,index44)),1) LoByte(DeAddress(lookee47));
      SetByte Offset(Offset(Offset(Address(MakeHiLo(b36,b37)),2),Mul(4,index44)),2) StringLength(word46);
      SetByte Offset(Offset(Offset(Address(MakeHiLo(b36,b37)),2),Mul(4,index44)),3) pos45;
    }
    TraceOperation 052484 (Loadb (Var (Global 110)) (Con 1) Sp);
    Let b48 = M[009037];
    Let b49 = M[009038];
    Let b50 = M[Offset(Address(MakeHiLo(b48,b49)),1)];
    PushStack Widen(b50);
    TraceOperation 052488 (Jz (Var Sp) (Branch F (Dloc 052508)));
    PopStack popped51;
    if (IsZero(popped51)) {
      TraceOperation 052491 (Print "I beg your pardon?");
      GamePrint "I beg your pardon?";
      TraceOperation 052504 New_line;
      GamePrint "\n";
      TraceOperation 052505 (Jump 052474);
      Jump: 052474
    } else {
      Jump: 052508
    }
  }
LocOp 052508:
  TraceOperation 052508 (Loadw (Var (Global 110)) (Con 1) (Local 2));
  Let b1 = M[009037];
  Let b2 = M[009038];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),2)];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),2),1)];
  SetLocal 2 MakeHiLo(b3,b4);
  TraceOperation 052512 (Je [Var (Local 2),Con 16950,Con 19806,Con 18658] (Branch F (Dloc 052529)));
  if (LogOr(LogOr(Equal(GetLocal(2),16950),Equal(GetLocal(2),19806)),Equal(GetLocal(2),18658))) {
    TraceOperation 052522 (Loadw (Var (Global 110)) (Con 3) (Local 2));
    Let b5 = M[009037];
    Let b6 = M[009038];
    Let b7 = M[Offset(Address(MakeHiLo(b5,b6)),6)];
    Let b8 = M[Offset(Offset(Address(MakeHiLo(b5,b6)),6),1)];
    SetLocal 2 MakeHiLo(b7,b8);
    TraceOperation 052526 (Jump 052539);
    Jump: 052539
  } else {
    Jump: 052529
  }
LocOp 052529:
  TraceOperation 052529 (Je [Var (Local 2),Con 18721] (Branch F (Dloc 052539)));
  if (Equal(GetLocal(2),18721)) {
    TraceOperation 052535 (Loadw (Var (Global 110)) (Con 5) (Local 2));
    Let b1 = M[009037];
    Let b2 = M[009038];
    Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),10)];
    Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),10),1)];
    SetLocal 2 MakeHiLo(b3,b4);
    Jump: 052539
  } else {
    Jump: 052539
  }
LocOp 052539:
  TraceOperation 052539 (Je [Var (Local 2),Con 18714] (Branch F (Dloc 052553)));
  if (Equal(GetLocal(2),18714)) {
    TraceOperation 052545 (Call (Floc 028264) [] Sp);
    PushFrame 052545;
    JumpCall: 028264, #actuals: 0
  } else {
    Jump: 052553
  }
LocReturn 052545:
  PushStack call_result;
  TraceOperation 052550 (Jump 052474);
  Jump: 052474
LocOp 052553:
  TraceOperation 052553 (Je [Var (Local 2),Con 18588] (Branch F (Dloc 052567)));
  if (Equal(GetLocal(2),18588)) {
    TraceOperation 052559 (Call (Floc 028242) [] Sp);
    PushFrame 052559;
    JumpCall: 028242, #actuals: 0
  } else {
    Jump: 052567
  }
LocReturn 052559:
  PushStack call_result;
  TraceOperation 052564 (Jump 052474);
  Jump: 052474
LocOp 052567:
  TraceOperation 052567 (Je [Var (Local 2),Con 18434,Con 18448] (Branch F (Dloc 052583)));
  if (LogOr(Equal(GetLocal(2),18434),Equal(GetLocal(2),18448))) {
    TraceOperation 052575 (Call (Floc 028108) [] Sp);
    PushFrame 052575;
    JumpCall: 028108, #actuals: 0
  } else {
    Jump: 052583
  }
LocReturn 052575:
  PushStack call_result;
  TraceOperation 052580 (Jump 052474);
  Jump: 052474
LocOp 052583:
  TraceOperation 052583 (Je [Var (Local 2),Con 19778,Con 19848] (Branch F (Dloc 052599)));
  if (LogOr(Equal(GetLocal(2),19778),Equal(GetLocal(2),19848))) {
    TraceOperation 052591 (Call (Floc 037558) [Con 107] Sp);
    PushFrame 052591;
    SetLocal 1 107;
    JumpCall: 037558, #actuals: 1
  } else {
    Jump: 052599
  }
LocReturn 052591:
  PushStack call_result;
  TraceOperation 052597 (Ret (Var Sp));
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 052599:
  TraceOperation 052599 (Je [Var (Local 2),Con 16362,Con 16369] (Branch F (Dloc 052615)));
  if (LogOr(Equal(GetLocal(2),16362),Equal(GetLocal(2),16369))) {
    TraceOperation 052607 (Call (Floc 037558) [Con 39] Sp);
    PushFrame 052607;
    SetLocal 1 39;
    JumpCall: 037558, #actuals: 1
  } else {
    Jump: 052615
  }
LocReturn 052607:
  PushStack call_result;
  TraceOperation 052613 (Ret (Var Sp));
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 052615:
  TraceOperation 052615 (Je [Var (Local 2),Con 19631,Con 19708] (Branch F (Dloc 052631)));
  if (LogOr(Equal(GetLocal(2),19631),Equal(GetLocal(2),19708))) {
    TraceOperation 052623 (Call (Floc 037558) [Con 40] Sp);
    PushFrame 052623;
    SetLocal 1 40;
    JumpCall: 037558, #actuals: 1
  } else {
    Jump: 052631
  }
LocReturn 052623:
  PushStack call_result;
  TraceOperation 052629 (Ret (Var Sp));
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 052631:
  TraceOperation 052631 (Je [Var (Local 2),Con 15732] (Branch F (Dloc 052660)));
  if (Equal(GetLocal(2),15732)) {
    TraceOperation 052637 (Print "That's only your opinion.");
    GamePrint "That's only your opinion.";
    TraceOperation 052656 New_line;
    GamePrint "\n";
    TraceOperation 052657 (Jump 052474);
    Jump: 052474
  } else {
    Jump: 052660
  }
LocOp 052660:
  TraceOperation 052660 (Je [Var (Local 2),Con 16383] (Branch F (Dloc 052700)));
  if (Equal(GetLocal(2),16383)) {
    TraceOperation 052666 (Store (Con 49) (Con 1));
    SetByte 008883 0;
    SetByte 008884 1;
    TraceOperation 052669 (Clear_attr (Con 139) (Con 9));
    Let b1 = M[001993];
    SetByte 001993 ClearBit(b1,6);
    TraceOperation 052672 (Print "The acoustics of the room change subtly.");
    GamePrint "The acoustics of the room change subtly.";
    TraceOperation 052697 New_line;
    GamePrint "\n";
    TraceOperation 052698 New_line;
    GamePrint "\n";
    TraceOperation 052699 Rtrue;
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 1
  } else {
    Jump: 052700
  }
LocOp 052700:
  TraceOperation 052700 (Call (Floc 030792) [] Sp);
  PushFrame 052700;
  JumpCall: 030792, #actuals: 0
LocReturn 052700:
  PushStack call_result;
  TraceOperation 052705 (Jump 052474);
  Jump: 052474
--[377]--------------------------------------------------
LocRoutine 052708:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 052711
LocOp 052711:
  TraceOperation 052711 (Je [Var (Local 1),Con 3] (Branch F Dfalse));
  if (Equal(GetLocal(1),3)) {
    TraceOperation 052715 (Print "You are on the south edge of a deep canyon. Passages lead off to the east, northwest and southwest. A stairway leads down.");
    GamePrint "You are on the south edge of a deep canyon. Passages lead off to the east, northwest and southwest. A stairway leads down.";
    TraceOperation 052786 (Jz (Var (Global 39)) (Branch T (Dloc 052840)));
    Let b1 = M[008895];
    Let b2 = M[008896];
    if (IsZero(MakeHiLo(b1,b2))) {
      Jump: 052840
    } else {
      TraceOperation 052789 (Jz (Var (Global 144)) (Branch F (Dloc 052840)));
      Let b3 = M[009105];
      Let b4 = M[009106];
      if (IsZero(MakeHiLo(b3,b4))) {
        TraceOperation 052792 (Print " You can hear a loud roaring sound, like that of rushing water, from below.");
        GamePrint " You can hear a loud roaring sound, like that of rushing water, from below.";
        TraceOperation 052837 (Jump 052875);
        Jump: 052875
      } else {
        Jump: 052840
      }
    }
  } else {
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 0
  }
LocOp 052840:
  TraceOperation 052840 (Jz (Var (Global 39)) (Branch F (Dloc 052848)));
  Let b1 = M[008895];
  Let b2 = M[008896];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 052843 (Jz (Var (Global 144)) (Branch T (Dloc 052848)));
    Let b3 = M[009105];
    Let b4 = M[009106];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 052848
    } else {
      TraceOperation 052846 New_line;
      GamePrint "\n";
      TraceOperation 052847 Rtrue;
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 1
    }
  } else {
    Jump: 052848
  }
LocOp 052848:
  TraceOperation 052848 (Print " You can hear the sound of flowing water from below.");
  GamePrint " You can hear the sound of flowing water from below.";
  Jump: 052875
LocOp 052875:
  TraceOperation 052875 New_line;
  GamePrint "\n";
  TraceOperation 052876 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[378]--------------------------------------------------
LocRoutine 052878:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 052887
LocOp 052887:
  TraceOperation 052887 (Jz (Var (Global 62)) (Branch F (Dloc 052894)));
  Let b1 = M[008941];
  Let b2 = M[008942];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 052890 (Je [Var (Global 0),Con 190] (Branch T Dfalse));
    Let b3 = M[008817];
    Let b4 = M[008818];
    if (Equal(MakeHiLo(b3,b4),190)) {
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 0
    } else {
      Jump: 052894
    }
  } else {
    Jump: 052894
  }
LocOp 052894:
  TraceOperation 052894 (Jz (Var (Global 31)) (Branch F (Dloc 053774)));
  Let b1 = M[008879];
  Let b2 = M[008880];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 052898 (Jz (Var (Global 62)) (Branch F (Dloc 053127)));
    Let b3 = M[008941];
    Let b4 = M[008942];
    if (IsZero(MakeHiLo(b3,b4))) {
      TraceOperation 052902 (Jz (Var (Local 1)) (Branch F (Dloc 053127)));
      if (IsZero(GetLocal(1))) {
        TraceOperation 052906 (Random (Con 100) Sp);
        LetRandom random5 100;
        PushStack random5;
        TraceOperation 052910 (Jg (Con 30) (Var Sp) (Branch F (Dloc 053127)));
        PopStack popped6;
        if (GreaterThan(30,popped6)) {
          TraceOperation 052915 (Jin (Con 113) (Con 114) (Branch F (Dloc 053033)));
          Let b7 = M[001762];
          if (Equal(114,Widen(b7))) {
            TraceOperation 052920 (Clear_attr (Con 114) (Con 7));
            Let b8 = M[001767];
            SetByte 001767 ClearBit(b8,0);
            TraceOperation 052923 (Print "Someone carrying a large bag is casually leaning against one of the walls here. He does not speak, but it is clear from his aspect that the bag will be taken only over his dead body.");
            GamePrint "Someone carrying a large bag is casually leaning against one of the walls here. He does not speak, but it is clear from his aspect that the bag will be taken only over his dead body.";
            TraceOperation 053028 New_line;
            GamePrint "\n";
            TraceOperation 053029 (Store (Con 47) (Con 1));
            SetByte 008879 0;
            SetByte 008880 1;
            TraceOperation 053032 Rtrue;
            PopFrame return_address_9;
            JumpReturn: return_address_9, result: 1
          } else {
            Jump: 053033
          }
        } else {
          Jump: 053127
        }
      } else {
        Jump: 053127
      }
    } else {
      Jump: 053127
    }
  } else {
    Jump: 053774
  }
--[379]--------------------------------------------------
LocRoutine 053096:
  MakeRoutineFrame 6;
  if (LessThanByte(num_actuals,6)) {
    SetLocal 6 6182;
    if (LessThanByte(num_actuals,5)) {
      SetLocal 5 417;
      if (LessThanByte(num_actuals,4)) {
        SetLocal 4 21098;
        if (LessThanByte(num_actuals,3)) {
          SetLocal 3 55;
          if (LessThanByte(num_actuals,2)) {
            SetLocal 2 7372;
            if (LessThanByte(num_actuals,1)) {
              SetLocal 1 52;
            }
          }
        }
      }
    }
  }
  Jump: 053109
LocOp 053109:
  TraceOperation 053109 (Mod (Con 24) (Con 101) (Global 193));
  SetByte 009203 0;
  SetByte 009204 24;
  TraceOperation 053113 (Set_attr (Con 33) (Var (Global 28)));
  Let b1 = M[008873];
  Let b2 = M[008874];
  Let b3 = M[Offset(001038,Div8(MakeHiLo(b1,b2)))];
  SetByte Offset(001038,Div8(MakeHiLo(b1,b2))) SetBit(b3,SevenMinus(LoByte(Mod(MakeHiLo(b1,b2),8))));
  TraceOperation 053116 (Div (Con 4) (Var (Global 4)) (Global 85));
  Let b4 = M[008825];
  Let b5 = M[008826];
  SetByte 008987 HiByte(Div(4,MakeHiLo(b4,b5)));
  SetByte 008988 LoByte(Div(4,MakeHiLo(b4,b5)));
  TraceOperation 053120 (Print_obj (Var (Global 204)));
  Let b6 = M[009225];
  Let b7 = M[009226];
  Let b8 = M[Offset(Offset(000741,Mul(MakeHiLo(b6,b7),9)),7)];
  Let b9 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b6,b7),9)),7),1)];
  Let b10 = M[Address(MakeHiLo(b8,b9))];
  if (IsZeroByte(b10)) {
    GamePrint "";
    TraceOperation 053122 (Print "door j hkc the N");
    GamePrint "door j hkc the N";
    TraceOperation 053131 (Test_attr (Con 114) (Con 2) (Branch F (Dloc 053276)));
    Let b11 = M[001767];
    if (TestBit(b11,5)) {
      TraceOperation 053136 (Call (Floc 065412) [Con 114] Sp);
      PushFrame 053136;
      SetLocal 1 114;
      JumpCall: 065412, #actuals: 1
    } else {
      Jump: 053276
    }
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b8,b9)),1));
    TraceOperation 053122 (Print "door j hkc the N");
    GamePrint "door j hkc the N";
    TraceOperation 053131 (Test_attr (Con 114) (Con 2) (Branch F (Dloc 053276)));
    Let b12 = M[001767];
    if (TestBit(b12,5)) {
      TraceOperation 053136 (Call (Floc 065412) [Con 114] Sp);
      PushFrame 053136;
      SetLocal 1 114;
      JumpCall: 065412, #actuals: 1
    } else {
      Jump: 053276
    }
  }
LocReturn 053136:
  PushStack call_result;
  TraceOperation 053142 (Jz (Var Sp) (Branch F (Dloc 053276)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 053146 (Print "Your opponent, determining discretion to be the better part of valor, decides to terminate this little contretemps. With a rueful nod of his head, he steps backward into the gloom and disappears.");
    GamePrint "Your opponent, determining discretion to be the better part of valor, decides to terminate this little contretemps. With a rueful nod of his head, he steps backward into the gloom and disappears.";
    TraceOperation 053263 New_line;
    GamePrint "\n";
    TraceOperation 053264 (Set_attr (Con 114) (Con 7));
    Let b2 = M[001767];
    SetByte 001767 SetBit(b2,0);
    TraceOperation 053267 (Clear_attr (Con 114) (Con 2));
    Let b3 = M[001767];
    SetByte 001767 ClearBit(b3,5);
    TraceOperation 053270 (Call (Floc 066364) [] Sp);
    PushFrame 053270;
    JumpCall: 066364, #actuals: 0
  } else {
    Jump: 053276
  }
LocReturn 053270:
  PushStack call_result;
  TraceOperation 053275 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 053276:
  TraceOperation 053276 (Jz (Var (Local 1)) (Branch T (Dloc 053291)));
  if (IsZero(GetLocal(1))) {
    Jump: 053291
  } else {
    TraceOperation 053279 (Test_attr (Con 114) (Con 2) (Branch F (Dloc 053291)));
    Let b1 = M[001767];
    if (TestBit(b1,5)) {
      TraceOperation 053283 (Random (Con 100) Sp);
      LetRandom random2 100;
      PushStack random2;
      TraceOperation 053287 (Jg (Con 90) (Var Sp) (Branch T Dfalse));
      PopStack popped3;
      if (GreaterThan(90,popped3)) {
        PopFrame return_address_4;
        JumpReturn: return_address_4, result: 0
      } else {
        Jump: 053291
      }
    } else {
      Jump: 053291
    }
  }
LocOp 053291:
  TraceOperation 053291 (Jz (Var (Local 1)) (Branch T (Dloc 053358)));
  if (IsZero(GetLocal(1))) {
    Jump: 053358
  } else {
    TraceOperation 053295 (Random (Con 100) Sp);
    LetRandom random1 100;
    PushStack random1;
    TraceOperation 053299 (Jg (Con 30) (Var Sp) (Branch F (Dloc 053358)));
    PopStack popped2;
    if (GreaterThan(30,popped2)) {
      TraceOperation 053303 (Print "The holder of the large bag just left, looking disgusted. Fortunately, he took nothing.");
      GamePrint "The holder of the large bag just left, looking disgusted. Fortunately, he took nothing.";
      TraceOperation 053348 New_line;
      GamePrint "\n";
      TraceOperation 053349 (Set_attr (Con 114) (Con 7));
      Let b3 = M[001767];
      SetByte 001767 SetBit(b3,0);
      TraceOperation 053352 (Call (Floc 066364) [] Sp);
      PushFrame 053352;
      JumpCall: 066364, #actuals: 0
    } else {
      Jump: 053358
    }
  }
LocReturn 053352:
  PushStack call_result;
  TraceOperation 053357 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 053358:
  TraceOperation 053358 (Random (Con 100) Sp);
  LetRandom random1 100;
  PushStack random1;
  TraceOperation 053362 (Jg (Con 70) (Var Sp) (Branch T Dfalse));
  PopStack popped2;
  if (GreaterThan(70,popped2)) {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  } else {
    TraceOperation 053366 (Jz (Var (Global 62)) (Branch F Dfalse));
    Let b4 = M[008941];
    Let b5 = M[008942];
    if (IsZero(MakeHiLo(b4,b5))) {
      TraceOperation 053369 (Call (Floc 066488) [Var (Global 0),Con 114,Con 100] Sp);
      Let b6 = M[008817];
      Let b7 = M[008818];
      PushFrame 053369;
      SetLocal 1 MakeHiLo(b6,b7);
      SetLocal 2 114;
      SetLocal 3 100;
      JumpCall: 066488, #actuals: 3
    } else {
      PopFrame return_address_8;
      JumpReturn: return_address_8, result: 0
    }
  }
LocReturn 053369:
  PushStack call_result;
  TraceOperation 053377 (Jz (Var Sp) (Branch T (Dloc 053386)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 053386
  } else {
    TraceOperation 053380 (Store (Con 2) (Con 1));
    SetLocal 2 1;
    TraceOperation 053383 (Jump 053402);
    Jump: 053402
  }
LocOp 053386:
  TraceOperation 053386 (Call (Floc 066488) [Var (Global 111),Con 114] Sp);
  Let b1 = M[009039];
  Let b2 = M[009040];
  PushFrame 053386;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 114;
  JumpCall: 066488, #actuals: 2
LocReturn 053386:
  PushStack call_result;
  TraceOperation 053393 (Jz (Var Sp) (Branch T (Dloc 053402)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 053402
  } else {
    TraceOperation 053396 (Store (Con 2) (Con 1));
    SetLocal 2 1;
    TraceOperation 053399 (Store (Con 3) (Con 1));
    SetLocal 3 1;
    Jump: 053402
  }
LocOp 053402:
  TraceOperation 053402 (Store (Con 47) (Con 1));
  SetByte 008879 0;
  SetByte 008880 1;
  TraceOperation 053405 (Jz (Var (Local 2)) (Branch T (Dloc 053549)));
  if (IsZero(GetLocal(2))) {
    Jump: 053549
  } else {
    TraceOperation 053409 (Jz (Var (Local 1)) (Branch F (Dloc 053549)));
    if (IsZero(GetLocal(1))) {
      TraceOperation 053413 (Print "A seedy-looking individual with a large bag just wandered through the room. On the way through, he quietly abstracted some valuables from the room and from your possession, mumbling something about \"Doing unto others before...\"");
      GamePrint "A seedy-looking individual with a large bag just wandered through the room. On the way through, he quietly abstracted some valuables from the room and from your possession, mumbling something about \"Doing unto others before...\"";
      TraceOperation 053542 New_line;
      GamePrint "\n";
      TraceOperation 053543 (Call (Floc 053932) [] Sp);
      PushFrame 053543;
      JumpCall: 053932, #actuals: 0
    } else {
      Jump: 053549
    }
  }
LocReturn 053543:
  PushStack call_result;
  TraceOperation 053548 Rfalse;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 0
LocOp 053549:
  TraceOperation 053549 (Jz (Var (Local 1)) (Branch T (Dloc 053699)));
  if (IsZero(GetLocal(1))) {
    Jump: 053699
  } else {
    TraceOperation 053553 (Call (Floc 066364) [] Sp);
    PushFrame 053553;
    JumpCall: 066364, #actuals: 0
  }
LocReturn 053553:
  PushStack call_result;
  TraceOperation 053558 (Jz (Var (Local 2)) (Branch T (Dloc 053660)));
  if (IsZero(GetLocal(2))) {
    Jump: 053660
  } else {
    TraceOperation 053562 (Print "The thief just left, still carrying his large bag. You may not have noticed that he ");
    GamePrint "The thief just left, still carrying his large bag. You may not have noticed that he ";
    TraceOperation 053605 (Jz (Var (Local 3)) (Branch T (Dloc 053628)));
    if (IsZero(GetLocal(3))) {
      Jump: 053628
    } else {
      TraceOperation 053608 (Print "robbed you blind first.");
      GamePrint "robbed you blind first.";
      TraceOperation 053625 (Jump 053651);
      Jump: 053651
    }
  }
LocOp 053628:
  TraceOperation 053628 (Print "appropriated the valuables in the room.");
  GamePrint "appropriated the valuables in the room.";
  Jump: 053651
LocOp 053651:
  TraceOperation 053651 New_line;
  GamePrint "\n";
  TraceOperation 053652 (Call (Floc 053932) [] Sp);
  PushFrame 053652;
  JumpCall: 053932, #actuals: 0
LocReturn 053652:
  PushStack call_result;
  TraceOperation 053657 (Jump 053692);
  Jump: 053692
LocOp 053660:
  TraceOperation 053660 (Print "The thief, finding nothing of value, left disgusted.");
  GamePrint "The thief, finding nothing of value, left disgusted.";
  TraceOperation 053691 New_line;
  GamePrint "\n";
  Jump: 053692
LocOp 053692:
  TraceOperation 053692 (Set_attr (Con 114) (Con 7));
  Let b1 = M[001767];
  SetByte 001767 SetBit(b1,0);
  TraceOperation 053695 (Store (Con 1) (Con 0));
  SetLocal 1 0;
  TraceOperation 053698 Rtrue;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: 1
LocOp 053699:
  TraceOperation 053699 (Print_ret "A \"lean and hungry\" gentleman just wandered through, carrying a large bag. Finding nothing of value, he left disgruntled.");
  GamePrint "A \"lean and hungry\" gentleman just wandered through, carrying a large bag. Finding nothing of value, he left disgruntled.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[380]--------------------------------------------------
LocRoutine 053814:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 -32698;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 -24574;
    }
  }
  Jump: 053819
LocOp 053819:
  TraceOperation 053819 (Print "The thief just left, still carrying his large bag. You may not have noticed that he robbed you blind first.");
  GamePrint "The thief just left, still carrying his large bag. You may not have noticed that he robbed you blind first.";
  TraceOperation 053878 New_line;
  GamePrint "\n";
  TraceOperation 053879 (Call (Floc 053932) [] Sp);
  PushFrame 053879;
  JumpCall: 053932, #actuals: 0
LocReturn 053879:
  PushStack call_result;
  TraceOperation 053884 (Jump 053919);
  Jump: 053919
--[381]--------------------------------------------------
LocRoutine 053924:
  MakeRoutineFrame 0;
  Jump: 053925
LocOp 053925:
  TraceOperation 053925 (Call (Floc 066364) [] Sp);
  PushFrame 053925;
  JumpCall: 066364, #actuals: 0
LocReturn 053925:
  PushStack call_result;
  TraceOperation 053930 Rfalse;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 0
--[382]--------------------------------------------------
LocRoutine 053932:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 053935
LocOp 053935:
  TraceOperation 053935 (Store (Con 1) (Var (Global 66)));
  Let b1 = M[008949];
  Let b2 = M[008950];
  SetLocal 1 MakeHiLo(b1,b2);
  TraceOperation 053938 (Call (Floc 027746) [Var (Global 0)] (Global 66));
  Let b3 = M[008817];
  Let b4 = M[008818];
  PushFrame 053938;
  SetLocal 1 MakeHiLo(b3,b4);
  JumpCall: 027746, #actuals: 1
LocReturn 053938:
  SetByte 008949 HiByte(call_result);
  SetByte 008950 LoByte(call_result);
  TraceOperation 053944 (Jz (Var (Global 66)) (Branch F Dtrue));
  Let b1 = M[008949];
  Let b2 = M[008950];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 053947 (Jz (Var (Local 1)) (Branch T Dtrue));
    if (IsZero(GetLocal(1))) {
      PopFrame return_address_3;
      JumpReturn: return_address_3, result: 1
    } else {
      TraceOperation 053950 (Print_ret "The thief seems to have left you in the dark.");
      GamePrint "The thief seems to have left you in the dark.\n";
      PopFrame return_address_4;
      JumpReturn: return_address_4, result: 1
    }
  } else {
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  }
--[383]--------------------------------------------------
LocRoutine 053970:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 053973
LocOp 053973:
  TraceOperation 053973 (Call (Floc 066364) [] Sp);
  PushFrame 053973;
  JumpCall: 066364, #actuals: 0
LocReturn 053973:
  PushStack call_result;
  TraceOperation 053978 (Set_attr (Con 114) (Con 7));
  Let b1 = M[001767];
  SetByte 001767 SetBit(b1,0);
  TraceOperation 053981 (Get_child (Con 190) (Local 1) (Branch T (Dloc 053985)));
  Let b2 = M[002457];
  SetLocal 1 Widen(b2);
  if (IsZero(Widen(b2))) {
    Jump: 053985
  } else {
    Jump: 053985
  }
LocOp 053985:
  TraceOperation 053985 (Jz (Var (Local 1)) (Branch T Dtrue));
  if (IsZero(GetLocal(1))) {
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 1
  } else {
    TraceOperation 053988 (Clear_attr (Var (Local 1)) (Con 7));
    Let b2 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),0)];
    SetByte Offset(Offset(000741,Mul(GetLocal(1),9)),0) ClearBit(b2,0);
    TraceOperation 053991 (Get_sibling (Var (Local 1)) (Local 1) (Branch T (Dloc 053995)));
    Let b3 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),5)];
    SetLocal 1 Widen(b3);
    if (IsZero(Widen(b3))) {
      TraceOperation 053995 (Jump 053985);
      Jump: 053985
    } else {
      TraceOperation 053995 (Jump 053985);
      Jump: 053985
    }
  }
--[384]--------------------------------------------------
LocRoutine 053998:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 054007
LocOp 054007:
  TraceOperation 054007 (Get_child (Con 114) (Local 2) (Branch T (Dloc 054011)));
  Let b1 = M[001773];
  SetLocal 2 Widen(b1);
  if (IsZero(Widen(b1))) {
    Jump: 054011
  } else {
    Jump: 054011
  }
LocOp 054011:
  TraceOperation 054011 (Jz (Var (Local 2)) (Branch F (Dloc 054016)));
  if (IsZero(GetLocal(2))) {
    TraceOperation 054014 (Ret (Var (Local 4)));
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: GetLocal(4)
  } else {
    Jump: 054016
  }
LocOp 054016:
  TraceOperation 054016 (Get_sibling (Var (Local 2)) (Local 3) (Branch T (Dloc 054020)));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(2),9)),5)];
  SetLocal 3 Widen(b1);
  if (IsZero(Widen(b1))) {
    TraceOperation 054020 (Je [Var (Local 2),Con 113,Con 115] (Branch F (Dloc 054029)));
    if (LogOr(Equal(GetLocal(2),113),Equal(GetLocal(2),115))) {
      TraceOperation 054026 (Jump 054053);
      Jump: 054053
    } else {
      Jump: 054029
    }
  } else {
    TraceOperation 054020 (Je [Var (Local 2),Con 113,Con 115] (Branch F (Dloc 054029)));
    if (LogOr(Equal(GetLocal(2),113),Equal(GetLocal(2),115))) {
      TraceOperation 054026 (Jump 054053);
      Jump: 054053
    } else {
      Jump: 054029
    }
  }
LocOp 054029:
  TraceOperation 054029 (Get_prop (Var (Local 2)) (Con 12) Sp);
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(2),9)),7)];
  Let b2 = M[Offset(Offset(Offset(000741,Mul(GetLocal(2),9)),7),1)];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Error: getPropsA
LocOp 054053:
  TraceOperation 054053 (Store (Con 2) (Var (Local 3)));
  SetLocal 2 GetLocal(3);
  TraceOperation 054056 (Jump 054011);
  Jump: 054011
--[385]--------------------------------------------------
LocRoutine 054060:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 054067
LocOp 054067:
  TraceOperation 054067 (Get_child (Var (Local 1)) (Local 2) (Branch T (Dloc 054071)));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),6)];
  SetLocal 2 Widen(b1);
  if (IsZero(Widen(b1))) {
    Jump: 054071
  } else {
    Jump: 054071
  }
LocOp 054071:
  TraceOperation 054071 (Jz (Var (Local 2)) (Branch T Dfalse));
  if (IsZero(GetLocal(2))) {
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 0
  } else {
    TraceOperation 054074 (Get_sibling (Var (Local 2)) (Local 3) (Branch T (Dloc 054078)));
    Let b2 = M[Offset(Offset(000741,Mul(GetLocal(2),9)),5)];
    SetLocal 3 Widen(b2);
    if (IsZero(Widen(b2))) {
      TraceOperation 054078 (Test_attr (Var (Local 2)) (Con 17) (Branch F (Dloc 054177)));
      Let b3 = M[Offset(Offset(000741,Mul(GetLocal(2),9)),2)];
      if (TestBit(b3,6)) {
        TraceOperation 054083 (Test_attr (Var (Local 2)) (Con 7) (Branch T (Dloc 054177)));
        Let b4 = M[Offset(Offset(000741,Mul(GetLocal(2),9)),0)];
        if (TestBit(b4,0)) {
          Jump: 054177
        } else {
          TraceOperation 054088 (Random (Con 100) Sp);
          LetRandom random5 100;
          PushStack random5;
          TraceOperation 054092 (Jg (Con 40) (Var Sp) (Branch F (Dloc 054177)));
          PopStack popped6;
          if (GreaterThan(40,popped6)) {
            TraceOperation 054097 (Print "You hear, off in the distance, someone saying \"My, I wonder what this fine ");
            GamePrint "You hear, off in the distance, someone saying \"My, I wonder what this fine ";
            TraceOperation 054144 (Print_obj (Var (Local 2)));
            Let b7 = M[Offset(Offset(000741,Mul(GetLocal(2),9)),7)];
            Let b8 = M[Offset(Offset(Offset(000741,Mul(GetLocal(2),9)),7),1)];
            Let b9 = M[Address(MakeHiLo(b7,b8))];
            if (IsZeroByte(b9)) {
              GamePrint "";
              TraceOperation 054146 (Print " is doing here.\"");
              GamePrint " is doing here.\"";
              TraceOperation 054157 New_line;
              GamePrint "\n";
              TraceOperation 054158 (Call (Floc 020034) [Con 60] Sp);
              PushFrame 054158;
              SetLocal 1 60;
              JumpCall: 020034, #actuals: 1
            } else {
              GamePrint GetText(Offset(Address(MakeHiLo(b7,b8)),1));
              TraceOperation 054146 (Print " is doing here.\"");
              GamePrint " is doing here.\"";
              TraceOperation 054157 New_line;
              GamePrint "\n";
              TraceOperation 054158 (Call (Floc 020034) [Con 60] Sp);
              PushFrame 054158;
              SetLocal 1 60;
              JumpCall: 020034, #actuals: 1
            }
          } else {
            Jump: 054177
          }
        }
      } else {
        Jump: 054177
      }
    } else {
      TraceOperation 054078 (Test_attr (Var (Local 2)) (Con 17) (Branch F (Dloc 054177)));
      Let b10 = M[Offset(Offset(000741,Mul(GetLocal(2),9)),2)];
      if (TestBit(b10,6)) {
        TraceOperation 054083 (Test_attr (Var (Local 2)) (Con 7) (Branch T (Dloc 054177)));
        Let b11 = M[Offset(Offset(000741,Mul(GetLocal(2),9)),0)];
        if (TestBit(b11,0)) {
          Jump: 054177
        } else {
          TraceOperation 054088 (Random (Con 100) Sp);
          LetRandom random12 100;
          PushStack random12;
          TraceOperation 054092 (Jg (Con 40) (Var Sp) (Branch F (Dloc 054177)));
          PopStack popped13;
          if (GreaterThan(40,popped13)) {
            TraceOperation 054097 (Print "You hear, off in the distance, someone saying \"My, I wonder what this fine ");
            GamePrint "You hear, off in the distance, someone saying \"My, I wonder what this fine ";
            TraceOperation 054144 (Print_obj (Var (Local 2)));
            Let b14 = M[Offset(Offset(000741,Mul(GetLocal(2),9)),7)];
            Let b15 = M[Offset(Offset(Offset(000741,Mul(GetLocal(2),9)),7),1)];
            Let b16 = M[Address(MakeHiLo(b14,b15))];
            if (IsZeroByte(b16)) {
              GamePrint "";
              TraceOperation 054146 (Print " is doing here.\"");
              GamePrint " is doing here.\"";
              TraceOperation 054157 New_line;
              GamePrint "\n";
              TraceOperation 054158 (Call (Floc 020034) [Con 60] Sp);
              PushFrame 054158;
              SetLocal 1 60;
              JumpCall: 020034, #actuals: 1
            } else {
              GamePrint GetText(Offset(Address(MakeHiLo(b14,b15)),1));
              TraceOperation 054146 (Print " is doing here.\"");
              GamePrint " is doing here.\"";
              TraceOperation 054157 New_line;
              GamePrint "\n";
              TraceOperation 054158 (Call (Floc 020034) [Con 60] Sp);
              PushFrame 054158;
              SetLocal 1 60;
              JumpCall: 020034, #actuals: 1
            }
          } else {
            Jump: 054177
          }
        }
      } else {
        Jump: 054177
      }
    }
  }
LocReturn 054158:
  PushStack call_result;
  TraceOperation 054164 (Jz (Var Sp) (Branch T Dtrue));
  PopStack popped1;
  if (IsZero(popped1)) {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 1
  } else {
    TraceOperation 054167 (Insert_obj (Var (Local 2)) (Con 114));
    Let b3 = M[Offset(Offset(000741,Mul(GetLocal(2),9)),4)];
    if (IsZero(Widen(b3))) {
      SetByte Offset(Offset(000741,Mul(GetLocal(2),9)),4) 114;
      Let b4 = M[001773];
      SetByte Offset(Offset(000741,Mul(GetLocal(2),9)),5) LoByte(Widen(b4));
      SetByte 001773 LoByte(GetLocal(2));
      TraceOperation 054170 (Set_attr (Var (Local 2)) (Con 3));
      Let b5 = M[Offset(Offset(000741,Mul(GetLocal(2),9)),0)];
      SetByte Offset(Offset(000741,Mul(GetLocal(2),9)),0) SetBit(b5,4);
      TraceOperation 054173 (Set_attr (Var (Local 2)) (Con 7));
      Let b6 = M[Offset(Offset(000741,Mul(GetLocal(2),9)),0)];
      SetByte Offset(Offset(000741,Mul(GetLocal(2),9)),0) SetBit(b6,0);
      TraceOperation 054176 Rtrue;
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 1
    } else {
      Let b8 = M[Offset(Offset(000741,Mul(Widen(b3),9)),6)];
      if (Equal(Widen(b8),GetLocal(2))) {
        Let b9 = M[Offset(Offset(000741,Mul(GetLocal(2),9)),5)];
        SetByte Offset(Offset(000741,Mul(Widen(b3),9)),6) LoByte(Widen(b9));
        SetByte Offset(Offset(000741,Mul(GetLocal(2),9)),4) 114;
        Let b10 = M[001773];
        SetByte Offset(Offset(000741,Mul(GetLocal(2),9)),5) LoByte(Widen(b10));
        SetByte 001773 LoByte(GetLocal(2));
        TraceOperation 054170 (Set_attr (Var (Local 2)) (Con 3));
        Let b11 = M[Offset(Offset(000741,Mul(GetLocal(2),9)),0)];
        SetByte Offset(Offset(000741,Mul(GetLocal(2),9)),0) SetBit(b11,4);
        TraceOperation 054173 (Set_attr (Var (Local 2)) (Con 7));
        Let b12 = M[Offset(Offset(000741,Mul(GetLocal(2),9)),0)];
        SetByte Offset(Offset(000741,Mul(GetLocal(2),9)),0) SetBit(b12,0);
        TraceOperation 054176 Rtrue;
        PopFrame return_address_13;
        JumpReturn: return_address_13, result: 1
      } else {
        Error: unlink/loop
      }
    }
  }
LocOp 054177:
  TraceOperation 054177 (Store (Con 2) (Var (Local 3)));
  SetLocal 2 GetLocal(3);
  TraceOperation 054180 (Jump 054071);
  Jump: 054071
--[386]--------------------------------------------------
LocRoutine 054184:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 054193
LocOp 054193:
  TraceOperation 054193 (Je [Var (Global 120),Con 111] (Branch F (Dloc 054224)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),111)) {
    TraceOperation 054197 (Print "The thief is a strong, silent type.");
    GamePrint "The thief is a strong, silent type.";
    TraceOperation 054218 New_line;
    GamePrint "\n";
    TraceOperation 054219 (Store (Con 124) (Con 0));
    SetByte 009033 0;
    SetByte 009034 0;
    TraceOperation 054222 (Ret (Var (Global 108)));
    Let b3 = M[009033];
    Let b4 = M[009034];
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: MakeHiLo(b3,b4)
  } else {
    Jump: 054224
  }
LocOp 054224:
  TraceOperation 054224 (Jz (Var (Local 1)) (Branch F (Dloc 054972)));
  if (IsZero(GetLocal(1))) {
    TraceOperation 054228 (Je [Var (Global 120),Con 66] (Branch F (Dloc 054311)));
    Let b1 = M[009057];
    Let b2 = M[009058];
    if (Equal(MakeHiLo(b1,b2),66)) {
      TraceOperation 054233 (Get_prop (Con 114) (Con 11) Sp);
      Let b3 = M[001774];
      Let b4 = M[001775];
      Let b5 = M[Address(MakeHiLo(b3,b4))];
      Error: getPropsA
    } else {
      Jump: 054311
    }
  } else {
    Jump: 054972
  }
LocOp 054311:
  TraceOperation 054311 (Je [Var (Global 118),Con 169] (Branch F (Dloc 054528)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  if (Equal(MakeHiLo(b1,b2),169)) {
    TraceOperation 054316 (Je [Var (Global 120),Con 127] (Branch F (Dloc 054528)));
    Let b3 = M[009057];
    Let b4 = M[009058];
    if (Equal(MakeHiLo(b3,b4),127)) {
      TraceOperation 054321 (Test_attr (Con 114) (Con 2) (Branch T (Dloc 054528)));
      Let b5 = M[001767];
      if (TestBit(b5,5)) {
        Jump: 054528
      } else {
        TraceOperation 054326 (Call (Floc 020034) [Con 10] Sp);
        PushFrame 054326;
        SetLocal 1 10;
        JumpCall: 020034, #actuals: 1
      }
    } else {
      Jump: 054528
    }
  } else {
    Jump: 054528
  }
LocReturn 054326:
  PushStack call_result;
  TraceOperation 054332 (Jz (Var Sp) (Branch T (Dloc 054432)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 054432
  } else {
    TraceOperation 054336 (Print "You evidently frightened the robber, though you didn't hit him. He flees");
    GamePrint "You evidently frightened the robber, though you didn't hit him. He flees";
    TraceOperation 054383 (Get_child (Con 114) (Local 3) (Branch F (Dloc 054424)));
    Let b2 = M[001773];
    SetLocal 3 Widen(b2);
    if (IsZero(Widen(b2))) {
      Jump: 054424
    } else {
      TraceOperation 054387 (Call (Floc 055622) [Con 114,Var (Global 0)] Sp);
      Let b3 = M[008817];
      Let b4 = M[008818];
      PushFrame 054387;
      SetLocal 1 114;
      SetLocal 2 MakeHiLo(b3,b4);
      JumpCall: 055622, #actuals: 2
    }
  }
LocReturn 054387:
  PushStack call_result;
  TraceOperation 054394 (Print ", but the contents of his bag fall on the floor.");
  GamePrint ", but the contents of his bag fall on the floor.";
  TraceOperation 054421 (Jump 054427);
  Jump: 054427
--[387]--------------------------------------------------
LocRoutine 054552:
  MakeRoutineFrame 0;
  Jump: 054553
LocOp 054553:
  TraceOperation 054553 (Jl (Var Sp) (Con 0) (Branch F (Dloc 054629)));
  PopStack popped1;
  if (LessThan(popped1,0)) {
    TraceOperation 054558 (Get_prop (Con 114) (Con 7) Sp);
    Let b2 = M[001774];
    Let b3 = M[001775];
    Let b4 = M[Address(MakeHiLo(b2,b3))];
    Error: getPropsA
  } else {
    Jump: 054629
  }
LocReturn 054571:
  PushStack call_result;
  TraceOperation 054578 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 054583 (Call (Floc 066364) [] Sp);
  PushFrame 054583;
  JumpCall: 066364, #actuals: 0
LocReturn 054583:
  PushStack call_result;
  TraceOperation 054588 (Put_prop (Con 114) (Con 11) (Var (Global 29)));
  Let b1 = M[008875];
  Let b2 = M[008876];
  Let b3 = M[001774];
  Let b4 = M[001775];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  Error: getPropsA
LocOp 054629:
  TraceOperation 054629 (Insert_obj (Var (Global 118)) (Con 114));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),4)];
  if (IsZero(Widen(b3))) {
    SetByte Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),4) 114;
    Let b4 = M[001773];
    SetByte Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),5) LoByte(Widen(b4));
    SetByte 001773 b2;
    TraceOperation 054632 (Get_prop (Var (Global 118)) (Con 12) Sp);
    Let b5 = M[009053];
    Let b6 = M[009054];
    Let b7 = M[Offset(Offset(000741,Mul(MakeHiLo(b5,b6),9)),7)];
    Let b8 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b5,b6),9)),7),1)];
    Let b9 = M[Address(MakeHiLo(b7,b8))];
    Error: getPropsA
  } else {
    Let b10 = M[Offset(Offset(000741,Mul(Widen(b3),9)),6)];
    if (Equal(Widen(b10),MakeHiLo(b1,b2))) {
      Let b11 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),5)];
      SetByte Offset(Offset(000741,Mul(Widen(b3),9)),6) LoByte(Widen(b11));
      SetByte Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),4) 114;
      Let b12 = M[001773];
      SetByte Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),5) LoByte(Widen(b12));
      SetByte 001773 b2;
      TraceOperation 054632 (Get_prop (Var (Global 118)) (Con 12) Sp);
      Let b13 = M[009053];
      Let b14 = M[009054];
      Let b15 = M[Offset(Offset(000741,Mul(MakeHiLo(b13,b14),9)),7)];
      Let b16 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b13,b14),9)),7),1)];
      Let b17 = M[Address(MakeHiLo(b15,b16))];
      Error: getPropsA
    } else {
      Error: unlink/loop
    }
  }
LocOp 054708:
  TraceOperation 054708 (Print "The thief places the ");
  GamePrint "The thief places the ";
  TraceOperation 054719 (Print_obj (Var (Global 118)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  if (IsZeroByte(b5)) {
    GamePrint "";
    TraceOperation 054721 (Print_ret " in his bag and thanks you politely.");
    GamePrint " in his bag and thanks you politely.\n";
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
    TraceOperation 054721 (Print_ret " in his bag and thanks you politely.");
    GamePrint " in his bag and thanks you politely.\n";
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 1
  }
--[388]--------------------------------------------------
LocRoutine 054776:
  MakeRoutineFrame 0;
  Jump: 054777
LocOp 054777:
  TraceOperation 054777 (Ret (Con 179));
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 179
--[389]--------------------------------------------------
LocRoutine 054974:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 78;
  }
  Jump: 054977
LocOp 054977:
  TraceOperation 054977 (Jin (Con 113) (Con 114) (Branch T Dfalse));
  Let b1 = M[001762];
  if (Equal(114,Widen(b1))) {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  } else {
    TraceOperation 054981 (Get_parent (Con 114) Sp);
    Let b3 = M[001771];
    PushStack Widen(b3);
    TraceOperation 054984 (Jin (Con 113) (Var Sp) (Branch F Dfalse));
    PopStack popped4;
    Let b5 = M[001762];
    if (Equal(popped4,Widen(b5))) {
      TraceOperation 054988 (Insert_obj (Con 113) (Con 114));
      Let b6 = M[001762];
      if (IsZero(Widen(b6))) {
        SetByte 001762 114;
        Let b7 = M[001773];
        SetByte 001763 LoByte(Widen(b7));
        SetByte 001773 113;
        TraceOperation 054991 (Set_attr (Con 113) (Con 14));
        Let b8 = M[001759];
        SetByte 001759 SetBit(b8,1);
        TraceOperation 054994 (Jin (Con 114) (Var (Global 0)) (Branch F Dtrue));
        Let b9 = M[008817];
        Let b10 = M[008818];
        Let b11 = M[001771];
        if (Equal(MakeHiLo(b9,b10),Widen(b11))) {
          TraceOperation 054998 (Print "The robber, somewhat surprised at this turn of events, nimbly retrieves his stiletto.");
          GamePrint "The robber, somewhat surprised at this turn of events, nimbly retrieves his stiletto.";
          TraceOperation 055051 New_line;
          GamePrint "\n";
          TraceOperation 055052 Rtrue;
          PopFrame return_address_12;
          JumpReturn: return_address_12, result: 1
        } else {
          PopFrame return_address_13;
          JumpReturn: return_address_13, result: 1
        }
      } else {
        Let b14 = M[Offset(Offset(000741,Mul(Widen(b6),9)),6)];
        if (Equal(Widen(b14),113)) {
          Let b15 = M[001763];
          SetByte Offset(Offset(000741,Mul(Widen(b6),9)),6) LoByte(Widen(b15));
          SetByte 001762 114;
          Let b16 = M[001773];
          SetByte 001763 LoByte(Widen(b16));
          SetByte 001773 113;
          TraceOperation 054991 (Set_attr (Con 113) (Con 14));
          Let b17 = M[001759];
          SetByte 001759 SetBit(b17,1);
          TraceOperation 054994 (Jin (Con 114) (Var (Global 0)) (Branch F Dtrue));
          Let b18 = M[008817];
          Let b19 = M[008818];
          Let b20 = M[001771];
          if (Equal(MakeHiLo(b18,b19),Widen(b20))) {
            TraceOperation 054998 (Print "The robber, somewhat surprised at this turn of events, nimbly retrieves his stiletto.");
            GamePrint "The robber, somewhat surprised at this turn of events, nimbly retrieves his stiletto.";
            TraceOperation 055051 New_line;
            GamePrint "\n";
            TraceOperation 055052 Rtrue;
            PopFrame return_address_21;
            JumpReturn: return_address_21, result: 1
          } else {
            PopFrame return_address_22;
            JumpReturn: return_address_22, result: 1
          }
        } else {
          Error: unlink/loop
        }
      }
    } else {
      PopFrame return_address_23;
      JumpReturn: return_address_23, result: 0
    }
  }
--[390]--------------------------------------------------
LocRoutine 055094:
  MakeRoutineFrame 6;
  if (LessThanByte(num_actuals,6)) {
    SetLocal 6 125;
    if (LessThanByte(num_actuals,5)) {
      SetLocal 5 -17524;
      if (LessThanByte(num_actuals,4)) {
        SetLocal 4 -27067;
        if (LessThanByte(num_actuals,3)) {
          SetLocal 3 6666;
          if (LessThanByte(num_actuals,2)) {
            SetLocal 2 1401;
            if (LessThanByte(num_actuals,1)) {
              SetLocal 1 11584;
            }
          }
        }
      }
    }
  }
  Jump: 055107
LocOp 055107:
  TraceOperation 055107 (Je [Var (Local 3),Con 191,Con 114,Con 4] (Branch T (Dloc 055204)));
  if (LogOr(LogOr(Equal(GetLocal(3),191),Equal(GetLocal(3),114)),Equal(GetLocal(3),4))) {
    Jump: 055204
  } else {
    TraceOperation 055115 (Clear_attr (Var (Local 3)) (Con 7));
    Let b1 = M[Offset(Offset(000741,Mul(GetLocal(3),9)),0)];
    SetByte Offset(Offset(000741,Mul(GetLocal(3),9)),0) ClearBit(b1,0);
    TraceOperation 055118 (Jz (Var (Local 2)) (Branch F (Dloc 055172)));
    if (IsZero(GetLocal(2))) {
      TraceOperation 055121 (Store (Con 2) (Con 1));
      SetLocal 2 1;
      TraceOperation 055124 (Print "As the thief dies, the power of his magic decreases, and his treasures reappear:");
      GamePrint "As the thief dies, the power of his magic decreases, and his treasures reappear:";
      TraceOperation 055171 New_line;
      GamePrint "\n";
      Jump: 055172
    } else {
      Jump: 055172
    }
  }
LocOp 055172:
  TraceOperation 055172 (Print "  A ");
  GamePrint "  A ";
  TraceOperation 055177 (Print_obj (Var (Local 3)));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(3),9)),7)];
  Let b2 = M[Offset(Offset(Offset(000741,Mul(GetLocal(3),9)),7),1)];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  if (IsZeroByte(b3)) {
    GamePrint "";
    TraceOperation 055179 (Get_child (Var (Local 3)) Sp (Branch F (Dloc 055203)));
    Let b4 = M[Offset(Offset(000741,Mul(GetLocal(3),9)),6)];
    PushStack Widen(b4);
    if (IsZero(Widen(b4))) {
      Jump: 055203
    } else {
      TraceOperation 055183 (Call (Floc 036946) [Var (Local 3)] Sp);
      PushFrame 055183;
      SetLocal 1 GetLocal(3);
      JumpCall: 036946, #actuals: 1
    }
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
    TraceOperation 055179 (Get_child (Var (Local 3)) Sp (Branch F (Dloc 055203)));
    Let b5 = M[Offset(Offset(000741,Mul(GetLocal(3),9)),6)];
    PushStack Widen(b5);
    if (IsZero(Widen(b5))) {
      Jump: 055203
    } else {
      TraceOperation 055183 (Call (Floc 036946) [Var (Local 3)] Sp);
      PushFrame 055183;
      SetLocal 1 GetLocal(3);
      JumpCall: 036946, #actuals: 1
    }
  }
LocReturn 055183:
  PushStack call_result;
  TraceOperation 055189 (Jz (Var Sp) (Branch T (Dloc 055203)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 055203
  } else {
    TraceOperation 055192 (Print ", with ");
    GamePrint ", with ";
    TraceOperation 055197 (Call (Floc 036440) [Var (Local 3)] Sp);
    PushFrame 055197;
    SetLocal 1 GetLocal(3);
    JumpCall: 036440, #actuals: 1
  }
LocReturn 055197:
  PushStack call_result;
  Jump: 055203
LocOp 055203:
  TraceOperation 055203 New_line;
  GamePrint "\n";
  Jump: 055204
LocOp 055204:
  TraceOperation 055204 (Get_sibling (Var (Local 3)) (Local 3) (Branch T (Dloc 055208)));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(3),9)),5)];
  SetLocal 3 Widen(b1);
  if (IsZero(Widen(b1))) {
    TraceOperation 055208 (Jump 055079);
    Jump: 055079
  } else {
    TraceOperation 055208 (Jump 055079);
    Jump: 055079
  }
--[391]--------------------------------------------------
LocRoutine 055236:
  MakeRoutineFrame 0;
  Jump: 055237
LocOp 055237:
  TraceOperation 055237 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 055242 Rtrue;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: 1
--[392]--------------------------------------------------
LocRoutine 055244:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 1368;
  }
  Jump: 055247
LocOp 055247:
  TraceOperation 055247 (Jz (Var (Global 31)) (Branch T Dfalse));
  Let b1 = M[008879];
  Let b2 = M[008880];
  if (IsZero(MakeHiLo(b1,b2))) {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  } else {
    TraceOperation 055250 (Test_attr (Con 114) (Con 7) (Branch T Dfalse));
    Let b4 = M[001767];
    if (TestBit(b4,0)) {
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 0
    } else {
      TraceOperation 055254 (Random (Con 100) Sp);
      LetRandom random6 100;
      PushStack random6;
      TraceOperation 055258 (Jg (Con 20) (Var Sp) (Branch F Dfalse));
      PopStack popped7;
      if (GreaterThan(20,popped7)) {
        TraceOperation 055262 (Set_attr (Con 114) (Con 2));
        Let b8 = M[001767];
        SetByte 001767 SetBit(b8,5);
        TraceOperation 055265 (Store (Con 124) (Con 0));
        SetByte 009033 0;
        SetByte 009034 0;
        TraceOperation 055268 Rtrue;
        PopFrame return_address_9;
        JumpReturn: return_address_9, result: 1
      } else {
        PopFrame return_address_10;
        JumpReturn: return_address_10, result: 0
      }
    }
  }
--[393]--------------------------------------------------
LocRoutine 055270:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 861;
  }
  Jump: 055273
LocOp 055273:
  TraceOperation 055273 (Call (Floc 021638) [Con -32528] Sp);
  PushFrame 055273;
  SetLocal 1 -32528;
  JumpCall: 021638, #actuals: 1
LocReturn 055273:
  PushStack call_result;
  TraceOperation 055280 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 055285 (Clear_attr (Con 114) (Con 2));
  Let b2 = M[001767];
  SetByte 001767 ClearBit(b2,5);
  TraceOperation 055288 (Insert_obj (Con 113) (Var (Global 0)));
  Let b3 = M[008817];
  Let b4 = M[008818];
  Let b5 = M[001762];
  if (IsZero(Widen(b5))) {
    SetByte 001762 b4;
    Let b6 = M[Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),6)];
    SetByte 001763 LoByte(Widen(b6));
    SetByte Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),6) 113;
    TraceOperation 055291 (Clear_attr (Con 113) (Con 14));
    Let b7 = M[001759];
    SetByte 001759 ClearBit(b7,1);
    TraceOperation 055294 (Put_prop (Con 114) (Con 11) (Var (Global 28)));
    Let b8 = M[008873];
    Let b9 = M[008874];
    Let b10 = M[001774];
    Let b11 = M[001775];
    Let b12 = M[Address(MakeHiLo(b10,b11))];
    Error: getPropsA
  } else {
    Let b13 = M[Offset(Offset(000741,Mul(Widen(b5),9)),6)];
    if (Equal(Widen(b13),113)) {
      Let b14 = M[001763];
      SetByte Offset(Offset(000741,Mul(Widen(b5),9)),6) LoByte(Widen(b14));
      SetByte 001762 b4;
      Let b15 = M[Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),6)];
      SetByte 001763 LoByte(Widen(b15));
      SetByte Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),6) 113;
      TraceOperation 055291 (Clear_attr (Con 113) (Con 14));
      Let b16 = M[001759];
      SetByte 001759 ClearBit(b16,1);
      TraceOperation 055294 (Put_prop (Con 114) (Con 11) (Var (Global 28)));
      Let b17 = M[008873];
      Let b18 = M[008874];
      Let b19 = M[001774];
      Let b20 = M[001775];
      Let b21 = M[Address(MakeHiLo(b19,b20))];
      Error: getPropsA
    } else {
      Error: unlink/loop
    }
  }
--[394]--------------------------------------------------
LocRoutine 055306:
  MakeRoutineFrame 0;
  Jump: 055307
LocOp 055307:
  TraceOperation 055307 (Je [Var Sp,Var (Global 0)] (Branch F (Dloc 055393)));
  PopStack popped1;
  Let b2 = M[008817];
  Let b3 = M[008818];
  if (Equal(popped1,MakeHiLo(b2,b3))) {
    TraceOperation 055312 (Set_attr (Con 114) (Con 2));
    Let b4 = M[001767];
    SetByte 001767 SetBit(b4,5);
    TraceOperation 055315 (Print "The robber revives, briefly feigning continued unconsciousness, and, when he sees his moment, scrambles away from you.");
    GamePrint "The robber revives, briefly feigning continued unconsciousness, and, when he sees his moment, scrambles away from you.";
    TraceOperation 055392 New_line;
    GamePrint "\n";
    Jump: 055393
  } else {
    Jump: 055393
  }
LocOp 055393:
  TraceOperation 055393 (Call (Floc 021638) [Con -32528] Sp);
  PushFrame 055393;
  SetLocal 1 -32528;
  JumpCall: 021638, #actuals: 1
LocReturn 055393:
  PushStack call_result;
  TraceOperation 055400 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 055405 (Put_prop (Con 114) (Con 11) (Var (Global 29)));
  Let b2 = M[008875];
  Let b3 = M[008876];
  Let b4 = M[001774];
  Let b5 = M[001775];
  Let b6 = M[Address(MakeHiLo(b4,b5))];
  Error: getPropsA
LocReturn 055410:
  PushStack call_result;
  TraceOperation 055415 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[395]--------------------------------------------------
LocRoutine 055416:
  MakeRoutineFrame 0;
  Jump: 055417
LocOp 055417:
  TraceOperation 055417 (Je [Var (Global 120),Con 93] (Branch F (Dloc 055508)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),93)) {
    TraceOperation 055422 (Get_prop (Con 114) (Con 11) Sp);
    Let b3 = M[001774];
    Let b4 = M[001775];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    Error: getPropsA
  } else {
    Jump: 055508
  }
LocOp 055483:
  TraceOperation 055483 (Print_ret "The bag will be taken over his dead body.");
  GamePrint "The bag will be taken over his dead body.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 055508:
  TraceOperation 055508 (Je [Var (Global 120),Con 18] (Branch F (Dloc 055531)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),18)) {
    TraceOperation 055512 (Je [Var (Global 119),Con 115] (Branch F (Dloc 055531)));
    Let b3 = M[009055];
    Let b4 = M[009056];
    if (Equal(MakeHiLo(b3,b4),115)) {
      TraceOperation 055516 (Print_ret "It would be a good trick.");
      GamePrint "It would be a good trick.\n";
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 1
    } else {
      Jump: 055531
    }
  } else {
    Jump: 055531
  }
LocOp 055531:
  TraceOperation 055531 (Je [Var (Global 120),Con 35,Con 43] (Branch F (Dloc 055566)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (LogOr(Equal(MakeHiLo(b1,b2),35),Equal(MakeHiLo(b1,b2),43))) {
    TraceOperation 055537 (Print_ret "Getting close enough would be a good trick.");
    GamePrint "Getting close enough would be a good trick.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 055566
  }
LocOp 055566:
  TraceOperation 055566 (Je [Var (Global 120),Con 57,Con 56] (Branch F Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (LogOr(Equal(MakeHiLo(b1,b2),57),Equal(MakeHiLo(b1,b2),56))) {
    TraceOperation 055572 (Print_ret "The bag is underneath the thief, so one can't say what, if anything, is inside.");
    GamePrint "The bag is underneath the thief, so one can't say what, if anything, is inside.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 0
  }
--[396]--------------------------------------------------
LocRoutine 055622:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 055631
LocOp 055631:
  TraceOperation 055631 (Get_child (Var (Local 1)) (Local 3) (Branch F Dfalse));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),6)];
  SetLocal 3 Widen(b1);
  if (IsZero(Widen(b1))) {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  } else {
    Jump: 055635
  }
LocOp 055635:
  TraceOperation 055635 (Jz (Var (Local 3)) (Branch T Dtrue));
  if (IsZero(GetLocal(3))) {
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 1
  } else {
    TraceOperation 055638 (Get_sibling (Var (Local 3)) (Local 4) (Branch T (Dloc 055642)));
    Let b2 = M[Offset(Offset(000741,Mul(GetLocal(3),9)),5)];
    SetLocal 4 Widen(b2);
    if (IsZero(Widen(b2))) {
      TraceOperation 055642 (Clear_attr (Var (Local 3)) (Con 7));
      Let b3 = M[Offset(Offset(000741,Mul(GetLocal(3),9)),0)];
      SetByte Offset(Offset(000741,Mul(GetLocal(3),9)),0) ClearBit(b3,0);
      TraceOperation 055645 (Insert_obj (Var (Local 3)) (Var (Local 2)));
      Let b4 = M[Offset(Offset(000741,Mul(GetLocal(3),9)),4)];
      if (IsZero(Widen(b4))) {
        SetByte Offset(Offset(000741,Mul(GetLocal(3),9)),4) LoByte(GetLocal(2));
        Let b5 = M[Offset(Offset(000741,Mul(GetLocal(2),9)),6)];
        SetByte Offset(Offset(000741,Mul(GetLocal(3),9)),5) LoByte(Widen(b5));
        SetByte Offset(Offset(000741,Mul(GetLocal(2),9)),6) LoByte(GetLocal(3));
        TraceOperation 055648 (Store (Con 3) (Var (Local 4)));
        SetLocal 3 GetLocal(4);
        TraceOperation 055651 (Jump 055635);
        Jump: 055635
      } else {
        Let b6 = M[Offset(Offset(000741,Mul(Widen(b4),9)),6)];
        if (Equal(Widen(b6),GetLocal(3))) {
          Let b7 = M[Offset(Offset(000741,Mul(GetLocal(3),9)),5)];
          SetByte Offset(Offset(000741,Mul(Widen(b4),9)),6) LoByte(Widen(b7));
          SetByte Offset(Offset(000741,Mul(GetLocal(3),9)),4) LoByte(GetLocal(2));
          Let b8 = M[Offset(Offset(000741,Mul(GetLocal(2),9)),6)];
          SetByte Offset(Offset(000741,Mul(GetLocal(3),9)),5) LoByte(Widen(b8));
          SetByte Offset(Offset(000741,Mul(GetLocal(2),9)),6) LoByte(GetLocal(3));
          TraceOperation 055648 (Store (Con 3) (Var (Local 4)));
          SetLocal 3 GetLocal(4);
          TraceOperation 055651 (Jump 055635);
          Jump: 055635
        } else {
          Error: unlink/loop
        }
      }
    } else {
      TraceOperation 055642 (Clear_attr (Var (Local 3)) (Con 7));
      Let b9 = M[Offset(Offset(000741,Mul(GetLocal(3),9)),0)];
      SetByte Offset(Offset(000741,Mul(GetLocal(3),9)),0) ClearBit(b9,0);
      TraceOperation 055645 (Insert_obj (Var (Local 3)) (Var (Local 2)));
      Let b10 = M[Offset(Offset(000741,Mul(GetLocal(3),9)),4)];
      if (IsZero(Widen(b10))) {
        SetByte Offset(Offset(000741,Mul(GetLocal(3),9)),4) LoByte(GetLocal(2));
        Let b11 = M[Offset(Offset(000741,Mul(GetLocal(2),9)),6)];
        SetByte Offset(Offset(000741,Mul(GetLocal(3),9)),5) LoByte(Widen(b11));
        SetByte Offset(Offset(000741,Mul(GetLocal(2),9)),6) LoByte(GetLocal(3));
        TraceOperation 055648 (Store (Con 3) (Var (Local 4)));
        SetLocal 3 GetLocal(4);
        TraceOperation 055651 (Jump 055635);
        Jump: 055635
      } else {
        Let b12 = M[Offset(Offset(000741,Mul(Widen(b10),9)),6)];
        if (Equal(Widen(b12),GetLocal(3))) {
          Let b13 = M[Offset(Offset(000741,Mul(GetLocal(3),9)),5)];
          SetByte Offset(Offset(000741,Mul(Widen(b10),9)),6) LoByte(Widen(b13));
          SetByte Offset(Offset(000741,Mul(GetLocal(3),9)),4) LoByte(GetLocal(2));
          Let b14 = M[Offset(Offset(000741,Mul(GetLocal(2),9)),6)];
          SetByte Offset(Offset(000741,Mul(GetLocal(3),9)),5) LoByte(Widen(b14));
          SetByte Offset(Offset(000741,Mul(GetLocal(2),9)),6) LoByte(GetLocal(3));
          TraceOperation 055648 (Store (Con 3) (Var (Local 4)));
          SetLocal 3 GetLocal(4);
          TraceOperation 055651 (Jump 055635);
          Jump: 055635
        } else {
          Error: unlink/loop
        }
      }
    }
  }
--[397]--------------------------------------------------
LocRoutine 055654:
  MakeRoutineFrame 0;
  Jump: 055655
LocOp 055655:
  TraceOperation 055655 (Je [Var (Global 120),Con 93] (Branch F (Dloc 055708)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),93)) {
    TraceOperation 055659 (Jin (Var (Global 118)) (Con 190) (Branch F Dfalse));
    Let b3 = M[009053];
    Let b4 = M[009054];
    Let b5 = M[Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),4)];
    if (Equal(190,Widen(b5))) {
      TraceOperation 055663 (Jin (Con 114) (Con 190) (Branch F Dfalse));
      Let b6 = M[001771];
      if (Equal(190,Widen(b6))) {
        TraceOperation 055667 (Test_attr (Con 114) (Con 2) (Branch F Dfalse));
        Let b7 = M[001767];
        if (TestBit(b7,5)) {
          TraceOperation 055671 (Test_attr (Con 114) (Con 7) (Branch T Dfalse));
          Let b8 = M[001767];
          if (TestBit(b8,0)) {
            PopFrame return_address_9;
            JumpReturn: return_address_9, result: 0
          } else {
            TraceOperation 055675 (Get_prop (Con 114) (Con 11) Sp);
            Let b10 = M[001774];
            Let b11 = M[001775];
            Let b12 = M[Address(MakeHiLo(b10,b11))];
            Error: getPropsA
          }
        } else {
          PopFrame return_address_13;
          JumpReturn: return_address_13, result: 0
        }
      } else {
        PopFrame return_address_14;
        JumpReturn: return_address_14, result: 0
      }
    } else {
      PopFrame return_address_15;
      JumpReturn: return_address_15, result: 0
    }
  } else {
    Jump: 055708
  }
LocOp 055708:
  TraceOperation 055708 (Je [Var (Global 120),Con 18] (Branch F (Dloc 055745)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),18)) {
    TraceOperation 055712 (Je [Var (Global 119),Con 191] (Branch F (Dloc 055745)));
    Let b3 = M[009055];
    Let b4 = M[009056];
    if (Equal(MakeHiLo(b3,b4),191)) {
      TraceOperation 055716 (Print_ret "You can't. It's not a very good chalice, is it?");
      GamePrint "You can't. It's not a very good chalice, is it?\n";
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 1
    } else {
      Jump: 055745
    }
  } else {
    Jump: 055745
  }
LocOp 055745:
  TraceOperation 055745 (Call (Floc 068158) [] Sp);
  PushFrame 055745;
  JumpCall: 068158, #actuals: 0
LocReturn 055745:
  PushStack call_result;
  TraceOperation 055750 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[398]--------------------------------------------------
LocRoutine 055752:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 055759
LocOp 055759:
  TraceOperation 055759 (Je [Var (Local 1),Con 2] (Branch F Dfalse));
  if (Equal(GetLocal(1),2)) {
    TraceOperation 055763 (Call (Floc 021638) [Con -32528] Sp);
    PushFrame 055763;
    SetLocal 1 -32528;
    JumpCall: 021638, #actuals: 1
  } else {
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 0
  }
LocReturn 055763:
  PushStack call_result;
  TraceOperation 055770 (Loadw (Var Sp) (Con 0) Sp);
  PopStack popped1;
  Let b2 = M[Offset(Address(popped1),0)];
  Let b3 = M[Offset(Offset(Address(popped1),0),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 055774 (Je [Var Sp,Con 1] (Branch F Dfalse));
  PopStack popped4;
  if (Equal(popped4,1)) {
    TraceOperation 055778 (Jz (Var (Global 62)) (Branch F Dfalse));
    Let b5 = M[008941];
    Let b6 = M[008942];
    if (IsZero(MakeHiLo(b5,b6))) {
      TraceOperation 055781 (Jin (Con 114) (Var (Global 0)) (Branch T (Dloc 055791)));
      Let b7 = M[008817];
      Let b8 = M[008818];
      Let b9 = M[001771];
      if (Equal(MakeHiLo(b7,b8),Widen(b9))) {
        Jump: 055791
      } else {
        TraceOperation 055785 (Push (Con 1));
        PushStack 1;
        TraceOperation 055788 (Jump 055794);
        Jump: 055794
      }
    } else {
      PopFrame return_address_10;
      JumpReturn: return_address_10, result: 0
    }
  } else {
    PopFrame return_address_11;
    JumpReturn: return_address_11, result: 0
  }
--[399]--------------------------------------------------
LocRoutine 055896:
  MakeRoutineFrame 0;
  Jump: 055897
LocOp 055897:
  TraceOperation 055897 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[400]--------------------------------------------------
LocRoutine 055898:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 055903
LocOp 055903:
  TraceOperation 055903 (Get_child (Var (Global 0)) (Local 1) (Branch T (Dloc 055907)));
  Let b1 = M[008817];
  Let b2 = M[008818];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),6)];
  SetLocal 1 Widen(b3);
  if (IsZero(Widen(b3))) {
    TraceOperation 055907 (Jz (Var (Local 1)) (Branch T (Dloc 055961)));
    if (IsZero(GetLocal(1))) {
      Jump: 055961
    } else {
      TraceOperation 055910 (Get_sibling (Var (Local 1)) Sp (Branch F (Dloc 055961)));
      Let b4 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),5)];
      PushStack Widen(b4);
      if (IsZero(Widen(b4))) {
        Jump: 055961
      } else {
        TraceOperation 055914 (Print "The thief gestures mysteriously, and the treasures in the room suddenly vanish.");
        GamePrint "The thief gestures mysteriously, and the treasures in the room suddenly vanish.";
        TraceOperation 055959 New_line;
        GamePrint "\n";
        TraceOperation 055960 New_line;
        GamePrint "\n";
        Jump: 055961
      }
    }
  } else {
    TraceOperation 055907 (Jz (Var (Local 1)) (Branch T (Dloc 055961)));
    if (IsZero(GetLocal(1))) {
      Jump: 055961
    } else {
      TraceOperation 055910 (Get_sibling (Var (Local 1)) Sp (Branch F (Dloc 055961)));
      Let b5 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),5)];
      PushStack Widen(b5);
      if (IsZero(Widen(b5))) {
        Jump: 055961
      } else {
        TraceOperation 055914 (Print "The thief gestures mysteriously, and the treasures in the room suddenly vanish.");
        GamePrint "The thief gestures mysteriously, and the treasures in the room suddenly vanish.";
        TraceOperation 055959 New_line;
        GamePrint "\n";
        TraceOperation 055960 New_line;
        GamePrint "\n";
        Jump: 055961
      }
    }
  }
LocOp 055961:
  TraceOperation 055961 (Jz (Var (Local 1)) (Branch T Dtrue));
  if (IsZero(GetLocal(1))) {
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 1
  } else {
    TraceOperation 055964 (Je [Var (Local 1),Con 191] (Branch T (Dloc 055975)));
    if (Equal(GetLocal(1),191)) {
      Jump: 055975
    } else {
      TraceOperation 055968 (Je [Var (Local 1),Con 114] (Branch T (Dloc 055975)));
      if (Equal(GetLocal(1),114)) {
        Jump: 055975
      } else {
        TraceOperation 055972 (Set_attr (Var (Local 1)) (Con 7));
        Let b2 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),0)];
        SetByte Offset(Offset(000741,Mul(GetLocal(1),9)),0) SetBit(b2,0);
        Jump: 055975
      }
    }
  }
LocOp 055975:
  TraceOperation 055975 (Get_sibling (Var (Local 1)) (Local 1) (Branch T (Dloc 055979)));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),5)];
  SetLocal 1 Widen(b1);
  if (IsZero(Widen(b1))) {
    TraceOperation 055979 (Jump 055961);
    Jump: 055961
  } else {
    TraceOperation 055979 (Jump 055961);
    Jump: 055961
  }
--[401]--------------------------------------------------
LocRoutine 055982:
  MakeRoutineFrame 0;
  Jump: 055983
LocOp 055983:
  TraceOperation 055983 (Je [Var (Global 120),Con 43] (Branch F (Dloc 056000)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),43)) {
    TraceOperation 055987 (Print_ret "The door cannot be opened.");
    GamePrint "The door cannot be opened.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 056000
  }
LocOp 056000:
  TraceOperation 056000 (Je [Var (Global 120),Con 28] (Branch F (Dloc 056017)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),28)) {
    TraceOperation 056004 (Print_ret "You cannot burn this door.");
    GamePrint "You cannot burn this door.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 056017
  }
LocOp 056017:
  TraceOperation 056017 (Je [Var (Global 120),Con 42] (Branch F (Dloc 056040)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),42)) {
    TraceOperation 056021 (Print_ret "You can't seem to damage the door.");
    GamePrint "You can't seem to damage the door.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 056040
  }
LocOp 056040:
  TraceOperation 056040 (Je [Var (Global 120),Con 82] (Branch F Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),82)) {
    TraceOperation 056044 (Print_ret "It won't open.");
    GamePrint "It won't open.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 0
  }
--[402]--------------------------------------------------
LocRoutine 056054:
  MakeRoutineFrame 0;
  Jump: 056055
LocOp 056055:
  TraceOperation 056055 (Je [Var (Global 120),Con 93] (Branch F (Dloc 056084)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),93)) {
    TraceOperation 056059 (Print_ret "A force keeps you from taking the bodies.");
    GamePrint "A force keeps you from taking the bodies.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 056084
  }
LocOp 056084:
  TraceOperation 056084 (Je [Var (Global 120),Con 28,Con 42] (Branch F Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (LogOr(Equal(MakeHiLo(b1,b2),28),Equal(MakeHiLo(b1,b2),42))) {
    TraceOperation 056090 (Call (Floc 067174) [Con -25041] Sp);
    PushFrame 056090;
    SetLocal 1 -25041;
    JumpCall: 067174, #actuals: 1
  } else {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  }
LocReturn 056090:
  PushStack call_result;
  TraceOperation 056097 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[403]--------------------------------------------------
LocRoutine 056098:
  MakeRoutineFrame 0;
  Jump: 056099
LocOp 056099:
  TraceOperation 056099 (Je [Var (Global 120),Con 43] (Branch F (Dloc 056126)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),43)) {
    TraceOperation 056103 (Print_ret "The book is already open to page 569.");
    GamePrint "The book is already open to page 569.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 056126
  }
LocOp 056126:
  TraceOperation 056126 (Je [Var (Global 120),Con 35] (Branch F (Dloc 056155)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),35)) {
    TraceOperation 056130 (Print_ret "As hard as you try, the book cannot be closed.");
    GamePrint "As hard as you try, the book cannot be closed.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 056155
  }
LocOp 056155:
  TraceOperation 056155 (Je [Var (Global 120),Con 89] (Branch T (Dloc 056176)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),89)) {
    Jump: 056176
  } else {
    TraceOperation 056159 (Je [Var (Global 120),Con 107] (Branch F (Dloc 056315)));
    Let b3 = M[009057];
    Let b4 = M[009058];
    if (Equal(MakeHiLo(b3,b4),107)) {
      TraceOperation 056164 (Je [Var (Global 119),Con 14] (Branch F (Dloc 056315)));
      Let b5 = M[009055];
      Let b6 = M[009056];
      if (Equal(MakeHiLo(b5,b6),14)) {
        TraceOperation 056169 (Je [Var (Global 94),Con 569] (Branch T (Dloc 056315)));
        Let b7 = M[009005];
        Let b8 = M[009006];
        if (Equal(MakeHiLo(b7,b8),569)) {
          Jump: 056315
        } else {
          Jump: 056176
        }
      } else {
        Jump: 056315
      }
    } else {
      Jump: 056315
    }
  }
LocOp 056176:
  TraceOperation 056176 (Print_ret "Beside page 569, there is only one other page with any legible printing on it. Most of it is unreadable, but the subject seems to be the banishment of evil. Apparently, certain noises, lights, and prayers are efficacious in this regard.");
  GamePrint "Beside page 569, there is only one other page with any legible printing on it. Most of it is unreadable, but the subject seems to be the banishment of evil. Apparently, certain noises, lights, and prayers are efficacious in this regard.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 056315:
  TraceOperation 056315 (Je [Var (Global 120),Con 28] (Branch F Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),28)) {
    TraceOperation 056319 (Call (Floc 030906) [Var (Global 118)] Sp);
    Let b3 = M[009053];
    Let b4 = M[009054];
    PushFrame 056319;
    SetLocal 1 MakeHiLo(b3,b4);
    JumpCall: 030906, #actuals: 1
  } else {
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 0
  }
LocReturn 056319:
  PushStack call_result;
  TraceOperation 056325 (Call (Floc 067174) [Con -25001] Sp);
  PushFrame 056325;
  SetLocal 1 -25001;
  JumpCall: 067174, #actuals: 1
LocReturn 056325:
  PushStack call_result;
  TraceOperation 056332 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[404]--------------------------------------------------
LocRoutine 056334:
  MakeRoutineFrame 0;
  Jump: 056335
LocOp 056335:
  TraceOperation 056335 (Je [Var (Global 120),Con 42] (Branch F Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),42)) {
    TraceOperation 056339 (Put_prop (Var (Global 118)) (Con 12) (Con 0));
    Let b3 = M[009053];
    Let b4 = M[009054];
    Let b5 = M[Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),7)];
    Let b6 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),7),1)];
    Let b7 = M[Address(MakeHiLo(b5,b6))];
    Error: getPropsA
  } else {
    PopFrame return_address_8;
    JumpReturn: return_address_8, result: 0
  }
--[405]--------------------------------------------------
LocRoutine 056420:
  MakeRoutineFrame 0;
  Jump: 056421
LocOp 056421:
  TraceOperation 056421 (Je [Var (Global 120),Con 127] (Branch F (Dloc 056483)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),127)) {
    TraceOperation 056425 (Print "The lamp has smashed into the floor, and the light has gone out.");
    GamePrint "The lamp has smashed into the floor, and the light has gone out.";
    TraceOperation 056460 New_line;
    GamePrint "\n";
    TraceOperation 056461 (Call (Floc 021638) [Con 28501] Sp);
    PushFrame 056461;
    SetLocal 1 28501;
    JumpCall: 021638, #actuals: 1
  } else {
    Jump: 056483
  }
LocReturn 056461:
  PushStack call_result;
  TraceOperation 056468 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 056473 (Call (Floc 030906) [Con 164] Sp);
  PushFrame 056473;
  SetLocal 1 164;
  JumpCall: 030906, #actuals: 1
LocReturn 056473:
  PushStack call_result;
  TraceOperation 056479 (Insert_obj (Con 210) (Var (Global 0)));
  Let b1 = M[008817];
  Let b2 = M[008818];
  Let b3 = M[002635];
  if (IsZero(Widen(b3))) {
    SetByte 002635 b2;
    Let b4 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),6)];
    SetByte 002636 LoByte(Widen(b4));
    SetByte Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),6) 210;
    TraceOperation 056482 Rtrue;
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  } else {
    Let b6 = M[Offset(Offset(000741,Mul(Widen(b3),9)),6)];
    if (Equal(Widen(b6),210)) {
      Let b7 = M[002636];
      SetByte Offset(Offset(000741,Mul(Widen(b3),9)),6) LoByte(Widen(b7));
      SetByte 002635 b2;
      Let b8 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),6)];
      SetByte 002636 LoByte(Widen(b8));
      SetByte Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),6) 210;
      TraceOperation 056482 Rtrue;
      PopFrame return_address_9;
      JumpReturn: return_address_9, result: 1
    } else {
      Error: unlink/loop
    }
  }
LocOp 056483:
  TraceOperation 056483 (Je [Var (Global 120),Con 14] (Branch F (Dloc 056523)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),14)) {
    TraceOperation 056487 (Test_attr (Con 164) (Con 18) (Branch F (Dloc 056510)));
    Let b3 = M[002219];
    if (TestBit(b3,5)) {
      TraceOperation 056491 (Print_ret "A burned-out lamp won't light.");
      GamePrint "A burned-out lamp won't light.\n";
      PopFrame return_address_4;
      JumpReturn: return_address_4, result: 1
    } else {
      Jump: 056510
    }
  } else {
    Jump: 056523
  }
LocOp 056510:
  TraceOperation 056510 (Call (Floc 021638) [Con 28501] Sp);
  PushFrame 056510;
  SetLocal 1 28501;
  JumpCall: 021638, #actuals: 1
LocReturn 056510:
  PushStack call_result;
  TraceOperation 056517 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 056522 Rfalse;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: 0
LocOp 056523:
  TraceOperation 056523 (Je [Var (Global 120),Con 22] (Branch F (Dloc 056561)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),22)) {
    TraceOperation 056527 (Test_attr (Con 164) (Con 18) (Branch F (Dloc 056548)));
    Let b3 = M[002219];
    if (TestBit(b3,5)) {
      TraceOperation 056531 (Print_ret "The lamp has already burned out.");
      GamePrint "The lamp has already burned out.\n";
      PopFrame return_address_4;
      JumpReturn: return_address_4, result: 1
    } else {
      Jump: 056548
    }
  } else {
    Jump: 056561
  }
LocOp 056548:
  TraceOperation 056548 (Call (Floc 021638) [Con 28501] Sp);
  PushFrame 056548;
  SetLocal 1 28501;
  JumpCall: 021638, #actuals: 1
LocReturn 056548:
  PushStack call_result;
  TraceOperation 056555 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 056560 Rfalse;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: 0
LocOp 056561:
  TraceOperation 056561 (Je [Var (Global 120),Con 56] (Branch F Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),56)) {
    TraceOperation 056565 (Print "The lamp ");
    GamePrint "The lamp ";
    TraceOperation 056572 (Test_attr (Con 164) (Con 18) (Branch F (Dloc 056590)));
    Let b3 = M[002219];
    if (TestBit(b3,5)) {
      TraceOperation 056576 (Print "has burned out.");
      GamePrint "has burned out.";
      TraceOperation 056587 (Jump 056613);
      Jump: 056613
    } else {
      Jump: 056590
    }
  } else {
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 0
  }
LocOp 056590:
  TraceOperation 056590 (Test_attr (Con 164) (Con 20) (Branch F (Dloc 056602)));
  Let b1 = M[002219];
  if (TestBit(b1,3)) {
    TraceOperation 056594 (Print "is on.");
    GamePrint "is on.";
    TraceOperation 056599 (Jump 056613);
    Jump: 056613
  } else {
    Jump: 056602
  }
LocOp 056602:
  TraceOperation 056602 (Print "is turned off.");
  GamePrint "is turned off.";
  Jump: 056613
LocOp 056613:
  TraceOperation 056613 New_line;
  GamePrint "\n";
  TraceOperation 056614 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[406]--------------------------------------------------
LocRoutine 056616:
  MakeRoutineFrame 0;
  Jump: 056617
LocOp 056617:
  TraceOperation 056617 (Je [Var (Global 120),Con 93] (Branch F Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),93)) {
    TraceOperation 056621 (Je [Var (Global 118),Con 160] (Branch F Dfalse));
    Let b3 = M[009053];
    Let b4 = M[009054];
    if (Equal(MakeHiLo(b3,b4),160)) {
      TraceOperation 056625 (Print_ret "It is securely anchored.");
      GamePrint "It is securely anchored.\n";
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 1
    } else {
      PopFrame return_address_6;
      JumpReturn: return_address_6, result: 0
    }
  } else {
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 0
  }
--[407]--------------------------------------------------
LocRoutine 056642:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 056645
LocOp 056645:
  TraceOperation 056645 (Je [Var (Global 120),Con 28,Con 14] (Branch F (Dloc 056786)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (LogOr(Equal(MakeHiLo(b1,b2),28),Equal(MakeHiLo(b1,b2),14))) {
    TraceOperation 056652 (Je [Var (Global 118),Con 155] (Branch F (Dloc 056786)));
    Let b3 = M[009053];
    Let b4 = M[009054];
    if (Equal(MakeHiLo(b3,b4),155)) {
      TraceOperation 056657 (Jg (Var (Global 26)) (Con 0) (Branch F (Dloc 056663)));
      Let b5 = M[008869];
      Let b6 = M[008870];
      if (GreaterThan(MakeHiLo(b5,b6),0)) {
        TraceOperation 056661 (Dec (Con 42));
        Let b7 = M[008869];
        Let b8 = M[008870];
        SetByte 008869 HiByte(Sub(MakeHiLo(b7,b8),1));
        SetByte 008870 LoByte(Sub(MakeHiLo(b7,b8),1));
        Jump: 056663
      } else {
        Jump: 056663
      }
    } else {
      Jump: 056786
    }
  } else {
    Jump: 056786
  }
LocOp 056663:
  TraceOperation 056663 (Jg (Var (Global 26)) (Con 0) (Branch T (Dloc 056694)));
  Let b1 = M[008869];
  Let b2 = M[008870];
  if (GreaterThan(MakeHiLo(b1,b2),0)) {
    Jump: 056694
  } else {
    TraceOperation 056667 (Print_ret "I'm afraid that you have run out of matches.");
    GamePrint "I'm afraid that you have run out of matches.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  }
LocOp 056694:
  TraceOperation 056694 (Je [Var (Global 0),Con 228,Con 206] (Branch F (Dloc 056731)));
  Let b1 = M[008817];
  Let b2 = M[008818];
  if (LogOr(Equal(MakeHiLo(b1,b2),228),Equal(MakeHiLo(b1,b2),206))) {
    TraceOperation 056700 (Print_ret "This room is drafty, and the match goes out instantly.");
    GamePrint "This room is drafty, and the match goes out instantly.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 056731
  }
LocOp 056731:
  TraceOperation 056731 (Set_attr (Con 155) (Con 25));
  Let b1 = M[002139];
  SetByte 002139 SetBit(b1,6);
  TraceOperation 056734 (Set_attr (Con 155) (Con 20));
  Let b2 = M[002138];
  SetByte 002138 SetBit(b2,3);
  TraceOperation 056737 (Call (Floc 021618) [Con 28486,Con 2] Sp);
  PushFrame 056737;
  SetLocal 1 28486;
  SetLocal 2 2;
  JumpCall: 021618, #actuals: 2
LocReturn 056737:
  PushStack call_result;
  TraceOperation 056745 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 056750 (Print "One of the matches starts to burn.");
  GamePrint "One of the matches starts to burn.";
  TraceOperation 056773 New_line;
  GamePrint "\n";
  TraceOperation 056774 (Jz (Var (Global 66)) (Branch F Dtrue));
  Let b2 = M[008949];
  Let b3 = M[008950];
  if (IsZero(MakeHiLo(b2,b3))) {
    TraceOperation 056777 (Store (Con 82) (Con 1));
    SetByte 008949 0;
    SetByte 008950 1;
    TraceOperation 056780 (Call (Floc 032260) [] Sp);
    PushFrame 056780;
    JumpCall: 032260, #actuals: 0
  } else {
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 1
  }
LocReturn 056780:
  PushStack call_result;
  TraceOperation 056785 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 056786:
  TraceOperation 056786 (Je [Var (Global 120),Con 22] (Branch F (Dloc 056846)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),22)) {
    TraceOperation 056790 (Test_attr (Con 155) (Con 25) (Branch F (Dloc 056846)));
    Let b3 = M[002139];
    if (TestBit(b3,6)) {
      TraceOperation 056794 (Print "The match is out.");
      GamePrint "The match is out.";
      TraceOperation 056805 New_line;
      GamePrint "\n";
      TraceOperation 056806 (Clear_attr (Con 155) (Con 25));
      Let b4 = M[002139];
      SetByte 002139 ClearBit(b4,6);
      TraceOperation 056809 (Clear_attr (Con 155) (Con 20));
      Let b5 = M[002138];
      SetByte 002138 ClearBit(b5,3);
      TraceOperation 056812 (Call (Floc 027746) [Var (Global 0)] (Global 66));
      Let b6 = M[008817];
      Let b7 = M[008818];
      PushFrame 056812;
      SetLocal 1 MakeHiLo(b6,b7);
      JumpCall: 027746, #actuals: 1
    } else {
      Jump: 056846
    }
  } else {
    Jump: 056846
  }
LocReturn 056812:
  SetByte 008949 HiByte(call_result);
  SetByte 008950 LoByte(call_result);
  TraceOperation 056818 (Jz (Var (Global 66)) (Branch F (Dloc 056837)));
  Let b1 = M[008949];
  Let b2 = M[008950];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 056821 (Print "It's pitch black in here!");
    GamePrint "It's pitch black in here!";
    TraceOperation 056836 New_line;
    GamePrint "\n";
    Jump: 056837
  } else {
    Jump: 056837
  }
LocOp 056837:
  TraceOperation 056837 (Call (Floc 021618) [Con 28486,Con 0] Sp);
  PushFrame 056837;
  SetLocal 1 28486;
  SetLocal 2 0;
  JumpCall: 021618, #actuals: 2
LocReturn 056837:
  PushStack call_result;
  TraceOperation 056845 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 056846:
  TraceOperation 056846 (Je [Var (Global 120),Con 43,Con 37] (Branch F (Dloc 056896)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (LogOr(Equal(MakeHiLo(b1,b2),43),Equal(MakeHiLo(b1,b2),37))) {
    TraceOperation 056852 (Print "You have ");
    GamePrint "You have ";
    TraceOperation 056857 (Sub (Var (Global 26)) (Con 1) (Local 1));
    Let b3 = M[008869];
    Let b4 = M[008870];
    SetLocal 1 Sub(MakeHiLo(b3,b4),1);
    TraceOperation 056861 (Jg (Var (Local 1)) (Con 0) (Branch T (Dloc 056871)));
    if (GreaterThan(GetLocal(1),0)) {
      Jump: 056871
    } else {
      TraceOperation 056865 (Print "no");
      GamePrint "no";
      TraceOperation 056868 (Jump 056874);
      Jump: 056874
    }
  } else {
    Jump: 056896
  }
LocOp 056871:
  TraceOperation 056871 (Print_num (Var (Local 1)));
  GamePrint ShowNumber(GetLocal(1));
  Jump: 056874
LocOp 056874:
  TraceOperation 056874 (Print " match");
  GamePrint " match";
  TraceOperation 056879 (Je [Var (Local 1),Con 1] (Branch T (Dloc 056891)));
  if (Equal(GetLocal(1),1)) {
    Jump: 056891
  } else {
    TraceOperation 056883 (Print "es.");
    GamePrint "es.";
    TraceOperation 056888 (Jump 056894);
    Jump: 056894
  }
LocOp 056891:
  TraceOperation 056891 (Print ".");
  GamePrint ".";
  Jump: 056894
LocOp 056894:
  TraceOperation 056894 New_line;
  GamePrint "\n";
  TraceOperation 056895 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 056896:
  TraceOperation 056896 (Je [Var (Global 120),Con 56] (Branch F Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),56)) {
    TraceOperation 056900 (Test_attr (Con 155) (Con 20) (Branch F (Dloc 056922)));
    Let b3 = M[002138];
    if (TestBit(b3,3)) {
      TraceOperation 056904 (Print "The match is burning.");
      GamePrint "The match is burning.";
      TraceOperation 056919 (Jump 056969);
      Jump: 056969
    } else {
      Jump: 056922
    }
  } else {
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 0
  }
LocOp 056922:
  TraceOperation 056922 (Print "The matchbook isn't very interesting, except for what's written on it.");
  GamePrint "The matchbook isn't very interesting, except for what's written on it.";
  Jump: 056969
LocOp 056969:
  TraceOperation 056969 New_line;
  GamePrint "\n";
  TraceOperation 056970 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[408]--------------------------------------------------
LocRoutine 056972:
  MakeRoutineFrame 0;
  Jump: 056973
LocOp 056973:
  TraceOperation 056973 (Print "The match has gone out.");
  GamePrint "The match has gone out.";
  TraceOperation 056988 New_line;
  GamePrint "\n";
  TraceOperation 056989 (Clear_attr (Con 155) (Con 25));
  Let b1 = M[002139];
  SetByte 002139 ClearBit(b1,6);
  TraceOperation 056992 (Clear_attr (Con 155) (Con 20));
  Let b2 = M[002138];
  SetByte 002138 ClearBit(b2,3);
  TraceOperation 056995 (Call (Floc 027746) [Var (Global 0)] (Global 66));
  Let b3 = M[008817];
  Let b4 = M[008818];
  PushFrame 056995;
  SetLocal 1 MakeHiLo(b3,b4);
  JumpCall: 027746, #actuals: 1
LocReturn 056995:
  SetByte 008949 HiByte(call_result);
  SetByte 008950 LoByte(call_result);
  TraceOperation 057001 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[409]--------------------------------------------------
LocRoutine 057002:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 057007
LocOp 057007:
  TraceOperation 057007 (Load (Con 43) (Local 2));
  Let b1 = M[008871];
  Let b2 = M[008872];
  SetLocal 2 MakeHiLo(b1,b2);
  TraceOperation 057010 (Loadw (Var (Local 2)) (Con 0) (Local 1));
  Let b3 = M[Offset(Address(GetLocal(2)),0)];
  Let b4 = M[Offset(Offset(Address(GetLocal(2)),0),1)];
  SetLocal 1 MakeHiLo(b3,b4);
  TraceOperation 057014 (Call (Floc 021618) [Con 28501,Var (Local 1)] Sp);
  PushFrame 057014;
  SetLocal 1 28501;
  SetLocal 2 GetLocal(1);
  JumpCall: 021618, #actuals: 2
LocReturn 057014:
  PushStack call_result;
  TraceOperation 057022 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 057027 (Call (Floc 057090) [Con 164,Var (Local 2),Var (Local 1)] Sp);
  PushFrame 057027;
  SetLocal 1 164;
  SetLocal 2 GetLocal(2);
  SetLocal 3 GetLocal(1);
  JumpCall: 057090, #actuals: 3
LocReturn 057027:
  PushStack call_result;
  TraceOperation 057035 (Jz (Var (Local 1)) (Branch T Dfalse));
  if (IsZero(GetLocal(1))) {
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 0
  } else {
    TraceOperation 057038 (Add (Var (Local 2)) (Con 4) (Global 27));
    SetByte 008871 HiByte(Add(GetLocal(2),4));
    SetByte 008872 LoByte(Add(GetLocal(2),4));
    TraceOperation 057042 (Ret (Var (Global 27)));
    Let b2 = M[008871];
    Let b3 = M[008872];
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: MakeHiLo(b2,b3)
  }
--[410]--------------------------------------------------
LocRoutine 057044:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 057049
LocOp 057049:
  TraceOperation 057049 (Load (Con 41) (Local 2));
  Let b1 = M[008867];
  Let b2 = M[008868];
  SetLocal 2 MakeHiLo(b1,b2);
  TraceOperation 057052 (Set_attr (Con 147) (Con 3));
  Let b3 = M[002064];
  SetByte 002064 SetBit(b3,4);
  TraceOperation 057055 (Loadw (Var (Local 2)) (Con 0) (Local 1));
  Let b4 = M[Offset(Address(GetLocal(2)),0)];
  Let b5 = M[Offset(Offset(Address(GetLocal(2)),0),1)];
  SetLocal 1 MakeHiLo(b4,b5);
  TraceOperation 057059 (Call (Floc 021618) [Con 28522,Var (Local 1)] Sp);
  PushFrame 057059;
  SetLocal 1 28522;
  SetLocal 2 GetLocal(1);
  JumpCall: 021618, #actuals: 2
LocReturn 057059:
  PushStack call_result;
  TraceOperation 057067 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 057072 (Call (Floc 057090) [Con 147,Var (Local 2),Var (Local 1)] Sp);
  PushFrame 057072;
  SetLocal 1 147;
  SetLocal 2 GetLocal(2);
  SetLocal 3 GetLocal(1);
  JumpCall: 057090, #actuals: 3
LocReturn 057072:
  PushStack call_result;
  TraceOperation 057080 (Jz (Var (Local 1)) (Branch T Dfalse));
  if (IsZero(GetLocal(1))) {
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 0
  } else {
    TraceOperation 057083 (Add (Var (Local 2)) (Con 4) (Global 25));
    SetByte 008867 HiByte(Add(GetLocal(2),4));
    SetByte 008868 LoByte(Add(GetLocal(2),4));
    TraceOperation 057087 (Ret (Var (Global 25)));
    Let b2 = M[008867];
    Let b3 = M[008868];
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: MakeHiLo(b2,b3)
  }
--[411]--------------------------------------------------
LocRoutine 057090:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 057097
LocOp 057097:
  TraceOperation 057097 (Jz (Var (Local 3)) (Branch F (Dloc 057106)));
  if (IsZero(GetLocal(3))) {
    TraceOperation 057100 (Clear_attr (Var (Local 1)) (Con 20));
    Let b1 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),2)];
    SetByte Offset(Offset(000741,Mul(GetLocal(1),9)),2) ClearBit(b1,3);
    TraceOperation 057103 (Set_attr (Var (Local 1)) (Con 18));
    Let b2 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),2)];
    SetByte Offset(Offset(000741,Mul(GetLocal(1),9)),2) SetBit(b2,5);
    Jump: 057106
  } else {
    Jump: 057106
  }
LocOp 057106:
  TraceOperation 057106 (Call (Floc 038124) [Var (Local 1)] Sp);
  PushFrame 057106;
  SetLocal 1 GetLocal(1);
  JumpCall: 038124, #actuals: 1
LocReturn 057106:
  PushStack call_result;
  TraceOperation 057112 (Jz (Var Sp) (Branch F (Dloc 057119)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 057115 (Jin (Var (Local 1)) (Var (Global 0)) (Branch F Dfalse));
    Let b2 = M[008817];
    Let b3 = M[008818];
    Let b4 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),4)];
    if (Equal(MakeHiLo(b2,b3),Widen(b4))) {
      Jump: 057119
    } else {
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 0
    }
  } else {
    Jump: 057119
  }
LocOp 057119:
  TraceOperation 057119 (Jz (Var (Local 3)) (Branch F (Dloc 057152)));
  if (IsZero(GetLocal(3))) {
    TraceOperation 057122 (Print "You'd better have more light than from the ");
    GamePrint "You'd better have more light than from the ";
    TraceOperation 057147 (Print_obj (Var (Local 1)));
    Let b1 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),7)];
    Let b2 = M[Offset(Offset(Offset(000741,Mul(GetLocal(1),9)),7),1)];
    Let b3 = M[Address(MakeHiLo(b1,b2))];
    if (IsZeroByte(b3)) {
      GamePrint "";
      TraceOperation 057149 (Print_ret ".");
      GamePrint ".\n";
      PopFrame return_address_4;
      JumpReturn: return_address_4, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
      TraceOperation 057149 (Print_ret ".");
      GamePrint ".\n";
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 1
    }
  } else {
    Jump: 057152
  }
LocOp 057152:
  TraceOperation 057152 (Loadw (Var (Local 2)) (Con 1) Sp);
  Let b1 = M[Offset(Address(GetLocal(2)),2)];
  Let b2 = M[Offset(Offset(Address(GetLocal(2)),2),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 057156 (Print_paddr (Var Sp));
  PopStack popped3;
  GamePrint GetText(PackedAddress Z3(popped3));
  TraceOperation 057158 New_line;
  GamePrint "\n";
  TraceOperation 057159 Rtrue;
  PopFrame return_address_4;
  JumpReturn: return_address_4, result: 1
--[412]--------------------------------------------------
LocRoutine 057160:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 057165
LocOp 057165:
  TraceOperation 057165 (Jl (Var (Local 1)) (Var (Local 2)) (Branch F (Dloc 057171)));
  if (LessThan(GetLocal(1),GetLocal(2))) {
    TraceOperation 057169 (Ret (Var (Local 1)));
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: GetLocal(1)
  } else {
    Jump: 057171
  }
LocOp 057171:
  TraceOperation 057171 (Ret (Var (Local 2)));
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: GetLocal(2)
--[413]--------------------------------------------------
LocRoutine 057174:
  MakeRoutineFrame 0;
  Jump: 057175
LocOp 057175:
  TraceOperation 057175 (Test_attr (Con 147) (Con 3) (Branch T (Dloc 057191)));
  Let b1 = M[002064];
  if (TestBit(b1,4)) {
    Jump: 057191
  } else {
    TraceOperation 057179 (Call (Floc 021638) [Con 28522] Sp);
    PushFrame 057179;
    SetLocal 1 28522;
    JumpCall: 021638, #actuals: 1
  }
LocReturn 057179:
  PushStack call_result;
  TraceOperation 057186 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  Jump: 057191
LocOp 057191:
  TraceOperation 057191 (Je [Con 147,Var (Global 119)] (Branch T Dfalse));
  Let b1 = M[009055];
  Let b2 = M[009056];
  if (Equal(147,MakeHiLo(b1,b2))) {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  } else {
    TraceOperation 057195 (Je [Var (Global 120),Con 28,Con 14] (Branch F (Dloc 057477)));
    Let b4 = M[009057];
    Let b5 = M[009058];
    if (LogOr(Equal(MakeHiLo(b4,b5),28),Equal(MakeHiLo(b4,b5),14))) {
      TraceOperation 057202 (Test_attr (Con 147) (Con 18) (Branch F (Dloc 057253)));
      Let b6 = M[002066];
      if (TestBit(b6,5)) {
        TraceOperation 057206 (Print_ret "Alas, there's not much left of the candles. Certainly not enough to burn.");
        GamePrint "Alas, there's not much left of the candles. Certainly not enough to burn.\n";
        PopFrame return_address_7;
        JumpReturn: return_address_7, result: 1
      } else {
        Jump: 057253
      }
    } else {
      Jump: 057477
    }
  }
LocOp 057253:
  TraceOperation 057253 (Jz (Var (Global 119)) (Branch F (Dloc 057311)));
  Let b1 = M[009055];
  Let b2 = M[009056];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 057256 (Test_attr (Con 155) (Con 25) (Branch F (Dloc 057281)));
    Let b3 = M[002139];
    if (TestBit(b3,6)) {
      TraceOperation 057260 (Print "(with the match)");
      GamePrint "(with the match)";
      TraceOperation 057271 New_line;
      GamePrint "\n";
      TraceOperation 057272 (Call (Floc 022396) [Con 14,Con 147,Con 155] Sp);
      PushFrame 057272;
      SetLocal 1 14;
      SetLocal 2 147;
      SetLocal 3 155;
      JumpCall: 022396, #actuals: 3
    } else {
      Jump: 057281
    }
  } else {
    Jump: 057311
  }
LocReturn 057272:
  PushStack call_result;
  TraceOperation 057280 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 057281:
  TraceOperation 057281 (Print "You should say what to light them with.");
  GamePrint "You should say what to light them with.";
  TraceOperation 057308 New_line;
  GamePrint "\n";
  TraceOperation 057309 (Ret (Con 2));
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 2
LocOp 057311:
  TraceOperation 057311 (Je [Var (Global 119),Con 155] (Branch F (Dloc 057357)));
  Let b1 = M[009055];
  Let b2 = M[009056];
  if (Equal(MakeHiLo(b1,b2),155)) {
    TraceOperation 057315 (Test_attr (Con 155) (Con 20) (Branch F (Dloc 057357)));
    Let b3 = M[002138];
    if (TestBit(b3,3)) {
      TraceOperation 057319 (Print "The candles are ");
      GamePrint "The candles are ";
      TraceOperation 057324 (Test_attr (Con 147) (Con 20) (Branch F (Dloc 057335)));
      Let b4 = M[002066];
      if (TestBit(b4,3)) {
        TraceOperation 057328 (Print_ret "already lit.");
        GamePrint "already lit.\n";
        PopFrame return_address_5;
        JumpReturn: return_address_5, result: 1
      } else {
        Jump: 057335
      }
    } else {
      Jump: 057357
    }
  } else {
    Jump: 057357
  }
LocOp 057335:
  TraceOperation 057335 (Set_attr (Con 147) (Con 20));
  Let b1 = M[002066];
  SetByte 002066 SetBit(b1,3);
  TraceOperation 057338 (Print "lit.");
  GamePrint "lit.";
  TraceOperation 057343 New_line;
  GamePrint "\n";
  TraceOperation 057344 (Call (Floc 021638) [Con 28522] Sp);
  PushFrame 057344;
  SetLocal 1 28522;
  JumpCall: 021638, #actuals: 1
LocReturn 057344:
  PushStack call_result;
  TraceOperation 057351 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 057356 Rtrue;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: 1
LocOp 057357:
  TraceOperation 057357 (Je [Var (Global 119),Con 104] (Branch F (Dloc 057440)));
  Let b1 = M[009055];
  Let b2 = M[009056];
  if (Equal(MakeHiLo(b1,b2),104)) {
    TraceOperation 057362 (Test_attr (Con 147) (Con 20) (Branch F (Dloc 057397)));
    Let b3 = M[002066];
    if (TestBit(b3,3)) {
      TraceOperation 057366 (Print_ret "You realize, just in time, that the candles are already lighted.");
      GamePrint "You realize, just in time, that the candles are already lighted.\n";
      PopFrame return_address_4;
      JumpReturn: return_address_4, result: 1
    } else {
      Jump: 057397
    }
  } else {
    Jump: 057440
  }
LocOp 057397:
  TraceOperation 057397 (Print "The heat from the torch is so intense that the candles are vaporized.");
  GamePrint "The heat from the torch is so intense that the candles are vaporized.";
  TraceOperation 057432 New_line;
  GamePrint "\n";
  TraceOperation 057433 (Call (Floc 030906) [Con 147] Sp);
  PushFrame 057433;
  SetLocal 1 147;
  JumpCall: 030906, #actuals: 1
LocReturn 057433:
  PushStack call_result;
  TraceOperation 057439 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 057440:
  TraceOperation 057440 (Print_ret "You have to light them with something that's burning, you know.");
  GamePrint "You have to light them with something that's burning, you know.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 057477:
  TraceOperation 057477 (Je [Var (Global 120),Con 37] (Branch F (Dloc 057532)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),37)) {
    TraceOperation 057481 (Print_ret "Let's see, how many objects in a pair? Don't tell me, I'll get it.");
    GamePrint "Let's see, how many objects in a pair? Don't tell me, I'll get it.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 057532
  }
LocOp 057532:
  TraceOperation 057532 (Je [Var (Global 120),Con 22] (Branch F (Dloc 057616)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),22)) {
    TraceOperation 057537 (Call (Floc 021638) [Con 28522] Sp);
    PushFrame 057537;
    SetLocal 1 28522;
    JumpCall: 021638, #actuals: 1
  } else {
    Jump: 057616
  }
LocReturn 057537:
  PushStack call_result;
  TraceOperation 057544 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 057549 (Test_attr (Con 147) (Con 20) (Branch F (Dloc 057603)));
  Let b2 = M[002066];
  if (TestBit(b2,3)) {
    TraceOperation 057553 (Print "The flame is extinguished.");
    GamePrint "The flame is extinguished.";
    TraceOperation 057570 (Clear_attr (Con 147) (Con 20));
    Let b3 = M[002066];
    SetByte 002066 ClearBit(b3,3);
    TraceOperation 057573 (Call (Floc 027746) [Var (Global 0)] (Global 66));
    Let b4 = M[008817];
    Let b5 = M[008818];
    PushFrame 057573;
    SetLocal 1 MakeHiLo(b4,b5);
    JumpCall: 027746, #actuals: 1
  } else {
    Jump: 057603
  }
LocReturn 057573:
  SetByte 008949 HiByte(call_result);
  SetByte 008950 LoByte(call_result);
  TraceOperation 057579 (Jz (Var (Global 66)) (Branch F (Dloc 057601)));
  Let b1 = M[008949];
  Let b2 = M[008950];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 057582 (Print " It's really dark in here....");
    GamePrint " It's really dark in here....";
    Jump: 057601
  } else {
    Jump: 057601
  }
LocOp 057601:
  TraceOperation 057601 New_line;
  GamePrint "\n";
  TraceOperation 057602 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 057603:
  TraceOperation 057603 (Print_ret "The candles are not lighted.");
  GamePrint "The candles are not lighted.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 057616:
  TraceOperation 057616 (Je [Var (Global 120),Con 18] (Branch F (Dloc 057643)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),18)) {
    TraceOperation 057620 (Test_attr (Var (Global 119)) (Con 26) (Branch F (Dloc 057643)));
    Let b3 = M[009055];
    Let b4 = M[009056];
    Let b5 = M[Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),3)];
    if (TestBit(b5,5)) {
      TraceOperation 057624 (Print_ret "That wouldn't be smart.");
      GamePrint "That wouldn't be smart.\n";
      PopFrame return_address_6;
      JumpReturn: return_address_6, result: 1
    } else {
      Jump: 057643
    }
  } else {
    Jump: 057643
  }
LocOp 057643:
  TraceOperation 057643 (Je [Var (Global 120),Con 56] (Branch F Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),56)) {
    TraceOperation 057647 (Print "The candles are ");
    GamePrint "The candles are ";
    TraceOperation 057652 (Test_attr (Con 147) (Con 20) (Branch F (Dloc 057666)));
    Let b3 = M[002066];
    if (TestBit(b3,3)) {
      TraceOperation 057656 (Print "burning.");
      GamePrint "burning.";
      TraceOperation 057663 (Jump 057671);
      Jump: 057671
    } else {
      Jump: 057666
    }
  } else {
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 0
  }
LocOp 057666:
  TraceOperation 057666 (Print "out.");
  GamePrint "out.";
  Jump: 057671
LocOp 057671:
  TraceOperation 057671 New_line;
  GamePrint "\n";
  TraceOperation 057672 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[414]--------------------------------------------------
LocRoutine 057674:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 057677
LocOp 057677:
  TraceOperation 057677 (Je [Var (Local 1),Con 6] (Branch F Dfalse));
  if (Equal(GetLocal(1),6)) {
    TraceOperation 057681 (Jin (Con 147) (Var (Global 111)) (Branch F Dfalse));
    Let b1 = M[009039];
    Let b2 = M[009040];
    Let b3 = M[002068];
    if (Equal(MakeHiLo(b1,b2),Widen(b3))) {
      TraceOperation 057685 (Call (Floc 020034) [Con 50] Sp);
      PushFrame 057685;
      SetLocal 1 50;
      JumpCall: 020034, #actuals: 1
    } else {
      PopFrame return_address_4;
      JumpReturn: return_address_4, result: 0
    }
  } else {
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 0
  }
LocReturn 057685:
  PushStack call_result;
  TraceOperation 057691 (Jz (Var Sp) (Branch T Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  } else {
    TraceOperation 057694 (Test_attr (Con 147) (Con 20) (Branch F Dfalse));
    Let b3 = M[002066];
    if (TestBit(b3,3)) {
      TraceOperation 057698 (Call (Floc 021638) [Con 28522] Sp);
      PushFrame 057698;
      SetLocal 1 28522;
      JumpCall: 021638, #actuals: 1
    } else {
      PopFrame return_address_4;
      JumpReturn: return_address_4, result: 0
    }
  }
LocReturn 057698:
  PushStack call_result;
  TraceOperation 057705 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 057710 (Clear_attr (Con 147) (Con 20));
  Let b2 = M[002066];
  SetByte 002066 ClearBit(b2,3);
  TraceOperation 057713 (Print "A gust of wind blows out your candles!");
  GamePrint "A gust of wind blows out your candles!";
  TraceOperation 057736 New_line;
  GamePrint "\n";
  TraceOperation 057737 (Call (Floc 027746) [Var (Global 0)] (Global 66));
  Let b3 = M[008817];
  Let b4 = M[008818];
  PushFrame 057737;
  SetLocal 1 MakeHiLo(b3,b4);
  JumpCall: 027746, #actuals: 1
LocReturn 057737:
  SetByte 008949 HiByte(call_result);
  SetByte 008950 LoByte(call_result);
  TraceOperation 057743 (Jz (Var (Global 66)) (Branch F Dfalse));
  Let b1 = M[008949];
  Let b2 = M[008950];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 057746 (Print_ret "It is now completely dark.");
    GamePrint "It is now completely dark.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 0
  }
--[415]--------------------------------------------------
LocRoutine 057766:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 057769
LocOp 057769:
  TraceOperation 057769 (Je [Var (Global 120),Con 93] (Branch F (Dloc 057792)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),93)) {
    TraceOperation 057773 (Je [Var (Global 111),Con 4] (Branch F (Dloc 057792)));
    Let b3 = M[009039];
    Let b4 = M[009040];
    if (Equal(MakeHiLo(b3,b4),4)) {
      TraceOperation 057777 (Call (Floc 021618) [Con -32644,Con -1] Sp);
      PushFrame 057777;
      SetLocal 1 -32644;
      SetLocal 2 -1;
      JumpCall: 021618, #actuals: 2
    } else {
      Jump: 057792
    }
  } else {
    Jump: 057792
  }
LocReturn 057777:
  PushStack call_result;
  TraceOperation 057786 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 057791 Rfalse;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: 0
LocOp 057792:
  TraceOperation 057792 (Je [Var (Global 120),Con 56] (Branch F Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),56)) {
    TraceOperation 057796 (Get_prop (Con 110) (Con 12) (Local 1));
    Let b3 = M[001738];
    Let b4 = M[001739];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    Error: getPropsA
  } else {
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 0
  }
LocOp 057831:
  TraceOperation 057831 (Je [Var (Local 1),Con 2] (Branch F Dfalse));
  if (Equal(GetLocal(1),2)) {
    TraceOperation 057835 (Print_ret "Your sword is glowing very brightly.");
    GamePrint "Your sword is glowing very brightly.\n";
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 1
  } else {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  }
--[416]--------------------------------------------------
LocRoutine 057858:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 057865
LocOp 057865:
  TraceOperation 057865 (Je [Var (Local 1),Con 6] (Branch F Dfalse));
  if (Equal(GetLocal(1),6)) {
    TraceOperation 057869 (Je [Var (Local 1),Con 6] (Branch F (Dloc 057889)));
    if (Equal(GetLocal(1),6)) {
      TraceOperation 057873 (Je [Var (Global 120),Con 28,Con 14] (Branch F (Dloc 057889)));
      Let b1 = M[009057];
      Let b2 = M[009058];
      if (LogOr(Equal(MakeHiLo(b1,b2),28),Equal(MakeHiLo(b1,b2),14))) {
        TraceOperation 057879 (Je [Var (Global 118),Con 147,Con 104,Con 155] (Branch F (Dloc 057889)));
        Let b3 = M[009053];
        Let b4 = M[009054];
        if (LogOr(LogOr(Equal(MakeHiLo(b3,b4),147),Equal(MakeHiLo(b3,b4),104)),Equal(MakeHiLo(b3,b4),155))) {
          TraceOperation 057886 (Store (Con 2) (Con 1));
          SetLocal 2 1;
          Jump: 057889
        } else {
          Jump: 057889
        }
      } else {
        Jump: 057889
      }
    } else {
      Jump: 057889
    }
  } else {
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 0
  }
LocOp 057889:
  TraceOperation 057889 (Call (Floc 038124) [Con 147] Sp);
  PushFrame 057889;
  SetLocal 1 147;
  JumpCall: 038124, #actuals: 1
LocReturn 057889:
  PushStack call_result;
  TraceOperation 057895 (Jz (Var Sp) (Branch T (Dloc 057902)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 057902
  } else {
    TraceOperation 057898 (Test_attr (Con 147) (Con 20) (Branch T (Dloc 057928)));
    Let b2 = M[002066];
    if (TestBit(b2,3)) {
      Jump: 057928
    } else {
      Jump: 057902
    }
  }
LocOp 057902:
  TraceOperation 057902 (Call (Floc 038124) [Con 104] Sp);
  PushFrame 057902;
  SetLocal 1 104;
  JumpCall: 038124, #actuals: 1
LocReturn 057902:
  PushStack call_result;
  TraceOperation 057908 (Jz (Var Sp) (Branch T (Dloc 057915)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 057915
  } else {
    TraceOperation 057911 (Test_attr (Con 104) (Con 20) (Branch T (Dloc 057928)));
    Let b2 = M[001679];
    if (TestBit(b2,3)) {
      Jump: 057928
    } else {
      Jump: 057915
    }
  }
LocOp 057915:
  TraceOperation 057915 (Call (Floc 038124) [Con 155] Sp);
  PushFrame 057915;
  SetLocal 1 155;
  JumpCall: 038124, #actuals: 1
LocReturn 057915:
  PushStack call_result;
  TraceOperation 057921 (Jz (Var Sp) (Branch T Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  } else {
    TraceOperation 057924 (Test_attr (Con 155) (Con 20) (Branch F Dfalse));
    Let b3 = M[002138];
    if (TestBit(b3,3)) {
      Jump: 057928
    } else {
      PopFrame return_address_4;
      JumpReturn: return_address_4, result: 0
    }
  }
LocOp 057928:
  TraceOperation 057928 (Jz (Var (Local 2)) (Branch T (Dloc 058004)));
  if (IsZero(GetLocal(2))) {
    Jump: 058004
  } else {
    TraceOperation 057932 (Print "How sad for an aspiring adventurer to light a ");
    GamePrint "How sad for an aspiring adventurer to light a ";
    TraceOperation 057963 (Print_obj (Var (Global 118)));
    Let b1 = M[009053];
    Let b2 = M[009054];
    Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7)];
    Let b4 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7),1)];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    if (IsZeroByte(b5)) {
      GamePrint "";
      TraceOperation 057965 (Print " in a room which reeks of gas. Fortunately, there is justice in the world.");
      GamePrint " in a room which reeks of gas. Fortunately, there is justice in the world.";
      TraceOperation 058000 New_line;
      GamePrint "\n";
      TraceOperation 058001 (Jump 058078);
      Jump: 058078
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
      TraceOperation 057965 (Print " in a room which reeks of gas. Fortunately, there is justice in the world.");
      GamePrint " in a room which reeks of gas. Fortunately, there is justice in the world.";
      TraceOperation 058000 New_line;
      GamePrint "\n";
      TraceOperation 058001 (Jump 058078);
      Jump: 058078
    }
  }
LocOp 058004:
  TraceOperation 058004 (Print "Oh dear. It appears that the smell coming from this room was coal gas. I would have thought twice about carrying flaming objects in here.");
  GamePrint "Oh dear. It appears that the smell coming from this room was coal gas. I would have thought twice about carrying flaming objects in here.";
  TraceOperation 058077 New_line;
  GamePrint "\n";
  Jump: 058078
LocOp 058078:
  TraceOperation 058078 (Call (Floc 067174) [Con -24905] Sp);
  PushFrame 058078;
  SetLocal 1 -24905;
  JumpCall: 067174, #actuals: 1
LocReturn 058078:
  PushStack call_result;
  TraceOperation 058085 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[417]--------------------------------------------------
LocRoutine 058086:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 058089
LocOp 058089:
  TraceOperation 058089 (Get_parent (Con 189) Sp);
  Let b1 = M[002446];
  PushStack Widen(b1);
  TraceOperation 058092 (Je [Var Sp,Var (Global 111),Var (Global 0)] (Branch F (Dloc 058162)));
  PopStack popped2;
  Let b3 = M[009039];
  Let b4 = M[009040];
  Let b5 = M[008817];
  Let b6 = M[008818];
  if (LogOr(Equal(popped2,MakeHiLo(b3,b4)),Equal(popped2,MakeHiLo(b5,b6)))) {
    TraceOperation 058099 (Print_ret "In the corner of the room on the ceiling is a large vampire bat who is obviously deranged and holding his nose.");
    GamePrint "In the corner of the room on the ceiling is a large vampire bat who is obviously deranged and holding his nose.\n";
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 1
  } else {
    Jump: 058162
  }
LocOp 058162:
  TraceOperation 058162 (Print_ret "A large vampire bat, hanging from the ceiling, swoops down at you!");
  GamePrint "A large vampire bat, hanging from the ceiling, swoops down at you!\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[418]--------------------------------------------------
LocRoutine 058204:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 058207
LocOp 058207:
  TraceOperation 058207 (Je [Var (Local 1),Con 3] (Branch F (Dloc 058242)));
  if (Equal(GetLocal(1),3)) {
    TraceOperation 058211 (Print_ret "You are in a small room which has doors only to the east and south.");
    GamePrint "You are in a small room which has doors only to the east and south.\n";
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 1
  } else {
    Jump: 058242
  }
LocOp 058242:
  TraceOperation 058242 (Je [Var (Local 1),Con 2] (Branch F Dfalse));
  if (Equal(GetLocal(1),2)) {
    TraceOperation 058246 (Jz (Var (Global 62)) (Branch F Dfalse));
    Let b1 = M[008941];
    Let b2 = M[008942];
    if (IsZero(MakeHiLo(b1,b2))) {
      TraceOperation 058249 (Get_parent (Con 189) Sp);
      Let b3 = M[002446];
      PushStack Widen(b3);
      TraceOperation 058252 (Je [Var Sp,Var (Global 111),Var (Global 0)] (Branch T Dfalse));
      PopStack popped4;
      Let b5 = M[009039];
      Let b6 = M[009040];
      Let b7 = M[008817];
      Let b8 = M[008818];
      if (LogOr(Equal(popped4,MakeHiLo(b5,b6)),Equal(popped4,MakeHiLo(b7,b8)))) {
        PopFrame return_address_9;
        JumpReturn: return_address_9, result: 0
      } else {
        TraceOperation 058258 (Call (Floc 032260) [] Sp);
        PushFrame 058258;
        JumpCall: 032260, #actuals: 0
      }
    } else {
      PopFrame return_address_10;
      JumpReturn: return_address_10, result: 0
    }
  } else {
    PopFrame return_address_11;
    JumpReturn: return_address_11, result: 0
  }
LocReturn 058258:
  PushStack call_result;
  TraceOperation 058263 (Call (Floc 040338) [] Sp);
  PushFrame 058263;
  JumpCall: 040338, #actuals: 0
LocReturn 058263:
  PushStack call_result;
  TraceOperation 058268 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[419]--------------------------------------------------
LocRoutine 058270:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 058273
LocOp 058273:
  TraceOperation 058273 (Je [Var (Local 1),Con 3] (Branch F Dfalse));
  if (Equal(GetLocal(1),3)) {
    TraceOperation 058277 (Print "This is a large, cold room whose sole exit is to the north. In one corner there is a machine which is reminiscent of a clothes dryer. On its face is a switch which is labelled \"START\". The switch does not appear to be manipulable by any human hand (unless the fingers are about 1/16 by 1/4 inch). On the front of the machine is a large lid, which is ");
    GamePrint "This is a large, cold room whose sole exit is to the north. In one corner there is a machine which is reminiscent of a clothes dryer. On its face is a switch which is labelled \"START\". The switch does not appear to be manipulable by any human hand (unless the fingers are about 1/16 by 1/4 inch). On the front of the machine is a large lid, which is ";
    TraceOperation 058484 (Test_attr (Con 158) (Con 11) (Branch F (Dloc 058496)));
    Let b1 = M[002164];
    if (TestBit(b1,4)) {
      TraceOperation 058488 (Print "open.");
      GamePrint "open.";
      TraceOperation 058493 (Jump 058501);
      Jump: 058501
    } else {
      Jump: 058496
    }
  } else {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  }
LocOp 058496:
  TraceOperation 058496 (Print "closed.");
  GamePrint "closed.";
  Jump: 058501
LocOp 058501:
  TraceOperation 058501 New_line;
  GamePrint "\n";
  TraceOperation 058502 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[420]--------------------------------------------------
LocRoutine 058504:
  MakeRoutineFrame 0;
  Jump: 058505
LocOp 058505:
  TraceOperation 058505 (Je [Var (Global 120),Con 93] (Branch F (Dloc 058524)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),93)) {
    TraceOperation 058509 (Print_ret "It is far too large to carry.");
    GamePrint "It is far too large to carry.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 058524
  }
LocOp 058524:
  TraceOperation 058524 (Je [Var (Global 120),Con 43] (Branch F (Dloc 058594)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),43)) {
    TraceOperation 058529 (Test_attr (Con 158) (Con 11) (Branch F (Dloc 058543)));
    Let b3 = M[002164];
    if (TestBit(b3,4)) {
      TraceOperation 058533 (Call (Floc 020076) [Var (Global 52)] Sp);
      Let b4 = M[008921];
      Let b5 = M[008922];
      PushFrame 058533;
      SetLocal 1 MakeHiLo(b4,b5);
      JumpCall: 020076, #actuals: 1
    } else {
      Jump: 058543
    }
  } else {
    Jump: 058594
  }
LocReturn 058533:
  PushStack call_result;
  TraceOperation 058539 (Print_paddr (Var Sp));
  PopStack popped1;
  GamePrint GetText(PackedAddress Z3(popped1));
  TraceOperation 058541 New_line;
  GamePrint "\n";
  TraceOperation 058542 Rtrue;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: 1
LocOp 058543:
  TraceOperation 058543 (Get_child (Con 158) Sp (Branch F (Dloc 058578)));
  Let b1 = M[002169];
  PushStack Widen(b1);
  if (IsZero(Widen(b1))) {
    Jump: 058578
  } else {
    TraceOperation 058547 (Print "The lid opens, revealing ");
    GamePrint "The lid opens, revealing ";
    TraceOperation 058564 (Call (Floc 036440) [Con 158] Sp);
    PushFrame 058564;
    SetLocal 1 158;
    JumpCall: 036440, #actuals: 1
  }
LocReturn 058564:
  PushStack call_result;
  TraceOperation 058570 (Print ".");
  GamePrint ".";
  TraceOperation 058573 New_line;
  GamePrint "\n";
  TraceOperation 058574 (Set_attr (Con 158) (Con 11));
  Let b1 = M[002164];
  SetByte 002164 SetBit(b1,4);
  TraceOperation 058577 Rtrue;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: 1
--[421]--------------------------------------------------
LocRoutine 058672:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 058675
LocOp 058675:
  TraceOperation 058675 (Je [Var (Global 120),Con 89] (Branch F Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),89)) {
    TraceOperation 058679 (Je [Var (Global 119),Con 123] (Branch F (Dloc 058842)));
    Let b3 = M[009055];
    Let b4 = M[009056];
    if (Equal(MakeHiLo(b3,b4),123)) {
      TraceOperation 058684 (Test_attr (Con 158) (Con 11) (Branch F (Dloc 058715)));
      Let b5 = M[002164];
      if (TestBit(b5,4)) {
        TraceOperation 058688 (Print_ret "The machine doesn't seem to want to do anything.");
        GamePrint "The machine doesn't seem to want to do anything.\n";
        PopFrame return_address_6;
        JumpReturn: return_address_6, result: 1
      } else {
        Jump: 058715
      }
    } else {
      Jump: 058842
    }
  } else {
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 0
  }
LocOp 058715:
  TraceOperation 058715 (Print "The machine comes to life (figuratively) with a dazzling display of colored lights and bizarre noises. After a few moments, the excitement abates.");
  GamePrint "The machine comes to life (figuratively) with a dazzling display of colored lights and bizarre noises. After a few moments, the excitement abates.";
  TraceOperation 058810 New_line;
  GamePrint "\n";
  TraceOperation 058811 (Jin (Con 119) (Con 158) (Branch F (Dloc 058825)));
  Let b1 = M[001816];
  if (Equal(158,Widen(b1))) {
    TraceOperation 058815 (Call (Floc 030906) [Con 119] Sp);
    PushFrame 058815;
    SetLocal 1 119;
    JumpCall: 030906, #actuals: 1
  } else {
    Jump: 058825
  }
LocReturn 058815:
  PushStack call_result;
  TraceOperation 058821 (Insert_obj (Con 171) (Con 158));
  Let b1 = M[002284];
  if (IsZero(Widen(b1))) {
    SetByte 002284 158;
    Let b2 = M[002169];
    SetByte 002285 LoByte(Widen(b2));
    SetByte 002169 171;
    TraceOperation 058824 Rtrue;
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Let b4 = M[Offset(Offset(000741,Mul(Widen(b1),9)),6)];
    if (Equal(Widen(b4),171)) {
      Let b5 = M[002285];
      SetByte Offset(Offset(000741,Mul(Widen(b1),9)),6) LoByte(Widen(b5));
      SetByte 002284 158;
      Let b6 = M[002169];
      SetByte 002285 LoByte(Widen(b6));
      SetByte 002169 171;
      TraceOperation 058824 Rtrue;
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 1
    } else {
      Error: unlink/loop
    }
  }
--[422]--------------------------------------------------
LocRoutine 058834:
  MakeRoutineFrame 0;
  Jump: 058835
LocOp 058835:
  TraceOperation 058835 (Jump 058825);
  Jump: 058825
--[423]--------------------------------------------------
LocRoutine 058846:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 8500;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 24591;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 14942;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 16679;
        }
      }
    }
  }
  Jump: 058855
LocOp 058855:
  TraceOperation 058855 (Dec_chk (Con 52) (Var (Global 195)) (Branch F (Dloc 052463)));
  Let b1 = M[008889];
  Let b2 = M[008890];
  Let b3 = M[009207];
  Let b4 = M[009208];
  if (LessThanEqual(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    SetByte 008889 HiByte(Sub(MakeHiLo(b1,b2),1));
    SetByte 008890 LoByte(Sub(MakeHiLo(b1,b2),1));
    TraceOperation 058860 (Or (Var (Global 162)) (Con 150) (Global 53));
    Let b5 = M[009141];
    Let b6 = M[009142];
    SetByte 008923 HiByte(Or(MakeHiLo(b5,b6),150));
    SetByte 008924 LoByte(Or(MakeHiLo(b5,b6),150));
    TraceOperation 058864 (Print "It seems that a ");
    GamePrint "It seems that a ";
    TraceOperation 058871 (Print_obj (Var (Global 119)));
    Let b7 = M[009055];
    Let b8 = M[009056];
    Let b9 = M[Offset(Offset(000741,Mul(MakeHiLo(b7,b8),9)),7)];
    Let b10 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b7,b8),9)),7),1)];
    Let b11 = M[Address(MakeHiLo(b9,b10))];
    if (IsZeroByte(b11)) {
      GamePrint "";
      TraceOperation 058873 (Print_ret " won't do.");
      GamePrint " won't do.\n";
      PopFrame return_address_12;
      JumpReturn: return_address_12, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b9,b10)),1));
      TraceOperation 058873 (Print_ret " won't do.");
      GamePrint " won't do.\n";
      PopFrame return_address_13;
      JumpReturn: return_address_13, result: 1
    }
  } else {
    SetByte 008889 HiByte(Sub(MakeHiLo(b1,b2),1));
    SetByte 008890 LoByte(Sub(MakeHiLo(b1,b2),1));
    Jump: 052463
  }
--[424]--------------------------------------------------
LocRoutine 058880:
  MakeRoutineFrame 0;
  Jump: 058881
LocOp 058881:
  TraceOperation 058881 (Call (Floc 030906) [Con 146] Sp);
  PushFrame 058881;
  SetLocal 1 146;
  JumpCall: 030906, #actuals: 1
LocReturn 058881:
  PushStack call_result;
  TraceOperation 058887 (Print_ret "The slag was rather insubstantial, and crumbles into dust at your touch.");
  GamePrint "The slag was rather insubstantial, and crumbles into dust at your touch.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[425]--------------------------------------------------
LocRoutine 058930:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 058935
LocOp 058935:
  TraceOperation 058935 (Je [Var (Local 1),Con 1] (Branch F Dfalse));
  if (Equal(GetLocal(1),1)) {
    TraceOperation 058939 (Get_child (Var (Global 111)) (Local 2) (Branch T (Dloc 058943)));
    Let b1 = M[009039];
    Let b2 = M[009040];
    Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),6)];
    SetLocal 2 Widen(b3);
    if (IsZero(Widen(b3))) {
      TraceOperation 058943 (Store (Con 162) (Con 1));
      SetByte 009109 0;
      SetByte 009110 1;
      Jump: 058946
    } else {
      TraceOperation 058943 (Store (Con 162) (Con 1));
      SetByte 009109 0;
      SetByte 009110 1;
      Jump: 058946
    }
  } else {
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 0
  }
LocOp 058946:
  TraceOperation 058946 (Jz (Var (Local 2)) (Branch F (Dloc 058952)));
  if (IsZero(GetLocal(2))) {
    TraceOperation 058949 (Jump 058975);
    Jump: 058975
  } else {
    Jump: 058952
  }
LocOp 058952:
  TraceOperation 058952 (Call (Floc 037420) [Var (Local 2)] Sp);
  PushFrame 058952;
  SetLocal 1 GetLocal(2);
  JumpCall: 037420, #actuals: 1
LocReturn 058952:
  PushStack call_result;
  TraceOperation 058958 (Jg (Var Sp) (Con 4) (Branch F (Dloc 058968)));
  PopStack popped1;
  if (GreaterThan(popped1,4)) {
    TraceOperation 058962 (Store (Con 162) (Con 0));
    SetByte 009109 0;
    SetByte 009110 0;
    TraceOperation 058965 (Jump 058975);
    Jump: 058975
  } else {
    Jump: 058968
  }
LocOp 058968:
  TraceOperation 058968 (Get_sibling (Var (Local 2)) (Local 2) (Branch T (Dloc 058972)));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(2),9)),5)];
  SetLocal 2 Widen(b1);
  if (IsZero(Widen(b1))) {
    TraceOperation 058972 (Jump 058946);
    Jump: 058946
  } else {
    TraceOperation 058972 (Jump 058946);
    Jump: 058946
  }
LocOp 058975:
  TraceOperation 058975 (Je [Var (Global 0),Con 228] (Branch F Dfalse));
  Let b1 = M[008817];
  Let b2 = M[008818];
  if (Equal(MakeHiLo(b1,b2),228)) {
    TraceOperation 058979 (Jz (Var (Global 66)) (Branch T Dfalse));
    Let b3 = M[008949];
    Let b4 = M[008950];
    if (IsZero(MakeHiLo(b3,b4))) {
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 0
    } else {
      TraceOperation 058982 (Call (Floc 036962) [Var (Global 24)] Sp);
      Let b6 = M[008865];
      Let b7 = M[008866];
      PushFrame 058982;
      SetLocal 1 MakeHiLo(b6,b7);
      JumpCall: 036962, #actuals: 1
    }
  } else {
    PopFrame return_address_8;
    JumpReturn: return_address_8, result: 0
  }
LocReturn 058982:
  PushStack call_result;
  TraceOperation 058988 (Store (Con 40) (Con 0));
  SetByte 008865 0;
  SetByte 008866 0;
  TraceOperation 058991 Rfalse;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 0
--[426]--------------------------------------------------
LocRoutine 058992:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 058995
LocOp 058995:
  TraceOperation 058995 (Je [Var (Local 1),Con 1] (Branch F Dfalse));
  if (Equal(GetLocal(1),1)) {
    TraceOperation 058999 (Jin (Con 208) (Var (Global 111)) (Branch T (Dloc 059009)));
    Let b1 = M[009039];
    Let b2 = M[009040];
    Let b3 = M[002617];
    if (Equal(MakeHiLo(b1,b2),Widen(b3))) {
      Jump: 059009
    } else {
      TraceOperation 059003 (Push (Con 1));
      PushStack 1;
      TraceOperation 059006 (Jump 059012);
      Jump: 059012
    }
  } else {
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 0
  }
--[427]--------------------------------------------------
LocRoutine 059014:
  MakeRoutineFrame 0;
  Jump: 059015
LocOp 059015:
  TraceOperation 059015 Rfalse;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 0
--[428]--------------------------------------------------
LocRoutine 059016:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 059019
LocOp 059019:
  TraceOperation 059019 (Je [Var (Local 1),Con 6] (Branch F Dfalse));
  if (Equal(GetLocal(1),6)) {
    TraceOperation 059023 (Jin (Con 156) (Var (Global 111)) (Branch F (Dloc 059032)));
    Let b1 = M[009039];
    Let b2 = M[009040];
    Let b3 = M[002149];
    if (Equal(MakeHiLo(b1,b2),Widen(b3))) {
      TraceOperation 059027 (Store (Con 164) (Con 0));
      SetByte 009113 0;
      SetByte 009114 0;
      TraceOperation 059030 (Ret (Var (Global 148)));
      Let b4 = M[009113];
      Let b5 = M[009114];
      PopFrame return_address_6;
      JumpReturn: return_address_6, result: MakeHiLo(b4,b5)
    } else {
      Jump: 059032
    }
  } else {
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 0
  }
--[429]--------------------------------------------------
LocRoutine 059038:
  MakeRoutineFrame 0;
  Jump: 059039
LocOp 059039:
  TraceOperation 059039 (Je [Var (Global 120),Con 105,Con 140] (Branch F Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (LogOr(Equal(MakeHiLo(b1,b2),105),Equal(MakeHiLo(b1,b2),140))) {
    TraceOperation 059045 (Je [Var (Global 0),Con 29] (Branch T (Dloc 059054)));
    Let b3 = M[008817];
    Let b4 = M[008818];
    if (Equal(MakeHiLo(b3,b4),29)) {
      Jump: 059054
    } else {
      TraceOperation 059049 (Je [Var (Global 0),Con 136] (Branch F (Dloc 059232)));
      Let b5 = M[008817];
      Let b6 = M[008818];
      if (Equal(MakeHiLo(b5,b6),136)) {
        Jump: 059054
      } else {
        Jump: 059232
      }
    }
  } else {
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 0
  }
LocOp 059054:
  TraceOperation 059054 (Jz (Var (Global 142)) (Branch F (Dloc 059182)));
  Let b1 = M[009101];
  Let b2 = M[009102];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 059058 (Clear_attr (Con 137) (Con 7));
    Let b3 = M[001974];
    SetByte 001974 ClearBit(b3,0);
    TraceOperation 059061 (Print "Suddenly, the rainbow appears to become solid and, I venture, walkable (I think the giveaway was the stairs and bannister).");
    GamePrint "Suddenly, the rainbow appears to become solid and, I venture, walkable (I think the giveaway was the stairs and bannister).";
    TraceOperation 059134 New_line;
    GamePrint "\n";
    TraceOperation 059135 (Je [Var (Global 0),Con 136] (Branch F (Dloc 059177)));
    Let b4 = M[008817];
    Let b5 = M[008818];
    if (Equal(MakeHiLo(b4,b5),136)) {
      TraceOperation 059139 (Jin (Con 137) (Con 136) (Branch F (Dloc 059177)));
      Let b6 = M[001978];
      if (Equal(136,Widen(b6))) {
        TraceOperation 059143 (Print "A shimmering pot of gold appears at the end of the rainbow.");
        GamePrint "A shimmering pot of gold appears at the end of the rainbow.";
        TraceOperation 059176 New_line;
        GamePrint "\n";
        Jump: 059177
      } else {
        Jump: 059177
      }
    } else {
      Jump: 059177
    }
  } else {
    Jump: 059182
  }
LocOp 059177:
  TraceOperation 059177 (Store (Con 158) (Con 1));
  SetByte 009101 0;
  SetByte 009102 1;
  TraceOperation 059180 (Ret (Var (Global 142)));
  Let b1 = M[009101];
  Let b2 = M[009102];
  PopFrame return_address_3;
  JumpReturn: return_address_3, result: MakeHiLo(b1,b2)
LocOp 059182:
  TraceOperation 059182 (Call (Floc 066488) [Con 28,Con 246] Sp);
  PushFrame 059182;
  SetLocal 1 28;
  SetLocal 2 246;
  JumpCall: 066488, #actuals: 2
LocReturn 059182:
  PushStack call_result;
  TraceOperation 059189 (Print "The rainbow seems to have become somewhat run-of-the-mill.");
  GamePrint "The rainbow seems to have become somewhat run-of-the-mill.";
  TraceOperation 059226 New_line;
  GamePrint "\n";
  TraceOperation 059227 (Store (Con 158) (Con 0));
  SetByte 009101 0;
  SetByte 009102 0;
  TraceOperation 059230 (Ret (Var (Global 142)));
  Let b1 = M[009101];
  Let b2 = M[009102];
  PopFrame return_address_3;
  JumpReturn: return_address_3, result: MakeHiLo(b1,b2)
LocOp 059232:
  TraceOperation 059232 (Je [Var (Global 0),Con 28] (Branch F (Dloc 059247)));
  Let b1 = M[008817];
  Let b2 = M[008818];
  if (Equal(MakeHiLo(b1,b2),28)) {
    TraceOperation 059236 (Store (Con 158) (Con 0));
    SetByte 009101 0;
    SetByte 009102 0;
    TraceOperation 059239 (Call (Floc 067174) [Con -24887] Sp);
    PushFrame 059239;
    SetLocal 1 -24887;
    JumpCall: 067174, #actuals: 1
  } else {
    Jump: 059247
  }
LocReturn 059239:
  PushStack call_result;
  TraceOperation 059246 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 059247:
  TraceOperation 059247 (Print_ret "A dazzling display of color briefly emanates from the sceptre.");
  GamePrint "A dazzling display of color briefly emanates from the sceptre.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[430]--------------------------------------------------
LocRoutine 059286:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 059289
LocOp 059289:
  TraceOperation 059289 (Je [Var (Local 1),Con 3] (Branch F Dfalse));
  if (Equal(GetLocal(1),3)) {
    TraceOperation 059293 (Print "You are at the top of Aragain Falls, an enormous waterfall with a drop of about 450 feet. The only path here is on the north end.");
    GamePrint "You are at the top of Aragain Falls, an enormous waterfall with a drop of about 450 feet. The only path here is on the north end.";
    TraceOperation 059364 New_line;
    GamePrint "\n";
    TraceOperation 059365 (Jz (Var (Global 142)) (Branch T (Dloc 059394)));
    Let b1 = M[009101];
    Let b2 = M[009102];
    if (IsZero(MakeHiLo(b1,b2))) {
      Jump: 059394
    } else {
      TraceOperation 059368 (Print "A solid rainbow spans the falls.");
      GamePrint "A solid rainbow spans the falls.";
      TraceOperation 059391 (Jump 059429);
      Jump: 059429
    }
  } else {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  }
LocOp 059394:
  TraceOperation 059394 (Print "A beautiful rainbow can be seen over the falls and to the west.");
  GamePrint "A beautiful rainbow can be seen over the falls and to the west.";
  Jump: 059429
LocOp 059429:
  TraceOperation 059429 New_line;
  GamePrint "\n";
  TraceOperation 059430 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[431]--------------------------------------------------
LocRoutine 059432:
  MakeRoutineFrame 0;
  Jump: 059433
LocOp 059433:
  TraceOperation 059433 (Je [Var (Global 120),Con 34,Con 38] (Branch F (Dloc 059518)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (LogOr(Equal(MakeHiLo(b1,b2),34),Equal(MakeHiLo(b1,b2),38))) {
    TraceOperation 059440 (Je [Var (Global 0),Con 25] (Branch F (Dloc 059455)));
    Let b3 = M[008817];
    Let b4 = M[008818];
    if (Equal(MakeHiLo(b3,b4),25)) {
      TraceOperation 059444 (Print_ret "From here?!?");
      GamePrint "From here?!?\n";
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 1
    } else {
      Jump: 059455
    }
  } else {
    Jump: 059518
  }
LocOp 059455:
  TraceOperation 059455 (Jz (Var (Global 142)) (Branch T (Dloc 059501)));
  Let b1 = M[009101];
  Let b2 = M[009102];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 059501
  } else {
    TraceOperation 059458 (Je [Var (Global 0),Con 29] (Branch F (Dloc 059469)));
    Let b3 = M[008817];
    Let b4 = M[008818];
    if (Equal(MakeHiLo(b3,b4),29)) {
      TraceOperation 059462 (Call (Floc 037558) [Con 136] Sp);
      PushFrame 059462;
      SetLocal 1 136;
      JumpCall: 037558, #actuals: 1
    } else {
      Jump: 059469
    }
  }
LocReturn 059462:
  PushStack call_result;
  TraceOperation 059468 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 059469:
  TraceOperation 059469 (Je [Var (Global 0),Con 136] (Branch F (Dloc 059480)));
  Let b1 = M[008817];
  Let b2 = M[008818];
  if (Equal(MakeHiLo(b1,b2),136)) {
    TraceOperation 059473 (Call (Floc 037558) [Con 29] Sp);
    PushFrame 059473;
    SetLocal 1 29;
    JumpCall: 037558, #actuals: 1
  } else {
    Jump: 059480
  }
LocReturn 059473:
  PushStack call_result;
  TraceOperation 059479 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 059480:
  TraceOperation 059480 (Print_ret "You'll have to say which way...");
  GamePrint "You'll have to say which way...\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 059501:
  TraceOperation 059501 (Print_ret "Can you walk on water vapor?");
  GamePrint "Can you walk on water vapor?\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 059518:
  TraceOperation 059518 (Je [Var (Global 120),Con 81] (Branch F Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),81)) {
    TraceOperation 059522 (Print_ret "The Frigid River flows under the rainbow.");
    GamePrint "The Frigid River flows under the rainbow.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 0
  }
--[432]--------------------------------------------------
LocRoutine 059548:
  MakeRoutineFrame 0;
  Jump: 059549
LocOp 059549:
  TraceOperation 059549 (Je [Var (Global 120),Con 50,Con 18] (Branch F (Dloc 059565)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (LogOr(Equal(MakeHiLo(b1,b2),50),Equal(MakeHiLo(b1,b2),18))) {
    TraceOperation 059555 (Je [Var (Global 118),Con 98] (Branch F (Dloc 059565)));
    Let b3 = M[009053];
    Let b4 = M[009054];
    if (Equal(MakeHiLo(b3,b4),98)) {
      TraceOperation 059559 (Call (Floc 059620) [] Sp);
      PushFrame 059559;
      JumpCall: 059620, #actuals: 0
    } else {
      Jump: 059565
    }
  } else {
    Jump: 059565
  }
LocReturn 059559:
  PushStack call_result;
  TraceOperation 059564 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 059565:
  TraceOperation 059565 (Je [Var (Global 120),Con 59,Con 23] (Branch F (Dloc 059598)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (LogOr(Equal(MakeHiLo(b1,b2),59),Equal(MakeHiLo(b1,b2),23))) {
    TraceOperation 059571 (Print_ret "No chance. Some moron punctured it.");
    GamePrint "No chance. Some moron punctured it.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 059598
  }
LocOp 059598:
  TraceOperation 059598 (Je [Var (Global 120),Con 95] (Branch F Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),95)) {
    TraceOperation 059602 (Je [Var (Global 119),Con 98] (Branch F (Dloc 059612)));
    Let b3 = M[009055];
    Let b4 = M[009056];
    if (Equal(MakeHiLo(b3,b4),98)) {
      TraceOperation 059606 (Call (Floc 059620) [] Sp);
      PushFrame 059606;
      JumpCall: 059620, #actuals: 0
    } else {
      Jump: 059612
    }
  } else {
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 0
  }
LocReturn 059606:
  PushStack call_result;
  TraceOperation 059611 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 059612:
  TraceOperation 059612 (Call (Floc 049406) [Var (Global 119)] Sp);
  Let b1 = M[009055];
  Let b2 = M[009056];
  PushFrame 059612;
  SetLocal 1 MakeHiLo(b1,b2);
  JumpCall: 049406, #actuals: 1
LocReturn 059612:
  PushStack call_result;
  TraceOperation 059618 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[433]--------------------------------------------------
LocRoutine 059620:
  MakeRoutineFrame 0;
  Jump: 059621
LocOp 059621:
  TraceOperation 059621 (Print "Well done. The boat is repaired.");
  GamePrint "Well done. The boat is repaired.";
  TraceOperation 059644 New_line;
  GamePrint "\n";
  TraceOperation 059645 (Get_parent (Con 142) Sp);
  Let b1 = M[002023];
  PushStack Widen(b1);
  TraceOperation 059648 (Insert_obj (Con 141) (Var Sp));
  PopStack popped2;
  Let b3 = M[002014];
  if (IsZero(Widen(b3))) {
    SetByte 002014 LoByte(popped2);
    Let b4 = M[Offset(Offset(000741,Mul(popped2,9)),6)];
    SetByte 002015 LoByte(Widen(b4));
    SetByte Offset(Offset(000741,Mul(popped2,9)),6) 141;
    TraceOperation 059651 (Call (Floc 030906) [Con 142] Sp);
    PushFrame 059651;
    SetLocal 1 142;
    JumpCall: 030906, #actuals: 1
  } else {
    Let b5 = M[Offset(Offset(000741,Mul(Widen(b3),9)),6)];
    if (Equal(Widen(b5),141)) {
      Let b6 = M[002015];
      SetByte Offset(Offset(000741,Mul(Widen(b3),9)),6) LoByte(Widen(b6));
      SetByte 002014 LoByte(popped2);
      Let b7 = M[Offset(Offset(000741,Mul(popped2,9)),6)];
      SetByte 002015 LoByte(Widen(b7));
      SetByte Offset(Offset(000741,Mul(popped2,9)),6) 141;
      TraceOperation 059651 (Call (Floc 030906) [Con 142] Sp);
      PushFrame 059651;
      SetLocal 1 142;
      JumpCall: 030906, #actuals: 1
    } else {
      Error: unlink/loop
    }
  }
LocReturn 059651:
  PushStack call_result;
  TraceOperation 059657 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[434]--------------------------------------------------
LocRoutine 059658:
  MakeRoutineFrame 0;
  Jump: 059659
LocOp 059659:
  TraceOperation 059659 (Je [Var (Global 120),Con 18] (Branch F (Dloc 059785)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),18)) {
    TraceOperation 059664 (Je [Var (Global 119),Con 131] (Branch F Dfalse));
    Let b3 = M[009055];
    Let b4 = M[009056];
    if (Equal(MakeHiLo(b3,b4),131)) {
      TraceOperation 059668 (Je [Var (Global 118),Con 5] (Branch F (Dloc 059680)));
      Let b5 = M[009053];
      Let b6 = M[009054];
      if (Equal(MakeHiLo(b5,b6),5)) {
        TraceOperation 059672 (Call (Floc 067174) [Con -24846] Sp);
        PushFrame 059672;
        SetLocal 1 -24846;
        JumpCall: 067174, #actuals: 1
      } else {
        Jump: 059680
      }
    } else {
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 0
    }
  } else {
    Jump: 059785
  }
LocReturn 059672:
  PushStack call_result;
  TraceOperation 059679 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 059680:
  TraceOperation 059680 (Je [Var (Global 118),Con 156] (Branch F (Dloc 059711)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  if (Equal(MakeHiLo(b1,b2),156)) {
    TraceOperation 059684 (Print_ret "You should get in the boat then launch it.");
    GamePrint "You should get in the boat then launch it.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 059711
  }
LocOp 059711:
  TraceOperation 059711 (Test_attr (Var (Global 118)) (Con 26) (Branch F (Dloc 059749)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),3)];
  if (TestBit(b3,5)) {
    TraceOperation 059715 (Call (Floc 030906) [Var (Global 118)] Sp);
    Let b4 = M[009053];
    Let b5 = M[009054];
    PushFrame 059715;
    SetLocal 1 MakeHiLo(b4,b5);
    JumpCall: 030906, #actuals: 1
  } else {
    Jump: 059749
  }
LocReturn 059715:
  PushStack call_result;
  TraceOperation 059721 (Print "The ");
  GamePrint "The ";
  TraceOperation 059724 (Print_obj (Var (Global 118)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  if (IsZeroByte(b5)) {
    GamePrint "";
    TraceOperation 059726 (Print_ret " floats for a moment, then sinks.");
    GamePrint " floats for a moment, then sinks.\n";
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
    TraceOperation 059726 (Print_ret " floats for a moment, then sinks.");
    GamePrint " floats for a moment, then sinks.\n";
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 1
  }
LocOp 059749:
  TraceOperation 059749 (Call (Floc 030906) [Var (Global 118)] Sp);
  Let b1 = M[009053];
  Let b2 = M[009054];
  PushFrame 059749;
  SetLocal 1 MakeHiLo(b1,b2);
  JumpCall: 030906, #actuals: 1
LocReturn 059749:
  PushStack call_result;
  TraceOperation 059755 (Print "The ");
  GamePrint "The ";
  TraceOperation 059758 (Print_obj (Var (Global 118)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  if (IsZeroByte(b5)) {
    GamePrint "";
    TraceOperation 059760 (Print_ret " splashes into the water and is gone forever.");
    GamePrint " splashes into the water and is gone forever.\n";
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
    TraceOperation 059760 (Print_ret " splashes into the water and is gone forever.");
    GamePrint " splashes into the water and is gone forever.\n";
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 1
  }
LocOp 059785:
  TraceOperation 059785 (Je [Var (Global 120),Con 34,Con 69] (Branch F Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (LogOr(Equal(MakeHiLo(b1,b2),34),Equal(MakeHiLo(b1,b2),69))) {
    TraceOperation 059791 (Print_ret "A look before leaping reveals that the river is wide and dangerous, with swift currents and large, half-hidden rocks. You decide to forgo your swim.");
    GamePrint "A look before leaping reveals that the river is wide and dangerous, with swift currents and large, half-hidden rocks. You decide to forgo your swim.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 0
  }
--[435]--------------------------------------------------
LocRoutine 059874:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 059877
LocOp 059877:
  TraceOperation 059877 (Je [Var (Global 0),Con 36,Con 35,Con 34] (Branch T (Dloc 059903)));
  Let b1 = M[008817];
  Let b2 = M[008818];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),36),Equal(MakeHiLo(b1,b2),35)),Equal(MakeHiLo(b1,b2),34))) {
    Jump: 059903
  } else {
    TraceOperation 059884 (Je [Var (Global 0),Con 130,Con 31] (Branch T (Dloc 059903)));
    Let b3 = M[008817];
    Let b4 = M[008818];
    if (LogOr(Equal(MakeHiLo(b3,b4),130),Equal(MakeHiLo(b3,b4),31))) {
      Jump: 059903
    } else {
      TraceOperation 059890 (Call (Floc 021638) [Con 29937] Sp);
      PushFrame 059890;
      SetLocal 1 29937;
      JumpCall: 021638, #actuals: 1
    }
  }
LocReturn 059890:
  PushStack call_result;
  TraceOperation 059897 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 059902 Rtrue;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: 1
LocOp 059903:
  TraceOperation 059903 (Call (Floc 037960) [Var (Global 0),Var (Global 22)] (Local 1));
  Let b1 = M[008817];
  Let b2 = M[008818];
  Let b3 = M[008861];
  Let b4 = M[008862];
  PushFrame 059903;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 MakeHiLo(b3,b4);
  JumpCall: 037960, #actuals: 2
LocReturn 059903:
  SetLocal 1 call_result;
  TraceOperation 059910 (Jz (Var (Local 1)) (Branch T (Dloc 059967)));
  if (IsZero(GetLocal(1))) {
    Jump: 059967
  } else {
    TraceOperation 059913 (Print "The flow of the river carries you downstream.");
    GamePrint "The flow of the river carries you downstream.";
    TraceOperation 059938 New_line;
    GamePrint "\n";
    TraceOperation 059939 New_line;
    GamePrint "\n";
    TraceOperation 059940 (Call (Floc 037558) [Var (Local 1)] Sp);
    PushFrame 059940;
    SetLocal 1 GetLocal(1);
    JumpCall: 037558, #actuals: 1
  }
LocReturn 059940:
  PushStack call_result;
  TraceOperation 059946 (Call (Floc 037960) [Var (Global 0),Var (Global 23)] Sp);
  Let b1 = M[008817];
  Let b2 = M[008818];
  Let b3 = M[008863];
  Let b4 = M[008864];
  PushFrame 059946;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 MakeHiLo(b3,b4);
  JumpCall: 037960, #actuals: 2
LocReturn 059946:
  PushStack call_result;
  TraceOperation 059953 (Call (Floc 021618) [Con 29937,Var Sp] Sp);
  PopStack popped1;
  PushFrame 059953;
  SetLocal 1 29937;
  SetLocal 2 popped1;
  JumpCall: 021618, #actuals: 2
LocReturn 059953:
  PushStack call_result;
  TraceOperation 059961 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 059966 Rtrue;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: 1
LocOp 059967:
  TraceOperation 059967 (Call (Floc 067174) [Con -24825] Sp);
  PushFrame 059967;
  SetLocal 1 -24825;
  JumpCall: 067174, #actuals: 1
LocReturn 059967:
  PushStack call_result;
  TraceOperation 059974 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[436]--------------------------------------------------
LocRoutine 059976:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 059981
LocOp 059981:
  TraceOperation 059981 (Je [Var (Local 1),Con 2,Con 6,Con 3] (Branch T Dfalse));
  if (LogOr(LogOr(Equal(GetLocal(1),2),Equal(GetLocal(1),6)),Equal(GetLocal(1),3))) {
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 0
  } else {
    TraceOperation 059988 (Je [Var (Local 1),Con 1] (Branch F (Dloc 060380)));
    if (Equal(GetLocal(1),1)) {
      TraceOperation 059993 (Je [Var (Global 120),Con 137] (Branch F (Dloc 060051)));
      Let b2 = M[009057];
      Let b3 = M[009058];
      if (Equal(MakeHiLo(b2,b3),137)) {
        TraceOperation 059997 (Je [Var (Global 118),Con 19,Con 30,Con 29] (Branch T Dfalse));
        Let b4 = M[009053];
        Let b5 = M[009054];
        if (LogOr(LogOr(Equal(MakeHiLo(b4,b5),19),Equal(MakeHiLo(b4,b5),30)),Equal(MakeHiLo(b4,b5),29))) {
          PopFrame return_address_6;
          JumpReturn: return_address_6, result: 0
        } else {
          TraceOperation 060004 (Je [Var (Global 0),Con 100] (Branch F (Dloc 060014)));
          Let b7 = M[008817];
          Let b8 = M[008818];
          if (Equal(MakeHiLo(b7,b8),100)) {
            TraceOperation 060008 (Je [Var (Global 118),Con 31,Con 28] (Branch T Dfalse));
            Let b9 = M[009053];
            Let b10 = M[009054];
            if (LogOr(Equal(MakeHiLo(b9,b10),31),Equal(MakeHiLo(b9,b10),28))) {
              PopFrame return_address_11;
              JumpReturn: return_address_11, result: 0
            } else {
              Jump: 060014
            }
          } else {
            Jump: 060014
          }
        }
      } else {
        Jump: 060051
      }
    } else {
      Jump: 060380
    }
  }
LocOp 060014:
  TraceOperation 060014 (Je [Var (Global 0),Con 48] (Branch F (Dloc 060022)));
  Let b1 = M[008817];
  Let b2 = M[008818];
  if (Equal(MakeHiLo(b1,b2),48)) {
    TraceOperation 060018 (Je [Var (Global 118),Con 28] (Branch T Dfalse));
    Let b3 = M[009053];
    Let b4 = M[009054];
    if (Equal(MakeHiLo(b3,b4),28)) {
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 0
    } else {
      Jump: 060022
    }
  } else {
    Jump: 060022
  }
LocOp 060022:
  TraceOperation 060022 (Print_ret "Read the label for the boat's instructions.");
  GamePrint "Read the label for the boat's instructions.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 060051:
  TraceOperation 060051 (Je [Var (Global 120),Con 74] (Branch F (Dloc 060171)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),74)) {
    TraceOperation 060056 (Je [Var (Global 0),Con 36,Con 35,Con 34] (Branch T (Dloc 060070)));
    Let b3 = M[008817];
    Let b4 = M[008818];
    if (LogOr(LogOr(Equal(MakeHiLo(b3,b4),36),Equal(MakeHiLo(b3,b4),35)),Equal(MakeHiLo(b3,b4),34))) {
      Jump: 060070
    } else {
      TraceOperation 060063 (Je [Var (Global 0),Con 130,Con 100,Con 48] (Branch F (Dloc 060123)));
      Let b5 = M[008817];
      Let b6 = M[008818];
      if (LogOr(LogOr(Equal(MakeHiLo(b5,b6),130),Equal(MakeHiLo(b5,b6),100)),Equal(MakeHiLo(b5,b6),48))) {
        Jump: 060070
      } else {
        Jump: 060123
      }
    }
  } else {
    Jump: 060171
  }
LocOp 060070:
  TraceOperation 060070 (Print "You are on the ");
  GamePrint "You are on the ";
  TraceOperation 060077 (Je [Var (Global 0),Con 100] (Branch F (Dloc 060091)));
  Let b1 = M[008817];
  Let b2 = M[008818];
  if (Equal(MakeHiLo(b1,b2),100)) {
    TraceOperation 060081 (Print "reservoir");
    GamePrint "reservoir";
    TraceOperation 060088 (Jump 060108);
    Jump: 060108
  } else {
    Jump: 060091
  }
LocOp 060091:
  TraceOperation 060091 (Je [Var (Global 0),Con 48] (Branch F (Dloc 060103)));
  Let b1 = M[008817];
  Let b2 = M[008818];
  if (Equal(MakeHiLo(b1,b2),48)) {
    TraceOperation 060095 (Print "stream");
    GamePrint "stream";
    TraceOperation 060100 (Jump 060108);
    Jump: 060108
  } else {
    Jump: 060103
  }
LocOp 060103:
  TraceOperation 060103 (Print "river");
  GamePrint "river";
  Jump: 060108
LocOp 060108:
  TraceOperation 060108 (Print_ret ", or have you forgotten?");
  GamePrint ", or have you forgotten?\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 060123:
  TraceOperation 060123 (Call (Floc 037934) [Var (Global 21)] (Local 2));
  Let b1 = M[008859];
  Let b2 = M[008860];
  PushFrame 060123;
  SetLocal 1 MakeHiLo(b1,b2);
  JumpCall: 037934, #actuals: 1
LocReturn 060123:
  SetLocal 2 call_result;
  TraceOperation 060129 (Je [Var (Local 2),Con 1] (Branch F (Dloc 060154)));
  if (Equal(GetLocal(2),1)) {
    TraceOperation 060133 (Call (Floc 037960) [Var (Global 0),Var (Global 23)] Sp);
    Let b1 = M[008817];
    Let b2 = M[008818];
    Let b3 = M[008863];
    Let b4 = M[008864];
    PushFrame 060133;
    SetLocal 1 MakeHiLo(b1,b2);
    SetLocal 2 MakeHiLo(b3,b4);
    JumpCall: 037960, #actuals: 2
  } else {
    Jump: 060154
  }
LocReturn 060133:
  PushStack call_result;
  TraceOperation 060140 (Call (Floc 021618) [Con 29937,Var Sp] Sp);
  PopStack popped1;
  PushFrame 060140;
  SetLocal 1 29937;
  SetLocal 2 popped1;
  JumpCall: 021618, #actuals: 2
LocReturn 060140:
  PushStack call_result;
  TraceOperation 060148 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 060153 Rtrue;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: 1
LocOp 060154:
  TraceOperation 060154 (Je [Var (Local 2),Con 2] (Branch T Dtrue));
  if (Equal(GetLocal(2),2)) {
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 1
  } else {
    TraceOperation 060158 (Print_ret "You can't launch it here.");
    GamePrint "You can't launch it here.\n";
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 1
  }
LocOp 060171:
  TraceOperation 060171 (Je [Var (Global 120),Con 49] (Branch F (Dloc 060179)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),49)) {
    TraceOperation 060175 (Test_attr (Var (Global 118)) (Con 29) (Branch T (Dloc 060203)));
    Let b3 = M[009053];
    Let b4 = M[009054];
    Let b5 = M[Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),3)];
    if (TestBit(b5,2)) {
      Jump: 060203
    } else {
      Jump: 060179
    }
  } else {
    Jump: 060179
  }
LocOp 060179:
  TraceOperation 060179 (Je [Var (Global 120),Con 18] (Branch F (Dloc 060191)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),18)) {
    TraceOperation 060183 (Test_attr (Var (Global 118)) (Con 29) (Branch F (Dloc 060191)));
    Let b3 = M[009053];
    Let b4 = M[009054];
    Let b5 = M[Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),3)];
    if (TestBit(b5,2)) {
      TraceOperation 060187 (Je [Var (Global 119),Con 156] (Branch T (Dloc 060203)));
      Let b6 = M[009055];
      Let b7 = M[009056];
      if (Equal(MakeHiLo(b6,b7),156)) {
        Jump: 060203
      } else {
        Jump: 060191
      }
    } else {
      Jump: 060191
    }
  } else {
    Jump: 060191
  }
LocOp 060191:
  TraceOperation 060191 (Je [Var (Global 120),Con 42,Con 19] (Branch F (Dloc 060365)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (LogOr(Equal(MakeHiLo(b1,b2),42),Equal(MakeHiLo(b1,b2),19))) {
    TraceOperation 060198 (Test_attr (Var (Global 119)) (Con 29) (Branch F (Dloc 060365)));
    Let b3 = M[009055];
    Let b4 = M[009056];
    Let b5 = M[Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),3)];
    if (TestBit(b5,2)) {
      Jump: 060203
    } else {
      Jump: 060365
    }
  } else {
    Jump: 060365
  }
LocOp 060203:
  TraceOperation 060203 (Call (Floc 030906) [Con 156] Sp);
  PushFrame 060203;
  SetLocal 1 156;
  JumpCall: 030906, #actuals: 1
LocReturn 060203:
  PushStack call_result;
  TraceOperation 060209 (Insert_obj (Con 142) (Var (Global 0)));
  Let b1 = M[008817];
  Let b2 = M[008818];
  Let b3 = M[002023];
  if (IsZero(Widen(b3))) {
    SetByte 002023 b2;
    Let b4 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),6)];
    SetByte 002024 LoByte(Widen(b4));
    SetByte Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),6) 142;
    TraceOperation 060212 (Call (Floc 066488) [Con 156,Var (Global 0)] Sp);
    Let b5 = M[008817];
    Let b6 = M[008818];
    PushFrame 060212;
    SetLocal 1 156;
    SetLocal 2 MakeHiLo(b5,b6);
    JumpCall: 066488, #actuals: 2
  } else {
    Let b7 = M[Offset(Offset(000741,Mul(Widen(b3),9)),6)];
    if (Equal(Widen(b7),142)) {
      Let b8 = M[002024];
      SetByte Offset(Offset(000741,Mul(Widen(b3),9)),6) LoByte(Widen(b8));
      SetByte 002023 b2;
      Let b9 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),6)];
      SetByte 002024 LoByte(Widen(b9));
      SetByte Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),6) 142;
      TraceOperation 060212 (Call (Floc 066488) [Con 156,Var (Global 0)] Sp);
      Let b10 = M[008817];
      Let b11 = M[008818];
      PushFrame 060212;
      SetLocal 1 156;
      SetLocal 2 MakeHiLo(b10,b11);
      JumpCall: 066488, #actuals: 2
    } else {
      Error: unlink/loop
    }
  }
LocReturn 060212:
  PushStack call_result;
  TraceOperation 060219 (Insert_obj (Var (Global 111)) (Var (Global 0)));
  Let b1 = M[009039];
  Let b2 = M[009040];
  Let b3 = M[008817];
  Let b4 = M[008818];
  Let b5 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),4)];
  if (IsZero(Widen(b5))) {
    SetByte Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),4) b4;
    Let b6 = M[Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),6)];
    SetByte Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),5) LoByte(Widen(b6));
    SetByte Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),6) b2;
    TraceOperation 060222 (Print "It seems that the ");
    GamePrint "It seems that the ";
    TraceOperation 060229 (Je [Var (Global 120),Con 18,Con 49] (Branch F (Dloc 060240)));
    Let b7 = M[009057];
    Let b8 = M[009058];
    if (LogOr(Equal(MakeHiLo(b7,b8),18),Equal(MakeHiLo(b7,b8),49))) {
      TraceOperation 060235 (Print_obj (Var (Global 118)));
      Let b9 = M[009053];
      Let b10 = M[009054];
      Let b11 = M[Offset(Offset(000741,Mul(MakeHiLo(b9,b10),9)),7)];
      Let b12 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b9,b10),9)),7),1)];
      Let b13 = M[Address(MakeHiLo(b11,b12))];
      if (IsZeroByte(b13)) {
        GamePrint "";
        TraceOperation 060237 (Jump 060242);
        Jump: 060242
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b11,b12)),1));
        TraceOperation 060237 (Jump 060242);
        Jump: 060242
      }
    } else {
      Jump: 060240
    }
  } else {
    Let b14 = M[Offset(Offset(000741,Mul(Widen(b5),9)),6)];
    if (Equal(Widen(b14),MakeHiLo(b1,b2))) {
      Let b15 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),5)];
      SetByte Offset(Offset(000741,Mul(Widen(b5),9)),6) LoByte(Widen(b15));
      SetByte Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),4) b4;
      Let b16 = M[Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),6)];
      SetByte Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),5) LoByte(Widen(b16));
      SetByte Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),6) b2;
      TraceOperation 060222 (Print "It seems that the ");
      GamePrint "It seems that the ";
      TraceOperation 060229 (Je [Var (Global 120),Con 18,Con 49] (Branch F (Dloc 060240)));
      Let b17 = M[009057];
      Let b18 = M[009058];
      if (LogOr(Equal(MakeHiLo(b17,b18),18),Equal(MakeHiLo(b17,b18),49))) {
        TraceOperation 060235 (Print_obj (Var (Global 118)));
        Let b19 = M[009053];
        Let b20 = M[009054];
        Let b21 = M[Offset(Offset(000741,Mul(MakeHiLo(b19,b20),9)),7)];
        Let b22 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b19,b20),9)),7),1)];
        Let b23 = M[Address(MakeHiLo(b21,b22))];
        if (IsZeroByte(b23)) {
          GamePrint "";
          TraceOperation 060237 (Jump 060242);
          Jump: 060242
        } else {
          GamePrint GetText(Offset(Address(MakeHiLo(b21,b22)),1));
          TraceOperation 060237 (Jump 060242);
          Jump: 060242
        }
      } else {
        Jump: 060240
      }
    } else {
      Error: unlink/loop
    }
  }
LocOp 060240:
  TraceOperation 060240 (Print_obj (Var (Global 119)));
  Let b1 = M[009055];
  Let b2 = M[009056];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  if (IsZeroByte(b5)) {
    GamePrint "";
    Jump: 060242
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
    Jump: 060242
  }
LocOp 060242:
  TraceOperation 060242 (Print " didn't agree with the boat, as evidenced by the loud hissing noise issuing therefrom. With a pathetic sputter, the boat deflates, leaving you without.");
  GamePrint " didn't agree with the boat, as evidenced by the loud hissing noise issuing therefrom. With a pathetic sputter, the boat deflates, leaving you without.";
  TraceOperation 060337 New_line;
  GamePrint "\n";
  TraceOperation 060338 (Test_attr (Var (Global 0)) (Con 4) (Branch F Dtrue));
  Let b1 = M[008817];
  Let b2 = M[008818];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),0)];
  if (TestBit(b3,3)) {
    TraceOperation 060342 New_line;
    GamePrint "\n";
    TraceOperation 060343 (Je [Var (Global 0),Con 100,Con 48] (Branch F (Dloc 060357)));
    Let b4 = M[008817];
    Let b5 = M[008818];
    if (LogOr(Equal(MakeHiLo(b4,b5),100),Equal(MakeHiLo(b4,b5),48))) {
      TraceOperation 060349 (Call (Floc 067174) [Con -24787] Sp);
      PushFrame 060349;
      SetLocal 1 -24787;
      JumpCall: 067174, #actuals: 1
    } else {
      Jump: 060357
    }
  } else {
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 1
  }
LocReturn 060349:
  PushStack call_result;
  TraceOperation 060356 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 060357:
  TraceOperation 060357 (Call (Floc 067174) [Con -24768] Sp);
  PushFrame 060357;
  SetLocal 1 -24768;
  JumpCall: 067174, #actuals: 1
LocReturn 060357:
  PushStack call_result;
  TraceOperation 060364 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 060365:
  TraceOperation 060365 (Je [Var (Global 120),Con 74] (Branch F Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),74)) {
    TraceOperation 060369 (Print_ret "You're not in the boat!");
    GamePrint "You're not in the boat!\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 0
  }
LocOp 060380:
  TraceOperation 060380 (Je [Var (Global 120),Con 25] (Branch F (Dloc 060507)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),25)) {
    TraceOperation 060385 (Jin (Con 209) (Var (Global 111)) (Branch T (Dloc 060409)));
    Let b3 = M[009039];
    Let b4 = M[009040];
    Let b5 = M[002626];
    if (Equal(MakeHiLo(b3,b4),Widen(b5))) {
      TraceOperation 060409 (Print "Oops! Something sharp seems to have slipped and punctured the boat. The boat deflates to the sounds of hissing, sputtering, and cursing.");
      GamePrint "Oops! Something sharp seems to have slipped and punctured the boat. The boat deflates to the sounds of hissing, sputtering, and cursing.";
      TraceOperation 060490 New_line;
      GamePrint "\n";
      TraceOperation 060491 (Call (Floc 030906) [Con 156] Sp);
      PushFrame 060491;
      SetLocal 1 156;
      JumpCall: 030906, #actuals: 1
    } else {
      TraceOperation 060389 (Jin (Con 169) (Var (Global 111)) (Branch T (Dloc 060409)));
      Let b6 = M[009039];
      Let b7 = M[009040];
      Let b8 = M[002266];
      if (Equal(MakeHiLo(b6,b7),Widen(b8))) {
        TraceOperation 060409 (Print "Oops! Something sharp seems to have slipped and punctured the boat. The boat deflates to the sounds of hissing, sputtering, and cursing.");
        GamePrint "Oops! Something sharp seems to have slipped and punctured the boat. The boat deflates to the sounds of hissing, sputtering, and cursing.";
        TraceOperation 060490 New_line;
        GamePrint "\n";
        TraceOperation 060491 (Call (Floc 030906) [Con 156] Sp);
        PushFrame 060491;
        SetLocal 1 156;
        JumpCall: 030906, #actuals: 1
      } else {
        TraceOperation 060393 (Jin (Con 110) (Var (Global 111)) (Branch T (Dloc 060409)));
        Let b9 = M[009039];
        Let b10 = M[009040];
        Let b11 = M[001735];
        if (Equal(MakeHiLo(b9,b10),Widen(b11))) {
          TraceOperation 060409 (Print "Oops! Something sharp seems to have slipped and punctured the boat. The boat deflates to the sounds of hissing, sputtering, and cursing.");
          GamePrint "Oops! Something sharp seems to have slipped and punctured the boat. The boat deflates to the sounds of hissing, sputtering, and cursing.";
          TraceOperation 060490 New_line;
          GamePrint "\n";
          TraceOperation 060491 (Call (Floc 030906) [Con 156] Sp);
          PushFrame 060491;
          SetLocal 1 156;
          JumpCall: 030906, #actuals: 1
        } else {
          TraceOperation 060397 (Jin (Con 128) (Var (Global 111)) (Branch T (Dloc 060409)));
          Let b12 = M[009039];
          Let b13 = M[009040];
          Let b14 = M[001897];
          if (Equal(MakeHiLo(b12,b13),Widen(b14))) {
            TraceOperation 060409 (Print "Oops! Something sharp seems to have slipped and punctured the boat. The boat deflates to the sounds of hissing, sputtering, and cursing.");
            GamePrint "Oops! Something sharp seems to have slipped and punctured the boat. The boat deflates to the sounds of hissing, sputtering, and cursing.";
            TraceOperation 060490 New_line;
            GamePrint "\n";
            TraceOperation 060491 (Call (Floc 030906) [Con 156] Sp);
            PushFrame 060491;
            SetLocal 1 156;
            JumpCall: 030906, #actuals: 1
          } else {
            TraceOperation 060401 (Jin (Con 218) (Var (Global 111)) (Branch T (Dloc 060409)));
            Let b15 = M[009039];
            Let b16 = M[009040];
            Let b17 = M[002707];
            if (Equal(MakeHiLo(b15,b16),Widen(b17))) {
              TraceOperation 060409 (Print "Oops! Something sharp seems to have slipped and punctured the boat. The boat deflates to the sounds of hissing, sputtering, and cursing.");
              GamePrint "Oops! Something sharp seems to have slipped and punctured the boat. The boat deflates to the sounds of hissing, sputtering, and cursing.";
              TraceOperation 060490 New_line;
              GamePrint "\n";
              TraceOperation 060491 (Call (Floc 030906) [Con 156] Sp);
              PushFrame 060491;
              SetLocal 1 156;
              JumpCall: 030906, #actuals: 1
            } else {
              TraceOperation 060405 (Jin (Con 113) (Var (Global 111)) (Branch F Dfalse));
              Let b18 = M[009039];
              Let b19 = M[009040];
              Let b20 = M[001762];
              if (Equal(MakeHiLo(b18,b19),Widen(b20))) {
                TraceOperation 060409 (Print "Oops! Something sharp seems to have slipped and punctured the boat. The boat deflates to the sounds of hissing, sputtering, and cursing.");
                GamePrint "Oops! Something sharp seems to have slipped and punctured the boat. The boat deflates to the sounds of hissing, sputtering, and cursing.";
                TraceOperation 060490 New_line;
                GamePrint "\n";
                TraceOperation 060491 (Call (Floc 030906) [Con 156] Sp);
                PushFrame 060491;
                SetLocal 1 156;
                JumpCall: 030906, #actuals: 1
              } else {
                PopFrame return_address_21;
                JumpReturn: return_address_21, result: 0
              }
            }
          }
        }
      }
    }
  } else {
    Jump: 060507
  }
LocReturn 060491:
  PushStack call_result;
  TraceOperation 060497 (Insert_obj (Con 142) (Var (Global 0)));
  Let b1 = M[008817];
  Let b2 = M[008818];
  Let b3 = M[002023];
  if (IsZero(Widen(b3))) {
    SetByte 002023 b2;
    Let b4 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),6)];
    SetByte 002024 LoByte(Widen(b4));
    SetByte Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),6) 142;
    TraceOperation 060500 (Call (Floc 038192) [Con 142] Sp);
    PushFrame 060500;
    SetLocal 1 142;
    JumpCall: 038192, #actuals: 1
  } else {
    Let b5 = M[Offset(Offset(000741,Mul(Widen(b3),9)),6)];
    if (Equal(Widen(b5),142)) {
      Let b6 = M[002024];
      SetByte Offset(Offset(000741,Mul(Widen(b3),9)),6) LoByte(Widen(b6));
      SetByte 002023 b2;
      Let b7 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),6)];
      SetByte 002024 LoByte(Widen(b7));
      SetByte Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),6) 142;
      TraceOperation 060500 (Call (Floc 038192) [Con 142] Sp);
      PushFrame 060500;
      SetLocal 1 142;
      JumpCall: 038192, #actuals: 1
    } else {
      Error: unlink/loop
    }
  }
LocReturn 060500:
  PushStack call_result;
  TraceOperation 060506 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 060507:
  TraceOperation 060507 (Je [Var (Global 120),Con 59,Con 23] (Branch F (Dloc 060538)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (LogOr(Equal(MakeHiLo(b1,b2),59),Equal(MakeHiLo(b1,b2),23))) {
    TraceOperation 060513 (Print_ret "Inflating it further would probably burst it.");
    GamePrint "Inflating it further would probably burst it.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 060538
  }
LocOp 060538:
  TraceOperation 060538 (Je [Var (Global 120),Con 41] (Branch F Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),41)) {
    TraceOperation 060542 (Get_parent (Var (Global 111)) Sp);
    Let b3 = M[009039];
    Let b4 = M[009040];
    Let b5 = M[Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),4)];
    PushStack Widen(b5);
    TraceOperation 060545 (Je [Var Sp,Con 156] (Branch F (Dloc 060576)));
    PopStack popped6;
    if (Equal(popped6,156)) {
      TraceOperation 060549 (Print_ret "You can't deflate the boat while you're in it.");
      GamePrint "You can't deflate the boat while you're in it.\n";
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 1
    } else {
      Jump: 060576
    }
  } else {
    PopFrame return_address_8;
    JumpReturn: return_address_8, result: 0
  }
LocOp 060576:
  TraceOperation 060576 (Jin (Con 156) (Var (Global 0)) (Branch T (Dloc 060605)));
  Let b1 = M[008817];
  Let b2 = M[008818];
  Let b3 = M[002149];
  if (Equal(MakeHiLo(b1,b2),Widen(b3))) {
    Jump: 060605
  } else {
    TraceOperation 060580 (Print_ret "The boat must be on the ground to be deflated.");
    GamePrint "The boat must be on the ground to be deflated.\n";
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 1
  }
--[437]--------------------------------------------------
LocRoutine 060606:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 9829;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 10798;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 -9983;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 10064;
        }
      }
    }
  }
  Jump: 060615
LocOp 060615:
  TraceOperation 060615 (Mod (Var (Global 134)) (Con 69) (Global 171));
  Let b1 = M[009085];
  Let b2 = M[009086];
  SetByte 009159 HiByte(Mod(MakeHiLo(b1,b2),69));
  SetByte 009160 LoByte(Mod(MakeHiLo(b1,b2),69));
  TraceOperation 060619 (Store (Con 164) (Con 1));
  SetByte 009113 0;
  SetByte 009114 1;
  TraceOperation 060622 (Call (Floc 030906) [Con 156] Sp);
  PushFrame 060622;
  SetLocal 1 156;
  JumpCall: 030906, #actuals: 1
LocReturn 060622:
  PushStack call_result;
  TraceOperation 060628 (Insert_obj (Con 141) (Var (Global 0)));
  Let b1 = M[008817];
  Let b2 = M[008818];
  Let b3 = M[002014];
  if (IsZero(Widen(b3))) {
    SetByte 002014 b2;
    Let b4 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),6)];
    SetByte 002015 LoByte(Widen(b4));
    SetByte Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),6) 141;
    TraceOperation 060631 (Call (Floc 038192) [Con 141] Sp);
    PushFrame 060631;
    SetLocal 1 141;
    JumpCall: 038192, #actuals: 1
  } else {
    Let b5 = M[Offset(Offset(000741,Mul(Widen(b3),9)),6)];
    if (Equal(Widen(b5),141)) {
      Let b6 = M[002015];
      SetByte Offset(Offset(000741,Mul(Widen(b3),9)),6) LoByte(Widen(b6));
      SetByte 002014 b2;
      Let b7 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),6)];
      SetByte 002015 LoByte(Widen(b7));
      SetByte Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),6) 141;
      TraceOperation 060631 (Call (Floc 038192) [Con 141] Sp);
      PushFrame 060631;
      SetLocal 1 141;
      JumpCall: 038192, #actuals: 1
    } else {
      Error: unlink/loop
    }
  }
LocReturn 060631:
  PushStack call_result;
  TraceOperation 060637 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[438]--------------------------------------------------
LocRoutine 060638:
  MakeRoutineFrame 0;
  Jump: 060639
LocOp 060639:
  TraceOperation 060639 (Call (Floc 022396) [Con 23,Var (Global 118),Con 6] Sp);
  Let b1 = M[009053];
  Let b2 = M[009054];
  PushFrame 060639;
  SetLocal 1 23;
  SetLocal 2 MakeHiLo(b1,b2);
  SetLocal 3 6;
  JumpCall: 022396, #actuals: 3
LocReturn 060639:
  PushStack call_result;
  TraceOperation 060647 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[439]--------------------------------------------------
LocRoutine 060648:
  MakeRoutineFrame 0;
  Jump: 060649
LocOp 060649:
  TraceOperation 060649 (Je [Var (Global 120),Con 59,Con 23] (Branch F Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (LogOr(Equal(MakeHiLo(b1,b2),59),Equal(MakeHiLo(b1,b2),23))) {
    TraceOperation 060655 (Jin (Con 141) (Var (Global 0)) (Branch T (Dloc 060684)));
    Let b3 = M[008817];
    Let b4 = M[008818];
    Let b5 = M[002014];
    if (Equal(MakeHiLo(b3,b4),Widen(b5))) {
      Jump: 060684
    } else {
      TraceOperation 060659 (Print_ret "The boat must be on the ground to be inflated.");
      GamePrint "The boat must be on the ground to be inflated.\n";
      PopFrame return_address_6;
      JumpReturn: return_address_6, result: 1
    }
  } else {
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 0
  }
--[440]--------------------------------------------------
LocRoutine 060760:
  MakeRoutineFrame 0;
  Jump: 060761
LocOp 060761:
  TraceOperation 060761 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[441]--------------------------------------------------
LocRoutine 060818:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 060821
LocOp 060821:
  TraceOperation 060821 (Je [Var (Local 1),Con 6] (Branch F Dfalse));
  if (Equal(GetLocal(1),6)) {
    TraceOperation 060825 (Jin (Con 162) (Var (Global 111)) (Branch F Dfalse));
    Let b1 = M[009039];
    Let b2 = M[009040];
    Let b3 = M[002203];
    if (Equal(MakeHiLo(b1,b2),Widen(b3))) {
      TraceOperation 060829 (Jz (Var (Global 20)) (Branch T Dfalse));
      Let b4 = M[008857];
      Let b5 = M[008858];
      if (IsZero(MakeHiLo(b4,b5))) {
        PopFrame return_address_6;
        JumpReturn: return_address_6, result: 0
      } else {
        TraceOperation 060832 (Print "You notice something funny about the feel of the buoy.");
        GamePrint "You notice something funny about the feel of the buoy.";
        TraceOperation 060863 New_line;
        GamePrint "\n";
        TraceOperation 060864 (Store (Con 36) (Con 0));
        SetByte 008857 0;
        SetByte 008858 0;
        TraceOperation 060867 (Ret (Var (Global 20)));
        Let b7 = M[008857];
        Let b8 = M[008858];
        PopFrame return_address_9;
        JumpReturn: return_address_9, result: MakeHiLo(b7,b8)
      }
    } else {
      PopFrame return_address_10;
      JumpReturn: return_address_10, result: 0
    }
  } else {
    PopFrame return_address_11;
    JumpReturn: return_address_11, result: 0
  }
--[442]--------------------------------------------------
LocRoutine 060870:
  MakeRoutineFrame 0;
  Jump: 060871
LocOp 060871:
  TraceOperation 060871 (Je [Var (Global 120),Con 44] (Branch F Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),44)) {
    TraceOperation 060875 (Je [Var (Global 119),Con 121] (Branch F Dfalse));
    Let b3 = M[009055];
    Let b4 = M[009056];
    if (Equal(MakeHiLo(b3,b4),121)) {
      TraceOperation 060879 (Inc (Con 35));
      Let b5 = M[008855];
      Let b6 = M[008856];
      SetByte 008855 HiByte(Add(MakeHiLo(b5,b6),1));
      SetByte 008856 LoByte(Add(MakeHiLo(b5,b6),1));
      TraceOperation 060881 (Jg (Var (Global 19)) (Con 3) (Branch F (Dloc 060905)));
      Let b7 = M[008855];
      Let b8 = M[008856];
      if (GreaterThan(MakeHiLo(b7,b8),3)) {
        TraceOperation 060885 (Store (Con 35) (Con -1));
        SetByte 008855 255;
        SetByte 008856 255;
        TraceOperation 060890 (Jin (Con 116) (Var (Global 0)) (Branch F (Dloc 060897)));
        Let b9 = M[008817];
        Let b10 = M[008818];
        Let b11 = M[001789];
        if (Equal(MakeHiLo(b9,b10),Widen(b11))) {
          TraceOperation 060894 (Set_attr (Con 116) (Con 7));
          Let b12 = M[001785];
          SetByte 001785 SetBit(b12,0);
          TraceOperation 060897 (Call (Floc 067174) [Con -24719] Sp);
          PushFrame 060897;
          SetLocal 1 -24719;
          JumpCall: 067174, #actuals: 1
        } else {
          TraceOperation 060897 (Call (Floc 067174) [Con -24719] Sp);
          PushFrame 060897;
          SetLocal 1 -24719;
          JumpCall: 067174, #actuals: 1
        }
      } else {
        Jump: 060905
      }
    } else {
      PopFrame return_address_13;
      JumpReturn: return_address_13, result: 0
    }
  } else {
    PopFrame return_address_14;
    JumpReturn: return_address_14, result: 0
  }
LocReturn 060897:
  PushStack call_result;
  TraceOperation 060904 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 060905:
  TraceOperation 060905 (Je [Var (Global 19),Con 3] (Branch F (Dloc 060945)));
  Let b1 = M[008855];
  Let b2 = M[008856];
  if (Equal(MakeHiLo(b1,b2),3)) {
    TraceOperation 060909 (Test_attr (Con 116) (Con 7) (Branch F Dfalse));
    Let b3 = M[001785];
    if (TestBit(b3,0)) {
      TraceOperation 060913 (Print "You can see a scarab here in the sand.");
      GamePrint "You can see a scarab here in the sand.";
      TraceOperation 060934 New_line;
      GamePrint "\n";
      TraceOperation 060935 (Call (Floc 038192) [Con 116] Sp);
      PushFrame 060935;
      SetLocal 1 116;
      JumpCall: 038192, #actuals: 1
    } else {
      PopFrame return_address_4;
      JumpReturn: return_address_4, result: 0
    }
  } else {
    Jump: 060945
  }
LocReturn 060935:
  PushStack call_result;
  TraceOperation 060941 (Clear_attr (Con 116) (Con 7));
  Let b1 = M[001785];
  SetByte 001785 ClearBit(b1,0);
  TraceOperation 060944 Rtrue;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: 1
LocOp 060945:
  TraceOperation 060945 (Loadw (Var (Global 18)) (Var (Global 19)) Sp);
  Let b1 = M[008853];
  Let b2 = M[008854];
  Let b3 = M[008855];
  Let b4 = M[008856];
  Let b5 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4)))];
  Let b6 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4))),1)];
  PushStack MakeHiLo(b5,b6);
  TraceOperation 060949 (Print_paddr (Var Sp));
  PopStack popped7;
  GamePrint GetText(PackedAddress Z3(popped7));
  TraceOperation 060951 New_line;
  GamePrint "\n";
  TraceOperation 060952 Rtrue;
  PopFrame return_address_8;
  JumpReturn: return_address_8, result: 1
--[443]--------------------------------------------------
LocRoutine 060954:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 060959
LocOp 060959:
  TraceOperation 060959 (Je [Var (Local 1),Con 3] (Branch F (Dloc 061068)));
  if (Equal(GetLocal(1),3)) {
    TraceOperation 060964 (Print "You are about 10 feet above the ground nestled among some large branches. The nearest branch above you is above your reach.");
    GamePrint "You are about 10 feet above the ground nestled among some large branches. The nearest branch above you is above your reach.";
    TraceOperation 061031 New_line;
    GamePrint "\n";
    TraceOperation 061032 (Get_child (Con 75) (Local 2) (Branch F Dfalse));
    Let b1 = M[001422];
    SetLocal 2 Widen(b1);
    if (IsZero(Widen(b1))) {
      PopFrame return_address_2;
      JumpReturn: return_address_2, result: 0
    } else {
      TraceOperation 061036 (Get_sibling (Var (Local 2)) Sp (Branch F Dfalse));
      Let b3 = M[Offset(Offset(000741,Mul(GetLocal(2),9)),5)];
      PushStack Widen(b3);
      if (IsZero(Widen(b3))) {
        PopFrame return_address_4;
        JumpReturn: return_address_4, result: 0
      } else {
        TraceOperation 061040 (Print "On the ground below you can see:  ");
        GamePrint "On the ground below you can see:  ";
        TraceOperation 061059 (Call (Floc 036440) [Con 75] Sp);
        PushFrame 061059;
        SetLocal 1 75;
        JumpCall: 036440, #actuals: 1
      }
    }
  } else {
    Jump: 061068
  }
LocReturn 061059:
  PushStack call_result;
  TraceOperation 061065 (Print_ret ".");
  GamePrint ".\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 061068:
  TraceOperation 061068 (Je [Var (Local 1),Con 1] (Branch F (Dloc 061276)));
  if (Equal(GetLocal(1),1)) {
    TraceOperation 061073 (Je [Var (Global 120),Con 31] (Branch F (Dloc 061088)));
    Let b1 = M[009057];
    Let b2 = M[009058];
    if (Equal(MakeHiLo(b1,b2),31)) {
      TraceOperation 061077 (Je [Var (Global 118),Con 241] (Branch F (Dloc 061088)));
      Let b3 = M[009053];
      Let b4 = M[009054];
      if (Equal(MakeHiLo(b3,b4),241)) {
        TraceOperation 061081 (Call (Floc 038000) [Con 22] Sp);
        PushFrame 061081;
        SetLocal 1 22;
        JumpCall: 038000, #actuals: 1
      } else {
        Jump: 061088
      }
    } else {
      Jump: 061088
    }
  } else {
    Jump: 061276
  }
LocReturn 061081:
  PushStack call_result;
  TraceOperation 061087 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 061088:
  TraceOperation 061088 (Je [Var (Global 120),Con 32,Con 30] (Branch F (Dloc 061105)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (LogOr(Equal(MakeHiLo(b1,b2),32),Equal(MakeHiLo(b1,b2),30))) {
    TraceOperation 061094 (Je [Var (Global 118),Con 241] (Branch F (Dloc 061105)));
    Let b3 = M[009053];
    Let b4 = M[009054];
    if (Equal(MakeHiLo(b3,b4),241)) {
      TraceOperation 061098 (Call (Floc 038000) [Con 23] Sp);
      PushFrame 061098;
      SetLocal 1 23;
      JumpCall: 038000, #actuals: 1
    } else {
      Jump: 061105
    }
  } else {
    Jump: 061105
  }
LocReturn 061098:
  PushStack call_result;
  TraceOperation 061104 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 061105:
  TraceOperation 061105 (Je [Var (Global 120),Con 49] (Branch F Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),49)) {
    TraceOperation 061109 (Call (Floc 037334) [] Sp);
    PushFrame 061109;
    JumpCall: 037334, #actuals: 0
  } else {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  }
LocReturn 061109:
  PushStack call_result;
  TraceOperation 061114 (Jz (Var Sp) (Branch T Dtrue));
  PopStack popped1;
  if (IsZero(popped1)) {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 1
  } else {
    TraceOperation 061117 (Je [Var (Global 118),Con 89] (Branch F (Dloc 061184)));
    Let b3 = M[009053];
    Let b4 = M[009054];
    if (Equal(MakeHiLo(b3,b4),89)) {
      TraceOperation 061122 (Jin (Con 87) (Con 89) (Branch F (Dloc 061184)));
      Let b5 = M[001528];
      if (Equal(89,Widen(b5))) {
        TraceOperation 061126 (Print "The nest falls to the ground, and the egg spills out of it, seriously damaged.");
        GamePrint "The nest falls to the ground, and the egg spills out of it, seriously damaged.";
        TraceOperation 061173 New_line;
        GamePrint "\n";
        TraceOperation 061174 (Call (Floc 030906) [Con 87] Sp);
        PushFrame 061174;
        SetLocal 1 87;
        JumpCall: 030906, #actuals: 1
      } else {
        Jump: 061184
      }
    } else {
      Jump: 061184
    }
  }
LocReturn 061174:
  PushStack call_result;
  TraceOperation 061180 (Insert_obj (Con 86) (Con 75));
  Let b1 = M[001519];
  if (IsZero(Widen(b1))) {
    SetByte 001519 75;
    Let b2 = M[001422];
    SetByte 001520 LoByte(Widen(b2));
    SetByte 001422 86;
    TraceOperation 061183 Rtrue;
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Let b4 = M[Offset(Offset(000741,Mul(Widen(b1),9)),6)];
    if (Equal(Widen(b4),86)) {
      Let b5 = M[001520];
      SetByte Offset(Offset(000741,Mul(Widen(b1),9)),6) LoByte(Widen(b5));
      SetByte 001519 75;
      Let b6 = M[001422];
      SetByte 001520 LoByte(Widen(b6));
      SetByte 001422 86;
      TraceOperation 061183 Rtrue;
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 1
    } else {
      Error: unlink/loop
    }
  }
LocOp 061184:
  TraceOperation 061184 (Je [Var (Global 118),Con 87] (Branch F (Dloc 061235)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  if (Equal(MakeHiLo(b1,b2),87)) {
    TraceOperation 061188 (Print "The egg falls to the ground and springs open, seriously damaged.");
    GamePrint "The egg falls to the ground and springs open, seriously damaged.";
    TraceOperation 061225 (Insert_obj (Con 87) (Con 75));
    Let b3 = M[001528];
    if (IsZero(Widen(b3))) {
      SetByte 001528 75;
      Let b4 = M[001422];
      SetByte 001529 LoByte(Widen(b4));
      SetByte 001422 87;
      TraceOperation 061228 (Call (Floc 061720) [] Sp);
      PushFrame 061228;
      JumpCall: 061720, #actuals: 0
    } else {
      Let b5 = M[Offset(Offset(000741,Mul(Widen(b3),9)),6)];
      if (Equal(Widen(b5),87)) {
        Let b6 = M[001529];
        SetByte Offset(Offset(000741,Mul(Widen(b3),9)),6) LoByte(Widen(b6));
        SetByte 001528 75;
        Let b7 = M[001422];
        SetByte 001529 LoByte(Widen(b7));
        SetByte 001422 87;
        TraceOperation 061228 (Call (Floc 061720) [] Sp);
        PushFrame 061228;
        JumpCall: 061720, #actuals: 0
      } else {
        Error: unlink/loop
      }
    }
  } else {
    Jump: 061235
  }
LocReturn 061228:
  PushStack call_result;
  TraceOperation 061233 New_line;
  GamePrint "\n";
  TraceOperation 061234 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 061235:
  TraceOperation 061235 (Je [Var (Global 118),Var (Global 111),Con 241] (Branch T (Dloc 061264)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[009039];
  Let b4 = M[009040];
  if (LogOr(Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4)),Equal(MakeHiLo(b1,b2),241))) {
    Jump: 061264
  } else {
    TraceOperation 061241 (Insert_obj (Var (Global 118)) (Con 75));
    Let b5 = M[009053];
    Let b6 = M[009054];
    Let b7 = M[Offset(Offset(000741,Mul(MakeHiLo(b5,b6),9)),4)];
    if (IsZero(Widen(b7))) {
      SetByte Offset(Offset(000741,Mul(MakeHiLo(b5,b6),9)),4) 75;
      Let b8 = M[001422];
      SetByte Offset(Offset(000741,Mul(MakeHiLo(b5,b6),9)),5) LoByte(Widen(b8));
      SetByte 001422 b6;
      TraceOperation 061244 (Print "The ");
      GamePrint "The ";
      TraceOperation 061247 (Print_obj (Var (Global 118)));
      Let b9 = M[009053];
      Let b10 = M[009054];
      Let b11 = M[Offset(Offset(000741,Mul(MakeHiLo(b9,b10),9)),7)];
      Let b12 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b9,b10),9)),7),1)];
      Let b13 = M[Address(MakeHiLo(b11,b12))];
      if (IsZeroByte(b13)) {
        GamePrint "";
        TraceOperation 061249 (Print_ret " falls to the ground.");
        GamePrint " falls to the ground.\n";
        PopFrame return_address_14;
        JumpReturn: return_address_14, result: 1
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b11,b12)),1));
        TraceOperation 061249 (Print_ret " falls to the ground.");
        GamePrint " falls to the ground.\n";
        PopFrame return_address_15;
        JumpReturn: return_address_15, result: 1
      }
    } else {
      Let b16 = M[Offset(Offset(000741,Mul(Widen(b7),9)),6)];
      if (Equal(Widen(b16),MakeHiLo(b5,b6))) {
        Let b17 = M[Offset(Offset(000741,Mul(MakeHiLo(b5,b6),9)),5)];
        SetByte Offset(Offset(000741,Mul(Widen(b7),9)),6) LoByte(Widen(b17));
        SetByte Offset(Offset(000741,Mul(MakeHiLo(b5,b6),9)),4) 75;
        Let b18 = M[001422];
        SetByte Offset(Offset(000741,Mul(MakeHiLo(b5,b6),9)),5) LoByte(Widen(b18));
        SetByte 001422 b6;
        TraceOperation 061244 (Print "The ");
        GamePrint "The ";
        TraceOperation 061247 (Print_obj (Var (Global 118)));
        Let b19 = M[009053];
        Let b20 = M[009054];
        Let b21 = M[Offset(Offset(000741,Mul(MakeHiLo(b19,b20),9)),7)];
        Let b22 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b19,b20),9)),7),1)];
        Let b23 = M[Address(MakeHiLo(b21,b22))];
        if (IsZeroByte(b23)) {
          GamePrint "";
          TraceOperation 061249 (Print_ret " falls to the ground.");
          GamePrint " falls to the ground.\n";
          PopFrame return_address_24;
          JumpReturn: return_address_24, result: 1
        } else {
          GamePrint GetText(Offset(Address(MakeHiLo(b21,b22)),1));
          TraceOperation 061249 (Print_ret " falls to the ground.");
          GamePrint " falls to the ground.\n";
          PopFrame return_address_25;
          JumpReturn: return_address_25, result: 1
        }
      } else {
        Error: unlink/loop
      }
    }
  }
LocOp 061264:
  TraceOperation 061264 (Je [Var (Global 120),Con 69] (Branch F Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),69)) {
    TraceOperation 061268 (Call (Floc 067174) [Con -24670] Sp);
    PushFrame 061268;
    SetLocal 1 -24670;
    JumpCall: 067174, #actuals: 1
  } else {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  }
LocReturn 061268:
  PushStack call_result;
  TraceOperation 061275 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 061276:
  TraceOperation 061276 (Je [Var (Local 1),Con 2] (Branch F Dfalse));
  if (Equal(GetLocal(1),2)) {
    TraceOperation 061280 (Call (Floc 021618) [Con 31060,Con -1] Sp);
    PushFrame 061280;
    SetLocal 1 31060;
    SetLocal 2 -1;
    JumpCall: 021618, #actuals: 2
  } else {
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 0
  }
LocReturn 061280:
  PushStack call_result;
  TraceOperation 061289 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 061294 Rtrue;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: 1
--[444]--------------------------------------------------
LocRoutine 061296:
  MakeRoutineFrame 0;
  Jump: 061297
LocOp 061297:
  TraceOperation 061297 (Je [Var (Global 120),Con 42,Con 43] (Branch F (Dloc 061551)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (LogOr(Equal(MakeHiLo(b1,b2),42),Equal(MakeHiLo(b1,b2),43))) {
    TraceOperation 061304 (Je [Var (Global 118),Con 87] (Branch F (Dloc 061551)));
    Let b3 = M[009053];
    Let b4 = M[009054];
    if (Equal(MakeHiLo(b3,b4),87)) {
      TraceOperation 061309 (Test_attr (Var (Global 118)) (Con 11) (Branch F (Dloc 061326)));
      Let b5 = M[009053];
      Let b6 = M[009054];
      Let b7 = M[Offset(Offset(000741,Mul(MakeHiLo(b5,b6),9)),1)];
      if (TestBit(b7,4)) {
        TraceOperation 061313 (Print_ret "The egg is already open.");
        GamePrint "The egg is already open.\n";
        PopFrame return_address_8;
        JumpReturn: return_address_8, result: 1
      } else {
        Jump: 061326
      }
    } else {
      Jump: 061551
    }
  } else {
    Jump: 061551
  }
LocOp 061326:
  TraceOperation 061326 (Jz (Var (Global 119)) (Branch F (Dloc 061356)));
  Let b1 = M[009055];
  Let b2 = M[009056];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 061329 (Print_ret "You have neither the tools nor the expertise.");
    GamePrint "You have neither the tools nor the expertise.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 061356
  }
LocOp 061356:
  TraceOperation 061356 (Je [Var (Global 119),Con 1] (Branch F (Dloc 061389)));
  Let b1 = M[009055];
  Let b2 = M[009056];
  if (Equal(MakeHiLo(b1,b2),1)) {
    TraceOperation 061360 (Print_ret "I doubt you could do that without damaging it.");
    GamePrint "I doubt you could do that without damaging it.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 061389
  }
LocOp 061389:
  TraceOperation 061389 (Test_attr (Var (Global 119)) (Con 29) (Branch T (Dloc 061402)));
  Let b1 = M[009055];
  Let b2 = M[009056];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),3)];
  if (TestBit(b3,2)) {
    Jump: 061402
  } else {
    TraceOperation 061393 (Test_attr (Var (Global 119)) (Con 28) (Branch T (Dloc 061402)));
    Let b4 = M[009055];
    Let b5 = M[009056];
    Let b6 = M[Offset(Offset(000741,Mul(MakeHiLo(b4,b5),9)),3)];
    if (TestBit(b6,3)) {
      Jump: 061402
    } else {
      TraceOperation 061397 (Je [Var (Global 120),Con 42] (Branch F (Dloc 061470)));
      Let b7 = M[009057];
      Let b8 = M[009058];
      if (Equal(MakeHiLo(b7,b8),42)) {
        Jump: 061402
      } else {
        Jump: 061470
      }
    }
  }
LocOp 061402:
  TraceOperation 061402 (Print "The egg is now open, but the clumsiness of your attempt has seriously compromised its esthetic appeal.");
  GamePrint "The egg is now open, but the clumsiness of your attempt has seriously compromised its esthetic appeal.";
  TraceOperation 061463 (Call (Floc 061720) [] Sp);
  PushFrame 061463;
  JumpCall: 061720, #actuals: 0
LocReturn 061463:
  PushStack call_result;
  TraceOperation 061468 New_line;
  GamePrint "\n";
  TraceOperation 061469 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 061470:
  TraceOperation 061470 (Test_attr (Var (Global 118)) (Con 2) (Branch F (Dloc 061512)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),0)];
  if (TestBit(b3,5)) {
    TraceOperation 061474 (Print "Not to say that using the ");
    GamePrint "Not to say that using the ";
    TraceOperation 061491 (Print_obj (Var (Global 119)));
    Let b4 = M[009055];
    Let b5 = M[009056];
    Let b6 = M[Offset(Offset(000741,Mul(MakeHiLo(b4,b5),9)),7)];
    Let b7 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b4,b5),9)),7),1)];
    Let b8 = M[Address(MakeHiLo(b6,b7))];
    if (IsZeroByte(b8)) {
      GamePrint "";
      TraceOperation 061493 (Print_ret " isn't original too...");
      GamePrint " isn't original too...\n";
      PopFrame return_address_9;
      JumpReturn: return_address_9, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b6,b7)),1));
      TraceOperation 061493 (Print_ret " isn't original too...");
      GamePrint " isn't original too...\n";
      PopFrame return_address_10;
      JumpReturn: return_address_10, result: 1
    }
  } else {
    Jump: 061512
  }
LocOp 061512:
  TraceOperation 061512 (Print "The concept of using a ");
  GamePrint "The concept of using a ";
  TraceOperation 061527 (Print_obj (Var (Global 119)));
  Let b1 = M[009055];
  Let b2 = M[009056];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  if (IsZeroByte(b5)) {
    GamePrint "";
    TraceOperation 061529 (Print " is certainly original.");
    GamePrint " is certainly original.";
    TraceOperation 061546 New_line;
    GamePrint "\n";
    TraceOperation 061547 (Set_attr (Var (Global 118)) (Con 2));
    Let b6 = M[009053];
    Let b7 = M[009054];
    Let b8 = M[Offset(Offset(000741,Mul(MakeHiLo(b6,b7),9)),0)];
    SetByte Offset(Offset(000741,Mul(MakeHiLo(b6,b7),9)),0) SetBit(b8,5);
    TraceOperation 061550 Rtrue;
    PopFrame return_address_9;
    JumpReturn: return_address_9, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
    TraceOperation 061529 (Print " is certainly original.");
    GamePrint " is certainly original.";
    TraceOperation 061546 New_line;
    GamePrint "\n";
    TraceOperation 061547 (Set_attr (Var (Global 118)) (Con 2));
    Let b10 = M[009053];
    Let b11 = M[009054];
    Let b12 = M[Offset(Offset(000741,Mul(MakeHiLo(b10,b11),9)),0)];
    SetByte Offset(Offset(000741,Mul(MakeHiLo(b10,b11),9)),0) SetBit(b12,5);
    TraceOperation 061550 Rtrue;
    PopFrame return_address_13;
    JumpReturn: return_address_13, result: 1
  }
LocOp 061551:
  TraceOperation 061551 (Je [Var (Global 120),Con 65,Con 33] (Branch F (Dloc 061632)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (LogOr(Equal(MakeHiLo(b1,b2),65),Equal(MakeHiLo(b1,b2),33))) {
    TraceOperation 061558 (Print "There is a noticeable crunch from beneath you, and inspection reveals that the egg is lying open, badly damaged.");
    GamePrint "There is a noticeable crunch from beneath you, and inspection reveals that the egg is lying open, badly damaged.";
    TraceOperation 061625 (Call (Floc 061720) [] Sp);
    PushFrame 061625;
    JumpCall: 061720, #actuals: 0
  } else {
    Jump: 061632
  }
LocReturn 061625:
  PushStack call_result;
  TraceOperation 061630 New_line;
  GamePrint "\n";
  TraceOperation 061631 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 061632:
  TraceOperation 061632 (Je [Var (Global 120),Con 127,Con 42,Con 43] (Branch F Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),127),Equal(MakeHiLo(b1,b2),42)),Equal(MakeHiLo(b1,b2),43))) {
    TraceOperation 061639 (Je [Var (Global 120),Con 127] (Branch F (Dloc 061646)));
    Let b3 = M[009057];
    Let b4 = M[009058];
    if (Equal(MakeHiLo(b3,b4),127)) {
      TraceOperation 061643 (Insert_obj (Var (Global 118)) (Var (Global 0)));
      Let b5 = M[009053];
      Let b6 = M[009054];
      Let b7 = M[008817];
      Let b8 = M[008818];
      Let b9 = M[Offset(Offset(000741,Mul(MakeHiLo(b5,b6),9)),4)];
      if (IsZero(Widen(b9))) {
        SetByte Offset(Offset(000741,Mul(MakeHiLo(b5,b6),9)),4) b8;
        Let b10 = M[Offset(Offset(000741,Mul(MakeHiLo(b7,b8),9)),6)];
        SetByte Offset(Offset(000741,Mul(MakeHiLo(b5,b6),9)),5) LoByte(Widen(b10));
        SetByte Offset(Offset(000741,Mul(MakeHiLo(b7,b8),9)),6) b6;
        Jump: 061646
      } else {
        Let b11 = M[Offset(Offset(000741,Mul(Widen(b9),9)),6)];
        if (Equal(Widen(b11),MakeHiLo(b5,b6))) {
          Let b12 = M[Offset(Offset(000741,Mul(MakeHiLo(b5,b6),9)),5)];
          SetByte Offset(Offset(000741,Mul(Widen(b9),9)),6) LoByte(Widen(b12));
          SetByte Offset(Offset(000741,Mul(MakeHiLo(b5,b6),9)),4) b8;
          Let b13 = M[Offset(Offset(000741,Mul(MakeHiLo(b7,b8),9)),6)];
          SetByte Offset(Offset(000741,Mul(MakeHiLo(b5,b6),9)),5) LoByte(Widen(b13));
          SetByte Offset(Offset(000741,Mul(MakeHiLo(b7,b8),9)),6) b6;
          Jump: 061646
        } else {
          Error: unlink/loop
        }
      }
    } else {
      Jump: 061646
    }
  } else {
    PopFrame return_address_14;
    JumpReturn: return_address_14, result: 0
  }
LocOp 061646:
  TraceOperation 061646 (Print "Your rather indelicate handling of the egg has caused it some damage, although you have succeeded in opening it.");
  GamePrint "Your rather indelicate handling of the egg has caused it some damage, although you have succeeded in opening it.";
  TraceOperation 061713 (Call (Floc 061720) [] Sp);
  PushFrame 061713;
  JumpCall: 061720, #actuals: 0
LocReturn 061713:
  PushStack call_result;
  TraceOperation 061718 New_line;
  GamePrint "\n";
  TraceOperation 061719 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[445]--------------------------------------------------
LocRoutine 061720:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 061723
LocOp 061723:
  TraceOperation 061723 (Jin (Con 84) (Con 87) (Branch F (Dloc 061739)));
  Let b1 = M[001501];
  if (Equal(87,Widen(b1))) {
    TraceOperation 061727 (Print " ");
    GamePrint " ";
    TraceOperation 061730 (Get_prop (Con 83) (Con 14) Sp);
    Let b2 = M[001495];
    Let b3 = M[001496];
    Let b4 = M[Address(MakeHiLo(b2,b3))];
    Error: getPropsA
  } else {
    Jump: 061739
  }
--[446]--------------------------------------------------
LocRoutine 061744:
  MakeRoutineFrame 0;
  Jump: 061745
LocOp 061745:
  TraceOperation 061745 (Get_parent (Con 87) Sp);
  Let b1 = M[001528];
  PushStack Widen(b1);
  TraceOperation 061748 (Insert_obj (Con 86) (Var Sp));
  PopStack popped2;
  Let b3 = M[001519];
  if (IsZero(Widen(b3))) {
    SetByte 001519 LoByte(popped2);
    Let b4 = M[Offset(Offset(000741,Mul(popped2,9)),6)];
    SetByte 001520 LoByte(Widen(b4));
    SetByte Offset(Offset(000741,Mul(popped2,9)),6) 86;
    TraceOperation 061751 (Call (Floc 030906) [Con 87] Sp);
    PushFrame 061751;
    SetLocal 1 87;
    JumpCall: 030906, #actuals: 1
  } else {
    Let b5 = M[Offset(Offset(000741,Mul(Widen(b3),9)),6)];
    if (Equal(Widen(b5),86)) {
      Let b6 = M[001520];
      SetByte Offset(Offset(000741,Mul(Widen(b3),9)),6) LoByte(Widen(b6));
      SetByte 001519 LoByte(popped2);
      Let b7 = M[Offset(Offset(000741,Mul(popped2,9)),6)];
      SetByte 001520 LoByte(Widen(b7));
      SetByte Offset(Offset(000741,Mul(popped2,9)),6) 86;
      TraceOperation 061751 (Call (Floc 030906) [Con 87] Sp);
      PushFrame 061751;
      SetLocal 1 87;
      JumpCall: 030906, #actuals: 1
    } else {
      Error: unlink/loop
    }
  }
LocReturn 061751:
  PushStack call_result;
  TraceOperation 061757 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[447]--------------------------------------------------
LocRoutine 061758:
  MakeRoutineFrame 0;
  Jump: 061759
LocOp 061759:
  TraceOperation 061759 (Je [Var (Global 120),Con 142] (Branch F Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),142)) {
    TraceOperation 061763 (Je [Var (Global 118),Con 84] (Branch F (Dloc 062068)));
    Let b3 = M[009053];
    Let b4 = M[009054];
    if (Equal(MakeHiLo(b3,b4),84)) {
      TraceOperation 061768 (Jz (Var (Global 17)) (Branch F (Dloc 062025)));
      Let b5 = M[008851];
      Let b6 = M[008852];
      if (IsZero(MakeHiLo(b5,b6))) {
        TraceOperation 061772 (Call (Floc 062104) [] Sp);
        PushFrame 061772;
        JumpCall: 062104, #actuals: 0
      } else {
        Jump: 062025
      }
    } else {
      Jump: 062068
    }
  } else {
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 0
  }
LocReturn 061772:
  PushStack call_result;
  TraceOperation 061777 (Jz (Var Sp) (Branch T (Dloc 062025)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 062025
  } else {
    TraceOperation 061781 (Print "The canary chirps, slightly off-key, an aria from a forgotten opera. From out of the greenery flies a lovely songbird. It perches on a limb just over your head and opens its beak to sing. As it does so a beautiful brass bauble drops from its mouth, bounces off the top of your head, and lands glimmering in the grass. As the canary winds down, the songbird flies away.");
    GamePrint "The canary chirps, slightly off-key, an aria from a forgotten opera. From out of the greenery flies a lovely songbird. It perches on a limb just over your head and opens its beak to sing. As it does so a beautiful brass bauble drops from its mouth, bounces off the top of your head, and lands glimmering in the grass. As the canary winds down, the songbird flies away.";
    TraceOperation 062004 New_line;
    GamePrint "\n";
    TraceOperation 062005 (Store (Con 33) (Con 1));
    SetByte 008851 0;
    SetByte 008852 1;
    TraceOperation 062008 (Je [Var (Global 0),Con 88] (Branch F (Dloc 062018)));
    Let b2 = M[008817];
    Let b3 = M[008818];
    if (Equal(MakeHiLo(b2,b3),88)) {
      TraceOperation 062012 (Push (Con 75));
      PushStack 75;
      TraceOperation 062015 (Jump 062021);
      Jump: 062021
    } else {
      Jump: 062018
    }
  }
LocOp 062018:
  TraceOperation 062018 (Push (Var (Global 0)));
  Let b1 = M[008817];
  Let b2 = M[008818];
  PushStack MakeHiLo(b1,b2);
  Jump: 062021
LocOp 062021:
  TraceOperation 062021 (Insert_obj (Con 85) (Var Sp));
  PopStack popped1;
  Let b2 = M[001510];
  if (IsZero(Widen(b2))) {
    SetByte 001510 LoByte(popped1);
    Let b3 = M[Offset(Offset(000741,Mul(popped1,9)),6)];
    SetByte 001511 LoByte(Widen(b3));
    SetByte Offset(Offset(000741,Mul(popped1,9)),6) 85;
    TraceOperation 062024 Rtrue;
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 1
  } else {
    Let b5 = M[Offset(Offset(000741,Mul(Widen(b2),9)),6)];
    if (Equal(Widen(b5),85)) {
      Let b6 = M[001511];
      SetByte Offset(Offset(000741,Mul(Widen(b2),9)),6) LoByte(Widen(b6));
      SetByte 001510 LoByte(popped1);
      Let b7 = M[Offset(Offset(000741,Mul(popped1,9)),6)];
      SetByte 001511 LoByte(Widen(b7));
      SetByte Offset(Offset(000741,Mul(popped1,9)),6) 85;
      TraceOperation 062024 Rtrue;
      PopFrame return_address_8;
      JumpReturn: return_address_8, result: 1
    } else {
      Error: unlink/loop
    }
  }
LocOp 062025:
  TraceOperation 062025 (Print_ret "The canary chirps blithely, if somewhat tinnily, for a short time.");
  GamePrint "The canary chirps blithely, if somewhat tinnily, for a short time.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 062068:
  TraceOperation 062068 (Print_ret "There is an unpleasant grinding noise from inside the canary.");
  GamePrint "There is an unpleasant grinding noise from inside the canary.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[448]--------------------------------------------------
LocRoutine 062104:
  MakeRoutineFrame 0;
  Jump: 062105
LocOp 062105:
  TraceOperation 062105 (Je [Var (Global 0),Con 78,Con 77,Con 76] (Branch T Dtrue));
  Let b1 = M[008817];
  Let b2 = M[008818];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),78),Equal(MakeHiLo(b1,b2),77)),Equal(MakeHiLo(b1,b2),76))) {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    TraceOperation 062112 (Je [Var (Global 0),Con 75,Con 88] (Branch T Dtrue));
    Let b4 = M[008817];
    Let b5 = M[008818];
    if (LogOr(Equal(MakeHiLo(b4,b5),75),Equal(MakeHiLo(b4,b5),88))) {
      PopFrame return_address_6;
      JumpReturn: return_address_6, result: 1
    } else {
      TraceOperation 062118 Rfalse;
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 0
    }
  }
--[449]--------------------------------------------------
LocRoutine 062120:
  MakeRoutineFrame 0;
  Jump: 062121
LocOp 062121:
  TraceOperation 062121 (Call (Floc 062104) [] Sp);
  PushFrame 062121;
  JumpCall: 062104, #actuals: 0
LocReturn 062121:
  PushStack call_result;
  TraceOperation 062126 (Jz (Var Sp) (Branch F (Dloc 062142)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 062129 (Call (Floc 021638) [Con 31060] Sp);
    PushFrame 062129;
    SetLocal 1 31060;
    JumpCall: 021638, #actuals: 1
  } else {
    Jump: 062142
  }
LocReturn 062129:
  PushStack call_result;
  TraceOperation 062136 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 062141 Rfalse;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: 0
LocOp 062142:
  TraceOperation 062142 (Random (Con 100) Sp);
  LetRandom random1 100;
  PushStack random1;
  TraceOperation 062146 (Jg (Con 15) (Var Sp) (Branch F Dfalse));
  PopStack popped2;
  if (GreaterThan(15,popped2)) {
    TraceOperation 062150 (Print_ret "You hear in the distance the chirping of a song bird.");
    GamePrint "You hear in the distance the chirping of a song bird.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 0
  }
--[450]--------------------------------------------------
LocRoutine 062184:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 062187
LocOp 062187:
  TraceOperation 062187 (Je [Var (Local 1),Con 2] (Branch F (Dloc 062206)));
  if (Equal(GetLocal(1),2)) {
    TraceOperation 062191 (Call (Floc 021618) [Con 31060,Con -1] Sp);
    PushFrame 062191;
    SetLocal 1 31060;
    SetLocal 2 -1;
    JumpCall: 021618, #actuals: 2
  } else {
    Jump: 062206
  }
LocReturn 062191:
  PushStack call_result;
  TraceOperation 062200 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 062205 Rtrue;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: 1
LocOp 062206:
  TraceOperation 062206 (Je [Var (Local 1),Con 1] (Branch F Dfalse));
  if (Equal(GetLocal(1),1)) {
    TraceOperation 062210 (Je [Var (Global 120),Con 30,Con 32] (Branch F Dfalse));
    Let b1 = M[009057];
    Let b2 = M[009058];
    if (LogOr(Equal(MakeHiLo(b1,b2),30),Equal(MakeHiLo(b1,b2),32))) {
      TraceOperation 062216 (Je [Var (Global 118),Con 241] (Branch F Dfalse));
      Let b3 = M[009053];
      Let b4 = M[009054];
      if (Equal(MakeHiLo(b3,b4),241)) {
        TraceOperation 062220 (Call (Floc 038000) [Con 23] Sp);
        PushFrame 062220;
        SetLocal 1 23;
        JumpCall: 038000, #actuals: 1
      } else {
        PopFrame return_address_5;
        JumpReturn: return_address_5, result: 0
      }
    } else {
      PopFrame return_address_6;
      JumpReturn: return_address_6, result: 0
    }
  } else {
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 0
  }
LocReturn 062220:
  PushStack call_result;
  TraceOperation 062226 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[451]--------------------------------------------------
LocRoutine 062228:
  MakeRoutineFrame 0;
  Jump: 062229
LocOp 062229:
  TraceOperation 062229 (Je [Var (Global 120),Con 32,Con 31,Con 30] (Branch F Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),32),Equal(MakeHiLo(b1,b2),31)),Equal(MakeHiLo(b1,b2),30))) {
    TraceOperation 062236 (Print_ret "The cliff is too steep for climbing.");
    GamePrint "The cliff is too steep for climbing.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 0
  }
--[452]--------------------------------------------------
LocRoutine 062258:
  MakeRoutineFrame 0;
  Jump: 062259
LocOp 062259:
  TraceOperation 062259 (Je [Var (Global 120),Con 69] (Branch T (Dloc 062271)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),69)) {
    Jump: 062271
  } else {
    TraceOperation 062263 (Je [Var (Global 120),Con 18] (Branch F (Dloc 062302)));
    Let b3 = M[009057];
    Let b4 = M[009058];
    if (Equal(MakeHiLo(b3,b4),18)) {
      TraceOperation 062267 (Je [Var (Global 118),Con 5] (Branch F (Dloc 062302)));
      Let b5 = M[009053];
      Let b6 = M[009054];
      if (Equal(MakeHiLo(b5,b6),5)) {
        Jump: 062271
      } else {
        Jump: 062302
      }
    } else {
      Jump: 062302
    }
  }
LocOp 062271:
  TraceOperation 062271 (Print_ret "That would be very unwise. Perhaps even fatal.");
  GamePrint "That would be very unwise. Perhaps even fatal.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 062302:
  TraceOperation 062302 (Je [Var (Global 119),Con 93] (Branch F Dfalse));
  Let b1 = M[009055];
  Let b2 = M[009056];
  if (Equal(MakeHiLo(b1,b2),93)) {
    TraceOperation 062306 (Je [Var (Global 120),Con 129,Con 18] (Branch F Dfalse));
    Let b3 = M[009057];
    Let b4 = M[009058];
    if (LogOr(Equal(MakeHiLo(b3,b4),129),Equal(MakeHiLo(b3,b4),18))) {
      TraceOperation 062312 (Print "The ");
      GamePrint "The ";
      TraceOperation 062315 (Print_obj (Var (Global 118)));
      Let b5 = M[009053];
      Let b6 = M[009054];
      Let b7 = M[Offset(Offset(000741,Mul(MakeHiLo(b5,b6),9)),7)];
      Let b8 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b5,b6),9)),7),1)];
      Let b9 = M[Address(MakeHiLo(b7,b8))];
      if (IsZeroByte(b9)) {
        GamePrint "";
        TraceOperation 062317 (Print " tumbles into the river and is seen no more.");
        GamePrint " tumbles into the river and is seen no more.";
        TraceOperation 062340 New_line;
        GamePrint "\n";
        TraceOperation 062341 (Call (Floc 030906) [Var (Global 118)] Sp);
        Let b10 = M[009053];
        Let b11 = M[009054];
        PushFrame 062341;
        SetLocal 1 MakeHiLo(b10,b11);
        JumpCall: 030906, #actuals: 1
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b7,b8)),1));
        TraceOperation 062317 (Print " tumbles into the river and is seen no more.");
        GamePrint " tumbles into the river and is seen no more.";
        TraceOperation 062340 New_line;
        GamePrint "\n";
        TraceOperation 062341 (Call (Floc 030906) [Var (Global 118)] Sp);
        Let b12 = M[009053];
        Let b13 = M[009054];
        PushFrame 062341;
        SetLocal 1 MakeHiLo(b12,b13);
        JumpCall: 030906, #actuals: 1
      }
    } else {
      PopFrame return_address_14;
      JumpReturn: return_address_14, result: 0
    }
  } else {
    PopFrame return_address_15;
    JumpReturn: return_address_15, result: 0
  }
LocReturn 062341:
  PushStack call_result;
  TraceOperation 062347 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[453]--------------------------------------------------
LocRoutine 062348:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 062351
LocOp 062351:
  TraceOperation 062351 (Je [Var (Global 0),Con 133] (Branch T (Dloc 062377)));
  Let b1 = M[008817];
  Let b2 = M[008818];
  if (Equal(MakeHiLo(b1,b2),133)) {
    Jump: 062377
  } else {
    TraceOperation 062355 (Store (Con 163) (Con 0));
    SetByte 009111 0;
    SetByte 009112 0;
    TraceOperation 062358 (Je [Var (Global 120),Con 130] (Branch F Dfalse));
    Let b3 = M[009057];
    Let b4 = M[009058];
    if (Equal(MakeHiLo(b3,b4),130)) {
      TraceOperation 062362 (Print_ret "You can't tie the rope to that.");
      GamePrint "You can't tie the rope to that.\n";
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 1
    } else {
      PopFrame return_address_6;
      JumpReturn: return_address_6, result: 0
    }
  }
LocOp 062377:
  TraceOperation 062377 (Je [Var (Global 120),Con 130] (Branch F (Dloc 062466)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),130)) {
    TraceOperation 062382 (Je [Var (Global 119),Con 134] (Branch F Dfalse));
    Let b3 = M[009055];
    Let b4 = M[009056];
    if (Equal(MakeHiLo(b3,b4),134)) {
      TraceOperation 062386 (Jz (Var (Global 147)) (Branch T (Dloc 062406)));
      Let b5 = M[009111];
      Let b6 = M[009112];
      if (IsZero(MakeHiLo(b5,b6))) {
        Jump: 062406
      } else {
        TraceOperation 062389 (Print_ret "The rope is already tied to it.");
        GamePrint "The rope is already tied to it.\n";
        PopFrame return_address_7;
        JumpReturn: return_address_7, result: 1
      }
    } else {
      PopFrame return_address_8;
      JumpReturn: return_address_8, result: 0
    }
  } else {
    Jump: 062466
  }
LocOp 062406:
  TraceOperation 062406 (Print "The rope drops over the side and comes within ten feet of the floor.");
  GamePrint "The rope drops over the side and comes within ten feet of the floor.";
  TraceOperation 062445 New_line;
  GamePrint "\n";
  TraceOperation 062446 (Store (Con 163) (Con 1));
  SetByte 009111 0;
  SetByte 009112 1;
  TraceOperation 062449 (Set_attr (Con 129) (Con 14));
  Let b1 = M[001903];
  SetByte 001903 SetBit(b1,1);
  TraceOperation 062452 (Get_parent (Con 129) (Local 1));
  Let b2 = M[001906];
  SetLocal 1 Widen(b2);
  TraceOperation 062455 (Jz (Var (Local 1)) (Branch T (Dloc 062462)));
  if (IsZero(GetLocal(1))) {
    Jump: 062462
  } else {
    TraceOperation 062458 (Jin (Var (Local 1)) (Con 82) (Branch T Dtrue));
    Let b3 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),4)];
    if (Equal(82,Widen(b3))) {
      PopFrame return_address_4;
      JumpReturn: return_address_4, result: 1
    } else {
      Jump: 062462
    }
  }
LocOp 062462:
  TraceOperation 062462 (Insert_obj (Con 129) (Var (Global 0)));
  Let b1 = M[008817];
  Let b2 = M[008818];
  Let b3 = M[001906];
  if (IsZero(Widen(b3))) {
    SetByte 001906 b2;
    Let b4 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),6)];
    SetByte 001907 LoByte(Widen(b4));
    SetByte Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),6) 129;
    TraceOperation 062465 Rtrue;
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  } else {
    Let b6 = M[Offset(Offset(000741,Mul(Widen(b3),9)),6)];
    if (Equal(Widen(b6),129)) {
      Let b7 = M[001907];
      SetByte Offset(Offset(000741,Mul(Widen(b3),9)),6) LoByte(Widen(b7));
      SetByte 001906 b2;
      Let b8 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),6)];
      SetByte 001907 LoByte(Widen(b8));
      SetByte Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),6) 129;
      TraceOperation 062465 Rtrue;
      PopFrame return_address_9;
      JumpReturn: return_address_9, result: 1
    } else {
      Error: unlink/loop
    }
  }
LocOp 062466:
  TraceOperation 062466 (Je [Var (Global 120),Con 31] (Branch F (Dloc 062484)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),31)) {
    TraceOperation 062470 (Je [Var (Global 118),Con 129] (Branch F (Dloc 062484)));
    Let b3 = M[009053];
    Let b4 = M[009054];
    if (Equal(MakeHiLo(b3,b4),129)) {
      TraceOperation 062474 (Jz (Var (Global 147)) (Branch T (Dloc 062484)));
      Let b5 = M[009111];
      Let b6 = M[009112];
      if (IsZero(MakeHiLo(b5,b6))) {
        Jump: 062484
      } else {
        TraceOperation 062477 (Call (Floc 038000) [Con 22] Sp);
        PushFrame 062477;
        SetLocal 1 22;
        JumpCall: 038000, #actuals: 1
      }
    } else {
      Jump: 062484
    }
  } else {
    Jump: 062484
  }
LocReturn 062477:
  PushStack call_result;
  TraceOperation 062483 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 062484:
  TraceOperation 062484 (Je [Var (Global 120),Con 131] (Branch F (Dloc 062586)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),131)) {
    TraceOperation 062489 (Je [Con 129,Var (Global 119)] (Branch F (Dloc 062586)));
    Let b3 = M[009055];
    Let b4 = M[009056];
    if (Equal(129,MakeHiLo(b3,b4))) {
      TraceOperation 062494 (Test_attr (Var (Global 118)) (Con 30) (Branch F (Dloc 062568)));
      Let b5 = M[009053];
      Let b6 = M[009054];
      Let b7 = M[Offset(Offset(000741,Mul(MakeHiLo(b5,b6),9)),3)];
      if (TestBit(b7,1)) {
        TraceOperation 062499 (Get_prop (Var (Global 118)) (Con 7) Sp);
        Let b8 = M[009053];
        Let b9 = M[009054];
        Let b10 = M[Offset(Offset(000741,Mul(MakeHiLo(b8,b9),9)),7)];
        Let b11 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b8,b9),9)),7),1)];
        Let b12 = M[Address(MakeHiLo(b10,b11))];
        Error: getPropsA
      } else {
        Jump: 062568
      }
    } else {
      Jump: 062586
    }
  } else {
    Jump: 062586
  }
LocReturn 062535:
  PushStack call_result;
  TraceOperation 062541 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 062542:
  TraceOperation 062542 (Print "The ");
  GamePrint "The ";
  TraceOperation 062545 (Print_obj (Var (Global 118)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  if (IsZeroByte(b5)) {
    GamePrint "";
    TraceOperation 062547 (Print_ret " struggles and you cannot tie him up.");
    GamePrint " struggles and you cannot tie him up.\n";
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
    TraceOperation 062547 (Print_ret " struggles and you cannot tie him up.");
    GamePrint " struggles and you cannot tie him up.\n";
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 1
  }
LocOp 062568:
  TraceOperation 062568 (Print "Why would you tie up a ");
  GamePrint "Why would you tie up a ";
  TraceOperation 062581 (Print_obj (Var (Global 118)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  if (IsZeroByte(b5)) {
    GamePrint "";
    TraceOperation 062583 (Print_ret "?");
    GamePrint "?\n";
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
    TraceOperation 062583 (Print_ret "?");
    GamePrint "?\n";
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 1
  }
LocOp 062586:
  TraceOperation 062586 (Je [Var (Global 120),Con 134] (Branch F (Dloc 062631)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),134)) {
    TraceOperation 062590 (Jz (Var (Global 147)) (Branch T (Dloc 062614)));
    Let b3 = M[009111];
    Let b4 = M[009112];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 062614
    } else {
      TraceOperation 062593 (Store (Con 163) (Con 0));
      SetByte 009111 0;
      SetByte 009112 0;
      TraceOperation 062596 (Clear_attr (Con 129) (Con 14));
      Let b5 = M[001903];
      SetByte 001903 ClearBit(b5,1);
      TraceOperation 062599 (Print_ret "The rope is now untied.");
      GamePrint "The rope is now untied.\n";
      PopFrame return_address_6;
      JumpReturn: return_address_6, result: 1
    }
  } else {
    Jump: 062631
  }
LocOp 062614:
  TraceOperation 062614 (Print_ret "It is not tied to anything.");
  GamePrint "It is not tied to anything.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 062631:
  TraceOperation 062631 (Je [Var (Global 120),Con 49] (Branch F (Dloc 062672)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),49)) {
    TraceOperation 062635 (Je [Var (Global 0),Con 133] (Branch F (Dloc 062672)));
    Let b3 = M[008817];
    Let b4 = M[008818];
    if (Equal(MakeHiLo(b3,b4),133)) {
      TraceOperation 062639 (Jz (Var (Global 147)) (Branch F (Dloc 062672)));
      Let b5 = M[009111];
      Let b6 = M[009112];
      if (IsZero(MakeHiLo(b5,b6))) {
        TraceOperation 062642 (Insert_obj (Con 129) (Con 105));
        Let b7 = M[001906];
        if (IsZero(Widen(b7))) {
          SetByte 001906 105;
          Let b8 = M[001692];
          SetByte 001907 LoByte(Widen(b8));
          SetByte 001692 129;
          TraceOperation 062645 (Print_ret "The rope drops gently to the floor below.");
          GamePrint "The rope drops gently to the floor below.\n";
          PopFrame return_address_9;
          JumpReturn: return_address_9, result: 1
        } else {
          Let b10 = M[Offset(Offset(000741,Mul(Widen(b7),9)),6)];
          if (Equal(Widen(b10),129)) {
            Let b11 = M[001907];
            SetByte Offset(Offset(000741,Mul(Widen(b7),9)),6) LoByte(Widen(b11));
            SetByte 001906 105;
            Let b12 = M[001692];
            SetByte 001907 LoByte(Widen(b12));
            SetByte 001692 129;
            TraceOperation 062645 (Print_ret "The rope drops gently to the floor below.");
            GamePrint "The rope drops gently to the floor below.\n";
            PopFrame return_address_13;
            JumpReturn: return_address_13, result: 1
          } else {
            Error: unlink/loop
          }
        }
      } else {
        Jump: 062672
      }
    } else {
      Jump: 062672
    }
  } else {
    Jump: 062672
  }
LocOp 062672:
  TraceOperation 062672 (Je [Var (Global 120),Con 93] (Branch F Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),93)) {
    TraceOperation 062676 (Jz (Var (Global 147)) (Branch T Dfalse));
    Let b3 = M[009111];
    Let b4 = M[009112];
    if (IsZero(MakeHiLo(b3,b4))) {
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 0
    } else {
      TraceOperation 062679 (Print_ret "The rope is tied to the railing.");
      GamePrint "The rope is tied to the railing.\n";
      PopFrame return_address_6;
      JumpReturn: return_address_6, result: 1
    }
  } else {
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 0
  }
--[454]--------------------------------------------------
LocRoutine 062698:
  MakeRoutineFrame 0;
  Jump: 062699
LocOp 062699:
  TraceOperation 062699 (Je [Var (Global 118),Con 129] (Branch F (Dloc 062718)));
  Let b1 = M[009053];
  Let b2 = M[009054];
  if (Equal(MakeHiLo(b1,b2),129)) {
    TraceOperation 062703 (Jz (Var (Global 147)) (Branch T (Dloc 062718)));
    Let b3 = M[009111];
    Let b4 = M[009112];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 062718
    } else {
      TraceOperation 062706 (Je [Var (Global 119),Con 134] (Branch F (Dloc 062718)));
      Let b5 = M[009055];
      Let b6 = M[009056];
      if (Equal(MakeHiLo(b5,b6),134)) {
        TraceOperation 062710 (Call (Floc 022396) [Con 134,Var (Global 118)] Sp);
        Let b7 = M[009053];
        Let b8 = M[009054];
        PushFrame 062710;
        SetLocal 1 134;
        SetLocal 2 MakeHiLo(b7,b8);
        JumpCall: 022396, #actuals: 2
      } else {
        Jump: 062718
      }
    }
  } else {
    Jump: 062718
  }
LocReturn 062710:
  PushStack call_result;
  TraceOperation 062717 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 062718:
  TraceOperation 062718 (Print_ret "It's not attached to that!");
  GamePrint "It's not attached to that!\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[455]--------------------------------------------------
LocRoutine 062734:
  MakeRoutineFrame 0;
  Jump: 062735
LocOp 062735:
  TraceOperation 062735 (Je [Var (Global 120),Con 31,Con 30,Con 34] (Branch T (Dloc 062746)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),31),Equal(MakeHiLo(b1,b2),30)),Equal(MakeHiLo(b1,b2),34))) {
    Jump: 062746
  } else {
    TraceOperation 062742 (Je [Var (Global 120),Con 32] (Branch T (Dloc 062754)));
    Let b3 = M[009057];
    Let b4 = M[009058];
    if (Equal(MakeHiLo(b3,b4),32)) {
      Jump: 062754
    } else {
      Jump: 062746
    }
  }
LocOp 062746:
  TraceOperation 062746 (Je [Var (Global 120),Con 18] (Branch F (Dloc 062794)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),18)) {
    TraceOperation 062750 (Je [Var (Global 118),Con 5] (Branch F (Dloc 062794)));
    Let b3 = M[009053];
    Let b4 = M[009054];
    if (Equal(MakeHiLo(b3,b4),5)) {
      Jump: 062754
    } else {
      Jump: 062794
    }
  } else {
    Jump: 062794
  }
LocOp 062754:
  TraceOperation 062754 (Je [Var (Global 0),Con 72] (Branch F (Dloc 062765)));
  Let b1 = M[008817];
  Let b2 = M[008818];
  if (Equal(MakeHiLo(b1,b2),72)) {
    TraceOperation 062758 (Call (Floc 038000) [Con 29] Sp);
    PushFrame 062758;
    SetLocal 1 29;
    JumpCall: 038000, #actuals: 1
  } else {
    Jump: 062765
  }
LocReturn 062758:
  PushStack call_result;
  TraceOperation 062764 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 062765:
  TraceOperation 062765 (Print "You tumble down the slide....");
  GamePrint "You tumble down the slide....";
  TraceOperation 062786 New_line;
  GamePrint "\n";
  TraceOperation 062787 (Call (Floc 037558) [Con 72] Sp);
  PushFrame 062787;
  SetLocal 1 72;
  JumpCall: 037558, #actuals: 1
LocReturn 062787:
  PushStack call_result;
  TraceOperation 062793 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 062794:
  TraceOperation 062794 (Je [Var (Global 120),Con 18] (Branch F Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),18)) {
    TraceOperation 062798 (Call (Floc 062806) [Var (Global 118)] Sp);
    Let b3 = M[009053];
    Let b4 = M[009054];
    PushFrame 062798;
    SetLocal 1 MakeHiLo(b3,b4);
    JumpCall: 062806, #actuals: 1
  } else {
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 0
  }
LocReturn 062798:
  PushStack call_result;
  TraceOperation 062804 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[456]--------------------------------------------------
LocRoutine 062806:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 062809
LocOp 062809:
  TraceOperation 062809 (Test_attr (Var (Local 1)) (Con 17) (Branch F (Dloc 062853)));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),2)];
  if (TestBit(b1,6)) {
    TraceOperation 062813 (Print "The ");
    GamePrint "The ";
    TraceOperation 062816 (Print_obj (Var (Local 1)));
    Let b2 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),7)];
    Let b3 = M[Offset(Offset(Offset(000741,Mul(GetLocal(1),9)),7),1)];
    Let b4 = M[Address(MakeHiLo(b2,b3))];
    if (IsZeroByte(b4)) {
      GamePrint "";
      TraceOperation 062818 (Print " falls into the slide and is gone.");
      GamePrint " falls into the slide and is gone.";
      TraceOperation 062837 New_line;
      GamePrint "\n";
      TraceOperation 062838 (Je [Var (Local 1),Con 237] (Branch F (Dloc 062849)));
      if (Equal(GetLocal(1),237)) {
        TraceOperation 062842 (Call (Floc 030906) [Var (Local 1)] Sp);
        PushFrame 062842;
        SetLocal 1 GetLocal(1);
        JumpCall: 030906, #actuals: 1
      } else {
        Jump: 062849
      }
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b2,b3)),1));
      TraceOperation 062818 (Print " falls into the slide and is gone.");
      GamePrint " falls into the slide and is gone.";
      TraceOperation 062837 New_line;
      GamePrint "\n";
      TraceOperation 062838 (Je [Var (Local 1),Con 237] (Branch F (Dloc 062849)));
      if (Equal(GetLocal(1),237)) {
        TraceOperation 062842 (Call (Floc 030906) [Var (Local 1)] Sp);
        PushFrame 062842;
        SetLocal 1 GetLocal(1);
        JumpCall: 030906, #actuals: 1
      } else {
        Jump: 062849
      }
    }
  } else {
    Jump: 062853
  }
LocReturn 062842:
  PushStack call_result;
  TraceOperation 062848 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 062849:
  TraceOperation 062849 (Insert_obj (Var (Local 1)) (Con 72));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),4)];
  if (IsZero(Widen(b1))) {
    SetByte Offset(Offset(000741,Mul(GetLocal(1),9)),4) 72;
    Let b2 = M[001395];
    SetByte Offset(Offset(000741,Mul(GetLocal(1),9)),5) LoByte(Widen(b2));
    SetByte 001395 LoByte(GetLocal(1));
    TraceOperation 062852 Rtrue;
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Let b4 = M[Offset(Offset(000741,Mul(Widen(b1),9)),6)];
    if (Equal(Widen(b4),GetLocal(1))) {
      Let b5 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),5)];
      SetByte Offset(Offset(000741,Mul(Widen(b1),9)),6) LoByte(Widen(b5));
      SetByte Offset(Offset(000741,Mul(GetLocal(1),9)),4) 72;
      Let b6 = M[001395];
      SetByte Offset(Offset(000741,Mul(GetLocal(1),9)),5) LoByte(Widen(b6));
      SetByte 001395 LoByte(GetLocal(1));
      TraceOperation 062852 Rtrue;
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 1
    } else {
      Error: unlink/loop
    }
  }
LocOp 062853:
  TraceOperation 062853 (Call (Floc 020076) [Var (Global 53)] Sp);
  Let b1 = M[008923];
  Let b2 = M[008924];
  PushFrame 062853;
  SetLocal 1 MakeHiLo(b1,b2);
  JumpCall: 020076, #actuals: 1
LocReturn 062853:
  PushStack call_result;
  TraceOperation 062859 (Print_paddr (Var Sp));
  PopStack popped1;
  GamePrint GetText(PackedAddress Z3(popped1));
  TraceOperation 062861 New_line;
  GamePrint "\n";
  TraceOperation 062862 Rtrue;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: 1
--[457]--------------------------------------------------
LocRoutine 062864:
  MakeRoutineFrame 0;
  Jump: 062865
LocOp 062865:
  TraceOperation 062865 (Je [Var (Global 120),Con 117] (Branch F Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),117)) {
    TraceOperation 062869 (Jin (Con 225) (Var (Global 118)) (Branch F Dfalse));
    Let b3 = M[009053];
    Let b4 = M[009054];
    Let b5 = M[002770];
    if (Equal(MakeHiLo(b3,b4),Widen(b5))) {
      TraceOperation 062873 (Print_ret "It smells of hot peppers.");
      GamePrint "It smells of hot peppers.\n";
      PopFrame return_address_6;
      JumpReturn: return_address_6, result: 1
    } else {
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 0
    }
  } else {
    PopFrame return_address_8;
    JumpReturn: return_address_8, result: 0
  }
--[458]--------------------------------------------------
LocRoutine 062890:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 062895
LocOp 062895:
  TraceOperation 062895 (Je [Var (Global 120),Con 137] (Branch F (Dloc 062926)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),137)) {
    TraceOperation 062899 (Je [Var (Global 0),Con 206] (Branch F Dfalse));
    Let b3 = M[008817];
    Let b4 = M[008818];
    if (Equal(MakeHiLo(b3,b4),206)) {
      TraceOperation 062903 (Je [Var (Global 118),Con 29] (Branch F Dfalse));
      Let b5 = M[009053];
      Let b6 = M[009054];
      if (Equal(MakeHiLo(b5,b6),29)) {
        TraceOperation 062907 (Print_ret "You cannot enter in your condition.");
        GamePrint "You cannot enter in your condition.\n";
        PopFrame return_address_7;
        JumpReturn: return_address_7, result: 1
      } else {
        PopFrame return_address_8;
        JumpReturn: return_address_8, result: 0
      }
    } else {
      PopFrame return_address_9;
      JumpReturn: return_address_9, result: 0
    }
  } else {
    Jump: 062926
  }
LocOp 062926:
  TraceOperation 062926 (Je [Var (Global 120),Con 2,Con 0,Con 1] (Branch T Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),2),Equal(MakeHiLo(b1,b2),0)),Equal(MakeHiLo(b1,b2),1))) {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  } else {
    TraceOperation 062933 (Je [Var (Global 120),Con 8,Con 15,Con 12] (Branch T Dfalse));
    Let b4 = M[009057];
    Let b5 = M[009058];
    if (LogOr(LogOr(Equal(MakeHiLo(b4,b5),8),Equal(MakeHiLo(b4,b5),15)),Equal(MakeHiLo(b4,b5),12))) {
      PopFrame return_address_6;
      JumpReturn: return_address_6, result: 0
    } else {
      TraceOperation 062940 (Je [Var (Global 120),Con 6,Con 5,Con 7] (Branch T Dfalse));
      Let b7 = M[009057];
      Let b8 = M[009058];
      if (LogOr(LogOr(Equal(MakeHiLo(b7,b8),6),Equal(MakeHiLo(b7,b8),5)),Equal(MakeHiLo(b7,b8),7))) {
        PopFrame return_address_9;
        JumpReturn: return_address_9, result: 0
      } else {
        TraceOperation 062947 (Je [Var (Global 120),Con 136,Con 42,Con 19] (Branch T (Dloc 062958)));
        Let b10 = M[009057];
        Let b11 = M[009058];
        if (LogOr(LogOr(Equal(MakeHiLo(b10,b11),136),Equal(MakeHiLo(b10,b11),42)),Equal(MakeHiLo(b10,b11),19))) {
          Jump: 062958
        } else {
          TraceOperation 062954 (Je [Var (Global 120),Con 126] (Branch F (Dloc 062985)));
          Let b12 = M[009057];
          Let b13 = M[009058];
          if (Equal(MakeHiLo(b12,b13),126)) {
            Jump: 062958
          } else {
            Jump: 062985
          }
        }
      }
    }
  }
LocOp 062958:
  TraceOperation 062958 (Print_ret "All such attacks are vain in your condition.");
  GamePrint "All such attacks are vain in your condition.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 062985:
  TraceOperation 062985 (Je [Var (Global 120),Con 51,Con 35,Con 43] (Branch T (Dloc 063012)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),51),Equal(MakeHiLo(b1,b2),35)),Equal(MakeHiLo(b1,b2),43))) {
    Jump: 063012
  } else {
    TraceOperation 062992 (Je [Var (Global 120),Con 41,Con 23,Con 47] (Branch T (Dloc 063012)));
    Let b3 = M[009057];
    Let b4 = M[009058];
    if (LogOr(LogOr(Equal(MakeHiLo(b3,b4),41),Equal(MakeHiLo(b3,b4),23)),Equal(MakeHiLo(b3,b4),47))) {
      Jump: 063012
    } else {
      TraceOperation 062999 (Je [Var (Global 120),Con 130,Con 28,Con 89] (Branch T (Dloc 063012)));
      Let b5 = M[009057];
      Let b6 = M[009058];
      if (LogOr(LogOr(Equal(MakeHiLo(b5,b6),130),Equal(MakeHiLo(b5,b6),28)),Equal(MakeHiLo(b5,b6),89))) {
        Jump: 063012
      } else {
        TraceOperation 063006 (Je [Var (Global 120),Con 110,Con 134] (Branch F (Dloc 063043)));
        Let b7 = M[009057];
        Let b8 = M[009058];
        if (LogOr(Equal(MakeHiLo(b7,b8),110),Equal(MakeHiLo(b7,b8),134))) {
          Jump: 063012
        } else {
          Jump: 063043
        }
      }
    }
  }
LocOp 063012:
  TraceOperation 063012 (Print_ret "Even such an action is beyond your capabilities.");
  GamePrint "Even such an action is beyond your capabilities.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 063043:
  TraceOperation 063043 (Je [Var (Global 120),Con 135] (Branch F (Dloc 063076)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),135)) {
    TraceOperation 063047 (Print_ret "Might as well. You've got an eternity.");
    GamePrint "Might as well. You've got an eternity.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 063076
  }
LocOp 063076:
  TraceOperation 063076 (Je [Var (Global 120),Con 14] (Branch F (Dloc 063101)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),14)) {
    TraceOperation 063080 (Print_ret "You need no light to guide you.");
    GamePrint "You need no light to guide you.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 063101
  }
LocOp 063101:
  TraceOperation 063101 (Je [Var (Global 120),Con 9] (Branch F (Dloc 063128)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),9)) {
    TraceOperation 063105 (Print_ret "You're dead! How can you think of your score?");
    GamePrint "You're dead! How can you think of your score?\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 063128
  }
LocOp 063128:
  TraceOperation 063128 (Je [Var (Global 120),Con 93] (Branch F (Dloc 063151)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),93)) {
    TraceOperation 063132 (Print_ret "Your hand passes through its object.");
    GamePrint "Your hand passes through its object.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 063151
  }
LocOp 063151:
  TraceOperation 063151 (Je [Var (Global 120),Con 4,Con 127,Con 49] (Branch F (Dloc 063173)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),4),Equal(MakeHiLo(b1,b2),127)),Equal(MakeHiLo(b1,b2),49))) {
    TraceOperation 063158 (Print_ret "You have no possessions.");
    GamePrint "You have no possessions.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 063173
  }
LocOp 063173:
  TraceOperation 063173 (Je [Var (Global 120),Con 3] (Branch F (Dloc 063186)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),3)) {
    TraceOperation 063177 (Print_ret "You are dead.");
    GamePrint "You are dead.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 063186
  }
LocOp 063186:
  TraceOperation 063186 (Je [Var (Global 120),Con 79] (Branch F (Dloc 063286)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),79)) {
    TraceOperation 063191 (Print "The room looks strange and unearthly");
    GamePrint "The room looks strange and unearthly";
    TraceOperation 063212 (Get_child (Var (Global 0)) Sp (Branch T (Dloc 063222)));
    Let b3 = M[008817];
    Let b4 = M[008818];
    Let b5 = M[Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),6)];
    PushStack Widen(b5);
    if (IsZero(Widen(b5))) {
      TraceOperation 063216 (Print ".");
      GamePrint ".";
      TraceOperation 063219 (Jump 063243);
      Jump: 063243
    } else {
      Jump: 063222
    }
  } else {
    Jump: 063286
  }
--[459]--------------------------------------------------
LocRoutine 063306:
  MakeRoutineFrame 0;
  Jump: 063307
LocOp 063307:
  TraceOperation 063307 (Store (Con 88) (Con 0));
  SetByte 008961 0;
  SetByte 008962 0;
  TraceOperation 063310 (Store (Con 78) (Con 0));
  SetByte 008941 0;
  SetByte 008942 0;
  TraceOperation 063313 (Jin (Con 217) (Con 102) (Branch F (Dloc 063320)));
  Let b1 = M[002698];
  if (Equal(102,Widen(b1))) {
    TraceOperation 063317 (Store (Con 157) (Con 0));
    SetByte 009099 0;
    SetByte 009100 0;
    TraceOperation 063320 (Print "From the distance the sound of a lone trumpet is heard. The room becomes very bright and you feel disembodied. In a moment, the brightness fades and you find yourself rising as if from a long sleep, deep in the woods. In the distance you can faintly hear a songbird and the sounds of the forest.");
    GamePrint "From the distance the sound of a lone trumpet is heard. The room becomes very bright and you feel disembodied. In a moment, the brightness fades and you find yourself rising as if from a long sleep, deep in the woods. In the distance you can faintly hear a songbird and the sounds of the forest.";
    TraceOperation 063495 New_line;
    GamePrint "\n";
    TraceOperation 063496 New_line;
    GamePrint "\n";
    TraceOperation 063497 (Call (Floc 037558) [Con 78] Sp);
    PushFrame 063497;
    SetLocal 1 78;
    JumpCall: 037558, #actuals: 1
  } else {
    TraceOperation 063320 (Print "From the distance the sound of a lone trumpet is heard. The room becomes very bright and you feel disembodied. In a moment, the brightness fades and you find yourself rising as if from a long sleep, deep in the woods. In the distance you can faintly hear a songbird and the sounds of the forest.");
    GamePrint "From the distance the sound of a lone trumpet is heard. The room becomes very bright and you feel disembodied. In a moment, the brightness fades and you find yourself rising as if from a long sleep, deep in the woods. In the distance you can faintly hear a songbird and the sounds of the forest.";
    TraceOperation 063495 New_line;
    GamePrint "\n";
    TraceOperation 063496 New_line;
    GamePrint "\n";
    TraceOperation 063497 (Call (Floc 037558) [Con 78] Sp);
    PushFrame 063497;
    SetLocal 1 78;
    JumpCall: 037558, #actuals: 1
  }
LocReturn 063497:
  PushStack call_result;
  TraceOperation 063503 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[460]--------------------------------------------------
LocRoutine 063538:
  MakeRoutineFrame 0;
  Jump: 063539
LocOp 063539:
  TraceOperation 063539 (Jz (Var (Global 144)) (Branch T (Dloc 063565)));
  Let b1 = M[009105];
  Let b2 = M[009106];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 063565
  } else {
    TraceOperation 063542 (Print_ret "There's not much lake left....");
    GamePrint "There's not much lake left....\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  }
LocOp 063565:
  TraceOperation 063565 (Je [Var (Global 120),Con 38] (Branch F (Dloc 063582)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),38)) {
    TraceOperation 063569 (Print_ret "It's too wide to cross.");
    GamePrint "It's too wide to cross.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 063582
  }
LocOp 063582:
  TraceOperation 063582 (Je [Var (Global 120),Con 34] (Branch F Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),34)) {
    TraceOperation 063586 (Print_ret "You can't swim in this lake.");
    GamePrint "You can't swim in this lake.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 0
  }
--[461]--------------------------------------------------
LocRoutine 063602:
  MakeRoutineFrame 0;
  Jump: 063603
LocOp 063603:
  TraceOperation 063603 (Je [Var (Global 120),Con 34,Con 125] (Branch F (Dloc 063624)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (LogOr(Equal(MakeHiLo(b1,b2),34),Equal(MakeHiLo(b1,b2),125))) {
    TraceOperation 063609 (Print_ret "You can't swim in the stream.");
    GamePrint "You can't swim in the stream.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 063624
  }
LocOp 063624:
  TraceOperation 063624 (Je [Var (Global 120),Con 38] (Branch F Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),38)) {
    TraceOperation 063628 (Print_ret "The other side is a sheer rock cliff.");
    GamePrint "The other side is a sheer rock cliff.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 0
  }
--[462]--------------------------------------------------
LocRoutine 063652:
  MakeRoutineFrame 0;
  Jump: 063653
LocOp 063653:
  TraceOperation 063653 (Je [Var (Global 120),Con 69] (Branch T (Dloc 063665)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),69)) {
    Jump: 063665
  } else {
    TraceOperation 063657 (Je [Var (Global 120),Con 18] (Branch F (Dloc 063700)));
    Let b3 = M[009057];
    Let b4 = M[009058];
    if (Equal(MakeHiLo(b3,b4),18)) {
      TraceOperation 063661 (Je [Var (Global 118),Con 5] (Branch F (Dloc 063700)));
      Let b5 = M[009053];
      Let b6 = M[009054];
      if (Equal(MakeHiLo(b5,b6),5)) {
        Jump: 063665
      } else {
        Jump: 063700
      }
    } else {
      Jump: 063700
    }
  }
LocOp 063665:
  TraceOperation 063665 (Print_ret "You look before leaping, and realize that you would never survive.");
  GamePrint "You look before leaping, and realize that you would never survive.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 063700:
  TraceOperation 063700 (Je [Var (Global 120),Con 38] (Branch F (Dloc 063729)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),38)) {
    TraceOperation 063704 (Print_ret "It's too far to jump, and there's no bridge.");
    GamePrint "It's too far to jump, and there's no bridge.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 063729
  }
LocOp 063729:
  TraceOperation 063729 (Je [Var (Global 120),Con 129,Con 18] (Branch F Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (LogOr(Equal(MakeHiLo(b1,b2),129),Equal(MakeHiLo(b1,b2),18))) {
    TraceOperation 063735 (Je [Var (Global 119),Con 13] (Branch F Dfalse));
    Let b3 = M[009055];
    Let b4 = M[009056];
    if (Equal(MakeHiLo(b3,b4),13)) {
      TraceOperation 063739 (Print "The ");
      GamePrint "The ";
      TraceOperation 063742 (Print_obj (Var (Global 118)));
      Let b5 = M[009053];
      Let b6 = M[009054];
      Let b7 = M[Offset(Offset(000741,Mul(MakeHiLo(b5,b6),9)),7)];
      Let b8 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b5,b6),9)),7),1)];
      Let b9 = M[Address(MakeHiLo(b7,b8))];
      if (IsZeroByte(b9)) {
        GamePrint "";
        TraceOperation 063744 (Print " drops out of sight into the chasm.");
        GamePrint " drops out of sight into the chasm.";
        TraceOperation 063765 New_line;
        GamePrint "\n";
        TraceOperation 063766 (Call (Floc 030906) [Var (Global 118)] Sp);
        Let b10 = M[009053];
        Let b11 = M[009054];
        PushFrame 063766;
        SetLocal 1 MakeHiLo(b10,b11);
        JumpCall: 030906, #actuals: 1
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b7,b8)),1));
        TraceOperation 063744 (Print " drops out of sight into the chasm.");
        GamePrint " drops out of sight into the chasm.";
        TraceOperation 063765 New_line;
        GamePrint "\n";
        TraceOperation 063766 (Call (Floc 030906) [Var (Global 118)] Sp);
        Let b12 = M[009053];
        Let b13 = M[009054];
        PushFrame 063766;
        SetLocal 1 MakeHiLo(b12,b13);
        JumpCall: 030906, #actuals: 1
      }
    } else {
      PopFrame return_address_14;
      JumpReturn: return_address_14, result: 0
    }
  } else {
    PopFrame return_address_15;
    JumpReturn: return_address_15, result: 0
  }
LocReturn 063766:
  PushStack call_result;
  TraceOperation 063772 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[463]--------------------------------------------------
LocRoutine 063774:
  MakeRoutineFrame 0;
  Jump: 063775
LocOp 063775:
  TraceOperation 063775 (Je [Var (Global 120),Con 72] (Branch F Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),72)) {
    TraceOperation 063779 (Print_ret "No.");
    GamePrint "No.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 0
  }
--[464]--------------------------------------------------
LocRoutine 063784:
  MakeRoutineFrame 0;
  Jump: 063785
LocOp 063785:
  TraceOperation 063785 (Je [Var (Global 120),Con 34] (Branch F (Dloc 063796)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),34)) {
    TraceOperation 063789 (Call (Floc 038000) [Con 21] Sp);
    PushFrame 063789;
    SetLocal 1 21;
    JumpCall: 038000, #actuals: 1
  } else {
    Jump: 063796
  }
LocReturn 063789:
  PushStack call_result;
  TraceOperation 063795 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 063796:
  TraceOperation 063796 (Print_ret "The gate is protected by an invisible force. It makes your teeth ache to touch it.");
  GamePrint "The gate is protected by an invisible force. It makes your teeth ache to touch it.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[465]--------------------------------------------------
LocRoutine 063848:
  MakeRoutineFrame 0;
  Jump: 063849
LocOp 063849:
  TraceOperation 063849 (Je [Var (Global 120),Con 35,Con 43] (Branch F (Dloc 063866)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (LogOr(Equal(MakeHiLo(b1,b2),35),Equal(MakeHiLo(b1,b2),43))) {
    TraceOperation 063855 (Print_ret "The door won't budge.");
    GamePrint "The door won't budge.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 063866
  }
LocOp 063866:
  TraceOperation 063866 (Je [Var (Global 120),Con 34] (Branch F Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),34)) {
    TraceOperation 063870 (Call (Floc 038000) [Con 28] Sp);
    PushFrame 063870;
    SetLocal 1 28;
    JumpCall: 038000, #actuals: 1
  } else {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  }
LocReturn 063870:
  PushStack call_result;
  TraceOperation 063876 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[466]--------------------------------------------------
LocRoutine 063878:
  MakeRoutineFrame 0;
  Jump: 063879
LocOp 063879:
  TraceOperation 063879 (Je [Var (Global 120),Con 42] (Branch F Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),42)) {
    TraceOperation 063883 (Print_ret "Some paint chips away, revealing more paint.");
    GamePrint "Some paint chips away, revealing more paint.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 0
  }
--[467]--------------------------------------------------
LocRoutine 063916:
  MakeRoutineFrame 0;
  Jump: 063917
LocOp 063917:
  TraceOperation 063917 (Je [Var (Global 120),Con 24] (Branch F (Dloc 063942)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),24)) {
    TraceOperation 063921 (Print_ret "There is too much gas to blow away.");
    GamePrint "There is too much gas to blow away.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 063942
  }
LocOp 063942:
  TraceOperation 063942 (Je [Var (Global 120),Con 117] (Branch F Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),117)) {
    TraceOperation 063946 (Print_ret "It smells like coal gas in here.");
    GamePrint "It smells like coal gas in here.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 0
  }
--[468]--------------------------------------------------
LocRoutine 063968:
  MakeRoutineFrame 6;
  if (LessThanByte(num_actuals,6)) {
    SetLocal 6 0;
    if (LessThanByte(num_actuals,5)) {
      SetLocal 5 0;
      if (LessThanByte(num_actuals,4)) {
        SetLocal 4 0;
        if (LessThanByte(num_actuals,3)) {
          SetLocal 3 0;
          if (LessThanByte(num_actuals,2)) {
            SetLocal 2 0;
            if (LessThanByte(num_actuals,1)) {
              SetLocal 1 0;
            }
          }
        }
      }
    }
  }
  Jump: 063981
LocOp 063981:
  TraceOperation 063981 (Store (Con 2) (Con 0));
  SetLocal 2 0;
  Jump: 063984
LocOp 063984:
  TraceOperation 063984 (Inc (Con 2));
  SetLocal 2 Add(GetLocal(2),1);
  TraceOperation 063986 (Je [Var (Local 2),Var (Local 1)] (Branch F (Dloc 063996)));
  if (Equal(GetLocal(2),GetLocal(1))) {
    TraceOperation 063990 (Store (Con 3) (Con 1));
    SetLocal 3 1;
    TraceOperation 063993 (Jump 064058);
    Jump: 064058
  } else {
    Jump: 063996
  }
LocOp 063996:
  TraceOperation 063996 (Loadw (Var (Global 3)) (Var (Local 2)) (Local 5));
  Let b1 = M[008823];
  Let b2 = M[008824];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,GetLocal(2)))];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,GetLocal(2))),1)];
  SetLocal 5 MakeHiLo(b3,b4);
  TraceOperation 064000 (Loadw (Var (Local 5)) (Con 0) (Local 4));
  Let b5 = M[Offset(Address(GetLocal(5)),0)];
  Let b6 = M[Offset(Offset(Address(GetLocal(5)),0),1)];
  SetLocal 4 MakeHiLo(b5,b6);
  TraceOperation 064004 (Test_attr (Var (Local 4)) (Con 2) (Branch T (Dloc 064011)));
  Let b7 = M[Offset(Offset(000741,Mul(GetLocal(4),9)),0)];
  if (TestBit(b7,5)) {
    Jump: 064011
  } else {
    TraceOperation 064008 (Jump 063984);
    Jump: 063984
  }
LocOp 064011:
  TraceOperation 064011 (Get_prop (Var (Local 4)) (Con 17) Sp);
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(4),9)),7)];
  Let b2 = M[Offset(Offset(Offset(000741,Mul(GetLocal(4),9)),7),1)];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Error: getPropsA
LocReturn 064015:
  PushStack call_result;
  TraceOperation 064020 (Jz (Var Sp) (Branch T (Dloc 064026)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 064026
  } else {
    TraceOperation 064023 (Jump 063984);
    Jump: 063984
  }
LocOp 064026:
  TraceOperation 064026 (Call (Floc 064270) [Var (Local 5),Var (Local 6)] (Local 3));
  PushFrame 064026;
  SetLocal 1 GetLocal(5);
  SetLocal 2 GetLocal(6);
  JumpCall: 064270, #actuals: 2
LocReturn 064026:
  SetLocal 3 call_result;
  TraceOperation 064033 (Jz (Var (Local 3)) (Branch F (Dloc 064042)));
  if (IsZero(GetLocal(3))) {
    TraceOperation 064036 (Store (Con 3) (Con 0));
    SetLocal 3 0;
    TraceOperation 064039 (Jump 064058);
    Jump: 064058
  } else {
    Jump: 064042
  }
LocOp 064042:
  TraceOperation 064042 (Je [Var (Local 3),Con 2] (Branch F (Dloc 063984)));
  if (Equal(GetLocal(3),2)) {
    TraceOperation 064047 (Random (Con 3) Sp);
    LetRandom random1 3;
    PushStack random1;
    TraceOperation 064051 (Add (Con 1) (Var Sp) (Local 6));
    PopStack popped2;
    SetLocal 6 Add(1,popped2);
    TraceOperation 064055 (Jump 063984);
    Jump: 063984
  } else {
    Jump: 063984
  }
LocOp 064058:
  TraceOperation 064058 (Jz (Var (Local 3)) (Branch T Dtrue));
  if (IsZero(GetLocal(3))) {
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 1
  } else {
    TraceOperation 064061 (Jz (Var (Local 6)) (Branch T Dtrue));
    if (IsZero(GetLocal(6))) {
      PopFrame return_address_2;
      JumpReturn: return_address_2, result: 1
    } else {
      TraceOperation 064064 (Dec (Var (Local 6)));
      if (IsZeroByte(LoByte(GetLocal(6)))) {
        PopStack popped3;
        PushStack Sub(popped3,1);
        TraceOperation 064066 (Jz (Var (Local 6)) (Branch F (Dloc 063981)));
        if (IsZero(GetLocal(6))) {
          TraceOperation 064070 Rtrue;
          PopFrame return_address_4;
          JumpReturn: return_address_4, result: 1
        } else {
          Jump: 063981
        }
      } else {
        if (LessThanByte(LoByte(GetLocal(6)),16)) {
          SetLocal LoByte(GetLocal(6)) Sub(GetLocal(LoByte(GetLocal(6))),1);
          TraceOperation 064066 (Jz (Var (Local 6)) (Branch F (Dloc 063981)));
          if (IsZero(GetLocal(6))) {
            TraceOperation 064070 Rtrue;
            PopFrame return_address_5;
            JumpReturn: return_address_5, result: 1
          } else {
            Jump: 063981
          }
        } else {
          Let b6 = M[Offset(008817,Mul(2,Widen(MinusByte(LoByte(GetLocal(6)),16))))];
          Let b7 = M[Offset(Offset(008817,Mul(2,Widen(MinusByte(LoByte(GetLocal(6)),16)))),1)];
          SetByte Offset(008817,Mul(2,Widen(MinusByte(LoByte(GetLocal(6)),16)))) HiByte(Sub(MakeHiLo(b6,b7),1));
          SetByte Offset(Offset(008817,Mul(2,Widen(MinusByte(LoByte(GetLocal(6)),16)))),1) LoByte(Sub(MakeHiLo(b6,b7),1));
          TraceOperation 064066 (Jz (Var (Local 6)) (Branch F (Dloc 063981)));
          if (IsZero(GetLocal(6))) {
            TraceOperation 064070 Rtrue;
            PopFrame return_address_8;
            JumpReturn: return_address_8, result: 1
          } else {
            Jump: 063981
          }
        }
      }
    }
  }
--[469]--------------------------------------------------
LocRoutine 064072:
  MakeRoutineFrame 6;
  if (LessThanByte(num_actuals,6)) {
    SetLocal 6 0;
    if (LessThanByte(num_actuals,5)) {
      SetLocal 5 0;
      if (LessThanByte(num_actuals,4)) {
        SetLocal 4 0;
        if (LessThanByte(num_actuals,3)) {
          SetLocal 3 0;
          if (LessThanByte(num_actuals,2)) {
            SetLocal 2 0;
            if (LessThanByte(num_actuals,1)) {
              SetLocal 1 0;
            }
          }
        }
      }
    }
  }
  Jump: 064085
LocOp 064085:
  TraceOperation 064085 (Loadw (Var (Local 1)) (Con 0) (Local 4));
  Let b1 = M[Offset(Address(GetLocal(1)),0)];
  Let b2 = M[Offset(Offset(Address(GetLocal(1)),0),1)];
  SetLocal 4 MakeHiLo(b1,b2);
  Jump: 064089
LocOp 064089:
  TraceOperation 064089 (Inc_chk (Con 5) (Var (Local 4)) (Branch F (Dloc 064096)));
  SetLocal 5 Add(GetLocal(5),1);
  if (GreaterThanEqual(GetLocal(5),GetLocal(4))) {
    TraceOperation 064093 (Jump 064123);
    Jump: 064123
  } else {
    Jump: 064096
  }
LocOp 064096:
  TraceOperation 064096 (Loadw (Var (Local 1)) (Var (Local 5)) (Local 6));
  Let b1 = M[Offset(Address(GetLocal(1)),Mul(2,GetLocal(5)))];
  Let b2 = M[Offset(Offset(Address(GetLocal(1)),Mul(2,GetLocal(5))),1)];
  SetLocal 6 MakeHiLo(b1,b2);
  TraceOperation 064100 (Je [Var (Local 6),Con 0] (Branch F (Dloc 064109)));
  if (Equal(GetLocal(6),0)) {
    TraceOperation 064104 (Print_obj (Var (Local 3)));
    Let b3 = M[Offset(Offset(000741,Mul(GetLocal(3),9)),7)];
    Let b4 = M[Offset(Offset(Offset(000741,Mul(GetLocal(3),9)),7),1)];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    if (IsZeroByte(b5)) {
      GamePrint "";
      TraceOperation 064106 (Jump 064089);
      Jump: 064089
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
      TraceOperation 064106 (Jump 064089);
      Jump: 064089
    }
  } else {
    Jump: 064109
  }
LocOp 064109:
  TraceOperation 064109 (Je [Var (Local 6),Con 1] (Branch F (Dloc 064118)));
  if (Equal(GetLocal(6),1)) {
    TraceOperation 064113 (Print_obj (Var (Local 2)));
    Let b1 = M[Offset(Offset(000741,Mul(GetLocal(2),9)),7)];
    Let b2 = M[Offset(Offset(Offset(000741,Mul(GetLocal(2),9)),7),1)];
    Let b3 = M[Address(MakeHiLo(b1,b2))];
    if (IsZeroByte(b3)) {
      GamePrint "";
      TraceOperation 064115 (Jump 064089);
      Jump: 064089
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
      TraceOperation 064115 (Jump 064089);
      Jump: 064089
    }
  } else {
    Jump: 064118
  }
LocOp 064118:
  TraceOperation 064118 (Print_paddr (Var (Local 6)));
  GamePrint GetText(PackedAddress Z3(GetLocal(6)));
  TraceOperation 064120 (Jump 064089);
  Jump: 064089
LocOp 064123:
  TraceOperation 064123 New_line;
  GamePrint "\n";
  TraceOperation 064124 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[470]--------------------------------------------------
LocRoutine 064126:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 1;
    }
  }
  Jump: 064131
LocOp 064131:
  TraceOperation 064131 (Sub (Con 7) (Con 2) Sp);
  PushStack 5;
  TraceOperation 064135 (Div (Var (Global 151)) (Var Sp) Sp);
  Let b1 = M[009119];
  Let b2 = M[009120];
  PopStack popped3;
  PushStack Div(MakeHiLo(b1,b2),popped3);
  TraceOperation 064139 (Div (Var (Global 1)) (Var Sp) Sp);
  Let b4 = M[008819];
  Let b5 = M[008820];
  PopStack popped6;
  PushStack Div(MakeHiLo(b4,b5),popped6);
  TraceOperation 064143 (Add (Con 2) (Var Sp) (Local 2));
  PopStack popped7;
  SetLocal 2 Add(2,popped7);
  TraceOperation 064147 (Jz (Var (Local 1)) (Branch T (Dloc 064159)));
  if (IsZero(GetLocal(1))) {
    Jump: 064159
  } else {
    TraceOperation 064150 (Get_prop (Var (Global 111)) (Con 7) Sp);
    Let b8 = M[009039];
    Let b9 = M[009040];
    Let b10 = M[Offset(Offset(000741,Mul(MakeHiLo(b8,b9),9)),7)];
    Let b11 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b8,b9),9)),7),1)];
    Let b12 = M[Address(MakeHiLo(b10,b11))];
    Error: getPropsA
  }
LocOp 064159:
  TraceOperation 064159 (Ret (Var (Local 2)));
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: GetLocal(2)
--[471]--------------------------------------------------
LocRoutine 064162:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 064171
LocOp 064171:
  TraceOperation 064171 (Loadw (Var (Local 1)) (Con 0) (Local 2));
  Let b1 = M[Offset(Address(GetLocal(1)),0)];
  Let b2 = M[Offset(Offset(Address(GetLocal(1)),0),1)];
  SetLocal 2 MakeHiLo(b1,b2);
  TraceOperation 064175 (Get_prop (Var (Local 2)) (Con 7) (Local 3));
  Let b3 = M[Offset(Offset(000741,Mul(GetLocal(2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000741,Mul(GetLocal(2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  Error: getPropsA
LocOp 064197:
  TraceOperation 064197 (Store (Con 46) (Con 0));
  SetByte 008877 0;
  SetByte 008878 0;
  Jump: 064200
LocOp 064200:
  TraceOperation 064200 (Jz (Var (Global 119)) (Branch T (Dloc 064233)));
  Let b1 = M[009055];
  Let b2 = M[009056];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 064233
  } else {
    TraceOperation 064203 (Test_attr (Var (Global 119)) (Con 29) (Branch F (Dloc 064233)));
    Let b3 = M[009055];
    Let b4 = M[009056];
    Let b5 = M[Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),3)];
    if (TestBit(b5,2)) {
      TraceOperation 064207 (Loadw (Var (Local 1)) (Con 1) Sp);
      Let b6 = M[Offset(Address(GetLocal(1)),2)];
      Let b7 = M[Offset(Offset(Address(GetLocal(1)),2),1)];
      PushStack MakeHiLo(b6,b7);
      TraceOperation 064211 (Je [Var Sp,Var (Global 119)] (Branch F (Dloc 064233)));
      PopStack popped8;
      Let b9 = M[009055];
      Let b10 = M[009056];
      if (Equal(popped8,MakeHiLo(b9,b10))) {
        TraceOperation 064215 (Loadw (Var (Local 1)) (Con 2) Sp);
        Let b11 = M[Offset(Address(GetLocal(1)),4)];
        Let b12 = M[Offset(Offset(Address(GetLocal(1)),4),1)];
        PushStack MakeHiLo(b11,b12);
        TraceOperation 064219 (Sub (Var (Local 3)) (Var Sp) (Local 4));
        PopStack popped13;
        SetLocal 4 Sub(GetLocal(3),popped13);
        TraceOperation 064223 (Jl (Var (Local 4)) (Con 1) (Branch F (Dloc 064230)));
        if (LessThan(GetLocal(4),1)) {
          TraceOperation 064227 (Store (Con 4) (Con 1));
          SetLocal 4 1;
          Jump: 064230
        } else {
          Jump: 064230
        }
      } else {
        Jump: 064233
      }
    } else {
      Jump: 064233
    }
  }
LocOp 064230:
  TraceOperation 064230 (Store (Con 3) (Var (Local 4)));
  SetLocal 3 GetLocal(4);
  Jump: 064233
LocOp 064233:
  TraceOperation 064233 (Ret (Var (Local 3)));
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: GetLocal(3)
--[472]--------------------------------------------------
LocRoutine 064236:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 064241
LocOp 064241:
  TraceOperation 064241 (Get_child (Var (Local 1)) (Local 2) (Branch T (Dloc 064245)));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),6)];
  SetLocal 2 Widen(b1);
  if (IsZero(Widen(b1))) {
    TraceOperation 064245 (Jz (Var (Local 2)) (Branch T Dfalse));
    if (IsZero(GetLocal(2))) {
      PopFrame return_address_2;
      JumpReturn: return_address_2, result: 0
    } else {
      TraceOperation 064248 (Je [Var (Local 2),Con 113,Con 218,Con 110] (Branch T (Dloc 064261)));
      if (LogOr(LogOr(Equal(GetLocal(2),113),Equal(GetLocal(2),218)),Equal(GetLocal(2),110))) {
        Jump: 064261
      } else {
        TraceOperation 064255 (Je [Var (Local 2),Con 169,Con 128] (Branch F (Dloc 064263)));
        if (LogOr(Equal(GetLocal(2),169),Equal(GetLocal(2),128))) {
          Jump: 064261
        } else {
          Jump: 064263
        }
      }
    }
  } else {
    TraceOperation 064245 (Jz (Var (Local 2)) (Branch T Dfalse));
    if (IsZero(GetLocal(2))) {
      PopFrame return_address_3;
      JumpReturn: return_address_3, result: 0
    } else {
      TraceOperation 064248 (Je [Var (Local 2),Con 113,Con 218,Con 110] (Branch T (Dloc 064261)));
      if (LogOr(LogOr(Equal(GetLocal(2),113),Equal(GetLocal(2),218)),Equal(GetLocal(2),110))) {
        Jump: 064261
      } else {
        TraceOperation 064255 (Je [Var (Local 2),Con 169,Con 128] (Branch F (Dloc 064263)));
        if (LogOr(Equal(GetLocal(2),169),Equal(GetLocal(2),128))) {
          Jump: 064261
        } else {
          Jump: 064263
        }
      }
    }
  }
LocOp 064261:
  TraceOperation 064261 (Ret (Var (Local 2)));
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: GetLocal(2)
LocOp 064263:
  TraceOperation 064263 (Get_sibling (Var (Local 2)) (Local 2) (Branch T (Dloc 064248)));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(2),9)),5)];
  SetLocal 2 Widen(b1);
  if (IsZero(Widen(b1))) {
    TraceOperation 064268 Rfalse;
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  } else {
    TraceOperation 064248 (Je [Var (Local 2),Con 113,Con 218,Con 110] (Branch T (Dloc 064261)));
    if (LogOr(LogOr(Equal(GetLocal(2),113),Equal(GetLocal(2),218)),Equal(GetLocal(2),110))) {
      Jump: 064261
    } else {
      TraceOperation 064255 (Je [Var (Local 2),Con 169,Con 128] (Branch F (Dloc 064263)));
      if (LogOr(Equal(GetLocal(2),169),Equal(GetLocal(2),128))) {
        Jump: 064261
      } else {
        Jump: 064263
      }
    }
  }
--[473]--------------------------------------------------
LocRoutine 064270:
  MakeRoutineFrame 12;
  if (LessThanByte(num_actuals,12)) {
    SetLocal 12 0;
    if (LessThanByte(num_actuals,11)) {
      SetLocal 11 0;
      if (LessThanByte(num_actuals,10)) {
        SetLocal 10 0;
        if (LessThanByte(num_actuals,9)) {
          SetLocal 9 0;
          if (LessThanByte(num_actuals,8)) {
            SetLocal 8 0;
            if (LessThanByte(num_actuals,7)) {
              SetLocal 7 0;
              if (LessThanByte(num_actuals,6)) {
                SetLocal 6 0;
                if (LessThanByte(num_actuals,5)) {
                  SetLocal 5 0;
                  if (LessThanByte(num_actuals,4)) {
                    SetLocal 4 0;
                    if (LessThanByte(num_actuals,3)) {
                      SetLocal 3 0;
                      if (LessThanByte(num_actuals,2)) {
                        SetLocal 2 0;
                        if (LessThanByte(num_actuals,1)) {
                          SetLocal 1 0;
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  Jump: 064295
LocOp 064295:
  TraceOperation 064295 (Loadw (Var (Local 1)) (Con 0) (Local 3));
  Let b1 = M[Offset(Address(GetLocal(1)),0)];
  Let b2 = M[Offset(Offset(Address(GetLocal(1)),0),1)];
  SetLocal 3 MakeHiLo(b1,b2);
  TraceOperation 064299 (Loadw (Var (Local 1)) (Con 4) (Local 4));
  Let b3 = M[Offset(Address(GetLocal(1)),8)];
  Let b4 = M[Offset(Offset(Address(GetLocal(1)),8),1)];
  SetLocal 4 MakeHiLo(b3,b4);
  TraceOperation 064303 (Clear_attr (Var (Global 111)) (Con 1));
  Let b5 = M[009039];
  Let b6 = M[009040];
  Let b7 = M[Offset(Offset(000741,Mul(MakeHiLo(b5,b6),9)),0)];
  SetByte Offset(Offset(000741,Mul(MakeHiLo(b5,b6),9)),0) ClearBit(b7,6);
  TraceOperation 064306 (Test_attr (Var (Local 3)) (Con 1) (Branch F (Dloc 064337)));
  Let b8 = M[Offset(Offset(000741,Mul(GetLocal(3),9)),0)];
  if (TestBit(b8,6)) {
    TraceOperation 064310 (Print "The ");
    GamePrint "The ";
    TraceOperation 064313 (Print_obj (Var (Local 3)));
    Let b9 = M[Offset(Offset(000741,Mul(GetLocal(3),9)),7)];
    Let b10 = M[Offset(Offset(Offset(000741,Mul(GetLocal(3),9)),7),1)];
    Let b11 = M[Address(MakeHiLo(b9,b10))];
    if (IsZeroByte(b11)) {
      GamePrint "";
      TraceOperation 064315 (Print " slowly regains his feet.");
      GamePrint " slowly regains his feet.";
      TraceOperation 064332 New_line;
      GamePrint "\n";
      TraceOperation 064333 (Clear_attr (Var (Local 3)) (Con 1));
      Let b12 = M[Offset(Offset(000741,Mul(GetLocal(3),9)),0)];
      SetByte Offset(Offset(000741,Mul(GetLocal(3),9)),0) ClearBit(b12,6);
      TraceOperation 064336 Rtrue;
      PopFrame return_address_13;
      JumpReturn: return_address_13, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b9,b10)),1));
      TraceOperation 064315 (Print " slowly regains his feet.");
      GamePrint " slowly regains his feet.";
      TraceOperation 064332 New_line;
      GamePrint "\n";
      TraceOperation 064333 (Clear_attr (Var (Local 3)) (Con 1));
      Let b14 = M[Offset(Offset(000741,Mul(GetLocal(3),9)),0)];
      SetByte Offset(Offset(000741,Mul(GetLocal(3),9)),0) ClearBit(b14,6);
      TraceOperation 064336 Rtrue;
      PopFrame return_address_15;
      JumpReturn: return_address_15, result: 1
    }
  } else {
    Jump: 064337
  }
LocOp 064337:
  TraceOperation 064337 (Call (Floc 064162) [Var (Local 1)] Sp);
  PushFrame 064337;
  SetLocal 1 GetLocal(1);
  JumpCall: 064162, #actuals: 1
LocReturn 064337:
  PushStack call_result;
  TraceOperation 064343 (Store (Con 6) (Var Sp));
  PopStack popped1;
  SetLocal 6 popped1;
  TraceOperation 064346 (Store (Con 8) (Con 1));
  SetLocal 8 1;
  TraceOperation 064349 (Call (Floc 064126) [] (Local 7));
  PushFrame 064349;
  JumpCall: 064126, #actuals: 0
LocReturn 064349:
  SetLocal 7 call_result;
  TraceOperation 064354 (Jg (Var (Local 7)) (Con 0) (Branch F Dtrue));
  if (GreaterThan(GetLocal(7),0)) {
    TraceOperation 064358 (Call (Floc 064126) [Con 0] (Local 9));
    PushFrame 064358;
    SetLocal 1 0;
    JumpCall: 064126, #actuals: 1
  } else {
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 1
  }
LocReturn 064358:
  SetLocal 9 call_result;
  TraceOperation 064364 (Call (Floc 064236) [Var (Global 111)] (Local 5));
  Let b1 = M[009039];
  Let b2 = M[009040];
  PushFrame 064364;
  SetLocal 1 MakeHiLo(b1,b2);
  JumpCall: 064236, #actuals: 1
LocReturn 064364:
  SetLocal 5 call_result;
  TraceOperation 064370 (Jl (Var (Local 7)) (Con 0) (Branch F (Dloc 064380)));
  if (LessThan(GetLocal(7),0)) {
    TraceOperation 064374 (Store (Con 11) (Con 3));
    SetLocal 11 3;
    TraceOperation 064377 (Jump 064530);
    Jump: 064530
  } else {
    Jump: 064380
  }
LocOp 064380:
  TraceOperation 064380 (Je [Var (Local 7),Con 1] (Branch F (Dloc 064402)));
  if (Equal(GetLocal(7),1)) {
    TraceOperation 064384 (Jg (Var (Local 6)) (Con 2) (Branch F (Dloc 064391)));
    if (GreaterThan(GetLocal(6),2)) {
      TraceOperation 064388 (Store (Con 6) (Con 3));
      SetLocal 6 3;
      Jump: 064391
    } else {
      Jump: 064391
    }
  } else {
    Jump: 064402
  }
LocOp 064391:
  TraceOperation 064391 (Sub (Var (Local 6)) (Con 1) Sp);
  PushStack Sub(GetLocal(6),1);
  TraceOperation 064395 (Loadw (Var (Global 10)) (Var Sp) (Local 10));
  Let b1 = M[008837];
  Let b2 = M[008838];
  PopStack popped3;
  Let b4 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,popped3))];
  Let b5 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,popped3)),1)];
  SetLocal 10 MakeHiLo(b4,b5);
  TraceOperation 064399 (Jump 064461);
  Jump: 064461
LocOp 064402:
  TraceOperation 064402 (Je [Var (Local 7),Con 2] (Branch F (Dloc 064424)));
  if (Equal(GetLocal(7),2)) {
    TraceOperation 064406 (Jg (Var (Local 6)) (Con 3) (Branch F (Dloc 064413)));
    if (GreaterThan(GetLocal(6),3)) {
      TraceOperation 064410 (Store (Con 6) (Con 4));
      SetLocal 6 4;
      Jump: 064413
    } else {
      Jump: 064413
    }
  } else {
    Jump: 064424
  }
LocOp 064413:
  TraceOperation 064413 (Sub (Var (Local 6)) (Con 1) Sp);
  PushStack Sub(GetLocal(6),1);
  TraceOperation 064417 (Loadw (Var (Global 9)) (Var Sp) (Local 10));
  Let b1 = M[008835];
  Let b2 = M[008836];
  PopStack popped3;
  Let b4 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,popped3))];
  Let b5 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,popped3)),1)];
  SetLocal 10 MakeHiLo(b4,b5);
  TraceOperation 064421 (Jump 064461);
  Jump: 064461
LocOp 064424:
  TraceOperation 064424 (Jg (Var (Local 7)) (Con 2) (Branch F (Dloc 064461)));
  if (GreaterThan(GetLocal(7),2)) {
    TraceOperation 064428 (Sub (Var (Local 6)) (Var (Local 7)) (Local 6));
    SetLocal 6 Sub(GetLocal(6),GetLocal(7));
    TraceOperation 064432 (Jl (Var (Local 6)) (Con -1) (Branch F (Dloc 064446)));
    if (LessThan(GetLocal(6),-1)) {
      TraceOperation 064438 (Store (Con 6) (Con -2));
      SetLocal 6 -2;
      TraceOperation 064443 (Jump 064453);
      Jump: 064453
    } else {
      Jump: 064446
    }
  } else {
    Jump: 064461
  }
LocOp 064446:
  TraceOperation 064446 (Jg (Var (Local 6)) (Con 1) (Branch F (Dloc 064453)));
  if (GreaterThan(GetLocal(6),1)) {
    TraceOperation 064450 (Store (Con 6) (Con 2));
    SetLocal 6 2;
    Jump: 064453
  } else {
    Jump: 064453
  }
LocOp 064453:
  TraceOperation 064453 (Add (Var (Local 6)) (Con 2) Sp);
  PushStack Add(GetLocal(6),2);
  TraceOperation 064457 (Loadw (Var (Global 8)) (Var Sp) (Local 10));
  Let b1 = M[008833];
  Let b2 = M[008834];
  PopStack popped3;
  Let b4 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,popped3))];
  Let b5 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,popped3)),1)];
  SetLocal 10 MakeHiLo(b4,b5);
  Jump: 064461
LocOp 064461:
  TraceOperation 064461 (Random (Con 9) Sp);
  LetRandom random1 9;
  PushStack random1;
  TraceOperation 064465 (Sub (Var Sp) (Con 1) Sp);
  PopStack popped2;
  PushStack Sub(popped2,1);
  TraceOperation 064469 (Loadw (Var (Local 10)) (Var Sp) (Local 11));
  PopStack popped3;
  Let b4 = M[Offset(Address(GetLocal(10)),Mul(2,popped3))];
  Let b5 = M[Offset(Offset(Address(GetLocal(10)),Mul(2,popped3)),1)];
  SetLocal 11 MakeHiLo(b4,b5);
  TraceOperation 064473 (Jz (Var (Local 2)) (Branch T (Dloc 064489)));
  if (IsZero(GetLocal(2))) {
    Jump: 064489
  } else {
    TraceOperation 064476 (Je [Var (Local 11),Con 6] (Branch F (Dloc 064486)));
    if (Equal(GetLocal(11),6)) {
      TraceOperation 064480 (Store (Con 11) (Con 8));
      SetLocal 11 8;
      TraceOperation 064483 (Jump 064489);
      Jump: 064489
    } else {
      Jump: 064486
    }
  }
LocOp 064486:
  TraceOperation 064486 (Store (Con 11) (Con 9));
  SetLocal 11 9;
  Jump: 064489
LocOp 064489:
  TraceOperation 064489 (Je [Var (Local 11),Con 6] (Branch F (Dloc 064508)));
  if (Equal(GetLocal(11),6)) {
    TraceOperation 064493 (Jz (Var (Local 5)) (Branch T (Dloc 064508)));
    if (IsZero(GetLocal(5))) {
      Jump: 064508
    } else {
      TraceOperation 064496 (Call (Floc 020034) [Con 25] Sp);
      PushFrame 064496;
      SetLocal 1 25;
      JumpCall: 020034, #actuals: 1
    }
  } else {
    Jump: 064508
  }
LocReturn 064496:
  PushStack call_result;
  TraceOperation 064502 (Jz (Var Sp) (Branch T (Dloc 064508)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 064508
  } else {
    TraceOperation 064505 (Store (Con 11) (Con 7));
    SetLocal 11 7;
    Jump: 064508
  }
LocOp 064508:
  TraceOperation 064508 (Sub (Var (Local 11)) (Con 1) Sp);
  PushStack Sub(GetLocal(11),1);
  TraceOperation 064512 (Loadw (Var (Local 4)) (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(Address(GetLocal(4)),Mul(2,popped1))];
  Let b3 = M[Offset(Offset(Address(GetLocal(4)),Mul(2,popped1)),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 064516 (Call (Floc 020060) [Var Sp] Sp);
  PopStack popped4;
  PushFrame 064516;
  SetLocal 1 popped4;
  JumpCall: 020060, #actuals: 1
LocReturn 064516:
  PushStack call_result;
  TraceOperation 064522 (Call (Floc 064072) [Var Sp,Var (Global 111),Var (Local 5)] Sp);
  PopStack popped1;
  Let b2 = M[009039];
  Let b3 = M[009040];
  PushFrame 064522;
  SetLocal 1 popped1;
  SetLocal 2 MakeHiLo(b2,b3);
  SetLocal 3 GetLocal(5);
  JumpCall: 064072, #actuals: 3
LocReturn 064522:
  PushStack call_result;
  Jump: 064530
LocOp 064530:
  TraceOperation 064530 (Je [Var (Local 11),Con 1] (Branch T (Dloc 064659)));
  if (Equal(GetLocal(11),1)) {
    Jump: 064659
  } else {
    TraceOperation 064535 (Je [Var (Local 11),Con 8] (Branch F (Dloc 064542)));
    if (Equal(GetLocal(11),8)) {
      TraceOperation 064539 (Jump 064659);
      Jump: 064659
    } else {
      Jump: 064542
    }
  }
LocOp 064542:
  TraceOperation 064542 (Je [Var (Local 11),Con 2] (Branch F (Dloc 064549)));
  if (Equal(GetLocal(11),2)) {
    TraceOperation 064546 (Jump 064659);
    Jump: 064659
  } else {
    Jump: 064549
  }
LocOp 064549:
  TraceOperation 064549 (Je [Var (Local 11),Con 3] (Branch T (Dloc 064557)));
  if (Equal(GetLocal(11),3)) {
    Jump: 064557
  } else {
    TraceOperation 064553 (Je [Var (Local 11),Con 9] (Branch F (Dloc 064563)));
    if (Equal(GetLocal(11),9)) {
      Jump: 064557
    } else {
      Jump: 064563
    }
  }
LocOp 064557:
  TraceOperation 064557 (Store (Con 7) (Con 0));
  SetLocal 7 0;
  TraceOperation 064560 (Jump 064659);
  Jump: 064659
LocOp 064563:
  TraceOperation 064563 (Je [Var (Local 11),Con 4] (Branch F (Dloc 064588)));
  if (Equal(GetLocal(11),4)) {
    TraceOperation 064567 (Dec (Con 7));
    SetLocal 7 Sub(GetLocal(7),1);
    TraceOperation 064569 (Jl (Var (Local 7)) (Con 0) (Branch F (Dloc 064576)));
    if (LessThan(GetLocal(7),0)) {
      TraceOperation 064573 (Store (Con 7) (Con 0));
      SetLocal 7 0;
      Jump: 064576
    } else {
      Jump: 064576
    }
  } else {
    Jump: 064588
  }
LocOp 064576:
  TraceOperation 064576 (Jg (Var (Global 133)) (Con 50) (Branch F (Dloc 064659)));
  Let b1 = M[009083];
  Let b2 = M[009084];
  if (GreaterThan(MakeHiLo(b1,b2),50)) {
    TraceOperation 064581 (Sub (Var (Global 133)) (Con 10) (Global 133));
    Let b3 = M[009083];
    Let b4 = M[009084];
    SetByte 009083 HiByte(Sub(MakeHiLo(b3,b4),10));
    SetByte 009084 LoByte(Sub(MakeHiLo(b3,b4),10));
    TraceOperation 064585 (Jump 064659);
    Jump: 064659
  } else {
    Jump: 064659
  }
LocOp 064588:
  TraceOperation 064588 (Je [Var (Local 11),Con 5] (Branch F (Dloc 064614)));
  if (Equal(GetLocal(11),5)) {
    TraceOperation 064592 (Sub (Var (Local 7)) (Con 2) (Local 7));
    SetLocal 7 Sub(GetLocal(7),2);
    TraceOperation 064596 (Jl (Var (Local 7)) (Con 0) (Branch F (Dloc 064603)));
    if (LessThan(GetLocal(7),0)) {
      TraceOperation 064600 (Store (Con 7) (Con 0));
      SetLocal 7 0;
      Jump: 064603
    } else {
      Jump: 064603
    }
  } else {
    Jump: 064614
  }
LocOp 064603:
  TraceOperation 064603 (Jg (Var (Global 133)) (Con 50) (Branch F (Dloc 064659)));
  Let b1 = M[009083];
  Let b2 = M[009084];
  if (GreaterThan(MakeHiLo(b1,b2),50)) {
    TraceOperation 064607 (Sub (Var (Global 133)) (Con 20) (Global 133));
    Let b3 = M[009083];
    Let b4 = M[009084];
    SetByte 009083 HiByte(Sub(MakeHiLo(b3,b4),20));
    SetByte 009084 LoByte(Sub(MakeHiLo(b3,b4),20));
    TraceOperation 064611 (Jump 064659);
    Jump: 064659
  } else {
    Jump: 064659
  }
LocOp 064614:
  TraceOperation 064614 (Je [Var (Local 11),Con 6] (Branch F (Dloc 064624)));
  if (Equal(GetLocal(11),6)) {
    TraceOperation 064618 (Set_attr (Var (Global 111)) (Con 1));
    Let b1 = M[009039];
    Let b2 = M[009040];
    Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),0)];
    SetByte Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),0) SetBit(b3,6);
    TraceOperation 064621 (Jump 064659);
    Jump: 064659
  } else {
    Jump: 064624
  }
LocOp 064624:
  TraceOperation 064624 (Je [Var (Local 11),Con 7] (Branch F (Dloc 064628)));
  if (Equal(GetLocal(11),7)) {
    Jump: 064628
  } else {
    Jump: 064628
  }
LocOp 064628:
  TraceOperation 064628 (Insert_obj (Var (Local 5)) (Var (Global 0)));
  Let b1 = M[008817];
  Let b2 = M[008818];
  Let b3 = M[Offset(Offset(000741,Mul(GetLocal(5),9)),4)];
  if (IsZero(Widen(b3))) {
    SetByte Offset(Offset(000741,Mul(GetLocal(5),9)),4) b2;
    Let b4 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),6)];
    SetByte Offset(Offset(000741,Mul(GetLocal(5),9)),5) LoByte(Widen(b4));
    SetByte Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),6) LoByte(GetLocal(5));
    TraceOperation 064631 (Call (Floc 064236) [Var (Global 111)] (Local 12));
    Let b5 = M[009039];
    Let b6 = M[009040];
    PushFrame 064631;
    SetLocal 1 MakeHiLo(b5,b6);
    JumpCall: 064236, #actuals: 1
  } else {
    Let b7 = M[Offset(Offset(000741,Mul(Widen(b3),9)),6)];
    if (Equal(Widen(b7),GetLocal(5))) {
      Let b8 = M[Offset(Offset(000741,Mul(GetLocal(5),9)),5)];
      SetByte Offset(Offset(000741,Mul(Widen(b3),9)),6) LoByte(Widen(b8));
      SetByte Offset(Offset(000741,Mul(GetLocal(5),9)),4) b2;
      Let b9 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),6)];
      SetByte Offset(Offset(000741,Mul(GetLocal(5),9)),5) LoByte(Widen(b9));
      SetByte Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),6) LoByte(GetLocal(5));
      TraceOperation 064631 (Call (Floc 064236) [Var (Global 111)] (Local 12));
      Let b10 = M[009039];
      Let b11 = M[009040];
      PushFrame 064631;
      SetLocal 1 MakeHiLo(b10,b11);
      JumpCall: 064236, #actuals: 1
    } else {
      Error: unlink/loop
    }
  }
LocReturn 064631:
  SetLocal 12 call_result;
  TraceOperation 064637 (Jz (Var (Local 12)) (Branch T (Dloc 064659)));
  if (IsZero(GetLocal(12))) {
    Jump: 064659
  } else {
    TraceOperation 064640 (Print "Fortunately, you still have a ");
    GamePrint "Fortunately, you still have a ";
    TraceOperation 064653 (Print_obj (Var (Local 12)));
    Let b1 = M[Offset(Offset(000741,Mul(GetLocal(12),9)),7)];
    Let b2 = M[Offset(Offset(Offset(000741,Mul(GetLocal(12),9)),7),1)];
    Let b3 = M[Address(MakeHiLo(b1,b2))];
    if (IsZeroByte(b3)) {
      GamePrint "";
      TraceOperation 064655 (Print ".");
      GamePrint ".";
      TraceOperation 064658 New_line;
      GamePrint "\n";
      Jump: 064659
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
      TraceOperation 064655 (Print ".");
      GamePrint ".";
      TraceOperation 064658 New_line;
      GamePrint "\n";
      Jump: 064659
    }
  }
LocOp 064659:
  TraceOperation 064659 (Call (Floc 065178) [Var (Local 7),Var (Local 11),Var (Local 9)] Sp);
  PushFrame 064659;
  SetLocal 1 GetLocal(7);
  SetLocal 2 GetLocal(11);
  SetLocal 3 GetLocal(9);
  JumpCall: 065178, #actuals: 3
LocReturn 064659:
  PushStack call_result;
  TraceOperation 064667 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[474]--------------------------------------------------
LocRoutine 064668:
  MakeRoutineFrame 13;
  if (LessThanByte(num_actuals,13)) {
    SetLocal 13 0;
    if (LessThanByte(num_actuals,12)) {
      SetLocal 12 0;
      if (LessThanByte(num_actuals,11)) {
        SetLocal 11 0;
        if (LessThanByte(num_actuals,10)) {
          SetLocal 10 0;
          if (LessThanByte(num_actuals,9)) {
            SetLocal 9 0;
            if (LessThanByte(num_actuals,8)) {
              SetLocal 8 0;
              if (LessThanByte(num_actuals,7)) {
                SetLocal 7 0;
                if (LessThanByte(num_actuals,6)) {
                  SetLocal 6 0;
                  if (LessThanByte(num_actuals,5)) {
                    SetLocal 5 0;
                    if (LessThanByte(num_actuals,4)) {
                      SetLocal 4 0;
                      if (LessThanByte(num_actuals,3)) {
                        SetLocal 3 0;
                        if (LessThanByte(num_actuals,2)) {
                          SetLocal 2 0;
                          if (LessThanByte(num_actuals,1)) {
                            SetLocal 1 0;
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  Jump: 064695
LocOp 064695:
  TraceOperation 064695 (Loadw (Var (Global 3)) (Con 0) (Local 13));
  Let b1 = M[008823];
  Let b2 = M[008824];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),0)];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),0),1)];
  SetLocal 13 MakeHiLo(b3,b4);
  Jump: 064699
LocOp 064699:
  TraceOperation 064699 (Inc (Con 7));
  SetLocal 7 Add(GetLocal(7),1);
  TraceOperation 064701 (Je [Var (Local 7),Var (Local 13)] (Branch F (Dloc 064708)));
  if (Equal(GetLocal(7),GetLocal(13))) {
    TraceOperation 064705 (Jump 064721);
    Jump: 064721
  } else {
    Jump: 064708
  }
LocOp 064708:
  TraceOperation 064708 (Loadw (Var (Global 3)) (Var (Local 7)) (Local 1));
  Let b1 = M[008823];
  Let b2 = M[008824];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,GetLocal(7)))];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,GetLocal(7))),1)];
  SetLocal 1 MakeHiLo(b3,b4);
  TraceOperation 064712 (Loadw (Var (Local 1)) (Con 0) Sp);
  Let b5 = M[Offset(Address(GetLocal(1)),0)];
  Let b6 = M[Offset(Offset(Address(GetLocal(1)),0),1)];
  PushStack MakeHiLo(b5,b6);
  TraceOperation 064716 (Je [Var Sp,Var (Global 118)] (Branch F (Dloc 064699)));
  PopStack popped7;
  Let b8 = M[009053];
  Let b9 = M[009054];
  if (Equal(popped7,MakeHiLo(b8,b9))) {
    Jump: 064721
  } else {
    Jump: 064699
  }
LocOp 064721:
  TraceOperation 064721 (Set_attr (Var (Global 118)) (Con 2));
  Let b1 = M[009053];
  Let b2 = M[009054];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),0)];
  SetByte Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),0) SetBit(b3,5);
  TraceOperation 064724 (Test_attr (Var (Global 111)) (Con 1) (Branch F (Dloc 064778)));
  Let b4 = M[009039];
  Let b5 = M[009040];
  Let b6 = M[Offset(Offset(000741,Mul(MakeHiLo(b4,b5),9)),0)];
  if (TestBit(b6,6)) {
    TraceOperation 064728 (Print "You are still recovering from that last blow, so your attack is ineffective.");
    GamePrint "You are still recovering from that last blow, so your attack is ineffective.";
    TraceOperation 064773 New_line;
    GamePrint "\n";
    TraceOperation 064774 (Clear_attr (Var (Global 111)) (Con 1));
    Let b7 = M[009039];
    Let b8 = M[009040];
    Let b9 = M[Offset(Offset(000741,Mul(MakeHiLo(b7,b8),9)),0)];
    SetByte Offset(Offset(000741,Mul(MakeHiLo(b7,b8),9)),0) ClearBit(b9,6);
    TraceOperation 064777 Rtrue;
    PopFrame return_address_10;
    JumpReturn: return_address_10, result: 1
  } else {
    Jump: 064778
  }
LocOp 064778:
  TraceOperation 064778 (Call (Floc 064126) [] (Local 5));
  PushFrame 064778;
  JumpCall: 064126, #actuals: 0
LocReturn 064778:
  SetLocal 5 call_result;
  TraceOperation 064783 (Jl (Var (Local 5)) (Con 1) (Branch F (Dloc 064790)));
  if (LessThan(GetLocal(5),1)) {
    TraceOperation 064787 (Store (Con 5) (Con 1));
    SetLocal 5 1;
    Jump: 064790
  } else {
    Jump: 064790
  }
LocOp 064790:
  TraceOperation 064790 (Store (Con 8) (Var (Local 5)));
  SetLocal 8 GetLocal(5);
  TraceOperation 064793 (Loadw (Var (Local 1)) (Con 0) (Local 2));
  Let b1 = M[Offset(Address(GetLocal(1)),0)];
  Let b2 = M[Offset(Offset(Address(GetLocal(1)),0),1)];
  SetLocal 2 MakeHiLo(b1,b2);
  TraceOperation 064797 (Call (Floc 064162) [Var (Local 1)] Sp);
  PushFrame 064797;
  SetLocal 1 GetLocal(1);
  JumpCall: 064162, #actuals: 1
LocReturn 064797:
  PushStack call_result;
  TraceOperation 064803 (Store (Con 6) (Var Sp));
  PopStack popped1;
  SetLocal 6 popped1;
  TraceOperation 064806 (Store (Con 9) (Con 1));
  SetLocal 9 1;
  TraceOperation 064809 (Jz (Var (Local 9)) (Branch F (Dloc 064848)));
  if (IsZero(GetLocal(9))) {
    TraceOperation 064812 (Je [Var (Global 118),Var (Global 111)] (Branch F (Dloc 064824)));
    Let b2 = M[009053];
    Let b3 = M[009054];
    Let b4 = M[009039];
    Let b5 = M[009040];
    if (Equal(MakeHiLo(b2,b3),MakeHiLo(b4,b5))) {
      TraceOperation 064816 (Call (Floc 067174) [Con -24659] Sp);
      PushFrame 064816;
      SetLocal 1 -24659;
      JumpCall: 067174, #actuals: 1
    } else {
      Jump: 064824
    }
  } else {
    Jump: 064848
  }
LocReturn 064816:
  PushStack call_result;
  TraceOperation 064823 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 064824:
  TraceOperation 064824 (Print "Attacking the ");
  GamePrint "Attacking the ";
  TraceOperation 064835 (Print_obj (Var (Local 2)));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(2),9)),7)];
  Let b2 = M[Offset(Offset(Offset(000741,Mul(GetLocal(2),9)),7),1)];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  if (IsZeroByte(b3)) {
    GamePrint "";
    TraceOperation 064837 (Print_ret " is pointless.");
    GamePrint " is pointless.\n";
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
    TraceOperation 064837 (Print_ret " is pointless.");
    GamePrint " is pointless.\n";
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  }
LocOp 064848:
  TraceOperation 064848 (Call (Floc 064236) [Var (Local 2)] (Local 4));
  PushFrame 064848;
  SetLocal 1 GetLocal(2);
  JumpCall: 064236, #actuals: 1
LocReturn 064848:
  SetLocal 4 call_result;
  TraceOperation 064854 (Jz (Var (Local 4)) (Branch T (Dloc 064861)));
  if (IsZero(GetLocal(4))) {
    Jump: 064861
  } else {
    TraceOperation 064857 (Jl (Var (Local 6)) (Con 0) (Branch F (Dloc 064919)));
    if (LessThan(GetLocal(6),0)) {
      Jump: 064861
    } else {
      Jump: 064919
    }
  }
LocOp 064861:
  TraceOperation 064861 (Print "The ");
  GamePrint "The ";
  TraceOperation 064864 (Jz (Var (Local 4)) (Branch F (Dloc 064877)));
  if (IsZero(GetLocal(4))) {
    TraceOperation 064867 (Print "unarmed");
    GamePrint "unarmed";
    TraceOperation 064874 (Jump 064886);
    Jump: 064886
  } else {
    Jump: 064877
  }
LocOp 064877:
  TraceOperation 064877 (Print "unconscious");
  GamePrint "unconscious";
  Jump: 064886
LocOp 064886:
  TraceOperation 064886 (Print " ");
  GamePrint " ";
  TraceOperation 064889 (Print_obj (Var (Local 2)));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(2),9)),7)];
  Let b2 = M[Offset(Offset(Offset(000741,Mul(GetLocal(2),9)),7),1)];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  if (IsZeroByte(b3)) {
    GamePrint "";
    TraceOperation 064891 (Print " cannot defend himself: He dies.");
    GamePrint " cannot defend himself: He dies.";
    TraceOperation 064912 New_line;
    GamePrint "\n";
    TraceOperation 064913 (Store (Con 11) (Con 3));
    SetLocal 11 3;
    TraceOperation 064916 (Jump 065068);
    Jump: 065068
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
    TraceOperation 064891 (Print " cannot defend himself: He dies.");
    GamePrint " cannot defend himself: He dies.";
    TraceOperation 064912 New_line;
    GamePrint "\n";
    TraceOperation 064913 (Store (Con 11) (Con 3));
    SetLocal 11 3;
    TraceOperation 064916 (Jump 065068);
    Jump: 065068
  }
LocOp 064919:
  TraceOperation 064919 (Je [Var (Local 6),Con 1] (Branch F (Dloc 064941)));
  if (Equal(GetLocal(6),1)) {
    TraceOperation 064923 (Jg (Var (Local 5)) (Con 2) (Branch F (Dloc 064930)));
    if (GreaterThan(GetLocal(5),2)) {
      TraceOperation 064927 (Store (Con 5) (Con 3));
      SetLocal 5 3;
      Jump: 064930
    } else {
      Jump: 064930
    }
  } else {
    Jump: 064941
  }
LocOp 064930:
  TraceOperation 064930 (Sub (Var (Local 5)) (Con 1) Sp);
  PushStack Sub(GetLocal(5),1);
  TraceOperation 064934 (Loadw (Var (Global 10)) (Var Sp) (Local 10));
  Let b1 = M[008837];
  Let b2 = M[008838];
  PopStack popped3;
  Let b4 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,popped3))];
  Let b5 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,popped3)),1)];
  SetLocal 10 MakeHiLo(b4,b5);
  TraceOperation 064938 (Jump 065000);
  Jump: 065000
LocOp 064941:
  TraceOperation 064941 (Je [Var (Local 6),Con 2] (Branch F (Dloc 064963)));
  if (Equal(GetLocal(6),2)) {
    TraceOperation 064945 (Jg (Var (Local 5)) (Con 3) (Branch F (Dloc 064952)));
    if (GreaterThan(GetLocal(5),3)) {
      TraceOperation 064949 (Store (Con 5) (Con 4));
      SetLocal 5 4;
      Jump: 064952
    } else {
      Jump: 064952
    }
  } else {
    Jump: 064963
  }
LocOp 064952:
  TraceOperation 064952 (Sub (Var (Local 5)) (Con 1) Sp);
  PushStack Sub(GetLocal(5),1);
  TraceOperation 064956 (Loadw (Var (Global 9)) (Var Sp) (Local 10));
  Let b1 = M[008835];
  Let b2 = M[008836];
  PopStack popped3;
  Let b4 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,popped3))];
  Let b5 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,popped3)),1)];
  SetLocal 10 MakeHiLo(b4,b5);
  TraceOperation 064960 (Jump 065000);
  Jump: 065000
LocOp 064963:
  TraceOperation 064963 (Jg (Var (Local 6)) (Con 2) (Branch F (Dloc 065000)));
  if (GreaterThan(GetLocal(6),2)) {
    TraceOperation 064967 (Sub (Var (Local 5)) (Var (Local 6)) (Local 5));
    SetLocal 5 Sub(GetLocal(5),GetLocal(6));
    TraceOperation 064971 (Jl (Var (Local 5)) (Con -1) (Branch F (Dloc 064985)));
    if (LessThan(GetLocal(5),-1)) {
      TraceOperation 064977 (Store (Con 5) (Con -2));
      SetLocal 5 -2;
      TraceOperation 064982 (Jump 064992);
      Jump: 064992
    } else {
      Jump: 064985
    }
  } else {
    Jump: 065000
  }
LocOp 064985:
  TraceOperation 064985 (Jg (Var (Local 5)) (Con 1) (Branch F (Dloc 064992)));
  if (GreaterThan(GetLocal(5),1)) {
    TraceOperation 064989 (Store (Con 5) (Con 2));
    SetLocal 5 2;
    Jump: 064992
  } else {
    Jump: 064992
  }
LocOp 064992:
  TraceOperation 064992 (Add (Var (Local 5)) (Con 2) Sp);
  PushStack Add(GetLocal(5),2);
  TraceOperation 064996 (Loadw (Var (Global 8)) (Var Sp) (Local 10));
  Let b1 = M[008833];
  Let b2 = M[008834];
  PopStack popped3;
  Let b4 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,popped3))];
  Let b5 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,popped3)),1)];
  SetLocal 10 MakeHiLo(b4,b5);
  Jump: 065000
LocOp 065000:
  TraceOperation 065000 (Random (Con 9) Sp);
  LetRandom random1 9;
  PushStack random1;
  TraceOperation 065004 (Sub (Var Sp) (Con 1) Sp);
  PopStack popped2;
  PushStack Sub(popped2,1);
  TraceOperation 065008 (Loadw (Var (Local 10)) (Var Sp) (Local 11));
  PopStack popped3;
  Let b4 = M[Offset(Address(GetLocal(10)),Mul(2,popped3))];
  Let b5 = M[Offset(Offset(Address(GetLocal(10)),Mul(2,popped3)),1)];
  SetLocal 11 MakeHiLo(b4,b5);
  TraceOperation 065012 (Jz (Var (Local 3)) (Branch T (Dloc 065028)));
  if (IsZero(GetLocal(3))) {
    Jump: 065028
  } else {
    TraceOperation 065015 (Je [Var (Local 11),Con 6] (Branch F (Dloc 065025)));
    if (Equal(GetLocal(11),6)) {
      TraceOperation 065019 (Store (Con 11) (Con 8));
      SetLocal 11 8;
      TraceOperation 065022 (Jump 065028);
      Jump: 065028
    } else {
      Jump: 065025
    }
  }
LocOp 065025:
  TraceOperation 065025 (Store (Con 11) (Con 9));
  SetLocal 11 9;
  Jump: 065028
LocOp 065028:
  TraceOperation 065028 (Je [Var (Local 11),Con 6] (Branch F (Dloc 065046)));
  if (Equal(GetLocal(11),6)) {
    TraceOperation 065032 (Jz (Var (Local 4)) (Branch T (Dloc 065046)));
    if (IsZero(GetLocal(4))) {
      Jump: 065046
    } else {
      TraceOperation 065035 (Random (Con 100) Sp);
      LetRandom random1 100;
      PushStack random1;
      TraceOperation 065039 (Jg (Con 25) (Var Sp) (Branch F (Dloc 065046)));
      PopStack popped2;
      if (GreaterThan(25,popped2)) {
        TraceOperation 065043 (Store (Con 11) (Con 7));
        SetLocal 11 7;
        Jump: 065046
      } else {
        Jump: 065046
      }
    }
  } else {
    Jump: 065046
  }
LocOp 065046:
  TraceOperation 065046 (Sub (Var (Local 11)) (Con 1) Sp);
  PushStack Sub(GetLocal(11),1);
  TraceOperation 065050 (Loadw (Var (Global 7)) (Var Sp) Sp);
  Let b1 = M[008831];
  Let b2 = M[008832];
  PopStack popped3;
  Let b4 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,popped3))];
  Let b5 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,popped3)),1)];
  PushStack MakeHiLo(b4,b5);
  TraceOperation 065054 (Call (Floc 020060) [Var Sp] Sp);
  PopStack popped6;
  PushFrame 065054;
  SetLocal 1 popped6;
  JumpCall: 020060, #actuals: 1
LocReturn 065054:
  PushStack call_result;
  TraceOperation 065060 (Call (Floc 064072) [Var Sp,Var (Global 118),Var (Global 119)] Sp);
  PopStack popped1;
  Let b2 = M[009053];
  Let b3 = M[009054];
  Let b4 = M[009055];
  Let b5 = M[009056];
  PushFrame 065060;
  SetLocal 1 popped1;
  SetLocal 2 MakeHiLo(b2,b3);
  SetLocal 3 MakeHiLo(b4,b5);
  JumpCall: 064072, #actuals: 3
LocReturn 065060:
  PushStack call_result;
  Jump: 065068
LocOp 065068:
  TraceOperation 065068 (Je [Var (Local 11),Con 1] (Branch T (Dloc 065168)));
  if (Equal(GetLocal(11),1)) {
    Jump: 065168
  } else {
    TraceOperation 065073 (Je [Var (Local 11),Con 8] (Branch F (Dloc 065080)));
    if (Equal(GetLocal(11),8)) {
      TraceOperation 065077 (Jump 065168);
      Jump: 065168
    } else {
      Jump: 065080
    }
  }
LocOp 065080:
  TraceOperation 065080 (Je [Var (Local 11),Con 2] (Branch F (Dloc 065091)));
  if (Equal(GetLocal(11),2)) {
    TraceOperation 065084 (Sub (Con 0) (Var (Local 6)) (Local 6));
    SetLocal 6 Sub(0,GetLocal(6));
    TraceOperation 065088 (Jump 065168);
    Jump: 065168
  } else {
    Jump: 065091
  }
LocOp 065091:
  TraceOperation 065091 (Je [Var (Local 11),Con 3] (Branch T (Dloc 065099)));
  if (Equal(GetLocal(11),3)) {
    Jump: 065099
  } else {
    TraceOperation 065095 (Je [Var (Local 11),Con 9] (Branch F (Dloc 065105)));
    if (Equal(GetLocal(11),9)) {
      Jump: 065099
    } else {
      Jump: 065105
    }
  }
LocOp 065099:
  TraceOperation 065099 (Store (Con 6) (Con 0));
  SetLocal 6 0;
  TraceOperation 065102 (Jump 065168);
  Jump: 065168
LocOp 065105:
  TraceOperation 065105 (Je [Var (Local 11),Con 4] (Branch F (Dloc 065121)));
  if (Equal(GetLocal(11),4)) {
    TraceOperation 065109 (Dec (Con 6));
    SetLocal 6 Sub(GetLocal(6),1);
    TraceOperation 065111 (Jl (Var (Local 6)) (Con 0) (Branch F (Dloc 065168)));
    if (LessThan(GetLocal(6),0)) {
      TraceOperation 065115 (Store (Con 6) (Con 0));
      SetLocal 6 0;
      TraceOperation 065118 (Jump 065168);
      Jump: 065168
    } else {
      Jump: 065168
    }
  } else {
    Jump: 065121
  }
LocOp 065121:
  TraceOperation 065121 (Je [Var (Local 11),Con 5] (Branch F (Dloc 065139)));
  if (Equal(GetLocal(11),5)) {
    TraceOperation 065125 (Sub (Var (Local 6)) (Con 2) (Local 6));
    SetLocal 6 Sub(GetLocal(6),2);
    TraceOperation 065129 (Jl (Var (Local 6)) (Con 0) (Branch F (Dloc 065168)));
    if (LessThan(GetLocal(6),0)) {
      TraceOperation 065133 (Store (Con 6) (Con 0));
      SetLocal 6 0;
      TraceOperation 065136 (Jump 065168);
      Jump: 065168
    } else {
      Jump: 065168
    }
  } else {
    Jump: 065139
  }
LocOp 065139:
  TraceOperation 065139 (Je [Var (Local 11),Con 6] (Branch F (Dloc 065149)));
  if (Equal(GetLocal(11),6)) {
    TraceOperation 065143 (Set_attr (Var (Global 118)) (Con 1));
    Let b1 = M[009053];
    Let b2 = M[009054];
    Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),0)];
    SetByte Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),0) SetBit(b3,6);
    TraceOperation 065146 (Jump 065168);
    Jump: 065168
  } else {
    Jump: 065149
  }
LocOp 065149:
  TraceOperation 065149 (Je [Var (Local 11),Con 7] (Branch F (Dloc 065153)));
  if (Equal(GetLocal(11),7)) {
    Jump: 065153
  } else {
    Jump: 065153
  }
LocOp 065153:
  TraceOperation 065153 (Clear_attr (Var (Local 4)) (Con 14));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(4),9)),1)];
  SetByte Offset(Offset(000741,Mul(GetLocal(4),9)),1) ClearBit(b1,1);
  TraceOperation 065156 (Set_attr (Var (Local 4)) (Con 29));
  Let b2 = M[Offset(Offset(000741,Mul(GetLocal(4),9)),3)];
  SetByte Offset(Offset(000741,Mul(GetLocal(4),9)),3) SetBit(b2,2);
  TraceOperation 065159 (Insert_obj (Var (Local 4)) (Var (Global 0)));
  Let b3 = M[008817];
  Let b4 = M[008818];
  Let b5 = M[Offset(Offset(000741,Mul(GetLocal(4),9)),4)];
  if (IsZero(Widen(b5))) {
    SetByte Offset(Offset(000741,Mul(GetLocal(4),9)),4) b4;
    Let b6 = M[Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),6)];
    SetByte Offset(Offset(000741,Mul(GetLocal(4),9)),5) LoByte(Widen(b6));
    SetByte Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),6) LoByte(GetLocal(4));
    TraceOperation 065162 (Call (Floc 038192) [Var (Local 4)] Sp);
    PushFrame 065162;
    SetLocal 1 GetLocal(4);
    JumpCall: 038192, #actuals: 1
  } else {
    Let b7 = M[Offset(Offset(000741,Mul(Widen(b5),9)),6)];
    if (Equal(Widen(b7),GetLocal(4))) {
      Let b8 = M[Offset(Offset(000741,Mul(GetLocal(4),9)),5)];
      SetByte Offset(Offset(000741,Mul(Widen(b5),9)),6) LoByte(Widen(b8));
      SetByte Offset(Offset(000741,Mul(GetLocal(4),9)),4) b4;
      Let b9 = M[Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),6)];
      SetByte Offset(Offset(000741,Mul(GetLocal(4),9)),5) LoByte(Widen(b9));
      SetByte Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),6) LoByte(GetLocal(4));
      TraceOperation 065162 (Call (Floc 038192) [Var (Local 4)] Sp);
      PushFrame 065162;
      SetLocal 1 GetLocal(4);
      JumpCall: 038192, #actuals: 1
    } else {
      Error: unlink/loop
    }
  }
LocReturn 065162:
  PushStack call_result;
  Jump: 065168
LocOp 065168:
  TraceOperation 065168 (Call (Floc 065264) [Var (Global 118),Var (Local 6),Var (Local 11)] Sp);
  Let b1 = M[009053];
  Let b2 = M[009054];
  PushFrame 065168;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 GetLocal(6);
  SetLocal 3 GetLocal(11);
  JumpCall: 065264, #actuals: 3
LocReturn 065168:
  PushStack call_result;
  TraceOperation 065176 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[475]--------------------------------------------------
LocRoutine 065178:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 065185
LocOp 065185:
  TraceOperation 065185 (Jz (Var (Local 1)) (Branch F (Dloc 065195)));
  if (IsZero(GetLocal(1))) {
    TraceOperation 065188 (Push (Con -10000));
    PushStack -10000;
    TraceOperation 065192 (Jump 065199);
    Jump: 065199
  } else {
    Jump: 065195
  }
LocOp 065195:
  TraceOperation 065195 (Sub (Var (Local 1)) (Var (Local 3)) Sp);
  PushStack Sub(GetLocal(1),GetLocal(3));
  Jump: 065199
LocOp 065199:
  TraceOperation 065199 (Put_prop (Var (Global 111)) (Con 7) (Var Sp));
  Let b1 = M[009039];
  Let b2 = M[009040];
  PopStack popped3;
  Let b4 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b5 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b6 = M[Address(MakeHiLo(b4,b5))];
  Error: getPropsA
LocReturn 065212:
  PushStack call_result;
  TraceOperation 065220 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  Jump: 065225
LocOp 065225:
  TraceOperation 065225 (Call (Floc 064126) [] Sp);
  PushFrame 065225;
  JumpCall: 064126, #actuals: 0
LocReturn 065225:
  PushStack call_result;
  TraceOperation 065230 (Jg (Var Sp) (Con 0) (Branch T (Dloc 065261)));
  PopStack popped1;
  if (GreaterThan(popped1,0)) {
    Jump: 065261
  } else {
    TraceOperation 065234 (Call (Floc 064126) [Con 0] Sp);
    PushFrame 065234;
    SetLocal 1 0;
    JumpCall: 064126, #actuals: 1
  }
LocReturn 065234:
  PushStack call_result;
  TraceOperation 065240 (Sub (Con 0) (Var Sp) Sp);
  PopStack popped1;
  PushStack Sub(0,popped1);
  TraceOperation 065244 (Add (Con 1) (Var Sp) Sp);
  PopStack popped2;
  PushStack Add(1,popped2);
  TraceOperation 065248 (Put_prop (Var (Global 111)) (Con 7) (Var Sp));
  Let b3 = M[009039];
  Let b4 = M[009040];
  PopStack popped5;
  Let b6 = M[Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),7)];
  Let b7 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),7),1)];
  Let b8 = M[Address(MakeHiLo(b6,b7))];
  Error: getPropsA
LocReturn 065253:
  PushStack call_result;
  TraceOperation 065260 Rfalse;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 0
LocOp 065261:
  TraceOperation 065261 (Ret (Var (Local 2)));
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: GetLocal(2)
--[476]--------------------------------------------------
LocRoutine 065264:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 065271
LocOp 065271:
  TraceOperation 065271 (Put_prop (Var (Local 1)) (Con 7) (Var (Local 2)));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),7)];
  Let b2 = M[Offset(Offset(Offset(000741,Mul(GetLocal(1),9)),7),1)];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Error: getPropsA
LocReturn 065378:
  PushStack call_result;
  TraceOperation 065384 (Get_prop (Var (Local 1)) (Con 17) Sp);
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),7)];
  Let b2 = M[Offset(Offset(Offset(000741,Mul(GetLocal(1),9)),7),1)];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Error: getPropsA
LocReturn 065388:
  PushStack call_result;
  TraceOperation 065393 (Ret (Var (Local 3)));
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: GetLocal(3)
LocOp 065395:
  TraceOperation 065395 (Je [Var (Local 3),Con 2] (Branch F (Dloc 065410)));
  if (Equal(GetLocal(3),2)) {
    TraceOperation 065399 (Get_prop (Var (Local 1)) (Con 17) Sp);
    Let b1 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),7)];
    Let b2 = M[Offset(Offset(Offset(000741,Mul(GetLocal(1),9)),7),1)];
    Let b3 = M[Address(MakeHiLo(b1,b2))];
    Error: getPropsA
  } else {
    Jump: 065410
  }
LocReturn 065403:
  PushStack call_result;
  TraceOperation 065408 (Ret (Var (Local 3)));
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: GetLocal(3)
LocOp 065410:
  TraceOperation 065410 (Ret (Var (Local 3)));
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: GetLocal(3)
--[477]--------------------------------------------------
LocRoutine 065412:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 065419
LocOp 065419:
  TraceOperation 065419 (Get_prop (Var (Local 1)) (Con 7) (Local 2));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),7)];
  Let b2 = M[Offset(Offset(Offset(000741,Mul(GetLocal(1),9)),7),1)];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Error: getPropsA
LocReturn 065423:
  PushStack call_result;
  TraceOperation 065428 (Sub (Var (Local 2)) (Var Sp) (Local 3));
  PopStack popped1;
  SetLocal 3 Sub(GetLocal(2),popped1);
  TraceOperation 065432 (Jg (Var (Local 3)) (Con 3) (Branch F (Dloc 065445)));
  if (GreaterThan(GetLocal(3),3)) {
    TraceOperation 065436 (Random (Con 100) Sp);
    LetRandom random2 100;
    PushStack random2;
    TraceOperation 065440 (Jg (Con 90) (Var Sp) (Branch T Dtrue));
    PopStack popped3;
    if (GreaterThan(90,popped3)) {
      PopFrame return_address_4;
      JumpReturn: return_address_4, result: 1
    } else {
      TraceOperation 065444 Rfalse;
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 0
    }
  } else {
    Jump: 065445
  }
LocOp 065445:
  TraceOperation 065445 (Jg (Var (Local 3)) (Con 0) (Branch F (Dloc 065458)));
  if (GreaterThan(GetLocal(3),0)) {
    TraceOperation 065449 (Random (Con 100) Sp);
    LetRandom random1 100;
    PushStack random1;
    TraceOperation 065453 (Jg (Con 75) (Var Sp) (Branch T Dtrue));
    PopStack popped2;
    if (GreaterThan(75,popped2)) {
      PopFrame return_address_3;
      JumpReturn: return_address_3, result: 1
    } else {
      TraceOperation 065457 Rfalse;
      PopFrame return_address_4;
      JumpReturn: return_address_4, result: 0
    }
  } else {
    Jump: 065458
  }
LocOp 065458:
  TraceOperation 065458 (Jz (Var (Local 3)) (Branch F (Dloc 065470)));
  if (IsZero(GetLocal(3))) {
    TraceOperation 065461 (Random (Con 100) Sp);
    LetRandom random1 100;
    PushStack random1;
    TraceOperation 065465 (Jg (Con 50) (Var Sp) (Branch T Dtrue));
    PopStack popped2;
    if (GreaterThan(50,popped2)) {
      PopFrame return_address_3;
      JumpReturn: return_address_3, result: 1
    } else {
      TraceOperation 065469 Rfalse;
      PopFrame return_address_4;
      JumpReturn: return_address_4, result: 0
    }
  } else {
    Jump: 065470
  }
LocOp 065470:
  TraceOperation 065470 (Jg (Var (Local 2)) (Con 1) (Branch F (Dloc 065483)));
  if (GreaterThan(GetLocal(2),1)) {
    TraceOperation 065474 (Random (Con 100) Sp);
    LetRandom random1 100;
    PushStack random1;
    TraceOperation 065478 (Jg (Con 25) (Var Sp) (Branch T Dtrue));
    PopStack popped2;
    if (GreaterThan(25,popped2)) {
      PopFrame return_address_3;
      JumpReturn: return_address_3, result: 1
    } else {
      TraceOperation 065482 Rfalse;
      PopFrame return_address_4;
      JumpReturn: return_address_4, result: 0
    }
  } else {
    Jump: 065483
  }
LocOp 065483:
  TraceOperation 065483 (Random (Con 100) Sp);
  LetRandom random1 100;
  PushStack random1;
  TraceOperation 065487 (Jg (Con 10) (Var Sp) (Branch T Dtrue));
  PopStack popped2;
  if (GreaterThan(10,popped2)) {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    TraceOperation 065491 Rfalse;
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 0
  }
--[478]--------------------------------------------------
LocRoutine 065492:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 065495
LocOp 065495:
  TraceOperation 065495 (Get_prop (Var (Global 111)) (Con 7) (Local 1));
  Let b1 = M[009039];
  Let b2 = M[009040];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  Error: getPropsA
LocOp 065514:
  TraceOperation 065514 (Jl (Var (Local 1)) (Con 0) (Branch F (Dloc 065525)));
  if (LessThan(GetLocal(1),0)) {
    TraceOperation 065518 (Inc (Con 1));
    SetLocal 1 Add(GetLocal(1),1);
    TraceOperation 065520 (Put_prop (Var (Global 111)) (Con 7) (Var (Local 1)));
    Let b1 = M[009039];
    Let b2 = M[009040];
    Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7)];
    Let b4 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7),1)];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    Error: getPropsA
  } else {
    Jump: 065525
  }
LocOp 065525:
  TraceOperation 065525 (Jl (Var (Local 1)) (Con 0) (Branch F (Dloc 065551)));
  if (LessThan(GetLocal(1),0)) {
    TraceOperation 065529 (Jl (Var (Global 133)) (Var (Global 134)) (Branch F (Dloc 065537)));
    Let b1 = M[009083];
    Let b2 = M[009084];
    Let b3 = M[009085];
    Let b4 = M[009086];
    if (LessThan(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
      TraceOperation 065533 (Add (Var (Global 133)) (Con 10) (Global 133));
      Let b5 = M[009083];
      Let b6 = M[009084];
      SetByte 009083 HiByte(Add(MakeHiLo(b5,b6),10));
      SetByte 009084 LoByte(Add(MakeHiLo(b5,b6),10));
      Jump: 065537
    } else {
      Jump: 065537
    }
  } else {
    Jump: 065551
  }
LocOp 065537:
  TraceOperation 065537 (Call (Floc 021618) [Con 32746,Con 30] Sp);
  PushFrame 065537;
  SetLocal 1 32746;
  SetLocal 2 30;
  JumpCall: 021618, #actuals: 2
LocReturn 065537:
  PushStack call_result;
  TraceOperation 065545 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 065550 Rtrue;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: 1
LocOp 065551:
  TraceOperation 065551 (Store (Con 149) (Var (Global 134)));
  Let b1 = M[009085];
  Let b2 = M[009086];
  SetByte 009083 b1;
  SetByte 009084 b2;
  TraceOperation 065554 (Call (Floc 021638) [Con 32746] Sp);
  PushFrame 065554;
  SetLocal 1 32746;
  JumpCall: 021638, #actuals: 1
LocReturn 065554:
  PushStack call_result;
  TraceOperation 065561 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 065566 Rtrue;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: 1
--[479]--------------------------------------------------
LocRoutine 065568:
  MakeRoutineFrame 6;
  if (LessThanByte(num_actuals,6)) {
    SetLocal 6 0;
    if (LessThanByte(num_actuals,5)) {
      SetLocal 5 0;
      if (LessThanByte(num_actuals,4)) {
        SetLocal 4 0;
        if (LessThanByte(num_actuals,3)) {
          SetLocal 3 0;
          if (LessThanByte(num_actuals,2)) {
            SetLocal 2 0;
            if (LessThanByte(num_actuals,1)) {
              SetLocal 1 0;
            }
          }
        }
      }
    }
  }
  Jump: 065581
LocOp 065581:
  TraceOperation 065581 (Loadw (Var (Global 3)) (Con 0) (Local 2));
  Let b1 = M[008823];
  Let b2 = M[008824];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),0)];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),0),1)];
  SetLocal 2 MakeHiLo(b3,b4);
  TraceOperation 065585 (Jz (Var (Global 62)) (Branch F Dfalse));
  Let b5 = M[008941];
  Let b6 = M[008942];
  if (IsZero(MakeHiLo(b5,b6))) {
    TraceOperation 065588 (Store (Con 3) (Con 0));
    SetLocal 3 0;
    Jump: 065591
  } else {
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 0
  }
LocOp 065591:
  TraceOperation 065591 (Inc (Con 3));
  SetLocal 3 Add(GetLocal(3),1);
  TraceOperation 065593 (Je [Var (Local 3),Var (Local 2)] (Branch F (Dloc 065600)));
  if (Equal(GetLocal(3),GetLocal(2))) {
    TraceOperation 065597 (Jump 065741);
    Jump: 065741
  } else {
    Jump: 065600
  }
LocOp 065600:
  TraceOperation 065600 (Loadw (Var (Global 3)) (Var (Local 3)) (Local 4));
  Let b1 = M[008823];
  Let b2 = M[008824];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,GetLocal(3)))];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,GetLocal(3))),1)];
  SetLocal 4 MakeHiLo(b3,b4);
  TraceOperation 065604 (Loadw (Var (Local 4)) (Con 0) (Local 5));
  Let b5 = M[Offset(Address(GetLocal(4)),0)];
  Let b6 = M[Offset(Offset(Address(GetLocal(4)),0),1)];
  SetLocal 5 MakeHiLo(b5,b6);
  TraceOperation 065608 (Jin (Var (Local 5)) (Var (Global 0)) (Branch F (Dloc 065703)));
  Let b7 = M[008817];
  Let b8 = M[008818];
  Let b9 = M[Offset(Offset(000741,Mul(GetLocal(5),9)),4)];
  if (Equal(MakeHiLo(b7,b8),Widen(b9))) {
    TraceOperation 065613 (Test_attr (Var (Local 5)) (Con 7) (Branch T (Dloc 065703)));
    Let b10 = M[Offset(Offset(000741,Mul(GetLocal(5),9)),0)];
    if (TestBit(b10,0)) {
      Jump: 065703
    } else {
      TraceOperation 065618 (Je [Var (Local 5),Con 114] (Branch F (Dloc 065631)));
      if (Equal(GetLocal(5),114)) {
        TraceOperation 065622 (Jz (Var (Global 30)) (Branch T (Dloc 065631)));
        Let b11 = M[008877];
        Let b12 = M[008878];
        if (IsZero(MakeHiLo(b11,b12))) {
          Jump: 065631
        } else {
          TraceOperation 065625 (Store (Con 46) (Con 0));
          SetByte 008877 0;
          SetByte 008878 0;
          TraceOperation 065628 (Jump 065591);
          Jump: 065591
        }
      } else {
        Jump: 065631
      }
    }
  } else {
    Jump: 065703
  }
LocOp 065631:
  TraceOperation 065631 (Get_prop (Var (Local 5)) (Con 7) Sp);
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(5),9)),7)];
  Let b2 = M[Offset(Offset(Offset(000741,Mul(GetLocal(5),9)),7),1)];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Error: getPropsA
LocReturn 065659:
  PushStack call_result;
  TraceOperation 065665 (Jump 065591);
  Jump: 065591
LocOp 065668:
  TraceOperation 065668 (Add (Var (Local 6)) (Con 25) Sp);
  PushStack Add(GetLocal(6),25);
  TraceOperation 065672 (Storew (Var (Local 4)) (Con 3) (Var Sp));
  PopStack popped1;
  SetByte Offset(Address(GetLocal(4)),6) HiByte(popped1);
  SetByte Offset(Offset(Address(GetLocal(4)),6),1) LoByte(popped1);
  TraceOperation 065677 (Jump 065591);
  Jump: 065591
LocOp 065680:
  TraceOperation 065680 (Test_attr (Var (Local 5)) (Con 2) (Branch T (Dloc 065697)));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(5),9)),0)];
  if (TestBit(b1,5)) {
    Jump: 065697
  } else {
    TraceOperation 065684 (Get_prop (Var (Local 5)) (Con 17) Sp);
    Let b2 = M[Offset(Offset(000741,Mul(GetLocal(5),9)),7)];
    Let b3 = M[Offset(Offset(Offset(000741,Mul(GetLocal(5),9)),7),1)];
    Let b4 = M[Address(MakeHiLo(b2,b3))];
    Error: getPropsA
  }
LocReturn 065688:
  PushStack call_result;
  TraceOperation 065693 (Jz (Var Sp) (Branch T (Dloc 065591)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 065591
  } else {
    Jump: 065697
  }
LocOp 065697:
  TraceOperation 065697 (Store (Con 1) (Con 1));
  SetLocal 1 1;
  TraceOperation 065700 (Jump 065591);
  Jump: 065591
LocOp 065703:
  TraceOperation 065703 (Test_attr (Var (Local 5)) (Con 2) (Branch F (Dloc 065716)));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(5),9)),0)];
  if (TestBit(b1,5)) {
    TraceOperation 065707 (Get_prop (Var (Local 5)) (Con 17) Sp);
    Let b2 = M[Offset(Offset(000741,Mul(GetLocal(5),9)),7)];
    Let b3 = M[Offset(Offset(Offset(000741,Mul(GetLocal(5),9)),7),1)];
    Let b4 = M[Address(MakeHiLo(b2,b3))];
    Error: getPropsA
  } else {
    Jump: 065716
  }
LocReturn 065711:
  PushStack call_result;
  Jump: 065716
LocOp 065716:
  TraceOperation 065716 (Je [Var (Local 5),Con 114] (Branch F (Dloc 065723)));
  if (Equal(GetLocal(5),114)) {
    TraceOperation 065720 (Store (Con 46) (Con 0));
    SetByte 008877 0;
    SetByte 008878 0;
    Jump: 065723
  } else {
    Jump: 065723
  }
LocOp 065723:
  TraceOperation 065723 (Clear_attr (Var (Global 111)) (Con 1));
  Let b1 = M[009039];
  Let b2 = M[009040];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),0)];
  SetByte Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),0) ClearBit(b3,6);
  TraceOperation 065726 (Clear_attr (Var (Local 5)) (Con 1));
  Let b4 = M[Offset(Offset(000741,Mul(GetLocal(5),9)),0)];
  SetByte Offset(Offset(000741,Mul(GetLocal(5),9)),0) ClearBit(b4,6);
  TraceOperation 065729 (Clear_attr (Var (Local 5)) (Con 2));
  Let b5 = M[Offset(Offset(000741,Mul(GetLocal(5),9)),0)];
  SetByte Offset(Offset(000741,Mul(GetLocal(5),9)),0) ClearBit(b5,5);
  TraceOperation 065732 (Call (Floc 065752) [Var (Local 5)] Sp);
  PushFrame 065732;
  SetLocal 1 GetLocal(5);
  JumpCall: 065752, #actuals: 1
LocReturn 065732:
  PushStack call_result;
  TraceOperation 065738 (Jump 065591);
  Jump: 065591
LocOp 065741:
  TraceOperation 065741 (Jz (Var (Local 1)) (Branch T Dfalse));
  if (IsZero(GetLocal(1))) {
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 0
  } else {
    TraceOperation 065744 (Call (Floc 063968) [Var (Local 2)] Sp);
    PushFrame 065744;
    SetLocal 1 GetLocal(2);
    JumpCall: 063968, #actuals: 1
  }
LocReturn 065744:
  PushStack call_result;
  TraceOperation 065750 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[480]--------------------------------------------------
LocRoutine 065752:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 065757
LocOp 065757:
  TraceOperation 065757 (Get_prop (Var (Local 1)) (Con 7) (Local 2));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),7)];
  Let b2 = M[Offset(Offset(Offset(000741,Mul(GetLocal(1),9)),7),1)];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Error: getPropsA
LocReturn 065778:
  PushStack call_result;
  TraceOperation 065783 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[481]--------------------------------------------------
LocRoutine 065784:
  MakeRoutineFrame 6;
  if (LessThanByte(num_actuals,6)) {
    SetLocal 6 0;
    if (LessThanByte(num_actuals,5)) {
      SetLocal 5 0;
      if (LessThanByte(num_actuals,4)) {
        SetLocal 4 0;
        if (LessThanByte(num_actuals,3)) {
          SetLocal 3 0;
          if (LessThanByte(num_actuals,2)) {
            SetLocal 2 0;
            if (LessThanByte(num_actuals,1)) {
              SetLocal 1 0;
            }
          }
        }
      }
    }
  }
  Jump: 065797
LocOp 065797:
  TraceOperation 065797 (Call (Floc 021638) [Con -32644] (Local 1));
  PushFrame 065797;
  SetLocal 1 -32644;
  JumpCall: 021638, #actuals: 1
LocReturn 065797:
  SetLocal 1 call_result;
  TraceOperation 065804 (Get_prop (Con 110) (Con 12) (Local 2));
  Let b1 = M[001738];
  Let b2 = M[001739];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Error: getPropsA
LocReturn 065813:
  PushStack call_result;
  TraceOperation 065819 (Jz (Var Sp) (Branch T (Dloc 065828)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 065828
  } else {
    TraceOperation 065822 (Store (Con 3) (Con 2));
    SetLocal 3 2;
    TraceOperation 065825 (Jump 065878);
    Jump: 065878
  }
LocOp 065828:
  TraceOperation 065828 (Store (Con 4) (Con 0));
  SetLocal 4 0;
  Jump: 065831
LocOp 065831:
  TraceOperation 065831 (Get_next_prop (Var (Global 0)) (Var (Local 4)) (Local 4));
  Let b1 = M[008817];
  Let b2 = M[008818];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  Error: getPropsA
LocOp 065841:
  TraceOperation 065841 (Jl (Var (Local 4)) (Var (Global 152)) (Branch T (Dloc 065831)));
  Let b1 = M[009121];
  Let b2 = M[009122];
  if (LessThan(GetLocal(4),MakeHiLo(b1,b2))) {
    Jump: 065831
  } else {
    TraceOperation 065846 (Get_prop_addr (Var (Global 0)) (Var (Local 4)) (Local 5));
    Let b3 = M[008817];
    Let b4 = M[008818];
    Let b5 = M[Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),7)];
    Let b6 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),7),1)];
    Let b7 = M[Address(MakeHiLo(b5,b6))];
    Error: getPropsA
  }
LocReturn 065865:
  PushStack call_result;
  TraceOperation 065871 (Jz (Var Sp) (Branch T (Dloc 065831)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 065831
  } else {
    TraceOperation 065875 (Store (Con 3) (Con 1));
    SetLocal 3 1;
    Jump: 065878
  }
LocOp 065878:
  TraceOperation 065878 (Je [Var (Local 3),Var (Local 2)] (Branch T Dfalse));
  if (Equal(GetLocal(3),GetLocal(2))) {
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 0
  } else {
    TraceOperation 065882 (Je [Var (Local 3),Con 2] (Branch F (Dloc 065917)));
    if (Equal(GetLocal(3),2)) {
      TraceOperation 065886 (Print "Your sword has begun to glow very brightly.");
      GamePrint "Your sword has begun to glow very brightly.";
      TraceOperation 065913 New_line;
      GamePrint "\n";
      TraceOperation 065914 (Jump 065977);
      Jump: 065977
    } else {
      Jump: 065917
    }
  }
LocOp 065917:
  TraceOperation 065917 (Je [Var (Local 3),Con 1] (Branch F (Dloc 065952)));
  if (Equal(GetLocal(3),1)) {
    TraceOperation 065921 (Print "Your sword is glowing with a faint blue glow.");
    GamePrint "Your sword is glowing with a faint blue glow.";
    TraceOperation 065948 New_line;
    GamePrint "\n";
    TraceOperation 065949 (Jump 065977);
    Jump: 065977
  } else {
    Jump: 065952
  }
LocOp 065952:
  TraceOperation 065952 (Jz (Var (Local 3)) (Branch F (Dloc 065977)));
  if (IsZero(GetLocal(3))) {
    TraceOperation 065955 (Print "Your sword is no longer glowing.");
    GamePrint "Your sword is no longer glowing.";
    TraceOperation 065976 New_line;
    GamePrint "\n";
    Jump: 065977
  } else {
    Jump: 065977
  }
LocOp 065977:
  TraceOperation 065977 (Put_prop (Con 110) (Con 12) (Var (Local 3)));
  Let b1 = M[001738];
  Let b2 = M[001739];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Error: getPropsA
--[482]--------------------------------------------------
LocRoutine 065990:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 065995
LocOp 065995:
  TraceOperation 065995 (Get_child (Var (Local 1)) (Local 2) (Branch T (Dloc 065999)));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),6)];
  SetLocal 2 Widen(b1);
  if (IsZero(Widen(b1))) {
    TraceOperation 065999 (Jz (Var (Local 2)) (Branch T Dfalse));
    if (IsZero(GetLocal(2))) {
      PopFrame return_address_2;
      JumpReturn: return_address_2, result: 0
    } else {
      TraceOperation 066002 (Test_attr (Var (Local 2)) (Con 30) (Branch F (Dloc 066010)));
      Let b3 = M[Offset(Offset(000741,Mul(GetLocal(2),9)),3)];
      if (TestBit(b3,1)) {
        TraceOperation 066006 (Test_attr (Var (Local 2)) (Con 7) (Branch F Dtrue));
        Let b4 = M[Offset(Offset(000741,Mul(GetLocal(2),9)),0)];
        if (TestBit(b4,0)) {
          Jump: 066010
        } else {
          PopFrame return_address_5;
          JumpReturn: return_address_5, result: 1
        }
      } else {
        Jump: 066010
      }
    }
  } else {
    TraceOperation 065999 (Jz (Var (Local 2)) (Branch T Dfalse));
    if (IsZero(GetLocal(2))) {
      PopFrame return_address_6;
      JumpReturn: return_address_6, result: 0
    } else {
      TraceOperation 066002 (Test_attr (Var (Local 2)) (Con 30) (Branch F (Dloc 066010)));
      Let b7 = M[Offset(Offset(000741,Mul(GetLocal(2),9)),3)];
      if (TestBit(b7,1)) {
        TraceOperation 066006 (Test_attr (Var (Local 2)) (Con 7) (Branch F Dtrue));
        Let b8 = M[Offset(Offset(000741,Mul(GetLocal(2),9)),0)];
        if (TestBit(b8,0)) {
          Jump: 066010
        } else {
          PopFrame return_address_9;
          JumpReturn: return_address_9, result: 1
        }
      } else {
        Jump: 066010
      }
    }
  }
LocOp 066010:
  TraceOperation 066010 (Get_sibling (Var (Local 2)) (Local 2) (Branch T (Dloc 065999)));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(2),9)),5)];
  SetLocal 2 Widen(b1);
  if (IsZero(Widen(b1))) {
    TraceOperation 066015 Rfalse;
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  } else {
    TraceOperation 065999 (Jz (Var (Local 2)) (Branch T Dfalse));
    if (IsZero(GetLocal(2))) {
      PopFrame return_address_3;
      JumpReturn: return_address_3, result: 0
    } else {
      TraceOperation 066002 (Test_attr (Var (Local 2)) (Con 30) (Branch F (Dloc 066010)));
      Let b4 = M[Offset(Offset(000741,Mul(GetLocal(2),9)),3)];
      if (TestBit(b4,1)) {
        TraceOperation 066006 (Test_attr (Var (Local 2)) (Con 7) (Branch F Dtrue));
        Let b5 = M[Offset(Offset(000741,Mul(GetLocal(2),9)),0)];
        if (TestBit(b5,0)) {
          Jump: 066010
        } else {
          PopFrame return_address_6;
          JumpReturn: return_address_6, result: 1
        }
      } else {
        Jump: 066010
      }
    }
  }
--[483]--------------------------------------------------
LocRoutine 066016:
  MakeRoutineFrame 5;
  if (LessThanByte(num_actuals,5)) {
    SetLocal 5 0;
    if (LessThanByte(num_actuals,4)) {
      SetLocal 4 0;
      if (LessThanByte(num_actuals,3)) {
        SetLocal 3 0;
        if (LessThanByte(num_actuals,2)) {
          SetLocal 2 0;
          if (LessThanByte(num_actuals,1)) {
            SetLocal 1 0;
          }
        }
      }
    }
  }
  Jump: 066027
LocOp 066027:
  TraceOperation 066027 (Get_parent (Con 114) (Local 1));
  Let b1 = M[001771];
  SetLocal 1 Widen(b1);
  Jump: 066030
LocOp 066030:
  TraceOperation 066030 (Test_attr (Con 114) (Con 7) (Branch T (Dloc 066040)));
  Let b1 = M[001767];
  if (TestBit(b1,0)) {
    Jump: 066040
  } else {
    TraceOperation 066034 (Push (Con 1));
    PushStack 1;
    TraceOperation 066037 (Jump 066043);
    Jump: 066043
  }
LocOp 066040:
  TraceOperation 066040 (Push (Con 0));
  PushStack 0;
  Jump: 066043
LocOp 066043:
  TraceOperation 066043 (Store (Con 3) (Var Sp));
  PopStack popped1;
  SetLocal 3 popped1;
  TraceOperation 066046 (Jz (Var (Local 3)) (Branch T (Dloc 066052)));
  if (IsZero(GetLocal(3))) {
    Jump: 066052
  } else {
    TraceOperation 066049 (Get_parent (Con 114) (Local 1));
    Let b2 = M[001771];
    SetLocal 1 Widen(b2);
    Jump: 066052
  }
LocOp 066052:
  TraceOperation 066052 (Je [Var (Local 1),Con 190] (Branch F (Dloc 066080)));
  if (Equal(GetLocal(1),190)) {
    TraceOperation 066056 (Je [Var (Local 1),Var (Global 0)] (Branch T (Dloc 066080)));
    Let b1 = M[008817];
    Let b2 = M[008818];
    if (Equal(GetLocal(1),MakeHiLo(b1,b2))) {
      Jump: 066080
    } else {
      TraceOperation 066060 (Jz (Var (Local 3)) (Branch T (Dloc 066071)));
      if (IsZero(GetLocal(3))) {
        Jump: 066071
      } else {
        TraceOperation 066063 (Call (Floc 053970) [] Sp);
        PushFrame 066063;
        JumpCall: 053970, #actuals: 0
      }
    }
  } else {
    Jump: 066080
  }
LocReturn 066063:
  PushStack call_result;
  TraceOperation 066068 (Store (Con 3) (Con 0));
  SetLocal 3 0;
  Jump: 066071
LocOp 066071:
  TraceOperation 066071 (Call (Floc 053998) [Con 190] Sp);
  PushFrame 066071;
  SetLocal 1 190;
  JumpCall: 053998, #actuals: 1
LocReturn 066071:
  PushStack call_result;
  TraceOperation 066077 (Jump 066164);
  Jump: 066164
LocOp 066080:
  TraceOperation 066080 (Je [Var (Local 1),Var (Global 0)] (Branch F (Dloc 066112)));
  Let b1 = M[008817];
  Let b2 = M[008818];
  if (Equal(GetLocal(1),MakeHiLo(b1,b2))) {
    TraceOperation 066084 (Test_attr (Var (Local 1)) (Con 20) (Branch T (Dloc 066112)));
    Let b3 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),2)];
    if (TestBit(b3,3)) {
      Jump: 066112
    } else {
      TraceOperation 066088 (Jin (Con 217) (Var (Global 0)) (Branch T (Dloc 066112)));
      Let b4 = M[008817];
      Let b5 = M[008818];
      Let b6 = M[002698];
      if (Equal(MakeHiLo(b4,b5),Widen(b6))) {
        Jump: 066112
      } else {
        TraceOperation 066092 (Call (Floc 052878) [Var (Local 3)] Sp);
        PushFrame 066092;
        SetLocal 1 GetLocal(3);
        JumpCall: 052878, #actuals: 1
      }
    }
  } else {
    Jump: 066112
  }
LocReturn 066092:
  PushStack call_result;
  TraceOperation 066098 (Jz (Var Sp) (Branch F Dtrue));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 066101 (Test_attr (Con 114) (Con 7) (Branch F (Dloc 066164)));
    Let b2 = M[001767];
    if (TestBit(b2,0)) {
      TraceOperation 066106 (Store (Con 3) (Con 0));
      SetLocal 3 0;
      TraceOperation 066109 (Jump 066164);
      Jump: 066164
    } else {
      Jump: 066164
    }
  } else {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  }
LocOp 066112:
  TraceOperation 066112 (Jin (Con 114) (Var (Local 1)) (Branch F (Dloc 066126)));
  Let b1 = M[001771];
  if (Equal(GetLocal(1),Widen(b1))) {
    TraceOperation 066116 (Test_attr (Con 114) (Con 7) (Branch T (Dloc 066126)));
    Let b2 = M[001767];
    if (TestBit(b2,0)) {
      Jump: 066126
    } else {
      TraceOperation 066120 (Set_attr (Con 114) (Con 7));
      Let b3 = M[001767];
      SetByte 001767 SetBit(b3,0);
      TraceOperation 066123 (Store (Con 3) (Con 0));
      SetLocal 3 0;
      Jump: 066126
    }
  } else {
    Jump: 066126
  }
LocOp 066126:
  TraceOperation 066126 (Test_attr (Var (Local 1)) (Con 3) (Branch F (Dloc 066164)));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),0)];
  if (TestBit(b1,4)) {
    TraceOperation 066130 (Call (Floc 066488) [Var (Local 1),Con 114,Con 75] Sp);
    PushFrame 066130;
    SetLocal 1 GetLocal(1);
    SetLocal 2 114;
    SetLocal 3 75;
    JumpCall: 066488, #actuals: 3
  } else {
    Jump: 066164
  }
LocReturn 066130:
  PushStack call_result;
  TraceOperation 066138 (Test_attr (Var (Local 1)) (Con 5) (Branch F (Dloc 066155)));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),0)];
  if (TestBit(b1,2)) {
    TraceOperation 066142 (Test_attr (Var (Global 0)) (Con 5) (Branch F (Dloc 066155)));
    Let b2 = M[008817];
    Let b3 = M[008818];
    Let b4 = M[Offset(Offset(000741,Mul(MakeHiLo(b2,b3),9)),0)];
    if (TestBit(b4,2)) {
      TraceOperation 066146 (Call (Floc 054060) [Var (Local 1)] Sp);
      PushFrame 066146;
      SetLocal 1 GetLocal(1);
      JumpCall: 054060, #actuals: 1
    } else {
      Jump: 066155
    }
  } else {
    Jump: 066155
  }
LocReturn 066146:
  PushStack call_result;
  TraceOperation 066152 (Jump 066161);
  Jump: 066161
LocOp 066155:
  TraceOperation 066155 (Call (Floc 066380) [Var (Local 1)] Sp);
  PushFrame 066155;
  SetLocal 1 GetLocal(1);
  JumpCall: 066380, #actuals: 1
LocReturn 066155:
  PushStack call_result;
  Jump: 066161
LocOp 066161:
  TraceOperation 066161 (Store (Con 5) (Var Sp));
  PopStack popped1;
  SetLocal 5 popped1;
  Jump: 066164
LocOp 066164:
  TraceOperation 066164 (Jz (Var (Local 4)) (Branch F (Dloc 066173)));
  if (IsZero(GetLocal(4))) {
    TraceOperation 066167 (Push (Con 1));
    PushStack 1;
    TraceOperation 066170 (Jump 066176);
    Jump: 066176
  } else {
    Jump: 066173
  }
LocOp 066173:
  TraceOperation 066173 (Push (Con 0));
  PushStack 0;
  Jump: 066176
LocOp 066176:
  TraceOperation 066176 (Store (Con 4) (Var Sp));
  PopStack popped1;
  SetLocal 4 popped1;
  TraceOperation 066179 (Jz (Var (Local 4)) (Branch T (Dloc 066229)));
  if (IsZero(GetLocal(4))) {
    Jump: 066229
  } else {
    TraceOperation 066182 (Jz (Var (Local 3)) (Branch F (Dloc 066229)));
    if (IsZero(GetLocal(3))) {
      TraceOperation 066185 (Call (Floc 066364) [] Sp);
      PushFrame 066185;
      JumpCall: 066364, #actuals: 0
    } else {
      Jump: 066229
    }
  }
LocReturn 066185:
  PushStack call_result;
  Jump: 066190
LocOp 066190:
  TraceOperation 066190 (Jz (Var (Local 1)) (Branch T (Dloc 066200)));
  if (IsZero(GetLocal(1))) {
    Jump: 066200
  } else {
    TraceOperation 066193 (Get_sibling (Var (Local 1)) (Local 1) (Branch F (Dloc 066200)));
    Let b1 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),5)];
    SetLocal 1 Widen(b1);
    if (IsZero(Widen(b1))) {
      Jump: 066200
    } else {
      TraceOperation 066197 (Jump 066204);
      Jump: 066204
    }
  }
LocOp 066200:
  TraceOperation 066200 (Get_child (Con 82) (Local 1) (Branch T (Dloc 066204)));
  Let b1 = M[001485];
  SetLocal 1 Widen(b1);
  if (IsZero(Widen(b1))) {
    Jump: 066204
  } else {
    Jump: 066204
  }
LocOp 066204:
  TraceOperation 066204 (Test_attr (Var (Local 1)) (Con 9) (Branch T (Dloc 066190)));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),1)];
  if (TestBit(b1,6)) {
    Jump: 066190
  } else {
    TraceOperation 066209 (Test_attr (Var (Local 1)) (Con 6) (Branch F (Dloc 066190)));
    Let b2 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),0)];
    if (TestBit(b2,1)) {
      TraceOperation 066214 (Insert_obj (Con 114) (Var (Local 1)));
      Let b3 = M[001771];
      if (IsZero(Widen(b3))) {
        SetByte 001771 LoByte(GetLocal(1));
        Let b4 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),6)];
        SetByte 001772 LoByte(Widen(b4));
        SetByte Offset(Offset(000741,Mul(GetLocal(1),9)),6) 114;
        TraceOperation 066217 (Clear_attr (Con 114) (Con 2));
        Let b5 = M[001767];
        SetByte 001767 ClearBit(b5,5);
        TraceOperation 066220 (Set_attr (Con 114) (Con 7));
        Let b6 = M[001767];
        SetByte 001767 SetBit(b6,0);
        TraceOperation 066223 (Store (Con 47) (Con 0));
        SetByte 008879 0;
        SetByte 008880 0;
        TraceOperation 066226 (Jump 066030);
        Jump: 066030
      } else {
        Let b7 = M[Offset(Offset(000741,Mul(Widen(b3),9)),6)];
        if (Equal(Widen(b7),114)) {
          Let b8 = M[001772];
          SetByte Offset(Offset(000741,Mul(Widen(b3),9)),6) LoByte(Widen(b8));
          SetByte 001771 LoByte(GetLocal(1));
          Let b9 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),6)];
          SetByte 001772 LoByte(Widen(b9));
          SetByte Offset(Offset(000741,Mul(GetLocal(1),9)),6) 114;
          TraceOperation 066217 (Clear_attr (Con 114) (Con 2));
          Let b10 = M[001767];
          SetByte 001767 ClearBit(b10,5);
          TraceOperation 066220 (Set_attr (Con 114) (Con 7));
          Let b11 = M[001767];
          SetByte 001767 SetBit(b11,0);
          TraceOperation 066223 (Store (Con 47) (Con 0));
          SetByte 008879 0;
          SetByte 008880 0;
          TraceOperation 066226 (Jump 066030);
          Jump: 066030
        } else {
          Error: unlink/loop
        }
      }
    } else {
      Jump: 066190
    }
  }
LocOp 066229:
  TraceOperation 066229 (Je [Var (Local 1),Con 190] (Branch T (Dloc 066241)));
  if (Equal(GetLocal(1),190)) {
    Jump: 066241
  } else {
    TraceOperation 066233 (Call (Floc 066244) [Var (Local 1)] Sp);
    PushFrame 066233;
    SetLocal 1 GetLocal(1);
    JumpCall: 066244, #actuals: 1
  }
LocReturn 066233:
  PushStack call_result;
  TraceOperation 066239 (Ret (Var (Local 5)));
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: GetLocal(5)
LocOp 066241:
  TraceOperation 066241 (Ret (Var (Local 5)));
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: GetLocal(5)
--[484]--------------------------------------------------
LocRoutine 066244:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 066253
LocOp 066253:
  TraceOperation 066253 (Get_child (Con 114) (Local 2) (Branch T (Dloc 066257)));
  Let b1 = M[001773];
  SetLocal 2 Widen(b1);
  if (IsZero(Widen(b1))) {
    Jump: 066257
  } else {
    Jump: 066257
  }
LocOp 066257:
  TraceOperation 066257 (Jz (Var (Local 2)) (Branch F (Dloc 066262)));
  if (IsZero(GetLocal(2))) {
    TraceOperation 066260 (Ret (Var (Local 4)));
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: GetLocal(4)
  } else {
    Jump: 066262
  }
LocOp 066262:
  TraceOperation 066262 (Get_sibling (Var (Local 2)) (Local 3) (Branch T (Dloc 066266)));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(2),9)),5)];
  SetLocal 3 Widen(b1);
  if (IsZero(Widen(b1))) {
    TraceOperation 066266 (Je [Var (Local 2),Con 113,Con 115] (Branch F (Dloc 066275)));
    if (LogOr(Equal(GetLocal(2),113),Equal(GetLocal(2),115))) {
      TraceOperation 066272 (Jump 066357);
      Jump: 066357
    } else {
      Jump: 066275
    }
  } else {
    TraceOperation 066266 (Je [Var (Local 2),Con 113,Con 115] (Branch F (Dloc 066275)));
    if (LogOr(Equal(GetLocal(2),113),Equal(GetLocal(2),115))) {
      TraceOperation 066272 (Jump 066357);
      Jump: 066357
    } else {
      Jump: 066275
    }
  }
LocOp 066275:
  TraceOperation 066275 (Get_prop (Var (Local 2)) (Con 12) Sp);
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(2),9)),7)];
  Let b2 = M[Offset(Offset(Offset(000741,Mul(GetLocal(2),9)),7),1)];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Error: getPropsA
LocReturn 066283:
  PushStack call_result;
  TraceOperation 066289 (Jz (Var Sp) (Branch T (Dloc 066357)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 066357
  } else {
    TraceOperation 066293 (Clear_attr (Var (Local 2)) (Con 7));
    Let b2 = M[Offset(Offset(000741,Mul(GetLocal(2),9)),0)];
    SetByte Offset(Offset(000741,Mul(GetLocal(2),9)),0) ClearBit(b2,0);
    TraceOperation 066296 (Insert_obj (Var (Local 2)) (Var (Local 1)));
    Let b3 = M[Offset(Offset(000741,Mul(GetLocal(2),9)),4)];
    if (IsZero(Widen(b3))) {
      SetByte Offset(Offset(000741,Mul(GetLocal(2),9)),4) LoByte(GetLocal(1));
      Let b4 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),6)];
      SetByte Offset(Offset(000741,Mul(GetLocal(2),9)),5) LoByte(Widen(b4));
      SetByte Offset(Offset(000741,Mul(GetLocal(1),9)),6) LoByte(GetLocal(2));
      TraceOperation 066299 (Jz (Var (Local 4)) (Branch F (Dloc 066357)));
      if (IsZero(GetLocal(4))) {
        TraceOperation 066302 (Je [Var (Local 1),Var (Global 0)] (Branch F (Dloc 066357)));
        Let b5 = M[008817];
        Let b6 = M[008818];
        if (Equal(GetLocal(1),MakeHiLo(b5,b6))) {
          TraceOperation 066306 (Print "The robber, rummaging through his bag, dropped a few items he found valueless.");
          GamePrint "The robber, rummaging through his bag, dropped a few items he found valueless.";
          TraceOperation 066353 New_line;
          GamePrint "\n";
          TraceOperation 066354 (Store (Con 4) (Con 1));
          SetLocal 4 1;
          Jump: 066357
        } else {
          Jump: 066357
        }
      } else {
        Jump: 066357
      }
    } else {
      Let b7 = M[Offset(Offset(000741,Mul(Widen(b3),9)),6)];
      if (Equal(Widen(b7),GetLocal(2))) {
        Let b8 = M[Offset(Offset(000741,Mul(GetLocal(2),9)),5)];
        SetByte Offset(Offset(000741,Mul(Widen(b3),9)),6) LoByte(Widen(b8));
        SetByte Offset(Offset(000741,Mul(GetLocal(2),9)),4) LoByte(GetLocal(1));
        Let b9 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),6)];
        SetByte Offset(Offset(000741,Mul(GetLocal(2),9)),5) LoByte(Widen(b9));
        SetByte Offset(Offset(000741,Mul(GetLocal(1),9)),6) LoByte(GetLocal(2));
        TraceOperation 066299 (Jz (Var (Local 4)) (Branch F (Dloc 066357)));
        if (IsZero(GetLocal(4))) {
          TraceOperation 066302 (Je [Var (Local 1),Var (Global 0)] (Branch F (Dloc 066357)));
          Let b10 = M[008817];
          Let b11 = M[008818];
          if (Equal(GetLocal(1),MakeHiLo(b10,b11))) {
            TraceOperation 066306 (Print "The robber, rummaging through his bag, dropped a few items he found valueless.");
            GamePrint "The robber, rummaging through his bag, dropped a few items he found valueless.";
            TraceOperation 066353 New_line;
            GamePrint "\n";
            TraceOperation 066354 (Store (Con 4) (Con 1));
            SetLocal 4 1;
            Jump: 066357
          } else {
            Jump: 066357
          }
        } else {
          Jump: 066357
        }
      } else {
        Error: unlink/loop
      }
    }
  }
LocOp 066357:
  TraceOperation 066357 (Store (Con 2) (Var (Local 3)));
  SetLocal 2 GetLocal(3);
  TraceOperation 066360 (Jump 066257);
  Jump: 066257
--[485]--------------------------------------------------
LocRoutine 066364:
  MakeRoutineFrame 0;
  Jump: 066365
LocOp 066365:
  TraceOperation 066365 (Get_parent (Con 114) Sp);
  Let b1 = M[001771];
  PushStack Widen(b1);
  TraceOperation 066368 (Jin (Con 113) (Var Sp) (Branch F Dfalse));
  PopStack popped2;
  Let b3 = M[001762];
  if (Equal(popped2,Widen(b3))) {
    TraceOperation 066372 (Set_attr (Con 113) (Con 14));
    Let b4 = M[001759];
    SetByte 001759 SetBit(b4,1);
    TraceOperation 066375 (Insert_obj (Con 113) (Con 114));
    Let b5 = M[001762];
    if (IsZero(Widen(b5))) {
      SetByte 001762 114;
      Let b6 = M[001773];
      SetByte 001763 LoByte(Widen(b6));
      SetByte 001773 113;
      TraceOperation 066378 Rtrue;
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 1
    } else {
      Let b8 = M[Offset(Offset(000741,Mul(Widen(b5),9)),6)];
      if (Equal(Widen(b8),113)) {
        Let b9 = M[001763];
        SetByte Offset(Offset(000741,Mul(Widen(b5),9)),6) LoByte(Widen(b9));
        SetByte 001762 114;
        Let b10 = M[001773];
        SetByte 001763 LoByte(Widen(b10));
        SetByte 001773 113;
        TraceOperation 066378 Rtrue;
        PopFrame return_address_11;
        JumpReturn: return_address_11, result: 1
      } else {
        Error: unlink/loop
      }
    }
  } else {
    PopFrame return_address_12;
    JumpReturn: return_address_12, result: 0
  }
--[486]--------------------------------------------------
LocRoutine 066380:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 066387
LocOp 066387:
  TraceOperation 066387 (Get_child (Var (Local 1)) (Local 2) (Branch T (Dloc 066391)));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),6)];
  SetLocal 2 Widen(b1);
  if (IsZero(Widen(b1))) {
    Jump: 066391
  } else {
    Jump: 066391
  }
LocOp 066391:
  TraceOperation 066391 (Jz (Var (Local 2)) (Branch T Dfalse));
  if (IsZero(GetLocal(2))) {
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 0
  } else {
    TraceOperation 066394 (Get_sibling (Var (Local 2)) (Local 3) (Branch T (Dloc 066398)));
    Let b2 = M[Offset(Offset(000741,Mul(GetLocal(2),9)),5)];
    SetLocal 3 Widen(b2);
    if (IsZero(Widen(b2))) {
      TraceOperation 066398 (Get_prop (Var (Local 2)) (Con 12) Sp);
      Let b3 = M[Offset(Offset(000741,Mul(GetLocal(2),9)),7)];
      Let b4 = M[Offset(Offset(Offset(000741,Mul(GetLocal(2),9)),7),1)];
      Let b5 = M[Address(MakeHiLo(b3,b4))];
      Error: getPropsA
    } else {
      TraceOperation 066398 (Get_prop (Var (Local 2)) (Con 12) Sp);
      Let b6 = M[Offset(Offset(000741,Mul(GetLocal(2),9)),7)];
      Let b7 = M[Offset(Offset(Offset(000741,Mul(GetLocal(2),9)),7),1)];
      Let b8 = M[Address(MakeHiLo(b6,b7))];
      Error: getPropsA
    }
  }
LocReturn 066425:
  PushStack call_result;
  TraceOperation 066431 (Jz (Var Sp) (Branch T (Dloc 066482)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 066482
  } else {
    Jump: 066434
  }
LocOp 066434:
  TraceOperation 066434 (Insert_obj (Var (Local 2)) (Con 114));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(2),9)),4)];
  if (IsZero(Widen(b1))) {
    SetByte Offset(Offset(000741,Mul(GetLocal(2),9)),4) 114;
    Let b2 = M[001773];
    SetByte Offset(Offset(000741,Mul(GetLocal(2),9)),5) LoByte(Widen(b2));
    SetByte 001773 LoByte(GetLocal(2));
    TraceOperation 066437 (Set_attr (Var (Local 2)) (Con 3));
    Let b3 = M[Offset(Offset(000741,Mul(GetLocal(2),9)),0)];
    SetByte Offset(Offset(000741,Mul(GetLocal(2),9)),0) SetBit(b3,4);
    TraceOperation 066440 (Set_attr (Var (Local 2)) (Con 7));
    Let b4 = M[Offset(Offset(000741,Mul(GetLocal(2),9)),0)];
    SetByte Offset(Offset(000741,Mul(GetLocal(2),9)),0) SetBit(b4,0);
    TraceOperation 066443 (Je [Var (Local 2),Con 129] (Branch F (Dloc 066450)));
    if (Equal(GetLocal(2),129)) {
      TraceOperation 066447 (Store (Con 163) (Con 0));
      SetByte 009111 0;
      SetByte 009112 0;
      Jump: 066450
    } else {
      Jump: 066450
    }
  } else {
    Let b5 = M[Offset(Offset(000741,Mul(Widen(b1),9)),6)];
    if (Equal(Widen(b5),GetLocal(2))) {
      Let b6 = M[Offset(Offset(000741,Mul(GetLocal(2),9)),5)];
      SetByte Offset(Offset(000741,Mul(Widen(b1),9)),6) LoByte(Widen(b6));
      SetByte Offset(Offset(000741,Mul(GetLocal(2),9)),4) 114;
      Let b7 = M[001773];
      SetByte Offset(Offset(000741,Mul(GetLocal(2),9)),5) LoByte(Widen(b7));
      SetByte 001773 LoByte(GetLocal(2));
      TraceOperation 066437 (Set_attr (Var (Local 2)) (Con 3));
      Let b8 = M[Offset(Offset(000741,Mul(GetLocal(2),9)),0)];
      SetByte Offset(Offset(000741,Mul(GetLocal(2),9)),0) SetBit(b8,4);
      TraceOperation 066440 (Set_attr (Var (Local 2)) (Con 7));
      Let b9 = M[Offset(Offset(000741,Mul(GetLocal(2),9)),0)];
      SetByte Offset(Offset(000741,Mul(GetLocal(2),9)),0) SetBit(b9,0);
      TraceOperation 066443 (Je [Var (Local 2),Con 129] (Branch F (Dloc 066450)));
      if (Equal(GetLocal(2),129)) {
        TraceOperation 066447 (Store (Con 163) (Con 0));
        SetByte 009111 0;
        SetByte 009112 0;
        Jump: 066450
      } else {
        Jump: 066450
      }
    } else {
      Error: unlink/loop
    }
  }
LocOp 066450:
  TraceOperation 066450 (Je [Var (Local 1),Var (Global 0)] (Branch F Dfalse));
  Let b1 = M[008817];
  Let b2 = M[008818];
  if (Equal(GetLocal(1),MakeHiLo(b1,b2))) {
    TraceOperation 066454 (Print "You suddenly notice that the ");
    GamePrint "You suddenly notice that the ";
    TraceOperation 066471 (Print_obj (Var (Local 2)));
    Let b3 = M[Offset(Offset(000741,Mul(GetLocal(2),9)),7)];
    Let b4 = M[Offset(Offset(Offset(000741,Mul(GetLocal(2),9)),7),1)];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    if (IsZeroByte(b5)) {
      GamePrint "";
      TraceOperation 066473 (Print_ret " vanished.");
      GamePrint " vanished.\n";
      PopFrame return_address_6;
      JumpReturn: return_address_6, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
      TraceOperation 066473 (Print_ret " vanished.");
      GamePrint " vanished.\n";
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 1
    }
  } else {
    PopFrame return_address_8;
    JumpReturn: return_address_8, result: 0
  }
LocOp 066482:
  TraceOperation 066482 (Store (Con 2) (Var (Local 3)));
  SetLocal 2 GetLocal(3);
  TraceOperation 066485 (Jump 066391);
  Jump: 066391
--[487]--------------------------------------------------
LocRoutine 066488:
  MakeRoutineFrame 6;
  if (LessThanByte(num_actuals,6)) {
    SetLocal 6 0;
    if (LessThanByte(num_actuals,5)) {
      SetLocal 5 0;
      if (LessThanByte(num_actuals,4)) {
        SetLocal 4 0;
        if (LessThanByte(num_actuals,3)) {
          SetLocal 3 0;
          if (LessThanByte(num_actuals,2)) {
            SetLocal 2 0;
            if (LessThanByte(num_actuals,1)) {
              SetLocal 1 0;
            }
          }
        }
      }
    }
  }
  Jump: 066501
LocOp 066501:
  TraceOperation 066501 (Get_child (Var (Local 1)) (Local 5) (Branch T (Dloc 066505)));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),6)];
  SetLocal 5 Widen(b1);
  if (IsZero(Widen(b1))) {
    Jump: 066505
  } else {
    Jump: 066505
  }
LocOp 066505:
  TraceOperation 066505 (Jz (Var (Local 5)) (Branch F (Dloc 066510)));
  if (IsZero(GetLocal(5))) {
    TraceOperation 066508 (Ret (Var (Local 6)));
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: GetLocal(6)
  } else {
    Jump: 066510
  }
LocOp 066510:
  TraceOperation 066510 (Get_sibling (Var (Local 5)) (Local 4) (Branch T (Dloc 066514)));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(5),9)),5)];
  SetLocal 4 Widen(b1);
  if (IsZero(Widen(b1))) {
    TraceOperation 066514 (Test_attr (Var (Local 5)) (Con 7) (Branch T (Dloc 066557)));
    Let b2 = M[Offset(Offset(000741,Mul(GetLocal(5),9)),0)];
    if (TestBit(b2,0)) {
      Jump: 066557
    } else {
      TraceOperation 066518 (Test_attr (Var (Local 5)) (Con 9) (Branch T (Dloc 066557)));
      Let b3 = M[Offset(Offset(000741,Mul(GetLocal(5),9)),1)];
      if (TestBit(b3,6)) {
        Jump: 066557
      } else {
        TraceOperation 066522 (Get_prop (Var (Local 5)) (Con 12) Sp);
        Let b4 = M[Offset(Offset(000741,Mul(GetLocal(5),9)),7)];
        Let b5 = M[Offset(Offset(Offset(000741,Mul(GetLocal(5),9)),7),1)];
        Let b6 = M[Address(MakeHiLo(b4,b5))];
        Error: getPropsA
      }
    }
  } else {
    TraceOperation 066514 (Test_attr (Var (Local 5)) (Con 7) (Branch T (Dloc 066557)));
    Let b7 = M[Offset(Offset(000741,Mul(GetLocal(5),9)),0)];
    if (TestBit(b7,0)) {
      Jump: 066557
    } else {
      TraceOperation 066518 (Test_attr (Var (Local 5)) (Con 9) (Branch T (Dloc 066557)));
      Let b8 = M[Offset(Offset(000741,Mul(GetLocal(5),9)),1)];
      if (TestBit(b8,6)) {
        Jump: 066557
      } else {
        TraceOperation 066522 (Get_prop (Var (Local 5)) (Con 12) Sp);
        Let b9 = M[Offset(Offset(000741,Mul(GetLocal(5),9)),7)];
        Let b10 = M[Offset(Offset(Offset(000741,Mul(GetLocal(5),9)),7),1)];
        Let b11 = M[Address(MakeHiLo(b9,b10))];
        Error: getPropsA
      }
    }
  }
LocOp 066541:
  TraceOperation 066541 (Insert_obj (Var (Local 5)) (Var (Local 2)));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(5),9)),4)];
  if (IsZero(Widen(b1))) {
    SetByte Offset(Offset(000741,Mul(GetLocal(5),9)),4) LoByte(GetLocal(2));
    Let b2 = M[Offset(Offset(000741,Mul(GetLocal(2),9)),6)];
    SetByte Offset(Offset(000741,Mul(GetLocal(5),9)),5) LoByte(Widen(b2));
    SetByte Offset(Offset(000741,Mul(GetLocal(2),9)),6) LoByte(GetLocal(5));
    TraceOperation 066544 (Set_attr (Var (Local 5)) (Con 3));
    Let b3 = M[Offset(Offset(000741,Mul(GetLocal(5),9)),0)];
    SetByte Offset(Offset(000741,Mul(GetLocal(5),9)),0) SetBit(b3,4);
    TraceOperation 066547 (Je [Var (Local 2),Var (Local 2)] (Branch F (Dloc 066554)));
    if (Equal(GetLocal(2),GetLocal(2))) {
      TraceOperation 066551 (Set_attr (Var (Local 5)) (Con 7));
      Let b4 = M[Offset(Offset(000741,Mul(GetLocal(5),9)),0)];
      SetByte Offset(Offset(000741,Mul(GetLocal(5),9)),0) SetBit(b4,0);
      Jump: 066554
    } else {
      Jump: 066554
    }
  } else {
    Let b5 = M[Offset(Offset(000741,Mul(Widen(b1),9)),6)];
    if (Equal(Widen(b5),GetLocal(5))) {
      Let b6 = M[Offset(Offset(000741,Mul(GetLocal(5),9)),5)];
      SetByte Offset(Offset(000741,Mul(Widen(b1),9)),6) LoByte(Widen(b6));
      SetByte Offset(Offset(000741,Mul(GetLocal(5),9)),4) LoByte(GetLocal(2));
      Let b7 = M[Offset(Offset(000741,Mul(GetLocal(2),9)),6)];
      SetByte Offset(Offset(000741,Mul(GetLocal(5),9)),5) LoByte(Widen(b7));
      SetByte Offset(Offset(000741,Mul(GetLocal(2),9)),6) LoByte(GetLocal(5));
      TraceOperation 066544 (Set_attr (Var (Local 5)) (Con 3));
      Let b8 = M[Offset(Offset(000741,Mul(GetLocal(5),9)),0)];
      SetByte Offset(Offset(000741,Mul(GetLocal(5),9)),0) SetBit(b8,4);
      TraceOperation 066547 (Je [Var (Local 2),Var (Local 2)] (Branch F (Dloc 066554)));
      if (Equal(GetLocal(2),GetLocal(2))) {
        TraceOperation 066551 (Set_attr (Var (Local 5)) (Con 7));
        Let b9 = M[Offset(Offset(000741,Mul(GetLocal(5),9)),0)];
        SetByte Offset(Offset(000741,Mul(GetLocal(5),9)),0) SetBit(b9,0);
        Jump: 066554
      } else {
        Jump: 066554
      }
    } else {
      Error: unlink/loop
    }
  }
LocOp 066554:
  TraceOperation 066554 (Store (Con 6) (Con 1));
  SetLocal 6 1;
  Jump: 066557
LocOp 066557:
  TraceOperation 066557 (Store (Con 5) (Var (Local 4)));
  SetLocal 5 GetLocal(4);
  TraceOperation 066560 (Jump 066505);
  Jump: 066505
--[488]--------------------------------------------------
LocRoutine 066564:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 066573
LocOp 066573:
  TraceOperation 066573 (Call (Floc 064126) [Con 0] (Local 1));
  PushFrame 066573;
  SetLocal 1 0;
  JumpCall: 064126, #actuals: 1
LocReturn 066573:
  SetLocal 1 call_result;
  TraceOperation 066579 (Get_prop (Var (Global 111)) (Con 7) (Local 2));
  Let b1 = M[009039];
  Let b2 = M[009040];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  Error: getPropsA
LocReturn 066587:
  PushStack call_result;
  TraceOperation 066594 (Loadw (Var Sp) (Con 0) Sp);
  PopStack popped1;
  Let b2 = M[Offset(Address(popped1),0)];
  Let b3 = M[Offset(Offset(Address(popped1),0),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 066598 (Jz (Var Sp) (Branch F (Dloc 066607)));
  PopStack popped4;
  if (IsZero(popped4)) {
    TraceOperation 066601 (Store (Con 2) (Con 0));
    SetLocal 2 0;
    TraceOperation 066604 (Jump 066611);
    Jump: 066611
  } else {
    Jump: 066607
  }
LocOp 066607:
  TraceOperation 066607 (Sub (Con 0) (Var (Local 2)) (Local 2));
  SetLocal 2 Sub(0,GetLocal(2));
  Jump: 066611
LocOp 066611:
  TraceOperation 066611 (Jz (Var (Local 2)) (Branch F (Dloc 066634)));
  if (IsZero(GetLocal(2))) {
    TraceOperation 066614 (Print "You are in perfect health.");
    GamePrint "You are in perfect health.";
    TraceOperation 066631 (Jump 066714);
    Jump: 066714
  } else {
    Jump: 066634
  }
LocOp 066634:
  TraceOperation 066634 (Print "You have ");
  GamePrint "You have ";
  TraceOperation 066639 (Je [Var (Local 2),Con 1] (Branch F (Dloc 066657)));
  if (Equal(GetLocal(2),1)) {
    TraceOperation 066643 (Print "a light wound,");
    GamePrint "a light wound,";
    TraceOperation 066654 (Jump 066714);
    Jump: 066714
  } else {
    Jump: 066657
  }
LocOp 066657:
  TraceOperation 066657 (Je [Var (Local 2),Con 2] (Branch F (Dloc 066677)));
  if (Equal(GetLocal(2),2)) {
    TraceOperation 066661 (Print "a serious wound,");
    GamePrint "a serious wound,";
    TraceOperation 066674 (Jump 066714);
    Jump: 066714
  } else {
    Jump: 066677
  }
LocOp 066677:
  TraceOperation 066677 (Je [Var (Local 2),Con 3] (Branch F (Dloc 066697)));
  if (Equal(GetLocal(2),3)) {
    TraceOperation 066681 (Print "several wounds,");
    GamePrint "several wounds,";
    TraceOperation 066694 (Jump 066714);
    Jump: 066714
  } else {
    Jump: 066697
  }
LocOp 066697:
  TraceOperation 066697 (Jg (Var (Local 2)) (Con 3) (Branch F (Dloc 066714)));
  if (GreaterThan(GetLocal(2),3)) {
    TraceOperation 066701 (Print "serious wounds,");
    GamePrint "serious wounds,";
    Jump: 066714
  } else {
    Jump: 066714
  }
LocOp 066714:
  TraceOperation 066714 (Jz (Var (Local 2)) (Branch T (Dloc 066767)));
  if (IsZero(GetLocal(2))) {
    Jump: 066767
  } else {
    TraceOperation 066717 (Print " which will be cured after ");
    GamePrint " which will be cured after ";
    TraceOperation 066734 (Sub (Var (Local 2)) (Con 1) Sp);
    PushStack Sub(GetLocal(2),1);
    TraceOperation 066738 (Mul (Con 30) (Var Sp) (Local 4));
    PopStack popped1;
    SetLocal 4 Mul(30,popped1);
    TraceOperation 066742 (Call (Floc 021638) [Con 32746] Sp);
    PushFrame 066742;
    SetLocal 1 32746;
    JumpCall: 021638, #actuals: 1
  }
LocReturn 066742:
  PushStack call_result;
  TraceOperation 066749 (Loadw (Var Sp) (Con 1) Sp);
  PopStack popped1;
  Let b2 = M[Offset(Address(popped1),2)];
  Let b3 = M[Offset(Offset(Address(popped1),2),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 066753 (Add (Var (Local 4)) (Var Sp) Sp);
  PopStack popped4;
  PushStack Add(GetLocal(4),popped4);
  TraceOperation 066757 (Print_num (Var Sp));
  PopStack popped5;
  GamePrint ShowNumber(popped5);
  TraceOperation 066760 (Print " moves.");
  GamePrint " moves.";
  Jump: 066767
LocOp 066767:
  TraceOperation 066767 New_line;
  GamePrint "\n";
  TraceOperation 066768 (Print "You can ");
  GamePrint "You can ";
  TraceOperation 066773 (Jz (Var (Local 3)) (Branch F (Dloc 066792)));
  if (IsZero(GetLocal(3))) {
    TraceOperation 066776 (Print "expect death soon");
    GamePrint "expect death soon";
    TraceOperation 066789 (Jump 066905);
    Jump: 066905
  } else {
    Jump: 066792
  }
LocOp 066792:
  TraceOperation 066792 (Je [Var (Local 3),Con 1] (Branch F (Dloc 066822)));
  if (Equal(GetLocal(3),1)) {
    TraceOperation 066796 (Print "be killed by one more light wound");
    GamePrint "be killed by one more light wound";
    TraceOperation 066819 (Jump 066905);
    Jump: 066905
  } else {
    Jump: 066822
  }
LocOp 066822:
  TraceOperation 066822 (Je [Var (Local 3),Con 2] (Branch F (Dloc 066848)));
  if (Equal(GetLocal(3),2)) {
    TraceOperation 066826 (Print "be killed by a serious wound");
    GamePrint "be killed by a serious wound";
    TraceOperation 066845 (Jump 066905);
    Jump: 066905
  } else {
    Jump: 066848
  }
LocOp 066848:
  TraceOperation 066848 (Je [Var (Local 3),Con 3] (Branch F (Dloc 066874)));
  if (Equal(GetLocal(3),3)) {
    TraceOperation 066852 (Print "survive one serious wound");
    GamePrint "survive one serious wound";
    TraceOperation 066871 (Jump 066905);
    Jump: 066905
  } else {
    Jump: 066874
  }
LocOp 066874:
  TraceOperation 066874 (Jg (Var (Local 3)) (Con 3) (Branch F (Dloc 066905)));
  if (GreaterThan(GetLocal(3),3)) {
    TraceOperation 066878 (Print "strong enough to take several wounds.");
    GamePrint "strong enough to take several wounds.";
    Jump: 066905
  } else {
    Jump: 066905
  }
LocOp 066905:
  TraceOperation 066905 (Print ".");
  GamePrint ".";
  TraceOperation 066908 New_line;
  GamePrint "\n";
  TraceOperation 066909 (Jz (Var (Global 61)) (Branch T Dfalse));
  Let b1 = M[008939];
  Let b2 = M[008940];
  if (IsZero(MakeHiLo(b1,b2))) {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  } else {
    TraceOperation 066912 (Print "You have been killed ");
    GamePrint "You have been killed ";
    TraceOperation 066925 (Je [Var (Global 61),Con 1] (Branch F (Dloc 066937)));
    Let b4 = M[008939];
    Let b5 = M[008940];
    if (Equal(MakeHiLo(b4,b5),1)) {
      TraceOperation 066929 (Print "once");
      GamePrint "once";
      TraceOperation 066934 (Jump 066942);
      Jump: 066942
    } else {
      Jump: 066937
    }
  }
LocOp 066937:
  TraceOperation 066937 (Print "twice");
  GamePrint "twice";
  Jump: 066942
LocOp 066942:
  TraceOperation 066942 (Print_ret ".");
  GamePrint ".\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[489]--------------------------------------------------
LocRoutine 066946:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 1;
  }
  Jump: 066949
LocOp 066949:
  TraceOperation 066949 (Print "Your score is ");
  GamePrint "Your score is ";
  TraceOperation 066958 (Print_num (Var (Global 1)));
  Let b1 = M[008819];
  Let b2 = M[008820];
  GamePrint ShowNumber(MakeHiLo(b1,b2));
  TraceOperation 066961 (Print " (total of 350 points), in ");
  GamePrint " (total of 350 points), in ";
  TraceOperation 066982 (Print_num (Var (Global 2)));
  Let b3 = M[008821];
  Let b4 = M[008822];
  GamePrint ShowNumber(MakeHiLo(b3,b4));
  TraceOperation 066985 (Je [Var (Global 2),Con 1] (Branch F (Dloc 066999)));
  Let b5 = M[008821];
  Let b6 = M[008822];
  if (Equal(MakeHiLo(b5,b6),1)) {
    TraceOperation 066989 (Print " move.");
    GamePrint " move.";
    TraceOperation 066996 (Jump 067006);
    Jump: 067006
  } else {
    Jump: 066999
  }
LocOp 066999:
  TraceOperation 066999 (Print " moves.");
  GamePrint " moves.";
  Jump: 067006
LocOp 067006:
  TraceOperation 067006 New_line;
  GamePrint "\n";
  TraceOperation 067007 (Print "This gives you the rank of ");
  GamePrint "This gives you the rank of ";
  TraceOperation 067022 (Je [Var (Global 1),Con 350] (Branch F (Dloc 067046)));
  Let b1 = M[008819];
  Let b2 = M[008820];
  if (Equal(MakeHiLo(b1,b2),350)) {
    TraceOperation 067028 (Print "Master Adventurer");
    GamePrint "Master Adventurer";
    TraceOperation 067043 (Jump 067167);
    Jump: 067167
  } else {
    Jump: 067046
  }
LocOp 067046:
  TraceOperation 067046 (Jg (Var (Global 1)) (Con 330) (Branch F (Dloc 067062)));
  Let b1 = M[008819];
  Let b2 = M[008820];
  if (GreaterThan(MakeHiLo(b1,b2),330)) {
    TraceOperation 067052 (Print "Wizard");
    GamePrint "Wizard";
    TraceOperation 067059 (Jump 067167);
    Jump: 067167
  } else {
    Jump: 067062
  }
LocOp 067062:
  TraceOperation 067062 (Jg (Var (Global 1)) (Con 300) (Branch F (Dloc 067078)));
  Let b1 = M[008819];
  Let b2 = M[008820];
  if (GreaterThan(MakeHiLo(b1,b2),300)) {
    TraceOperation 067068 (Print "Master");
    GamePrint "Master";
    TraceOperation 067075 (Jump 067167);
    Jump: 067167
  } else {
    Jump: 067078
  }
LocOp 067078:
  TraceOperation 067078 (Jg (Var (Global 1)) (Con 200) (Branch F (Dloc 067094)));
  Let b1 = M[008819];
  Let b2 = M[008820];
  if (GreaterThan(MakeHiLo(b1,b2),200)) {
    TraceOperation 067082 (Print "Adventurer");
    GamePrint "Adventurer";
    TraceOperation 067091 (Jump 067167);
    Jump: 067167
  } else {
    Jump: 067094
  }
LocOp 067094:
  TraceOperation 067094 (Jg (Var (Global 1)) (Con 100) (Branch F (Dloc 067116)));
  Let b1 = M[008819];
  Let b2 = M[008820];
  if (GreaterThan(MakeHiLo(b1,b2),100)) {
    TraceOperation 067098 (Print "Junior Adventurer");
    GamePrint "Junior Adventurer";
    TraceOperation 067113 (Jump 067167);
    Jump: 067167
  } else {
    Jump: 067116
  }
LocOp 067116:
  TraceOperation 067116 (Jg (Var (Global 1)) (Con 50) (Branch F (Dloc 067138)));
  Let b1 = M[008819];
  Let b2 = M[008820];
  if (GreaterThan(MakeHiLo(b1,b2),50)) {
    TraceOperation 067120 (Print "Novice Adventurer");
    GamePrint "Novice Adventurer";
    TraceOperation 067135 (Jump 067167);
    Jump: 067167
  } else {
    Jump: 067138
  }
LocOp 067138:
  TraceOperation 067138 (Jg (Var (Global 1)) (Con 25) (Branch F (Dloc 067160)));
  Let b1 = M[008819];
  Let b2 = M[008820];
  if (GreaterThan(MakeHiLo(b1,b2),25)) {
    TraceOperation 067142 (Print "Amateur Adventurer");
    GamePrint "Amateur Adventurer";
    TraceOperation 067157 (Jump 067167);
    Jump: 067167
  } else {
    Jump: 067160
  }
LocOp 067160:
  TraceOperation 067160 (Print "Beginner");
  GamePrint "Beginner";
  Jump: 067167
LocOp 067167:
  TraceOperation 067167 (Print ".");
  GamePrint ".";
  TraceOperation 067170 New_line;
  GamePrint "\n";
  TraceOperation 067171 (Ret (Var (Global 1)));
  Let b1 = M[008819];
  Let b2 = M[008820];
  PopFrame return_address_3;
  JumpReturn: return_address_3, result: MakeHiLo(b1,b2)
--[490]--------------------------------------------------
LocRoutine 067174:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 067179
LocOp 067179:
  TraceOperation 067179 (Jz (Var (Global 62)) (Branch T (Dloc 067290)));
  Let b1 = M[008941];
  Let b2 = M[008942];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 067290
  } else {
    TraceOperation 067183 (Print "\nIt takes a talented person to be killed while already dead. YOU are such a talent. Unfortunately, it takes a talented person to deal with it. I am not such a talent. Sorry.");
    GamePrint "\nIt takes a talented person to be killed while already dead. YOU are such a talent. Unfortunately, it takes a talented person to deal with it. I am not such a talent. Sorry.";
    TraceOperation 067284 New_line;
    GamePrint "\n";
    TraceOperation 067285 (Call (Floc 037076) [] Sp);
    PushFrame 067285;
    JumpCall: 037076, #actuals: 0
  }
LocReturn 067285:
  PushStack call_result;
  Jump: 067290
LocOp 067290:
  TraceOperation 067290 (Print_paddr (Var (Local 1)));
  GamePrint GetText(PackedAddress Z3(GetLocal(1)));
  TraceOperation 067292 New_line;
  GamePrint "\n";
  TraceOperation 067293 (Jz (Var (Global 60)) (Branch F (Dloc 067310)));
  Let b1 = M[008937];
  Let b2 = M[008938];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 067296 (Print "Bad luck, huh?");
    GamePrint "Bad luck, huh?";
    TraceOperation 067309 New_line;
    GamePrint "\n";
    Jump: 067310
  } else {
    Jump: 067310
  }
LocOp 067310:
  TraceOperation 067310 (Call (Floc 036962) [Con -10] Sp);
  PushFrame 067310;
  SetLocal 1 -10;
  JumpCall: 036962, #actuals: 1
LocReturn 067310:
  PushStack call_result;
  TraceOperation 067317 (Print " \n   ****  You have died  **** \n\n");
  GamePrint " \n   ****  You have died  **** \n\n";
  TraceOperation 067356 (Get_parent (Var (Global 111)) Sp);
  Let b1 = M[009039];
  Let b2 = M[009040];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),4)];
  PushStack Widen(b3);
  TraceOperation 067359 (Test_attr (Var Sp) (Con 27) (Branch F (Dloc 067366)));
  PopStack popped4;
  Let b5 = M[Offset(Offset(000741,Mul(popped4,9)),3)];
  if (TestBit(b5,4)) {
    TraceOperation 067363 (Insert_obj (Var (Global 111)) (Var (Global 0)));
    Let b6 = M[009039];
    Let b7 = M[009040];
    Let b8 = M[008817];
    Let b9 = M[008818];
    Let b10 = M[Offset(Offset(000741,Mul(MakeHiLo(b6,b7),9)),4)];
    if (IsZero(Widen(b10))) {
      SetByte Offset(Offset(000741,Mul(MakeHiLo(b6,b7),9)),4) b9;
      Let b11 = M[Offset(Offset(000741,Mul(MakeHiLo(b8,b9),9)),6)];
      SetByte Offset(Offset(000741,Mul(MakeHiLo(b6,b7),9)),5) LoByte(Widen(b11));
      SetByte Offset(Offset(000741,Mul(MakeHiLo(b8,b9),9)),6) b7;
      Jump: 067366
    } else {
      Let b12 = M[Offset(Offset(000741,Mul(Widen(b10),9)),6)];
      if (Equal(Widen(b12),MakeHiLo(b6,b7))) {
        Let b13 = M[Offset(Offset(000741,Mul(MakeHiLo(b6,b7),9)),5)];
        SetByte Offset(Offset(000741,Mul(Widen(b10),9)),6) LoByte(Widen(b13));
        SetByte Offset(Offset(000741,Mul(MakeHiLo(b6,b7),9)),4) b9;
        Let b14 = M[Offset(Offset(000741,Mul(MakeHiLo(b8,b9),9)),6)];
        SetByte Offset(Offset(000741,Mul(MakeHiLo(b6,b7),9)),5) LoByte(Widen(b14));
        SetByte Offset(Offset(000741,Mul(MakeHiLo(b8,b9),9)),6) b7;
        Jump: 067366
      } else {
        Error: unlink/loop
      }
    }
  } else {
    Jump: 067366
  }
LocOp 067366:
  TraceOperation 067366 (Jl (Var (Global 61)) (Con 2) (Branch T (Dloc 067511)));
  Let b1 = M[008939];
  Let b2 = M[008940];
  if (LessThan(MakeHiLo(b1,b2),2)) {
    Jump: 067511
  } else {
    TraceOperation 067371 (Print "You clearly are a suicidal maniac. We don't allow psychotics in the cave, since they may harm other adventurers. Your remains will be installed in the Land of the Living Dead, where your fellow adventurers may gloat over them.");
    GamePrint "You clearly are a suicidal maniac. We don't allow psychotics in the cave, since they may harm other adventurers. Your remains will be installed in the Land of the Living Dead, where your fellow adventurers may gloat over them.";
    TraceOperation 067504 New_line;
    GamePrint "\n";
    TraceOperation 067505 (Call (Floc 037076) [] Sp);
    PushFrame 067505;
    JumpCall: 037076, #actuals: 0
  }
LocReturn 067505:
  PushStack call_result;
  TraceOperation 067510 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 067511:
  TraceOperation 067511 (Inc (Con 77));
  Let b1 = M[008939];
  Let b2 = M[008940];
  SetByte 008939 HiByte(Add(MakeHiLo(b1,b2),1));
  SetByte 008940 LoByte(Add(MakeHiLo(b1,b2),1));
  TraceOperation 067513 (Insert_obj (Var (Global 111)) (Var (Global 0)));
  Let b3 = M[009039];
  Let b4 = M[009040];
  Let b5 = M[008817];
  Let b6 = M[008818];
  Let b7 = M[Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),4)];
  if (IsZero(Widen(b7))) {
    SetByte Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),4) b6;
    Let b8 = M[Offset(Offset(000741,Mul(MakeHiLo(b5,b6),9)),6)];
    SetByte Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),5) LoByte(Widen(b8));
    SetByte Offset(Offset(000741,Mul(MakeHiLo(b5,b6),9)),6) b4;
    TraceOperation 067516 (Test_attr (Con 212) (Con 3) (Branch F (Dloc 067713)));
    Let b9 = M[002649];
    if (TestBit(b9,4)) {
      TraceOperation 067521 (Print "As you take your last breath, you feel relieved of your burdens. The feeling passes as you find yourself before the gates of Hell, where the spirits jeer at you and deny you entry. Your senses are disturbed. The objects in the dungeon appear indistinct, bleached of color, even unreal.");
      GamePrint "As you take your last breath, you feel relieved of your burdens. The feeling passes as you find yourself before the gates of Hell, where the spirits jeer at you and deny you entry. Your senses are disturbed. The objects in the dungeon appear indistinct, bleached of color, even unreal.";
      TraceOperation 067684 New_line;
      GamePrint "\n";
      TraceOperation 067685 New_line;
      GamePrint "\n";
      TraceOperation 067686 (Store (Con 78) (Con 1));
      SetByte 008941 0;
      SetByte 008942 1;
      TraceOperation 067689 (Store (Con 157) (Con 1));
      SetByte 009099 0;
      SetByte 009100 1;
      TraceOperation 067692 (Store (Con 137) (Con 1));
      SetByte 009059 0;
      SetByte 009060 1;
      TraceOperation 067695 (Store (Con 88) (Con 1));
      SetByte 008961 0;
      SetByte 008962 1;
      TraceOperation 067698 (Put_prop (Var (Global 111)) (Con 17) (Con 31445));
      Let b10 = M[009039];
      Let b11 = M[009040];
      Let b12 = M[Offset(Offset(000741,Mul(MakeHiLo(b10,b11),9)),7)];
      Let b13 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b10,b11),9)),7),1)];
      Let b14 = M[Address(MakeHiLo(b12,b13))];
      Error: getPropsA
    } else {
      Jump: 067713
    }
  } else {
    Let b15 = M[Offset(Offset(000741,Mul(Widen(b7),9)),6)];
    if (Equal(Widen(b15),MakeHiLo(b3,b4))) {
      Let b16 = M[Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),5)];
      SetByte Offset(Offset(000741,Mul(Widen(b7),9)),6) LoByte(Widen(b16));
      SetByte Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),4) b6;
      Let b17 = M[Offset(Offset(000741,Mul(MakeHiLo(b5,b6),9)),6)];
      SetByte Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),5) LoByte(Widen(b17));
      SetByte Offset(Offset(000741,Mul(MakeHiLo(b5,b6),9)),6) b4;
      TraceOperation 067516 (Test_attr (Con 212) (Con 3) (Branch F (Dloc 067713)));
      Let b18 = M[002649];
      if (TestBit(b18,4)) {
        TraceOperation 067521 (Print "As you take your last breath, you feel relieved of your burdens. The feeling passes as you find yourself before the gates of Hell, where the spirits jeer at you and deny you entry. Your senses are disturbed. The objects in the dungeon appear indistinct, bleached of color, even unreal.");
        GamePrint "As you take your last breath, you feel relieved of your burdens. The feeling passes as you find yourself before the gates of Hell, where the spirits jeer at you and deny you entry. Your senses are disturbed. The objects in the dungeon appear indistinct, bleached of color, even unreal.";
        TraceOperation 067684 New_line;
        GamePrint "\n";
        TraceOperation 067685 New_line;
        GamePrint "\n";
        TraceOperation 067686 (Store (Con 78) (Con 1));
        SetByte 008941 0;
        SetByte 008942 1;
        TraceOperation 067689 (Store (Con 157) (Con 1));
        SetByte 009099 0;
        SetByte 009100 1;
        TraceOperation 067692 (Store (Con 137) (Con 1));
        SetByte 009059 0;
        SetByte 009060 1;
        TraceOperation 067695 (Store (Con 88) (Con 1));
        SetByte 008961 0;
        SetByte 008962 1;
        TraceOperation 067698 (Put_prop (Var (Global 111)) (Con 17) (Con 31445));
        Let b19 = M[009039];
        Let b20 = M[009040];
        Let b21 = M[Offset(Offset(000741,Mul(MakeHiLo(b19,b20),9)),7)];
        Let b22 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b19,b20),9)),7),1)];
        Let b23 = M[Address(MakeHiLo(b21,b22))];
        Error: getPropsA
      } else {
        Jump: 067713
      }
    } else {
      Error: unlink/loop
    }
  }
LocReturn 067704:
  PushStack call_result;
  TraceOperation 067710 (Jump 067800);
  Jump: 067800
LocOp 067713:
  TraceOperation 067713 (Print "Now, let's take a look here... Well, you probably deserve another chance. I can't quite fix you up completely, but you can't have everything.");
  GamePrint "Now, let's take a look here... Well, you probably deserve another chance. I can't quite fix you up completely, but you can't have everything.";
  TraceOperation 067792 New_line;
  GamePrint "\n";
  TraceOperation 067793 New_line;
  GamePrint "\n";
  TraceOperation 067794 (Call (Floc 037558) [Con 78] Sp);
  PushFrame 067794;
  SetLocal 1 78;
  JumpCall: 037558, #actuals: 1
LocReturn 067794:
  PushStack call_result;
  Jump: 067800
LocOp 067800:
  TraceOperation 067800 (Clear_attr (Con 183) (Con 3));
  Let b1 = M[002388];
  SetByte 002388 ClearBit(b1,4);
  TraceOperation 067803 (Store (Con 124) (Con 0));
  SetByte 009033 0;
  SetByte 009034 0;
  TraceOperation 067806 (Call (Floc 067818) [] Sp);
  PushFrame 067806;
  JumpCall: 067818, #actuals: 0
LocReturn 067806:
  PushStack call_result;
  TraceOperation 067811 (Call (Floc 067922) [] Sp);
  PushFrame 067811;
  JumpCall: 067922, #actuals: 0
LocReturn 067811:
  PushStack call_result;
  TraceOperation 067816 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[491]--------------------------------------------------
LocRoutine 067818:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 067827
LocOp 067827:
  TraceOperation 067827 (Jin (Con 164) (Var (Global 111)) (Branch F (Dloc 067834)));
  Let b1 = M[009039];
  Let b2 = M[009040];
  Let b3 = M[002221];
  if (Equal(MakeHiLo(b1,b2),Widen(b3))) {
    TraceOperation 067831 (Insert_obj (Con 164) (Con 193));
    Let b4 = M[002221];
    if (IsZero(Widen(b4))) {
      SetByte 002221 193;
      Let b5 = M[002484];
      SetByte 002222 LoByte(Widen(b5));
      SetByte 002484 164;
      TraceOperation 067834 (Jin (Con 208) (Var (Global 111)) (Branch F (Dloc 067841)));
      Let b6 = M[009039];
      Let b7 = M[009040];
      Let b8 = M[002617];
      if (Equal(MakeHiLo(b6,b7),Widen(b8))) {
        TraceOperation 067838 (Insert_obj (Con 208) (Con 175));
        Let b9 = M[002617];
        if (IsZero(Widen(b9))) {
          SetByte 002617 175;
          Let b10 = M[002322];
          SetByte 002618 LoByte(Widen(b10));
          SetByte 002322 208;
          TraceOperation 067841 (Put_prop (Con 110) (Con 12) (Con 0));
          Let b11 = M[001738];
          Let b12 = M[001739];
          Let b13 = M[Address(MakeHiLo(b11,b12))];
          Error: getPropsA
        } else {
          Let b14 = M[Offset(Offset(000741,Mul(Widen(b9),9)),6)];
          if (Equal(Widen(b14),208)) {
            Let b15 = M[002618];
            SetByte Offset(Offset(000741,Mul(Widen(b9),9)),6) LoByte(Widen(b15));
            SetByte 002617 175;
            Let b16 = M[002322];
            SetByte 002618 LoByte(Widen(b16));
            SetByte 002322 208;
            TraceOperation 067841 (Put_prop (Con 110) (Con 12) (Con 0));
            Let b17 = M[001738];
            Let b18 = M[001739];
            Let b19 = M[Address(MakeHiLo(b17,b18))];
            Error: getPropsA
          } else {
            Error: unlink/loop
          }
        }
      } else {
        TraceOperation 067841 (Put_prop (Con 110) (Con 12) (Con 0));
        Let b20 = M[001738];
        Let b21 = M[001739];
        Let b22 = M[Address(MakeHiLo(b20,b21))];
        Error: getPropsA
      }
    } else {
      Let b23 = M[Offset(Offset(000741,Mul(Widen(b4),9)),6)];
      if (Equal(Widen(b23),164)) {
        Let b24 = M[002222];
        SetByte Offset(Offset(000741,Mul(Widen(b4),9)),6) LoByte(Widen(b24));
        SetByte 002221 193;
        Let b25 = M[002484];
        SetByte 002222 LoByte(Widen(b25));
        SetByte 002484 164;
        TraceOperation 067834 (Jin (Con 208) (Var (Global 111)) (Branch F (Dloc 067841)));
        Let b26 = M[009039];
        Let b27 = M[009040];
        Let b28 = M[002617];
        if (Equal(MakeHiLo(b26,b27),Widen(b28))) {
          TraceOperation 067838 (Insert_obj (Con 208) (Con 175));
          Let b29 = M[002617];
          if (IsZero(Widen(b29))) {
            SetByte 002617 175;
            Let b30 = M[002322];
            SetByte 002618 LoByte(Widen(b30));
            SetByte 002322 208;
            TraceOperation 067841 (Put_prop (Con 110) (Con 12) (Con 0));
            Let b31 = M[001738];
            Let b32 = M[001739];
            Let b33 = M[Address(MakeHiLo(b31,b32))];
            Error: getPropsA
          } else {
            Let b34 = M[Offset(Offset(000741,Mul(Widen(b29),9)),6)];
            if (Equal(Widen(b34),208)) {
              Let b35 = M[002618];
              SetByte Offset(Offset(000741,Mul(Widen(b29),9)),6) LoByte(Widen(b35));
              SetByte 002617 175;
              Let b36 = M[002322];
              SetByte 002618 LoByte(Widen(b36));
              SetByte 002322 208;
              TraceOperation 067841 (Put_prop (Con 110) (Con 12) (Con 0));
              Let b37 = M[001738];
              Let b38 = M[001739];
              Let b39 = M[Address(MakeHiLo(b37,b38))];
              Error: getPropsA
            } else {
              Error: unlink/loop
            }
          }
        } else {
          TraceOperation 067841 (Put_prop (Con 110) (Con 12) (Con 0));
          Let b40 = M[001738];
          Let b41 = M[001739];
          Let b42 = M[Address(MakeHiLo(b40,b41))];
          Error: getPropsA
        }
      } else {
        Error: unlink/loop
      }
    }
  } else {
    TraceOperation 067834 (Jin (Con 208) (Var (Global 111)) (Branch F (Dloc 067841)));
    Let b43 = M[009039];
    Let b44 = M[009040];
    Let b45 = M[002617];
    if (Equal(MakeHiLo(b43,b44),Widen(b45))) {
      TraceOperation 067838 (Insert_obj (Con 208) (Con 175));
      Let b46 = M[002617];
      if (IsZero(Widen(b46))) {
        SetByte 002617 175;
        Let b47 = M[002322];
        SetByte 002618 LoByte(Widen(b47));
        SetByte 002322 208;
        TraceOperation 067841 (Put_prop (Con 110) (Con 12) (Con 0));
        Let b48 = M[001738];
        Let b49 = M[001739];
        Let b50 = M[Address(MakeHiLo(b48,b49))];
        Error: getPropsA
      } else {
        Let b51 = M[Offset(Offset(000741,Mul(Widen(b46),9)),6)];
        if (Equal(Widen(b51),208)) {
          Let b52 = M[002618];
          SetByte Offset(Offset(000741,Mul(Widen(b46),9)),6) LoByte(Widen(b52));
          SetByte 002617 175;
          Let b53 = M[002322];
          SetByte 002618 LoByte(Widen(b53));
          SetByte 002322 208;
          TraceOperation 067841 (Put_prop (Con 110) (Con 12) (Con 0));
          Let b54 = M[001738];
          Let b55 = M[001739];
          Let b56 = M[Address(MakeHiLo(b54,b55))];
          Error: getPropsA
        } else {
          Error: unlink/loop
        }
      }
    } else {
      TraceOperation 067841 (Put_prop (Con 110) (Con 12) (Con 0));
      Let b57 = M[001738];
      Let b58 = M[001739];
      Let b59 = M[Address(MakeHiLo(b57,b58))];
      Error: getPropsA
    }
  }
LocOp 067854:
  TraceOperation 067854 (Store (Con 2) (Var (Local 3)));
  SetLocal 2 GetLocal(3);
  TraceOperation 067857 (Jz (Var (Local 2)) (Branch T Dtrue));
  if (IsZero(GetLocal(2))) {
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 1
  } else {
    TraceOperation 067860 (Get_sibling (Var (Local 2)) (Local 3) (Branch T (Dloc 067864)));
    Let b2 = M[Offset(Offset(000741,Mul(GetLocal(2),9)),5)];
    SetLocal 3 Widen(b2);
    if (IsZero(Widen(b2))) {
      TraceOperation 067864 (Get_prop (Var (Local 2)) (Con 12) Sp);
      Let b3 = M[Offset(Offset(000741,Mul(GetLocal(2),9)),7)];
      Let b4 = M[Offset(Offset(Offset(000741,Mul(GetLocal(2),9)),7),1)];
      Let b5 = M[Address(MakeHiLo(b3,b4))];
      Error: getPropsA
    } else {
      TraceOperation 067864 (Get_prop (Var (Local 2)) (Con 12) Sp);
      Let b6 = M[Offset(Offset(000741,Mul(GetLocal(2),9)),7)];
      Let b7 = M[Offset(Offset(Offset(000741,Mul(GetLocal(2),9)),7),1)];
      Let b8 = M[Address(MakeHiLo(b6,b7))];
      Error: getPropsA
    }
  }
LocOp 067872:
  TraceOperation 067872 (Jz (Var (Local 1)) (Branch F (Dloc 067879)));
  if (IsZero(GetLocal(1))) {
    TraceOperation 067875 (Get_child (Con 82) (Local 1) (Branch T (Dloc 067879)));
    Let b1 = M[001485];
    SetLocal 1 Widen(b1);
    if (IsZero(Widen(b1))) {
      Jump: 067879
    } else {
      Jump: 067879
    }
  } else {
    Jump: 067879
  }
LocOp 067879:
  TraceOperation 067879 (Test_attr (Var (Local 1)) (Con 6) (Branch F (Dloc 067901)));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),0)];
  if (TestBit(b1,1)) {
    TraceOperation 067883 (Test_attr (Var (Local 1)) (Con 20) (Branch T (Dloc 067901)));
    Let b2 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),2)];
    if (TestBit(b2,3)) {
      Jump: 067901
    } else {
      TraceOperation 067887 (Random (Con 100) Sp);
      LetRandom random3 100;
      PushStack random3;
      TraceOperation 067891 (Jg (Con 50) (Var Sp) (Branch F (Dloc 067901)));
      PopStack popped4;
      if (GreaterThan(50,popped4)) {
        TraceOperation 067895 (Insert_obj (Var (Local 2)) (Var (Local 1)));
        Let b5 = M[Offset(Offset(000741,Mul(GetLocal(2),9)),4)];
        if (IsZero(Widen(b5))) {
          SetByte Offset(Offset(000741,Mul(GetLocal(2),9)),4) LoByte(GetLocal(1));
          Let b6 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),6)];
          SetByte Offset(Offset(000741,Mul(GetLocal(2),9)),5) LoByte(Widen(b6));
          SetByte Offset(Offset(000741,Mul(GetLocal(1),9)),6) LoByte(GetLocal(2));
          TraceOperation 067898 (Jump 067854);
          Jump: 067854
        } else {
          Let b7 = M[Offset(Offset(000741,Mul(Widen(b5),9)),6)];
          if (Equal(Widen(b7),GetLocal(2))) {
            Let b8 = M[Offset(Offset(000741,Mul(GetLocal(2),9)),5)];
            SetByte Offset(Offset(000741,Mul(Widen(b5),9)),6) LoByte(Widen(b8));
            SetByte Offset(Offset(000741,Mul(GetLocal(2),9)),4) LoByte(GetLocal(1));
            Let b9 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),6)];
            SetByte Offset(Offset(000741,Mul(GetLocal(2),9)),5) LoByte(Widen(b9));
            SetByte Offset(Offset(000741,Mul(GetLocal(1),9)),6) LoByte(GetLocal(2));
            TraceOperation 067898 (Jump 067854);
            Jump: 067854
          } else {
            Error: unlink/loop
          }
        }
      } else {
        Jump: 067901
      }
    }
  } else {
    Jump: 067901
  }
LocOp 067901:
  TraceOperation 067901 (Get_sibling (Var (Local 1)) (Local 1) (Branch T (Dloc 067905)));
  Let b1 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),5)];
  SetLocal 1 Widen(b1);
  if (IsZero(Widen(b1))) {
    TraceOperation 067905 (Jump 067872);
    Jump: 067872
  } else {
    TraceOperation 067905 (Jump 067872);
    Jump: 067872
  }
LocOp 067908:
  TraceOperation 067908 (Random (Var (Local 4)) Sp);
  LetRandom random1 GetLocal(4);
  PushStack random1;
  TraceOperation 067912 (Loadw (Var (Global 135)) (Var Sp) Sp);
  Let b2 = M[009087];
  Let b3 = M[009088];
  PopStack popped4;
  Let b5 = M[Offset(Address(MakeHiLo(b2,b3)),Mul(2,popped4))];
  Let b6 = M[Offset(Offset(Address(MakeHiLo(b2,b3)),Mul(2,popped4)),1)];
  PushStack MakeHiLo(b5,b6);
  TraceOperation 067916 (Insert_obj (Var (Local 2)) (Var Sp));
  PopStack popped7;
  Let b8 = M[Offset(Offset(000741,Mul(GetLocal(2),9)),4)];
  if (IsZero(Widen(b8))) {
    SetByte Offset(Offset(000741,Mul(GetLocal(2),9)),4) LoByte(popped7);
    Let b9 = M[Offset(Offset(000741,Mul(popped7,9)),6)];
    SetByte Offset(Offset(000741,Mul(GetLocal(2),9)),5) LoByte(Widen(b9));
    SetByte Offset(Offset(000741,Mul(popped7,9)),6) LoByte(GetLocal(2));
    TraceOperation 067919 (Jump 067854);
    Jump: 067854
  } else {
    Let b10 = M[Offset(Offset(000741,Mul(Widen(b8),9)),6)];
    if (Equal(Widen(b10),GetLocal(2))) {
      Let b11 = M[Offset(Offset(000741,Mul(GetLocal(2),9)),5)];
      SetByte Offset(Offset(000741,Mul(Widen(b8),9)),6) LoByte(Widen(b11));
      SetByte Offset(Offset(000741,Mul(GetLocal(2),9)),4) LoByte(popped7);
      Let b12 = M[Offset(Offset(000741,Mul(popped7,9)),6)];
      SetByte Offset(Offset(000741,Mul(GetLocal(2),9)),5) LoByte(Widen(b12));
      SetByte Offset(Offset(000741,Mul(popped7,9)),6) LoByte(GetLocal(2));
      TraceOperation 067919 (Jump 067854);
      Jump: 067854
    } else {
      Error: unlink/loop
    }
  }
--[492]--------------------------------------------------
LocRoutine 067922:
  MakeRoutineFrame 0;
  Jump: 067923
LocOp 067923:
  TraceOperation 067923 (Call (Floc 021638) [Con 23614] Sp);
  PushFrame 067923;
  SetLocal 1 23614;
  JumpCall: 021638, #actuals: 1
LocReturn 067923:
  PushStack call_result;
  TraceOperation 067930 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 067935 (Call (Floc 021638) [Con 23661] Sp);
  PushFrame 067935;
  SetLocal 1 23661;
  JumpCall: 021638, #actuals: 1
LocReturn 067935:
  PushStack call_result;
  TraceOperation 067942 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 067947 (Call (Floc 021638) [Con 25759] Sp);
  PushFrame 067947;
  SetLocal 1 25759;
  JumpCall: 021638, #actuals: 1
LocReturn 067947:
  PushStack call_result;
  TraceOperation 067954 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 067959 (Call (Floc 021638) [Con 28501] Sp);
  PushFrame 067959;
  SetLocal 1 28501;
  JumpCall: 021638, #actuals: 1
LocReturn 067959:
  PushStack call_result;
  TraceOperation 067966 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 067971 (Call (Floc 021638) [Con 28522] Sp);
  PushFrame 067971;
  SetLocal 1 28522;
  JumpCall: 021638, #actuals: 1
LocReturn 067971:
  PushStack call_result;
  TraceOperation 067978 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 067983 (Call (Floc 021638) [Con -32644] Sp);
  PushFrame 067983;
  SetLocal 1 -32644;
  JumpCall: 021638, #actuals: 1
LocReturn 067983:
  PushStack call_result;
  TraceOperation 067990 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 067995 (Call (Floc 021638) [Con 31060] Sp);
  PushFrame 067995;
  SetLocal 1 31060;
  JumpCall: 021638, #actuals: 1
LocReturn 067995:
  PushStack call_result;
  TraceOperation 068002 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 068007 (Call (Floc 021638) [Con 28486] Sp);
  PushFrame 068007;
  SetLocal 1 28486;
  JumpCall: 021638, #actuals: 1
LocReturn 068007:
  PushStack call_result;
  TraceOperation 068014 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 068019 (Clear_attr (Con 155) (Con 20));
  Let b2 = M[002138];
  SetByte 002138 ClearBit(b2,3);
  TraceOperation 068022 Rtrue;
  PopFrame return_address_3;
  JumpReturn: return_address_3, result: 1
--[493]--------------------------------------------------
LocRoutine 068024:
  MakeRoutineFrame 0;
  Jump: 068025
LocOp 068025:
  TraceOperation 068025 (Call (Floc 068044) [Con 165,Con -23102] Sp);
  PushFrame 068025;
  SetLocal 1 165;
  SetLocal 2 -23102;
  JumpCall: 068044, #actuals: 2
LocReturn 068025:
  PushStack call_result;
  TraceOperation 068033 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[494]--------------------------------------------------
LocRoutine 068034:
  MakeRoutineFrame 0;
  Jump: 068035
LocOp 068035:
  TraceOperation 068035 (Call (Floc 068044) [Con 101,Con -23100] Sp);
  PushFrame 068035;
  SetLocal 1 101;
  SetLocal 2 -23100;
  JumpCall: 068044, #actuals: 2
LocReturn 068035:
  PushStack call_result;
  TraceOperation 068043 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[495]--------------------------------------------------
LocRoutine 068044:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 068049
LocOp 068049:
  TraceOperation 068049 (Je [Var (Global 120),Con 35,Con 43] (Branch F (Dloc 068091)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (LogOr(Equal(MakeHiLo(b1,b2),35),Equal(MakeHiLo(b1,b2),43))) {
    TraceOperation 068055 (Print "The ");
    GamePrint "The ";
    TraceOperation 068058 (Print_paddr (Var (Local 2)));
    GamePrint GetText(PackedAddress Z3(GetLocal(2)));
    TraceOperation 068060 (Print_ret " are safely inside; there's no need to do that.");
    GamePrint " are safely inside; there's no need to do that.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 068091
  }
LocOp 068091:
  TraceOperation 068091 (Je [Var (Global 120),Con 56,Con 57] (Branch F (Dloc 068115)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (LogOr(Equal(MakeHiLo(b1,b2),56),Equal(MakeHiLo(b1,b2),57))) {
    TraceOperation 068097 (Print "There are lots of ");
    GamePrint "There are lots of ";
    TraceOperation 068106 (Print_paddr (Var (Local 2)));
    GamePrint GetText(PackedAddress Z3(GetLocal(2)));
    TraceOperation 068108 (Print_ret " in there.");
    GamePrint " in there.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 068115
  }
LocOp 068115:
  TraceOperation 068115 (Je [Var (Global 120),Con 18] (Branch F Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),18)) {
    TraceOperation 068119 (Je [Var (Global 119),Var (Local 1)] (Branch F Dfalse));
    Let b3 = M[009055];
    Let b4 = M[009056];
    if (Equal(MakeHiLo(b3,b4),GetLocal(1))) {
      TraceOperation 068123 (Print "Don't be silly. It wouldn't be a ");
      GamePrint "Don't be silly. It wouldn't be a ";
      TraceOperation 068146 (Print_obj (Var (Local 1)));
      Let b5 = M[Offset(Offset(000741,Mul(GetLocal(1),9)),7)];
      Let b6 = M[Offset(Offset(Offset(000741,Mul(GetLocal(1),9)),7),1)];
      Let b7 = M[Address(MakeHiLo(b5,b6))];
      if (IsZeroByte(b7)) {
        GamePrint "";
        TraceOperation 068148 (Print_ret " anymore.");
        GamePrint " anymore.\n";
        PopFrame return_address_8;
        JumpReturn: return_address_8, result: 1
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b5,b6)),1));
        TraceOperation 068148 (Print_ret " anymore.");
        GamePrint " anymore.\n";
        PopFrame return_address_9;
        JumpReturn: return_address_9, result: 1
      }
    } else {
      PopFrame return_address_10;
      JumpReturn: return_address_10, result: 0
    }
  } else {
    PopFrame return_address_11;
    JumpReturn: return_address_11, result: 0
  }
--[496]--------------------------------------------------
LocRoutine 068158:
  MakeRoutineFrame 0;
  Jump: 068159
LocOp 068159:
  TraceOperation 068159 (Je [Var (Global 120),Con 57,Con 35,Con 43] (Branch F (Dloc 068175)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),57),Equal(MakeHiLo(b1,b2),35)),Equal(MakeHiLo(b1,b2),43))) {
    TraceOperation 068166 (Print_ret "You can't do that.");
    GamePrint "You can't do that.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 068175
  }
LocOp 068175:
  TraceOperation 068175 (Je [Var (Global 120),Con 56] (Branch F Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),56)) {
    TraceOperation 068179 (Print "It looks pretty much like a ");
    GamePrint "It looks pretty much like a ";
    TraceOperation 068198 (Print_obj (Var (Global 118)));
    Let b3 = M[009053];
    Let b4 = M[009054];
    Let b5 = M[Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),7)];
    Let b6 = M[Offset(Offset(Offset(000741,Mul(MakeHiLo(b3,b4),9)),7),1)];
    Let b7 = M[Address(MakeHiLo(b5,b6))];
    if (IsZeroByte(b7)) {
      GamePrint "";
      TraceOperation 068200 (Print_ret ".");
      GamePrint ".\n";
      PopFrame return_address_8;
      JumpReturn: return_address_8, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b5,b6)),1));
      TraceOperation 068200 (Print_ret ".");
      GamePrint ".\n";
      PopFrame return_address_9;
      JumpReturn: return_address_9, result: 1
    }
  } else {
    PopFrame return_address_10;
    JumpReturn: return_address_10, result: 0
  }
--[497]--------------------------------------------------
LocRoutine 068204:
  MakeRoutineFrame 0;
  Jump: 068205
LocOp 068205:
  TraceOperation 068205 (Je [Var (Global 120),Con 51] (Branch F Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),51)) {
    TraceOperation 068209 (Call (Floc 030906) [Var (Global 118)] Sp);
    Let b3 = M[009053];
    Let b4 = M[009054];
    PushFrame 068209;
    SetLocal 1 MakeHiLo(b3,b4);
    JumpCall: 030906, #actuals: 1
  } else {
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 0
  }
LocReturn 068209:
  PushStack call_result;
  TraceOperation 068215 (Print_ret "What the heck! You won't make friends this way, but nobody around here is too friendly anyhow. Gulp!");
  GamePrint "What the heck! You won't make friends this way, but nobody around here is too friendly anyhow. Gulp!\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[498]--------------------------------------------------
LocRoutine 068274:
  MakeRoutineFrame 0;
  Jump: 068275
LocOp 068275:
  TraceOperation 068275 (Je [Var (Global 120),Con 88,Con 93] (Branch F (Dloc 068294)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (LogOr(Equal(MakeHiLo(b1,b2),88),Equal(MakeHiLo(b1,b2),93))) {
    TraceOperation 068281 (Print_ret "The chain is secure.");
    GamePrint "The chain is secure.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 068294
  }
LocOp 068294:
  TraceOperation 068294 (Je [Var (Global 120),Con 84,Con 105] (Branch F (Dloc 068325)));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (LogOr(Equal(MakeHiLo(b1,b2),84),Equal(MakeHiLo(b1,b2),105))) {
    TraceOperation 068300 (Print_ret "Perhaps you should do that to the basket.");
    GamePrint "Perhaps you should do that to the basket.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 068325
  }
LocOp 068325:
  TraceOperation 068325 (Je [Var (Global 120),Con 56] (Branch F Dfalse));
  Let b1 = M[009057];
  Let b2 = M[009058];
  if (Equal(MakeHiLo(b1,b2),56)) {
    TraceOperation 068329 (Print_ret "The chain secures a basket within the shaft.");
    GamePrint "The chain secures a basket within the shaft.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 0
  }
--[499]--------------------------------------------------
LocRoutine 068356:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 068359
LocOp 068359:
  TraceOperation 068359 (Je [Var (Local 1),Con 2] (Branch F Dfalse));
  if (Equal(GetLocal(1),2)) {
    TraceOperation 068363 (Jin (Con 217) (Var (Global 0)) (Branch F Dfalse));
    Let b1 = M[008817];
    Let b2 = M[008818];
    Let b3 = M[002698];
    if (Equal(MakeHiLo(b1,b2),Widen(b3))) {
      TraceOperation 068367 (Call (Floc 038192) [Con 217] Sp);
      PushFrame 068367;
      SetLocal 1 217;
      JumpCall: 038192, #actuals: 1
    } else {
      PopFrame return_address_4;
      JumpReturn: return_address_4, result: 0
    }
  } else {
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 0
  }
LocReturn 068367:
  PushStack call_result;
  TraceOperation 068373 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[500]--------------------------------------------------
LocRoutine 069526:
  MakeRoutineFrame 0;
  Jump: 069527
LocOp 069527:
  TraceOperation 069527 (Ret (Con 4356));
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 4356
--[501]--------------------------------------------------
LocRoutine 072742:
  MakeRoutineFrame 0;
  Jump: 072743
LocOp 072743:
  TraceOperation 072743 (Inc_chk (Con 34) (Var (Global 234)) (Branch F (Dloc 072755)));
  Let b1 = M[008853];
  Let b2 = M[008854];
  Let b3 = M[009285];
  Let b4 = M[009286];
  SetByte 008853 HiByte(Add(MakeHiLo(b1,b2),1));
  SetByte 008854 LoByte(Add(MakeHiLo(b1,b2),1));
  if (GreaterThanEqual(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 072747 Rfalse;
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 0
  } else {
    Jump: 072755
  }
--[502]--------------------------------------------------
LocRoutine 073160:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 99;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 16391;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 14121;
      }
    }
  }
  Jump: 073167
LocOp 073167:
  TraceOperation 073167 (Insert_obj (Var (Global 84)) (Con 199));
  Let b1 = M[008985];
  Let b2 = M[008986];
  Let b3 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),4)];
  if (IsZero(Widen(b3))) {
    SetByte Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),4) 199;
    Let b4 = M[002538];
    SetByte Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),5) LoByte(Widen(b4));
    SetByte 002538 b2;
    TraceOperation 073170 (Inc_chk (Var (Global 48)) (Con 10) (Branch F (Dloc 073212)));
    Let b5 = M[008913];
    Let b6 = M[008914];
    if (IsZeroByte(b6)) {
      PopStack popped7;
      PushStack Add(popped7,1);
      if (GreaterThanEqual(popped7,10)) {
        TraceOperation 073174 (Inc_chk (Var (Global 194)) (Con 29) (Branch T (Dloc 073195)));
        Let b8 = M[009205];
        Let b9 = M[009206];
        if (IsZeroByte(b9)) {
          PopStack popped10;
          PushStack Add(popped10,1);
          if (GreaterThanEqual(popped10,29)) {
            Jump: 073195
          } else {
            TraceOperation 073178 Rtrue;
            PopFrame return_address_11;
            JumpReturn: return_address_11, result: 1
          }
        } else {
          if (LessThanByte(b9,16)) {
            SetLocal b9 Add(GetLocal(b9),1);
            if (GreaterThanEqual(GetLocal(b9),29)) {
              Jump: 073195
            } else {
              TraceOperation 073178 Rtrue;
              PopFrame return_address_12;
              JumpReturn: return_address_12, result: 1
            }
          } else {
            Let b13 = M[Offset(008817,Mul(2,Widen(MinusByte(b9,16))))];
            Let b14 = M[Offset(Offset(008817,Mul(2,Widen(MinusByte(b9,16)))),1)];
            SetByte Offset(008817,Mul(2,Widen(MinusByte(b9,16)))) HiByte(Add(MakeHiLo(b13,b14),1));
            SetByte Offset(Offset(008817,Mul(2,Widen(MinusByte(b9,16)))),1) LoByte(Add(MakeHiLo(b13,b14),1));
            if (GreaterThanEqual(MakeHiLo(b13,b14),29)) {
              Jump: 073195
            } else {
              TraceOperation 073178 Rtrue;
              PopFrame return_address_15;
              JumpReturn: return_address_15, result: 1
            }
          }
        }
      } else {
        Jump: 073212
      }
    } else {
      if (LessThanByte(b6,16)) {
        SetLocal b6 Add(GetLocal(b6),1);
        if (GreaterThanEqual(GetLocal(b6),10)) {
          TraceOperation 073174 (Inc_chk (Var (Global 194)) (Con 29) (Branch T (Dloc 073195)));
          Let b16 = M[009205];
          Let b17 = M[009206];
          if (IsZeroByte(b17)) {
            PopStack popped18;
            PushStack Add(popped18,1);
            if (GreaterThanEqual(popped18,29)) {
              Jump: 073195
            } else {
              TraceOperation 073178 Rtrue;
              PopFrame return_address_19;
              JumpReturn: return_address_19, result: 1
            }
          } else {
            if (LessThanByte(b17,16)) {
              SetLocal b17 Add(GetLocal(b17),1);
              if (GreaterThanEqual(GetLocal(b17),29)) {
                Jump: 073195
              } else {
                TraceOperation 073178 Rtrue;
                PopFrame return_address_20;
                JumpReturn: return_address_20, result: 1
              }
            } else {
              Let b21 = M[Offset(008817,Mul(2,Widen(MinusByte(b17,16))))];
              Let b22 = M[Offset(Offset(008817,Mul(2,Widen(MinusByte(b17,16)))),1)];
              SetByte Offset(008817,Mul(2,Widen(MinusByte(b17,16)))) HiByte(Add(MakeHiLo(b21,b22),1));
              SetByte Offset(Offset(008817,Mul(2,Widen(MinusByte(b17,16)))),1) LoByte(Add(MakeHiLo(b21,b22),1));
              if (GreaterThanEqual(MakeHiLo(b21,b22),29)) {
                Jump: 073195
              } else {
                TraceOperation 073178 Rtrue;
                PopFrame return_address_23;
                JumpReturn: return_address_23, result: 1
              }
            }
          }
        } else {
          Jump: 073212
        }
      } else {
        Let b24 = M[Offset(008817,Mul(2,Widen(MinusByte(b6,16))))];
        Let b25 = M[Offset(Offset(008817,Mul(2,Widen(MinusByte(b6,16)))),1)];
        SetByte Offset(008817,Mul(2,Widen(MinusByte(b6,16)))) HiByte(Add(MakeHiLo(b24,b25),1));
        SetByte Offset(Offset(008817,Mul(2,Widen(MinusByte(b6,16)))),1) LoByte(Add(MakeHiLo(b24,b25),1));
        if (GreaterThanEqual(MakeHiLo(b24,b25),10)) {
          TraceOperation 073174 (Inc_chk (Var (Global 194)) (Con 29) (Branch T (Dloc 073195)));
          Let b26 = M[009205];
          Let b27 = M[009206];
          if (IsZeroByte(b27)) {
            PopStack popped28;
            PushStack Add(popped28,1);
            if (GreaterThanEqual(popped28,29)) {
              Jump: 073195
            } else {
              TraceOperation 073178 Rtrue;
              PopFrame return_address_29;
              JumpReturn: return_address_29, result: 1
            }
          } else {
            if (LessThanByte(b27,16)) {
              SetLocal b27 Add(GetLocal(b27),1);
              if (GreaterThanEqual(GetLocal(b27),29)) {
                Jump: 073195
              } else {
                TraceOperation 073178 Rtrue;
                PopFrame return_address_30;
                JumpReturn: return_address_30, result: 1
              }
            } else {
              Let b31 = M[Offset(008817,Mul(2,Widen(MinusByte(b27,16))))];
              Let b32 = M[Offset(Offset(008817,Mul(2,Widen(MinusByte(b27,16)))),1)];
              SetByte Offset(008817,Mul(2,Widen(MinusByte(b27,16)))) HiByte(Add(MakeHiLo(b31,b32),1));
              SetByte Offset(Offset(008817,Mul(2,Widen(MinusByte(b27,16)))),1) LoByte(Add(MakeHiLo(b31,b32),1));
              if (GreaterThanEqual(MakeHiLo(b31,b32),29)) {
                Jump: 073195
              } else {
                TraceOperation 073178 Rtrue;
                PopFrame return_address_33;
                JumpReturn: return_address_33, result: 1
              }
            }
          }
        } else {
          Jump: 073212
        }
      }
    }
  } else {
    Let b34 = M[Offset(Offset(000741,Mul(Widen(b3),9)),6)];
    if (Equal(Widen(b34),MakeHiLo(b1,b2))) {
      Let b35 = M[Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),5)];
      SetByte Offset(Offset(000741,Mul(Widen(b3),9)),6) LoByte(Widen(b35));
      SetByte Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),4) 199;
      Let b36 = M[002538];
      SetByte Offset(Offset(000741,Mul(MakeHiLo(b1,b2),9)),5) LoByte(Widen(b36));
      SetByte 002538 b2;
      TraceOperation 073170 (Inc_chk (Var (Global 48)) (Con 10) (Branch F (Dloc 073212)));
      Let b37 = M[008913];
      Let b38 = M[008914];
      if (IsZeroByte(b38)) {
        PopStack popped39;
        PushStack Add(popped39,1);
        if (GreaterThanEqual(popped39,10)) {
          TraceOperation 073174 (Inc_chk (Var (Global 194)) (Con 29) (Branch T (Dloc 073195)));
          Let b40 = M[009205];
          Let b41 = M[009206];
          if (IsZeroByte(b41)) {
            PopStack popped42;
            PushStack Add(popped42,1);
            if (GreaterThanEqual(popped42,29)) {
              Jump: 073195
            } else {
              TraceOperation 073178 Rtrue;
              PopFrame return_address_43;
              JumpReturn: return_address_43, result: 1
            }
          } else {
            if (LessThanByte(b41,16)) {
              SetLocal b41 Add(GetLocal(b41),1);
              if (GreaterThanEqual(GetLocal(b41),29)) {
                Jump: 073195
              } else {
                TraceOperation 073178 Rtrue;
                PopFrame return_address_44;
                JumpReturn: return_address_44, result: 1
              }
            } else {
              Let b45 = M[Offset(008817,Mul(2,Widen(MinusByte(b41,16))))];
              Let b46 = M[Offset(Offset(008817,Mul(2,Widen(MinusByte(b41,16)))),1)];
              SetByte Offset(008817,Mul(2,Widen(MinusByte(b41,16)))) HiByte(Add(MakeHiLo(b45,b46),1));
              SetByte Offset(Offset(008817,Mul(2,Widen(MinusByte(b41,16)))),1) LoByte(Add(MakeHiLo(b45,b46),1));
              if (GreaterThanEqual(MakeHiLo(b45,b46),29)) {
                Jump: 073195
              } else {
                TraceOperation 073178 Rtrue;
                PopFrame return_address_47;
                JumpReturn: return_address_47, result: 1
              }
            }
          }
        } else {
          Jump: 073212
        }
      } else {
        if (LessThanByte(b38,16)) {
          SetLocal b38 Add(GetLocal(b38),1);
          if (GreaterThanEqual(GetLocal(b38),10)) {
            TraceOperation 073174 (Inc_chk (Var (Global 194)) (Con 29) (Branch T (Dloc 073195)));
            Let b48 = M[009205];
            Let b49 = M[009206];
            if (IsZeroByte(b49)) {
              PopStack popped50;
              PushStack Add(popped50,1);
              if (GreaterThanEqual(popped50,29)) {
                Jump: 073195
              } else {
                TraceOperation 073178 Rtrue;
                PopFrame return_address_51;
                JumpReturn: return_address_51, result: 1
              }
            } else {
              if (LessThanByte(b49,16)) {
                SetLocal b49 Add(GetLocal(b49),1);
                if (GreaterThanEqual(GetLocal(b49),29)) {
                  Jump: 073195
                } else {
                  TraceOperation 073178 Rtrue;
                  PopFrame return_address_52;
                  JumpReturn: return_address_52, result: 1
                }
              } else {
                Let b53 = M[Offset(008817,Mul(2,Widen(MinusByte(b49,16))))];
                Let b54 = M[Offset(Offset(008817,Mul(2,Widen(MinusByte(b49,16)))),1)];
                SetByte Offset(008817,Mul(2,Widen(MinusByte(b49,16)))) HiByte(Add(MakeHiLo(b53,b54),1));
                SetByte Offset(Offset(008817,Mul(2,Widen(MinusByte(b49,16)))),1) LoByte(Add(MakeHiLo(b53,b54),1));
                if (GreaterThanEqual(MakeHiLo(b53,b54),29)) {
                  Jump: 073195
                } else {
                  TraceOperation 073178 Rtrue;
                  PopFrame return_address_55;
                  JumpReturn: return_address_55, result: 1
                }
              }
            }
          } else {
            Jump: 073212
          }
        } else {
          Let b56 = M[Offset(008817,Mul(2,Widen(MinusByte(b38,16))))];
          Let b57 = M[Offset(Offset(008817,Mul(2,Widen(MinusByte(b38,16)))),1)];
          SetByte Offset(008817,Mul(2,Widen(MinusByte(b38,16)))) HiByte(Add(MakeHiLo(b56,b57),1));
          SetByte Offset(Offset(008817,Mul(2,Widen(MinusByte(b38,16)))),1) LoByte(Add(MakeHiLo(b56,b57),1));
          if (GreaterThanEqual(MakeHiLo(b56,b57),10)) {
            TraceOperation 073174 (Inc_chk (Var (Global 194)) (Con 29) (Branch T (Dloc 073195)));
            Let b58 = M[009205];
            Let b59 = M[009206];
            if (IsZeroByte(b59)) {
              PopStack popped60;
              PushStack Add(popped60,1);
              if (GreaterThanEqual(popped60,29)) {
                Jump: 073195
              } else {
                TraceOperation 073178 Rtrue;
                PopFrame return_address_61;
                JumpReturn: return_address_61, result: 1
              }
            } else {
              if (LessThanByte(b59,16)) {
                SetLocal b59 Add(GetLocal(b59),1);
                if (GreaterThanEqual(GetLocal(b59),29)) {
                  Jump: 073195
                } else {
                  TraceOperation 073178 Rtrue;
                  PopFrame return_address_62;
                  JumpReturn: return_address_62, result: 1
                }
              } else {
                Let b63 = M[Offset(008817,Mul(2,Widen(MinusByte(b59,16))))];
                Let b64 = M[Offset(Offset(008817,Mul(2,Widen(MinusByte(b59,16)))),1)];
                SetByte Offset(008817,Mul(2,Widen(MinusByte(b59,16)))) HiByte(Add(MakeHiLo(b63,b64),1));
                SetByte Offset(Offset(008817,Mul(2,Widen(MinusByte(b59,16)))),1) LoByte(Add(MakeHiLo(b63,b64),1));
                if (GreaterThanEqual(MakeHiLo(b63,b64),29)) {
                  Jump: 073195
                } else {
                  TraceOperation 073178 Rtrue;
                  PopFrame return_address_65;
                  JumpReturn: return_address_65, result: 1
                }
              }
            }
          } else {
            Jump: 073212
          }
        }
      }
    } else {
      Error: unlink/loop
    }
  }
--[503]--------------------------------------------------
LocRoutine 077350:
  MakeRoutineFrame 0;
  Jump: 077351
LocOp 077351:
  TraceOperation 077351 (Div (Con 6) (Var (Global 86)) (Global 14));
  Let b1 = M[008989];
  Let b2 = M[008990];
  SetByte 008845 HiByte(Div(6,MakeHiLo(b1,b2)));
  SetByte 008846 LoByte(Div(6,MakeHiLo(b1,b2)));
  TraceOperation 077355 (Ret (Con 40));
  PopFrame return_address_3;
  JumpReturn: return_address_3, result: 40
--[504]--------------------------------------------------
LocRoutine 077744:
  MakeRoutineFrame 0;
  Jump: 077745
LocOp 077745:
  TraceOperation 077745 (Ret (Con 17625));
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 17625
--[505]--------------------------------------------------
LocRoutine 079298:
  MakeRoutineFrame 0;
  Jump: 079299
LocOp 079299:
  TraceOperation 079299 (Jump 103178);
  Jump: 103178
--[506]--------------------------------------------------
LocRoutine 079400:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 -10164;
  }
  Jump: 079403
LocOp 079403:
  TraceOperation 079403 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[507]--------------------------------------------------
LocRoutine 079410:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 -21946;
  }
  Jump: 079413
LocOp 079413:
  TraceOperation 079413 (Ret (Var (Global 90)));
  Let b1 = M[008997];
  Let b2 = M[008998];
  PopFrame return_address_3;
  JumpReturn: return_address_3, result: MakeHiLo(b1,b2)
--[508]--------------------------------------------------
LocRoutine 080648:
  MakeRoutineFrame 0;
  Jump: 080649
LocOp 080649:
  TraceOperation 080649 Pop;
  Note "Pop";
  TraceOperation 080650 (Get_prop_addr (Con 82) (Con 72) (Global 28));
  Let b1 = M[001486];
  Let b2 = M[001487];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Error: getPropsA
--[509]--------------------------------------------------
LocRoutine 080698:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 8217;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 -29413;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 -28117;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 18018;
        }
      }
    }
  }
  Jump: 080707
LocOp 080707:
  TraceOperation 080707 (Load (Con 25817) (Global 25));
  Let b1 = M[009219];
  Let b2 = M[009220];
  SetByte 008867 b1;
  SetByte 008868 b2;
  TraceOperation 080711 (Inc_chk (Con 200) (Var (Global 149)) (Branch F (Dloc 081772)));
  Let b3 = M[009185];
  Let b4 = M[009186];
  Let b5 = M[009115];
  Let b6 = M[009116];
  SetByte 009185 HiByte(Add(MakeHiLo(b3,b4),1));
  SetByte 009186 LoByte(Add(MakeHiLo(b3,b4),1));
  if (GreaterThanEqual(MakeHiLo(b3,b4),MakeHiLo(b5,b6))) {
    TraceOperation 080716 (Dec_chk (Con 54) (Con 5) (Branch F (Dloc 080752)));
    Let b7 = M[008893];
    Let b8 = M[008894];
    if (LessThanEqual(MakeHiLo(b7,b8),5)) {
      SetByte 008893 HiByte(Sub(MakeHiLo(b7,b8),1));
      SetByte 008894 LoByte(Sub(MakeHiLo(b7,b8),1));
      TraceOperation 080720 (Inc_chk (Con 138) (Var (Global 87)) (Branch F (Dloc 076192)));
      Let b9 = M[009061];
      Let b10 = M[009062];
      Let b11 = M[008991];
      Let b12 = M[008992];
      SetByte 009061 HiByte(Add(MakeHiLo(b9,b10),1));
      SetByte 009062 LoByte(Add(MakeHiLo(b9,b10),1));
      if (GreaterThanEqual(MakeHiLo(b9,b10),MakeHiLo(b11,b12))) {
        TraceOperation 080725 (Jz (Con 19095) (Branch F (Dloc 074590)));
        Jump: 074590
      } else {
        Jump: 076192
      }
    } else {
      SetByte 008893 HiByte(Sub(MakeHiLo(b7,b8),1));
      SetByte 008894 LoByte(Sub(MakeHiLo(b7,b8),1));
      Jump: 080752
    }
  } else {
    Jump: 081772
  }
--[510]--------------------------------------------------
LocRoutine 081658:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 10553;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 11017;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 20992;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 22569;
        }
      }
    }
  }
  Jump: 081667
LocOp 081667:
  TraceOperation 081667 (Jump 096624);
  Jump: 096624
--[511]--------------------------------------------------
LocRoutine 081876:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 19076;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 16652;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 -10447;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 18484;
        }
      }
    }
  }
  Jump: 081885
LocOp 081885:
  TraceOperation 081885 (Inc_chk (Con 1) (Con 250) (Branch F (Dloc 081897)));
  SetLocal 1 Add(GetLocal(1),1);
  if (GreaterThanEqual(GetLocal(1),250)) {
    TraceOperation 081889 Ret_popped;
    PopStack popped1;
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: popped1
  } else {
    Jump: 081897
  }
--[512]--------------------------------------------------
LocRoutine 082204:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 20068;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 8969;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 -10140;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 7261;
        }
      }
    }
  }
  Jump: 082213
LocOp 082213:
  TraceOperation 082213 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[513]--------------------------------------------------
LocRoutine 083598:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 14162;
  }
  Jump: 083601
LocOp 083601:
  TraceOperation 083601 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
